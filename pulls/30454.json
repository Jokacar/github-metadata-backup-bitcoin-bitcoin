{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454",
    "id": 1971770528,
    "node_id": "PR_kwDOABII5851htSg",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30454",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30454.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30454.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
    "number": 30454,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "build: Introduce CMake-based build system",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR introduces a new CMake-based build system, which is a drop-in replacement for the current Autotools-based build system.\r\n\r\nML announcement: https://groups.google.com/g/bitcoindev/c/hgKkfQWzrTo\r\n\r\nAs discussed during the recent CoreDev meetup in April, the switch from Autotools to CMake is intended to happen as soon as possible after branching 28.x off, which means that 29.0 will be built using CMake.\r\n\r\nThis PR branch is essentially the [staging branch](https://github.com/hebasto/bitcoin/tree/cmake-staging), with every change reviewed and tested by a group of contributors, including (in alphabetical order):\r\n- [**achow101**](https://github.com/achow101)\r\n- [**fanquake**](https://github.com/fanquake)\r\n- [**maflcko**](https://github.com/maflcko)\r\n- [**m3dwards**](https://github.com/m3dwards)\r\n- [**pablomartin4btc**](https://github.com/pablomartin4btc)\r\n- [**real-or-random**](https://github.com/real-or-random)\r\n- [**ryanofsky**](https://github.com/ryanofsky)\r\n- [**sipsorcery**](https://github.com/sipsorcery)\r\n- [**TheCharlatan**](https://github.com/TheCharlatan)\r\n- [**theStack**](https://github.com/theStack)\r\n- [**theuni**](https://github.com/theuni)\r\n- [**vasild**](https://github.com/vasild)\r\n\r\nReviewing in a separate staging repo was suggested in https://github.com/bitcoin/bitcoin/pull/27060#issuecomment-1431798320.\r\n\r\nThe accompanying changes to the OSS-Fuzz project are available in https://github.com/hebasto/oss-fuzz/pull/8.\r\n\r\nPlease refer to the [build options parity table](https://gist.github.com/hebasto/2ef97d3a726bfce08ded9df07f7dab5e). The \"auto\" value is no longer available; non-default values must be specified explicitly. Additionally, the new default values have been chosen to suit the everyday build experience for the majority of developers.\r\n\r\nSystem requirements for using the CMake-based build system:\r\n- CMake >= 3.22 (if not available in your system's repository, it can be downloaded from https://cmake.org/download/)\r\n- a build tool of your choice:\r\n\t- any Make (GNU Make is no longer a requirement); GNU Make is still required to build depends\r\n\t- Ninja (https://ninja-build.org/)\r\n\t- MSBuild\r\n\t- Xcode\r\n\r\nA note for Windows users: The default installation of the latest version of MSVC 17.10.4 includes both CMake 3.28.3 and the vcpkg package manager).\r\n\r\n---\r\n\r\nWe, the build system developers, kindly ask reviewers to refrain from making suggestions that are not directly related to the migration process or can be implemented separately. Bugs in the scripts and errors in the updated documentation should be the focus of this PR. Please be advised that comments not aligned with this PR's goal may be ignored.\r\n\r\nThank you all for your understanding.",
    "labels": [
      {
        "id": 61889416,
        "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
        "name": "Build system",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      },
      {
        "id": 1947349437,
        "node_id": "MDU6TGFiZWwxOTQ3MzQ5NDM3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/DrahtBot%20Guix%20build%20requested",
        "name": "DrahtBot Guix build requested",
        "description": "",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/69",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/69",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/69/labels",
      "id": 11324346,
      "node_id": "MI_kwDOABII584ArMu6",
      "number": 69,
      "state": "open",
      "title": "29.0",
      "description": "",
      "creator": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 6,
      "closed_issues": 0,
      "created_at": "2024-07-17T08:47:56Z",
      "updated_at": "2024-08-15T14:03:38Z"
    },
    "created_at": "2024-07-16T14:55:55Z",
    "updated_at": "2024-08-16T06:13:03Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "8a7400bbf10f3632e39c2467fe061bcd5cda154a",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "hebasto:240716-cmake",
      "ref": "240716-cmake",
      "sha": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 143212778,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMyMTI3Nzg=",
        "name": "bitcoin",
        "full_name": "hebasto/bitcoin",
        "owner": {
          "login": "hebasto",
          "id": 32963518,
          "node_id": "MDQ6VXNlcjMyOTYzNTE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hebasto",
          "html_url": "https://github.com/hebasto",
          "followers_url": "https://api.github.com/users/hebasto/followers",
          "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
          "organizations_url": "https://api.github.com/users/hebasto/orgs",
          "repos_url": "https://api.github.com/users/hebasto/repos",
          "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hebasto/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/hebasto/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/hebasto/bitcoin",
        "archive_url": "https://api.github.com/repos/hebasto/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hebasto/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hebasto/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hebasto/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hebasto/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hebasto/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hebasto/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hebasto/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hebasto/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hebasto/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/hebasto/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/hebasto/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/hebasto/bitcoin/events",
        "forks_url": "https://api.github.com/repos/hebasto/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/hebasto/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hebasto/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hebasto/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hebasto/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/hebasto/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hebasto/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hebasto/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hebasto/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hebasto/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hebasto/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/hebasto/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/hebasto/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hebasto/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hebasto/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hebasto/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:hebasto/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/hebasto/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/hebasto/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hebasto/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/hebasto/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/hebasto/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/hebasto/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/hebasto/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hebasto/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/hebasto/bitcoin/hooks",
        "svn_url": "https://github.com/hebasto/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 4,
        "stargazers_count": 19,
        "watchers_count": 19,
        "size": 288618,
        "default_branch": "cmake-staging",
        "open_issues_count": 8,
        "is_template": false,
        "topics": [
          "bitcoin-core"
        ],
        "has_issues": true,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-15T20:39:52Z",
        "created_at": "2018-08-01T21:59:57Z",
        "updated_at": "2024-08-15T19:35:11Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "c2d15d993ef06d97d4c117012bda6efa3dcbac45",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36002,
        "stargazers_count": 77886,
        "watchers_count": 77886,
        "size": 265646,
        "default_branch": "master",
        "open_issues_count": 658,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-16T06:07:53Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-08-16T06:56:28Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 5797,
    "deletions": 455,
    "changed_files": 108,
    "commits": 68,
    "review_comments": 158,
    "comments": 36
  },
  "events": [
    {
      "event": "commented",
      "id": 2231129173,
      "node_id": "IC_kwDOABII586E_FRV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231129173",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T14:55:58Z",
      "updated_at": "2024-08-12T22:27:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30454).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [pablomartin4btc](https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2234121687) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30597](https://github.com/bitcoin/bitcoin/pull/30597) (doc: Drop no longer needed workaround for WSL by hebasto)\n* [#30527](https://github.com/bitcoin/bitcoin/pull/30527) (Bump python minimum supported version to 3.10 by maflcko)\n* [#30465](https://github.com/bitcoin/bitcoin/pull/30465) (depends: Set `CMAKE_SYSTEM_VERSION` for CMake builds by hebasto)\n* [#29881](https://github.com/bitcoin/bitcoin/pull/29881) (guix: use GCC 13 to builds releases by fanquake)\n* [#29868](https://github.com/bitcoin/bitcoin/pull/29868) (Reintroduce external signer support for Windows by hebasto)\n* [#25573](https://github.com/bitcoin/bitcoin/pull/25573) ([POC] guix: produce a fully `-static-pie` bitcoind by fanquake)\n* [#19461](https://github.com/bitcoin/bitcoin/pull/19461) (multiprocess: Add bitcoin-gui -ipcconnect option by ryanofsky)\n* [#19460](https://github.com/bitcoin/bitcoin/pull/19460) (multiprocess: Add bitcoin-wallet -ipcconnect option by ryanofsky)\n* [#10102](https://github.com/bitcoin/bitcoin/pull/10102) (Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2231129173",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "labeled",
      "id": 13522636397,
      "node_id": "LE_lADOABII586PurnmzwAAAAMmAw5t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13522636397",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T14:56:00Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 13522779532,
      "node_id": "LE_lADOABII586PurnmzwAAAAMmBT2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13522779532",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T15:05:28Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "unlabeled",
      "id": 13522780674,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAMmBUIC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13522780674",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T15:05:32Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "commented",
      "id": 2231166194,
      "node_id": "IC_kwDOABII586E_OTy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231166194",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T15:08:44Z",
      "updated_at": "2024-07-16T15:08:44Z",
      "author_association": "MEMBER",
      "body": "> The only differences from the staging branch are:\r\n\r\nI'd say the section can be removed (or moved to a separate comment), because when this will be merged, I presume many more differences will accumulate. Even looking at the outstanding ports (https://github.com/bitcoin/bitcoin/issues?q=label%3A%22Needs+CMake+port%22+is%3Aclosed) right now, there are some.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2231166194",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2231205319,
      "node_id": "IC_kwDOABII586E_X3H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231205319",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T15:18:15Z",
      "updated_at": "2024-07-16T15:18:15Z",
      "author_association": "MEMBER",
      "body": "> Please refer to the build options parity table.\r\n\r\nMissing link/reference?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2231205319",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2231220385,
      "node_id": "IC_kwDOABII586E_bih",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231220385",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T15:23:13Z",
      "updated_at": "2024-07-16T15:23:13Z",
      "author_association": "MEMBER",
      "body": "> > Please refer to the build options parity table.\r\n> \r\n> Missing link/reference?\r\n\r\nThanks! Added.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2231220385",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2180684965,
      "node_id": "PRR_kwDOABII586B-pyl",
      "url": null,
      "actor": null,
      "commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2180684965",
      "submitted_at": "2024-07-16T15:52:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2180746661,
      "node_id": "PRR_kwDOABII586B-42l",
      "url": null,
      "actor": null,
      "commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2180746661",
      "submitted_at": "2024-07-16T16:21:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2180748015,
      "node_id": "PRR_kwDOABII586B-5Lv",
      "url": null,
      "actor": null,
      "commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2180748015",
      "submitted_at": "2024-07-16T16:22:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "commented",
      "id": 2231754276,
      "node_id": "IC_kwDOABII586FBd4k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231754276",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T20:16:19Z",
      "updated_at": "2024-07-16T20:16:19Z",
      "author_association": "MEMBER",
      "body": "A couple of functional tests-related commits have been split to https://github.com/bitcoin/bitcoin/pull/30463, as suggested by @fanquake offline.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2231754276",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13526623986,
      "node_id": "MEE_lADOABII586PurnmzwAAAAMmP-by",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13526623986",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T20:16:20Z"
    },
    {
      "event": "subscribed",
      "id": 13526623994,
      "node_id": "SE_lADOABII586PurnmzwAAAAMmP-b6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13526623994",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T20:16:20Z"
    },
    {
      "event": "commented",
      "id": 2232743499,
      "node_id": "IC_kwDOABII586FFPZL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2232743499",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-17T08:32:56Z",
      "updated_at": "2024-07-17T08:32:56Z",
      "author_association": "MEMBER",
      "body": "> which means that 29.0 will be built using CMake.\r\n\r\nCould add the 29.0 milestone?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2232743499",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2182285671,
      "node_id": "PRR_kwDOABII586CEwln",
      "url": null,
      "actor": null,
      "commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2182285671",
      "submitted_at": "2024-07-17T08:39:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "milestoned",
      "id": 13533192406,
      "node_id": "MIE_lADOABII586PurnmzwAAAAMmpCDW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13533192406",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-17T08:48:25Z",
      "milestone": {
        "title": "29.0"
      }
    },
    {
      "event": "commented",
      "id": 2232775166,
      "node_id": "IC_kwDOABII586FFXH-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2232775166",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-17T08:48:38Z",
      "updated_at": "2024-07-17T08:48:38Z",
      "author_association": "MEMBER",
      "body": "> > which means that 29.0 will be built using CMake.\r\n> \r\n> Could add the 29.0 milestone?\r\n\r\nDone.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2232775166",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "referenced",
      "id": 13554503090,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMn6U2y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13554503090",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9c8b36eba6581ce10458b847cb3f3abd94a2e6a9",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c8b36eba6581ce10458b847cb3f3abd94a2e6a9",
      "created_at": "2024-07-18T11:59:36Z"
    },
    {
      "event": "labeled",
      "id": 13554873157,
      "node_id": "LE_lADOABII586PurnmzwAAAAMn7vNF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13554873157",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T12:30:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2236884983,
      "node_id": "IC_kwDOABII586FVCf3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2236884983",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T15:38:29Z",
      "updated_at": "2024-07-18T15:49:27Z",
      "author_association": "MEMBER",
      "body": "## Our plan for the next few weeks:\r\n\r\nThis PR has already pointed out some very helpful high-level issues.\r\n\r\nDuring today's working-group call, we agreed on the following plan:\r\n\r\nBecause we don't want to create too much noise (yet) in this PR, we're going to maintain the staging workflow for another ~two weeks. This means discussing and merging into @hebasto's repo, then occasionally syncing with the upstream PR. More specifically:\r\n\r\n### Goals for week 1:\r\n  - Upstream (and hopefully get merged) all outstanding issues/prerequisites pointed out by review so far (#30464, #30463, #30477, others?)\r\n  - Ensure that the staging branch [can be built successfully with autotools and cmake](https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1679842517) by reverting some CMake-specific changes that aren't strictly necessary for the port\r\n  - Try to make the staging branch contain no actual code/test changes (qt plugins as the exception), only build-system changes.\r\n  - Sync the upstream PR with staging when the above is complete\r\n  - Announce at next week's IRC meeting that this PR is ready for review/scrutiny\r\n\r\n### Goals for week 2:\r\n\r\nAt this point, reviewers may still point out more chunks that can be merged ahead-of-time, low-level complaints that require build-specific discussion, differences with autotools, and other boring details that aren't worth polluting the main PR. During week two we'll address this feedback on hebasto's staging repo to keep the discussion/PR noise out of the mainline PR. Hopefully this will be minor stuff. At the end of week two, we'll aim to sync the staging repo with this PR for the last time, EOL the staging repo, and have all remaining discussion/arguing here from that point on.\r\n\r\n### Plan for removing autotools:\r\n\r\nBecause it's useful to test Autotools/CMake on the same commit, we've decided _not_ to remove Autotools as part of the CMake PR. Additionally, it will be useful for posterity to have a point in time (even if only a single commit) where both were present, so that it's obvious what before/after behavior was intended.\r\n\r\nHowever, as maintaining both systems is not a goal, we intend to remove Autotools _directly_ after CMake's merge. There should be no expectation of it hanging around for more than a day or two.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2236884983",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13558452863,
      "node_id": "MEE_lADOABII586PurnmzwAAAAMoJZJ_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13558452863",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T15:38:31Z"
    },
    {
      "event": "subscribed",
      "id": 13558452886,
      "node_id": "SE_lADOABII586PurnmzwAAAAMoJZKW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13558452886",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T15:38:31Z"
    },
    {
      "event": "convert_to_draft",
      "id": 13558701268,
      "node_id": "CTDE_lADOABII586PurnmzwAAAAMoKVzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13558701268",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T15:56:44Z"
    },
    {
      "event": "referenced",
      "id": 13562476545,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMoYvgB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13562476545",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "945d5c6f2453f06e9892e21f120bd92d7bef1e97",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/945d5c6f2453f06e9892e21f120bd92d7bef1e97",
      "created_at": "2024-07-18T19:58:58Z"
    },
    {
      "event": "reviewed",
      "id": 2188923226,
      "node_id": "PRR_kwDOABII586CeFFa",
      "url": null,
      "actor": null,
      "commit_id": "4883197abc63aedbc395f37f6d2aded5db5270aa",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2188923226",
      "submitted_at": "2024-07-19T18:26:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2189569755,
      "node_id": "PRR_kwDOABII586Cgi7b",
      "url": null,
      "actor": null,
      "commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2189569755",
      "submitted_at": "2024-07-20T00:02:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "renamed",
      "id": 13588153434,
      "node_id": "RTE_lADOABII586PurnmzwAAAAMp6sRa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13588153434",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-20T07:14:25Z",
      "rename": {
        "from": "build: Introduce CMake-based buid system",
        "to": "build: Introduce CMake-based build system"
      }
    },
    {
      "event": "referenced",
      "id": 13589495347,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMp_z4z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13589495347",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "efeb39785aeee9130584b865d886c6b46e59f147",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efeb39785aeee9130584b865d886c6b46e59f147",
      "created_at": "2024-07-20T12:26:12Z"
    },
    {
      "event": "referenced",
      "id": 13589730677,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMqAtV1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13589730677",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8d573611575c3fa66f08407aa9b02f91b29a94c3",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d573611575c3fa66f08407aa9b02f91b29a94c3",
      "created_at": "2024-07-20T13:50:17Z"
    },
    {
      "event": "referenced",
      "id": 13599626196,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMqmdPU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13599626196",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3a29ff5deadc385b3be7ebecf73504fd9a2af20d",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a29ff5deadc385b3be7ebecf73504fd9a2af20d",
      "created_at": "2024-07-22T11:12:27Z"
    },
    {
      "event": "referenced",
      "id": 13603198044,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMq0FRc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13603198044",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ad996126d3e0ca25d4916eb5e862ca7948da8dc7",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/ad996126d3e0ca25d4916eb5e862ca7948da8dc7",
      "created_at": "2024-07-22T15:32:22Z"
    },
    {
      "event": "referenced",
      "id": 13604271533,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMq4LWt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13604271533",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b927a39c633b0a3513f07f7bcb17132db972fb49",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b927a39c633b0a3513f07f7bcb17132db972fb49",
      "created_at": "2024-07-22T16:59:51Z"
    },
    {
      "event": "referenced",
      "id": 13613444725,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMrbK51",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13613444725",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "77da79f7d2390bbbe7d90d6e6847babb141bba68",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/77da79f7d2390bbbe7d90d6e6847babb141bba68",
      "created_at": "2024-07-23T10:15:15Z"
    },
    {
      "event": "referenced",
      "id": 13621061612,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMr4Ofs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13621061612",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d3a10e6aedffa38b3f0d2de63bb925a97121ebf0",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/d3a10e6aedffa38b3f0d2de63bb925a97121ebf0",
      "created_at": "2024-07-23T20:16:58Z"
    },
    {
      "event": "referenced",
      "id": 13627860272,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMsSKUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13627860272",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7a59ed6910942811f55c2ec612c2b086c912b061",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/7a59ed6910942811f55c2ec612c2b086c912b061",
      "created_at": "2024-07-24T09:47:35Z"
    },
    {
      "event": "referenced",
      "id": 13628221145,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMsTibZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13628221145",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6d2391552149d8173ae25a6da0105882289fe9ad",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/6d2391552149d8173ae25a6da0105882289fe9ad",
      "created_at": "2024-07-24T10:14:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13630102829,
      "node_id": "HRFPE_lADOABII586PurnmzwAAAAMsat0t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13630102829",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-24T12:52:44Z"
    },
    {
      "event": "unlabeled",
      "id": 13630518767,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAMscTXv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13630518767",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-24T13:21:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2248232775,
      "node_id": "IC_kwDOABII586GAU9H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2248232775",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-24T14:56:27Z",
      "updated_at": "2024-07-24T15:13:43Z",
      "author_association": "MEMBER",
      "body": "Rebased. This PR branch is the current `cmake-staging` [branch](https://github.com/hebasto/bitcoin/commit/dc490dae00d66b8e7b07158d1fc7adf53b4cce43) with 2 top commits dropped.\r\n\r\nAlso some comments have been addressed.\r\n\r\nTasks from https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2236884983:\r\n- [x] Ensure that the staging branch [can be built successfully with autotools and cmake](https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1679842517) by reverting some CMake-specific changes that aren't strictly necessary for the port\r\n- [x] Try to make the staging branch contain no actual code/test changes (qt plugins as the exception), only build-system changes\r\n- [x] Sync the upstream PR with staging when the above is complete",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2248232775",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2198548041,
      "node_id": "PRR_kwDOABII586DCy5J",
      "url": null,
      "actor": null,
      "commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2198548041",
      "submitted_at": "2024-07-25T07:43:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "labeled",
      "id": 13643323800,
      "node_id": "LE_lADOABII586PurnmzwAAAAMtNJmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13643323800",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T10:04:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2250774928,
      "node_id": "IC_kwDOABII586GKBmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2250774928",
      "actor": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T15:55:03Z",
      "updated_at": "2024-07-25T15:55:03Z",
      "author_association": "NONE",
      "body": "Loaded this branch into CLion Nova (the latest C/C++ focused jetbrains IDE) and it was able to correctly load the project, and set up a Debug profile for 63 build targets with no additional configuration. Build and debugging seems to work out of the box (tested for bitcoin-cli and bitcoind). This is awesome!",
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2250774928",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2251018894,
      "node_id": "IC_kwDOABII586GK9KO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2251018894",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T17:18:01Z",
      "updated_at": "2024-07-25T17:18:34Z",
      "author_association": "MEMBER",
      "body": "Trying to build the benchmarks:\r\n* Is it expected that the default for `BUILD_BENCH` is `OFF`? (the default with autoconf is on)\r\n* If a specify something weird like `cmake -B build -DBUILD_BENCH=ab123`, I get as configure output `bench_bitcoin ....................... ab123` (and it builds the `bench` binary). I would expect an error when specifying anything but `OFF` or `ON` or equivalent.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2251018894",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2251037482,
      "node_id": "IC_kwDOABII586GLBsq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2251037482",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T17:28:44Z",
      "updated_at": "2024-07-25T17:28:44Z",
      "author_association": "MEMBER",
      "body": "> Is it expected that the default for `BUILD_BENCH` is `OFF`? (the default with autoconf is on)\r\n\r\nYes, according to https://gist.github.com/hebasto/2ef97d3a726bfce08ded9df07f7dab5e (the parity table, linked in OP). I presume developer (not users) are encouraged to set `-DBUILD_BENCH=ON -DBUILD_FUZZ_BINARY=ON -DBUILD_UTIL_CHAINSTATE=ON -DBUILD_GUI=ON ` on all of their builds, if they want to catch compile errors before opening a pull request.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2251037482",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2251181234,
      "node_id": "IC_kwDOABII586GLkyy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2251181234",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T18:47:01Z",
      "updated_at": "2024-07-25T19:22:02Z",
      "author_association": "MEMBER",
      "body": "> Trying to build the benchmarks:\r\n> \r\n>    * Is it expected that the default for `BUILD_BENCH` is `OFF`? (the default with autoconf is on)\r\n\r\nRegarding the part about \"the default with autoconf is on\" part, in the CMake working group, we decided to enable by default only the \"essential\" build targets that most developers build most often in their everyday work. This means, for instance, that `-DBUILD_BENCH` and `-DBUILD_GUI` are `OFF` by default.\r\n\r\n>    * If a specify something weird like `cmake -B build -DBUILD_BENCH=ab123`, I get as configure output `bench_bitcoin ....................... ab123` (and it builds the `bench` binary). I would expect an error when specifying anything but `OFF` or `ON` or equivalent.\r\n\r\nThe current implementation uses the standard CMake's boolean [options](https://cmake.org/cmake/help/latest/command/option.html) without any extra checks. Provided constants are evaluated according to the CMake [rules](https://cmake.org/cmake/help/latest/command/if.html#constant). Usually, boolean values are represented as `ON`/`OFF`, `TRUE`/`FALSE`, `YES`/`NO`, `1`/`0`.\r\n\r\n> I presume developer (not users) are encouraged to set `-DBUILD_BENCH=ON -DBUILD_FUZZ_BINARY=ON -DBUILD_UTIL_CHAINSTATE=ON -DBUILD_GUI=ON ` on all of their builds, if they want to catch compile errors before opening a pull request.\r\n\r\nUser [presets](https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html) are most suitable and convenient for that.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2251181234",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2251236729,
      "node_id": "IC_kwDOABII586GLyV5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2251236729",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T19:19:07Z",
      "updated_at": "2024-07-25T19:19:07Z",
      "author_association": "MEMBER",
      "body": "> Yes, according to https://gist.github.com/hebasto/2ef97d3a726bfce08ded9df07f7dab5e (the parity table, linked in OP).\r\n\r\nRight, I saw that. I should have phrased my question as \"is it intentional that the default changed\".\r\n\r\n> Regarding the part about \"the default with autoconf is on\" part, in the CMake working group, we decided to enable by default only the \"essential\" build targets that most developers build most often in their everyday work.\r\n\r\nThanks, that answers my question.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2251236729",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2202007732,
      "node_id": "PRR_kwDOABII586DP_i0",
      "url": null,
      "actor": null,
      "commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "It seems that the bitcoin-qt `qrencode` dependency default value deviates from the one in autotools. I don't have the qrencode library available in my system and I'm able to compile the gui out of the box through autotools but not through cmake due to the missing dependency.\r\nIt would be nice to use the same default value for now. And discuss any possible default value change (if needed) in a follow-up.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2202007732",
      "submitted_at": "2024-07-26T14:30:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13709841797,
      "node_id": "HRFPE_lADOABII586PurnmzwAAAAMxK5WF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13709841797",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-31T13:11:56Z"
    },
    {
      "event": "commented",
      "id": 2260498863,
      "node_id": "IC_kwDOABII586GvHmv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2260498863",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-31T13:14:33Z",
      "updated_at": "2024-07-31T13:14:33Z",
      "author_association": "MEMBER",
      "body": "Rebased due to the conflicts. This PR branch is the current [staging branch](https://github.com/hebasto/bitcoin/commit/19d4d920d97aa7fc4675eb4ac4ecf744e9ec8613) with the top 3 commits dropped.\r\n\r\nAlso some feedback has been addressed.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2260498863",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2210190130,
      "node_id": "PRR_kwDOABII586DvNMy",
      "url": null,
      "actor": null,
      "commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "left two nits. Feel free to ignore",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2210190130",
      "submitted_at": "2024-07-31T13:37:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2210311726,
      "node_id": "PRR_kwDOABII586Dvq4u",
      "url": null,
      "actor": null,
      "commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2210311726",
      "submitted_at": "2024-07-31T14:15:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "unlabeled",
      "id": 13711298160,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAMxQc5w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13711298160",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-31T14:47:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 13740016483,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMy-ANj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13740016483",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "357f19539129fae31bbc87275fa0935fc33cade4",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/357f19539129fae31bbc87275fa0935fc33cade4",
      "created_at": "2024-08-02T10:31:36Z"
    },
    {
      "event": "labeled",
      "id": 13740473394,
      "node_id": "LE_lADOABII586PurnmzwAAAAMy_vwy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13740473394",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T11:14:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13742534149,
      "node_id": "LE_lADOABII586PurnmzwAAAAMzHm4F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13742534149",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T14:19:48Z",
      "label": {
        "name": "DrahtBot Guix build requested",
        "color": "bfd4f2"
      }
    },
    {
      "event": "referenced",
      "id": 13754497152,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMz1PiA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13754497152",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a68701662e2ee0e5e71d1e0f8f13c418f75804a4",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/a68701662e2ee0e5e71d1e0f8f13c418f75804a4",
      "created_at": "2024-08-04T09:19:19Z"
    },
    {
      "event": "commented",
      "id": 2267493946,
      "node_id": "IC_kwDOABII586HJzY6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2267493946",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-04T10:35:01Z",
      "updated_at": "2024-08-04T20:21:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "I can barely contain my excitement about this change, finally the whole project came alive for me in [CLion](https://youtrack.jetbrains.com/issue/CPP-193/Support-Autotools-based-projects#focus=Comments-27-10265733.0-0) - a few of the features that are working with cmake that didn't work before:\r\n* right click to run boost test + debug:\r\n<img width=\"500\" src=\"https://github.com/user-attachments/assets/ab8c93f8-58e0-435f-b834-51e245a26468\">\r\n<img width=\"500\" src=\"https://github.com/user-attachments/assets/d2042477-6475-4bb0-a5db-bbcb89946e7c\">\r\n\r\n* built-in code coverage (and partially the profiler) is working:\r\n<img width=\"500\" src=\"https://github.com/user-attachments/assets/d9f634df-889b-4f47-bbba-57e6244493ad\">\r\n\r\n* extract method and field rename refactoring (still extremely slow, but at least it's working - will see if it's faster after it finishes indexing):\r\n<img width=\"500\" src=\"https://github.com/user-attachments/assets/3acd177a-b0a3-4bb0-a479-81d336b01e20\">\r\n\r\n---------\r\n\r\nEdit: I checked the speed of compilation before & after with:\r\n```bash\r\nbuild_and_run() {\r\n  echo \"Building commit: $COMMIT with parallelism: $PARALLEL\"\r\n  if [ -f CMakeLists.txt ]; then\r\n    cmake -B build -DWITH_CCACHE=OFF && cmake --build build -j$PARALLEL\r\n    BITCOIND=\"./build/src/bitcoind\"\r\n  else\r\n    ./autogen.sh && ./configure --disable-ccache && make -j$PARALLEL\r\n    BITCOIND=\"./src/bitcoind\"\r\n  fi\r\n  $BITCOIND --version | head -n 1\r\n}\r\nexport -f build_and_run\r\n\r\nhyperfine \\\r\n  --warmup 1 --runs 5 \\\r\n  --shell=bash \\\r\n  --parameter-list COMMIT 2ed820,80073c \\\r\n  --parameter-list PARALLEL $(nproc),1 \\\r\n  --prepare 'git checkout {COMMIT} && git clean -fxd && git reset --hard' \\\r\n  --export-json ~/final_results.json \\\r\n  --style full \\\r\n  'COMMIT={COMMIT} PARALLEL={PARALLEL} build_and_run'\r\n```\r\nwhich resulted in\r\n```python\r\nBenchmark 1: COMMIT=2ed820 PARALLEL=8 build_and_run\r\n  Time (mean ± σ):     678.382 s ±  1.707 s    [User: 4860.119 s, System: 286.087 s]\r\n  Range (min … max):   675.542 s … 680.083 s    5 runs\r\n\r\nBenchmark 2: COMMIT=80073c PARALLEL=8 build_and_run\r\n  Time (mean ± σ):     458.423 s ±  0.498 s    [User: 3043.589 s, System: 172.502 s]\r\n  Range (min … max):   457.940 s … 458.967 s    5 runs\r\n\r\nBenchmark 3: COMMIT=2ed820 PARALLEL=1 build_and_run\r\n  Time (mean ± σ):     2815.758 s ±  1.076 s    [User: 2627.491 s, System: 187.484 s]\r\n  Range (min … max):   2814.468 s … 2816.904 s    5 runs\r\n\r\nBenchmark 4: COMMIT=80073c PARALLEL=1 build_and_run\r\n  Time (mean ± σ):     1791.808 s ±  1.458 s    [User: 1675.999 s, System: 115.596 s]\r\n  Range (min … max):   1790.071 s … 1793.572 s    5 runs\r\n```\r\nSpeedup with 8x parallelism: 1.48 times faster\r\nSpeedup with 1x parallelism: 1.57 times faster\r\n\r\nWhile this doesn't fully reflect the cached states (which I'm not sure how to test), I think this is really impressive change.\r\n\r\n---\r\n\r\nEdit2: CLion generated `cmake-build-debug` and `cmake-build-debug-coverage` to separate the builds corresponding to different run configs, could we add `/cmake-*/` to `.gitignore`?",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2267493946",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2208656646,
      "node_id": "PRR_kwDOABII586DpW0G",
      "url": null,
      "actor": null,
      "commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Left a few question - ignore if they don't make sense in this context, it's not my area of expertise",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2208656646",
      "submitted_at": "2024-08-05T08:34:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2218631348,
      "node_id": "PRR_kwDOABII586EPaC0",
      "url": null,
      "actor": null,
      "commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2218631348",
      "submitted_at": "2024-08-05T10:25:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "commented",
      "id": 2268754162,
      "node_id": "IC_kwDOABII586HOnDy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2268754162",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T10:37:53Z",
      "updated_at": "2024-08-05T10:37:53Z",
      "author_association": "MEMBER",
      "body": "@paplorinc \r\n> Edit2: CLion generated `cmake-build-debug` and `cmake-build-debug-coverage` to separate the builds corresponding to different run configs, could we add `/cmake-*/` to `.gitignore`?\r\n\r\nAddressed in https://github.com/hebasto/bitcoin/pull/302.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2268754162",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13762217582,
      "node_id": "MEE_lADOABII586PurnmzwAAAAM0SsZu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13762217582",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T10:37:55Z"
    },
    {
      "event": "subscribed",
      "id": 13762217589,
      "node_id": "SE_lADOABII586PurnmzwAAAAM0SsZ1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13762217589",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T10:37:55Z"
    },
    {
      "event": "referenced",
      "id": 13763170530,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM0WVDi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13763170530",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "874e21ea1a3a3a07c4ce94035ee23f102aa3444a",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/874e21ea1a3a3a07c4ce94035ee23f102aa3444a",
      "created_at": "2024-08-05T11:58:02Z"
    },
    {
      "event": "referenced",
      "id": 13763263683,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM0WrzD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13763263683",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2feccd4d96aef819ce205a80d3f6f4dbaf46fbb5",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/2feccd4d96aef819ce205a80d3f6f4dbaf46fbb5",
      "created_at": "2024-08-05T12:05:48Z"
    },
    {
      "event": "reviewed",
      "id": 2219112695,
      "node_id": "PRR_kwDOABII586ERPj3",
      "url": null,
      "actor": null,
      "commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2219112695",
      "submitted_at": "2024-08-05T14:09:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2219450044,
      "node_id": "PRR_kwDOABII586ESh68",
      "url": null,
      "actor": null,
      "commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2219450044",
      "submitted_at": "2024-08-05T16:41:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13768134179,
      "node_id": "HRFPE_lADOABII586PurnmzwAAAAM0pQ4j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13768134179",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T18:25:04Z"
    },
    {
      "event": "commented",
      "id": 2269654936,
      "node_id": "IC_kwDOABII586HSC-Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2269654936",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T18:26:24Z",
      "updated_at": "2024-08-05T18:32:54Z",
      "author_association": "MEMBER",
      "body": "Rebased due to the conflicts. This PR branch is the current [staging branch](https://github.com/hebasto/bitcoin/commit/2a96e31e600dd90a73591f31852893cb0e7def60) with the top 3 commits dropped.\r\n\r\nSome feedback has been addressed including @furszy's https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2202007732.\r\n\r\nAlso the staging branch contains no actual code/test changes (previously, there was an exception for qt plugins), only build-system changes.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2269654936",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "unlabeled",
      "id": 13768155066,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAM0pV-6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13768155066",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T18:26:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "mentioned",
      "id": 13768180686,
      "node_id": "MEE_lADOABII586PurnmzwAAAAM0pcPO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13768180686",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T18:29:21Z"
    },
    {
      "event": "subscribed",
      "id": 13768180706,
      "node_id": "SE_lADOABII586PurnmzwAAAAM0pcPi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13768180706",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T18:29:21Z"
    },
    {
      "event": "reviewed",
      "id": 2219811588,
      "node_id": "PRR_kwDOABII586ET6ME",
      "url": null,
      "actor": null,
      "commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2219811588",
      "submitted_at": "2024-08-05T20:29:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "labeled",
      "id": 13770536723,
      "node_id": "LE_lADOABII586PurnmzwAAAAM0ybcT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13770536723",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T22:56:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2220439371,
      "node_id": "PRR_kwDOABII586EWTdL",
      "url": null,
      "actor": null,
      "commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2220439371",
      "submitted_at": "2024-08-06T06:58:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2220440443,
      "node_id": "PRR_kwDOABII586EWTt7",
      "url": null,
      "actor": null,
      "commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2220440443",
      "submitted_at": "2024-08-06T06:58:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "referenced",
      "id": 13777441738,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM1MxPK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13777441738",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "755e34f580116665f11ed87572da7186c36b35a1",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/755e34f580116665f11ed87572da7186c36b35a1",
      "created_at": "2024-08-06T11:50:19Z"
    },
    {
      "event": "referenced",
      "id": 13777926142,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM1Onf-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13777926142",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d8471379cd220c87855d7e22aa52fef0eba3621d",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/d8471379cd220c87855d7e22aa52fef0eba3621d",
      "created_at": "2024-08-06T12:29:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13782976008,
      "node_id": "HRFPE_lADOABII586PurnmzwAAAAM1h4YI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13782976008",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T19:18:32Z"
    },
    {
      "event": "commented",
      "id": 2271981040,
      "node_id": "IC_kwDOABII586Ha63w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2271981040",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T19:19:38Z",
      "updated_at": "2024-08-06T19:19:38Z",
      "author_association": "MEMBER",
      "body": "Rebased due to the conflicts. More feedback has been addressed.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2271981040",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "unlabeled",
      "id": 13783408068,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAM1jh3E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13783408068",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T20:04:02Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2223676631,
      "node_id": "PRR_kwDOABII586EipzX",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2223676631",
      "submitted_at": "2024-08-07T09:27:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2225688525,
      "node_id": "PRR_kwDOABII586EqU_N",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2225688525",
      "submitted_at": "2024-08-07T16:39:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "referenced",
      "id": 13796812911,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM2Wqhv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13796812911",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ad2140d4d8cccec82fdad07bdc7532e202282306",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/ad2140d4d8cccec82fdad07bdc7532e202282306",
      "created_at": "2024-08-07T19:18:02Z"
    },
    {
      "event": "reviewed",
      "id": 2226017520,
      "node_id": "PRR_kwDOABII586ErlTw",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2226017520",
      "submitted_at": "2024-08-07T19:26:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2226022459,
      "node_id": "PRR_kwDOABII586Ermg7",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2226022459",
      "submitted_at": "2024-08-07T19:29:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2226100409,
      "node_id": "PRR_kwDOABII586Er5i5",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2226100409",
      "submitted_at": "2024-08-07T20:13:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "ready_for_review",
      "id": 13804827386,
      "node_id": "RFRE_lADOABII586PurnmzwAAAAM21PL6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13804827386",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T10:39:59Z"
    },
    {
      "event": "reviewed",
      "id": 2227399035,
      "node_id": "PRR_kwDOABII586Ew2l7",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Checked a few more scenarios on mac",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2227399035",
      "submitted_at": "2024-08-08T11:36:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "commented",
      "id": 2276410668,
      "node_id": "IC_kwDOABII586Hr0Us",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2276410668",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T18:22:16Z",
      "updated_at": "2024-08-08T18:22:16Z",
      "author_association": "MEMBER",
      "body": "An [announcement](https://groups.google.com/g/bitcoindev/c/hgKkfQWzrTo) about the migration to the CMake build system was made on the mailing list. Therefore, more comments from fellow reviewers and testers are expected.\r\n\r\nTo let us maintain focus on making progress, the following statement has been add to the PR description:\r\n\r\nWe, the build system developers, kindly ask reviewers to refrain from making suggestions that are not directly related to the migration process or can be implemented separately. Bugs in the scripts and errors in the updated documentation should be the focus of this PR. Please be advised that comments not aligned with this PR's goal may be ignored.\r\n\r\nThank you all for your understanding and cooperation.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2276410668",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2277136975,
      "node_id": "IC_kwDOABII586HulpP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2277136975",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T04:37:05Z",
      "updated_at": "2024-08-09T04:37:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds (on x86_64) [untrusted test-only build, possibly unsafe, not for production use]\n\n| File | commit 27a770b34b8f1dbb84760f442edb3e23a0c2420b<br>(master) | commit 2c5f22560b4b203f14bc64fd41bf42345cb0ba81<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`cc61b98f761ae0d2...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/SHA256SUMS.part) |  |\n| *-aarch64-linux-gnu-debug.tar.gz | [`8520aad18b834d92...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-aarch64-linux-gnu-debug.tar.gz) |  |\n| *-aarch64-linux-gnu.tar.gz | [`b4981c155eff7bcb...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-aarch64-linux-gnu.tar.gz) |  |\n| *-arm-linux-gnueabihf-debug.tar.gz | [`abc05bea90c911f2...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-arm-linux-gnueabihf-debug.tar.gz) |  |\n| *-arm-linux-gnueabihf.tar.gz | [`9afabfd5f1348c88...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-arm-linux-gnueabihf.tar.gz) |  |\n| *-arm64-apple-darwin-unsigned.tar.gz | [`a2f045d4d370e511...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-arm64-apple-darwin-unsigned.tar.gz) |  |\n| *-arm64-apple-darwin-unsigned.zip | [`570ec3c274a76cc4...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-arm64-apple-darwin-unsigned.zip) |  |\n| *-arm64-apple-darwin.tar.gz | [`0289dbfde1855827...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-arm64-apple-darwin.tar.gz) |  |\n| *-powerpc64-linux-gnu-debug.tar.gz | [`88bdbb314e5a7bf1...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-powerpc64-linux-gnu-debug.tar.gz) |  |\n| *-powerpc64-linux-gnu.tar.gz | [`a22b2be3f32a37ee...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-powerpc64-linux-gnu.tar.gz) |  |\n| *-riscv64-linux-gnu-debug.tar.gz | [`e405c6dac4299122...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-riscv64-linux-gnu-debug.tar.gz) |  |\n| *-riscv64-linux-gnu.tar.gz | [`89df8a8fb8316c45...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-riscv64-linux-gnu.tar.gz) |  |\n| *-x86_64-apple-darwin-unsigned.tar.gz | [`f8e5a8ab26dc2c8c...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-x86_64-apple-darwin-unsigned.tar.gz) |  |\n| *-x86_64-apple-darwin-unsigned.zip | [`7ee3a84b21371065...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-x86_64-apple-darwin-unsigned.zip) |  |\n| *-x86_64-apple-darwin.tar.gz | [`d8991ce1e625ea73...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-x86_64-apple-darwin.tar.gz) |  |\n| *-x86_64-linux-gnu-debug.tar.gz | [`7e73078d515a706a...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-x86_64-linux-gnu-debug.tar.gz) |  |\n| *-x86_64-linux-gnu.tar.gz | [`dbd36be395769a40...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-x86_64-linux-gnu.tar.gz) |  |\n| *.tar.gz | [`ce196c8f7dc80175...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f.tar.gz) | [`87318cf6abea41dd...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c5f22560b4b203f14bc64fd41bf42345cb0ba81/bitcoin-2c5f22560b4b.tar.gz) |\n| guix_build.log | [`b1c81e8b50991225...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/guix_build.log) | [`f1d169a82935b789...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c5f22560b4b203f14bc64fd41bf42345cb0ba81/guix_build.log) |\n| guix_build.log.diff |  | [`e986565f30dc297a...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c5f22560b4b203f14bc64fd41bf42345cb0ba81/guix_build.log.diff) |\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277136975",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "unlabeled",
      "id": 13815541094,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAM3eG1m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13815541094",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T04:37:06Z",
      "label": {
        "name": "DrahtBot Guix build requested",
        "color": "bfd4f2"
      }
    },
    {
      "event": "commented",
      "id": 2277190642,
      "node_id": "IC_kwDOABII586Huyvy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2277190642",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T05:42:10Z",
      "updated_at": "2024-08-09T05:42:10Z",
      "author_association": "MEMBER",
      "body": "(The drahtbot guix build failed due to a silent merge conflict, I presume)",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277190642",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2277722262,
      "node_id": "IC_kwDOABII586Hw0iW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2277722262",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T11:17:57Z",
      "updated_at": "2024-08-09T11:17:57Z",
      "author_association": "MEMBER",
      "body": "Had a look at a Guix build. Stripping the macOS binaries is broken:\r\n```bash\r\n-- Installing: /distsrc-base/distsrc-ad2140d4d8cc-arm64-apple-darwin/installed/bitcoin-ad2140d4d8cc/bin/bitcoind\r\n/root/.guix-profile/bin/llvm-strip: error: unknown argument '-u'\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277722262",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2277886777,
      "node_id": "IC_kwDOABII586Hxcs5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2277886777",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T12:57:04Z",
      "updated_at": "2024-08-09T12:57:04Z",
      "author_association": "MEMBER",
      "body": "I think we can improve the output when `-DWITH_CCACHE=OFF` is used. Depending on the system, that output might be:\r\n```bash\r\ncmake -B build -DWITH_CCACHE=OFF\r\n< snip >\r\nUse ccache for compiling .............. ccache masquerades as the compiler\r\n```\r\nWe should probably at least indicate that the option was respected by the build-system.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277886777",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2277997375,
      "node_id": "IC_kwDOABII586Hx3s_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2277997375",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T13:52:57Z",
      "updated_at": "2024-08-09T13:52:57Z",
      "author_association": "MEMBER",
      "body": "> (The drahtbot guix build failed due to a silent merge conflict, I presume)\r\n\r\nShould be fixed after porting https://github.com/bitcoin/bitcoin/pull/30051.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277997375",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2230464760,
      "node_id": "PRR_kwDOABII586E8jD4",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2230464760",
      "submitted_at": "2024-08-09T15:17:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "commented",
      "id": 2278737425,
      "node_id": "IC_kwDOABII586H0sYR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2278737425",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T20:49:15Z",
      "updated_at": "2024-08-09T20:49:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/28425222462</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2278737425",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "labeled",
      "id": 13825514361,
      "node_id": "LE_lADOABII586PurnmzwAAAAM4EJt5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13825514361",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T20:49:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDMxMzk3MjhmYmIyNmRjMDM4NWYyNTViNWNmYjc1MjYzMmQzODU1MDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3139728fbb26dc0385f255b5cfb752632d385507",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3139728fbb26dc0385f255b5cfb752632d385507",
      "tree": {
        "sha": "5b4fac839e064d465456c200b80a4eab3161ec3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b4fac839e064d465456c200b80a4eab3161ec3d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5b4fac839e064d465456c200b80a4eab3161ec3d\nparent c2d15d993ef06d97d4c117012bda6efa3dcbac45\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1713259994 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284347 +0100\n\ncmake: Add root `CMakeLists.txt` file\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O3sACgkQQQEIES5+\nqB8hChAAlzrvf5ujWOBK4RZOpHAV+Tv1h8Pupic1LUN01O73x2dQXRVReN21Jqlv\n7geNeTTzmxFqKq6OBweNjYsPN+KWy86O+5DRJ8ceoVams14hLuMLE8Xf7LU1bL87\n7V3UvBTkMzmDNV2DBMaHsPKDw98hQQyvNMfUdQQLYu9Fwm53GdIql4wYekHd357v\n6ZEsBq0OhaFEjsFER46v62W6Z6pNMbHDt7iHs1EfKZ2tgiWBzQJ23vCNSs3ZBjCN\nsc8oCGyjYme+C1l5SFU0F8n3LxNwQL2uDMYlU6OmKHTtzCdqW/y+fhWe5BBkmcA0\neOM2eNQj6cfH8WHYYljKu1LxIPIaT15XPr3QcyL2mRIMUEcPP2daywifFZ96u1fb\nVlXUMWYbfCGB3+BQGyiN2eskM/Ch8u2yDJs+/C40ysJHw/R4Rcq+3ULMW4TPPgzZ\nnGRCyh4OaFR23Vj4962Kx/mbOLaCYvRXTaNk5WcG9ZXKbPI4qz+WgMCT1HhGHI7H\nuCjUrsTP82rU0EN+IIWF+HCgZ/eWP1sPros/Q2+GH9uxhBSGe5qPjVaoZ384d0/D\nD5VBujVsFb1Ys9JiU3hImyZxDzy7fplvpYcdPZNYAcemD3hNu+cFQV5puJhJ929r\njuisqdejq2MSm3idEIZin/jY5ZEplOUbc8PxHs+n82fZLS1KXRc=\n=/x5X\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c2d15d993ef06d97d4c117012bda6efa3dcbac45",
          "sha": "c2d15d993ef06d97d4c117012bda6efa3dcbac45",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c2d15d993ef06d97d4c117012bda6efa3dcbac45"
        }
      ],
      "message": "cmake: Add root `CMakeLists.txt` file",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:47Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-04-16T09:33:14Z"
      },
      "sha": "3139728fbb26dc0385f255b5cfb752632d385507"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE0NmUwNzdiMzg2MmJkMjk3NGNmODJiYjgwNTA2ZjhmNGZhZDg0YzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/146e077b3862bd2974cf82bb80506f8f4fad84c3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/146e077b3862bd2974cf82bb80506f8f4fad84c3",
      "tree": {
        "sha": "78722a8ca0c6d6f1b50d7f77a3f94cdca8b9ccf5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78722a8ca0c6d6f1b50d7f77a3f94cdca8b9ccf5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 78722a8ca0c6d6f1b50d7f77a3f94cdca8b9ccf5\nparent 3139728fbb26dc0385f255b5cfb752632d385507\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720870419 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284347 +0100\n\ncmake: Introduce interface libraries to encapsulate common flags\n\nAlso add a sanity check for non-encapsulated (directory-wide) build\nproperties.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O3sACgkQQQEIES5+\nqB+NRBAAs2Kmwu0cFNS5wIJdaiI7Wpo+ciFbGBzJ08UrivZvKUsQu3sfNCp7aFA/\nJz+S1sk7kbSyeASAnZC3rOl3YDhlmHSofni0NeS35XdnRRtDObjBCCJ3lXMWrLrQ\nC50sj3DFEtdgEqQyXInSC9lJ9bh4PD868UyFUdY6F2B/LjN/bta6saBs3+PUErEV\nn/8AhfJx4vL4B4lW2p/4UpT2LYz4XVhL2YZ0yGLzns+B/dMj2vUD9nmKGd+zHM3h\nrA7FkhLGGIFDxP8ikp9QKnkEXRC3lo+hVKnrEnpQx1bj2J6KuQrsmyga58N9nUHV\ndgJvUVQ28PHLYecz0j8C3qD0LsCaw+Zcwn2Xs+BJM1yd44RAkAc1HQ0pArmhxiW8\nyM5GLXiPrUV7by1WrNCTHDgTqM7Hmahnz9u1U5jvXhjeN6XqyOUNYl+z//r7iI4v\nABahXGwJ6T02xhYn1w70WGkH+T5z7cXA4u8LaSY2Z51z9ngXIFpDCXtNSzSDMxSI\nX+fpmCXJUlncE9Wvf6ZJYHlwtztKrwDhqPYuyM4B2h3lLjFb06myrCIwhCKBG035\n0Lzmy6O+iyeyxeT50fKAg+GlwFvR34ALAeVAAS0n8VWMMq2E9mYMBX07xM0Hf2Iq\n6DHSh7bS+WnNdJ/+KOSok3OJGmYsmjgNa5nFcot80lokUeVAvZ0=\n=9qiI\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3139728fbb26dc0385f255b5cfb752632d385507",
          "sha": "3139728fbb26dc0385f255b5cfb752632d385507",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3139728fbb26dc0385f255b5cfb752632d385507"
        }
      ],
      "message": "cmake: Introduce interface libraries to encapsulate common flags\n\nAlso add a sanity check for non-encapsulated (directory-wide) build\nproperties.",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:47Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-13T11:33:39Z"
      },
      "sha": "146e077b3862bd2974cf82bb80506f8f4fad84c3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDMzZTI4ZDUxNjczNGZiNDE4NjkzZTRiYzY0NDdjMjUzZjJhNWI4MGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33e28d516734fb418693e4bc6447c253f2a5b80c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/33e28d516734fb418693e4bc6447c253f2a5b80c",
      "tree": {
        "sha": "e99479ad66f68eefa97b455e29abba2e0bebea11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e99479ad66f68eefa97b455e29abba2e0bebea11"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e99479ad66f68eefa97b455e29abba2e0bebea11\nparent 146e077b3862bd2974cf82bb80506f8f4fad84c3\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720047607 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284347 +0100\n\ncmake: Print compiler and linker flags in summary\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O3sACgkQQQEIES5+\nqB9vbQ//ZaL483xt3/jkukizA1ZFY+sN5+8dW6CClKso5rzWgMIAvNvBv8k5DEG6\nKEX1RkAalkia4n4Qc4U9H5A+FF590/bKfYFge1K+DWbyXhHxmu7odfXFz+08m3Dk\nUq0hVlx2pQ/rJSs7WA86wdkkk6xY/WacmKq4GUFz0KrqLM2JmCAO6MsqJkUWfssQ\nHipDzt9IjLablps+HU/BPxo90Y/XNhh2BCBb38ehiku/m/bxk5OoUZ1/DZxDyFiO\nN5K/oYNjNQd4pbDhAbIp7VdA2xVkCH6auGzqk9YOit91fdlWYixpMz7lF/b/QZdE\n7xpOXXvF0Q9obzWgYOTXpwYvPW9tOnAt7KxFRQTxLOUHCTyZbGGd+CBsH03CQ3DR\nLxTxuEli4ofAwASLaJcVwUS/sn+j9ZcJ6CQfLKx6zaWoGHLoJvVInx5TBaQ7l9OG\n8ihbay929a2k+31yx2trMvNWstm6miARLlktUIa8nhclmw7JmKTAA5c1KXMWOWsO\nxb6PvAcBGEPoOFSMQNtB1LgCCZlbPYwy8LctzBbS6lb+7KvKADcqmzb1eUlxWFx3\nNk+uE6GIlvOEcGSuMrfmvaiFdjg2aWumsOCoC/SZBMYcARlsW7z2UYmcEEcRSIVS\n/ZLQuArClZ1kCFYZMqVfDm+RNfLBb4hQ01yHlfs95JeSdL4rQ7s=\n=bEoJ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/146e077b3862bd2974cf82bb80506f8f4fad84c3",
          "sha": "146e077b3862bd2974cf82bb80506f8f4fad84c3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/146e077b3862bd2974cf82bb80506f8f4fad84c3"
        }
      ],
      "message": "cmake: Print compiler and linker flags in summary",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:47Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:00:07Z"
      },
      "sha": "33e28d516734fb418693e4bc6447c253f2a5b80c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE1YjI1MTg3NmU5ZTliZGE1NmJiZWYwMWEzNjdmNjNlMjgxOWM3Zjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5b251876e9e9bda56bbef01a367f63e2819c7f9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a5b251876e9e9bda56bbef01a367f63e2819c7f9",
      "tree": {
        "sha": "560663c9301a2de2c0ce9364387756704adbbbf0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/560663c9301a2de2c0ce9364387756704adbbbf0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 560663c9301a2de2c0ce9364387756704adbbbf0\nparent 33e28d516734fb418693e4bc6447c253f2a5b80c\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722964607 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284348 +0100\n\ncmake: Add `config/bitcoin-config.h` support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O3wACgkQQQEIES5+\nqB+RQg/9Hbj/ABYIbvDrKcWeVYKL7jZvDEzty1PnPYggRM+3HIc/utbQgf1r1/Zr\n6UKiEk2fFKVyTigGn4+1eHxMgvgHuwqNsiEhYaSUKbih3mNxt1u6dNzj4B/2psMx\nInPijOX0IYpBJNCJQd/llLYsWav4a771juS+fqaMezipTU5VudOfMIlkoZf3ywv1\nQbY4IH2QraZe9XpKnWEtQaH6Uo0XQ0Jsujjp+po21VHmO4l1FWxJ1fXY1pmK5RO7\nwa/ItBzUNYrM5BJxz3Lu4ZHh8gMAejkU6jGoTW7TqZIq5CQ1vXjAUb91cE5IZdia\nhDMHQj+wlDOJFz3pXUopx6hmTDorZPWg43fKsElMm39j9UW3IhongEhmTl28CDa+\nL3Xn0ac0VwmjXIl5IIwMfijEy30RY70i0m4X2wG6tK3NgWXoErHIy1DCe8QrnRiT\nnTCrufXIjfnz4y5PUcbcmc3vfhoadiKzEayN78gQbPzlfTmYwAmI1l7ZyoURNEWx\nkYs4iP2qVbUSeRZYrC4ZeqlGUeN5PWAFljWvEaZAqQaBX/ZqGcfJnJQOLKwkx7Mo\nMWbpdvBdGVp5q985CuRBirbg3Vkakxaz1moD2HKTMVau75CQlChzSK3bQpyiDCer\nKKTitg9Xe4kAPkD6bw5SNQB5MetPwoCndFcKKohsFFmXa1nWG9I=\n=8K2O\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33e28d516734fb418693e4bc6447c253f2a5b80c",
          "sha": "33e28d516734fb418693e4bc6447c253f2a5b80c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/33e28d516734fb418693e4bc6447c253f2a5b80c"
        }
      ],
      "message": "cmake: Add `config/bitcoin-config.h` support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:48Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-06T17:16:47Z"
      },
      "sha": "a5b251876e9e9bda56bbef01a367f63e2819c7f9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE4ZDEyZDBlMDczNzg0NjcxY2UxNDc4M2NjN2JlYmFkYjU2ODhiNzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18d12d0e073784671ce14783cc7bebadb5688b74",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/18d12d0e073784671ce14783cc7bebadb5688b74",
      "tree": {
        "sha": "96ef3901ae0f1e631465835a7158ffe5e6033fd6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96ef3901ae0f1e631465835a7158ffe5e6033fd6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 96ef3901ae0f1e631465835a7158ffe5e6033fd6\nparent a5b251876e9e9bda56bbef01a367f63e2819c7f9\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1711212657 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284348 +0100\n\ncmake: Add introspection module\n\nCo-authored-by: Cory Fields <cory-nospam-@coryfields.com>\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O3wACgkQQQEIES5+\nqB9wQRAArESDbVmNVlTs/WmVyhLcCpVUPr1vF33wxg5QCBy7bbywz26wnBQiIauY\nZ2BEqaWdNUZnd9BNo/Gc2UHveKXqgTyFs/oJsFufkjbIO4C/wvHwo/Ayk8GVX4Rk\nHVVumBDb7vwo2v4X/a3cdr3uD1qJcCtEWXiRz466RxncF/In2Gkx3/Iwe1IUPPMv\nSW4E8XDkJoG+Wook1Lj6neL9WvESJtvBvJRdGcB+ccTHkJCktaOJMQUbvY9yq+tc\n6Cwx59NC/W8KpR5Cp87exo24l9dc37Y1o7hngJtOrftA8spNMqafUxWU6giIhcMN\nim1U7tHo5dJOpulBhwzE/RtVMR0MhdRQyGYHwwKZtexnml+bQnUvewvSDbUqU3D2\nZnxGCaN5WPtOsHakWyQPA0s3XIT2pBuwDka0HdZJBpUHGD4mO+XPPho1L8Fph40a\nv+FRd9oxECaF9YmJIBIu2bEbm+d9+0jhtbhXXOoBkqEfjWZKR2Xxvmc+WLRPp26P\nRv/64Di+MwPr6+6R8HAGOlGLkGcZ9tapq0TZSWsPrSh8bhKPd4DP8RSFE6IWrKcU\neV8nkPt3bVN0pHX3GD74BQlai5D0Fa/RLuUTHguknlhOwoQgPdwPok4NnNdaYhUK\nHrzApDpr/nEqSVt8om2Oq9Hk+QR9hIQ0qWq9Q4l/9WrIlIPa5lY=\n=1YxO\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5b251876e9e9bda56bbef01a367f63e2819c7f9",
          "sha": "a5b251876e9e9bda56bbef01a367f63e2819c7f9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a5b251876e9e9bda56bbef01a367f63e2819c7f9"
        }
      ],
      "message": "cmake: Add introspection module\n\nCo-authored-by: Cory Fields <cory-nospam-@coryfields.com>\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:48Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-03-23T16:50:57Z"
      },
      "sha": "18d12d0e073784671ce14783cc7bebadb5688b74"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI0MjczYzUzZTY3M2U0NzM3ODg5MWNmMDk2NzJjMDRlMjE1OGNmMjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4273c53e673e47378891cf09672c04e2158cf24",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b4273c53e673e47378891cf09672c04e2158cf24",
      "tree": {
        "sha": "4ce03e30a7ace844bd51ef6fec851dc485c76abb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ce03e30a7ace844bd51ef6fec851dc485c76abb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4ce03e30a7ace844bd51ef6fec851dc485c76abb\nparent 18d12d0e073784671ce14783cc7bebadb5688b74\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1704821147 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284348 +0100\n\ncmake: Add position independent code support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O3wACgkQQQEIES5+\nqB/vDA/8ChWkjyLHXotDtNztvHlE/5hrlW8rc53arJG5AbVdm0jmn5FPGGInADJs\n1Yrr7sHSi2P4XNe8bBrGWoDNYFkIp+BCOZQnIORIK1oyB2b5RroF9cSeyduHki2d\ndqQ5A88u59gYJxW1ZjSVITachBacBs9reFknwTOgQdYpjId2/jsjlVimtJt1z9pB\njAdQZCoRquQTknhto45XqMaIfCc/gf99z8ElOYoj+gUv+PnDqKWJfqE5EewDkYtO\nOpchbn2LRr60mi2uvQdaI/WoNCVMNlDrxfDenngfvKbphUAfX0Z1X/a6JB3XyC5+\nDpe8WQZLHqIqJnWl9EnMRGpKhHVGt/d4QFkln8YBNnpwY82doxkpcbcI8jsMjZ6T\naKLsje/WPxVenll2fk05NLhJhuI9rsCBvNcYFzv8kXBfev4R6/q8d6yvm65ylQE1\nLTc4l1OueOm12lhAzu3Nwkvr2Limg3NvcPXRtzIPQL6ge2NEKBmTJRwgCMxQQE9P\njhUoHu+KNeGJhR3zoyfVjbTPKsJVs0CbH10ju7xPO03pEJ/XYSovSofuxaBRabkg\nJH1dbzIF7HZQVFWTV8v8h2KGj2sh8dAsPCtr2b2PfgZU4Uw6qcdd/8PLIFgENX5m\n7U95k9ovaal+FqnZmpuM0OUyov0gEgB5ERyC62nD8iAwkvMtLcc=\n=Zjrb\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18d12d0e073784671ce14783cc7bebadb5688b74",
          "sha": "18d12d0e073784671ce14783cc7bebadb5688b74",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/18d12d0e073784671ce14783cc7bebadb5688b74"
        }
      ],
      "message": "cmake: Add position independent code support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:48Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-01-09T17:25:47Z"
      },
      "sha": "b4273c53e673e47378891cf09672c04e2158cf24"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEyZDA4ZmY2NTIyMTZlNDMzNmUxODFkMDMyMDQ2NDhmZjJiMjBiZDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12d08ff652216e4336e181d03204648ff2b20bd2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/12d08ff652216e4336e181d03204648ff2b20bd2",
      "tree": {
        "sha": "a0c26019a37fe4c18c8201a611f46f2703c42da7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0c26019a37fe4c18c8201a611f46f2703c42da7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a0c26019a37fe4c18c8201a611f46f2703c42da7\nparent b4273c53e673e47378891cf09672c04e2158cf24\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719738831 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284349 +0100\n\ncmake: Add POSIX threads support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O30ACgkQQQEIES5+\nqB/+eRAAuaIEzbU115VYr2iRtgkO3HpWGi/dnSz0oHGilVeJWa1xjkfxhhNqfUZm\nFYj4Z4PjzaGPoaF6ReHtQJMnTsNX1JRLbgRoXsXWMM5ws1cjTBz/6yq49G5cJW2j\nJ9vUBwZxW8RBO4eqjJ14EDc236N1EcWg14696tq8vzyVpBhsCdIgKhn3H3uVvrZz\ngSf/q5RhCQ/N8NrlVEQnBfrc5PnlEjqf9YmlDeDAp3kwB+f68zsgMbxea0PAfkRW\nFFXo9pjzrjHEnML4R4s9Y9KdDOtoVEo6COUyBqw4LIV8PNLHfLC0AL25Q6HSMv/j\nZ7E3+Q7wh5Pj71m3NmYV129v9jABMLl3erUKXri7hbVK2pZmSMRiAoy5UaNIJHwf\n6bEBqo++AafLjdp00ubP7a6XSwXbrleky93b0+z6bFlvVlYaVtevQn0tfu3+nA17\nyT8Byv9cbBnQN+pnOPfWi2ubBXmIKyciJ96PeWUqzQcubz3lroKBIM5a9WFOyqpx\n6MwV1uexyfW05bywPhNZyedTMZhV+sNdSVMJvcwp4hz94LnR019ONMCWqXuCFTn6\nhpbiY/+/qOdhLDLd19hAZiSPcZnKJszjocs2o08QnlLRd++a3pQhA+jlEBEfWg7b\nzgh1YrdvD3dKKStRtCbpZKbaRCTnPfu2swQXmkrwC0oV+M4DSUo=\n=+4PQ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4273c53e673e47378891cf09672c04e2158cf24",
          "sha": "b4273c53e673e47378891cf09672c04e2158cf24",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b4273c53e673e47378891cf09672c04e2158cf24"
        }
      ],
      "message": "cmake: Add POSIX threads support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:49Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-30T09:13:51Z"
      },
      "sha": "12d08ff652216e4336e181d03204648ff2b20bd2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE0ZWVmYmU3NjlmZTlmMjJmZjcyYjE5MzIwZjMzM2Y0ZTFlZDdjMDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14eefbe769fe9f22ff72b19320f333f4e1ed7c00",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/14eefbe769fe9f22ff72b19320f333f4e1ed7c00",
      "tree": {
        "sha": "4293b6ef2ed2a460ccced5b2a960708e6f96ff57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4293b6ef2ed2a460ccced5b2a960708e6f96ff57"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4293b6ef2ed2a460ccced5b2a960708e6f96ff57\nparent 12d08ff652216e4336e181d03204648ff2b20bd2\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1704832826 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284349 +0100\n\ncmake: Add `TryAppendCXXFlags` module\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O30ACgkQQQEIES5+\nqB+ufBAAlh0i5DkUx/pWnro5o/NymiMQZir/3uAkw7nqto4clU1gjsNWQ1LvX7e3\n7HDR1N8hrpBT7rqF7VuZdhH1Mo9lKHDUEAscIaolMaN/meJ1UdlSlbwYflM/XhXr\nwORUBbM4AnVpleJWkD9jC31pWEffyNw9//WLJElMeHyZK4H6t55BKNTxuHijtLAV\nA3RmTqupnzlYHc90biC+Xv5aM74vhxl+fSrKlP7+gRoY2E57GZHDKeryrF5Eln2K\n14LoYAklOLn+FLizyQXxHt6q+/RJ1QiymmMJ9DIs1aA3kaytbbpf2tdcRbLBWyzK\nW8CZhx3binuXtb+dHitl4FnafLD7D9cxSksZvcsFRdTNpCd2VeMWecltrG3k5I+r\nXt/sb73PMTvEWakzFj8QBIaxvzUoGbHm72TOIFPWorvEO8YNTD6GCQ3lJHj46t2L\nxSWoTf4NGElUpCvYNRFe/6cLju/dyJtFECcVJuqckQ8piKKTlH0R+uFxwiP7YGdC\nLCgUvyP9yD2skL6wYuxrdEgiNtBC1/sYGO24rBp1phAxDgxAT13BdXJTgXQcqmCg\nC/9CpCFBcGdaEeVQe9rFn389ja8kJZYxG6XbisGJpUkWTMyZDeGaK08v4k1J5yCJ\ntyQQS7YZWvS84Jjt5f4Gg8IJdF+hRhfZF/uaLmGbclYMO4AaBXk=\n=3Lv0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12d08ff652216e4336e181d03204648ff2b20bd2",
          "sha": "12d08ff652216e4336e181d03204648ff2b20bd2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/12d08ff652216e4336e181d03204648ff2b20bd2"
        }
      ],
      "message": "cmake: Add `TryAppendCXXFlags` module",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:49Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-01-09T20:40:26Z"
      },
      "sha": "14eefbe769fe9f22ff72b19320f333f4e1ed7c00"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI1NjMzMjI5Yjk2ZWE1OTMzYWIzYjA4NDAwYzBhMGViZjljMGQ0NDU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25633229b96ea5933ab3b08400c0a0ebf9c0d445",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/25633229b96ea5933ab3b08400c0a0ebf9c0d445",
      "tree": {
        "sha": "34d95a45f4199388ca5128bab53e73c6a888aa53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/34d95a45f4199388ca5128bab53e73c6a888aa53"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 34d95a45f4199388ca5128bab53e73c6a888aa53\nparent 14eefbe769fe9f22ff72b19320f333f4e1ed7c00\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1704832843 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284349 +0100\n\ncmake: Add `TryAppendLinkerFlag` module\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O30ACgkQQQEIES5+\nqB+BwQ//RHIFni2diNI5yRe3kJRE0I0xLqACedSCw5MFxWiYNXwL8f/OokaQ8blg\nk0t/nVBtgpCcs5f16ppwbdAzm9fYbuRHYS+i8wAAaRbnSPKl7z8WBcw8gT0dRetp\ncQT0hhZe7D/YUjg3fsVlRImMCcUp+ibKssRmZ6cS4ObZ0NphlRrRAoetlrrxIwYl\noSpu8V3qLCZOd8GvZvryQMWNI5X+YWNQ+g1LJk7NuQI9mM/Ouw0pK41JXgI1WOof\n+Kd5hzZ5hcalilewp5FEUJlLJD13CHJFAg67ZlKdaMFlxGiiTGvqK3mgAWzTeCVX\nz5xaG0Q1n/UiiiL2Ejk7EwypolJAbB0xbufhR5CAbw8BbwMRTL7/DaznGDDwFMOD\n6sR+mD1Sq20wdOlJsHg5AfM6GaiqBmONVTgmzZ+9qgvK979vPPRNWjRmf+5gBpUf\nMpvgan+Zehix3FJzA15c1aP8RxB+KJrLMWqV1FJavVDht2SUAx6/51XFLucBdmq/\nO0dCzh/CXCsRQkeXxAdwsGd0sLkliYN3xP8tcuINpg43kFKOQmoyZlNRlyRgUiEe\nTbnEHcExZ/nlttbFZqqjR5N/hR+iXx3fDV2IwSa/kZg1995KE+bumKZHjfF9/Ydw\nZO3Sv0Io/uy/WsgCWhVlCx2FavRqwIHlBH4AdShh6Qdr9c3sqoQ=\n=LCP1\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14eefbe769fe9f22ff72b19320f333f4e1ed7c00",
          "sha": "14eefbe769fe9f22ff72b19320f333f4e1ed7c00",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/14eefbe769fe9f22ff72b19320f333f4e1ed7c00"
        }
      ],
      "message": "cmake: Add `TryAppendLinkerFlag` module",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:49Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-01-09T20:40:43Z"
      },
      "sha": "25633229b96ea5933ab3b08400c0a0ebf9c0d445"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY5NmU1YmFjODNmZGQzNDRhM2YyODlmODU1NjU3OGY5OGM1MTYyZTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/696e5bac83fdd344a3f289f8556578f98c5162e4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/696e5bac83fdd344a3f289f8556578f98c5162e4",
      "tree": {
        "sha": "3091fa948b55c539e4f81497ce8730dafd61feac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3091fa948b55c539e4f81497ce8730dafd61feac"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3091fa948b55c539e4f81497ce8730dafd61feac\nparent 25633229b96ea5933ab3b08400c0a0ebf9c0d445\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721818707 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284349 +0100\n\ncmake: Add global compiler and linker flags\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O30ACgkQQQEIES5+\nqB+h8BAAsBvtx1kpxW55Y3VMlLuQ+UthpmTZhfs03Hk9KhvdveYx/gcNxYwrh1Vy\nwjnzxn7Dxw5Wst3WLHPC2J9DQpiwRQOm9nljjq4WYODrHG7bCOwT3VObiu+ARPet\nw4S189Sb0Ajx7HNMsDWcC84l5Ee/yBzQI7sHYJPOmq/AZTjVGTNja9lGSebX5I2c\nK5EYKu4+HPotku0AkiajhjpWNZ0QFsfcsmEwajdNnW2b6ZDojjmzUNfIASiBbGRk\nr0w51FhYO0rzneFJvYJeYzOAFOZnUfoR8NhoqNucYh48QC7CIWV2GvUwAGz7XbLw\nlU+fAzEKpWfF1JZWov/DFk+7Bron578gzL1brj68FaY+bzmtr/nFUWoLTLTDaUjS\nJGMwubaY7BWaBBHtycwoRWNiW9pHVaCeexnignb5At9p9qs3ZYfCAEOQx8XISa39\n4JDXGQbluh9yNHJrWJdHdZ6YDpq/xI5VoX/PtVpwowLSJGWJbISVgsaeAgIWTWjd\ndiq60/P0MgsiUzlBgb9LueVl8zHaGp3OltFndqpGvghtkIErNyPdXTrJCV9fbUPM\nYj/+y2w17YTCXg/MAdbAijeMyyW/7sKOBUY+eji0+HxjCdxPdj6FM8ZwfQJJTMyg\nHdRf1HNi5a/+NEEM6C8MHJECffbehAJGUhbqWhEoNQIPtVGFkfY=\n=m+2c\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25633229b96ea5933ab3b08400c0a0ebf9c0d445",
          "sha": "25633229b96ea5933ab3b08400c0a0ebf9c0d445",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/25633229b96ea5933ab3b08400c0a0ebf9c0d445"
        }
      ],
      "message": "cmake: Add global compiler and linker flags",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:49Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T10:58:27Z"
      },
      "sha": "696e5bac83fdd344a3f289f8556578f98c5162e4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkzZjJjZDU4NTFkN2NkYzcxOGE0Y2U5MjZmYjVmM2MwY2FlZWU0MmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93f2cd5851d7cdc718a4ce926fb5f3c0caeee42a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/93f2cd5851d7cdc718a4ce926fb5f3c0caeee42a",
      "tree": {
        "sha": "90237e66777171d50f70688dd1454a3561d85698",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90237e66777171d50f70688dd1454a3561d85698"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 90237e66777171d50f70688dd1454a3561d85698\nparent 696e5bac83fdd344a3f289f8556578f98c5162e4\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722860337 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284349 +0100\n\ncmake: Redefine/adjust per-configuration flags\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O30ACgkQQQEIES5+\nqB8ALBAAvJBbGnL9DiGtZfwy7vVDybp2l0YU4BP0VqbK/TrOs0RjoPIZJ1DfPxjl\n/KQr3XByE15ssTCWTSMnsq9KtkHCLqFWYDZdf4cWnF8wcGOqXWD5EE/wKMDD1wiS\nd+NmVKQaLKABIKO3GJhBqTInLjwFPXAt95T6pscXXyjqXezjC5j6HKvjCSX3ZqNt\niy9c2GtJ1jThDJRyosX8dE0s0959XYUD/lGhwalNd3wILpwbyFgqAfCWAdFSjtPi\nwcf1JmrB+GQfhZW1tYHXfxectwSvJgEu9c8fuKtgZjwKtQoNXnFj8/U7y3oKuMeR\nqNjaq6QXtLrSvIGInK8aCwXoz3dPdHPGnVzbeKGJIqy2A8tCseFXU/9xy7Ar7xqq\nY86UkWYmc5q821yNc+IVtvdhOofhyIPtfdo8gqxPm8au32cBxddB5GzTXyGDaP2y\nVIK5wwGjgHuOTNyHw+bBe30nriAmRHxc7rGnqJVZ5VbMwbTsZQRNBBUu0PEVlvzu\nUCNldVk73NLXeLvKHzpxZQ1Nb6aPDRvXPjaoAi2Cr0Wo6lwdhokra6rQvmH0aEKB\nu1RihDRJ0LGPIPCDhH5iHVX7h3iStrEW/OKMgDz5+u/PQM833fqsV2m9scfW48Gl\nocgaFwRphIh03kIJADaVceVCs6823vtPyrW8c8hvxEl5SiqpM9c=\n=4+V2\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/696e5bac83fdd344a3f289f8556578f98c5162e4",
          "sha": "696e5bac83fdd344a3f289f8556578f98c5162e4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/696e5bac83fdd344a3f289f8556578f98c5162e4"
        }
      ],
      "message": "cmake: Redefine/adjust per-configuration flags",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:49Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-05T12:18:57Z"
      },
      "sha": "93f2cd5851d7cdc718a4ce926fb5f3c0caeee42a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAyZGZhNzBmMTJiMzg0ZGI2OTI4ZmIwMWY3YTViMjBiOTYwYmQyZTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02dfa70f12b384db6928fb01f7a5b20b960bd2e0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/02dfa70f12b384db6928fb01f7a5b20b960bd2e0",
      "tree": {
        "sha": "4c9c0050bac02512a385685b1a7f3d050d4dd465",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c9c0050bac02512a385685b1a7f3d050d4dd465"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4c9c0050bac02512a385685b1a7f3d050d4dd465\nparent 93f2cd5851d7cdc718a4ce926fb5f3c0caeee42a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719741725 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284349 +0100\n\ncmake: Add `ccache` support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O30ACgkQQQEIES5+\nqB+O3Q/+NMWGEWSe/E+7O0WSejFHHGBmVxWlo7ljpDDGW0ub7OtsAUBPtQuFRZX0\n9qjFhDWMsKDW2oge1/rBQTX9FTc8hvfRsrTCX5APKbaqypOA0+q/GALb6//hGMxf\nLnxOtWnGFW+ZZxIda7vcp+swkcIf/Dm9K+jJDP8iAptxZ877nEYbiLx/ZWFXi67j\n9OqUoQ+nI6kc7mUik6rMGEMtS0bJWLgw8IYkZiK7soBfs0KQzXy36DMvf6x1wehk\nLYTCit9uoFFhMO4M6EcvdNxc8aapzJlms5rkywPoe1DI+ARchYXc4XPeZxw6VJ+D\nGwqEj3BewhBfwevBuzIIdKel+xETo6fk7kmZ1nZ8tAYhGU/GCdETkaHRKeIv81Ge\nf/TM8hPHzTtgNxH7Bj9+8235DCfbJ/MJ9wGlwvUVpn0dgozfZ17Qy7o7ExExReKT\nOsaSVxEoEIfylV43rhDWAvlRsqCuVGnIviVz7VfjVfMuIJZcoVenZOr2d/ufKAQW\nr6o6vfyaVoZvy9Df+POPk6X0cAtiDvYxlm9NicktK5yNxyhGM2odRNmoQd+0hHd4\n3LpD5ZL6Js0/N2qXdJWjnPFIuzv4fT8N+zgA0uL6nnKPeDtZaYUZ6Ycsp1k3ZMEG\n2lP2Mtt4mCTDLCSh+lzSkUWObyzhUbgG20xAVscqZwl/E8ztLmk=\n=zjtt\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93f2cd5851d7cdc718a4ce926fb5f3c0caeee42a",
          "sha": "93f2cd5851d7cdc718a4ce926fb5f3c0caeee42a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/93f2cd5851d7cdc718a4ce926fb5f3c0caeee42a"
        }
      ],
      "message": "cmake: Add `ccache` support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:49Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-30T10:02:05Z"
      },
      "sha": "02dfa70f12b384db6928fb01f7a5b20b960bd2e0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA2NTc4Nzg2ZWU2ZTQzMjAwMTg1M2NjY2YwYjAzMjNjMzY5ZDNhMTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06578786ee6e432001853cccf0b0323c369d3a14",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/06578786ee6e432001853cccf0b0323c369d3a14",
      "tree": {
        "sha": "31c1c99399baa95a62f9d6dfee856bddc0a7fe4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31c1c99399baa95a62f9d6dfee856bddc0a7fe4b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 31c1c99399baa95a62f9d6dfee856bddc0a7fe4b\nparent 02dfa70f12b384db6928fb01f7a5b20b960bd2e0\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720047876 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284350 +0100\n\ncmake: Build `secp256k1` subtree\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O34ACgkQQQEIES5+\nqB/ykRAAlUj/69GJ2yT8POQiTtUB6il0M5f0rwaZLof088MxNVrC+m3aATzg6gcF\nZ0O+Bz+xkw4eQXSIvM58xtGFtRv/8xLku/cP7qm5VY2yfQ02+afMc2eEUQyw0iK4\nn3GDQvZwEz5UsK1XmC2r36sXBRknC4TsjGeMmZ9D7aJVIu5kFpcQhHG7pSjy9t/e\nlnAVlsr7SGGYjtKkmnLQj4oE1TKJneW3jNhzpG1KimovLrgp5o5vGQZkQLwN//qB\nzf/+gL64rJ3+FdhnGfZoXvvhQtYJ2JQFCDoRXwb58NgwTGDOMdKp/KcAeL3ubzhp\ngq9ZrzFCJOAEtm2FvIOkTl3kORGjeucntec3AOOHPY4/Mb0/rRLsiF6+pOGROYX/\nCBg4BAR087iXj++X8XetqhcqKULqjNqIxL6Mbyo6W/Pi/PKXlfw7ruD5T+UC6CGP\nBM9M6gj5a4hr3ti+tyAK7riG0AxF+hBGTdAguAunzGpAisHxrQXTvWwlsDlg3vrt\nD6i61umvD9DX537aqIJtRKFghh8FS4iJl9nr8XLeiBenPf00h4heWmxjay8VyYmd\nUcV5oujdgb9sECU4k2L0J2slyWJqnFGQkG9zc6GINKQFGCUrDz+YYSrkMNN58H6F\nCSXuD/zZavYMWEZgbMimf+Rjee4naqirhk8KNidxjm4SOLgztec=\n=fsQd\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02dfa70f12b384db6928fb01f7a5b20b960bd2e0",
          "sha": "02dfa70f12b384db6928fb01f7a5b20b960bd2e0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/02dfa70f12b384db6928fb01f7a5b20b960bd2e0"
        }
      ],
      "message": "cmake: Build `secp256k1` subtree",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:50Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:04:36Z"
      },
      "sha": "06578786ee6e432001853cccf0b0323c369d3a14"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA3NDE0YjhkZjIyYmIyMDhhZGM1Y2QzNTQxNTBlZmMyNzVhNWEwNGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07414b8df22bb208adc5cd354150efc275a5a04a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/07414b8df22bb208adc5cd354150efc275a5a04a",
      "tree": {
        "sha": "c806ed7be19163626a8d818965e77584a85aa630",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c806ed7be19163626a8d818965e77584a85aa630"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c806ed7be19163626a8d818965e77584a85aa630\nparent 06578786ee6e432001853cccf0b0323c369d3a14\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720877197 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284350 +0100\n\ncmake: Build `crc32c` static library\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O34ACgkQQQEIES5+\nqB+IDQ//RlVvWYZ9CBwEcJMSQbGBrtDmpCp1d5eqO5h2WuRjRzbQck+gmmEMHx8g\nRVY5uXGUtx9khv7n3hz9cIPAVN96AGOAfl3CMz45OWCT+dcBSRwrz9U5npJYF3yN\nwlrOqfpNw2z0WHws7RrLKa1P4mrRtZdJiFysbAzuoHKHTWtgB6r8l5WJnAZsMlb6\nELOUKRmghZUrBWVAHqR5xdi/reZYFr7F1wUwpaGVeUqOsxCKwN75xrWEd/Mc7Bgl\nOoijXb/hGQPcOOKOPeToblE9CUu26Q8OzD3lrNufAg5t2tNI3htumLqY6tJvxKqO\nvE+h6sDDLUU2/Wq5kNBOjkypVn8yFV+P87mfvH6fHmoLksBlgASTFDqXQi5Pt/G4\naCGUCqMv14sPHPskJxV5yyLjvSHTBSishUdXt5zc9fgb9oblnVnzvxri/yg9XvMg\nZrki9MBqzkLoa+vk8vmMGa2I8DxTp+skvE4G6qnHBq/CikoBi310YeHWVDki2pRx\nRUVbwfQglRbbLuCgwPAwrs8d0ZEq3sijfVkwLWSr4PmIklEyir+f9eP3NkRn7dgV\nkNatI/iXj+V31v4rFe5sZF2MhM69hbgWyteUbyRBgjGLXalJ0h7GyotAkEj+7m6g\nZ+/BDhRUVKtky976ZEbaTBcyONndbaXYMzTsD0xdAt3L4HmlGLo=\n=1Lcu\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06578786ee6e432001853cccf0b0323c369d3a14",
          "sha": "06578786ee6e432001853cccf0b0323c369d3a14",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/06578786ee6e432001853cccf0b0323c369d3a14"
        }
      ],
      "message": "cmake: Build `crc32c` static library",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:50Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-13T13:26:37Z"
      },
      "sha": "07414b8df22bb208adc5cd354150efc275a5a04a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU0ZjZjYmI4YjU2MzMxZTdjOTEyMWE2NmNjMmQ3NDVkOWI4N2U3OWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54f6cbb8b56331e7c9121a66cc2d745d9b87e79c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/54f6cbb8b56331e7c9121a66cc2d745d9b87e79c",
      "tree": {
        "sha": "50a4f42857bf87567438088e777c8bdd2195b10f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50a4f42857bf87567438088e777c8bdd2195b10f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 50a4f42857bf87567438088e777c8bdd2195b10f\nparent 07414b8df22bb208adc5cd354150efc275a5a04a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720049260 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284350 +0100\n\ncmake: Build `leveldb` static library\n\nCo-authored-by: Cory Fields <cory-nospam-@coryfields.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O34ACgkQQQEIES5+\nqB+6Hg/+LdqbjLGmnyXRbiRH6xJOd/ij5/YIFH+/dCPBfzLBlhxV0Ue8cAfd4aDa\nrPWfTwmkOdpRJaU61S860mJzjm23e6pFjbqGkhHCIvrS+cvJe4HbMEpZdfuC62CZ\nLf8WwNMOoqgLZpizPxw3YRhoxUqRPg57RLj1hXqf0f2KmWkCDrXp3dD1uilvNQG0\nJmLqBqpcBzWO9IC/Wq/Tj835dlIXQaBSzlvqs43T7kaAvxafwOzVRI6qUb6gXJAt\nLUVY3NVjDWG9KSCE/Zlh8TzmqtNjXYYfte1byFs7uRkjS9IRXkPsLKcjbiO1+F1C\nd4v3lVyW7LcLr4RZQRq5FXJMbhJiIK9+2Dt6NtIEkIoeEK7IK72hZ7Mn4xus7ZIG\nFJ0FlUkZJtVmmjhn2ReZXKBFmHBppIeTHMqrPehvl/34cLG3ZC0xXVzDJPlHjqaW\ns0vLtjhdEnHHPIlW+Or/+IA1MwqVglUhrS2LowJ4nDfHdCSd3d571W7kjzev6bGw\nDjG7A4/KM7N2IEWx0wjLLKb9yHnyC4QQHsqcWhKthUlkQX+BNDYIkwfQ9f2qOH4W\n3hGX8O0Qzo1e+8jdG0Qmz02Xwv1rCkfxisJ0bjj2YxVf8RtvnXgpAfLw30tS4z+x\nlt1CVbz+jgXokI1in3ZlEgNf4ToGEzCaVIM7JsucL9yIzZwxnnE=\n=fT1M\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07414b8df22bb208adc5cd354150efc275a5a04a",
          "sha": "07414b8df22bb208adc5cd354150efc275a5a04a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/07414b8df22bb208adc5cd354150efc275a5a04a"
        }
      ],
      "message": "cmake: Build `leveldb` static library\n\nCo-authored-by: Cory Fields <cory-nospam-@coryfields.com>",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:50Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:27:40Z"
      },
      "sha": "54f6cbb8b56331e7c9121a66cc2d745d9b87e79c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIxZmI0YmFkODg3MjY0NmM1YzRlMDBhYmY4Y2U2ZTQ5NDY1NmYyMGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1fb4bad8872646c5c4e00abf8ce6e494656f20d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b1fb4bad8872646c5c4e00abf8ce6e494656f20d",
      "tree": {
        "sha": "c2720ed7b459984da0a329c4f0c6d05abe15c96e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c2720ed7b459984da0a329c4f0c6d05abe15c96e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c2720ed7b459984da0a329c4f0c6d05abe15c96e\nparent 54f6cbb8b56331e7c9121a66cc2d745d9b87e79c\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720049373 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284350 +0100\n\ncmake: Build `minisketch` static library\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O34ACgkQQQEIES5+\nqB+hYRAAqvvolBqgsfyZpxfR6w1I1B1VaQryhnMF8tsfXiZoqu9rupMDmFdM/Ftf\n51YmGxZrScZPl84d7XTLZX7zslbr96V8OmOXrvITBxdmJ+X/ipCamVdgN917rajX\nnqQRooaHWhvEzh5FDZ46/l6ooMHh0QPIsJhGmzbQmygzILeN2GXGmhpnK8MaSwut\nzxL47pwv4/lW6Hi9cK+DCUzMUNxZ21Pqveq1RFVDxC1QoQJ3PvgCVIwzBUnP8fMu\nlx02qcQa4cHpfN3rL0HSytiqimfzlrqGbSB6QDbsbIkPIIUhd2vf7nG1oYWGbuxC\nR4ckPI15BUn2P0kRaalZ346zisrnoSU/jBGNCyawo8DefWjLuDx3W8HgBTLydEbC\nKhotUXpEag/ctHuQozFuoLaMo2dZfRFM6htIT49JZvD4oQOpeTXiS0Bbv0zDTNxz\nLolQdscvlTQ1i/1r+n/TmZgcnJvGqJIsjhdrljFDklTseVG7LpX+6kBWXqnrsQyS\nG8zpxw1J208D4GSD5txsJvGVyLC4EjximnDn13rEVQzGC9+SS66hTaqrbOOFOhjM\nHt9I2MZF3trLd2NK54roghrsrWSbyTzWI53rbY0K31jp0EtuXqOOlw/fDp2BsMWo\n+W2giFLhanAiumJ0Y8VgzFQHh00s9lBi3LVXMOc5KDG6RE9gVqg=\n=V7Qv\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54f6cbb8b56331e7c9121a66cc2d745d9b87e79c",
          "sha": "54f6cbb8b56331e7c9121a66cc2d745d9b87e79c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/54f6cbb8b56331e7c9121a66cc2d745d9b87e79c"
        }
      ],
      "message": "cmake: Build `minisketch` static library",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:50Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:29:33Z"
      },
      "sha": "b1fb4bad8872646c5c4e00abf8ce6e494656f20d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk3ZmNmMzM3M2I1M2E4MjI3MDE3ZDJhNjdlZmNkZjdjNWY2NmE1YjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97fcf3373b53a8227017d2a67efcdf7c5f66a5b2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/97fcf3373b53a8227017d2a67efcdf7c5f66a5b2",
      "tree": {
        "sha": "1db55aa34c2d9c61585254f05f6c0763f3db45eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1db55aa34c2d9c61585254f05f6c0763f3db45eb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1db55aa34c2d9c61585254f05f6c0763f3db45eb\nparent b1fb4bad8872646c5c4e00abf8ce6e494656f20d\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722964913 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284350 +0100\n\ncmake: Generate `obj/build.h` header\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O34ACgkQQQEIES5+\nqB+J1w/+NHRdPjs8+fzMwRdvkAQ4t4FfrW+CTvAbRee1HW1OhCB0bATa8qW2xwyO\nIv4IF8LHqTIoZrUG1Ygf6u6Ryu0K4E6Edtrh1vm3MwNZw9tHAgLFcch7FH/S6QdH\n+2fYnmLFwG+8jmkfawbpiRaX+dcd4b20JJlNvXkvBZk0vD66b4Hhv/eaLQiv1zEA\n228T6oTWNk1chQWdkSjCNXIWbb05BzYTW8tVkUgBnG/R5tUd3mNBhhOjFZ0Rp/bs\nqXhADecbrIMdXApEsVXv9qK+h73wCRNYPBh9ZlJo0cK9otyO6pQgH+JGvHDiYyhs\nHwmf1yMtbNF+y9WKQI32E/WAkenVyTzYKITdsqBEh7ts0NPJbnqfzOTYicvY865c\nlcBQTHV6tDupoHK+0DlxIQjMDIJneipv5NWuSN4FE88Z6EjJcCjoXHEbzhsxrr3R\n8XPRTv/e5BUFYQGSj7W2S570vp6j3FNAQTmwKTwVGokwOr9G5quLvV5y6nhnbLoy\nl+I+toMhrt0bKNGXT9VWVoYqQG3/rVRzVU1e24aERKDOMyp+uoQn8mw+qXbSJEQP\nALadOZ07JQMDLlxR60meiKoBRaMwWNacad4I9FNEE7Ht6l5Lkjqn1ZbLxgcGrkLz\n+F3SSPpTrAbhIlzITnbvUYbKCWr2QN+HgDTvpCgBR353fa2tmGo=\n=LI8O\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1fb4bad8872646c5c4e00abf8ce6e494656f20d",
          "sha": "b1fb4bad8872646c5c4e00abf8ce6e494656f20d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b1fb4bad8872646c5c4e00abf8ce6e494656f20d"
        }
      ],
      "message": "cmake: Generate `obj/build.h` header",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:50Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-06T17:21:53Z"
      },
      "sha": "97fcf3373b53a8227017d2a67efcdf7c5f66a5b2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAxODU5YzE5ODk4OTgzMTk0NTdhZDUyMTAzM2UwNTA0OGVmY2RjYjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01859c1989898319457ad521033e05048efcdcb2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/01859c1989898319457ad521033e05048efcdcb2",
      "tree": {
        "sha": "129e0ed4173763b4ad789f552b80a4709bc5cc57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/129e0ed4173763b4ad789f552b80a4709bc5cc57"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 129e0ed4173763b4ad789f552b80a4709bc5cc57\nparent 97fcf3373b53a8227017d2a67efcdf7c5f66a5b2\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1704823258 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284351 +0100\n\ncmake: Build `univalue` static library\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O38ACgkQQQEIES5+\nqB9pfA/8Chb0idMrfOFLGNXPMKsvOyg956w+iovMJTPXOX2FHbhQYnao7t9X+H05\nd3vAvldqVfl0jO+YLuRQDC11SHhIPOgIB4CfF5SU1RV/MPfvhEZuRGkIfLpb49gX\nM+bCGx6Vzd2+Dlyv6I/ob6UHahfZY1Gc2Sybt4YhSATc6XVtHoU9XQmrOwhGEadp\n6jJM7auHD7z3vXGA9MFwksCq5uxRoMmQfY0wzDHcnRgAbuS9YJ1Eomzwd4Mv3GPb\nhbDZVFnO/u7dYBlIas6Henve90fVH3CovaM+cWfB2HuEGSXqDqdBPAjVhS145bP/\ntXFhryfHYDUN32NzmFao6g9UkSp8GFNO4L2WkaClpIYdMh1vUXjJU6G0CkQNOWfb\nfMCsTGI9nT27yBXVS09jBB/9pRd5D1Ps6eRmWnaqVuPGL2K3wV+cwqE1FTUw7IPX\n+pCqXOEz0mdJ1LJ5EOt52nHYBugRMtnXdWi3/rTHAuC5rqGzm4K9IYM0sVppxHip\nlngsUnvbzvWzPQbkkEwCX/UGSXoi0dj/LyU9OIJBUBCauFch0nh94RqSNqQS9uvm\naMke9f9n2cfDWOsrqaqqjAqIEtpd3QrFvu9XnHp3oNW9b77uBwxM07h+c3PUB27Z\nJewqC6MhtZIkmwdwcyUQtoSKOSpgoOfKGYhckKJQmFAHV+TSsk4=\n=gxjh\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97fcf3373b53a8227017d2a67efcdf7c5f66a5b2",
          "sha": "97fcf3373b53a8227017d2a67efcdf7c5f66a5b2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/97fcf3373b53a8227017d2a67efcdf7c5f66a5b2"
        }
      ],
      "message": "cmake: Build `univalue` static library",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:51Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-01-09T18:00:58Z"
      },
      "sha": "01859c1989898319457ad521033e05048efcdcb2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZkNmMxZDMzMDBhZTQ0NTIxM2U4NjY1ZDY2NzZkZGE2MTZmZTU2OTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d6c1d3300ae445213e8665d6676dda616fe5696",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6d6c1d3300ae445213e8665d6676dda616fe5696",
      "tree": {
        "sha": "18f6ea5c2e0eb14e2a8b63ca12b5b34ab17931fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/18f6ea5c2e0eb14e2a8b63ca12b5b34ab17931fd"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 18f6ea5c2e0eb14e2a8b63ca12b5b34ab17931fd\nparent 01859c1989898319457ad521033e05048efcdcb2\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721822679 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284351 +0100\n\ncmake: Build `bitcoin_crypto` library\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O38ACgkQQQEIES5+\nqB+aew/6Ap3GDyRPtOXiHSVZzGaXkvMbp/sU2f3QzLjzkGn+pjzrbl0QggCfJlzo\nBkQlOL6HnnW4gaRyQI4c33gOnJPZwxKKZCj9SwTngKpxQlITZlEgojFL3fAwHZum\nBQieICewS3EWmQxCb9qfVlzsmxq/N/Wv3eQOLcIO3DW3PHos6uqdABsLkyecjje4\noeGf64pM+acsUpwGK2Ar7pFw8SUWiiqqlHl/+yhYsV1YRKRqQvuqwHCizry8a4hE\nclMrRYcUHZeiZ4v/6ywLNP8HLPq60VgFJsW/RwjVux7RhzIh+Nr7sQ4n9vAgp5+B\nazyER8TC8N7nB0FDgx7e+erbqZeGlALwt99ZNg+cmyZs8rce+MmqzymrrMUasQ9D\n+JrcFFQ0oTLjQSjCr/yH9HgLVVAVDKYFmPJKNxfGz/EVXcRXBPEmPhv6SnRBL4XX\nflih60AZyDJTOPX3ADLyvJXDRU4g+4zY0HCe4b5U4LHk9eXlRKvTmg7rMW0vgVjq\nccbnprxhNXBAPCow4zF39rJjEFBlCSJQl6vsXqw+WKdiO6UqCjkcpOSpoPfv7WKH\noxU5bSKn3MzEmq+1XlVrkCTMu8R3CBjtL/SL8a55s5eeeowFPfAmWjWvPH2H+X/K\nAHURhPVpcKapZRB8T/3VYfqR6XvdX7C2aBovISDXxvflByx9Szw=\n=5eUY\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01859c1989898319457ad521033e05048efcdcb2",
          "sha": "01859c1989898319457ad521033e05048efcdcb2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/01859c1989898319457ad521033e05048efcdcb2"
        }
      ],
      "message": "cmake: Build `bitcoin_crypto` library",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:51Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T12:04:39Z"
      },
      "sha": "6d6c1d3300ae445213e8665d6676dda616fe5696"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM2ODYzOWUzMGY1ZjZmZDhmMDEyMTBjOGM5ZjQ0ZmFiNDIxNjg0MDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/368639e30f5f6fd8f01210c8c9f44fab42168400",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/368639e30f5f6fd8f01210c8c9f44fab42168400",
      "tree": {
        "sha": "5b52f291e2d6945d24256150060b08ae2415c020",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b52f291e2d6945d24256150060b08ae2415c020"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5b52f291e2d6945d24256150060b08ae2415c020\nparent 6d6c1d3300ae445213e8665d6676dda616fe5696\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719740066 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284351 +0100\n\ncmake: Build `bitcoin_util` static library\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O38ACgkQQQEIES5+\nqB+PXxAAhU2eVKDLbcg+gzWtRJfQsRadwmTVMLwGlx07+Drd+wfRZyPUd15yItxU\na2iLoZWGz7UaRtUhVdHq+lCBlxJx7OM4HSGKO9txdocvQ3rVVdgbpkpgIzR+jR+y\n6YAsRqUtyD/6MfTHF/DpCvCWQ51dH21pFd9o9q6QAVUxFC5NRPLZUDS9tFvB4tYw\nzpSTHR8eXticiPpsS9Jk8T/Vp862Lc0AvOurXdfH6EdlfbqbyaRtqI7sI3Cfk+I4\nAqmjG3KnL95QFWkCT6Rayb4DFfUFnI4DUX8FKBb+vAOgozHVLThIL8fUKlktBhPD\np7HSrQJD5L6r4J33FK6+zjgxh9Wx3EKwZXUmCb+AJNBOYpXAJE9x4iPqcW8C32aQ\nYnRP/1pmWkFUnjBpHtqHFUcV8wNW3NlZow0yX2tWGL6v9NwJXMdsaWEA45dyj5Zt\nlYz5t0nU73zhlAWNYUtbCqZ6kVvVqXBQseGgd5mZ5lZLqob03Kwsx1TmTY5/eRZZ\nJ12L+rJzVy/E+Vb6mNGqqyBJ56i5H6SWPqSNr1X6ukVfdlM/pIKWdQvU+VpYN8BV\nB2uHuK9FWu23ypK/nzsdYN5wstLXecPpJIK3u2t8AOrlNOwWUywkQtw/ldkttLmB\ngYupjY3DQAc4/uc8dwOpBpZRqAlpPwMjqeVVyeXvMiaaRt6U7JA=\n=9qsW\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d6c1d3300ae445213e8665d6676dda616fe5696",
          "sha": "6d6c1d3300ae445213e8665d6676dda616fe5696",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6d6c1d3300ae445213e8665d6676dda616fe5696"
        }
      ],
      "message": "cmake: Build `bitcoin_util` static library",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:51Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-30T09:34:26Z"
      },
      "sha": "368639e30f5f6fd8f01210c8c9f44fab42168400"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU3MDkxMzc1NTkyNzQzZmYzOGYyMzJkMTJiMGM2YTdhYWZlZGNkM2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57091375592743ff38f232d12b0c6a7aafedcd3e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/57091375592743ff38f232d12b0c6a7aafedcd3e",
      "tree": {
        "sha": "ba474d7fa9c58b31d20d85d64108c806f4a12f8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba474d7fa9c58b31d20d85d64108c806f4a12f8f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ba474d7fa9c58b31d20d85d64108c806f4a12f8f\nparent 368639e30f5f6fd8f01210c8c9f44fab42168400\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719740810 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284351 +0100\n\ncmake: Build `bitcoin_consensus` library\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O38ACgkQQQEIES5+\nqB8NIhAAtqJzKUDo6op9e7pznr3fQUe7U7V6WoLYYibpvbXk0f2pzoAUol1o4E9N\n2+iJirJuiM9LBMd5xpu3u0KKNls5hROiLyL/XpHglzK0SNRZHxuUXTPbbo+kYLvJ\nzuVp3vf14xG6UQbKK9DOXy7Uqj2LqYViMDJN0sdgzhixrNdodUzI2JgSrjmxu2NV\nefeGSmc/vFw1j2mVXm75vsGnzoy1y/PpAHoFmGraH3PaeJmrLoC5KWSsUd6+DQL9\nXntaPdmTnqeZPLMVJdnJkyBmQZHRvOux/tGpFipGRduUEcuxY86MoQAfP7f7h2tc\n9Uajg5fQ0q9zdK1cqpeefjWtiepBcrCCMrHFsg7RlDYbF7UDmgFxdTshAtsGU1SI\nsJ+bu47S9/OWoAdxowW9ZSymzqy7/l0C58J/OSA074ZNkxYH8s5KWL1aUSsSxpky\n2rcI8u9l5oUL2wjjZfKL0+DfPKRox4ocCJpK6YrpzN53R0dRHMv9idTBHJbl2siz\njAyABDcPQc1BUC5TRPJU4aSABBMoDoKKhS71xTw8rX+8EXFReSeASI5UYXfbOM+S\n2gigG7Q976IU7pI5OyjrPyxQMIumeal41G6B99b1tFwRl5G8Fir8RpqfMuTSnH6Z\nGTLVPkCsyT+ULKzvybkBiUlfCX/XqOiTIcPheadlYjtZ1NMaD08=\n=AyJr\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/368639e30f5f6fd8f01210c8c9f44fab42168400",
          "sha": "368639e30f5f6fd8f01210c8c9f44fab42168400",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/368639e30f5f6fd8f01210c8c9f44fab42168400"
        }
      ],
      "message": "cmake: Build `bitcoin_consensus` library",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:51Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-30T09:46:50Z"
      },
      "sha": "57091375592743ff38f232d12b0c6a7aafedcd3e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ5ZWJjNjUyNDgwNzI1NTU3ZTkyOTgwNTBmNTk1ZmRlNzQ5ZTMyMjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49ebc652480725557e9298050f595fde749e3220",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/49ebc652480725557e9298050f595fde749e3220",
      "tree": {
        "sha": "6cbb7363e153fed3094a48463f36d1373bdc66c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6cbb7363e153fed3094a48463f36d1373bdc66c4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6cbb7363e153fed3094a48463f36d1373bdc66c4\nparent 57091375592743ff38f232d12b0c6a7aafedcd3e\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721822803 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284351 +0100\n\ncmake: Add `FindLibevent` module\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O38ACgkQQQEIES5+\nqB8CZQ/6Ahm82YeZ4e9PPGHyjr3n+/qmW/Q+Yw1lQx5SkZf9YrtJNfd9uKYnkep+\nX21ds2p6ncttBxiaIQzdcbdDfdRfzBUvQxULaHBfVI4ZzxxpvZLWzTkoTMqpawbw\nJCvnMYuJjA9FfXeZUl1fhRZiuZDPwzEOoH5z5HsriBqJCZrSL5oE3MXP0LAZ+uVA\ny+mBdYkIJp1LZX+dUf7NzDC+2dM08LuvhqCVwdMjpwSzvya5ffplkyndoR8a5Zfu\npE8kMbJ4BIl7Bx3X+vFBOKfbVOnSKwlvwZX4L+yczxhuXu1MOF3ju2056Q6eXc0O\nQDoSRQ4EkVMVjI38+yLXs03OlOUZAoJhEOxl2fqmtOwsmGwYj8B75JLWZUWKACLy\n/RuBxIBmKA7ftW+Xb0a0QXZAuzcJHVKXQGnyJqpMDQndbjDiYcudL7iKMNrNN+CC\n/bkY0+ufxgb7NBdsl+uztUTIKNC9BRNYbDb7w442KVI4m0NDVg4dM7gRTFQbjacP\nkSK77flpUkBhBCMG11v9eg/EXF0+LXvT/awF7EIJrcf/SJHvUQhTRz1ch4/U7Tqy\ndrfWUjiE/N8FsqYnIy/QZgFV76TPueYsMdXvpTV3nhCoabje9+QBVVgVAKCMLRix\nYYLVoTRUrsyUdAfRc3tXyogAt6dwVndNvbJZAclRMM9ImKk8sXc=\n=3JFd\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57091375592743ff38f232d12b0c6a7aafedcd3e",
          "sha": "57091375592743ff38f232d12b0c6a7aafedcd3e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/57091375592743ff38f232d12b0c6a7aafedcd3e"
        }
      ],
      "message": "cmake: Add `FindLibevent` module",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:51Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T12:06:43Z"
      },
      "sha": "49ebc652480725557e9298050f595fde749e3220"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDczOGM0OTlkYmNkYWQzNDM5NjRlNTU3OWVjMjRlMDU0NTQzYTk5MzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/738c499dbcdad343964e5579ec24e054543a9936",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/738c499dbcdad343964e5579ec24e054543a9936",
      "tree": {
        "sha": "31192ce4d822e067be42dc2df473078a3e41b6ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31192ce4d822e067be42dc2df473078a3e41b6ed"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 31192ce4d822e067be42dc2df473078a3e41b6ed\nparent 49ebc652480725557e9298050f595fde749e3220\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720870772 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284351 +0100\n\ncmake: Build `bitcoind` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O38ACgkQQQEIES5+\nqB95EQ//f5uGzr+oDtE08LcU5O5phPKAyYzVRjdMmyG2ClP4YMOXBeI+yFpIoZ+f\nhOb/ALz3pyuJ4m4YRIdrIsoMBoujEBHPael6eaJ6oB7WwfnhEM8BXl9cjtqtcS2G\nsKdYz7NtZAEv9GxAL3YuoLLIP3neIeiReutTIL4NE8q5x5P+29vPpGfEF6jeQ8IY\nw2bhQm8bFlj1ycXNmlR+qV9zgfEmgNcJw4ZHHtcJ6I9Aj01Y3PiZQ7A02yl88MQk\nB3liZVb9BvyIYo4+WUew+ciDMsvUtCggJOI9PuJMvQyw28ozXbEqvAeTBEG2bKjO\n1IIDZa5CNO1Un4fVQGtXNYWdbZWDWGhXrm0QTgjW3B3fSNQRQPe0XMsuEeqK1azd\nAd5zcSSA9g2jjzuwHYemA+cCCd+S0rxYmoqm61c4dksNZMmMNVdVljl8USC+qq7m\neccHW8A2FHEd7U+WNb2EPxHGdnLuBr39Dz8mJXZl8KI0Nw3MGNDTOVrqO6GvuyyX\nZFUuabav46OV50R5ZiAuBLVS46UXU2WXdpZKLBbdk2/0zOTsigG9mQ3sdadLhqV8\nGtB88bAYq11UjLLANkeTeUy2N/sv8LV5JICDbIhlH/0bP/OzjsmUeUh2nnGKHCII\nHfm9PEyo2FSE/aUEfJypEmtqqekta9gPCeUmeH2y6t8DZJKqm4U=\n=9kjd\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49ebc652480725557e9298050f595fde749e3220",
          "sha": "49ebc652480725557e9298050f595fde749e3220",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/49ebc652480725557e9298050f595fde749e3220"
        }
      ],
      "message": "cmake: Build `bitcoind` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:51Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-13T11:39:32Z"
      },
      "sha": "738c499dbcdad343964e5579ec24e054543a9936"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZkZDBjMTFjM2M0Y2E2MjA4ZjBkMWJlN2RlMGFiZjFiMjcwMmU1NWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fdd0c11c3c4ca6208f0d1be7de0abf1b2702e55c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fdd0c11c3c4ca6208f0d1be7de0abf1b2702e55c",
      "tree": {
        "sha": "8752747d83b8b588c9d285c39528d0ab57acd90e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8752747d83b8b588c9d285c39528d0ab57acd90e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8752747d83b8b588c9d285c39528d0ab57acd90e\nparent 738c499dbcdad343964e5579ec24e054543a9936\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1716235846 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284352 +0100\n\ncmake: Build `bitcoin-cli` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O4AACgkQQQEIES5+\nqB/iZA//ZcaRcPLUhz6DUsEyJRRrCgRTbcC9YC0BvgwL/yZ5Zi0+oJwhklWFAE+z\n+eyJEMnEvaDszCjJh1ymnJZEkOm9GX4IFax7YVOwvu2tk+GxZRQPwuD005icbpJx\nbBYQGF5ZILU2md0Nc4EIgkGhMkPrAK52sWMyVyt87v7RoNJFWIPWBpSUwbBKi49p\nMFIjOp5WaOIOgI7JBzqHWAjrQAHoyKDquItENeR0FsIp2TY+ZB+32JwGxhFlnaxK\nS0Xh8Bn/GIRQ630f908BsSV7Nsq7p6UrotImYhki6g5x5HSxKL2GCegImn9Mlsyo\n1kjZ3YeShejEGGZsnWwCm4N+xdtIRNh3PWnAbgWAABb3MQcUf5QrdhhvkEbQDMp2\nKfPxFagzPRSNKvYlEy7NIh6BQWxM3/DMqcPEFSkGplG7aWxFn9ljpzlZUvMYk969\nMsB5M67SwYHZwnCAHXP8d/mjjy9mK4wbJJfS3hMKUiLwn7ioW12HmGlI/4HOOUjz\nOoVTvog47B1engLq/3R61n012sEgpldhF5tVqhi5MP/KZERUEkRoPqrtzNBHhpDK\nQqfhwIdPNyDH11vS3SWYJVGvKHI/r5IyqS9n724itt/PHf7//Q4+Tl6zac3noHsJ\nHhvWg7Bmm7n/+lcP2z07GgOL73e9Jit0F81s8GB25r9XhZPqZKo=\n=Z2G7\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/738c499dbcdad343964e5579ec24e054543a9936",
          "sha": "738c499dbcdad343964e5579ec24e054543a9936",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/738c499dbcdad343964e5579ec24e054543a9936"
        }
      ],
      "message": "cmake: Build `bitcoin-cli` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:05:52Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-05-20T20:10:46Z"
      },
      "sha": "fdd0c11c3c4ca6208f0d1be7de0abf1b2702e55c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRlM2IzYzllZTE1NDM5NzMzYWI3NDMyM2Y0MDk3MmYyYjg0MGViMmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de3b3c9ee15439733ab74323f40972f2b840eb2c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/de3b3c9ee15439733ab74323f40972f2b840eb2c",
      "tree": {
        "sha": "50a86003ef3565a0178b5a428d5db76598e9b44d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50a86003ef3565a0178b5a428d5db76598e9b44d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 50a86003ef3565a0178b5a428d5db76598e9b44d\nparent fdd0c11c3c4ca6208f0d1be7de0abf1b2702e55c\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284396 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284396 +0100\n\ncmake: Build `test_bitcoin` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O6wACgkQQQEIES5+\nqB+LMxAAg6fpxAHpKAiOlJxphPvsvpF1o8eHavbR89ZgvWwXheBfZ7inJe2Q1+gk\n6hZl4d3rS0Gv6yzZV1Z297W/sVOYspunQoPtfMKPQImrViwCojWFDcwh0lSM1Q1m\n5QP3IOm2ZBClC4HfdvebSFmQ0t4BjzycPXnlXR0EDTJHIflOmiiPi3TtcZ1cijKN\nOhvJSQdv9trqwYREH1gjScoDmp8cj2bAvdEdnehl2EOBXdifDMnrrAeAaQY6yqpQ\njS18ufJGlVrAdOy+JV5WX58RDbCnHCoNgePZKYg2X7Di07D/e0HWwCKVXofo+z5D\nXdVzStzKVwTWEkwZus5D/jvx9PATaGWCwPgx/fGKB/2fb9w1yCkU+dXzMqasysIO\ncs642YK+v4F6bwXFMuJ1PeUT6nfYRHFM6uxXIaxpZZdmcQNW+6gmPmAvsgUC4uiY\n8yFJdZilcGCHqKJA/h7OncdFLXO3n1M/ErcL/vjLv/hSSFfoJQ16nvXEqdPyX7dJ\nj25aD5BuJ9hXLNn4qQQ99JncOfSNrdhCcZb1K0DNiPXc04cEaIpL3uQETryB1mkz\ntrXyUZMr7scbEzBeO7XTWESGpJOiCRoYNdl4xqmkx9mWPM8squ9VjicLnxDD+W2t\nErzX2yCAoSqqICxvqI+gTiUOQnEjZWQTTXUluN2IBbxRtuYVb4A=\n=zmDf\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fdd0c11c3c4ca6208f0d1be7de0abf1b2702e55c",
          "sha": "fdd0c11c3c4ca6208f0d1be7de0abf1b2702e55c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fdd0c11c3c4ca6208f0d1be7de0abf1b2702e55c"
        }
      ],
      "message": "cmake: Build `test_bitcoin` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:36Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:36Z"
      },
      "sha": "de3b3c9ee15439733ab74323f40972f2b840eb2c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY4MDVkMzc1NjMyN2I2NmZiNGQ4YjJkYmU5MGY4Zjc4ZGM1OTU3MWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f805d3756327b66fb4d8b2dbe90f8f78dc59571a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f805d3756327b66fb4d8b2dbe90f8f78dc59571a",
      "tree": {
        "sha": "6a9a0293178897225b213d64cb73b4bd3b3e0eb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a9a0293178897225b213d64cb73b4bd3b3e0eb6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6a9a0293178897225b213d64cb73b4bd3b3e0eb6\nparent de3b3c9ee15439733ab74323f40972f2b840eb2c\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721820490 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284400 +0100\n\ncmake: Create test suite for `ctest`\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7AACgkQQQEIES5+\nqB9wjA//RMQvwkOGgwKyD68UobCFT1zxiG0sdBVW/L039Y5PAipM3Dsab5lKxieS\ny+vdN9tCwE/pimtE01dzVIrgTw2+6cdZT/IBBZtFJUlZHPVdlSGgvpywrn1BS0BC\nrH1L1eKBJlHTh7JMTcPs1WdGIqb/l8eWhJ0Tj8Y50XJGN91Ca+s+17y5lQQyiCJo\ns7dMs+mgzCXPcp95ydwY8KavTYj208uNxoorTAldIIEOtJK9eXqMn7zfezewwDbG\nS/JX3AA9wY9FZe3qWG6L0HrTzB4XGgs0aj3fukSsouVRpMwvODYsNkD5kU0g5GYE\nLpZQPhMiDPh+ns9Nt0KYj7wuA2Nh3m0SV4B6nbTCPorSBEKj8QkzKh6pAq5ZTZd8\n1AxzKAAgs/W2uBNmndQaY3Y2Wzmzf96sBDM3ihny4UB47fIVWG8rjZLxPiXGA+Lz\nPCdb3ip/FHfIRJSpeBuzy0eIHgAEI0jQYkxN8vp807ztE9V6udckN0tsNMLoQIWP\nDaE0hkBLYQ9nTcdD8lWxbm+rtXS0+3XI9IrZqhy+pt5PnoqyzwcI6LUAulnP/O0A\nlsv9azM+41/R6EoHWH0YrkWm6J5kyKh/QpGq+LuLyYSsy+QaCNZ45QR7+e0ZuFV7\nqBuTzpaqsLkaBxjywQZtoeLbd0kRbV/G5WABN/01Q6Wpnk+RGwM=\n=duBq\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de3b3c9ee15439733ab74323f40972f2b840eb2c",
          "sha": "de3b3c9ee15439733ab74323f40972f2b840eb2c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/de3b3c9ee15439733ab74323f40972f2b840eb2c"
        }
      ],
      "message": "cmake: Create test suite for `ctest`",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:40Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T11:28:10Z"
      },
      "sha": "f805d3756327b66fb4d8b2dbe90f8f78dc59571a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk3ZGJkNmNiOGYyN2VhNjg4MzUyZGQxNTQwMzE4MWMwMTMwNzEzYzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97dbd6cb8f27ea688352dd15403181c0130713c4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/97dbd6cb8f27ea688352dd15403181c0130713c4",
      "tree": {
        "sha": "c4e577dcd66e9640ba8eeabee8e7246c1b0aace9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c4e577dcd66e9640ba8eeabee8e7246c1b0aace9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c4e577dcd66e9640ba8eeabee8e7246c1b0aace9\nparent f805d3756327b66fb4d8b2dbe90f8f78dc59571a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721822015 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284400 +0100\n\ncmake: Add wallet functionality\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7AACgkQQQEIES5+\nqB9OFg//c+gRkHz7ihiMaTPSYg7lsxVGPfA0iRJWlE1zManqtF3AczEuBw6mFutA\nmPUbqImloTV8x5BWbt3wC0sE3Bmlx7+jhA5CqndeAtu6z6/i+Yl+7333/antY/4M\nGFnFiJIPEEuyNXRuKSpgOe44lQ+b/FyDnoX/NnAuqcEpx+g2Hyt09RTFrrbYNEjU\nrh0Y6svug7A78juyI0nG86yzaaiP3POSArARK4DtDfZn9gfYliAlkgFxewaWuhfh\nwDUmxYZTMmNdKJUZUUlkJFUpDutjsK4C4j/iMh552snIfnX+3H6gomAc8yms1MHo\n9suRdD5EpgNydCWyL0iAo7dPTOyTlelAz7+m+hw0Qy0+BjaCuKzSi0p4hJZmhmJ5\nFNmzIXqcK/jxzFMQrCbuekumNZn5vuYJPPj2UFC6HAjHLlBorRv4Psj81SovcqpF\nFU7AMSnidRZs+vn8lmWGp0QlKVdQ0Rtym3Ptf9NJEcCzyoN1HIt9unAUpJHIVOqc\nEJuXVZrdoj3xyUJcp2blCKNFKijRhol4HAcIXWlYFpzsqRhdcTy13a3+cvDuzlnH\ntfORo5cyo7L9f+4fY+j6AENQtTL1wWfo8amAHzyXBcRYYP9ypkkjkZbr66oxGlCq\nepMfVVheirA6MSbg4yU3pbRdUcpehdzINR32rKd8ioyhXvjRXi8=\n=Utqd\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f805d3756327b66fb4d8b2dbe90f8f78dc59571a",
          "sha": "f805d3756327b66fb4d8b2dbe90f8f78dc59571a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f805d3756327b66fb4d8b2dbe90f8f78dc59571a"
        }
      ],
      "message": "cmake: Add wallet functionality",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:40Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T11:53:35Z"
      },
      "sha": "97dbd6cb8f27ea688352dd15403181c0130713c4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE2NjYzY2MyMmM1NjlmNjU1OTdiNjUwYTllZWEzMzM4ZTYxYTUxZDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16663cc22c569f65597b650a9eea3338e61a51d2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/16663cc22c569f65597b650a9eea3338e61a51d2",
      "tree": {
        "sha": "2639e5f7a663ddf757805fe497385f2874b4c495",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2639e5f7a663ddf757805fe497385f2874b4c495"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2639e5f7a663ddf757805fe497385f2874b4c495\nparent 97dbd6cb8f27ea688352dd15403181c0130713c4\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719747617 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284401 +0100\n\ncmake: Build `bitcoin-tx` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7EACgkQQQEIES5+\nqB9G0g/9EOD2PNEdbQKzOB3X0MWMsHmxz2NJgTeUqHNXYFrw8hBk3Dstyk2VloPH\n7F4CsGkCkFXoxGDkddd+J7Wh0CqLX2oKSmyVZ3jI6RTzEiqpbNE/FXJFX2LyOrxN\nFZPL32+dn+zFGpvBGzsayYzp5iTgrSIOL8SdSz5Nu6wDcU1Ehv6vGZWgqpzPx2v4\nEys3ta29Ns1cuHvLPL7JYMNkSslFG63//6SCaC/qhzLu2kbWx1D90zBE/eMC6TM3\nZLgd68FvJ0dm2IBfFjobOQN0Zw+1vrMPKtaSOK6wSS7c+R0wKP+i5LqZHUFsH04D\ntXXmRAMJDM1CzIaOUEomdhmmOsmg74LoGrrLj60bXjpweFu48TZV0hqf8HkACEc5\nKcRP3a6TBzhCZWpT0cD0R9cxi0o5VGjBSDCKmv+bHvnQK3xKgjyBtPs3oQy/AWGX\n5cH5j4sFcvm9uj7HMnSb+Ii/1H74hEoFRNYEpKcHyQ069UHNRusOC/hrW195111c\n7LXt+I670C+ksFtMmq8GxzRBDJQTvZ+e26dmL2RsC3KRZllMBPnwVOknh1heEMCB\n9Sw9u1RnQOEo83hdjycCeqa/lc2BBrLEcUb1WtGZ3tGy5pDkj+RcJ1scb2E9p+Pf\nkEQ+nrAtqP4CiM5DfeOyfbBYL10uXT6DmLEA95XnvBzwlsQ5Uj8=\n=1Omr\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97dbd6cb8f27ea688352dd15403181c0130713c4",
          "sha": "97dbd6cb8f27ea688352dd15403181c0130713c4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/97dbd6cb8f27ea688352dd15403181c0130713c4"
        }
      ],
      "message": "cmake: Build `bitcoin-tx` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:41Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-30T11:40:17Z"
      },
      "sha": "16663cc22c569f65597b650a9eea3338e61a51d2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAwYTU5MzdhYzE4OWNlODdmNmZmZmMxZmI0ZTg5MzA0MzQ5NjY5YTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00a5937ac189ce87f6fffc1fb4e89304349669a4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/00a5937ac189ce87f6fffc1fb4e89304349669a4",
      "tree": {
        "sha": "020725d7e56d9e9d9ca0b741b940a2e28a311ad4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/020725d7e56d9e9d9ca0b741b940a2e28a311ad4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 020725d7e56d9e9d9ca0b741b940a2e28a311ad4\nparent 16663cc22c569f65597b650a9eea3338e61a51d2\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1704832491 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284401 +0100\n\ncmake: Build `bitcoin-util` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7EACgkQQQEIES5+\nqB9GPg/9GNGhs4N0Eq8ibTdXC2yN6aqrNo/x79fX4hCALt5RutbeUSuuCYdvTk2y\nMIcF5WUMFB3FQoZdZPP7/LJ5EIK3+vddR7KLAac9T8AFWIXtAt7MgsYSc8xJ4XlQ\nGifX2zETm7RckLmBMxOous5q2ZE5DllftXOUMYpmOCMWV8fQzClXFNjjDGLebhwe\n7VV/ycGYZM2wfZOOqLwHZwC5u9f1KPzCSfy9fS41aYCjMS4yl+h9Z/hZZ/p0g9hx\nQqPPhnOssQiOpGPH+Y1BBqeMwnUEfOR5as/wzZgsr2Myc3B6nXx00JRR4nKd4k8d\nFoJoVHz/usweMe8a0+kDLHf1xYDlj00voPyd/eFPsgroiviPzkjtI9tcWtybJAsF\nS6URn0YnwZPFDpCwVjOwgZR15ip9FCXSoR9t6+R4AW+0yJsvyeS3G16fjAQZ4Drx\nGNpywnju4RDy8eud1p0WF7KKFZbrR8l6HbrrbjIPg0LZe2MkDLrMtlI/1EY3aLm7\ny/hl+1U+6P3QM1vAX9+XpcF63UIcVWb8x6f/33aLJQVYC78wooBOH7pnpYT6bj+y\nh0e+KiKZuH+wxY/XcIXZ4c3I+SUMXl6si3dFvqTSU50JqfavUmuYTaucGfREQnoc\ng5SU5eWivNbbpQV4hkVKdwzdRvYCCfBF6gZ0jg5cu8gMgVzJir0=\n=uBjR\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16663cc22c569f65597b650a9eea3338e61a51d2",
          "sha": "16663cc22c569f65597b650a9eea3338e61a51d2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/16663cc22c569f65597b650a9eea3338e61a51d2"
        }
      ],
      "message": "cmake: Build `bitcoin-util` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:41Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-01-09T20:34:51Z"
      },
      "sha": "00a5937ac189ce87f6fffc1fb4e89304349669a4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM2YWNlMGNjYjA3NDM5NTg5Y2ZkY2Y3Y2ViYzY1MGVlYTk0MmQyOTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6ace0ccb07439589cfdcf7cebc650eea942d295",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c6ace0ccb07439589cfdcf7cebc650eea942d295",
      "tree": {
        "sha": "fef9ffe9a0501257f7ce812f326a83fa29de88d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fef9ffe9a0501257f7ce812f326a83fa29de88d3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree fef9ffe9a0501257f7ce812f326a83fa29de88d3\nparent 00a5937ac189ce87f6fffc1fb4e89304349669a4\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1717505072 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284401 +0100\n\ncmake: Add `libnatpmp` optional package support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7EACgkQQQEIES5+\nqB+ljA//SV1Fx5KSkItrUR+GreB5NRYVQUXo9Y92Dx76zdjjFYDDSKbVk9YuzhmZ\nJhKwBantkrQadZ4011FCBlGSzlV6DQt9e54ku4FybgSlrssVgyce14D+IXGpus+b\nvoAXmQR27maweBa+riOZUgChn+P77zXYPBPWqHYEatwOL6H3OWnAjXmCQH26XHMJ\n95WeNJ+tZfoRYp/h1US/zlUrSYdXBwMKwkg0tH6SwwE+Yi8NS2MCLjMin0BiuVDW\nsqmbf4pXxhVq0dPkMANVcfonJxHgTSswHpXNvoJGGUl/EfBj/BM+hwOmU9dsz1pA\nd3FxCtZkY/6keDqAG0DIbfVl5+JOtd4iFcf14kRrZvXdSgg0kFghrdporyW/6bzn\nXwi1FZP8sYRtu05e0K+JD+38nhmkzGNfrYfAjdMq6UZTXaUqiGkUoH7J5bU7PPV5\n5ET8tV60qhE8KvcnA+GnxDY+KAFDdvMIXN6IJSrlf/YKJscGdJDW4roba8hBkZkH\nRv+6Q5RqbaSH3PpJfN9ChljGBT+NXPiG3zGiUpHVvIDc5LX2qygayvWEQ9KrtpZB\neflTwl/YfL8gBACSdSdtW3XJipUSNMbDhPJkj34I01HUe7kkfbCiQhoICSC8+cZ5\nnv+hS1hyFJGZxGw57/JqYqkycq4/TWOlnyRXlTM8fNQ3GBTt4xk=\n=J72I\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00a5937ac189ce87f6fffc1fb4e89304349669a4",
          "sha": "00a5937ac189ce87f6fffc1fb4e89304349669a4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/00a5937ac189ce87f6fffc1fb4e89304349669a4"
        }
      ],
      "message": "cmake: Add `libnatpmp` optional package support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:41Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-04T12:44:32Z"
      },
      "sha": "c6ace0ccb07439589cfdcf7cebc650eea942d295"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdiZWQyNzJmOWRmZjc2YzNlOTQ4ZjFlYjI3MzAzYTk0ODBjYjkxMDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7bed272f9dff76c3e948f1eb27303a9480cb9101",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7bed272f9dff76c3e948f1eb27303a9480cb9101",
      "tree": {
        "sha": "cfd7c914efc418bfae4f625bf488af01a1f52798",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cfd7c914efc418bfae4f625bf488af01a1f52798"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree cfd7c914efc418bfae4f625bf488af01a1f52798\nparent c6ace0ccb07439589cfdcf7cebc650eea942d295\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1714421422 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284401 +0100\n\ncmake: Add `libminiupnpc` optional package support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7EACgkQQQEIES5+\nqB+9CxAAnOIh4NAyk3IDxMtrcvUBYax5hWLROZuAlu7+VT84z5TKicbLveJSdXZ0\nzx705dI5P4D/bFLFp14r4ywN/dDroORm+9T5gqYJbqlin6yvU/Szwf8VkJgsD0uC\n0csDuGt+KPbuX05WQiH7PFvUARpEmxUFPDMeX41cTSN4jVPvNBrM9A+uw0CdlBVg\nlnh3DXW3sVKE0JDyW5Q3ktYhQ0QDEENUP+8LV6/hRghTZJnWsWBdFeOsdWVI1mu+\nHzWp6yXqC+AC3ZZwwhlcL2eCKJTAbW8QbKnL2EJin3dGJw0udAX2uKcbQI4qzZgG\nEq8sPEEE8lhf4enAJhFYkxJAFjXhAaQImpg9MIcllBVN8U7jnEvf8GhvNzZS2Sl0\n+I/8n0BNrjFJU380H1FfL1T6KAIhvbpxHvNB2HBVIst+w1lwlr89oLZvL/cKZbQN\nbzSh5FBcLsPuapeNoi6fRdiztR1/AwbZbdv65bqzwbR9+Mvvk40OpWgsNL9A4dYm\nOMTH7x4uYvWsl0FN8i7B4Gq0FDrb4YptNKQyIE9C3gEGUVsJk+wGgr/K4aQo4TS/\nmgFW7C3lSVGWq74wT+VZdNk77+Za6jiUU2n74eFm0nWdQCEj8ecl3VLUkt5TBbRO\nblw6KihgMefZNowq4gNkZpLjg6IxhVLKN49vgz6OrKMQ94TB1r4=\n=fj/c\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6ace0ccb07439589cfdcf7cebc650eea942d295",
          "sha": "c6ace0ccb07439589cfdcf7cebc650eea942d295",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c6ace0ccb07439589cfdcf7cebc650eea942d295"
        }
      ],
      "message": "cmake: Add `libminiupnpc` optional package support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:41Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-04-29T20:10:22Z"
      },
      "sha": "7bed272f9dff76c3e948f1eb27303a9480cb9101"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM4NzUyYmMyMTI0MjViYTcxODljNTMwYTdiYmYwNDc0OTJlZDdlMDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38752bc212425ba7189c530a7bbf047492ed7e09",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/38752bc212425ba7189c530a7bbf047492ed7e09",
      "tree": {
        "sha": "b753aa33e971d7ee7ae6ef02ef8650a385cfad4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b753aa33e971d7ee7ae6ef02ef8650a385cfad4f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b753aa33e971d7ee7ae6ef02ef8650a385cfad4f\nparent 7bed272f9dff76c3e948f1eb27303a9480cb9101\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1714422222 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284401 +0100\n\ncmake: Add `libzmq` optional package support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7EACgkQQQEIES5+\nqB8dCA/7B8Wag+2qbrlcP1yvXtmBJtFjp4Q2tjuZftxkI5CcCjY7BIkqGQIEy9+Z\nSY313vIRQlLl6q4lJ8yX53p1/pdXCCEvU77CM1pj6FZolgT1qmuFd53ReApfgzTu\nsS13Q+a2kAIFh2TvYs5JZ5re7YI2TXc1dTLf3bSk3ELkA7dTeChvXhT3/A00AXpC\niZcXfx8P3rc5WHBK5UJJpRJmps+wnjdXfU9c5MKsdNX6pisRq64OAfPuormt29l7\nisSwg3Lluc1nn/anRwUaSOBUwJdAVqAyBu25oBZHvyx7CCKDEDZ3i50c45lnLCkU\nUe7FRurazh/RFVLlai+g6TTsA+FVMbLNXTCAB3L5YotMCZiRci0SYym/iokJMcs1\nOMllY6CIG97wXbOsiU+MOn5uWrWMCwZGDwBhmBG3t26wMY4XMxGNETvKQclyFzBP\nv3X8By/kuf6cR8Vz462FCP0e0D9C8OtQd0d/CK+2N+5kdZlv05h0nd8JxZhgp4js\nzZCwPM6YPAnYCr/9r1zp98ynC+CY3RI92vCYvwKzbTRVxYu2xuJs19Vof/RLvhER\nteMcr0jt5yJrdVDIBhtwXz5byLLKxxg8kEvBE10Hbr37lxF20L7DJQOUDOrErJpK\nGh8Sg2/oD3Uq+Td8UGAlwMHVOeIYZoxZd8TBV28Bd8pUyVs54is=\n=OLXA\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7bed272f9dff76c3e948f1eb27303a9480cb9101",
          "sha": "7bed272f9dff76c3e948f1eb27303a9480cb9101",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7bed272f9dff76c3e948f1eb27303a9480cb9101"
        }
      ],
      "message": "cmake: Add `libzmq` optional package support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:41Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-04-29T20:23:42Z"
      },
      "sha": "38752bc212425ba7189c530a7bbf047492ed7e09"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQxMDE4MzYwOTBmZDdmMDQ1NDY5Njk0NzZhMDFhNzFlODM4MjVjYjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d101836090fd7f04546969476a01a71e83825cb0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d101836090fd7f04546969476a01a71e83825cb0",
      "tree": {
        "sha": "2e0dfee4570b18319793eb48883826c7bc9667b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e0dfee4570b18319793eb48883826c7bc9667b1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2e0dfee4570b18319793eb48883826c7bc9667b1\nparent 38752bc212425ba7189c530a7bbf047492ed7e09\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721823065 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284401 +0100\n\ncmake: Add `systemtap-sdt` optional package support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7EACgkQQQEIES5+\nqB9Hmg//ZFHQXZZ8xN6pZqtEJvR3qZKPYchfGDqxSSDZt8nIrdTk1DNsFA3ymGDs\nd3wLRXkCeigmAd/cgTULlftJ+u+i7ueBnymQn9dr3eo3LqfUbZjnh8oh7kV6zfw+\nfHBqvf5KDRiGNIStfFleF/ZrFNmeFstmFuNFCTpo0ruNCyhW2PqAYkxEK72MEpjF\n14tdFScHEJ9tzJLN8y4ap0y40J8YP/7rj/g4vvXb/Mo0dQr3vXcGsLeCMtTiHCkU\nijEYnFx9rKoybak3Oadn96ZKAopPHbfziGA7aS1Nkh6KFVLcg1bN8CKil06g7tKr\nuywnmtwgPZlbyBKXe6Oyai2Dbug+5JJhkYErJJcJCZVRJUD0E757GqhLNJUz7193\neIVDiAJtJf2KF2usaIOO8fmeEKQTcmV9CYsIEptCae8AOcKx0N4in3LwyyeY7X0d\nQppAPQMbzqPTBjZXTkVwKbrFrTgl9d9f7KVSO7MZc8P0bToNxisnRutJVUuiwwC7\nemSThl+ueBbYbwUDj8y+o7i+ox4l1jdGaY1ilND0Im0WL/mn9q49V6dUSXvgaXWo\nEVUZfzfWqU7TBTc9+TPH1yFHONoGmf4LSz4eoUl0gpKYd7+lPxEhsMxhY3XRnCve\nHoLeIF0IAK55C1xRcNE7M6oWT/7EdjCUvPw5gIaVEANUR/bxoq8=\n=rUqk\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38752bc212425ba7189c530a7bbf047492ed7e09",
          "sha": "38752bc212425ba7189c530a7bbf047492ed7e09",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/38752bc212425ba7189c530a7bbf047492ed7e09"
        }
      ],
      "message": "cmake: Add `systemtap-sdt` optional package support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:41Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T12:11:05Z"
      },
      "sha": "d101836090fd7f04546969476a01a71e83825cb0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRlYjI2NmJiZDRjYmVhNTEwYmY4ZjgxZGU1ODk5YmI1MmRkNTJjNDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4eb266bbd4cbea510bf8f81de5899bb52dd52c44",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4eb266bbd4cbea510bf8f81de5899bb52dd52c44",
      "tree": {
        "sha": "863eb04c7e3688c9fb346122322cd848d3477767",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/863eb04c7e3688c9fb346122322cd848d3477767"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 863eb04c7e3688c9fb346122322cd848d3477767\nparent d101836090fd7f04546969476a01a71e83825cb0\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721822935 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284402 +0100\n\ncmake: Add external signer support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7IACgkQQQEIES5+\nqB8Y/g//bekFy/fnxeEfD2xJQYlCUhuSUYSdjLkt7/xswAvE2IwNHaagfxRpoSGg\nje/Wx5bM+1CiKtKXouek6wacbOX2oDLc6cSdO9ya81uCngFG34Rga/IwZgdDp/ah\nJCfmvlzDu+thzhZ4SrM6OWzAFA/0lHIon/s9jt7YwI7zvs3nAXajLgMbsFLpGKn+\nZ0e2LlhXNIzddrLj4gxZlLNXZiUvvvGV6yd52uOkxua4+BfX0NxD28ak5nhU6GC0\nioGOMsKfNanXATD2FxZvvee63ubGrvuBzVwPtz4Vx8L9cpUQGK8WwKT671GOf5OM\n/q3wxSxs3NnRkSuZVIuzCcUL09XJfVxsKtRwf1RkyNC6YPROHjO/rgHVqzHyez9x\nVFV5YIb+soWpZMsBlkCpGqdHj0ywyWnO2jedpwzEKhVE/vzmIGI40z0KYxOUc2F1\n95Nl7cYlsp3j+CVxkk2xYzW6D9ILi8ZP/tItDhbgbCLt3rtnaHmQnwP20aowiiQD\nrlpW1U2/+8HhkvmC/TbfKX/sSATQ8H253exFAN+tTyVSVsMFiZtt6VwslZ2Q6RBs\no1MzpUyxLDVYQ4cUOfy7B1tInQi9fSbVHcZ0Y15RrCuKNZBoefWxYXnbucIeJwyE\n0Ib8jT5OhA2N/L0naKqW5KixaXZMWwI8yyAAnZIG4klyENmLrkA=\n=8lwS\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d101836090fd7f04546969476a01a71e83825cb0",
          "sha": "d101836090fd7f04546969476a01a71e83825cb0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d101836090fd7f04546969476a01a71e83825cb0"
        }
      ],
      "message": "cmake: Add external signer support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:42Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T12:08:55Z"
      },
      "sha": "4eb266bbd4cbea510bf8f81de5899bb52dd52c44"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGExYTRiNDMyMWFkZGI4MmE0ODJjNDI2MDMyYTQ1ODU3OWZlN2ZlMDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a1a4b4321addb82a482c426032a458579fe7fe06",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a1a4b4321addb82a482c426032a458579fe7fe06",
      "tree": {
        "sha": "55179def4b3d0ba7d9866675f2f5666979ebf8bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/55179def4b3d0ba7d9866675f2f5666979ebf8bb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 55179def4b3d0ba7d9866675f2f5666979ebf8bb\nparent 4eb266bbd4cbea510bf8f81de5899bb52dd52c44\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722418939 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284402 +0100\n\ncmake: Build `bench_bitcoin` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7IACgkQQQEIES5+\nqB/WSA/9FuypAtC9kBs3ARnjkAG0nOoro2fbO8U6pVSfv9jerXYrF8TmQ72kuHaC\nBkjUVQWl+Zi2ejK8b755CMXjn+WzWcCwqGbN86mptHgHPEccja6Ce1VzJYECbaZy\n/3m3ZSBMFQsBrUhrwcPwm12JYPnWs+vEBqov4lVWFwIl0Hjaml+QoWnzj3La+p61\nQy3iuhkXsAZEF5gj/OP+8RKWE3T+uPSxXU4Vugjn6fczrqSFhcJhh4l+/YJ4Ce5F\nYs0b1A34a8WunXLMimgnsz3wpe9vk4NGuqCTCj3m7gvuLjuf1O/A9AWSYbALBS7W\nfmt5LbPEex7pgyRcJKlJePjg/FY0J/JKF92lNSnKMwwEPRSmt6ut5+f4WgiOVLU3\n6IRIvr02Mzh3qEDgCwMkv/5JfWtpsQ/i68tXDpaEPa+cgmUokhwoB3Q4wdmFjtIY\nLcYdIZrQITZmroXqiD0BNiJ7OvsmZ/XLtG1jAr4zM7mjOA5S1uhNU/+UqqTsZRwP\nvt+4xUesqJSZUWKu32Rciaw6yJggUKcS09m06pn0f/WzRVORBL7z5ZYnt0JgOijG\nqoRcku27f7WViWgto+x2qU/xCyl1M9EHlQNi5/LRmyA/ZH9cchiBEUPi9GGL5ckv\nClcppKs47fut2nfEAkYOeKZGyUDilozJ2TMl5VHJhWxU3BfthLg=\n=AgEe\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4eb266bbd4cbea510bf8f81de5899bb52dd52c44",
          "sha": "4eb266bbd4cbea510bf8f81de5899bb52dd52c44",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4eb266bbd4cbea510bf8f81de5899bb52dd52c44"
        }
      ],
      "message": "cmake: Build `bench_bitcoin` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:42Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-31T09:42:19Z"
      },
      "sha": "a1a4b4321addb82a482c426032a458579fe7fe06"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI1NmU0ZTkzYTg2Y2VlNjRmYmNkNTI3OGRhNzhlOGVhOTFiMmExMzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/256e4e93a86cee64fbcd5278da78e8ea91b2a130",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/256e4e93a86cee64fbcd5278da78e8ea91b2a130",
      "tree": {
        "sha": "fd93f4bd95df09815df4c9e35dd2860710a8ff30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd93f4bd95df09815df4c9e35dd2860710a8ff30"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree fd93f4bd95df09815df4c9e35dd2860710a8ff30\nparent a1a4b4321addb82a482c426032a458579fe7fe06\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720049727 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284402 +0100\n\ncmake: Add `SANITIZERS` option\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7IACgkQQQEIES5+\nqB+nHxAAsK9N6frw1ZENKf+bEGiCVIylvxmLGUM+Ktgc+l91Ga34x4Tqm0mhFLhs\n+/pi6DOknt5bwnLFos/oPR17el3ql3NuY9pAVTk9FN07OanS8dNQeoJUCL/aRuGs\nB0Qjq8fd3M05cJclJtBpTIEOU1WGO8bRLQzbH7cw5TXAMwwiS84hVqznCFS6YfZ7\ncenyE3JfacJ6xUy3Fo1zinEomZOay9ttp4covTkR8phL7p3yGDkXq8iKVH+W1Dhp\nz3IejXXniFXW8GAGbW1Ciun20cDV2rLWtCTXk7BMi48YWi75OP2W2czu44XVaxrf\nLvTCduO8RkyLo/A5zEvI2X0bgj/vbnqEI15I3EJQ5yHQxv+AQaFHN7rhB82bNZ3s\nacvz6uVXQTFpYaTN1p9rwT8nB8OV4IRWzCwglNpG/8Ql9N95P3OPtXOz8c2tNefS\nyBL/FwRh9kR2XHvZTL5iYyjNo0oEbRDH/0kFKOZvbqdKUS2dDd86nxScgO+XF2PR\nZN8DA881YDkkIYomwX8sDgd0w4VShZ2RnT63tNgzklVTN/ty03xEHaejE4N0sqKv\nvlzceH0sqiTO81l/AgcnSvgU5fcP8D9BuGw4VQcq600N2LMa/v5fvBktwRRWIqCk\n5KNOnh5RyVvGxUMrWo2ykgWyXn9MJSYw+YLMuUk69O/XgmhJmlU=\n=1WF0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a1a4b4321addb82a482c426032a458579fe7fe06",
          "sha": "a1a4b4321addb82a482c426032a458579fe7fe06",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a1a4b4321addb82a482c426032a458579fe7fe06"
        }
      ],
      "message": "cmake: Add `SANITIZERS` option",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:42Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:35:27Z"
      },
      "sha": "256e4e93a86cee64fbcd5278da78e8ea91b2a130"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRjOWY0ODIxOGE2M2U0MzkyZmJhZjE2NmQ0YmIxM2E5MGI4ZWRjMDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c9f48218a63e4392fbaf166d4bb13a90b8edc01",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4c9f48218a63e4392fbaf166d4bb13a90b8edc01",
      "tree": {
        "sha": "77e42bf4ce55a06ee4cec08409581a8c1052547c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77e42bf4ce55a06ee4cec08409581a8c1052547c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 77e42bf4ce55a06ee4cec08409581a8c1052547c\nparent 256e4e93a86cee64fbcd5278da78e8ea91b2a130\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722860844 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284402 +0100\n\ncmake: Add fuzzing options\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7IACgkQQQEIES5+\nqB/EJA/9GCzN50SP1NM8LpXyOison04FOQ2fE9bQAT0dZo9R+KYy87rsitfSV1Vb\nQtGf1giN5DV/2MbSJ9rXLhKo7kCZ+nFPSDi6iZSGHdp49fDIvlTJkf1Q7Ve1w+7R\nCfKl/vsC4sZPzherww/95DwZiUNpb8ZWRqR1UrHZM4vYI+1PJ1XcwRSjpOitwVYA\nGqyKnQykuOyB72KD5XzFULk6BV115FM/jk18oZzS9+PeVt3CvTUYLqlL/ztkiNI4\n58KOCT92Htw2nsKjlI1rDbPDoE6X9XAebSGCrhpyTmV46eA1m/IefjNaZJiTLnoO\n8BqyLp44g816+93okYYNg/vjXySFE40a2K3IQYg9NnR/npeestoZcz5jyoAAEdFC\nxIYK5aaWF+ZjQebKrGcTwA2qKapFKRPRKP8mViwBlcM1RtETIKR+XqZpPBIvqpnC\nSO47l1r5+NAuzeX9Q3UFuqXeZxGo4TsPixHEM6rhQFoKKrpG3GplHcKcZh9nCc3G\nrKcbZM8/Zp1LNyGHvvA5bnAbVKQFTo1ZMQNTgnIFX8xaMqwEUs1oVvjxP0yQdo28\n6zKCtJUjgvJa8qCbD0hBRSCr35L0nRGKhPfg6jwV092YQR+3VBO+KMdcCJw6QXEq\nD1U4045WC92oViJkaF76s3gKSyBSnFCl/daYLkbcfsrjC0gojkg=\n=zmOw\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/256e4e93a86cee64fbcd5278da78e8ea91b2a130",
          "sha": "256e4e93a86cee64fbcd5278da78e8ea91b2a130",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/256e4e93a86cee64fbcd5278da78e8ea91b2a130"
        }
      ],
      "message": "cmake: Add fuzzing options",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:42Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-05T12:27:24Z"
      },
      "sha": "4c9f48218a63e4392fbaf166d4bb13a90b8edc01"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk4MWE3MDliMDE3YzdhYWRjMzdlMGExOGFkODc2YzliMGY5NWRjZTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/981a709b017c7aadc37e0a18ad876c9b0f95dce3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/981a709b017c7aadc37e0a18ad876c9b0f95dce3",
      "tree": {
        "sha": "3bec2afab0df29ccfaf11b19d40f43c9d82fe5cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3bec2afab0df29ccfaf11b19d40f43c9d82fe5cf"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3bec2afab0df29ccfaf11b19d40f43c9d82fe5cf\nparent 4c9f48218a63e4392fbaf166d4bb13a90b8edc01\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722964477 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284402 +0100\n\ncmake: Add Python-based tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7IACgkQQQEIES5+\nqB9bGA/+P8sH6A1FYpJmDfA6tuMdQRLGJ8EnsszMrwOXsSv59jWFXxm9eajurx9n\nGXEN51EtWq9RX6PtpXMAlbXPLZI3UJmY+eZBeVmR40Y8Hr0w2tUDHGyFZtGfhdlf\nxZP8ZswuehSLmMwVTGt2J1Iq9A7QLqMzRgpIxgOU5ZuDfuHUOW75lVYLa6sTBNjn\nAA0F132G3ggWv8klVV3GZX4+HlokYH1T30YzqxJSnG9PU548N9e0H2L9kjXf1vZ1\n79/r3zBFLZBn/+0f78POwVkBJKKVNwdkEh5+3OYXjx3WnCoo0u7OeZnX34eJp1/e\neZyHHzoC0U8PH1t/l8qGhXwxV/bw90TIHB06x/wC9c0tnj23HpEK6Ur+DAzSKoX+\ngeJxkJsvvRNJbGFJcme3I4xu7fBFW6aRwTI+Vih4R8MgIEHxgZZr2KzJroTttb5u\nEr5Nwz+BUgf6252ntvE3u9KN/vvuEGfSqKU7dzGu8EhadvLUqi5q557XBJfKkBq+\nefp5WPJ9XwdF9a1vyq80CCMO+8+xd/d/DEDmKtTYDflS4UOIPsw3ZuqTss+SQiVV\njv7hkLMHhUQyHBXx/00qsZfkEMjeBczC3HuRoKG/Mdin58xA1ZyqBl5eefcHzh1X\nSAJvclQey0KwEdjhUDRG2y6Hvv9lCauh54SvjtNXSAY7L3FEljI=\n=ph/9\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c9f48218a63e4392fbaf166d4bb13a90b8edc01",
          "sha": "4c9f48218a63e4392fbaf166d4bb13a90b8edc01",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4c9f48218a63e4392fbaf166d4bb13a90b8edc01"
        }
      ],
      "message": "cmake: Add Python-based tests",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:42Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-06T17:14:37Z"
      },
      "sha": "981a709b017c7aadc37e0a18ad876c9b0f95dce3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQwYzlhMzZlMmVlMzA1NjU0ZDNlZmEyMDcxZmYwOWYyZjFiY2RhZTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0c9a36e2ee305654d3efa2071ff09f2f1bcdae1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d0c9a36e2ee305654d3efa2071ff09f2f1bcdae1",
      "tree": {
        "sha": "cb028609b342ab47a5c88e6ae3c58c2221e60348",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb028609b342ab47a5c88e6ae3c58c2221e60348"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree cb028609b342ab47a5c88e6ae3c58c2221e60348\nparent 981a709b017c7aadc37e0a18ad876c9b0f95dce3\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719774149 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284402 +0100\n\ncmake: Add `HARDENING` option\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7IACgkQQQEIES5+\nqB8MfQ/+I2q0mYedc2U7Ft87TLpAc92I/v4yxm09pXHX79Zjj4hD9P+P9FSLeWdl\nOxNC6fGUa6T0cuqkK2GDQp72IrAeefasrp78oDuL1e8XqgWPt375U4J5iafbgh9N\nT1dPrj+k5EvKBl0Y1MN7mgZ83ruXvP6GQLlJZrgIxqtGe37ZBvqxm9+UMuCP+gwS\nmZfSt/EJe2DAmPRPYPCIXbczfWmgO04LLUzmNpCHioZp3juZw8Zo4j0Qnus0NbbB\n2pJWu5I/Iayy+asqBhXt93F1iG2o9ihMOJggU3JJDk2DaAf8jHsO9hpSAoDUUCX3\nc5VMo0pXRER0gY11A0pM6DzovbMgMXqfuosKQCjKQtpiN+IR0MfobF4Gg+GL2dwT\nKSydjig6uYHgCGJcC2v/a9uoGFDv4l4Wr7/aLSEqxEtAqjsRyDZhMUkZVL0N/dI1\njv+XDcS/8RjTkY1pFXQtMmA4nDd3PXNZcxlGid0nZ0BdKSZHu4nQpoT5ZK2ilwIJ\nmiHXDS0VBQdNhb0e4IWo6uKIxCfRmDc7dmG6msv3nnbn27p/RILgFdpUMkkYPbTF\n/BmbJhxDPQdvmrSLlH0zAfp4CP6Zfbne7l+NwGP6UsXBW5s63GMxjk4gY1EdWmKA\njEGHDZcxJ4fxahz2TIO/qH1nqJ/DvNmQVrAD6ucTu441GgROAA8=\n=4PHH\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/981a709b017c7aadc37e0a18ad876c9b0f95dce3",
          "sha": "981a709b017c7aadc37e0a18ad876c9b0f95dce3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/981a709b017c7aadc37e0a18ad876c9b0f95dce3"
        }
      ],
      "message": "cmake: Add `HARDENING` option",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:42Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-30T19:02:29Z"
      },
      "sha": "d0c9a36e2ee305654d3efa2071ff09f2f1bcdae1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM0NWI2ODljMGZmNTk2MjQ1Y2IxYjRmNTQ3NTBhNjk1MDhjY2JlNWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c45b689c0ff596245cb1b4f54750a69508ccbe5a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c45b689c0ff596245cb1b4f54750a69508ccbe5a",
      "tree": {
        "sha": "7cef98ef2dea83606589557396e2192932d9d995",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7cef98ef2dea83606589557396e2192932d9d995"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7cef98ef2dea83606589557396e2192932d9d995\nparent d0c9a36e2ee305654d3efa2071ff09f2f1bcdae1\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720049037 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284403 +0100\n\ncmake: Add `REDUCE_EXPORTS` option\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7MACgkQQQEIES5+\nqB8Uqw/+MT3n7y26deOhVkxs6YW4IesEiG4TttZaqd/C5TUlWZOu5dAmW+KlPou6\n1GieAgSLXcJSsPWaBCW+U+xd53XAkVozYggYK1YQb1mYRZ2dyxEzJWqj2+Ry2FVz\noJusmpkl86jP1SXGr1Ok/WDSdYq3LXBxq6hvLDRdXAZJZrn3cXdjsY7ILPY/KFKB\nHVZTE2hTZlWIPVPR6TbuyNpeUdXzO2DEctMRp+OZysdY3oL/De10LqWAG3PxUO9K\nKHdsVi4YBqJNWOlEtIyYIyRPulVijaeUlAdgKnNX20bdRT6aFcsLjPhQqHpc7WOL\n2OYI4Nq3Sux2hJovjJIjTos+tKubjds1VDZ2+PQVrT8jSmrtoVzb88dJjJWS5GCz\nGuoTpzfY+u0lt7D/GAQBth2hDnU9fAWPMxQUP13GdPbWOPyVxpNqVcyDbHq/PElH\nSvlPpoDpPB3R2aWd2QzBXqgLOpN/M48HPbWUzsQLgP+Gag7ucuIQ+DJgKXM6nquV\n3WilnJcxqay9jJv9y9i2AXTOz08HpjkLDC32jcXbHbsVNNlR8t70h+wY4Z1n/mhW\nc+E6FyplmvhlrPdv/QuYwNgN33rD0xqNO9HP/ejFI/fTDHR69EdLGaxptRgolS5y\nYEOV1sEY7/mS3ghHDLljyX/oKn76Jv9nlY7sBB0mW59IlK5IlxY=\n=Ta+T\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0c9a36e2ee305654d3efa2071ff09f2f1bcdae1",
          "sha": "d0c9a36e2ee305654d3efa2071ff09f2f1bcdae1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d0c9a36e2ee305654d3efa2071ff09f2f1bcdae1"
        }
      ],
      "message": "cmake: Add `REDUCE_EXPORTS` option",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:43Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:23:57Z"
      },
      "sha": "c45b689c0ff596245cb1b4f54750a69508ccbe5a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU5NDA4YmMyN2I1NzdmYzE0ZmQ4ODI2MTRmZTEzMDg4MGJjMzQzYzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59408bc27b577fc14fd882614fe130880bc343c0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/59408bc27b577fc14fd882614fe130880bc343c0",
      "tree": {
        "sha": "a0a0fb0040a3d1029549c9d677a76182744c4a1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0a0fb0040a3d1029549c9d677a76182744c4a1b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a0a0fb0040a3d1029549c9d677a76182744c4a1b\nparent c45b689c0ff596245cb1b4f54750a69508ccbe5a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720049089 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284403 +0100\n\ncmake: Add `WERROR` option\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7MACgkQQQEIES5+\nqB8tBg/+Jl3vyrP7a9/cBnXZ1FOGe3jnz0cdnRTfmN87tIChOO6GqqgJtMYmdvKh\n8hbcNvEgo+FZib2ZAT9hZrgCCxBSuI/e9e6GQyzM5rIyW9tZErOajQOiC036LBib\n+U/uTIOWRpLPGYsC/cKYJAPed/FkJ3TaAsFiAC7m3hRc6z68Qcn0d35xriLEdBoG\ndNxyA9VVOVKFFEm9vrRqEVjiwtbrGJz0JK9zcXWRs4itq+0oj7zrJEMtgedow5Nw\nhTwi/Q0w1OXScoDb9SLpcirTYyZdY6FMluCwGWLUnnSp+sIKT7RXqYkLTQxwWxT9\nJ4D5qICQjEhCoF/sH2uOVa4mxqrD+navyrDLoYVEO4vWNRjYja7k8gKfPLGfD2Hx\nB62r84fB2MqZ1SHSksm+s2DH1AyYLhCzpxBHwbNyqd43iq5mLkMAXxKm3h3Kk88w\nMuZK5v05I20b1g7Wv2o6jWQD8aCa7axKESjkP07hoxZnkX+2bWTH9VOUchD36JE2\nstOG/de6Wv1sncdNdsFuotFBzY4fcC+Au//41ReP7O4xDArjr9PXhsMaHu+iLCw8\nkzX2Lo2k1r3DhCnVCDTE4pUbPyBz8it4zgF/W8Ea7ngm/L6hdAN+mLiI0hJjtgKu\nvwKuDTUzu1jUbidB54QWTba3TYLd62UTXcYedvexfvHP8Ya1wPY=\n=OdSM\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c45b689c0ff596245cb1b4f54750a69508ccbe5a",
          "sha": "c45b689c0ff596245cb1b4f54750a69508ccbe5a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c45b689c0ff596245cb1b4f54750a69508ccbe5a"
        }
      ],
      "message": "cmake: Add `WERROR` option",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:43Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:24:49Z"
      },
      "sha": "59408bc27b577fc14fd882614fe130880bc343c0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFkNzdlZDQyNmRkNWRkYzc4ODQ5NmRhNDI2NTczZGFiMTViZDBmZWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad77ed426dd5ddc788496da426573dab15bd0fed",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ad77ed426dd5ddc788496da426573dab15bd0fed",
      "tree": {
        "sha": "fbca686eff2c80c22eeab0b6c68afc587947f220",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbca686eff2c80c22eeab0b6c68afc587947f220"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree fbca686eff2c80c22eeab0b6c68afc587947f220\nparent 59408bc27b577fc14fd882614fe130880bc343c0\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720871920 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284403 +0100\n\ncmake: Build `bitcoin-qt` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7MACgkQQQEIES5+\nqB9WHRAAqiUUDDfFcVTvGypOfRxIwMMude3W+lf9HhHsy4SJQTZdBZ1KYy/ROPy3\ntRicS5oVJ0/4knShH1K5U6R3bESmqbPeHz1eDVTBaDa0e3EQzZr09YgQgI3o7wV1\nabDGq1hDVPFcEsYRipyMjaj+ESGzIEWwaMrLBbRBIoGkJr+EcTQJYugZmJHOcILj\nKBtMtjmPMYXvWxc2D1nV06lUcOab/v6QLmJkYwZksHdpnN+Q9Te3QDMAONKw5hNq\ncvqhu3keb5NnmFlTbCNz6gUZqKNTPJCCxXtSUGMIBYbQDc/UVaukfzpMshLVC98q\nGlMU5b34rd8LDUhhu4vVTq95M6ApE/vSMO1ne9ZSFhEOvs3lkvJrxTbjGQoFc1oT\nQkpiGmRwYmCYN87XFF/FNZvzOu317geSEaOXuLXPe9pdqVl8exjMxlZRwpXaK2bb\n6Cq3izNDkRTfdCDCTbKHxWTt/BIoSPhO2lZotQBBmEud491RiReSVgcSw5/qSe2h\nPMMIsNmpU8/on5afflReJcv1FFvw94UZKgBiBklD6Af4+etqsyQPktCbRNlWV1Lt\nmmitCcZGTKVK/jd32lqeBUJrf+upeePxNo5FkZ0SQXiiOdjMBVXcDNz7At0fqpFF\nVzYiHgta0AiNrnDyTm6mWREn5sXgFnZuTXDCb9ieUcBXpbbnPnc=\n=eJzY\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59408bc27b577fc14fd882614fe130880bc343c0",
          "sha": "59408bc27b577fc14fd882614fe130880bc343c0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/59408bc27b577fc14fd882614fe130880bc343c0"
        }
      ],
      "message": "cmake: Build `bitcoin-qt` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:43Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-13T11:58:40Z"
      },
      "sha": "ad77ed426dd5ddc788496da426573dab15bd0fed"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNkNmQ3M2YzMWNmOWZlZDlhMzY1YTIwNDhjMWI3MmIxZTg2ZjQzNTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d6d73f31cf9fed9a365a2048c1b72b1e86f4356",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3d6d73f31cf9fed9a365a2048c1b72b1e86f4356",
      "tree": {
        "sha": "8fc4a30cc0c98d9f0aeab8db743b00db328c9d9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8fc4a30cc0c98d9f0aeab8db743b00db328c9d9f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8fc4a30cc0c98d9f0aeab8db743b00db328c9d9f\nparent ad77ed426dd5ddc788496da426573dab15bd0fed\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721823221 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284403 +0100\n\ncmake: Add `libqrencode` optional package support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7MACgkQQQEIES5+\nqB/bWA//efy/NMKkFY09IBRhfsmy8u0b0RiTRnuKv0Kw6MiHV3bpEaVJko4o2Qdy\nA6dS+XV5Y+OgZDk1fRzhUo8DQylMmIsHDSfJq2UgamQ14IM1qcPljVVj/1vl8p0e\nJQidCwKFWN22YJHCE9CDnC8WznuiyaMB7gtTgIVt3MMXKLlX3wc5EpGzJaVu9JP+\nnnt5dM0Nn+xlRbvsSAWWuFUNcFSc2EoLr4dXH+btTM/zXaD2yIvoRVCnSMgWjL6w\n4/mpIi2kx24VSac+y2gQISEkKn1n4Z0clBMbmn3c+ckudKxl0hte7Hc6bLBGuHvk\nut2Ndjp+bt093qftR04zjYOM0xyyL69I7Q2FlAEfO6aftnS6Z+z42odiO5UydizF\nMs7XgSFzbX7IidRk8ZnSCoKPuZ66Ovj9SLr5s2dQ3+qGZIz/V0y1J3DUQTXM/0w6\nWvFPIZ+FtVvSw0I0UxVkEpY8cB2cWRO8Jl5NVeFsIS4/27p9c+nGbRf5+Hnhnlb1\nqBPclKQN1bJjHqySOw+sOHJOibUz45W6QyCTLiWmUyKqODujIcHmnIeIshyk1sHl\nkmm72kDKjyujILSLQbw8uvrQUQ8NnB+7UdNH06QF91WqvuJZ5nUYKiLtaRffQ4O/\nLh3LBIkqC+HeI4O0tSGLkd1iZg3euspOoHxJONgI1mnfBnGG0TM=\n=LUbb\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad77ed426dd5ddc788496da426573dab15bd0fed",
          "sha": "ad77ed426dd5ddc788496da426573dab15bd0fed",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ad77ed426dd5ddc788496da426573dab15bd0fed"
        }
      ],
      "message": "cmake: Add `libqrencode` optional package support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:43Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T12:13:41Z"
      },
      "sha": "3d6d73f31cf9fed9a365a2048c1b72b1e86f4356"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA2M2NkNDVkMDg3MzQ3YzZhMTYwOGE5OTE3NTYxM2MzNjkxNWIxZTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/063cd45d087347c6a1608a99175613c36915b1e4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/063cd45d087347c6a1608a99175613c36915b1e4",
      "tree": {
        "sha": "5600d72ee8737bf57940ca5b7fcfda5f0d607f7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5600d72ee8737bf57940ca5b7fcfda5f0d607f7e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5600d72ee8737bf57940ca5b7fcfda5f0d607f7e\nparent 3d6d73f31cf9fed9a365a2048c1b72b1e86f4356\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721823540 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284403 +0100\n\ncmake: Add `WITH_DBUS` option\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7MACgkQQQEIES5+\nqB9+JQ//b6MELWn2qPbxhmhsfrbfoJ6ly3zwT7rOMjvQXJijbPTeuNvngbB96k7E\nGbjYbAGORUKR6VyXhU0DRe5ZMxGPk/KuVfvC14FovRqa3gNuehSNeC+zatNtkkOW\n83eaY9wJEuCCHA7doXX31lkAIrugyoTM1TRi8sQT9cS8oyRUJImY88AEu9/Hg6Th\n4fjlojpEpL3DwcrDRNAQRUWOg725TC2So7XBNliNqKHHkOm0uZhCjynS/xswVNg+\nTq91haCPG2SqZ8CagZYcyaSTNSG1JK+cCRhMExjZEBmzNDB+9sqRyWFbrDlGEvYC\nWoElbuTo2Ce7OgNZqSjv5y6kt7Dia5EpcYk2rfeNP6dCysvX10OISV5nk5KMfxwg\ncl40gydGZM476oOMwzfaX0mEmI9eBeQEiwwLDgNNIhQ4d0Z+6FNWUhE1PcHhdZIx\nBD2tXh7Tet0FfmOilkhlkGXa8cUfCgrWUmPItKvL9ZIb7uxBIVlswhParnZmm5Ya\n3PLOm6+YEWHhavD275Z55YH+TyzbBvxTDhc0zCF8wm+PukbNTbMFk7M+bnxN3U62\nWmrns0TZylKJ1cY8Zy7AKE4w/d9CNqHrJ2DL8eJsyg55WbZaZpdxHxeK8HKQHAEh\nu9LTF6A7xf2DAd6AMB4p+R7FBZXWYZzLX3idtTZgPTmGakTR3V0=\n=Cva+\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d6d73f31cf9fed9a365a2048c1b72b1e86f4356",
          "sha": "3d6d73f31cf9fed9a365a2048c1b72b1e86f4356",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3d6d73f31cf9fed9a365a2048c1b72b1e86f4356"
        }
      ],
      "message": "cmake: Add `WITH_DBUS` option",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:43Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T12:19:00Z"
      },
      "sha": "063cd45d087347c6a1608a99175613c36915b1e4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg5MjAxNGVkZjZkMTliY2ZhZTFlNzQ4N2U3ZDY2NWU3N2E4ZWE0MzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/892014edf6d19bcfae1e7487e7d665e77a8ea435",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/892014edf6d19bcfae1e7487e7d665e77a8ea435",
      "tree": {
        "sha": "e85935579e6d9f2448a56083fb52bdb35b060c14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e85935579e6d9f2448a56083fb52bdb35b060c14"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e85935579e6d9f2448a56083fb52bdb35b060c14\nparent 063cd45d087347c6a1608a99175613c36915b1e4\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721820117 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284403 +0100\n\ncmake: Build `test_bitcoin-qt` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7MACgkQQQEIES5+\nqB8nvhAAgDPGbfN/U41o4Nj8+sZcYCA8z12hRcGI9yBco0cOCJsEHnqynyG2QD+g\n2AhrsFEbG4YvJrOn25bHZzfez/V9gTKHDA8pofx8U2E9tZryxmgg+Ca8FW0Y5ow2\n9KZBIqbjl4SxXwtzPqFH+xNiseI93rmKJ5QrgDStW/QVBbkDQLdXfw07X+KSsUSJ\njfYAgJ4oLMRZZmOHuPCxG9HxO1D5e7PWRXf8kCB0h5m3ek7+eHY8w5KntVCd14Ze\nRHNg8QJtppEVN2jOmUgfhpzWxfqq/iJcRtBEyy67sQVqclAInNijL3QfCIg1gI67\n/OG/yz78jb/Emb3+R1WqZDPD5SFPmFr2OIF9/WqgsCoMN1MLg+z32fZH0POakfnP\nwWIpEeqY/Mho5byqpi/5Oj2yO45X5ubvylRmmnsrORqnJfQugRxfaRzfPdkv0EqA\nRdDHR0PgsBqmsdN2ijdrfaS/GG7qVdrArpoINaoZ/Gj1lZXo/W2msvjtEdROWF3S\nZLZycBaxoHPtuS6zHll9hB/1F+geR7ZVmHhBob8fRg0OL8WAt8YO5rkIOX7ZNGN+\naiZ88HtK2uFV0Mu7Zbeh1I4DQEkEWOIhrXnc+FMbEKCia7r0nOMHHi1nDqp5eHbx\nzZMHF7pcvkP9j+8BQ2uDPc2/3ZjgjoS0A7Lmxx/T4T7boJP8mio=\n=3571\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/063cd45d087347c6a1608a99175613c36915b1e4",
          "sha": "063cd45d087347c6a1608a99175613c36915b1e4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/063cd45d087347c6a1608a99175613c36915b1e4"
        }
      ],
      "message": "cmake: Build `test_bitcoin-qt` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:43Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T11:21:57Z"
      },
      "sha": "892014edf6d19bcfae1e7487e7d665e77a8ea435"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVjNmRiYzQzN2ZlNTlkZDZjZmQ2NDhlZmM1Y2MzM2U0OTJlMzgwMTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec6dbc437fe59dd6cfd648efc5cc33e492e38014",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ec6dbc437fe59dd6cfd648efc5cc33e492e38014",
      "tree": {
        "sha": "ddbe24a65fc32d6cc177f9042b17fa3a764a3296",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ddbe24a65fc32d6cc177f9042b17fa3a764a3296"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ddbe24a65fc32d6cc177f9042b17fa3a764a3296\nparent 892014edf6d19bcfae1e7487e7d665e77a8ea435\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720870637 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284404 +0100\n\ncmake: Build `bitcoinkernel` library\n\nCo-authored-by: TheCharlatan <seb.kung@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7QACgkQQQEIES5+\nqB+bqw//S2JGEWrmWpdd3wwOdWdoqLCO3SuVBVXaBIaiX6m0gvCSlKNeyvRIudor\nOdDIss9WXq1+ZIxhp8qqg4i7sRljxqF6hneCjK0EdmubBjgrfcaYq37JsA+bHlgm\nvyFGORLiPepMcsH5ooWGxrXsyXS7+i/zT6RUyHLFTPy/qGgWHaKO50pMW+ZZZDfL\nOEGH1e4jS/E8VYeShIGUMWvijBFQbMUeZBE0HjZNCE1F3qtP/tEmyQVz8WG6EPmA\ndEg4AzYXdAPp1WKTO/knqichQES/hlTWGfWXSP8+NTIXMAD+PF/u+AdsVfB4PtEd\nSVmHSBP/8WUWx28F2SLXyxzDlLlWE1NN8vs2sb8He0FwDFKO2PgYw0c9oUiTweYu\nWrV1MtxZA0+glZ117j0YelDlbynfFvc5a+EYwx7cXpzE/C+69s96DBQMhUgRlKbw\nQpGGucax0HWiqnkpx+wv2VpkZBa9usNq5JEujKAVTXbEt3axdRJthZBOULOPyA7K\nusYmh9OmOhrfrpJULSHUfGJ8ylWm87vSdVYbC8QNEC9w0+giQ/2TCUFTHSjU8HjX\nNWMsq4eOABfFt4yTnd9maBXQu2CpzzP1JJLN5PHKaPxMHUdI+pabpDFcWIlbYkXc\nX0m/J6T5ZcGzrKJLHqSgkb+C7jOv0xZ45s/FK61trr58EErgZnM=\n=pcag\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/892014edf6d19bcfae1e7487e7d665e77a8ea435",
          "sha": "892014edf6d19bcfae1e7487e7d665e77a8ea435",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/892014edf6d19bcfae1e7487e7d665e77a8ea435"
        }
      ],
      "message": "cmake: Build `bitcoinkernel` library\n\nCo-authored-by: TheCharlatan <seb.kung@gmail.com>",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:44Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-13T11:37:17Z"
      },
      "sha": "ec6dbc437fe59dd6cfd648efc5cc33e492e38014"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEzYmM5NmI5ZWM0Y2QzNmM1NjM1OWFhOGU4OTQ1OTIyNjE0MDMwYzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13bc96b9ec4cd36c56359aa8e8945922614030c6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/13bc96b9ec4cd36c56359aa8e8945922614030c6",
      "tree": {
        "sha": "f957c92e5550078ee1c9d9b81a80473b5fa7afb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f957c92e5550078ee1c9d9b81a80473b5fa7afb1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f957c92e5550078ee1c9d9b81a80473b5fa7afb1\nparent ec6dbc437fe59dd6cfd648efc5cc33e492e38014\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719759335 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284404 +0100\n\ncmake: Build `bitcoin-chainstate` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7QACgkQQQEIES5+\nqB/C6RAArZDTrwuPBrUo0dl+9cAoH0p15a5Dqo7Yw0ifE6qt4YpSCK8O0oa9aZ4r\nGpiSYLPA5H/Q0bDnky/4vWlRquKCV4kHI27HRshOE/NeAI21XIWX3AtuuVcJ8qb5\nLhR8qihO8/hQT434RpibCcrsZysbZdBkNhaVRYP4uS7IEj2HOHXRbVCLJtaVWd3U\nBaX8H1Zygg2XJMV2pIaXLnQAMDevvoSkTGNQVwyhEWk5HDST1b0Fqg267mPvx1cc\ntUxXfv/ylTzbIq7vOLHqm7L9Tbs/fK7c0iMWaXcuaFo8JCNyUDQkFnSuoQ/jRzDW\nW82PCqLxqytc3KfAVGvGv2TokUq5JHGFaWTsn3jXXJ6sEBrp/YBtuJwkU1i7jvnC\nMkaQ8L1jcwGsYab5bproG8oXWgwv5jEMItOIhEsOIi+g13rJAwyv4cpqMPyQ7sYt\nmISj0voje9oMTvzATYmx1OGRwQTNO4PljQuyg7ouLs1oxd0+xSP1f4lnspabWRRY\n/r8TwPrpicIi0Ph0MYaOwkuvrv6eOD89ps0FqLOd64K6WCC8gZ+hgCDuvuxAAbxe\nS9PnpMoGObCHYpx82q6HIY/TO1JQAFXNjoBC4HKqmZJsw7zI0CRJhr2K2kZ27IzU\ni9WAKd1nw/G4MuZj9+nmrUSKkwwmnCJGZeVTGZcuAzBrN7d6xi0=\n=yFOZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec6dbc437fe59dd6cfd648efc5cc33e492e38014",
          "sha": "ec6dbc437fe59dd6cfd648efc5cc33e492e38014",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ec6dbc437fe59dd6cfd648efc5cc33e492e38014"
        }
      ],
      "message": "cmake: Build `bitcoin-chainstate` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:44Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-30T14:55:35Z"
      },
      "sha": "13bc96b9ec4cd36c56359aa8e8945922614030c6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRjMDQ1NzY4ZTEzZjE1MjMzY2YyMDE0NDk4NTZmMGM1ODI2ZWJmZTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c045768e13f15233cf201449856f0c5826ebfe2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4c045768e13f15233cf201449856f0c5826ebfe2",
      "tree": {
        "sha": "b410e27cd37e329abd3a70fd5f23c9bf72e00e1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b410e27cd37e329abd3a70fd5f23c9bf72e00e1d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b410e27cd37e329abd3a70fd5f23c9bf72e00e1d\nparent 13bc96b9ec4cd36c56359aa8e8945922614030c6\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722965004 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284404 +0100\n\ncmake: Add `MULTIPROCESS` option\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7QACgkQQQEIES5+\nqB/O9w//TBXZ3mY9uCeBugZa4bILV/R3baAqVdjbo+TKyUWXlaq3Ox4KEPnhIFLt\nm30E5YwEBy3uRRpeE8RjEYpKOkdIfgk8YpbxD8k4FBFyMBCCYbhAboNkEUlQDMih\nZfbkZ9KkVgd8wOLLbp0Xam6wUwmiMXqg+WL5ny616ZBFUIhW76MqTv6KDiIfum07\nbew5cNXOBU56quTEzOSAHoWJhnyXrMZNUHR2U2h83d/lx5mOrYmln/lprZgLWXod\n0hCsPV4v78+jgtDyQkAfAaRj7wuM/gaLkWmSAeSKmOLln10hM0HAR2BalbVgVzKg\n+a4j7/RIEVee24T7HuJaRNl9f/ffDx6up0Z4gzde0MlqsUeHIZ/2ivq66GNu6ErV\n0fZpN3cnDY83X+Mk4tAvjeHbmjZeC6AywtET21N4Jo1KPz71Ci8cY+fXFN+3fmUS\nEb71lbf8s3CZG0RJcOV8dXHpbvcJVWdf2JHOK3VzhFQTxWl2rCxNaE+Qgv7JXxZA\nztM2zYREjimkGcsKbXVR9GJYmP88Tywa9n701Atn5Y36e+ghe1wmwYEo+w0MSqzp\nG3ZIHDEhyasA1TeGaJFhg1sJylEfm8ic7vS+6RKyCS4/VRCPoR/oOjAn9E8c+XdN\n4LcheMd9t7JHezhWPbsXMA9bCb4F43OcMzrhvXnGReMPzwHsj44=\n=fzo5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13bc96b9ec4cd36c56359aa8e8945922614030c6",
          "sha": "13bc96b9ec4cd36c56359aa8e8945922614030c6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/13bc96b9ec4cd36c56359aa8e8945922614030c6"
        }
      ],
      "message": "cmake: Add `MULTIPROCESS` option",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:44Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-06T17:23:24Z"
      },
      "sha": "4c045768e13f15233cf201449856f0c5826ebfe2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU1ODkzZGFiNzRiMTFkN2ZmY2NjZjZhZDAzNjQ5NGJiZGQ1YWQ2YTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5893dab74b11d7ffcccf6ad036494bbdd5ad6a0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e5893dab74b11d7ffcccf6ad036494bbdd5ad6a0",
      "tree": {
        "sha": "ce9cb2467f6ba4339e85de0a24fc8295f0bcdc6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce9cb2467f6ba4339e85de0a24fc8295f0bcdc6a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ce9cb2467f6ba4339e85de0a24fc8295f0bcdc6a\nparent 4c045768e13f15233cf201449856f0c5826ebfe2\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1707084770 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284404 +0100\n\ndepends: Amend handling flags environment variables\n\nIf any of {C,CXX,CPP,LD}FLAGS is specified it should be assigned to\na non-type-specific variable.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7QACgkQQQEIES5+\nqB/A1g/9EgTvcVAEG0WKxdznthOfM1pvkq4jVCveNdXENSy3MWwf8qFxu2rQGf9z\n8YKCuqCHB8Hr7h88prtrNVH5VMZPM7XpYAT1JVJmo8ERxIuoWZJttmZqs7uzC9mz\n5kn6bcZMccCQerQZOvn8QkI/oQUpvtOAl+hmFDf5DWCG+m9tKBZdvcHmKP0Oqo/i\nUPLhVtcWrT1q81aRqX9ktdGWpp+nU92xGGaLwzHUnfy3EHNROVQXB9pCX+dOyrv3\nQ0H2JOPp4YYcd4ZPilhgL45JeN4KPgVst2/k/98O2ZS6xd+JH/hnIJFennuvSyX7\nmxf0ldPsgQ+HJx5rOLjyaCeE1jvS8KyRM01h60hrMnv1CveAz5WCFMuRs1tGeDG2\nWeNHm7JLJSP4Cvmds7l55BQ2k78aaz5nKdbpMl84yr+nBT7A+xAdJrOWtHm5Rt/w\nbSX5pLo/vr82E/XIOMWykBzIA+HBiK2fqo+TP/QwBjMspo5T6t4K6I+htAiGLMCY\ngFFUHYBZ2cwVvbNcB4b/uosiOtOzkPIgjy/y+y+kIo/eVC8AGMQNS3u6cRG450Gs\n6PZqvde5eb3CgedYpSacYnE3ZqVW447kodXWLu7IZIczzHiTOE93uSeEJTU261V1\ndsdfI+SxIzxjl4zxEQUS0TNDGiWVjXN2/mKPhrkuXSXizWRFi20=\n=9cS8\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c045768e13f15233cf201449856f0c5826ebfe2",
          "sha": "4c045768e13f15233cf201449856f0c5826ebfe2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4c045768e13f15233cf201449856f0c5826ebfe2"
        }
      ],
      "message": "depends: Amend handling flags environment variables\n\nIf any of {C,CXX,CPP,LD}FLAGS is specified it should be assigned to\na non-type-specific variable.",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:44Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-02-04T22:12:50Z"
      },
      "sha": "e5893dab74b11d7ffcccf6ad036494bbdd5ad6a0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ4NGFhMTU5MDE2ODE3NGJjNzczODlkNjdmODdhOTRjOWQyMzRjYzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/484aa1590168174bc77389d67f87a94c9d234cc4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/484aa1590168174bc77389d67f87a94c9d234cc4",
      "tree": {
        "sha": "d880a50d03c53bd45ddf353f6b455473832fb20c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d880a50d03c53bd45ddf353f6b455473832fb20c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d880a50d03c53bd45ddf353f6b455473832fb20c\nparent e5893dab74b11d7ffcccf6ad036494bbdd5ad6a0\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1705498180 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284404 +0100\n\nRevert \"build, qt: Do not install *.prl files\"\n\nThis reverts commit 1155978d8f3fcc1cebf357302b933b834f9c9465.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7QACgkQQQEIES5+\nqB9XTg/8DZsqRpFC0wbICJ8VA/au8cWGtHTcX/AxE6ZNxU5X8A5b7dNAAdAZENqZ\njJozOg3TFt7BQN7FoRpSNC95/LuLuXgobJvbydPT4DaxzKRMabFJUQoznsqjOSYS\n8fDWstk6JgE1zAmUK7OYflK4ubn2kXup/6oosLtPNJ9vZybzvOJmgEh7rfPWgKr7\nrZRMH+ag/8R007DbfOQGzU/e4KRc3KdbkrsFM66gSQCkLlVE55Uo7n/zgQwUXiZ9\nHeBAAFYwDIN/bIJHBsLpwHA/z6jhKPScQdYBvHuQySg+CNyIOwyv3ij/Jj92att4\nohiihtJuYYKHr/pvd6QICcIP/nhXjCZeKBe1061jR1riB7cgRXn7n+ndiA4f1PB3\nLQzrzlpLQxDkg5g4M1df0znnGWQ7fmeLLYV0iALh+FplDhCzl8b46aLT7E28jPyp\nZsCYcr1SGSuQGtGECW7zZH5dGQqP9wue08nR8wINgZ3LHIf4dbcsnNYV/IrGzQGe\n7VKBIuhVlH1MzT/6WjywThzgRhjptfuHR3JFC1F5p1dN2bC+V2LtdxcoRjdIfluu\nST/kiXV724BXhRjeR7425YTGoy+CwjPOVNVRiRedwViA65KTHHHUVPmTp1N7mTQD\nBQAxxgpbOje0Cl38a0+ZReb70SEwSiSciTBayip/ZDhav9ACJnc=\n=E5No\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5893dab74b11d7ffcccf6ad036494bbdd5ad6a0",
          "sha": "e5893dab74b11d7ffcccf6ad036494bbdd5ad6a0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e5893dab74b11d7ffcccf6ad036494bbdd5ad6a0"
        }
      ],
      "message": "Revert \"build, qt: Do not install *.prl files\"\n\nThis reverts commit 1155978d8f3fcc1cebf357302b933b834f9c9465.",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:44Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-01-17T13:29:40Z"
      },
      "sha": "484aa1590168174bc77389d67f87a94c9d234cc4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNhNTAyNjNmNzg4Zjg5ZTE0NDAzZWU5OTA1NjYwNmE5ZTNhYWJhOTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca50263f788f89e14403ee99056606a9e3aaba90",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ca50263f788f89e14403ee99056606a9e3aaba90",
      "tree": {
        "sha": "b4314612fec34648193411224200ca71b41b7af1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4314612fec34648193411224200ca71b41b7af1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b4314612fec34648193411224200ca71b41b7af1\nparent 484aa1590168174bc77389d67f87a94c9d234cc4\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1715757542 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284404 +0100\n\ndepends: Rename `cmake_system` -> `cmake_system_name`\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7QACgkQQQEIES5+\nqB/W/Q//RnCuAtoeDDljAv3gfoORnjrDjAgQKEBblok15nv4ZE76L+e5YGEJIf1t\nSYX2ULYCin764525i6Cj1pVxUZm1Q/abEiCuCANCGOu1LbVfQSxeHBFiA39NFjpy\nZTSaDcBEPpeVPYHLKn26L1MteplD2/eRmoJy7PVbz6YkvSEiUaVOP351alf3hhAL\nn6uzQ8Ml+ZfF6iNdgfvBJA1KmzpZuqzaWpxLSmP6Mjn8jCMBBbWWT5ddVH4OuVlM\nb+O5SiIROcLkTSDpYl9hR3sy7kexicJix/3xODaoxW4l61RVzqmOC75XpivJcf86\nlb7TgsJmP4l7Z6scval+FxLr0cpxCmjCotrT6Tgx2daGQ5VFff5UDIWQ2Rphz4Sg\ncjMblJHEmtqFTmpbCF+8HdiNxqxOAVeFf9yh1b628Cj3ot5G9BVIF/tx2CH9BW+j\n2pf/7/sUSAoY/ksXTKbeQYFDF4GpTOzXpmdTfMPpiRkhtMtYdAdZoRjocAINmy3L\nj9+q7wk1p2qKG2Fn3VWh0muSPYwHLMN5V/FL/9Jkb/6QWSFT+doioGya+kvyiCox\n3i5mrdGLB3MCgkm03rLKBgXilfUl69YEG+TAYa5XJTIA0LBDM38IlP0jMaF08dcK\nMdZkCIZL1AsBIRxAjMJzpp6vdmCjgUeRMYCuMqEv0XSk+qHComM=\n=ffy4\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/484aa1590168174bc77389d67f87a94c9d234cc4",
          "sha": "484aa1590168174bc77389d67f87a94c9d234cc4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/484aa1590168174bc77389d67f87a94c9d234cc4"
        }
      ],
      "message": "depends: Rename `cmake_system` -> `cmake_system_name`",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:44Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-05-15T07:19:02Z"
      },
      "sha": "ca50263f788f89e14403ee99056606a9e3aaba90"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhlZTc5MTdhZjgyYWU3ZmFjOWIxYjE0ODlkZWYwZmRmODdjMzlhYjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ee7917af82ae7fac9b1b1489def0fdf87c39ab4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8ee7917af82ae7fac9b1b1489def0fdf87c39ab4",
      "tree": {
        "sha": "8bc67339be1a623e6d4906179e40b39aebe76ec8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8bc67339be1a623e6d4906179e40b39aebe76ec8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8bc67339be1a623e6d4906179e40b39aebe76ec8\nparent ca50263f788f89e14403ee99056606a9e3aaba90\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1715767291 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284405 +0100\n\ndepends: Add host-specific `cmake_system_version` variables\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7UACgkQQQEIES5+\nqB+uXw//d7PWfVSd9R4gT/1Vwp0UdHq6oHLg6NL8HojOCxbWECEa35XjPp0T/OEy\nVge9xatuhYy1SnHdlXeIiRXYIymELA8V6jV3uyZU6Z+yVHA9/L2Q/F3Kf2gi2Q/z\nof3omwGj725mlprJOtGsmm1DJNqP47rf2Z8S1U+GXAqUS5kSk6fRe2jymtOyTjAh\njI1g5Ma7xis179paY8cLh16NhVIiDETJnlu8xwZuiFNLfrl7e87qEdUiX/uknCZC\n8q4BvrI8Tawv5F2dXt30qhRqbnebxNEQQd+EqhdMsgw1hGI6knvxK5EJedwoDCfm\nnran0e3mw8Fd375n+LKvq2JjL1bc+K9xt0ie/Y1U5776bE0I6JoXf957/jVGsaCI\n/cfF+Gm3VdHfu6eCdcp2Bx395WQ1FXQoU8UDKj3ZGlYr8nUjkLDxjX+3NAqGyCxI\nzykThEvlzFW/qr5TP8NkGsLgCywcoW1Po02jeXqgbkrPOstZPBFDL7lU1/OTegtF\nt4ERVVOKXwCj9kY3Qe1US9hPzXztHQyO/Fr7Tv7l79SLiK9foTgfGrpC/3DNNjPk\nhDqf8qUSPtPaAhEWCOULJU3CdiQqv9n8VQfqgUtlk/ePGcBBZjF9sFE3l5b85UpG\nsIY0INd4mMiBN3r3C4iBGjuhHMH3dvDUdsceUw2daINDBLtP5Dk=\n=mIHd\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca50263f788f89e14403ee99056606a9e3aaba90",
          "sha": "ca50263f788f89e14403ee99056606a9e3aaba90",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ca50263f788f89e14403ee99056606a9e3aaba90"
        }
      ],
      "message": "depends: Add host-specific `cmake_system_version` variables",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:45Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-05-15T10:01:31Z"
      },
      "sha": "8ee7917af82ae7fac9b1b1489def0fdf87c39ab4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkyZWEwMDc0NDU1NzU3M2NhZTIzNWE2M2I4Mzg5NDUyOGJiZmZkMmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/92ea00744557573cae235a63b83894528bbffd2a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/92ea00744557573cae235a63b83894528bbffd2a",
      "tree": {
        "sha": "60d5be54ef3dbf65e41ec0311f76dc05feaf9140",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/60d5be54ef3dbf65e41ec0311f76dc05feaf9140"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 60d5be54ef3dbf65e41ec0311f76dc05feaf9140\nparent 8ee7917af82ae7fac9b1b1489def0fdf87c39ab4\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722416636 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284405 +0100\n\nbuild: Generate `toolchain.cmake` in depends\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7UACgkQQQEIES5+\nqB+QRw//Z/R5XSsbNR1hXHCDav/BJgCMVAQNC0qVQSKKjc7rl/YEstZ8zjuPs4DM\ngMKn9eC6hURoajhNaB+X3MHL+CxffSav8a15K/gP2hO8ApJvkr4SjHktMDNVgTV+\nL/BM5WYUJB+JjlWyINVtsIGRFbywtk2NepTJ8gQqCeBL+8A+Dc5g5/vmxHLVVfk6\nfUA1xJb1Ps+3/ZF5LhmjZfvONV2xAT4KzOtePZuzcknGua3Hy5E9RZH7ij6jgqbt\n/nTIvlwq5M/FF9HijMtswAWNk1SrJapeNdcQyC8XjhVLbDHg+YyiZzuTnnkJ6sKh\nxbOOsRbwUt/HOOVBvbsJExDMEgt8abwOLGvNhJemZQISL4P+PX/Wa23ykOHsolD5\nkWVSJ1S1OaKg8BAXjgN+vR5b1NufiX4RI5hklKgEbT5qDHyCmPYETlOckomYQosm\n/k+lIO/qNv7/tHf7BgET4FhCsg9apVWBiEPZ7QW2DM4CP1K/kdjtU3RpL8jDUBCN\nkvZ3E2/YOX4Gw3ESUYafOjJdzEpgasb9a83gnN96vtLUtkApMRPLMywffSOWxmpJ\nSYeMf47SjtE5LK0nmAMkCAXyciwa5nt7YTPu5yW22q7yuhlH0fd3HGOaFgisesBV\nxy45S040lZ0RgvQpHnEifSDbT3pmg8deoNW35NzZbiCE64F2bog=\n=URt1\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ee7917af82ae7fac9b1b1489def0fdf87c39ab4",
          "sha": "8ee7917af82ae7fac9b1b1489def0fdf87c39ab4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8ee7917af82ae7fac9b1b1489def0fdf87c39ab4"
        }
      ],
      "message": "build: Generate `toolchain.cmake` in depends",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:45Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-31T09:03:56Z"
      },
      "sha": "92ea00744557573cae235a63b83894528bbffd2a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFkNTVkYjg3YmY3N2UzNjEwOWNiYTg2NDg0MDI0NmI2YzZhOTc2OTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d55db87bf77e36109cba864840246b6c6a97694",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1d55db87bf77e36109cba864840246b6c6a97694",
      "tree": {
        "sha": "f119703c5687e02c63f3dfa21c110f6b60b68ed9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f119703c5687e02c63f3dfa21c110f6b60b68ed9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f119703c5687e02c63f3dfa21c110f6b60b68ed9\nparent 92ea00744557573cae235a63b83894528bbffd2a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720049171 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284405 +0100\n\ncmake: Add cross-compiling support\n\nTo configure CMake for cross-compiling, use\n`--toolchain depends/${HOST}/toolchain.cmake` command-line option.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7UACgkQQQEIES5+\nqB/T+hAAuiTv71qZLabl8lAoEyXILEzq/kX2Hjg7/9h7quTosx7lnu5EajfSv1Zq\n8aOZuKKVkjEgF4lOuPS7tLYIGhH9jU2iMOxgp6CtwLMBpRvG8T9Zx5INsAmlw5jT\nMmVod2qWNyCN22B4SQxdDjj1B8rFM5thFYPQBolh0uo7q00qIaxk3iYDfEzRumWv\nzO1DK5dk3QdUp4R3sECa0bo81sTja7D1RftE5rAYQuwa5xu9CliDWUUJOnhu4Aiy\nWEKtfbgJjS22qY6ihLxRqSvvGPrYD/qUfKCIOK8Z3asXZ95ER0LlBRd3laCeKt7c\nOfR1qlzq6DDASA80Iq0rP99H557Zn3JnyHhuUPQGEYtF3bCkLvxnpwqSP0rD9ZW4\ntomkLh621Dm+Bqba9xXAIt9tUf7oqrhvdHBCLvY4Ro8ADBqFQn2PqwBfV0PHxbTg\nxbn84aZRIkpjqSgvQhAfvDlPaunf/0sgwWbqQJaYX+aMyi1lm34JQJqR6rMLlaLB\nHW9KCmKeYFc4i13FGW10il3OWwHOILBvESLyzqdYKnHBO0Td6qCNDBsFVOu8POxO\nTn2Qk28NPzh5YRbdgs8uejbWMr5qLoyXwahF8vkVLpLTUz6w8E4V5fcEO87Yblbs\nrTsAidUOuKk0/z/M9A7bqN/b3JFSJ2wX/5u2lWS7yi/JN5ihmyc=\n=/j/O\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/92ea00744557573cae235a63b83894528bbffd2a",
          "sha": "92ea00744557573cae235a63b83894528bbffd2a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/92ea00744557573cae235a63b83894528bbffd2a"
        }
      ],
      "message": "cmake: Add cross-compiling support\n\nTo configure CMake for cross-compiling, use\n`--toolchain depends/${HOST}/toolchain.cmake` command-line option.",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:45Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:26:11Z"
      },
      "sha": "1d55db87bf77e36109cba864840246b6c6a97694"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBkNGZjNzQ5ZmE1ZGY2YmNjNTIwNTllYWY4ZjFmMGU2OGZkMzE5MzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d4fc749fa5df6bcc52059eaf8f1f0e68fd31935",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0d4fc749fa5df6bcc52059eaf8f1f0e68fd31935",
      "tree": {
        "sha": "2340c134ef13b1256b654e25bf10bd0562a58e9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2340c134ef13b1256b654e25bf10bd0562a58e9a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2340c134ef13b1256b654e25bf10bd0562a58e9a\nparent 1d55db87bf77e36109cba864840246b6c6a97694\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721820552 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284405 +0100\n\ncmake: Implement `install` build target\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7UACgkQQQEIES5+\nqB9ECA/+Nh0WUz1d+pxjs/2XmzSTc7U5W2wCxl1B7/b+H/OdqKpEBnoosHspcWvR\n8r0ziuoNKBkRKaiCliRujIB2vztbrVCGssp+INjO3XjlI3c8r+zmhNjRa2qQBJjr\nFMRjPqp5bG+6cWWIhIco0swc+hmdytxZdfFkOLVgn4kP345iicWb8WDJyZPKz7DI\ngztTkybXMTy24cemPkYeB8VrLcCjRfIScPWeKJ4FmkOOc72AB2RHGD+MqhEqfU4i\n1I0tipHwcznqNJpUqK710fzjzCkWMNIGAVzp9jWrEoE6VkmQ+bUyQmYLOU5V8rsC\nrpwAitgTO7D5I3G/0BWHp9laRlTUlxwzWZHlxJ6pr/HUBZQbPd5sI/Rn9ccyfj0M\nQsoQLIKessdSsLs+1jtlggoU89LcwjlWMsiKpM4L8NV/qCE9i4U8DK7OwSEUbFwv\nLfdBxarSS2Wll8e48YRDiMbXoftvQ5dsYJgbtM+eLnOXawOWWkygnKNKTLvaa//W\nakX3bRT9clEAGZzbx0doBfJ9Lg8vNZdaw/nJXRoQY6GzRKzGEMmU7A+rVRMyRjrT\nsg65pFyQwKscYnITWHxvk1XBD7HdUcn6dTb1NDOE80rtlLEOhjpSbjuA/cCm0G/6\n4CGTCnIlr3SEYo/nwgXNADSDMDqnfUa7Z3EkPbo3f0R75ppQezY=\n=pWx8\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d55db87bf77e36109cba864840246b6c6a97694",
          "sha": "1d55db87bf77e36109cba864840246b6c6a97694",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1d55db87bf77e36109cba864840246b6c6a97694"
        }
      ],
      "message": "cmake: Implement `install` build target",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:45Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T11:29:12Z"
      },
      "sha": "0d4fc749fa5df6bcc52059eaf8f1f0e68fd31935"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFkZTg3OTAyMjQ3ZDUwNmY2NDk2ZjFlZGYwYzg0ODdjMTZmN2E5ODE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1de87902247d506f6496f1edf0c8487c16f7a981",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1de87902247d506f6496f1edf0c8487c16f7a981",
      "tree": {
        "sha": "ab357c13f1dbf45c22da1b441d77614853f313a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab357c13f1dbf45c22da1b441d77614853f313a9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ab357c13f1dbf45c22da1b441d77614853f313a9\nparent 0d4fc749fa5df6bcc52059eaf8f1f0e68fd31935\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1706357038 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284405 +0100\n\ncmake: Add `AddWindowsResources` module\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7UACgkQQQEIES5+\nqB8hCw/+KdM8aA91342GT8O17fJ54qJdZfqka8Qlnew1HkyG1wNWTZx8UMd+Kdga\nYcE4f2am8x4asS14oJBpP0GHD7Wl2K9FxZvGWNEtHm3BzLPjK7ifLySxB0ibIz0n\nBT8hz/vwiXQ1YU+XAwrFbSBWvvIUtZHp33W7ybgVTUt5xUuyXVFpiI2deyULbgU7\nWkFfRZwnLqopgpLXqwuKI/bQ76z/n1pF1UZTqzwXtXfH0Vh5ElrjqKh7Vk1NbAu4\nFL+MP4WqjQ24+N4PphTs4TT7z74Wpq/f7bfbnMkfFXxiaaNeB7KsmJr+i96RPTFr\n9+fjesxEDgtntc35x5v0iTIdxAPg/87MbnyyN94BY1m2OWHOi+ig6x4AfBTBnw6m\nC7gxMCk1E+Wm60ny+WeKt7A5pJ0pOMSRVInOE3w6zrKl0JAOU0EsifF+uneYAFBE\nnaskTFMJkq036JPPYSaUHmxNzLuqx4Y4XuMVRqYp8qTUcXhNQs6+cpBk4VBiglLO\nJ8c7dKVS8wuiVcq/koPOASSvknaM5uh+9ofea2Tk8sQnpm83UFpD1Ck5a3BLDnsg\nyCxY19tRx+iSFhcfZXQtPNklZvx/ytE34ndZFG1/QL/VHz5GfVeqonDtd+C3Ze1l\noD0Rt2NWqL2dE8z19OwzMdhQQinmsW/rLjz/8ArvhGMKoCP0+vA=\n=6TS2\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d4fc749fa5df6bcc52059eaf8f1f0e68fd31935",
          "sha": "0d4fc749fa5df6bcc52059eaf8f1f0e68fd31935",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0d4fc749fa5df6bcc52059eaf8f1f0e68fd31935"
        }
      ],
      "message": "cmake: Add `AddWindowsResources` module",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:45Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-01-27T12:03:58Z"
      },
      "sha": "1de87902247d506f6496f1edf0c8487c16f7a981"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZiZjE5MzMwOWM4OWI1M2Q2NDVhNzhiNmVkZWEzNmNkM2RkMmY1N2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbf193309c89b53d645a78b6edea36cd3dd2f57b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fbf193309c89b53d645a78b6edea36cd3dd2f57b",
      "tree": {
        "sha": "2a5504dc225a6e159afea9e6c145bf580eec1fa0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a5504dc225a6e159afea9e6c145bf580eec1fa0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2a5504dc225a6e159afea9e6c145bf580eec1fa0\nparent 1de87902247d506f6496f1edf0c8487c16f7a981\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1714135121 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284405 +0100\n\ncmake: Add `APPEND_{CPP,C,CXX,LD}FLAGS` cache variables\n\nThe content of those variables is appended to the each target after the\nflags added by the build system.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7UACgkQQQEIES5+\nqB95AxAAinGPDxucZBuq20EWVMclxZcDQs+fTlKZvsKKEPsDUCQOmfxgcKL5V072\norzMU9PBpqbVx/E+zFC1MBG+Qsz+xkOPMfCivVJO0LgZtmQKHTABQUW6C+HBbNzP\nmY4lONO9cL1V/o23Qsxas5nV5RwzSP1aIK8GyiquBq7NJGT4HrBCEvIqHa+aBGMx\nikpqM7x3HkQHJcv765GwkvoZUntYCBKIAPAjtX6oN4UtCmb51+e+FmJmN9p1FwX6\nR6ADHXOi0rZlWKHyeYIPuQk9hsee+5KYFL3FJl05v3oGAU/zLCN9K/V/WKSo6e4G\nbTnzoKUVRo8P8zs6GgjpS6TB1s9kPQdqqwJenanImBFe+vi7dxU0UbSs8MgHRCSL\nShdLBdzJY7yqtW8PcQB3Mn3AiH98cISXZbQePV7BwnMsRgQSIEAM34RPxo6RriyI\nChzAZhuAgIIyWAbVAoSVCa1vZx5Ye9y4a4iWAzitJNxrXZumnUM7O35Ll2LKb7yh\nZjvz+w9lZcGiZzB4WNW2gog/MmPPrtbAjMmk6QbtrrxKXdO7T8BEDyFL0TZuO80I\nBJvuS47bgtLeiEVrjqUjp+yH2xavVhywTyVrOrNbh/zYomq2gse22SxEt5naOK8t\nvYcakKppYt8+W3K8S9W/owUBHmPUXQ05RK7chnucZGeSFyjNfb8=\n=HZKq\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1de87902247d506f6496f1edf0c8487c16f7a981",
          "sha": "1de87902247d506f6496f1edf0c8487c16f7a981",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1de87902247d506f6496f1edf0c8487c16f7a981"
        }
      ],
      "message": "cmake: Add `APPEND_{CPP,C,CXX,LD}FLAGS` cache variables\n\nThe content of those variables is appended to the each target after the\nflags added by the build system.",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:45Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-04-26T12:38:41Z"
      },
      "sha": "fbf193309c89b53d645a78b6edea36cd3dd2f57b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA5NjAzNWJjNGFiOGM1ODE1MTRmZTYwNGEyYjQ5OGEwMjIzMWU2OWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/096035bc4ab8c581514fe604a2b498a02231e69e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/096035bc4ab8c581514fe604a2b498a02231e69e",
      "tree": {
        "sha": "270ba630a731ef785311098958c8f4ad5c549f67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/270ba630a731ef785311098958c8f4ad5c549f67"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 270ba630a731ef785311098958c8f4ad5c549f67\nparent fbf193309c89b53d645a78b6edea36cd3dd2f57b\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722964153 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284406 +0100\n\ncmake: Add `Maintenance` module\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7YACgkQQQEIES5+\nqB+OFQ/+JcaYYdp3SCfjVqpHY12BnGgTMvoQBAF22sFZSVMG7PplABycfa5aVWS3\noSIUfkbiTBu9n0rzvZOLky15dEY6z/PcWSDWHMEjpz1gC+a8LTAu8/eUGl1oT+h1\nlTSoOqTurQa68bHvNOB/1I4xbP4LRqsZbVr1hmYTxq55qi2VmYfpIw8R21FMYF2D\nKcCrFJC5AS84KK10+DPfaE3RY047FmXZlZej4ur4ycqIkBpenCoqYcnlSaeGTvsM\n2XGxVPSLaZuVsEwBOiO7nfOHejtjCQb9G75UdwzVTtKZAnEHllFmrCSY76eBrvdq\nyRsTsQu8Llp8q23D88iDFqxtJip7PFEcSHc2Em2sfEd/8js4vbeaDGGmjQ5KMgBI\nO/57n3bFNp6X4/v4yC5bEMlCvLRlM8Tk8qvnA1ZAGyh/U65jruah+JGq5yVYaexz\nnGad0aVSF6n8FC4ZgbTPfh5AkJBFnteIc4du5Izv/IOBAZNh/nZmhFjX1KnCA0yk\nzcVfGA+Sj/ChnGvuZRBqjfzqMFRxEiSITx96JhqUV+JgYoBKF70KlTqPylP7WNPH\n9wmQRXkuZRAjobCmJeVe7tSxCTMXVAgdAb+Ygpg99ELNKiZiILrdn/DfnLy852FJ\nyBS4BNU+whYnVYbbUMygZj9AartALId3mHj57XHt7p2xU59F/tM=\n=IAad\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbf193309c89b53d645a78b6edea36cd3dd2f57b",
          "sha": "fbf193309c89b53d645a78b6edea36cd3dd2f57b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fbf193309c89b53d645a78b6edea36cd3dd2f57b"
        }
      ],
      "message": "cmake: Add `Maintenance` module",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:46Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-06T17:09:13Z"
      },
      "sha": "096035bc4ab8c581514fe604a2b498a02231e69e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgxMjI0Y2MwZDg3OGRhMWFhMTllYTBhMTgxMzA0NzU4ZjE2NzdjMWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81224cc0d878da1aa19ea0a181304758f1677c1d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/81224cc0d878da1aa19ea0a181304758f1677c1d",
      "tree": {
        "sha": "dfe9f641f9d5050d3b227470ba47705459c8c7c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfe9f641f9d5050d3b227470ba47705459c8c7c4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree dfe9f641f9d5050d3b227470ba47705459c8c7c4\nparent 096035bc4ab8c581514fe604a2b498a02231e69e\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1717500380 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284406 +0100\n\ncmake: Migrate Guix build scripts to CMake\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7YACgkQQQEIES5+\nqB9tIBAAqgMaU+EKmpDDP3EpEJatCZZztuYZmxezbZoQ0x3Kd2aTjdbOMVVW2BqW\naQOZZFjH6xCWqJVCiDRdwwPDnbtMmU6zrteCII1sWWYMzrDx5kKmcp1YYy31zZq1\n+r47wl9NdOl6sc6sNZdiTsJmqdcgyotwZchGMYix6IVUeT7EyrwGrOzi/usKJRgu\nWL315es91DfL0z6f17hFcB/uMyh2VXgi67orqPJiDt9QXS23jK5+5LKIHCn0xivm\nEqT5VXXLUoLwucLHW2+nVgbtcBPkRA3GddY/wjZojjbSU5njXyLS7DGKRp3LY0G0\no80ripkFsylf7ABP+3kt/2cd7Aoj5zyJWjRJVSC2X/A1pFtE4RMoCuFBmzFrScl+\nOXU+hNb4c0FyDDF6YQYJd+r7Ol5QLoeBxJpOpTtblonwyCTdrNVwVvRAjeVH/wAx\nZJQOu+wTpoDf8KWWOAF9PHW8UuB6+Bgj+GTiV0kBLeD5otAGv1Y9S+rZC8Ux20Dx\nrRSN5q9Zl2n1oD87AxbQMRM3QKpiGu5GuY5AAf4FFtiCSFzfhpUM37HtE26b5Trd\nVTpmprP5r4K8n5K4wAjrvv0bEPl4Mz3k8Hyx/t/pVDxfXeECsX85iKeE0gBJS5Lh\nUZgebADAkCLGmES8iuFvJivpf2kh4UlJqJHSapUJZtdIVKXtjvg=\n=3jx5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/096035bc4ab8c581514fe604a2b498a02231e69e",
          "sha": "096035bc4ab8c581514fe604a2b498a02231e69e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/096035bc4ab8c581514fe604a2b498a02231e69e"
        }
      ],
      "message": "cmake: Migrate Guix build scripts to CMake",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:46Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-04T11:26:20Z"
      },
      "sha": "81224cc0d878da1aa19ea0a181304758f1677c1d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI3OGYxM2RhYWYxMGJhZGM0N2FmNTgyYTAwMjBlZDI4YzY4Y2NhYWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b78f13daaf10badc47af582a0020ed28c68ccaab",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b78f13daaf10badc47af582a0020ed28c68ccaab",
      "tree": {
        "sha": "b8a5c42ead403c8d5f1e2168793b6f3f2e84bad9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8a5c42ead403c8d5f1e2168793b6f3f2e84bad9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b8a5c42ead403c8d5f1e2168793b6f3f2e84bad9\nparent 81224cc0d878da1aa19ea0a181304758f1677c1d\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719672357 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284406 +0100\n\ncmake: Add compiler diagnostic flags\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7YACgkQQQEIES5+\nqB8KBg//ep8bvuZonFr5yw+/0+5p56G344czdBzAkCIlhK7C4OAWB/0Y9mJ6K7QT\nvG68OS9LuyEMA4zVaZk9DfwEWqrxobJEhcWJM/RxXzZMf2Qbz0ZgNSjJ3V7cFYNT\nDFKrPUCeiXTkPRRmKpdaMR/n3MWT+9ZTP6RJ3tD9bCp+rwK+6I9/QYefl2FjmKaX\nl2nC/iNZrKHXUsl+dk286P15TDnHieP3lfeoiSlyqegvpdVIiLZzYSawxO6hqe7s\nAMwlV1VVKh7NxymHvrHTHPdepM3paI7Rdfq6/ZrRd20r/Qx5sxz7tddKSR50Ar0t\nxuwJ2g6zX6TjDRrTjU/529H3lsmX4/q1yfYddvAPQvtnPWXDud+5XeNec6f23F5w\n5CVigN+gDWgCqvm6jYDJRidT61Qjd2TiFgEUFWlLZgCfjL22arVXW86KAKrzed/I\njW1nPfjWB+ETnCD4TP1qNBKJ97FR6mlvIzGHavU8ANNxns+KVw7y+PUY8XOuburU\nD5Bw0lq2ld4AhFQUT2HWbp8hHjoH2VM8yHldegAEIJCE4xOyIS64Fq/AsjKEAJTY\nCWU63V7UH9kF65Clk/xpn2mF6ypSxYvq3GOv1qB98fVvb8+dgKf01EF/Si7jGXNr\nnG65Okb817byxSLVM9lQQoDNYEJ9Y5eCcvuTQGIHf5/T41Nb6ls=\n=S3O9\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81224cc0d878da1aa19ea0a181304758f1677c1d",
          "sha": "81224cc0d878da1aa19ea0a181304758f1677c1d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/81224cc0d878da1aa19ea0a181304758f1677c1d"
        }
      ],
      "message": "cmake: Add compiler diagnostic flags",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:46Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-29T14:45:57Z"
      },
      "sha": "b78f13daaf10badc47af582a0020ed28c68ccaab"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNmZjcxYTM1ZmJjZGExODdmNWU4Y2UzMzdiYzQ4MDRkZDNkZTY4ZTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cff71a35fbcda187f5e8ce337bc4804dd3de68e7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cff71a35fbcda187f5e8ce337bc4804dd3de68e7",
      "tree": {
        "sha": "94422d60f4653fc093ee1552f07f1c71895cdcbb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/94422d60f4653fc093ee1552f07f1c71895cdcbb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 94422d60f4653fc093ee1552f07f1c71895cdcbb\nparent b78f13daaf10badc47af582a0020ed28c68ccaab\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1713883460 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284406 +0100\n\ncmake: Add `docs` build target\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7YACgkQQQEIES5+\nqB9zdA/+IuRST7pSotQP6gFlNbi3M7vN30DWI6J7TQwkLlLOVwEjpLI80U/jIMaN\nfUG15sJ3L2E7q5U3btTPKCpChTay6sbL4/2Oe9toW2MCEaTnozZaqQ5XtlZqHCcU\nAwNdJ+ztucL9l5LOhuZp2hfMXU9/JEsCpGVgzA6y91TBj9F+huPUYOVNF5QRo8hc\n2iCRDLmlzDZhLtoylb0do1T1D4nwvxT6nET9zXEXDRhmANSAoJSsvvUvucpdcjsy\nfq0qdKcbqBD9SRtv17fcc2zY3m86JkkCUzugO4AdkXS5gCDikuQV9XbMafscg15v\n8CJJ57PRBQEbeLuHR9UyS5UnCLGxV4zh6eUj2T3aJJP5FtTJhYRNURAeewCiYzbP\nd70LXw49KBiWkrTrKi/a4dTYTFidWHn3He0l+yxon0PYW3V3HA0YX5SWceyjd71X\nPSBZ8pROBCzMTODAbf3hQksVkSo2+o18rKtv/Ie9pmwLZaRbP4WrSi3HiKSINla3\nJ81RN7UesrfJMEz0U2/R044WcLj1FOUGVh7dlcX2X44rvJoe3DwD+N6KKdf2yiJ/\nOijDp9txZY6p71byvKuipRZ/KHoYKXcikF2YY4yzT0gjRSle5ACexp/+JuW9p7vs\n9VUYTyT76BZrRp2x52OSTOsFRYSxgqjfLSorxQIH7TBHcORVqQA=\n=9bcd\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b78f13daaf10badc47af582a0020ed28c68ccaab",
          "sha": "b78f13daaf10badc47af582a0020ed28c68ccaab",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b78f13daaf10badc47af582a0020ed28c68ccaab"
        }
      ],
      "message": "cmake: Add `docs` build target",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:46Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-04-23T14:44:20Z"
      },
      "sha": "cff71a35fbcda187f5e8ce337bc4804dd3de68e7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNjZjEyOTU5MjRmMmE1MWQwOWI1Yjg5OTc5YjkwM2MyZDYwMjcxMDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ccf1295924f2a51d09b5b89979b903c2d6027104",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ccf1295924f2a51d09b5b89979b903c2d6027104",
      "tree": {
        "sha": "efab3d1d7d0785be52551df7554493457e9da5ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/efab3d1d7d0785be52551df7554493457e9da5ae"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree efab3d1d7d0785be52551df7554493457e9da5ae\nparent cff71a35fbcda187f5e8ce337bc4804dd3de68e7\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722860218 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284406 +0100\n\ncmake: Add `Coverage` and `CoverageFuzz` scripts\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7YACgkQQQEIES5+\nqB/kaw/+NiMUT7SXcnOsxz5Rm27BorZbZDdE0/l9YE4PHM8aqHPa2mJNNmkztbxY\noBNkt/V1989xCUPCyfVNSd8rz8km+MjLSqlJO/YUbt+HCXn8g19sREwWdG2YeOTg\neta/KhxEKdkQ+d2SrddXvZDAhpW64fwxucsk0TqwZZVzdibboevZ396OvtE9BjqM\n2B9WYj5WOAl5hVXwD5H7E4jJqhxRPG+R1AA53NImkmHJguUjLLJ01Shihw0qGIfx\nL1TpMMBIh7KRr2Hgyny4BQjQEocX7X/WC7sWC3LTMS5TXnNUAC+4kBoFtHQgvoEv\nNkwuG1nFZ39oPNPgFfBphWVhw/oLSzipm+/67lZeC51giT/kqcWBKcqOtfX0NNAM\nyhbX0kImDRUXZy8/c5+TCi2iKEQJQSSlEDVcqv52LFTo3XPf2XNvwLQ70Nd6JWuR\nm9nZJGE2gIvwtm0jdNKP93t5D1GtcDdcfmw34mf53A9cV5mERf/shA6Atlj5Xz0L\nhSHAi8gc2+MHeYdmKU5YQGOGCDbjHQSfEVVfWkhK8XiU2BeNPcG5BTfY8MXkTSXk\njTfqAStQVxBXbokOiErvd2b8RK1ZgD8Vxmw62AeXUgM+BL+Wx8xa6oV8T/56f5Wy\niyuhpc3ZEpIGFfI5GWE+X/PK3/O0XtR/vonj2vGdgIya537KG5A=\n=r5lT\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cff71a35fbcda187f5e8ce337bc4804dd3de68e7",
          "sha": "cff71a35fbcda187f5e8ce337bc4804dd3de68e7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cff71a35fbcda187f5e8ce337bc4804dd3de68e7"
        }
      ],
      "message": "cmake: Add `Coverage` and `CoverageFuzz` scripts",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:46Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-05T12:16:58Z"
      },
      "sha": "ccf1295924f2a51d09b5b89979b903c2d6027104"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE1Njc4YWZlZmE0MDQ0ZDBmMWMwZWQ3NTllMmI2YWI4MDA1YWM3NmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5678afefa4044d0f1c0ed759e2b6ab8005ac76d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a5678afefa4044d0f1c0ed759e2b6ab8005ac76d",
      "tree": {
        "sha": "37b45d3be7fbd3bf372ecab7b2e6629244667c74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37b45d3be7fbd3bf372ecab7b2e6629244667c74"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 37b45d3be7fbd3bf372ecab7b2e6629244667c74\nparent ccf1295924f2a51d09b5b89979b903c2d6027104\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1717506889 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284406 +0100\n\ncmake: Add vcpkg manifest file\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7cACgkQQQEIES5+\nqB8bLhAAhpF7NC+At+Od+HnZrjDhK1pyRho+4Anj//EeSPsupm4DMV2IMlv/OGBT\nrcRaIddOZKKZztBSlQWUPhUk3xxhJCvZ2SCwAF61nMhWmkLvS1t3MNkaQnL7qkk4\ngiWmztNmbv7pukfZev/fEuXzMhkeXXcRochrwcJ3YgN27cNU2wdHLVm+8abFp0le\njqFRDYqAopgO9OfRjHKkZ7VrgwtTomCWZul88wG/CHOe7+SIgelBQMvY4Yv6DjUI\nvuhtDrqHTqo0o8uy6IRVRlVg0lx8e3prlOPryCdxLKBfY08cOml/Df/bqKHB+YJd\nTvqU3zvEbOz8SIM10Yy1fBr2Zs+IaaoBvLqwZdBbZyHoXgwsoUQFXiB8/zoX7QGq\nmlQyzJLO6VRCiDhzxEDe9P++VKOqzFeIiewiI2W1dQ8WgQWP/f0fqzsYqhWUkkZl\n0gOROfvM4sATB5wINMVOegd1TYDE81u85cXkO4PYoXmJdrL/xBANVFdhAhp18YOi\nHwLMGHwMYb0HGG1MSUy24nxBq6r354fWksxuOZISaPUjWujqV6SnKtTtzYFuDCcE\nIk3KTUDA8wJAk1TflgC7WXZ3iz78QTpq3hUfQcBPfXuM67rHFIUDQQZnZd0TsgNF\nVDutnCDqeLzYmj+biZL7VX1N5/AAdVMkTZU8Qi7xTRDd5zasH4Y=\n=ga2q\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ccf1295924f2a51d09b5b89979b903c2d6027104",
          "sha": "ccf1295924f2a51d09b5b89979b903c2d6027104",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ccf1295924f2a51d09b5b89979b903c2d6027104"
        }
      ],
      "message": "cmake: Add vcpkg manifest file",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:46Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-04T13:14:49Z"
      },
      "sha": "a5678afefa4044d0f1c0ed759e2b6ab8005ac76d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhjMTZhMmVkMDcyYzdjZWVlOGEzYWJlZjljMGU0MGU2ODU1ZjA1YWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c16a2ed072c7ceee8a3abef9c0e40e6855f05ab",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8c16a2ed072c7ceee8a3abef9c0e40e6855f05ab",
      "tree": {
        "sha": "c512ff0afe5e3a98f1678b0db5c8559072bfdccb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c512ff0afe5e3a98f1678b0db5c8559072bfdccb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c512ff0afe5e3a98f1678b0db5c8559072bfdccb\nparent a5678afefa4044d0f1c0ed759e2b6ab8005ac76d\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722415633 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284407 +0100\n\ncmake: Add presets for native Windows builds\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7cACgkQQQEIES5+\nqB+sPw//btxnq77MArbV0OupqrOJFPC9ZkDmuPWK4LNTT5eD81E0MSrJukqQ4VYD\ne0fX5vUlh343tQOWTy/bWDGMreToo6UA9D9yTqhnj6NLBVVRXgfFo0Td67J4VMnv\nZHhFQg2JJT3ONuAggBZhoV7enyD38Fowu8c8KGBR4l55JTFdPleQe5F8Z//QbgHG\nlJHMWIyqYCTRmn8U+Q73qh1j2OLEAiZQrTiHlL994B8WOcLPs3RKykMP1DT9t1Sw\nBrYahRRs51VpR5PnrauNlyOwTog4OxRtJuhqL1h+xLkzG9XIrPTMLLbEGbjMVyvJ\nwQtes09+ZdzTBeTDxZnG13CcjSEYUYUo9VNA57WgwLw97i31uIsQiSCnVHpniNk/\nA2ORfzhPomFn5IRQ80lOqlascx8fF2wJUgZlQSuX9LGxl/C9Xy6xwBBHTBENvq/5\nLbnSKNMzvnKDdcLE6dNzS+BXrc3YltpZtAHX8Om/lN9TnwlSP/L/1gv1//8/5fK9\nd8PA7eu12+cs3Pyh6jPKVepgvMvG5IXJ5NMN1fL5PpM69opWFhBAk6bifczkNEoA\nx1ZX5XRVugdrVNBb7rsLJ9F8Yzvr95wxZubTkGSLqPRLPYVLQSrCOOSEB+bCe+Pz\nd4k5P9BTya/nJYRjV4fzUbKgNwhY06rosFr3vzTr6ywMhOX5Oks=\n=6GaL\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5678afefa4044d0f1c0ed759e2b6ab8005ac76d",
          "sha": "a5678afefa4044d0f1c0ed759e2b6ab8005ac76d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a5678afefa4044d0f1c0ed759e2b6ab8005ac76d"
        }
      ],
      "message": "cmake: Add presets for native Windows builds",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:47Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-31T08:47:13Z"
      },
      "sha": "8c16a2ed072c7ceee8a3abef9c0e40e6855f05ab"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFhZWFhMDdkODdiNWUzNjM0NTRhMjU5ZDcxZTEyOGUyMmM1NGRmMTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1aeaa07d87b5e363454a259d71e128e22c54df16",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1aeaa07d87b5e363454a259d71e128e22c54df16",
      "tree": {
        "sha": "6d73dafaed5ec5fab67a418ac7ef02d79cd3c709",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d73dafaed5ec5fab67a418ac7ef02d79cd3c709"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6d73dafaed5ec5fab67a418ac7ef02d79cd3c709\nparent 8c16a2ed072c7ceee8a3abef9c0e40e6855f05ab\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1714296331 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284407 +0100\n\ncmake, lint: Adjust `lint_includes_build_config`\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7cACgkQQQEIES5+\nqB+EvhAAotTTDLP7cl2/xJiu010o/DmZsU+hajMnS+EUGvUbkybBmH0Gqf+CTnYV\n+h0Uwo78AArqUFP7Y/LHTg0GvRXg9XioChy9JCgsEODRFcp/fppQWE6NiwHCIuiT\nKbIGoB0PldHvhEnMObjTmTddwe6JnNa7qstgrDlpngNJYcq0ZflhZGWV7jOL43y4\nj35qgrJSx3ufcNyIexIu4ytwDtwcoo4ffff9mOzkLnfax6CxGRVwYRCxfcsrZ8dM\n541HK0OFSY7MU+mGtACRnfrNkIPl9rtWH7RwunxvxVmv3zaeFBvAxuWbiCYBY8zo\n7fg42HpDq24HN1NuVSjOXf6ejqciyAkDq4Q7RCeizQkYV17oNe3EM5NuXFLqjqfK\nEEhs8XefTT1ReJID0M56n+JlhNrKWtvqY6gex2chvJtYv2ha7NKcqHzVR82HuE2o\n4Sic13ARxvSzMSF+hp1lAbrKBHYzYEzRD156pDHYZvxjOK9Rd1UJCt/2zaEqT+9q\nIFDX5UHQmKBuMsecXdlSlXNLElMF/oF3f66WN2om6gFdrKU4cHpMt3FELThUwb4L\nrhqwbN2wKRsybSu985eRmZT1oEdYIjl6/XxQsZ4Xufu1/a5VctW+0abXjRzN9scU\nb76HIcaRPBnF4l8ygylzifs7J1TIgiHCt0LZ/YcOODVyheeDXp0=\n=vON6\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c16a2ed072c7ceee8a3abef9c0e40e6855f05ab",
          "sha": "8c16a2ed072c7ceee8a3abef9c0e40e6855f05ab",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8c16a2ed072c7ceee8a3abef9c0e40e6855f05ab"
        }
      ],
      "message": "cmake, lint: Adjust `lint_includes_build_config`",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:47Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-04-28T09:25:31Z"
      },
      "sha": "1aeaa07d87b5e363454a259d71e128e22c54df16"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDMwZGUzMzVjZjY1ZGVhZDYwMzEwNGExMTliNzY2YjUwZjgxMmVkM2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30de335cf65dead603104a119b766b50f812ed3d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/30de335cf65dead603104a119b766b50f812ed3d",
      "tree": {
        "sha": "ef425d7c1e1f1da15474fead198a4a6ee5cb9c9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef425d7c1e1f1da15474fead198a4a6ee5cb9c9b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ef425d7c1e1f1da15474fead198a4a6ee5cb9c9b\nparent 1aeaa07d87b5e363454a259d71e128e22c54df16\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721818481 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284407 +0100\n\nci: Migrate CI scripts to CMake\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7cACgkQQQEIES5+\nqB/qohAAkeZ+QnpiqHIucEblRM2xF/PNjvp6qGjXQV/psIITPVIFWE29WeBuU0Ga\nwbF0tUwW7bFssRr3LfZTyURGXb72QRMrF579Pu90sjeHhSC+KNL9x1MHKkgm6Shn\nNbV2hoeh+HCQD9m66e+ElgsEC1eKKuCV2W1aJEjeTiQZipIWUrv0kgr+Ggss6Pnm\nH+LPGTWOKal+W+ZA+5Lj800HGglZTkGYjxfydbk51CV8Z9wNCyDuwac790mtqzAs\n4Hy3y90GZodB+luwVR336sUFaLW5y5aaEjxnAggj7RAXiaCV+5OVk/fDQHQJU3kc\njTNAD486oXVnydNyEkjb4EFja9X+U9tAPaS3SRcDlglANTlbyuTD+KaFvONx6in5\noQG/oMjZhD5WF8Uv3MDwMGJKGTNomN5cSXFTxa9dI9bcHLOtOSVr73hDuia8edGb\ng7JjZ/bAnqFrIdRAVJdVUmPFafOLaKRr9mjGOXJt2kAKzI541u9HZ8+z21F8laNy\nf0p5QDJ0r7g+e4z2bFrL9hPnz1S4m6rKx8MKP+McWG0fV/RDihA6J72k3E7FY9xu\nuC1W/kDWSt71VAhtDz3/dLl3gT5n5TQ24q2v1rct/QW55UuMMH0X8yk/l/2i3h7s\nj/QXMAFiqLOvYpnxZWhJox187ETH/vY2fkx07iBPw4+ug6F/Ru8=\n=ih6F\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1aeaa07d87b5e363454a259d71e128e22c54df16",
          "sha": "1aeaa07d87b5e363454a259d71e128e22c54df16",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1aeaa07d87b5e363454a259d71e128e22c54df16"
        }
      ],
      "message": "ci: Migrate CI scripts to CMake",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:47Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T10:54:41Z"
      },
      "sha": "30de335cf65dead603104a119b766b50f812ed3d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFlM2Y0MDYzZTBkMDUwNGZhY2NmYzEzZjIwYzk2YjRiZjI3OWI2NjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e3f4063e0d0504faccfc13f20c96b4bf279b665",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1e3f4063e0d0504faccfc13f20c96b4bf279b665",
      "tree": {
        "sha": "ae03728b2e49826d7f5d141d0a7bdb5b78a96aaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae03728b2e49826d7f5d141d0a7bdb5b78a96aaa"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ae03728b2e49826d7f5d141d0a7bdb5b78a96aaa\nparent 30de335cf65dead603104a119b766b50f812ed3d\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721818519 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284407 +0100\n\ndoc: Update for CMake-based build system\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7cACgkQQQEIES5+\nqB9GHg/9H9pCkXdhOgEvyQPzsU4u9wqP56acDCfcfIaRmgi7DlmvCaKGHmeFxZFH\n83X+EKzoFPIHZnKY0UG4hEgtXj1zp9zIYeB/aYc/jO+q2nM/KDa7CBPgPnafNWZf\nEk2/8kf+KQc50Qj6XiwLZZd3UJKL2M8tLDVNXBW4SxR6+eXw6OMFDpVFmTONU//+\nSQO1dMluzj8ghWP1xxdlHwaaYI2ChX6EgKa1Mnal4r34iEJ1FZ04clL9sK7UkxZa\nIlTyw1QaHkOaDaHEa7R6GFzUSVilVZRnAfsil1X9NCZn5K9hUxHd6QR3Cy32plpu\nb2wNRHiqO6UAcyuQExwR67+H2hn6iksKLSvHvkXVTjmRRGoefgKpgZGPxQdlYHvx\nmUUZIkNPmV6LJH04i5JY2+qO4079rcQ8kcZnmzsK8CHsrjNS/f7zaOuOcyh0M2cz\nSuhYmd2WmsVyySAAWseFRTy45DHFC0alGeudApOrfSadTChVL5myaQR6qFRjT3D7\nvgoaWqDD2FhMJ+gMtyaPjW/vU2o1L7ILEjJSNfEMSVnPnOuqS1Ss9SjCkkCGJD5B\n8oTLqTEXO7YA8/Nc26f5+tpF+jwB51Y3jYa3ThlpL65ezLKLXIoeYIHogQDC0ZU6\nrvIrw9NsAfsrticaJFnVALfxM/7XYBK66KIY9DZiUTDSsthLwW4=\n=ubwp\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30de335cf65dead603104a119b766b50f812ed3d",
          "sha": "30de335cf65dead603104a119b766b50f812ed3d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/30de335cf65dead603104a119b766b50f812ed3d"
        }
      ],
      "message": "doc: Update for CMake-based build system",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:47Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T10:55:19Z"
      },
      "sha": "1e3f4063e0d0504faccfc13f20c96b4bf279b665"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY3YjFlMjM2MzM0ZjM4ZWM0ZTRkMjI1MWRiZGZiNzkwZjIwZWQ4OGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "tree": {
        "sha": "a7b197b3da0c56701cbf571beb7bdc8102260f6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a7b197b3da0c56701cbf571beb7bdc8102260f6d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a7b197b3da0c56701cbf571beb7bdc8102260f6d\nparent 1e3f4063e0d0504faccfc13f20c96b4bf279b665\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722853916 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284407 +0100\n\ncmake: Ignore build subdirectories within source directory\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma3O7cACgkQQQEIES5+\nqB99wRAAndZ7mWe0vt2AmIr2k0QNa7RWspYdfkZ2QLV5IPDk+iwImVwGZdpe2T2s\nModx/c7VUlSRJj3utWTtXtNz3oeersNir+haH/1GItDUrkD+CTGoGCD7sggLk25Q\nxPsuVNLSJfds0GvYsfzeM8337+3Ft+czz/k0RQCTIg97x9tKVXiTgX8qUhzbqT2A\nVr1z7GnGeSjHuseIVfGfEJYMx/XrU/UEiS6j0wQgXC4Mi8xeTEFq/XSWURmB8FvU\n40dpEZCxtzLNbqVW6xTohqqIbGUjo7r7MOKr7ujzdb5/8hUF68QTRl+Jlwylf6rh\nh7ckkFfwUEgQUIMRN8Z/I7Nh5tmmZUAF0iSOgF6Fg5TMtVl+Bk+qU7SfS5KcveBa\nHMl0AY+G5QVkGoldxwluDL1HDvtdL8kkBEuqp0nTJ0NJT5QtjKNDhONet4MymRd7\nCCG4h26ivd+KJ8xBuvHQ7WHWqPYpboNZCmWs+3eSl2l0GZXZGyqikk6ZlTuKCudU\nG7bZIdWes2OKHySBCXTWGAYFzEAZPYvy2/pMNDwrZYVYV/cn4jO9FhhGsU0xJC6T\nGRxJJaHMCzAQfPiB/GCZfKjXNWgWjGlvUSQ6c7bZywEDPFM5X8NFdHeCXKgeDaXm\nazSy5kJfaASWU8VBK6nPZbAVqJFxOcmuXAFaNSfXRfFwhmZ4bXA=\n=N0TA\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e3f4063e0d0504faccfc13f20c96b4bf279b665",
          "sha": "1e3f4063e0d0504faccfc13f20c96b4bf279b665",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1e3f4063e0d0504faccfc13f20c96b4bf279b665"
        }
      ],
      "message": "cmake: Ignore build subdirectories within source directory",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:47Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-05T10:31:56Z"
      },
      "sha": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b"
    },
    {
      "event": "reviewed",
      "id": 2231402133,
      "node_id": "PRR_kwDOABII586FAH6V",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2231402133",
      "submitted_at": "2024-08-10T10:44:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2231417621,
      "node_id": "PRR_kwDOABII586FALsV",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "👍 left a few things I've noticed, ignore the nits if out of scope",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2231417621",
      "submitted_at": "2024-08-10T10:45:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13827622778,
      "node_id": "HRFPE_lADOABII586PurnmzwAAAAM4MMd6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13827622778",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T11:02:36Z"
    },
    {
      "event": "labeled",
      "id": 13827642616,
      "node_id": "LE_lADOABII586PurnmzwAAAAM4MRT4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13827642616",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T11:15:27Z",
      "label": {
        "name": "DrahtBot Guix build requested",
        "color": "bfd4f2"
      }
    },
    {
      "event": "commented",
      "id": 2281111100,
      "node_id": "IC_kwDOABII586H9v48",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2281111100",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T11:17:11Z",
      "updated_at": "2024-08-10T11:17:11Z",
      "author_association": "MEMBER",
      "body": "Rebased due to the [conflicts](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277190642). More feedback has been addressed.\r\n\r\n> (The drahtbot guix build failed due to a silent merge conflict, I presume)\r\n\r\nFixed.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2281111100",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "unlabeled",
      "id": 13827843274,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAM4NCTK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13827843274",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T13:19:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2282276144,
      "node_id": "IC_kwDOABII586ICMUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2282276144",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T20:59:27Z",
      "updated_at": "2024-08-10T20:59:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds (on x86_64) [untrusted test-only build, possibly unsafe, not for production use]\n\n| File | commit c2d15d993ef06d97d4c117012bda6efa3dcbac45<br>(master) | commit 9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`32718731b66fa579...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/SHA256SUMS.part) | [`1fab9153bcd288be...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/SHA256SUMS.part) |\n| *-aarch64-linux-gnu-debug.tar.gz | [`5f7e9224081d972f...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-aarch64-linux-gnu-debug.tar.gz) | [`4f2ebfc23ddceda5...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-aarch64-linux-gnu-debug.tar.gz) |\n| *-aarch64-linux-gnu.tar.gz | [`a93bc3fa935dfadf...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-aarch64-linux-gnu.tar.gz) | [`3cc2ff8948fa899d...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-aarch64-linux-gnu.tar.gz) |\n| *-arm-linux-gnueabihf-debug.tar.gz | [`99730a0c004bc3db...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-arm-linux-gnueabihf-debug.tar.gz) | [`a0d150805cd81152...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-arm-linux-gnueabihf-debug.tar.gz) |\n| *-arm-linux-gnueabihf.tar.gz | [`5a12c90fb5d29dba...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-arm-linux-gnueabihf.tar.gz) | [`08e992a21f2bf799...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-arm-linux-gnueabihf.tar.gz) |\n| *-arm64-apple-darwin-unsigned.tar.gz | [`c8ea2e5320c64f1e...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-arm64-apple-darwin-unsigned.tar.gz) | [`61b2f96edc6a038d...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-arm64-apple-darwin-unsigned.tar.gz) |\n| *-arm64-apple-darwin-unsigned.zip | [`d1e09bf51603721c...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-arm64-apple-darwin-unsigned.zip) | [`17e1e1f520a91602...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-arm64-apple-darwin-unsigned.zip) |\n| *-arm64-apple-darwin.tar.gz | [`ece8050e1f74be5e...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-arm64-apple-darwin.tar.gz) | [`9e3cf103f511cde7...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-arm64-apple-darwin.tar.gz) |\n| *-powerpc64-linux-gnu-debug.tar.gz | [`cf7ad7592957fefc...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-powerpc64-linux-gnu-debug.tar.gz) | [`ea2c4b11cf2f88fd...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-powerpc64-linux-gnu-debug.tar.gz) |\n| *-powerpc64-linux-gnu.tar.gz | [`f2b5b501f220b3ed...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-powerpc64-linux-gnu.tar.gz) | [`deb853798eb19d31...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-powerpc64-linux-gnu.tar.gz) |\n| *-riscv64-linux-gnu-debug.tar.gz | [`1f77b7981aebf7e7...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-riscv64-linux-gnu-debug.tar.gz) | [`3226082b3c39a8cf...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-riscv64-linux-gnu-debug.tar.gz) |\n| *-riscv64-linux-gnu.tar.gz | [`b6d59d74103eaaef...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-riscv64-linux-gnu.tar.gz) | [`b1c42ee17321f910...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-riscv64-linux-gnu.tar.gz) |\n| *-x86_64-apple-darwin-unsigned.tar.gz | [`c3035c4a841bbd6b...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-x86_64-apple-darwin-unsigned.tar.gz) | [`84c25afd2415e35b...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-x86_64-apple-darwin-unsigned.tar.gz) |\n| *-x86_64-apple-darwin-unsigned.zip | [`6b2cef38732b59bd...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-x86_64-apple-darwin-unsigned.zip) | [`d080ade93e33fed0...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-x86_64-apple-darwin-unsigned.zip) |\n| *-x86_64-apple-darwin.tar.gz | [`610f7ff43cd32e87...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-x86_64-apple-darwin.tar.gz) | [`8f25211c18f59873...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-x86_64-apple-darwin.tar.gz) |\n| *-x86_64-linux-gnu-debug.tar.gz | [`460af85bfd9e7a29...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-x86_64-linux-gnu-debug.tar.gz) | [`b2679e869fa8187e...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-x86_64-linux-gnu-debug.tar.gz) |\n| *-x86_64-linux-gnu.tar.gz | [`48d02aa0e3f4a6cd...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-x86_64-linux-gnu.tar.gz) | [`bf1a6e0864f5cc0e...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-x86_64-linux-gnu.tar.gz) |\n| *.tar.gz | [`d017f099a0a35f8e...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0.tar.gz) | [`e346a2a4572d2af3...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5.tar.gz) |\n| guix_build.log | [`6643a4e45f91d3aa...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/guix_build.log) | [`931faed9c884d257...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/guix_build.log) |\n| guix_build.log.diff |  | [`7a8d0b3925122c0f...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/guix_build.log.diff) |\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2282276144",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "unlabeled",
      "id": 13829260816,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAM4ScYQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13829260816",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T20:59:27Z",
      "label": {
        "name": "DrahtBot Guix build requested",
        "color": "bfd4f2"
      }
    },
    {
      "event": "commented",
      "id": 2282278895,
      "node_id": "IC_kwDOABII586ICM_v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2282278895",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T21:13:25Z",
      "updated_at": "2024-08-10T21:13:25Z",
      "author_association": "MEMBER",
      "body": "@fanquake in  https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277722262:\r\n> Had a look at a Guix build. Stripping the macOS binaries is broken:\r\n> \r\n> ```shell\r\n> -- Installing: /distsrc-base/distsrc-ad2140d4d8cc-arm64-apple-darwin/installed/bitcoin-ad2140d4d8cc/bin/bitcoind\r\n> /root/.guix-profile/bin/llvm-strip: error: unknown argument '-u'\r\n> ```\r\n\r\nFixed in https://github.com/hebasto/bitcoin/pull/321.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2282278895",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13829333131,
      "node_id": "MEE_lADOABII586PurnmzwAAAAM4SuCL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13829333131",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T21:13:26Z"
    },
    {
      "event": "subscribed",
      "id": 13829333138,
      "node_id": "SE_lADOABII586PurnmzwAAAAM4SuCS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13829333138",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T21:13:26Z"
    },
    {
      "event": "referenced",
      "id": 13833876799,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM4kDU_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13833876799",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "eff463b85e33c712d2d0c0ee9f80c46f930a10f4",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/eff463b85e33c712d2d0c0ee9f80c46f930a10f4",
      "created_at": "2024-08-11T10:29:07Z"
    },
    {
      "event": "labeled",
      "id": 13847738907,
      "node_id": "LE_lADOABII586PurnmzwAAAAM5Y7ob",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13847738907",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-12T12:23:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2283828276,
      "node_id": "IC_kwDOABII586IIHQ0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2283828276",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-12T12:23:06Z",
      "updated_at": "2024-08-12T12:23:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2283828276",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2284184677,
      "node_id": "IC_kwDOABII586IJeRl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2284184677",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-12T14:46:11Z",
      "updated_at": "2024-08-12T14:46:11Z",
      "author_association": "MEMBER",
      "body": "@fanquake [wrote](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277886777):\r\n> I think we can improve the output when `-DWITH_CCACHE=OFF` is used. Depending on the system, that output might be:\r\n> \r\n> ```shell\r\n> cmake -B build -DWITH_CCACHE=OFF\r\n> < snip >\r\n> Use ccache for compiling .............. ccache masquerades as the compiler\r\n> ```\r\n> \r\n> We should probably at least indicate that the option was respected by the build-system.\r\n\r\nThe issue, along with another bug I've noticed, is fixed in https://github.com/hebasto/bitcoin/pull/325.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2284184677",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13850398930,
      "node_id": "MEE_lADOABII586PurnmzwAAAAM5jFDS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13850398930",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-12T14:46:13Z"
    },
    {
      "event": "subscribed",
      "id": 13850398947,
      "node_id": "SE_lADOABII586PurnmzwAAAAM5jFDj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13850398947",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-12T14:46:13Z"
    },
    {
      "event": "reviewed",
      "id": 2233879918,
      "node_id": "PRR_kwDOABII586FJk1u",
      "url": null,
      "actor": null,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2233879918",
      "submitted_at": "2024-08-12T19:41:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2234121687,
      "node_id": "PRR_kwDOABII586FKf3X",
      "url": null,
      "actor": null,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK 67b1e236334f38ec4e4d2251dbdfb790f20ed88b\r\n\r\nBuilt with `GUI` on macOS 14.4 following the instructions in `/doc/build-osx.md` (part of this PR) and run `./build/qt/bitcoin-qt` successfully.\r\n\r\nA few observations:\r\n\r\n- Regarding the configuration: in the documentation says:\r\n  \"_If `berkeley-db@4` is installed, then legacy wallet support will be built_.\"\r\n  But I have to use `-DWITH_BDB=ON` in order to get that functionality.\r\n- After I compile with `cmake` I get this warning (`test_bitcoin`):\r\n  `ld: warning: ignoring duplicate libraries: '../secp256k1/src/libsecp256k1.a'`\r\n",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2234121687",
      "submitted_at": "2024-08-12T22:27:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "referenced",
      "id": 13864956555,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM6anKL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13864956555",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7c23041d058b278213ba0a7e2ad9732a4216ec83",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/7c23041d058b278213ba0a7e2ad9732a4216ec83",
      "created_at": "2024-08-13T14:57:53Z"
    },
    {
      "event": "commented",
      "id": 2288437679,
      "node_id": "IC_kwDOABII586IZsmv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2288437679",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-14T10:52:41Z",
      "updated_at": "2024-08-14T10:52:41Z",
      "author_association": "MEMBER",
      "body": "Is CMake meant to know about/be able to figure build-time dependencies?\r\n\r\nFor example, on master, if I `./configure`, and then call `make check`, `make` will compile and then run the tests; or, if I `./configure` for macOS, and call `make deploy`, `make` will build `bitcoin-qt`, and then pacakge it.\r\n\r\nHowever, with CMake, it doesn't seem to figure out what order to do things in. i.e it just tries to run the tests, without compiling them:\r\n```bash\r\ncmake -B build\r\ncmake --build build --target test\r\nRunning tests...\r\nTest project /bitcoin/build\r\nConnected to MAKE jobserver\r\n        Start   1: util_test_runner\r\n  1/133 Test   #1: util_test_runner .....................***Failed    0.13 sec\r\n<snip>\r\n\t133 - walletload_tests (Not Run)\r\nErrors while running CTest\r\nOutput from these tests are in: /bitcoin/build/Testing/Temporary/LastTest.log\r\nUse \"--rerun-failed --output-on-failure\" to re-run the failed cases verbosely.\r\n```\r\n and it tries to package `bitcoin-qt`, even though it hasn't built it:\r\n```bash\r\ncmake -B build -DBUILD_GUI=ON\r\ncmake --build build --target deploy     \r\n[100%] Generating Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt\r\nCMake Error at src/qt/cmake_install.cmake:41 (file):\r\n  file INSTALL cannot find\r\n  \"/bitcoin/build/src/qt/bitcoin-qt\": No such file or\r\n  directory.\r\nCall Stack (most recent call first):\r\n  src/cmake_install.cmake:67 (include)\r\n  cmake_install.cmake:52 (include)\r\n\r\n\r\ngmake[3]: *** [CMakeFiles/deploy.dir/build.make:77: Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt] Error 1\r\ngmake[2]: *** [CMakeFiles/Makefile2:606: CMakeFiles/deploy.dir/all] Error 2\r\ngmake[1]: *** [CMakeFiles/Makefile2:613: CMakeFiles/deploy.dir/rule] Error 2\r\ngmake: *** [Makefile:283: deploy] Error 2\r\n```\r\n\r\nAre these just bugs with the implementation here, or an issue with CMake?",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2288437679",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2288502723,
      "node_id": "IC_kwDOABII586IZ8fD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2288502723",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-14T11:31:32Z",
      "updated_at": "2024-08-14T11:31:32Z",
      "author_association": "MEMBER",
      "body": "> Are these just bugs with the implementation here, or an issue with CMake?\r\n\r\nThat's by CMake design.\r\n\r\n> However, with CMake, it doesn't seem to figure out what order to do things in. i.e it just tries to run the tests, without compiling them:\r\n> \r\n> ```shell\r\n> cmake -B build\r\n> cmake --build build --target test\r\n> Running tests...\r\n> Test project /bitcoin/build\r\n> Connected to MAKE jobserver\r\n>         Start   1: util_test_runner\r\n>   1/133 Test   #1: util_test_runner .....................***Failed    0.13 sec\r\n> <snip>\r\n> \t133 - walletload_tests (Not Run)\r\n> Errors while running CTest\r\n> Output from these tests are in: /bitcoin/build/Testing/Temporary/LastTest.log\r\n> Use \"--rerun-failed --output-on-failure\" to re-run the failed cases verbosely.\r\n> ```\r\n\r\nThe `test` target is generated by CMake. Such targets [cannot](https://cmake.org/cmake/help/latest/command/add_dependencies.html) be subject to top-level target dependencies.\r\n\r\nThe CMake's way to handle this is to use [workflow presets](https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html#workflow-preset).\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2288502723",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2288526278,
      "node_id": "IC_kwDOABII586IaCPG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2288526278",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-14T11:44:37Z",
      "updated_at": "2024-08-14T11:44:37Z",
      "author_association": "MEMBER",
      "body": "> The test target is generated by CMake. Such targets [cannot](https://cmake.org/cmake/help/latest/command/add_dependencies.html) be subject to top-level target dependencies.\r\n\r\nOk. So what about `deploy`? If it's a custom target of ours, it should know to build `bitcoin-qt` first?",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2288526278",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "referenced",
      "id": 13894651060,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM8L4y0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13894651060",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a68171413e0a4ad327f4e00295c9d0af900c299e",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/a68171413e0a4ad327f4e00295c9d0af900c299e",
      "created_at": "2024-08-15T11:15:45Z"
    },
    {
      "event": "commented",
      "id": 2291509848,
      "node_id": "IC_kwDOABII586IlapY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2291509848",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T15:20:36Z",
      "updated_at": "2024-08-15T15:20:36Z",
      "author_association": "MEMBER",
      "body": "> > The test target is generated by CMake. Such targets [cannot](https://cmake.org/cmake/help/latest/command/add_dependencies.html) be subject to top-level target dependencies.\r\n> \r\n> Ok. So what about `deploy`? If it's a custom target of ours, it should know to build `bitcoin-qt` first?\r\n\r\nFixed in https://github.com/hebasto/bitcoin/pull/330.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2291509848",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2292561601,
      "node_id": "IC_kwDOABII586IpbbB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2292561601",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-16T01:33:14Z",
      "updated_at": "2024-08-16T01:39:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "Built and ran tests successfully with 67b1e236334f38ec4e4d2251dbdfb790f20ed88b\r\nMore details:\r\n\r\nDebian 12.6\r\ncmake version 3.25.1\r\ngcc/g++ (Debian 12.2.0-14) 12.2.0\r\n\r\n```\r\ncmake -B build\r\ncmake --build build -j18\r\nctest --test-dir build\r\n```\r\nAlso sanity checked by running bitcoind, creating a wallet, and generating 101 blocks on regtest. ",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2292561601",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "labeled",
      "id": 13906585599,
      "node_id": "LE_lADOABII586PurnmzwAAAAM85af_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13906585599",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-16T06:13:03Z",
      "label": {
        "name": "DrahtBot Guix build requested",
        "color": "bfd4f2"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679674217",
      "pull_request_review_id": 2180684965,
      "id": 1679674217,
      "node_id": "PRRC_kwDOABII585kHctp",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit ff368465a66298487a88d8da575f5251d094d687\r\n\r\nCould you remind me what's going on here, please? I assume these aren't needed because we're meant to be adding compile definitions to specific libs. But from what I can tell, we're not actually adding them to `sha256.cpp`? So... is this currently using an un-optimized sha2?\r\n\r\nGenerally I'd feel more comfortable turning these into opt-outs, I think, to avoid accidentally building without optims.\r\n\r\nFor the sake of review/sanity, I think for this commit it's worth documenting (in the commit message) exactly which defines are affected and where in CMake they've been added.",
      "created_at": "2024-07-16T15:52:41Z",
      "updated_at": "2024-07-16T15:52:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1679674217",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679674217"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679703168",
      "pull_request_review_id": 2180732303,
      "id": 1679703168,
      "node_id": "PRRC_kwDOABII585kHjyA",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": 1679674217,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> But from what I can tell, we're not actually adding them to sha256.cpp? So... is this currently using an un-optimized sha2?\r\n\r\nPlease note the `PUBLIC` keyword, which propagates the definition as a usage requirement:\r\nhttps://github.com/bitcoin/bitcoin/blob/2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5/src/crypto/CMakeLists.txt#L125\r\n\r\nand\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5/src/crypto/CMakeLists.txt#L128\r\n\r\nwhere that usage requirement is actually applied.\r\n\r\nThe same approach works for other definitions used in `src/crypto/sha256.cpp`.\r\n\r\n> For the sake of review/sanity, I think for this commit it's worth documenting (in the commit message) exactly which defines are affected and where in CMake they've been added.\r\n\r\nSure thing! I'll update the commit message during the next branch update.",
      "created_at": "2024-07-16T16:14:41Z",
      "updated_at": "2024-07-16T16:15:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1679703168",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679703168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679712159",
      "pull_request_review_id": 2180746661,
      "id": 1679712159,
      "node_id": "PRRC_kwDOABII585kHl-f",
      "diff_hunk": "@@ -7,9 +7,9 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_nowallet_libbitcoinkernel\n-export CI_IMAGE_NAME_TAG=\"docker.io/debian:bullseye\"\n-# Use minimum supported python3.9 and clang-16, see doc/dependencies.md\n+export CI_IMAGE_NAME_TAG=\"docker.io/ubuntu:24.04\"\n+# Use minimum supported python3.9 (or best-effort 3.12) and clang-16, see doc/dependencies.md",
      "path": "ci/test/00_setup_env_native_nowallet_libbitcoinkernel.sh",
      "position": null,
      "original_position": 7,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why not bookworm? https://packages.debian.org/bookworm/python3 (3.11)?",
      "created_at": "2024-07-16T16:21:55Z",
      "updated_at": "2024-07-16T16:21:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1679712159",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679712159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 10,
      "start_side": "LEFT",
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679712998",
      "pull_request_review_id": 2180748015,
      "id": 1679712998,
      "node_id": "PRRC_kwDOABII585kHmLm",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+if(NOT MSVC)\n+  include(CheckSourceCompilesAndLinks)\n+\n+  # Check for SSE4.1 intrinsics.\n+  set(SSE41_CXXFLAGS -msse4.1)\n+  check_cxx_source_compiles_with_flags(\"${SSE41_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m128i l = _mm_set1_epi32(0);\n+      return _mm_extract_epi32(l, 3);\n+    }\n+    \" HAVE_SSE41\n+  )\n+\n+  # Check for AVX2 intrinsics.\n+  set(AVX2_CXXFLAGS -mavx -mavx2)\n+  check_cxx_source_compiles_with_flags(\"${AVX2_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m256i l = _mm256_set1_epi32(0);\n+      return _mm256_extract_epi32(l, 7);\n+    }\n+    \" HAVE_AVX2\n+  )\n+\n+  # Check for x86 SHA-NI intrinsics.\n+  set(X86_SHANI_CXXFLAGS -msse4 -msha)\n+  check_cxx_source_compiles_with_flags(\"${X86_SHANI_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m128i i = _mm_set1_epi32(0);\n+      __m128i j = _mm_set1_epi32(1);\n+      __m128i k = _mm_set1_epi32(2);\n+      return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, j, k), 0);\n+    }\n+    \" HAVE_X86_SHANI\n+  )\n+\n+  # Check for ARMv8 SHA-NI intrinsics.\n+  set(ARM_SHANI_CXXFLAGS -march=armv8-a+crypto)",
      "path": "src/crypto/CMakeLists.txt",
      "position": null,
      "original_position": 50,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like these don't allow overriding/take into account user flags? i.e If I configure with `-DCMAKE_CXX_FLAGS_RELEASE=\"-march=armv8-a+nocrypto\"`, I'd expect the ARM SHA-NI check to fail, but it doesn't. Also doesn't seem to work with `APPEND_CXXFLAGS`, which should always be (globally) taken into account?",
      "created_at": "2024-07-16T16:22:34Z",
      "updated_at": "2024-07-16T16:22:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1679712998",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679712998"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679842517",
      "pull_request_review_id": 2180957378,
      "id": 1679842517,
      "node_id": "PRRC_kwDOABII585kIFzV",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": 1679674217,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "One can see that they are indeed disabled now in https://corecheck.dev/bitcoin/bitcoin/pulls/30454 (coverage report + benchmarks).\r\n\r\nShouldn't autotools be nuked in this pull request, assuming that cmake and autotools are apparently incompatible, as designed now?",
      "created_at": "2024-07-16T18:10:36Z",
      "updated_at": "2024-07-16T18:10:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1679842517",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679842517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680665264",
      "pull_request_review_id": 2182285671,
      "id": 1680665264,
      "node_id": "PRRC_kwDOABII585kLOqw",
      "diff_hunk": "@@ -18,7 +18,8 @@ export PACKAGES=\"ninja-build\"\n export DEP_OPTS=\"DEBUG=1 NO_BDB=1 NO_QT=1 CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"\n export GOAL=\"install\"\n # _FORTIFY_SOURCE is not compatible with MSAN.\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,memory CPPFLAGS='-DBOOST_MULTI_INDEX_ENABLE_SAFE_MODE -U_FORTIFY_SOURCE'\"\n+export BITCOIN_CONFIG=\"-DENABLE_FUZZ=ON -DSANITIZERS=fuzzer,memory -DCMAKE_CXX_FLAGS='-DBOOST_MULTI_INDEX_ENABLE_SAFE_MODE' \\\n+-DAPPEND_CPPFLAGS='-U_FORTIFY_SOURCE'\"",
      "path": "ci/test/00_setup_env_native_fuzz_with_msan.sh",
      "position": null,
      "original_position": 6,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "CPP flag handling seems inconsistent throughout the CI changes, which is confusing. It'd be good to consistently put all CPPFLAGS into CPPFLAGS, rather than having them sometimes in CXXFLAGS, sometimes in (append) CPPFLAGS, and sometimes spread between the two, i.e here.",
      "created_at": "2024-07-17T08:39:20Z",
      "updated_at": "2024-07-17T08:39:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1680665264",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680665264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683279748",
      "pull_request_review_id": 2186539962,
      "id": 1683279748,
      "node_id": "PRRC_kwDOABII585kVM-E",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": 1679674217,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please see https://github.com/hebasto/bitcoin/pull/269.",
      "created_at": "2024-07-18T18:06:10Z",
      "updated_at": "2024-07-18T18:06:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1683279748",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683279748"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683411958",
      "pull_request_review_id": 2186752216,
      "id": 1683411958,
      "node_id": "PRRC_kwDOABII585kVtP2",
      "diff_hunk": "@@ -7,9 +7,9 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_nowallet_libbitcoinkernel\n-export CI_IMAGE_NAME_TAG=\"docker.io/debian:bullseye\"\n-# Use minimum supported python3.9 and clang-16, see doc/dependencies.md\n+export CI_IMAGE_NAME_TAG=\"docker.io/ubuntu:24.04\"\n+# Use minimum supported python3.9 (or best-effort 3.12) and clang-16, see doc/dependencies.md",
      "path": "ci/test/00_setup_env_native_nowallet_libbitcoinkernel.sh",
      "position": null,
      "original_position": 7,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": 1679712159,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed in https://github.com/hebasto/bitcoin/pull/270.",
      "created_at": "2024-07-18T19:59:46Z",
      "updated_at": "2024-07-18T19:59:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1683411958",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683411958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 10,
      "start_side": "LEFT",
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1684802528",
      "pull_request_review_id": 2188923226,
      "id": 1684802528,
      "node_id": "PRRC_kwDOABII585kbAvg",
      "diff_hunk": "@@ -1,8 +1,8 @@\n package=native_libmultiprocess\n-$(package)_version=8da797c5f1644df1bffd84d10c1ae9836dc70d60\n+$(package)_version=003eb04d6d0029fd24a330ab63d5a9ba08cf240f",
      "path": "depends/packages/native_libmultiprocess.mk",
      "position": null,
      "original_position": 3,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "4883197abc63aedbc395f37f6d2aded5db5270aa",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like this can be bumped further now that https://github.com/chaincodelabs/libmultiprocess/pull/98 has been merged?",
      "created_at": "2024-07-19T18:26:38Z",
      "updated_at": "2024-07-19T18:26:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1684802528",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1684802528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685163279",
      "pull_request_review_id": 2189569755,
      "id": 1685163279,
      "node_id": "PRRC_kwDOABII585kcY0P",
      "diff_hunk": "@@ -6,6 +6,13 @@\n \n BOOST_AUTO_TEST_SUITE(compilerbug_tests)\n \n+// At least one test case is required to avoid the \"Test setup error: no test\n+// cases matching filter or all test cases were disabled\" errror.\n+BOOST_AUTO_TEST_CASE(dummy)\n+{\n+    BOOST_CHECK(true);\n+}\n+",
      "path": "src/test/compilerbug_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This diff will gone after https://github.com/hebasto/bitcoin/pull/272.",
      "created_at": "2024-07-20T00:02:19Z",
      "updated_at": "2024-07-20T00:02:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1685163279",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685163279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 9,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685289194",
      "pull_request_review_id": 2189780844,
      "id": 1685289194,
      "node_id": "PRRC_kwDOABII585kc3jq",
      "diff_hunk": "@@ -18,7 +18,8 @@ export PACKAGES=\"ninja-build\"\n export DEP_OPTS=\"DEBUG=1 NO_BDB=1 NO_QT=1 CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"\n export GOAL=\"install\"\n # _FORTIFY_SOURCE is not compatible with MSAN.\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,memory CPPFLAGS='-DBOOST_MULTI_INDEX_ENABLE_SAFE_MODE -U_FORTIFY_SOURCE'\"\n+export BITCOIN_CONFIG=\"-DENABLE_FUZZ=ON -DSANITIZERS=fuzzer,memory -DCMAKE_CXX_FLAGS='-DBOOST_MULTI_INDEX_ENABLE_SAFE_MODE' \\\n+-DAPPEND_CPPFLAGS='-U_FORTIFY_SOURCE'\"",
      "path": "ci/test/00_setup_env_native_fuzz_with_msan.sh",
      "position": null,
      "original_position": 6,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": 1680665264,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! Fixed in https://github.com/hebasto/bitcoin/pull/273.",
      "created_at": "2024-07-20T07:05:31Z",
      "updated_at": "2024-07-20T07:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1685289194",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685289194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688752764",
      "pull_request_review_id": 2195131612,
      "id": 1688752764,
      "node_id": "PRRC_kwDOABII585kqFJ8",
      "diff_hunk": "@@ -1,8 +1,8 @@\n package=native_libmultiprocess\n-$(package)_version=8da797c5f1644df1bffd84d10c1ae9836dc70d60\n+$(package)_version=003eb04d6d0029fd24a330ab63d5a9ba08cf240f",
      "path": "depends/packages/native_libmultiprocess.mk",
      "position": null,
      "original_position": 3,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "4883197abc63aedbc395f37f6d2aded5db5270aa",
      "in_reply_to_id": 1684802528,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Bumped even further in https://github.com/bitcoin/bitcoin/pull/30513 :)",
      "created_at": "2024-07-23T21:31:53Z",
      "updated_at": "2024-07-23T21:31:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1688752764",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688752764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688758712",
      "pull_request_review_id": 2195141142,
      "id": 1688758712,
      "node_id": "PRRC_kwDOABII585kqGm4",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+if(NOT MSVC)\n+  include(CheckSourceCompilesAndLinks)\n+\n+  # Check for SSE4.1 intrinsics.\n+  set(SSE41_CXXFLAGS -msse4.1)\n+  check_cxx_source_compiles_with_flags(\"${SSE41_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m128i l = _mm_set1_epi32(0);\n+      return _mm_extract_epi32(l, 3);\n+    }\n+    \" HAVE_SSE41\n+  )\n+\n+  # Check for AVX2 intrinsics.\n+  set(AVX2_CXXFLAGS -mavx -mavx2)\n+  check_cxx_source_compiles_with_flags(\"${AVX2_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m256i l = _mm256_set1_epi32(0);\n+      return _mm256_extract_epi32(l, 7);\n+    }\n+    \" HAVE_AVX2\n+  )\n+\n+  # Check for x86 SHA-NI intrinsics.\n+  set(X86_SHANI_CXXFLAGS -msse4 -msha)\n+  check_cxx_source_compiles_with_flags(\"${X86_SHANI_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m128i i = _mm_set1_epi32(0);\n+      __m128i j = _mm_set1_epi32(1);\n+      __m128i k = _mm_set1_epi32(2);\n+      return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, j, k), 0);\n+    }\n+    \" HAVE_X86_SHANI\n+  )\n+\n+  # Check for ARMv8 SHA-NI intrinsics.\n+  set(ARM_SHANI_CXXFLAGS -march=armv8-a+crypto)",
      "path": "src/crypto/CMakeLists.txt",
      "position": null,
      "original_position": 50,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": 1679712998,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Cross-posted in https://github.com/hebasto/bitcoin/issues/279 to make tracking easier.",
      "created_at": "2024-07-23T21:39:23Z",
      "updated_at": "2024-07-23T21:39:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1688758712",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688758712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689974792",
      "pull_request_review_id": 2196999857,
      "id": 1689974792,
      "node_id": "PRRC_kwDOABII585kuvgI",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": 1679674217,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@theuni  @maflcko \r\n\r\nCan you confirm please that the recent [push](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2248232775) resolved this issue?",
      "created_at": "2024-07-24T14:58:06Z",
      "updated_at": "2024-07-24T14:58:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1689974792",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689974792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1690941661",
      "pull_request_review_id": 2198509560,
      "id": 1690941661,
      "node_id": "PRRC_kwDOABII585kybjd",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": 1679674217,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm https://corecheck.dev/bitcoin/bitcoin/pulls/30454 is down again",
      "created_at": "2024-07-25T07:17:44Z",
      "updated_at": "2024-07-25T07:17:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1690941661",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1690941661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1690979665",
      "pull_request_review_id": 2198548041,
      "id": 1690979665,
      "node_id": "PRRC_kwDOABII585kyk1R",
      "diff_hunk": "@@ -19,11 +19,16 @@ else\n fi\n \n export CONTAINER_NAME=ci_native_asan\n-export PACKAGES=\"systemtap-sdt-dev clang-18 llvm-18 libclang-rt-18-dev python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev libboost-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev ${BPFCC_PACKAGE}\"\n+export PACKAGES=\"systemtap-sdt-dev clang-18 llvm-18 libclang-rt-18-dev python3-zmq qtbase5-dev qttools5-dev qttools5-dev-tools libevent-dev libboost-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev ${BPFCC_PACKAGE}\"",
      "path": "ci/test/00_setup_env_native_asan.sh",
      "position": 1,
      "original_position": 5,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "note to myself: Could split this up",
      "created_at": "2024-07-25T07:34:54Z",
      "updated_at": "2024-07-25T07:43:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1690979665",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1690979665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1690990701",
      "pull_request_review_id": 2198548041,
      "id": 1690990701,
      "node_id": "PRRC_kwDOABII585kynht",
      "diff_hunk": "@@ -58,7 +54,7 @@ For more information, see [SDK Extraction](../contrib/macdeploy/README.md#sdk-ex\n \n #### For Win64 cross compilation\n \n-- see [build-windows.md](../doc/build-windows.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)\n+- see [build-windows-mingw.md](../doc/build-windows-mingw.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)",
      "path": "depends/README.md",
      "position": null,
      "original_position": 28,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The rename could be split out and merged ahead?",
      "created_at": "2024-07-25T07:42:02Z",
      "updated_at": "2024-07-25T07:43:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1690990701",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1690990701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1691143911",
      "pull_request_review_id": 2198805225,
      "id": 1691143911,
      "node_id": "PRRC_kwDOABII585kzM7n",
      "diff_hunk": "@@ -19,11 +19,16 @@ else\n fi\n \n export CONTAINER_NAME=ci_native_asan\n-export PACKAGES=\"systemtap-sdt-dev clang-18 llvm-18 libclang-rt-18-dev python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev libboost-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev ${BPFCC_PACKAGE}\"\n+export PACKAGES=\"systemtap-sdt-dev clang-18 llvm-18 libclang-rt-18-dev python3-zmq qtbase5-dev qttools5-dev qttools5-dev-tools libevent-dev libboost-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev ${BPFCC_PACKAGE}\"",
      "path": "ci/test/00_setup_env_native_asan.sh",
      "position": 1,
      "original_position": 5,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "in_reply_to_id": 1690979665,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/30522",
      "created_at": "2024-07-25T09:32:53Z",
      "updated_at": "2024-07-25T09:32:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1691143911",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1691143911"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1691182478",
      "pull_request_review_id": 2198866489,
      "id": 1691182478,
      "node_id": "PRRC_kwDOABII585kzWWO",
      "diff_hunk": "@@ -58,7 +54,7 @@ For more information, see [SDK Extraction](../contrib/macdeploy/README.md#sdk-ex\n \n #### For Win64 cross compilation\n \n-- see [build-windows.md](../doc/build-windows.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)\n+- see [build-windows-mingw.md](../doc/build-windows-mingw.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)",
      "path": "depends/README.md",
      "position": null,
      "original_position": 28,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "in_reply_to_id": 1690990701,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "~Done in https://github.com/bitcoin/bitcoin/pull/30523.~\r\n\r\nSee https://github.com/hebasto/bitcoin/pull/284.",
      "created_at": "2024-07-25T09:58:52Z",
      "updated_at": "2024-07-25T15:58:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1691182478",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1691182478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1691754532",
      "pull_request_review_id": 2199783458,
      "id": 1691754532,
      "node_id": "PRRC_kwDOABII585k1iAk",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": 1679674217,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Hmm https://corecheck.dev/bitcoin/bitcoin/pulls/30454 is down again\r\n\r\nIt is up now :)",
      "created_at": "2024-07-25T16:14:12Z",
      "updated_at": "2024-07-25T16:14:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1691754532",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1691754532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698503517",
      "pull_request_review_id": 2210160056,
      "id": 1698503517,
      "node_id": "PRRC_kwDOABII585lPRtd",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+if(NOT MSVC)\n+  include(CheckSourceCompilesAndLinks)\n+\n+  # Check for SSE4.1 intrinsics.\n+  set(SSE41_CXXFLAGS -msse4.1)\n+  check_cxx_source_compiles_with_flags(\"${SSE41_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m128i l = _mm_set1_epi32(0);\n+      return _mm_extract_epi32(l, 3);\n+    }\n+    \" HAVE_SSE41\n+  )\n+\n+  # Check for AVX2 intrinsics.\n+  set(AVX2_CXXFLAGS -mavx -mavx2)\n+  check_cxx_source_compiles_with_flags(\"${AVX2_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m256i l = _mm256_set1_epi32(0);\n+      return _mm256_extract_epi32(l, 7);\n+    }\n+    \" HAVE_AVX2\n+  )\n+\n+  # Check for x86 SHA-NI intrinsics.\n+  set(X86_SHANI_CXXFLAGS -msse4 -msha)\n+  check_cxx_source_compiles_with_flags(\"${X86_SHANI_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m128i i = _mm_set1_epi32(0);\n+      __m128i j = _mm_set1_epi32(1);\n+      __m128i k = _mm_set1_epi32(2);\n+      return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, j, k), 0);\n+    }\n+    \" HAVE_X86_SHANI\n+  )\n+\n+  # Check for ARMv8 SHA-NI intrinsics.\n+  set(ARM_SHANI_CXXFLAGS -march=armv8-a+crypto)",
      "path": "src/crypto/CMakeLists.txt",
      "position": null,
      "original_position": 50,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": 1679712998,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "With the recent [push](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2260498863), one can configure for such a use case with `-DAPPEND_CXXFLAGS=\"-march=armv8-a+nocrypto\"`.",
      "created_at": "2024-07-31T13:22:50Z",
      "updated_at": "2024-07-31T13:22:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698503517",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698503517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698507747",
      "pull_request_review_id": 2210167356,
      "id": 1698507747,
      "node_id": "PRRC_kwDOABII585lPSvj",
      "diff_hunk": "@@ -58,7 +54,7 @@ For more information, see [SDK Extraction](../contrib/macdeploy/README.md#sdk-ex\n \n #### For Win64 cross compilation\n \n-- see [build-windows.md](../doc/build-windows.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)\n+- see [build-windows-mingw.md](../doc/build-windows-mingw.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)",
      "path": "depends/README.md",
      "position": null,
      "original_position": 28,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "in_reply_to_id": 1690990701,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It has not been an issue since the recent [push](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2260498863).",
      "created_at": "2024-07-31T13:25:27Z",
      "updated_at": "2024-07-31T13:25:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698507747",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698507747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698521517",
      "pull_request_review_id": 2210190130,
      "id": 1698521517,
      "node_id": "PRRC_kwDOABII585lPWGt",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Not sure about listing the required deps from the native guide again. Maybe native depends install instructions can be moved to native guide (`./doc/build-openbsd.md`)?",
      "created_at": "2024-07-31T13:34:13Z",
      "updated_at": "2024-07-31T13:37:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698521517",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698521517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698522521",
      "pull_request_review_id": 2210190130,
      "id": 1698522521,
      "node_id": "PRRC_kwDOABII585lPWWZ",
      "diff_hunk": "@@ -41,7 +41,7 @@ The following are developer notes on how to build Bitcoin Core on your native pl\n - [Dependencies](dependencies.md)\n - [macOS Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n-- [Windows Build Notes](build-windows.md)",
      "path": "doc/README.md",
      "position": 4,
      "original_position": 4,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why remove the link?",
      "created_at": "2024-07-31T13:34:52Z",
      "updated_at": "2024-07-31T13:37:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698522521",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698522521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698563756",
      "pull_request_review_id": 2210259782,
      "id": 1698563756,
      "node_id": "PRRC_kwDOABII585lPgas",
      "diff_hunk": "@@ -41,7 +41,7 @@ The following are developer notes on how to build Bitcoin Core on your native pl\n - [Dependencies](dependencies.md)\n - [macOS Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n-- [Windows Build Notes](build-windows.md)",
      "path": "doc/README.md",
      "position": 4,
      "original_position": 4,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698522521,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This list description mentions \"on your native platform\". Does it mean \"to build natively\"? If so, then `build-windows.md` doesn't belong to this list. If I misunderstood the description, let me know.",
      "created_at": "2024-07-31T14:00:01Z",
      "updated_at": "2024-07-31T14:00:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698563756",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698563756"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698595899",
      "pull_request_review_id": 2210311726,
      "id": 1698595899,
      "node_id": "PRRC_kwDOABII585lPoQ7",
      "diff_hunk": "@@ -60,7 +60,7 @@ example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dep\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n+results in configure scripts being able to execute Windows Portable Executable files. This can cause",
      "path": "doc/build-windows.md",
      "position": null,
      "original_position": 23,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Was this removed because this is an issue for CMake as well?",
      "created_at": "2024-07-31T14:15:12Z",
      "updated_at": "2024-07-31T14:15:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698595899",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698595899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698598503",
      "pull_request_review_id": 2210316127,
      "id": 1698598503,
      "node_id": "PRRC_kwDOABII585lPo5n",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "None of these package are required for the native build with CMake.",
      "created_at": "2024-07-31T14:16:53Z",
      "updated_at": "2024-07-31T14:16:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698598503",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698598503"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698619942",
      "pull_request_review_id": 2210350614,
      "id": 1698619942,
      "node_id": "PRRC_kwDOABII585lPuIm",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> None of these package are required for the native build with CMake.\r\n\r\nCorrect. I was mostly trying to say that packages required for a native build are not listed here again as a dependency for a native (non-cross) `depends` build. Otherwise, `autoconf automake` should be listed here as well, because they are still required for some `depends` packages? In any case you are removing `autoconf automake` and `gmake` from the instructions in `doc/build-openbsd.md`, so overall it seems a bit inconsistent?",
      "created_at": "2024-07-31T14:30:04Z",
      "updated_at": "2024-07-31T14:30:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698619942",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698619942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698631089",
      "pull_request_review_id": 2210369139,
      "id": 1698631089,
      "node_id": "PRRC_kwDOABII585lPw2x",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Otherwise, `autoconf automake` should be listed here as well, because they are still required for some `depends` packages? In any case you are removing `autoconf automake` and `gmake` from the instructions in `doc/build-openbsd.md`, so overall it seems a bit inconsistent?\r\n\r\n~I agree that this issue has to be resolved in `depends/README.md`.~",
      "created_at": "2024-07-31T14:36:38Z",
      "updated_at": "2024-08-01T00:13:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698631089",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698631089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698675755",
      "pull_request_review_id": 2210441463,
      "id": 1698675755,
      "node_id": "PRRC_kwDOABII585lP7wr",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": 1679674217,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> > Hmm https://corecheck.dev/bitcoin/bitcoin/pulls/30454 is down again\r\n> \r\n> It is up now :)\r\n\r\nNice. The output there looks better now. But I haven't yet tried locally.",
      "created_at": "2024-07-31T15:02:57Z",
      "updated_at": "2024-07-31T15:02:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698675755",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698675755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699235049",
      "pull_request_review_id": 2211331244,
      "id": 1699235049,
      "node_id": "PRRC_kwDOABII585lSETp",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Otherwise, `autoconf automake` should be listed here as well, because they are still required for some `depends` packages?\r\n\r\nApparently, they are not. Thanks to the recent migration of dependency packages to CMake.\r\n\r\ncc @theStack ",
      "created_at": "2024-08-01T00:13:47Z",
      "updated_at": "2024-08-01T00:13:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699235049",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699235049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699542457",
      "pull_request_review_id": 2211806605,
      "id": 1699542457,
      "node_id": "PRRC_kwDOABII585lTPW5",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Apparently, they are not. \n\nSQLite still uses Autotools?",
      "created_at": "2024-08-01T07:00:50Z",
      "updated_at": "2024-08-01T07:00:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699542457",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699542457"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699559000",
      "pull_request_review_id": 2211832683,
      "id": 1699559000,
      "node_id": "PRRC_kwDOABII585lTTZY",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, I see. I just completed on current master a depends on Linux build without any of `autoconf automake autotools-dev libtool`. Possibly they could be removed from the `Common` section above, but that seems unrelated to this pull request.\r\n\r\n\r\n\r\nJust to clarify, removing `gmake` from the instructions in `doc/build-openbsd.md` is also intentional in this pull request?\r\n",
      "created_at": "2024-08-01T07:15:00Z",
      "updated_at": "2024-08-01T07:15:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699559000",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699559000"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699867091",
      "pull_request_review_id": 2212271726,
      "id": 1699867091,
      "node_id": "PRRC_kwDOABII585lUenT",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Just to clarify, removing `gmake` from the instructions in `doc/build-openbsd.md` is also intentional in this pull request?\r\n\r\nYes, it is. CMake can work with any flavour of Make, so GNU Make is not longer a requirement.",
      "created_at": "2024-08-01T09:52:19Z",
      "updated_at": "2024-08-01T09:52:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699867091",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699867091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699889168",
      "pull_request_review_id": 2212309592,
      "id": 1699889168,
      "node_id": "PRRC_kwDOABII585lUkAQ",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> > Apparently, they are not.\r\n> \r\n> SQLite still uses Autotools?\r\n\r\nThe `sqlite-autoconf-3380500.tar.gz` archive contains pre-built `configure` script and `Makefile.in` file. Therefore, Autotools is not required on our side.",
      "created_at": "2024-08-01T10:08:03Z",
      "updated_at": "2024-08-01T10:08:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699889168",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699889168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699904124",
      "pull_request_review_id": 2212334647,
      "id": 1699904124,
      "node_id": "PRRC_kwDOABII585lUnp8",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Autotools might not be used currently for sqlite (libtool still is), but we can't rule out entirely that it wont be used going forward. For example, if we need to regenerate the configure script for some reason. This has happened in the past, for example, something like 6897c4bdf51a4aa74320ebfffa9467db14670109. This might be very unlikely here, but not impossible. \r\n\r\nNote that this would also breakdown, if we were to shift to building from source (requiring us to generate the build scripts oursevles), rather than using the tarballs with everything pre-generated (and unverifiable/opauge). (In this case it'd also be all of the Linux GUI packages that'd require it).",
      "created_at": "2024-08-01T10:19:20Z",
      "updated_at": "2024-08-01T10:20:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699904124",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699904124"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699912337",
      "pull_request_review_id": 2212347510,
      "id": 1699912337,
      "node_id": "PRRC_kwDOABII585lUpqR",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right. Such a possibility does exist. However, instructing the user to install packages that are not currently required does not seem compelling to me.",
      "created_at": "2024-08-01T10:26:08Z",
      "updated_at": "2024-08-01T10:26:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699912337",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699912337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699938667",
      "pull_request_review_id": 2212390975,
      "id": 1699938667,
      "node_id": "PRRC_kwDOABII585lUwFr",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Autotools might not be used currently for sqlite (libtool still is)...\r\n\r\nThe tarball also contains a pre-built `ltmain.sh` script, so `libtool` package installation is not needed.",
      "created_at": "2024-08-01T10:48:34Z",
      "updated_at": "2024-08-01T10:48:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699938667",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699938667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699943513",
      "pull_request_review_id": 2212398991,
      "id": 1699943513,
      "node_id": "PRRC_kwDOABII585lUxRZ",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> > Just to clarify, removing `gmake` from the instructions in `doc/build-openbsd.md` is also intentional in this pull request?\r\n> \r\n> Yes, it is. CMake can work with any flavour of Make, so GNU Make is not longer a requirement.\r\n\r\nBut the document still refers to `gmake`, no? For example line 47 of `doc/build-openbsd.md` says:\r\n\r\n```\r\ngmake -C depends NO_BOOST=1 NO_LIBEVENT=1 NO_QT=1 NO_SQLITE=1 NO_NATPMP=1 NO_UPNP=1 NO_ZMQ=1 NO_USDT=1\r\n```\r\n\r\nMaybe `gmake` is installed as part of `cmake`, but I haven't checked that.\r\n\r\nJust a nit in any case.",
      "created_at": "2024-08-01T10:53:03Z",
      "updated_at": "2024-08-01T10:53:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699943513",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699943513"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699965761",
      "pull_request_review_id": 2212434653,
      "id": 1699965761,
      "node_id": "PRRC_kwDOABII585lU2tB",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This PR does not change how packages are built in depends. Therefore, GNU Make is still a requirement to build depends. But it is not for the main build system.",
      "created_at": "2024-08-01T11:10:21Z",
      "updated_at": "2024-08-01T11:11:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699965761",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699965761"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699975633",
      "pull_request_review_id": 2212451427,
      "id": 1699975633,
      "node_id": "PRRC_kwDOABII585lU5HR",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> But the document still refers to `gmake`, no? For example line 47 of `doc/build-openbsd.md` says:\r\n> \r\n> ```\r\n> gmake -C depends NO_BOOST=1 NO_LIBEVENT=1 NO_QT=1 NO_SQLITE=1 NO_NATPMP=1 NO_UPNP=1 NO_ZMQ=1 NO_USDT=1\r\n> ```\r\n\r\nThe line above refers to `depends/README.md`, where the required build dependencies, including `gmake`, are suggested to be installed.",
      "created_at": "2024-08-01T11:19:05Z",
      "updated_at": "2024-08-01T11:19:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699975633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699975633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700280376",
      "pull_request_review_id": 2212977310,
      "id": 1700280376,
      "node_id": "PRRC_kwDOABII585lWDg4",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Resolving this conversation based \"thumbs up\" emoji.",
      "created_at": "2024-08-01T14:13:49Z",
      "updated_at": "2024-08-01T14:13:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1700280376",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700280376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702357194",
      "pull_request_review_id": 2216461788,
      "id": 1702357194,
      "node_id": "PRRC_kwDOABII585ld-jK",
      "diff_hunk": "@@ -60,7 +60,7 @@ example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dep\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n+results in configure scripts being able to execute Windows Portable Executable files. This can cause",
      "path": "doc/build-windows.md",
      "position": null,
      "original_position": 23,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698595899,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The documentation has been amended in https://github.com/hebasto/bitcoin/pull/299.",
      "created_at": "2024-08-02T21:56:59Z",
      "updated_at": "2024-08-02T21:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1702357194",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702357194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703708721",
      "pull_request_review_id": 2208656646,
      "id": 1703708721,
      "node_id": "PRRC_kwDOABII585ljIgx",
      "diff_hunk": "@@ -0,0 +1,195 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# This file is expected to be highly volatile and may still change substantially.\n+\n+# If CMAKE_SYSTEM_NAME is set within a toolchain file, CMake will also\n+# set CMAKE_CROSSCOMPILING to TRUE, even if CMAKE_SYSTEM_NAME matches\n+# CMAKE_HOST_SYSTEM_NAME. To avoid potential misconfiguration of CMake,\n+# it is best not to touch CMAKE_SYSTEM_NAME unless cross-compiling is\n+# intended.\n+if(@depends_crosscompiling@)\n+  set(CMAKE_SYSTEM_NAME @host_system_name@)\n+  set(CMAKE_SYSTEM_VERSION @host_system_version@)\n+  set(CMAKE_SYSTEM_PROCESSOR @host_arch@)\n+endif()\n+\n+function(split_compiler_launcher env_compiler launcher compiler)\n+  set(${launcher})\n+  list(GET ${env_compiler} 0 start_token)\n+  if(start_token STREQUAL \"env\")\n+    set(${compiler})\n+    set(env_arg_parsing TRUE)\n+    foreach(token IN LISTS ${env_compiler})\n+      if(env_arg_parsing)\n+        list(APPEND ${launcher} ${token})\n+        set(env_arg_parsing FALSE)\n+        continue()\n+      elseif(token STREQUAL \"-u\")\n+        list(APPEND ${launcher} ${token})\n+        set(env_arg_parsing TRUE)\n+        continue()\n+      endif()\n+      list(APPEND ${compiler} ${token})\n+    endforeach()\n+  else()\n+    set(${compiler} ${${env_compiler}})\n+  endif()\n+  set(${launcher} ${${launcher}} PARENT_SCOPE)\n+  set(${compiler} ${${compiler}} PARENT_SCOPE)\n+endfunction()\n+\n+if(NOT DEFINED CMAKE_C_FLAGS_INIT)\n+  set(CMAKE_C_FLAGS_INIT \"@CFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_C_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT \"@CFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_C_FLAGS_DEBUG_INIT)\n+  set(CMAKE_C_FLAGS_DEBUG_INIT \"@CFLAGS_DEBUG@\")\n+endif()\n+\n+if(NOT DEFINED CMAKE_C_COMPILER)\n+  set(DEPENDS_C_COMPILER_WITH_LAUNCHER @CC@)\n+  split_compiler_launcher(DEPENDS_C_COMPILER_WITH_LAUNCHER CMAKE_C_COMPILER_LAUNCHER CMAKE_C_COMPILER)\n+  set(CMAKE_C_LINKER_LAUNCHER ${CMAKE_C_COMPILER_LAUNCHER})\n+endif()\n+\n+if(NOT DEFINED CMAKE_CXX_FLAGS_INIT)\n+  set(CMAKE_CXX_FLAGS_INIT \"@CXXFLAGS@\")\n+  set(CMAKE_OBJCXX_FLAGS_INIT \"@CXXFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT \"@CXXFLAGS_RELEASE@\")\n+  set(CMAKE_OBJCXX_FLAGS_RELWITHDEBINFO_INIT \"@CXXFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_CXX_FLAGS_DEBUG_INIT)\n+  set(CMAKE_CXX_FLAGS_DEBUG_INIT \"@CXXFLAGS_DEBUG@\")\n+  set(CMAKE_OBJCXX_FLAGS_DEBUG_INIT \"@CXXFLAGS_DEBUG@\")\n+endif()\n+\n+if(NOT DEFINED CMAKE_CXX_COMPILER)\n+  set(DEPENDS_CXX_COMPILER_WITH_LAUNCHER @CXX@)\n+  split_compiler_launcher(DEPENDS_CXX_COMPILER_WITH_LAUNCHER CMAKE_CXX_COMPILER_LAUNCHER CMAKE_CXX_COMPILER)\n+  set(CMAKE_CXX_LINKER_LAUNCHER ${CMAKE_CXX_COMPILER_LAUNCHER})\n+\n+  set(CMAKE_OBJCXX_COMPILER ${CMAKE_CXX_COMPILER})\n+  set(CMAKE_OBJCXX_COMPILER_LAUNCHER ${CMAKE_CXX_COMPILER_LAUNCHER})\n+  set(CMAKE_OBJCXX_LINKER_LAUNCHER ${CMAKE_CXX_LINKER_LAUNCHER})\n+endif()\n+\n+# The DEPENDS_COMPILE_DEFINITIONS* variables are to be treated as lists.\n+set(DEPENDS_COMPILE_DEFINITIONS @CPPFLAGS@)\n+set(DEPENDS_COMPILE_DEFINITIONS_RELWITHDEBINFO @CPPFLAGS_RELEASE@)\n+set(DEPENDS_COMPILE_DEFINITIONS_DEBUG @CPPFLAGS_DEBUG@)\n+\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_INIT \"@LDFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT \"@LDFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT \"@LDFLAGS_DEBUG@\")\n+endif()\n+\n+set(CMAKE_AR \"@AR@\")\n+set(CMAKE_RANLIB \"@RANLIB@\")\n+set(CMAKE_STRIP \"@STRIP@\")\n+set(CMAKE_OBJCOPY \"@OBJCOPY@\")\n+set(CMAKE_OBJDUMP \"@OBJDUMP@\")\n+\n+# Using our own built dependencies should not be\n+# affected by a potentially random environment.\n+set(CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH OFF)\n+\n+set(CMAKE_FIND_ROOT_PATH \"@depends_prefix@\")\n+set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n+set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\n+set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\n+set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)\n+set(QT_TRANSLATIONS_DIR \"@depends_prefix@/translations\")\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)",
      "path": "depends/toolchain.cmake.in",
      "position": 82,
      "original_position": 114,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is the intent to handle any cross-compilation to Apple platforms from non-Apple hosts, or specifically cross-compilation to macOS?\r\nIs this the same as\r\n```\r\nCMAKE_CROSSCOMPILING AND NOT CMAKE_HOST_APPLE\r\n```\r\n?",
      "created_at": "2024-08-05T08:07:30Z",
      "updated_at": "2024-08-05T08:34:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703708721",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703708721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703721288",
      "pull_request_review_id": 2208656646,
      "id": 1703721288,
      "node_id": "PRRC_kwDOABII585ljLlI",
      "diff_hunk": "@@ -0,0 +1,21 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+function(generate_header_from_json json_source_relpath)\n+  add_custom_command(\n+    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h\n+    COMMAND ${CMAKE_COMMAND} -DJSON_SOURCE_PATH=${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} -DHEADER_PATH=${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h -P ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake\n+    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake",
      "path": "cmake/module/GenerateHeaders.cmake",
      "position": null,
      "original_position": 9,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "When is `CMAKE_SOURCE_DIR`, `PROJECT_SOURCE_DIR` and `CMAKE_CURRENT_SOURCE_DIR` used here?\r\nI'm not an expert in this area, but browsing a bit reveals that others were [often bitten](https://lesleylai.info/en/cmake_src_directory) by the differences among these.\r\nIgnore, if the question doesn't make sense in this case...",
      "created_at": "2024-08-05T08:17:53Z",
      "updated_at": "2024-08-05T08:34:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703721288",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703721288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703730116",
      "pull_request_review_id": 2208656646,
      "id": 1703730116,
      "node_id": "PRRC_kwDOABII585ljNvE",
      "diff_hunk": "@@ -0,0 +1,73 @@\n+# Copyright (c) 2024-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include_guard(GLOBAL)\n+\n+function(indent_message header content indent_num)\n+  if(indent_num GREATER 0)\n+    string(REPEAT \" \" ${indent_num} indentation)\n+    string(REPEAT \".\" ${indent_num} tail)\n+    string(REGEX REPLACE \"${tail}$\" \"\" header \"${header}\")\n+  endif()\n+  message(\"${indentation}${header} ${content}\")",
      "path": "cmake/module/FlagsSummary.cmake",
      "position": 13,
      "original_position": 13,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I noticed that we're not using the `message(STATUS ` construct in this file, was that deliberate?",
      "created_at": "2024-08-05T08:24:50Z",
      "updated_at": "2024-08-05T08:34:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703730116",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703730116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703731262",
      "pull_request_review_id": 2208656646,
      "id": 1703731262,
      "node_id": "PRRC_kwDOABII585ljOA-",
      "diff_hunk": "@@ -0,0 +1,73 @@\n+# Copyright (c) 2024-present The Bitcoin Core developers",
      "path": "cmake/module/FlagsSummary.cmake",
      "position": 1,
      "original_position": 1,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: here we have the current year, would it make sense to change all of them to 2024 as a slightly better documentation of historical changes?",
      "created_at": "2024-08-05T08:25:44Z",
      "updated_at": "2024-08-05T08:34:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703731262",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703731262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703840960",
      "pull_request_review_id": 2218531027,
      "id": 1703840960,
      "node_id": "PRRC_kwDOABII585ljozA",
      "diff_hunk": "@@ -0,0 +1,73 @@\n+# Copyright (c) 2024-present The Bitcoin Core developers",
      "path": "cmake/module/FlagsSummary.cmake",
      "position": 1,
      "original_position": 1,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703731262,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you mean the \"2023\" instances in the copyright headers, they reflect the actual time when the code was written.",
      "created_at": "2024-08-05T09:37:26Z",
      "updated_at": "2024-08-05T09:37:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703840960",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703840960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703850707",
      "pull_request_review_id": 2218548240,
      "id": 1703850707,
      "node_id": "PRRC_kwDOABII585ljrLT",
      "diff_hunk": "@@ -0,0 +1,73 @@\n+# Copyright (c) 2024-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include_guard(GLOBAL)\n+\n+function(indent_message header content indent_num)\n+  if(indent_num GREATER 0)\n+    string(REPEAT \" \" ${indent_num} indentation)\n+    string(REPEAT \".\" ${indent_num} tail)\n+    string(REGEX REPLACE \"${tail}$\" \"\" header \"${header}\")\n+  endif()\n+  message(\"${indentation}${header} ${content}\")",
      "path": "cmake/module/FlagsSummary.cmake",
      "position": 13,
      "original_position": 13,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703730116,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "From the `message` command [docs](https://cmake.org/cmake/help/latest/command/message.html):\r\n> The CMake command-line tool displays `STATUS` ... messages on stdout with the message preceded by two hyphens and a space.\r\n\r\nI'm afraid that two hyphens in every line could clutter the summary.",
      "created_at": "2024-08-05T09:44:38Z",
      "updated_at": "2024-08-05T09:44:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703850707",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703850707"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703859387",
      "pull_request_review_id": 2218563876,
      "id": 1703859387,
      "node_id": "PRRC_kwDOABII585ljtS7",
      "diff_hunk": "@@ -0,0 +1,195 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# This file is expected to be highly volatile and may still change substantially.\n+\n+# If CMAKE_SYSTEM_NAME is set within a toolchain file, CMake will also\n+# set CMAKE_CROSSCOMPILING to TRUE, even if CMAKE_SYSTEM_NAME matches\n+# CMAKE_HOST_SYSTEM_NAME. To avoid potential misconfiguration of CMake,\n+# it is best not to touch CMAKE_SYSTEM_NAME unless cross-compiling is\n+# intended.\n+if(@depends_crosscompiling@)\n+  set(CMAKE_SYSTEM_NAME @host_system_name@)\n+  set(CMAKE_SYSTEM_VERSION @host_system_version@)\n+  set(CMAKE_SYSTEM_PROCESSOR @host_arch@)\n+endif()\n+\n+function(split_compiler_launcher env_compiler launcher compiler)\n+  set(${launcher})\n+  list(GET ${env_compiler} 0 start_token)\n+  if(start_token STREQUAL \"env\")\n+    set(${compiler})\n+    set(env_arg_parsing TRUE)\n+    foreach(token IN LISTS ${env_compiler})\n+      if(env_arg_parsing)\n+        list(APPEND ${launcher} ${token})\n+        set(env_arg_parsing FALSE)\n+        continue()\n+      elseif(token STREQUAL \"-u\")\n+        list(APPEND ${launcher} ${token})\n+        set(env_arg_parsing TRUE)\n+        continue()\n+      endif()\n+      list(APPEND ${compiler} ${token})\n+    endforeach()\n+  else()\n+    set(${compiler} ${${env_compiler}})\n+  endif()\n+  set(${launcher} ${${launcher}} PARENT_SCOPE)\n+  set(${compiler} ${${compiler}} PARENT_SCOPE)\n+endfunction()\n+\n+if(NOT DEFINED CMAKE_C_FLAGS_INIT)\n+  set(CMAKE_C_FLAGS_INIT \"@CFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_C_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT \"@CFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_C_FLAGS_DEBUG_INIT)\n+  set(CMAKE_C_FLAGS_DEBUG_INIT \"@CFLAGS_DEBUG@\")\n+endif()\n+\n+if(NOT DEFINED CMAKE_C_COMPILER)\n+  set(DEPENDS_C_COMPILER_WITH_LAUNCHER @CC@)\n+  split_compiler_launcher(DEPENDS_C_COMPILER_WITH_LAUNCHER CMAKE_C_COMPILER_LAUNCHER CMAKE_C_COMPILER)\n+  set(CMAKE_C_LINKER_LAUNCHER ${CMAKE_C_COMPILER_LAUNCHER})\n+endif()\n+\n+if(NOT DEFINED CMAKE_CXX_FLAGS_INIT)\n+  set(CMAKE_CXX_FLAGS_INIT \"@CXXFLAGS@\")\n+  set(CMAKE_OBJCXX_FLAGS_INIT \"@CXXFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT \"@CXXFLAGS_RELEASE@\")\n+  set(CMAKE_OBJCXX_FLAGS_RELWITHDEBINFO_INIT \"@CXXFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_CXX_FLAGS_DEBUG_INIT)\n+  set(CMAKE_CXX_FLAGS_DEBUG_INIT \"@CXXFLAGS_DEBUG@\")\n+  set(CMAKE_OBJCXX_FLAGS_DEBUG_INIT \"@CXXFLAGS_DEBUG@\")\n+endif()\n+\n+if(NOT DEFINED CMAKE_CXX_COMPILER)\n+  set(DEPENDS_CXX_COMPILER_WITH_LAUNCHER @CXX@)\n+  split_compiler_launcher(DEPENDS_CXX_COMPILER_WITH_LAUNCHER CMAKE_CXX_COMPILER_LAUNCHER CMAKE_CXX_COMPILER)\n+  set(CMAKE_CXX_LINKER_LAUNCHER ${CMAKE_CXX_COMPILER_LAUNCHER})\n+\n+  set(CMAKE_OBJCXX_COMPILER ${CMAKE_CXX_COMPILER})\n+  set(CMAKE_OBJCXX_COMPILER_LAUNCHER ${CMAKE_CXX_COMPILER_LAUNCHER})\n+  set(CMAKE_OBJCXX_LINKER_LAUNCHER ${CMAKE_CXX_LINKER_LAUNCHER})\n+endif()\n+\n+# The DEPENDS_COMPILE_DEFINITIONS* variables are to be treated as lists.\n+set(DEPENDS_COMPILE_DEFINITIONS @CPPFLAGS@)\n+set(DEPENDS_COMPILE_DEFINITIONS_RELWITHDEBINFO @CPPFLAGS_RELEASE@)\n+set(DEPENDS_COMPILE_DEFINITIONS_DEBUG @CPPFLAGS_DEBUG@)\n+\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_INIT \"@LDFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT \"@LDFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT \"@LDFLAGS_DEBUG@\")\n+endif()\n+\n+set(CMAKE_AR \"@AR@\")\n+set(CMAKE_RANLIB \"@RANLIB@\")\n+set(CMAKE_STRIP \"@STRIP@\")\n+set(CMAKE_OBJCOPY \"@OBJCOPY@\")\n+set(CMAKE_OBJDUMP \"@OBJDUMP@\")\n+\n+# Using our own built dependencies should not be\n+# affected by a potentially random environment.\n+set(CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH OFF)\n+\n+set(CMAKE_FIND_ROOT_PATH \"@depends_prefix@\")\n+set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n+set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\n+set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\n+set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)\n+set(QT_TRANSLATIONS_DIR \"@depends_prefix@/translations\")\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)",
      "path": "depends/toolchain.cmake.in",
      "position": 82,
      "original_position": 114,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703708721,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Is the intent to handle any cross-compilation to Apple platforms from non-Apple hosts, or specifically cross-compilation to macOS?\r\n\r\nThe former.\r\n\r\n> Is this the same as\r\n> \r\n> ```\r\n> CMAKE_CROSSCOMPILING AND NOT CMAKE_HOST_APPLE\r\n> ```\r\n> \r\n> ?\r\n\r\nIn the context of a toolchain file, it is not. The `CMAKE_CROSSCOMPILING` variable is well-defined after a `project()` call, but not within a toolchain file.",
      "created_at": "2024-08-05T09:51:22Z",
      "updated_at": "2024-08-05T09:51:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703859387",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703859387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703885526",
      "pull_request_review_id": 2218608990,
      "id": 1703885526,
      "node_id": "PRRC_kwDOABII585ljzrW",
      "diff_hunk": "@@ -0,0 +1,21 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+function(generate_header_from_json json_source_relpath)\n+  add_custom_command(\n+    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h\n+    COMMAND ${CMAKE_COMMAND} -DJSON_SOURCE_PATH=${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} -DHEADER_PATH=${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h -P ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake\n+    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake",
      "path": "cmake/module/GenerateHeaders.cmake",
      "position": null,
      "original_position": 9,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703721288,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addressed in https://github.com/hebasto/bitcoin/pull/301. Your review is welcome :)",
      "created_at": "2024-08-05T10:12:59Z",
      "updated_at": "2024-08-05T10:12:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703885526",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703885526"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703899727",
      "pull_request_review_id": 2218631348,
      "id": 1703899727,
      "node_id": "PRRC_kwDOABII585lj3JP",
      "diff_hunk": "@@ -0,0 +1,715 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)\n+\n+option(INSTALL_MAN \"Install man pages.\" ON)\n+\n+set(APPEND_CPPFLAGS \"\" CACHE STRING \"Preprocessor flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CFLAGS \"\" CACHE STRING \"C compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CXXFLAGS \"\" CACHE STRING \"(Objective) C++ compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_LDFLAGS \"\" CACHE STRING \"Linker flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+# Appending to this low-level rule variables is the only way to\n+# guarantee that the flags appear at the end of the command line.\n+string(APPEND CMAKE_CXX_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CXXFLAGS}\")\n+string(APPEND CMAKE_CXX_CREATE_SHARED_LIBRARY \" ${APPEND_LDFLAGS}\")\n+string(APPEND CMAKE_CXX_LINK_EXECUTABLE \" ${APPEND_LDFLAGS}\")\n+\n+set(configure_warnings)\n+\n+include(CheckPIESupported)\n+check_pie_supported(OUTPUT_VARIABLE check_pie_output LANGUAGES CXX)\n+if(CMAKE_CXX_LINK_PIE_SUPPORTED)\n+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+elseif(NOT WIN32)\n+  # The warning is superfluous for Windows.\n+  message(WARNING \"PIE is not supported at link time: ${check_pie_output}\")\n+  list(APPEND configure_warnings \"Position independent code disabled.\")\n+endif()\n+unset(check_pie_output)\n+\n+# The core_interface library aims to encapsulate common build flags.\n+# It is a usage requirement for all targets except for secp256k1, which\n+# gets its flags by other means.\n+add_library(core_interface INTERFACE)\n+add_library(core_interface_relwithdebinfo INTERFACE)\n+add_library(core_interface_debug INTERFACE)\n+target_link_libraries(core_interface INTERFACE\n+  $<$<CONFIG:RelWithDebInfo>:core_interface_relwithdebinfo>\n+  $<$<CONFIG:Debug>:core_interface_debug>\n+)\n+\n+if(BUILD_FOR_FUZZING)\n+  message(WARNING \"BUILD_FOR_FUZZING=ON will disable all other targets and force BUILD_FUZZ_BINARY=ON.\")\n+  set(BUILD_DAEMON OFF)\n+  set(BUILD_CLI OFF)\n+  set(BUILD_TX OFF)\n+  set(BUILD_UTIL OFF)\n+  set(BUILD_UTIL_CHAINSTATE OFF)\n+  set(BUILD_KERNEL_LIB OFF)\n+  set(BUILD_WALLET_TOOL OFF)\n+  set(BUILD_GUI OFF)\n+  set(ENABLE_EXTERNAL_SIGNER OFF)\n+  set(WITH_NATPMP OFF)\n+  set(WITH_MINIUPNPC OFF)\n+  set(WITH_ZMQ OFF)\n+  set(BUILD_TESTS OFF)\n+  set(BUILD_GUI_TESTS OFF)\n+  set(BUILD_BENCH OFF)\n+  set(BUILD_FUZZ_BINARY ON)\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    ABORT_ON_FAILED_ASSUME\n+  )\n+endif()\n+\n+include(TryAppendCXXFlags)\n+include(TryAppendLinkerFlag)\n+\n+if(WIN32)\n+  #[=[\n+  This build system supports two ways to build binaries for Windows.\n+\n+  1. Building on Windows using MSVC.\n+  Implementation notes:\n+  - /DWIN32 and /D_WINDOWS definitions are included into the CMAKE_CXX_FLAGS_INIT\n+    and CMAKE_CXX_FLAGS_INIT variables by default.\n+  - A run-time library is selected using the CMAKE_MSVC_RUNTIME_LIBRARY variable.\n+  - MSVC-specific options, for example, /Zc:__cplusplus, are additionally required.\n+\n+  2. Cross-compiling using MinGW.\n+  Implementation notes:\n+  - WIN32 and _WINDOWS definitions must be provided explicitly.\n+  - A run-time library must be specified explicitly using _MT definition.\n+  ]=]\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    _WIN32_WINNT=0x0601\n+    _WIN32_IE=0x0501\n+    WIN32_LEAN_AND_MEAN\n+    NOMINMAX\n+  )\n+\n+  if(MSVC)\n+    if(VCPKG_TARGET_TRIPLET MATCHES \"-static\")\n+      set(msvc_library_linkage \"\")\n+    else()\n+      set(msvc_library_linkage \"DLL\")\n+    endif()\n+    set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>${msvc_library_linkage}\")\n+    unset(msvc_library_linkage)\n+\n+    target_compile_definitions(core_interface INTERFACE\n+      _UNICODE;UNICODE\n+    )\n+    target_compile_options(core_interface INTERFACE\n+      /utf-8\n+      /Zc:preprocessor\n+      /Zc:__cplusplus\n+      /sdl\n+    )\n+    # Improve parallelism in MSBuild.\n+    # See: https://devblogs.microsoft.com/cppblog/improved-parallelism-in-msbuild/.\n+    list(APPEND CMAKE_VS_GLOBALS \"UseMultiToolTask=true\")\n+  endif()\n+\n+  if(MINGW)\n+    target_compile_definitions(core_interface INTERFACE\n+      WIN32\n+      _WINDOWS\n+      _MT\n+    )\n+    # Avoid the use of aligned vector instructions when building for Windows.\n+    # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54412.\n+    try_append_cxx_flags(\"-Wa,-muse-unaligned-vector-move\" TARGET core_interface SKIP_LINK)\n+    try_append_linker_flag(\"-static\" TARGET core_interface)\n+    # We require Windows 7 (NT 6.1) or later.\n+    try_append_linker_flag(\"-Wl,--major-subsystem-version,6\" TARGET core_interface)\n+    try_append_linker_flag(\"-Wl,--minor-subsystem-version,1\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+# Use 64-bit off_t on 32-bit Linux.\n+if (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n+  # Ensure 64-bit offsets are used for filesystem accesses for 32-bit compilation.\n+  target_compile_definitions(core_interface INTERFACE\n+    _FILE_OFFSET_BITS=64\n+  )\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+  target_compile_definitions(core_interface INTERFACE\n+    MAC_OSX\n+    OBJC_OLD_DISPATCH_PROTOTYPES=0\n+  )\n+  # These flags are specific to ld64, and may cause issues with other linkers.\n+  # For example: GNU ld will interpret -dead_strip as -de and then try and use\n+  # \"ad_strip\" as the symbol for the entry point.\n+  try_append_linker_flag(\"-Wl,-dead_strip\" TARGET core_interface)\n+  try_append_linker_flag(\"-Wl,-dead_strip_dylibs\" TARGET core_interface)\n+  if(CMAKE_HOST_APPLE)\n+    try_append_linker_flag(\"-Wl,-headerpad_max_install_names\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+set(THREADS_PREFER_PTHREAD_FLAG ON)\n+find_package(Threads REQUIRED)\n+target_link_libraries(core_interface INTERFACE\n+  Threads::Threads\n+)\n+\n+add_library(sanitize_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE sanitize_interface)\n+if(SANITIZERS)\n+  # First check if the compiler accepts flags. If an incompatible pair like\n+  # -fsanitize=address,thread is used here, this check will fail. This will also\n+  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  try_append_cxx_flags(\"-fsanitize=${SANITIZERS}\" TARGET sanitize_interface\n+    RESULT_VAR cxx_supports_sanitizers\n+    SKIP_LINK\n+  )\n+  if(NOT cxx_supports_sanitizers)\n+    message(FATAL_ERROR \"Compiler did not accept requested flags.\")\n+  endif()\n+\n+  # Some compilers (e.g. GCC) require additional libraries like libasan,\n+  # libtsan, libubsan, etc. Make sure linking still works with the sanitize\n+  # flag. This is a separate check so we can give a better error message when\n+  # the sanitize flags are supported by the compiler but the actual sanitizer\n+  # libs are missing.\n+  try_append_linker_flag(\"-fsanitize=${SANITIZERS}\" VAR SANITIZER_LDFLAGS\n+    SOURCE \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      __attribute__((weak)) // allow for libFuzzer linking\n+      int main() { return 0; }\n+    \"\n+    RESULT_VAR linker_supports_sanitizers\n+  )\n+  if(NOT linker_supports_sanitizers)\n+    message(FATAL_ERROR \"Linker did not accept requested flags, you are missing required libraries.\")\n+  endif()\n+endif()\n+target_link_options(sanitize_interface INTERFACE ${SANITIZER_LDFLAGS})\n+\n+if(BUILD_FUZZ_BINARY)\n+  include(CheckSourceCompilesAndLinks)\n+  check_cxx_source_links_with_flags(\"${SANITIZER_LDFLAGS}\" \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      // No main() function.\n+    \" FUZZ_BINARY_LINKS_WITHOUT_MAIN_FUNCTION\n+  )\n+endif()\n+\n+include(AddBoostIfNeeded)\n+add_boost_if_needed()\n+\n+if(BUILD_DAEMON OR BUILD_GUI OR BUILD_CLI OR BUILD_TESTS OR BUILD_BENCH OR BUILD_FUZZ_BINARY)\n+  find_package(Libevent 2.1.8 MODULE REQUIRED)\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/ccache.cmake)\n+\n+add_library(warn_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE warn_interface)\n+if(MSVC)\n+  try_append_cxx_flags(\"/W3\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4018\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4244\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4267\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4715\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4805\" TARGET warn_interface SKIP_LINK)\n+  target_compile_definitions(warn_interface INTERFACE\n+    _CRT_SECURE_NO_WARNINGS\n+    _SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+  )\n+else()\n+  try_append_cxx_flags(\"-Wall\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wextra\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wgnu\" TARGET warn_interface SKIP_LINK)\n+  # Some compilers will ignore -Wformat-security without -Wformat, so just combine the two here.\n+  try_append_cxx_flags(\"-Wformat -Wformat-security\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wvla\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wshadow-field\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wthread-safety\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wloop-analysis\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wredundant-decls\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunused-member-function\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdate-time\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wconditional-uninitialized\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-branches\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-cond\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wlogical-op\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Woverloaded-virtual\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wsuggest-override\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wimplicit-fallthrough\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunreachable-code\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdocumentation\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wself-assign\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wundef\" TARGET warn_interface SKIP_LINK)\n+\n+  # Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  # unknown options if any other warning is produced. Test the -Wfoo case, and\n+  # set the -Wno-foo case if it works.\n+  try_append_cxx_flags(\"-Wunused-parameter\" TARGET warn_interface SKIP_LINK\n+    IF_CHECK_PASSED \"-Wno-unused-parameter\"\n+  )\n+endif()\n+\n+include(ProcessConfigurations)\n+set_default_config(RelWithDebInfo)\n+\n+# Redefine/adjust per-configuration flags.\n+target_compile_definitions(core_interface_debug INTERFACE\n+  DEBUG\n+  DEBUG_LOCKORDER\n+  DEBUG_LOCKCONTENTION\n+  RPC_DOC_CHECK\n+  ABORT_ON_FAILED_ASSUME\n+)\n+# We leave assertions on.\n+if(MSVC)\n+  remove_cxx_flag_from_all_configs(/DNDEBUG)\n+else()\n+  remove_cxx_flag_from_all_configs(-DNDEBUG)\n+\n+  # Adjust flags used by the CXX compiler during RELEASE builds.\n+  # Prefer -O2 optimization level. (-O3 is CMake's default for Release for many compilers.)\n+  replace_cxx_flag_in_config(Release -O3 -O2)\n+\n+  are_flags_overridden(CMAKE_CXX_FLAGS_DEBUG cxx_flags_debug_overridden)\n+  if(NOT cxx_flags_debug_overridden)\n+    # Redefine flags used by the CXX compiler during DEBUG builds.\n+    try_append_cxx_flags(\"-g3\" RESULT_VAR compiler_supports_g3)\n+    if(compiler_supports_g3)\n+      replace_cxx_flag_in_config(Debug -g -g3)\n+    endif()\n+    unset(compiler_supports_g3)\n+\n+    try_append_cxx_flags(\"-ftrapv\" RESULT_VAR compiler_supports_ftrapv)\n+    if(compiler_supports_ftrapv)\n+      string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-ftrapv \")\n+    endif()\n+    unset(compiler_supports_ftrapv)\n+\n+    string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-O0 \")\n+\n+    set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG}\"\n+      CACHE STRING\n+      \"Flags used by the CXX compiler during DEBUG builds.\"\n+      FORCE\n+    )\n+  endif()\n+  unset(cxx_flags_debug_overridden)\n+endif()\n+\n+set(CMAKE_CXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_OBJCXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\")\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\")\n+get_property(is_multi_config GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)\n+if(is_multi_config)\n+  if(NOT \"Coverage\" IN_LIST CMAKE_CONFIGURATION_TYPES)\n+    list(APPEND CMAKE_CONFIGURATION_TYPES Coverage)\n+  endif()\n+endif()\n+\n+configure_file(cmake/script/Coverage.cmake Coverage.cmake COPYONLY)\n+configure_file(cmake/script/CoverageFuzz.cmake CoverageFuzz.cmake COPYONLY)\n+configure_file(cmake/script/CoverageInclude.cmake.in CoverageInclude.cmake @ONLY)\n+configure_file(contrib/filter-lcov.py filter-lcov.py COPYONLY)\n+\n+# Don't allow extended (non-ASCII) symbols in identifiers. This is easier for code review.\n+try_append_cxx_flags(\"-fno-extended-identifiers\" TARGET core_interface SKIP_LINK)\n+\n+# Currently all versions of gcc are subject to a class of bugs, see the\n+# gccbug_90348 test case (only reproduces on GCC 11 and earlier) and\n+# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111843. To work around that, set\n+# -fstack-reuse=none for all gcc builds. (Only gcc understands this flag).\n+try_append_cxx_flags(\"-fstack-reuse=none\" TARGET core_interface)\n+\n+if(ENABLE_HARDENING)\n+  add_library(hardening_interface INTERFACE)\n+  target_link_libraries(core_interface INTERFACE hardening_interface)\n+  if(MSVC)\n+    try_append_linker_flag(\"/DYNAMICBASE\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/HIGHENTROPYVA\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/NXCOMPAT\" TARGET hardening_interface)\n+  else()\n+    try_append_cxx_flags(\"-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3\"\n+      RESULT_VAR cxx_supports_fortify_source\n+    )\n+    if(cxx_supports_fortify_source)\n+      # When the build configuration is Debug, all optimizations are disabled.\n+      # However, _FORTIFY_SOURCE requires that there is some level of optimization,\n+      # otherwise it does nothing and just creates a compiler warning.\n+      # Since _FORTIFY_SOURCE is a no-op without optimizations, do not enable it\n+      # when the build configuration is Debug.\n+      target_compile_options(hardening_interface INTERFACE\n+        $<$<NOT:$<CONFIG:Debug>>:-U_FORTIFY_SOURCE>\n+        $<$<NOT:$<CONFIG:Debug>>:-D_FORTIFY_SOURCE=3>\n+      )\n+    endif()\n+    unset(cxx_supports_fortify_source)\n+\n+    try_append_cxx_flags(\"-Wstack-protector\" TARGET hardening_interface SKIP_LINK)\n+    try_append_cxx_flags(\"-fstack-protector-all\" TARGET hardening_interface)\n+    try_append_cxx_flags(\"-fcf-protection=full\" TARGET hardening_interface)\n+\n+    if(MINGW)\n+      # stack-clash-protection doesn't compile with GCC 10 and earlier.\n+      # In any case, it is a no-op for Windows.\n+      # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458 for more details.\n+    else()\n+      try_append_cxx_flags(\"-fstack-clash-protection\" TARGET hardening_interface)\n+    endif()\n+\n+    if(CMAKE_SYSTEM_PROCESSOR STREQUAL \"aarch64\" OR CMAKE_SYSTEM_PROCESSOR STREQUAL \"arm64\")\n+      try_append_cxx_flags(\"-mbranch-protection=bti\" TARGET hardening_interface SKIP_LINK)\n+    endif()\n+\n+    try_append_linker_flag(\"-Wl,--enable-reloc-section\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--dynamicbase\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--nxcompat\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--high-entropy-va\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,relro\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,now\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,separate-code\" TARGET hardening_interface)\n+    if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+      try_append_linker_flag(\"-Wl,-fixup_chains\" TARGET hardening_interface)\n+    endif()\n+  endif()\n+endif()\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 587,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\r\n\r\nWhy is this (`-fvisibility-inlines-hidden`) being added, if we don't use it in master?",
      "created_at": "2024-08-05T10:25:00Z",
      "updated_at": "2024-08-05T10:25:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703899727",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703899727"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 587,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703923518",
      "pull_request_review_id": 2218670508,
      "id": 1703923518,
      "node_id": "PRRC_kwDOABII585lj88-",
      "diff_hunk": "@@ -0,0 +1,715 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)\n+\n+option(INSTALL_MAN \"Install man pages.\" ON)\n+\n+set(APPEND_CPPFLAGS \"\" CACHE STRING \"Preprocessor flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CFLAGS \"\" CACHE STRING \"C compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CXXFLAGS \"\" CACHE STRING \"(Objective) C++ compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_LDFLAGS \"\" CACHE STRING \"Linker flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+# Appending to this low-level rule variables is the only way to\n+# guarantee that the flags appear at the end of the command line.\n+string(APPEND CMAKE_CXX_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CXXFLAGS}\")\n+string(APPEND CMAKE_CXX_CREATE_SHARED_LIBRARY \" ${APPEND_LDFLAGS}\")\n+string(APPEND CMAKE_CXX_LINK_EXECUTABLE \" ${APPEND_LDFLAGS}\")\n+\n+set(configure_warnings)\n+\n+include(CheckPIESupported)\n+check_pie_supported(OUTPUT_VARIABLE check_pie_output LANGUAGES CXX)\n+if(CMAKE_CXX_LINK_PIE_SUPPORTED)\n+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+elseif(NOT WIN32)\n+  # The warning is superfluous for Windows.\n+  message(WARNING \"PIE is not supported at link time: ${check_pie_output}\")\n+  list(APPEND configure_warnings \"Position independent code disabled.\")\n+endif()\n+unset(check_pie_output)\n+\n+# The core_interface library aims to encapsulate common build flags.\n+# It is a usage requirement for all targets except for secp256k1, which\n+# gets its flags by other means.\n+add_library(core_interface INTERFACE)\n+add_library(core_interface_relwithdebinfo INTERFACE)\n+add_library(core_interface_debug INTERFACE)\n+target_link_libraries(core_interface INTERFACE\n+  $<$<CONFIG:RelWithDebInfo>:core_interface_relwithdebinfo>\n+  $<$<CONFIG:Debug>:core_interface_debug>\n+)\n+\n+if(BUILD_FOR_FUZZING)\n+  message(WARNING \"BUILD_FOR_FUZZING=ON will disable all other targets and force BUILD_FUZZ_BINARY=ON.\")\n+  set(BUILD_DAEMON OFF)\n+  set(BUILD_CLI OFF)\n+  set(BUILD_TX OFF)\n+  set(BUILD_UTIL OFF)\n+  set(BUILD_UTIL_CHAINSTATE OFF)\n+  set(BUILD_KERNEL_LIB OFF)\n+  set(BUILD_WALLET_TOOL OFF)\n+  set(BUILD_GUI OFF)\n+  set(ENABLE_EXTERNAL_SIGNER OFF)\n+  set(WITH_NATPMP OFF)\n+  set(WITH_MINIUPNPC OFF)\n+  set(WITH_ZMQ OFF)\n+  set(BUILD_TESTS OFF)\n+  set(BUILD_GUI_TESTS OFF)\n+  set(BUILD_BENCH OFF)\n+  set(BUILD_FUZZ_BINARY ON)\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    ABORT_ON_FAILED_ASSUME\n+  )\n+endif()\n+\n+include(TryAppendCXXFlags)\n+include(TryAppendLinkerFlag)\n+\n+if(WIN32)\n+  #[=[\n+  This build system supports two ways to build binaries for Windows.\n+\n+  1. Building on Windows using MSVC.\n+  Implementation notes:\n+  - /DWIN32 and /D_WINDOWS definitions are included into the CMAKE_CXX_FLAGS_INIT\n+    and CMAKE_CXX_FLAGS_INIT variables by default.\n+  - A run-time library is selected using the CMAKE_MSVC_RUNTIME_LIBRARY variable.\n+  - MSVC-specific options, for example, /Zc:__cplusplus, are additionally required.\n+\n+  2. Cross-compiling using MinGW.\n+  Implementation notes:\n+  - WIN32 and _WINDOWS definitions must be provided explicitly.\n+  - A run-time library must be specified explicitly using _MT definition.\n+  ]=]\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    _WIN32_WINNT=0x0601\n+    _WIN32_IE=0x0501\n+    WIN32_LEAN_AND_MEAN\n+    NOMINMAX\n+  )\n+\n+  if(MSVC)\n+    if(VCPKG_TARGET_TRIPLET MATCHES \"-static\")\n+      set(msvc_library_linkage \"\")\n+    else()\n+      set(msvc_library_linkage \"DLL\")\n+    endif()\n+    set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>${msvc_library_linkage}\")\n+    unset(msvc_library_linkage)\n+\n+    target_compile_definitions(core_interface INTERFACE\n+      _UNICODE;UNICODE\n+    )\n+    target_compile_options(core_interface INTERFACE\n+      /utf-8\n+      /Zc:preprocessor\n+      /Zc:__cplusplus\n+      /sdl\n+    )\n+    # Improve parallelism in MSBuild.\n+    # See: https://devblogs.microsoft.com/cppblog/improved-parallelism-in-msbuild/.\n+    list(APPEND CMAKE_VS_GLOBALS \"UseMultiToolTask=true\")\n+  endif()\n+\n+  if(MINGW)\n+    target_compile_definitions(core_interface INTERFACE\n+      WIN32\n+      _WINDOWS\n+      _MT\n+    )\n+    # Avoid the use of aligned vector instructions when building for Windows.\n+    # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54412.\n+    try_append_cxx_flags(\"-Wa,-muse-unaligned-vector-move\" TARGET core_interface SKIP_LINK)\n+    try_append_linker_flag(\"-static\" TARGET core_interface)\n+    # We require Windows 7 (NT 6.1) or later.\n+    try_append_linker_flag(\"-Wl,--major-subsystem-version,6\" TARGET core_interface)\n+    try_append_linker_flag(\"-Wl,--minor-subsystem-version,1\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+# Use 64-bit off_t on 32-bit Linux.\n+if (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n+  # Ensure 64-bit offsets are used for filesystem accesses for 32-bit compilation.\n+  target_compile_definitions(core_interface INTERFACE\n+    _FILE_OFFSET_BITS=64\n+  )\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+  target_compile_definitions(core_interface INTERFACE\n+    MAC_OSX\n+    OBJC_OLD_DISPATCH_PROTOTYPES=0\n+  )\n+  # These flags are specific to ld64, and may cause issues with other linkers.\n+  # For example: GNU ld will interpret -dead_strip as -de and then try and use\n+  # \"ad_strip\" as the symbol for the entry point.\n+  try_append_linker_flag(\"-Wl,-dead_strip\" TARGET core_interface)\n+  try_append_linker_flag(\"-Wl,-dead_strip_dylibs\" TARGET core_interface)\n+  if(CMAKE_HOST_APPLE)\n+    try_append_linker_flag(\"-Wl,-headerpad_max_install_names\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+set(THREADS_PREFER_PTHREAD_FLAG ON)\n+find_package(Threads REQUIRED)\n+target_link_libraries(core_interface INTERFACE\n+  Threads::Threads\n+)\n+\n+add_library(sanitize_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE sanitize_interface)\n+if(SANITIZERS)\n+  # First check if the compiler accepts flags. If an incompatible pair like\n+  # -fsanitize=address,thread is used here, this check will fail. This will also\n+  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  try_append_cxx_flags(\"-fsanitize=${SANITIZERS}\" TARGET sanitize_interface\n+    RESULT_VAR cxx_supports_sanitizers\n+    SKIP_LINK\n+  )\n+  if(NOT cxx_supports_sanitizers)\n+    message(FATAL_ERROR \"Compiler did not accept requested flags.\")\n+  endif()\n+\n+  # Some compilers (e.g. GCC) require additional libraries like libasan,\n+  # libtsan, libubsan, etc. Make sure linking still works with the sanitize\n+  # flag. This is a separate check so we can give a better error message when\n+  # the sanitize flags are supported by the compiler but the actual sanitizer\n+  # libs are missing.\n+  try_append_linker_flag(\"-fsanitize=${SANITIZERS}\" VAR SANITIZER_LDFLAGS\n+    SOURCE \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      __attribute__((weak)) // allow for libFuzzer linking\n+      int main() { return 0; }\n+    \"\n+    RESULT_VAR linker_supports_sanitizers\n+  )\n+  if(NOT linker_supports_sanitizers)\n+    message(FATAL_ERROR \"Linker did not accept requested flags, you are missing required libraries.\")\n+  endif()\n+endif()\n+target_link_options(sanitize_interface INTERFACE ${SANITIZER_LDFLAGS})\n+\n+if(BUILD_FUZZ_BINARY)\n+  include(CheckSourceCompilesAndLinks)\n+  check_cxx_source_links_with_flags(\"${SANITIZER_LDFLAGS}\" \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      // No main() function.\n+    \" FUZZ_BINARY_LINKS_WITHOUT_MAIN_FUNCTION\n+  )\n+endif()\n+\n+include(AddBoostIfNeeded)\n+add_boost_if_needed()\n+\n+if(BUILD_DAEMON OR BUILD_GUI OR BUILD_CLI OR BUILD_TESTS OR BUILD_BENCH OR BUILD_FUZZ_BINARY)\n+  find_package(Libevent 2.1.8 MODULE REQUIRED)\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/ccache.cmake)\n+\n+add_library(warn_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE warn_interface)\n+if(MSVC)\n+  try_append_cxx_flags(\"/W3\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4018\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4244\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4267\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4715\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4805\" TARGET warn_interface SKIP_LINK)\n+  target_compile_definitions(warn_interface INTERFACE\n+    _CRT_SECURE_NO_WARNINGS\n+    _SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+  )\n+else()\n+  try_append_cxx_flags(\"-Wall\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wextra\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wgnu\" TARGET warn_interface SKIP_LINK)\n+  # Some compilers will ignore -Wformat-security without -Wformat, so just combine the two here.\n+  try_append_cxx_flags(\"-Wformat -Wformat-security\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wvla\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wshadow-field\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wthread-safety\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wloop-analysis\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wredundant-decls\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunused-member-function\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdate-time\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wconditional-uninitialized\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-branches\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-cond\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wlogical-op\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Woverloaded-virtual\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wsuggest-override\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wimplicit-fallthrough\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunreachable-code\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdocumentation\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wself-assign\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wundef\" TARGET warn_interface SKIP_LINK)\n+\n+  # Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  # unknown options if any other warning is produced. Test the -Wfoo case, and\n+  # set the -Wno-foo case if it works.\n+  try_append_cxx_flags(\"-Wunused-parameter\" TARGET warn_interface SKIP_LINK\n+    IF_CHECK_PASSED \"-Wno-unused-parameter\"\n+  )\n+endif()\n+\n+include(ProcessConfigurations)\n+set_default_config(RelWithDebInfo)\n+\n+# Redefine/adjust per-configuration flags.\n+target_compile_definitions(core_interface_debug INTERFACE\n+  DEBUG\n+  DEBUG_LOCKORDER\n+  DEBUG_LOCKCONTENTION\n+  RPC_DOC_CHECK\n+  ABORT_ON_FAILED_ASSUME\n+)\n+# We leave assertions on.\n+if(MSVC)\n+  remove_cxx_flag_from_all_configs(/DNDEBUG)\n+else()\n+  remove_cxx_flag_from_all_configs(-DNDEBUG)\n+\n+  # Adjust flags used by the CXX compiler during RELEASE builds.\n+  # Prefer -O2 optimization level. (-O3 is CMake's default for Release for many compilers.)\n+  replace_cxx_flag_in_config(Release -O3 -O2)\n+\n+  are_flags_overridden(CMAKE_CXX_FLAGS_DEBUG cxx_flags_debug_overridden)\n+  if(NOT cxx_flags_debug_overridden)\n+    # Redefine flags used by the CXX compiler during DEBUG builds.\n+    try_append_cxx_flags(\"-g3\" RESULT_VAR compiler_supports_g3)\n+    if(compiler_supports_g3)\n+      replace_cxx_flag_in_config(Debug -g -g3)\n+    endif()\n+    unset(compiler_supports_g3)\n+\n+    try_append_cxx_flags(\"-ftrapv\" RESULT_VAR compiler_supports_ftrapv)\n+    if(compiler_supports_ftrapv)\n+      string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-ftrapv \")\n+    endif()\n+    unset(compiler_supports_ftrapv)\n+\n+    string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-O0 \")\n+\n+    set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG}\"\n+      CACHE STRING\n+      \"Flags used by the CXX compiler during DEBUG builds.\"\n+      FORCE\n+    )\n+  endif()\n+  unset(cxx_flags_debug_overridden)\n+endif()\n+\n+set(CMAKE_CXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_OBJCXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\")\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\")\n+get_property(is_multi_config GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)\n+if(is_multi_config)\n+  if(NOT \"Coverage\" IN_LIST CMAKE_CONFIGURATION_TYPES)\n+    list(APPEND CMAKE_CONFIGURATION_TYPES Coverage)\n+  endif()\n+endif()\n+\n+configure_file(cmake/script/Coverage.cmake Coverage.cmake COPYONLY)\n+configure_file(cmake/script/CoverageFuzz.cmake CoverageFuzz.cmake COPYONLY)\n+configure_file(cmake/script/CoverageInclude.cmake.in CoverageInclude.cmake @ONLY)\n+configure_file(contrib/filter-lcov.py filter-lcov.py COPYONLY)\n+\n+# Don't allow extended (non-ASCII) symbols in identifiers. This is easier for code review.\n+try_append_cxx_flags(\"-fno-extended-identifiers\" TARGET core_interface SKIP_LINK)\n+\n+# Currently all versions of gcc are subject to a class of bugs, see the\n+# gccbug_90348 test case (only reproduces on GCC 11 and earlier) and\n+# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111843. To work around that, set\n+# -fstack-reuse=none for all gcc builds. (Only gcc understands this flag).\n+try_append_cxx_flags(\"-fstack-reuse=none\" TARGET core_interface)\n+\n+if(ENABLE_HARDENING)\n+  add_library(hardening_interface INTERFACE)\n+  target_link_libraries(core_interface INTERFACE hardening_interface)\n+  if(MSVC)\n+    try_append_linker_flag(\"/DYNAMICBASE\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/HIGHENTROPYVA\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/NXCOMPAT\" TARGET hardening_interface)\n+  else()\n+    try_append_cxx_flags(\"-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3\"\n+      RESULT_VAR cxx_supports_fortify_source\n+    )\n+    if(cxx_supports_fortify_source)\n+      # When the build configuration is Debug, all optimizations are disabled.\n+      # However, _FORTIFY_SOURCE requires that there is some level of optimization,\n+      # otherwise it does nothing and just creates a compiler warning.\n+      # Since _FORTIFY_SOURCE is a no-op without optimizations, do not enable it\n+      # when the build configuration is Debug.\n+      target_compile_options(hardening_interface INTERFACE\n+        $<$<NOT:$<CONFIG:Debug>>:-U_FORTIFY_SOURCE>\n+        $<$<NOT:$<CONFIG:Debug>>:-D_FORTIFY_SOURCE=3>\n+      )\n+    endif()\n+    unset(cxx_supports_fortify_source)\n+\n+    try_append_cxx_flags(\"-Wstack-protector\" TARGET hardening_interface SKIP_LINK)\n+    try_append_cxx_flags(\"-fstack-protector-all\" TARGET hardening_interface)\n+    try_append_cxx_flags(\"-fcf-protection=full\" TARGET hardening_interface)\n+\n+    if(MINGW)\n+      # stack-clash-protection doesn't compile with GCC 10 and earlier.\n+      # In any case, it is a no-op for Windows.\n+      # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458 for more details.\n+    else()\n+      try_append_cxx_flags(\"-fstack-clash-protection\" TARGET hardening_interface)\n+    endif()\n+\n+    if(CMAKE_SYSTEM_PROCESSOR STREQUAL \"aarch64\" OR CMAKE_SYSTEM_PROCESSOR STREQUAL \"arm64\")\n+      try_append_cxx_flags(\"-mbranch-protection=bti\" TARGET hardening_interface SKIP_LINK)\n+    endif()\n+\n+    try_append_linker_flag(\"-Wl,--enable-reloc-section\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--dynamicbase\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--nxcompat\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--high-entropy-va\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,relro\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,now\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,separate-code\" TARGET hardening_interface)\n+    if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+      try_append_linker_flag(\"-Wl,-fixup_chains\" TARGET hardening_interface)\n+    endif()\n+  endif()\n+endif()\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 587,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703899727,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! Fixed in https://github.com/hebasto/bitcoin/pull/303.",
      "created_at": "2024-08-05T10:45:42Z",
      "updated_at": "2024-08-05T10:45:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703923518",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703923518"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 587,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703933036",
      "pull_request_review_id": 2218686978,
      "id": 1703933036,
      "node_id": "PRRC_kwDOABII585lj_Rs",
      "diff_hunk": "@@ -0,0 +1,195 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# This file is expected to be highly volatile and may still change substantially.\n+\n+# If CMAKE_SYSTEM_NAME is set within a toolchain file, CMake will also\n+# set CMAKE_CROSSCOMPILING to TRUE, even if CMAKE_SYSTEM_NAME matches\n+# CMAKE_HOST_SYSTEM_NAME. To avoid potential misconfiguration of CMake,\n+# it is best not to touch CMAKE_SYSTEM_NAME unless cross-compiling is\n+# intended.\n+if(@depends_crosscompiling@)\n+  set(CMAKE_SYSTEM_NAME @host_system_name@)\n+  set(CMAKE_SYSTEM_VERSION @host_system_version@)\n+  set(CMAKE_SYSTEM_PROCESSOR @host_arch@)\n+endif()\n+\n+function(split_compiler_launcher env_compiler launcher compiler)\n+  set(${launcher})\n+  list(GET ${env_compiler} 0 start_token)\n+  if(start_token STREQUAL \"env\")\n+    set(${compiler})\n+    set(env_arg_parsing TRUE)\n+    foreach(token IN LISTS ${env_compiler})\n+      if(env_arg_parsing)\n+        list(APPEND ${launcher} ${token})\n+        set(env_arg_parsing FALSE)\n+        continue()\n+      elseif(token STREQUAL \"-u\")\n+        list(APPEND ${launcher} ${token})\n+        set(env_arg_parsing TRUE)\n+        continue()\n+      endif()\n+      list(APPEND ${compiler} ${token})\n+    endforeach()\n+  else()\n+    set(${compiler} ${${env_compiler}})\n+  endif()\n+  set(${launcher} ${${launcher}} PARENT_SCOPE)\n+  set(${compiler} ${${compiler}} PARENT_SCOPE)\n+endfunction()\n+\n+if(NOT DEFINED CMAKE_C_FLAGS_INIT)\n+  set(CMAKE_C_FLAGS_INIT \"@CFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_C_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT \"@CFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_C_FLAGS_DEBUG_INIT)\n+  set(CMAKE_C_FLAGS_DEBUG_INIT \"@CFLAGS_DEBUG@\")\n+endif()\n+\n+if(NOT DEFINED CMAKE_C_COMPILER)\n+  set(DEPENDS_C_COMPILER_WITH_LAUNCHER @CC@)\n+  split_compiler_launcher(DEPENDS_C_COMPILER_WITH_LAUNCHER CMAKE_C_COMPILER_LAUNCHER CMAKE_C_COMPILER)\n+  set(CMAKE_C_LINKER_LAUNCHER ${CMAKE_C_COMPILER_LAUNCHER})\n+endif()\n+\n+if(NOT DEFINED CMAKE_CXX_FLAGS_INIT)\n+  set(CMAKE_CXX_FLAGS_INIT \"@CXXFLAGS@\")\n+  set(CMAKE_OBJCXX_FLAGS_INIT \"@CXXFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT \"@CXXFLAGS_RELEASE@\")\n+  set(CMAKE_OBJCXX_FLAGS_RELWITHDEBINFO_INIT \"@CXXFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_CXX_FLAGS_DEBUG_INIT)\n+  set(CMAKE_CXX_FLAGS_DEBUG_INIT \"@CXXFLAGS_DEBUG@\")\n+  set(CMAKE_OBJCXX_FLAGS_DEBUG_INIT \"@CXXFLAGS_DEBUG@\")\n+endif()\n+\n+if(NOT DEFINED CMAKE_CXX_COMPILER)\n+  set(DEPENDS_CXX_COMPILER_WITH_LAUNCHER @CXX@)\n+  split_compiler_launcher(DEPENDS_CXX_COMPILER_WITH_LAUNCHER CMAKE_CXX_COMPILER_LAUNCHER CMAKE_CXX_COMPILER)\n+  set(CMAKE_CXX_LINKER_LAUNCHER ${CMAKE_CXX_COMPILER_LAUNCHER})\n+\n+  set(CMAKE_OBJCXX_COMPILER ${CMAKE_CXX_COMPILER})\n+  set(CMAKE_OBJCXX_COMPILER_LAUNCHER ${CMAKE_CXX_COMPILER_LAUNCHER})\n+  set(CMAKE_OBJCXX_LINKER_LAUNCHER ${CMAKE_CXX_LINKER_LAUNCHER})\n+endif()\n+\n+# The DEPENDS_COMPILE_DEFINITIONS* variables are to be treated as lists.\n+set(DEPENDS_COMPILE_DEFINITIONS @CPPFLAGS@)\n+set(DEPENDS_COMPILE_DEFINITIONS_RELWITHDEBINFO @CPPFLAGS_RELEASE@)\n+set(DEPENDS_COMPILE_DEFINITIONS_DEBUG @CPPFLAGS_DEBUG@)\n+\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_INIT \"@LDFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT \"@LDFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT \"@LDFLAGS_DEBUG@\")\n+endif()\n+\n+set(CMAKE_AR \"@AR@\")\n+set(CMAKE_RANLIB \"@RANLIB@\")\n+set(CMAKE_STRIP \"@STRIP@\")\n+set(CMAKE_OBJCOPY \"@OBJCOPY@\")\n+set(CMAKE_OBJDUMP \"@OBJDUMP@\")\n+\n+# Using our own built dependencies should not be\n+# affected by a potentially random environment.\n+set(CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH OFF)\n+\n+set(CMAKE_FIND_ROOT_PATH \"@depends_prefix@\")\n+set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n+set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\n+set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\n+set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)\n+set(QT_TRANSLATIONS_DIR \"@depends_prefix@/translations\")\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)",
      "path": "depends/toolchain.cmake.in",
      "position": 82,
      "original_position": 114,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703708721,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks",
      "created_at": "2024-08-05T10:54:10Z",
      "updated_at": "2024-08-05T10:54:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703933036",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703933036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703937142",
      "pull_request_review_id": 2218693507,
      "id": 1703937142,
      "node_id": "PRRC_kwDOABII585lkAR2",
      "diff_hunk": "@@ -0,0 +1,21 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+function(generate_header_from_json json_source_relpath)\n+  add_custom_command(\n+    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h\n+    COMMAND ${CMAKE_COMMAND} -DJSON_SOURCE_PATH=${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} -DHEADER_PATH=${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h -P ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake\n+    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake",
      "path": "cmake/module/GenerateHeaders.cmake",
      "position": null,
      "original_position": 9,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703721288,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, ACK f9b48505d6beb2c4e388e275d89bad77a14de2bb",
      "created_at": "2024-08-05T10:57:47Z",
      "updated_at": "2024-08-05T10:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703937142",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703937142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704182733",
      "pull_request_review_id": 2219112695,
      "id": 1704182733,
      "node_id": "PRRC_kwDOABII585lk8PN",
      "diff_hunk": "@@ -0,0 +1,246 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(CheckCXXSourceCompiles)\n+include(CheckCXXSymbolExists)\n+include(CheckIncludeFileCXX)\n+\n+# The following HAVE_{HEADER}_H variables go to the bitcoin-config.h header.\n+check_include_file_cxx(sys/prctl.h HAVE_SYS_PRCTL_H)\n+check_include_file_cxx(sys/resources.h HAVE_SYS_RESOURCES_H)\n+check_include_file_cxx(sys/vmmeter.h HAVE_SYS_VMMETER_H)\n+check_include_file_cxx(vm/vm_param.h HAVE_VM_VM_PARAM_H)\n+\n+check_cxx_symbol_exists(O_CLOEXEC \"fcntl.h\" HAVE_O_CLOEXEC)\n+\n+check_include_file_cxx(unistd.h HAVE_UNISTD_H)\n+if(HAVE_UNISTD_H)\n+  check_cxx_symbol_exists(fdatasync \"unistd.h\" HAVE_FDATASYNC)\n+  check_cxx_symbol_exists(fork \"unistd.h\" HAVE_DECL_FORK)\n+  check_cxx_symbol_exists(pipe2 \"unistd.h\" HAVE_DECL_PIPE2)\n+  check_cxx_symbol_exists(setsid \"unistd.h\" HAVE_DECL_SETSID)\n+endif()\n+\n+check_include_file_cxx(sys/types.h HAVE_SYS_TYPES_H)\n+check_include_file_cxx(ifaddrs.h HAVE_IFADDRS_H)\n+if(HAVE_SYS_TYPES_H AND HAVE_IFADDRS_H)\n+  include(TestAppendRequiredLibraries)\n+  test_append_socket_library(core_interface)\n+endif()\n+\n+include(TestAppendRequiredLibraries)\n+test_append_atomic_library(core_interface)\n+\n+check_cxx_symbol_exists(std::system \"cstdlib\" HAVE_STD_SYSTEM)\n+check_cxx_symbol_exists(::_wsystem \"stdlib.h\" HAVE__WSYSTEM)\n+if(HAVE_STD_SYSTEM OR HAVE__WSYSTEM)\n+  set(HAVE_SYSTEM 1)\n+endif()\n+\n+check_include_file_cxx(string.h HAVE_STRING_H)\n+if(HAVE_STRING_H)\n+  check_cxx_source_compiles(\"\n+    #include <string.h>\n+\n+    int main()\n+    {\n+      char buf[100];\n+      char* p{strerror_r(0, buf, sizeof buf)};\n+      (void)p;\n+    }\n+    \" STRERROR_R_CHAR_P\n+  )\n+endif()\n+\n+# Check for malloc_info (for memory statistics information in getmemoryinfo).\n+check_cxx_symbol_exists(malloc_info \"malloc.h\" HAVE_MALLOC_INFO)\n+\n+# Check for mallopt(M_ARENA_MAX) (to set glibc arenas).\n+check_cxx_source_compiles(\"\n+  #include <malloc.h>\n+\n+  int main()\n+  {\n+    mallopt(M_ARENA_MAX, 1);\n+  }\n+  \" HAVE_MALLOPT_ARENA_MAX\n+)\n+\n+# Check for posix_fallocate().\n+check_cxx_source_compiles(\"\n+  // same as in src/util/fs_helpers.cpp\n+  #ifdef __linux__\n+  #ifdef _POSIX_C_SOURCE\n+  #undef _POSIX_C_SOURCE\n+  #endif\n+  #define _POSIX_C_SOURCE 200112L\n+  #endif // __linux__\n+  #include <fcntl.h>\n+\n+  int main()\n+  {\n+    return posix_fallocate(0, 0, 0);\n+  }\n+  \" HAVE_POSIX_FALLOCATE\n+)\n+\n+# Check for strong getauxval() support in the system headers.\n+check_cxx_source_compiles(\"\n+  #include <sys/auxv.h>\n+\n+  int main()\n+  {\n+    getauxval(AT_HWCAP);\n+  }\n+  \" HAVE_STRONG_GETAUXVAL\n+)\n+\n+# Check for UNIX sockets.\n+check_cxx_source_compiles(\"\n+  #include <sys/socket.h>\n+  #include <sys/un.h>\n+\n+  int main()\n+  {\n+    struct sockaddr_un addr;\n+    addr.sun_family = AF_UNIX;\n+  }\n+  \" HAVE_SOCKADDR_UN\n+)\n+\n+# Check for different ways of gathering OS randomness:\n+# - Linux getrandom()\n+check_cxx_source_compiles(\"\n+  #include <sys/random.h>\n+\n+  int main()\n+  {\n+    getrandom(nullptr, 32, 0);\n+  }\n+  \" HAVE_GETRANDOM\n+)\n+\n+# - BSD getentropy()\n+check_cxx_source_compiles(\"\n+  #include <sys/random.h>\n+\n+  int main()\n+  {\n+    getentropy(nullptr, 32);\n+  }\n+  \" HAVE_GETENTROPY_RAND\n+)\n+\n+\n+# - BSD sysctl()\n+check_cxx_source_compiles(\"\n+  #include <sys/types.h>\n+  #include <sys/sysctl.h>\n+\n+  #ifdef __linux__\n+  #error Don't use sysctl on Linux, it's deprecated even when it works\n+  #endif\n+\n+  int main()\n+  {\n+    sysctl(nullptr, 2, nullptr, nullptr, nullptr, 0);\n+  }\n+  \" HAVE_SYSCTL\n+)\n+\n+# - BSD sysctl(KERN_ARND)\n+check_cxx_source_compiles(\"\n+  #include <sys/types.h>\n+  #include <sys/sysctl.h>\n+\n+  #ifdef __linux__\n+  #error Don't use sysctl on Linux, it's deprecated even when it works\n+  #endif\n+\n+  int main()\n+  {\n+    static int name[2] = {CTL_KERN, KERN_ARND};\n+    sysctl(name, 2, nullptr, nullptr, nullptr, 0);\n+  }\n+  \" HAVE_SYSCTL_ARND\n+)\n+\n+check_cxx_source_compiles(\"\n+  int foo(void) __attribute__((visibility(\\\"default\\\")));\n+  int main(){}\n+  \" HAVE_DEFAULT_VISIBILITY_ATTRIBUTE",
      "path": "cmake/introspection.cmake",
      "position": null,
      "original_position": 172,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shouldn't this be stopping the build if this check fails and `REDUCE_EXPORTS` is used (same as master)? Although, given they are unused, could be better to just remove entirely, rather than porting and not matching the behaviour. I'll open a PR.",
      "created_at": "2024-08-05T14:09:27Z",
      "updated_at": "2024-08-05T14:09:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1704182733",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704182733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704186023",
      "pull_request_review_id": 2219118263,
      "id": 1704186023,
      "node_id": "PRRC_kwDOABII585lk9Cn",
      "diff_hunk": "@@ -0,0 +1,246 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(CheckCXXSourceCompiles)\n+include(CheckCXXSymbolExists)\n+include(CheckIncludeFileCXX)\n+\n+# The following HAVE_{HEADER}_H variables go to the bitcoin-config.h header.\n+check_include_file_cxx(sys/prctl.h HAVE_SYS_PRCTL_H)\n+check_include_file_cxx(sys/resources.h HAVE_SYS_RESOURCES_H)\n+check_include_file_cxx(sys/vmmeter.h HAVE_SYS_VMMETER_H)\n+check_include_file_cxx(vm/vm_param.h HAVE_VM_VM_PARAM_H)\n+\n+check_cxx_symbol_exists(O_CLOEXEC \"fcntl.h\" HAVE_O_CLOEXEC)\n+\n+check_include_file_cxx(unistd.h HAVE_UNISTD_H)\n+if(HAVE_UNISTD_H)\n+  check_cxx_symbol_exists(fdatasync \"unistd.h\" HAVE_FDATASYNC)\n+  check_cxx_symbol_exists(fork \"unistd.h\" HAVE_DECL_FORK)\n+  check_cxx_symbol_exists(pipe2 \"unistd.h\" HAVE_DECL_PIPE2)\n+  check_cxx_symbol_exists(setsid \"unistd.h\" HAVE_DECL_SETSID)\n+endif()\n+\n+check_include_file_cxx(sys/types.h HAVE_SYS_TYPES_H)\n+check_include_file_cxx(ifaddrs.h HAVE_IFADDRS_H)\n+if(HAVE_SYS_TYPES_H AND HAVE_IFADDRS_H)\n+  include(TestAppendRequiredLibraries)\n+  test_append_socket_library(core_interface)\n+endif()\n+\n+include(TestAppendRequiredLibraries)\n+test_append_atomic_library(core_interface)\n+\n+check_cxx_symbol_exists(std::system \"cstdlib\" HAVE_STD_SYSTEM)\n+check_cxx_symbol_exists(::_wsystem \"stdlib.h\" HAVE__WSYSTEM)\n+if(HAVE_STD_SYSTEM OR HAVE__WSYSTEM)\n+  set(HAVE_SYSTEM 1)\n+endif()\n+\n+check_include_file_cxx(string.h HAVE_STRING_H)\n+if(HAVE_STRING_H)\n+  check_cxx_source_compiles(\"\n+    #include <string.h>\n+\n+    int main()\n+    {\n+      char buf[100];\n+      char* p{strerror_r(0, buf, sizeof buf)};\n+      (void)p;\n+    }\n+    \" STRERROR_R_CHAR_P\n+  )\n+endif()\n+\n+# Check for malloc_info (for memory statistics information in getmemoryinfo).\n+check_cxx_symbol_exists(malloc_info \"malloc.h\" HAVE_MALLOC_INFO)\n+\n+# Check for mallopt(M_ARENA_MAX) (to set glibc arenas).\n+check_cxx_source_compiles(\"\n+  #include <malloc.h>\n+\n+  int main()\n+  {\n+    mallopt(M_ARENA_MAX, 1);\n+  }\n+  \" HAVE_MALLOPT_ARENA_MAX\n+)\n+\n+# Check for posix_fallocate().\n+check_cxx_source_compiles(\"\n+  // same as in src/util/fs_helpers.cpp\n+  #ifdef __linux__\n+  #ifdef _POSIX_C_SOURCE\n+  #undef _POSIX_C_SOURCE\n+  #endif\n+  #define _POSIX_C_SOURCE 200112L\n+  #endif // __linux__\n+  #include <fcntl.h>\n+\n+  int main()\n+  {\n+    return posix_fallocate(0, 0, 0);\n+  }\n+  \" HAVE_POSIX_FALLOCATE\n+)\n+\n+# Check for strong getauxval() support in the system headers.\n+check_cxx_source_compiles(\"\n+  #include <sys/auxv.h>\n+\n+  int main()\n+  {\n+    getauxval(AT_HWCAP);\n+  }\n+  \" HAVE_STRONG_GETAUXVAL\n+)\n+\n+# Check for UNIX sockets.\n+check_cxx_source_compiles(\"\n+  #include <sys/socket.h>\n+  #include <sys/un.h>\n+\n+  int main()\n+  {\n+    struct sockaddr_un addr;\n+    addr.sun_family = AF_UNIX;\n+  }\n+  \" HAVE_SOCKADDR_UN\n+)\n+\n+# Check for different ways of gathering OS randomness:\n+# - Linux getrandom()\n+check_cxx_source_compiles(\"\n+  #include <sys/random.h>\n+\n+  int main()\n+  {\n+    getrandom(nullptr, 32, 0);\n+  }\n+  \" HAVE_GETRANDOM\n+)\n+\n+# - BSD getentropy()\n+check_cxx_source_compiles(\"\n+  #include <sys/random.h>\n+\n+  int main()\n+  {\n+    getentropy(nullptr, 32);\n+  }\n+  \" HAVE_GETENTROPY_RAND\n+)\n+\n+\n+# - BSD sysctl()\n+check_cxx_source_compiles(\"\n+  #include <sys/types.h>\n+  #include <sys/sysctl.h>\n+\n+  #ifdef __linux__\n+  #error Don't use sysctl on Linux, it's deprecated even when it works\n+  #endif\n+\n+  int main()\n+  {\n+    sysctl(nullptr, 2, nullptr, nullptr, nullptr, 0);\n+  }\n+  \" HAVE_SYSCTL\n+)\n+\n+# - BSD sysctl(KERN_ARND)\n+check_cxx_source_compiles(\"\n+  #include <sys/types.h>\n+  #include <sys/sysctl.h>\n+\n+  #ifdef __linux__\n+  #error Don't use sysctl on Linux, it's deprecated even when it works\n+  #endif\n+\n+  int main()\n+  {\n+    static int name[2] = {CTL_KERN, KERN_ARND};\n+    sysctl(name, 2, nullptr, nullptr, nullptr, 0);\n+  }\n+  \" HAVE_SYSCTL_ARND\n+)\n+\n+check_cxx_source_compiles(\"\n+  int foo(void) __attribute__((visibility(\\\"default\\\")));\n+  int main(){}\n+  \" HAVE_DEFAULT_VISIBILITY_ATTRIBUTE",
      "path": "cmake/introspection.cmake",
      "position": null,
      "original_position": 172,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1704182733,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See #30590.",
      "created_at": "2024-08-05T14:11:45Z",
      "updated_at": "2024-08-05T14:11:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1704186023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704186023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704343886",
      "pull_request_review_id": 2219380157,
      "id": 1704343886,
      "node_id": "PRRC_kwDOABII585lljlO",
      "diff_hunk": "@@ -0,0 +1,715 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)\n+\n+option(INSTALL_MAN \"Install man pages.\" ON)\n+\n+set(APPEND_CPPFLAGS \"\" CACHE STRING \"Preprocessor flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CFLAGS \"\" CACHE STRING \"C compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CXXFLAGS \"\" CACHE STRING \"(Objective) C++ compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_LDFLAGS \"\" CACHE STRING \"Linker flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+# Appending to this low-level rule variables is the only way to\n+# guarantee that the flags appear at the end of the command line.\n+string(APPEND CMAKE_CXX_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CXXFLAGS}\")\n+string(APPEND CMAKE_CXX_CREATE_SHARED_LIBRARY \" ${APPEND_LDFLAGS}\")\n+string(APPEND CMAKE_CXX_LINK_EXECUTABLE \" ${APPEND_LDFLAGS}\")\n+\n+set(configure_warnings)\n+\n+include(CheckPIESupported)\n+check_pie_supported(OUTPUT_VARIABLE check_pie_output LANGUAGES CXX)\n+if(CMAKE_CXX_LINK_PIE_SUPPORTED)\n+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+elseif(NOT WIN32)\n+  # The warning is superfluous for Windows.\n+  message(WARNING \"PIE is not supported at link time: ${check_pie_output}\")\n+  list(APPEND configure_warnings \"Position independent code disabled.\")\n+endif()\n+unset(check_pie_output)\n+\n+# The core_interface library aims to encapsulate common build flags.\n+# It is a usage requirement for all targets except for secp256k1, which\n+# gets its flags by other means.\n+add_library(core_interface INTERFACE)\n+add_library(core_interface_relwithdebinfo INTERFACE)\n+add_library(core_interface_debug INTERFACE)\n+target_link_libraries(core_interface INTERFACE\n+  $<$<CONFIG:RelWithDebInfo>:core_interface_relwithdebinfo>\n+  $<$<CONFIG:Debug>:core_interface_debug>\n+)\n+\n+if(BUILD_FOR_FUZZING)\n+  message(WARNING \"BUILD_FOR_FUZZING=ON will disable all other targets and force BUILD_FUZZ_BINARY=ON.\")\n+  set(BUILD_DAEMON OFF)\n+  set(BUILD_CLI OFF)\n+  set(BUILD_TX OFF)\n+  set(BUILD_UTIL OFF)\n+  set(BUILD_UTIL_CHAINSTATE OFF)\n+  set(BUILD_KERNEL_LIB OFF)\n+  set(BUILD_WALLET_TOOL OFF)\n+  set(BUILD_GUI OFF)\n+  set(ENABLE_EXTERNAL_SIGNER OFF)\n+  set(WITH_NATPMP OFF)\n+  set(WITH_MINIUPNPC OFF)\n+  set(WITH_ZMQ OFF)\n+  set(BUILD_TESTS OFF)\n+  set(BUILD_GUI_TESTS OFF)\n+  set(BUILD_BENCH OFF)\n+  set(BUILD_FUZZ_BINARY ON)\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    ABORT_ON_FAILED_ASSUME\n+  )\n+endif()\n+\n+include(TryAppendCXXFlags)\n+include(TryAppendLinkerFlag)\n+\n+if(WIN32)\n+  #[=[\n+  This build system supports two ways to build binaries for Windows.\n+\n+  1. Building on Windows using MSVC.\n+  Implementation notes:\n+  - /DWIN32 and /D_WINDOWS definitions are included into the CMAKE_CXX_FLAGS_INIT\n+    and CMAKE_CXX_FLAGS_INIT variables by default.\n+  - A run-time library is selected using the CMAKE_MSVC_RUNTIME_LIBRARY variable.\n+  - MSVC-specific options, for example, /Zc:__cplusplus, are additionally required.\n+\n+  2. Cross-compiling using MinGW.\n+  Implementation notes:\n+  - WIN32 and _WINDOWS definitions must be provided explicitly.\n+  - A run-time library must be specified explicitly using _MT definition.\n+  ]=]\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    _WIN32_WINNT=0x0601\n+    _WIN32_IE=0x0501\n+    WIN32_LEAN_AND_MEAN\n+    NOMINMAX\n+  )\n+\n+  if(MSVC)\n+    if(VCPKG_TARGET_TRIPLET MATCHES \"-static\")\n+      set(msvc_library_linkage \"\")\n+    else()\n+      set(msvc_library_linkage \"DLL\")\n+    endif()\n+    set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>${msvc_library_linkage}\")\n+    unset(msvc_library_linkage)\n+\n+    target_compile_definitions(core_interface INTERFACE\n+      _UNICODE;UNICODE\n+    )\n+    target_compile_options(core_interface INTERFACE\n+      /utf-8\n+      /Zc:preprocessor\n+      /Zc:__cplusplus\n+      /sdl\n+    )\n+    # Improve parallelism in MSBuild.\n+    # See: https://devblogs.microsoft.com/cppblog/improved-parallelism-in-msbuild/.\n+    list(APPEND CMAKE_VS_GLOBALS \"UseMultiToolTask=true\")\n+  endif()\n+\n+  if(MINGW)\n+    target_compile_definitions(core_interface INTERFACE\n+      WIN32\n+      _WINDOWS\n+      _MT\n+    )\n+    # Avoid the use of aligned vector instructions when building for Windows.\n+    # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54412.\n+    try_append_cxx_flags(\"-Wa,-muse-unaligned-vector-move\" TARGET core_interface SKIP_LINK)\n+    try_append_linker_flag(\"-static\" TARGET core_interface)\n+    # We require Windows 7 (NT 6.1) or later.\n+    try_append_linker_flag(\"-Wl,--major-subsystem-version,6\" TARGET core_interface)\n+    try_append_linker_flag(\"-Wl,--minor-subsystem-version,1\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+# Use 64-bit off_t on 32-bit Linux.\n+if (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n+  # Ensure 64-bit offsets are used for filesystem accesses for 32-bit compilation.\n+  target_compile_definitions(core_interface INTERFACE\n+    _FILE_OFFSET_BITS=64\n+  )\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+  target_compile_definitions(core_interface INTERFACE\n+    MAC_OSX\n+    OBJC_OLD_DISPATCH_PROTOTYPES=0\n+  )\n+  # These flags are specific to ld64, and may cause issues with other linkers.\n+  # For example: GNU ld will interpret -dead_strip as -de and then try and use\n+  # \"ad_strip\" as the symbol for the entry point.\n+  try_append_linker_flag(\"-Wl,-dead_strip\" TARGET core_interface)\n+  try_append_linker_flag(\"-Wl,-dead_strip_dylibs\" TARGET core_interface)\n+  if(CMAKE_HOST_APPLE)\n+    try_append_linker_flag(\"-Wl,-headerpad_max_install_names\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+set(THREADS_PREFER_PTHREAD_FLAG ON)\n+find_package(Threads REQUIRED)\n+target_link_libraries(core_interface INTERFACE\n+  Threads::Threads\n+)\n+\n+add_library(sanitize_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE sanitize_interface)\n+if(SANITIZERS)\n+  # First check if the compiler accepts flags. If an incompatible pair like\n+  # -fsanitize=address,thread is used here, this check will fail. This will also\n+  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  try_append_cxx_flags(\"-fsanitize=${SANITIZERS}\" TARGET sanitize_interface\n+    RESULT_VAR cxx_supports_sanitizers\n+    SKIP_LINK\n+  )\n+  if(NOT cxx_supports_sanitizers)\n+    message(FATAL_ERROR \"Compiler did not accept requested flags.\")\n+  endif()\n+\n+  # Some compilers (e.g. GCC) require additional libraries like libasan,\n+  # libtsan, libubsan, etc. Make sure linking still works with the sanitize\n+  # flag. This is a separate check so we can give a better error message when\n+  # the sanitize flags are supported by the compiler but the actual sanitizer\n+  # libs are missing.\n+  try_append_linker_flag(\"-fsanitize=${SANITIZERS}\" VAR SANITIZER_LDFLAGS\n+    SOURCE \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      __attribute__((weak)) // allow for libFuzzer linking\n+      int main() { return 0; }\n+    \"\n+    RESULT_VAR linker_supports_sanitizers\n+  )\n+  if(NOT linker_supports_sanitizers)\n+    message(FATAL_ERROR \"Linker did not accept requested flags, you are missing required libraries.\")\n+  endif()\n+endif()\n+target_link_options(sanitize_interface INTERFACE ${SANITIZER_LDFLAGS})\n+\n+if(BUILD_FUZZ_BINARY)\n+  include(CheckSourceCompilesAndLinks)\n+  check_cxx_source_links_with_flags(\"${SANITIZER_LDFLAGS}\" \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      // No main() function.\n+    \" FUZZ_BINARY_LINKS_WITHOUT_MAIN_FUNCTION\n+  )\n+endif()\n+\n+include(AddBoostIfNeeded)\n+add_boost_if_needed()\n+\n+if(BUILD_DAEMON OR BUILD_GUI OR BUILD_CLI OR BUILD_TESTS OR BUILD_BENCH OR BUILD_FUZZ_BINARY)\n+  find_package(Libevent 2.1.8 MODULE REQUIRED)\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/ccache.cmake)\n+\n+add_library(warn_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE warn_interface)\n+if(MSVC)\n+  try_append_cxx_flags(\"/W3\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4018\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4244\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4267\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4715\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4805\" TARGET warn_interface SKIP_LINK)\n+  target_compile_definitions(warn_interface INTERFACE\n+    _CRT_SECURE_NO_WARNINGS\n+    _SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+  )\n+else()\n+  try_append_cxx_flags(\"-Wall\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wextra\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wgnu\" TARGET warn_interface SKIP_LINK)\n+  # Some compilers will ignore -Wformat-security without -Wformat, so just combine the two here.\n+  try_append_cxx_flags(\"-Wformat -Wformat-security\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wvla\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wshadow-field\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wthread-safety\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wloop-analysis\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wredundant-decls\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunused-member-function\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdate-time\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wconditional-uninitialized\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-branches\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-cond\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wlogical-op\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Woverloaded-virtual\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wsuggest-override\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wimplicit-fallthrough\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunreachable-code\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdocumentation\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wself-assign\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wundef\" TARGET warn_interface SKIP_LINK)\n+\n+  # Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  # unknown options if any other warning is produced. Test the -Wfoo case, and\n+  # set the -Wno-foo case if it works.\n+  try_append_cxx_flags(\"-Wunused-parameter\" TARGET warn_interface SKIP_LINK\n+    IF_CHECK_PASSED \"-Wno-unused-parameter\"\n+  )\n+endif()\n+\n+include(ProcessConfigurations)\n+set_default_config(RelWithDebInfo)\n+\n+# Redefine/adjust per-configuration flags.\n+target_compile_definitions(core_interface_debug INTERFACE\n+  DEBUG\n+  DEBUG_LOCKORDER\n+  DEBUG_LOCKCONTENTION\n+  RPC_DOC_CHECK\n+  ABORT_ON_FAILED_ASSUME\n+)\n+# We leave assertions on.\n+if(MSVC)\n+  remove_cxx_flag_from_all_configs(/DNDEBUG)\n+else()\n+  remove_cxx_flag_from_all_configs(-DNDEBUG)\n+\n+  # Adjust flags used by the CXX compiler during RELEASE builds.\n+  # Prefer -O2 optimization level. (-O3 is CMake's default for Release for many compilers.)\n+  replace_cxx_flag_in_config(Release -O3 -O2)\n+\n+  are_flags_overridden(CMAKE_CXX_FLAGS_DEBUG cxx_flags_debug_overridden)\n+  if(NOT cxx_flags_debug_overridden)\n+    # Redefine flags used by the CXX compiler during DEBUG builds.\n+    try_append_cxx_flags(\"-g3\" RESULT_VAR compiler_supports_g3)\n+    if(compiler_supports_g3)\n+      replace_cxx_flag_in_config(Debug -g -g3)\n+    endif()\n+    unset(compiler_supports_g3)\n+\n+    try_append_cxx_flags(\"-ftrapv\" RESULT_VAR compiler_supports_ftrapv)\n+    if(compiler_supports_ftrapv)\n+      string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-ftrapv \")\n+    endif()\n+    unset(compiler_supports_ftrapv)\n+\n+    string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-O0 \")\n+\n+    set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG}\"\n+      CACHE STRING\n+      \"Flags used by the CXX compiler during DEBUG builds.\"\n+      FORCE\n+    )\n+  endif()\n+  unset(cxx_flags_debug_overridden)\n+endif()\n+\n+set(CMAKE_CXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_OBJCXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\")\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\")\n+get_property(is_multi_config GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)\n+if(is_multi_config)\n+  if(NOT \"Coverage\" IN_LIST CMAKE_CONFIGURATION_TYPES)\n+    list(APPEND CMAKE_CONFIGURATION_TYPES Coverage)\n+  endif()\n+endif()\n+\n+configure_file(cmake/script/Coverage.cmake Coverage.cmake COPYONLY)\n+configure_file(cmake/script/CoverageFuzz.cmake CoverageFuzz.cmake COPYONLY)\n+configure_file(cmake/script/CoverageInclude.cmake.in CoverageInclude.cmake @ONLY)\n+configure_file(contrib/filter-lcov.py filter-lcov.py COPYONLY)\n+\n+# Don't allow extended (non-ASCII) symbols in identifiers. This is easier for code review.\n+try_append_cxx_flags(\"-fno-extended-identifiers\" TARGET core_interface SKIP_LINK)\n+\n+# Currently all versions of gcc are subject to a class of bugs, see the\n+# gccbug_90348 test case (only reproduces on GCC 11 and earlier) and\n+# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111843. To work around that, set\n+# -fstack-reuse=none for all gcc builds. (Only gcc understands this flag).\n+try_append_cxx_flags(\"-fstack-reuse=none\" TARGET core_interface)\n+\n+if(ENABLE_HARDENING)\n+  add_library(hardening_interface INTERFACE)\n+  target_link_libraries(core_interface INTERFACE hardening_interface)\n+  if(MSVC)\n+    try_append_linker_flag(\"/DYNAMICBASE\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/HIGHENTROPYVA\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/NXCOMPAT\" TARGET hardening_interface)\n+  else()\n+    try_append_cxx_flags(\"-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3\"\n+      RESULT_VAR cxx_supports_fortify_source\n+    )\n+    if(cxx_supports_fortify_source)\n+      # When the build configuration is Debug, all optimizations are disabled.\n+      # However, _FORTIFY_SOURCE requires that there is some level of optimization,\n+      # otherwise it does nothing and just creates a compiler warning.\n+      # Since _FORTIFY_SOURCE is a no-op without optimizations, do not enable it\n+      # when the build configuration is Debug.\n+      target_compile_options(hardening_interface INTERFACE\n+        $<$<NOT:$<CONFIG:Debug>>:-U_FORTIFY_SOURCE>\n+        $<$<NOT:$<CONFIG:Debug>>:-D_FORTIFY_SOURCE=3>\n+      )\n+    endif()\n+    unset(cxx_supports_fortify_source)\n+\n+    try_append_cxx_flags(\"-Wstack-protector\" TARGET hardening_interface SKIP_LINK)\n+    try_append_cxx_flags(\"-fstack-protector-all\" TARGET hardening_interface)\n+    try_append_cxx_flags(\"-fcf-protection=full\" TARGET hardening_interface)\n+\n+    if(MINGW)\n+      # stack-clash-protection doesn't compile with GCC 10 and earlier.\n+      # In any case, it is a no-op for Windows.\n+      # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458 for more details.\n+    else()\n+      try_append_cxx_flags(\"-fstack-clash-protection\" TARGET hardening_interface)\n+    endif()\n+\n+    if(CMAKE_SYSTEM_PROCESSOR STREQUAL \"aarch64\" OR CMAKE_SYSTEM_PROCESSOR STREQUAL \"arm64\")\n+      try_append_cxx_flags(\"-mbranch-protection=bti\" TARGET hardening_interface SKIP_LINK)\n+    endif()\n+\n+    try_append_linker_flag(\"-Wl,--enable-reloc-section\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--dynamicbase\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--nxcompat\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--high-entropy-va\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,relro\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,now\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,separate-code\" TARGET hardening_interface)\n+    if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+      try_append_linker_flag(\"-Wl,-fixup_chains\" TARGET hardening_interface)\n+    endif()\n+  endif()\n+endif()\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 587,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703899727,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, I should've caught this in review. I wonder why we don't use this in master? IIRC there was some issue with boost visibility years ago that wouldn't be relevant anymore. Wonder if that was it?",
      "created_at": "2024-08-05T16:02:42Z",
      "updated_at": "2024-08-05T16:02:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1704343886",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704343886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 587,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704345827",
      "pull_request_review_id": 2219383263,
      "id": 1704345827,
      "node_id": "PRRC_kwDOABII585llkDj",
      "diff_hunk": "@@ -0,0 +1,715 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)\n+\n+option(INSTALL_MAN \"Install man pages.\" ON)\n+\n+set(APPEND_CPPFLAGS \"\" CACHE STRING \"Preprocessor flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CFLAGS \"\" CACHE STRING \"C compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CXXFLAGS \"\" CACHE STRING \"(Objective) C++ compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_LDFLAGS \"\" CACHE STRING \"Linker flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+# Appending to this low-level rule variables is the only way to\n+# guarantee that the flags appear at the end of the command line.\n+string(APPEND CMAKE_CXX_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CXXFLAGS}\")\n+string(APPEND CMAKE_CXX_CREATE_SHARED_LIBRARY \" ${APPEND_LDFLAGS}\")\n+string(APPEND CMAKE_CXX_LINK_EXECUTABLE \" ${APPEND_LDFLAGS}\")\n+\n+set(configure_warnings)\n+\n+include(CheckPIESupported)\n+check_pie_supported(OUTPUT_VARIABLE check_pie_output LANGUAGES CXX)\n+if(CMAKE_CXX_LINK_PIE_SUPPORTED)\n+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+elseif(NOT WIN32)\n+  # The warning is superfluous for Windows.\n+  message(WARNING \"PIE is not supported at link time: ${check_pie_output}\")\n+  list(APPEND configure_warnings \"Position independent code disabled.\")\n+endif()\n+unset(check_pie_output)\n+\n+# The core_interface library aims to encapsulate common build flags.\n+# It is a usage requirement for all targets except for secp256k1, which\n+# gets its flags by other means.\n+add_library(core_interface INTERFACE)\n+add_library(core_interface_relwithdebinfo INTERFACE)\n+add_library(core_interface_debug INTERFACE)\n+target_link_libraries(core_interface INTERFACE\n+  $<$<CONFIG:RelWithDebInfo>:core_interface_relwithdebinfo>\n+  $<$<CONFIG:Debug>:core_interface_debug>\n+)\n+\n+if(BUILD_FOR_FUZZING)\n+  message(WARNING \"BUILD_FOR_FUZZING=ON will disable all other targets and force BUILD_FUZZ_BINARY=ON.\")\n+  set(BUILD_DAEMON OFF)\n+  set(BUILD_CLI OFF)\n+  set(BUILD_TX OFF)\n+  set(BUILD_UTIL OFF)\n+  set(BUILD_UTIL_CHAINSTATE OFF)\n+  set(BUILD_KERNEL_LIB OFF)\n+  set(BUILD_WALLET_TOOL OFF)\n+  set(BUILD_GUI OFF)\n+  set(ENABLE_EXTERNAL_SIGNER OFF)\n+  set(WITH_NATPMP OFF)\n+  set(WITH_MINIUPNPC OFF)\n+  set(WITH_ZMQ OFF)\n+  set(BUILD_TESTS OFF)\n+  set(BUILD_GUI_TESTS OFF)\n+  set(BUILD_BENCH OFF)\n+  set(BUILD_FUZZ_BINARY ON)\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    ABORT_ON_FAILED_ASSUME\n+  )\n+endif()\n+\n+include(TryAppendCXXFlags)\n+include(TryAppendLinkerFlag)\n+\n+if(WIN32)\n+  #[=[\n+  This build system supports two ways to build binaries for Windows.\n+\n+  1. Building on Windows using MSVC.\n+  Implementation notes:\n+  - /DWIN32 and /D_WINDOWS definitions are included into the CMAKE_CXX_FLAGS_INIT\n+    and CMAKE_CXX_FLAGS_INIT variables by default.\n+  - A run-time library is selected using the CMAKE_MSVC_RUNTIME_LIBRARY variable.\n+  - MSVC-specific options, for example, /Zc:__cplusplus, are additionally required.\n+\n+  2. Cross-compiling using MinGW.\n+  Implementation notes:\n+  - WIN32 and _WINDOWS definitions must be provided explicitly.\n+  - A run-time library must be specified explicitly using _MT definition.\n+  ]=]\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    _WIN32_WINNT=0x0601\n+    _WIN32_IE=0x0501\n+    WIN32_LEAN_AND_MEAN\n+    NOMINMAX\n+  )\n+\n+  if(MSVC)\n+    if(VCPKG_TARGET_TRIPLET MATCHES \"-static\")\n+      set(msvc_library_linkage \"\")\n+    else()\n+      set(msvc_library_linkage \"DLL\")\n+    endif()\n+    set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>${msvc_library_linkage}\")\n+    unset(msvc_library_linkage)\n+\n+    target_compile_definitions(core_interface INTERFACE\n+      _UNICODE;UNICODE\n+    )\n+    target_compile_options(core_interface INTERFACE\n+      /utf-8\n+      /Zc:preprocessor\n+      /Zc:__cplusplus\n+      /sdl\n+    )\n+    # Improve parallelism in MSBuild.\n+    # See: https://devblogs.microsoft.com/cppblog/improved-parallelism-in-msbuild/.\n+    list(APPEND CMAKE_VS_GLOBALS \"UseMultiToolTask=true\")\n+  endif()\n+\n+  if(MINGW)\n+    target_compile_definitions(core_interface INTERFACE\n+      WIN32\n+      _WINDOWS\n+      _MT\n+    )\n+    # Avoid the use of aligned vector instructions when building for Windows.\n+    # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54412.\n+    try_append_cxx_flags(\"-Wa,-muse-unaligned-vector-move\" TARGET core_interface SKIP_LINK)\n+    try_append_linker_flag(\"-static\" TARGET core_interface)\n+    # We require Windows 7 (NT 6.1) or later.\n+    try_append_linker_flag(\"-Wl,--major-subsystem-version,6\" TARGET core_interface)\n+    try_append_linker_flag(\"-Wl,--minor-subsystem-version,1\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+# Use 64-bit off_t on 32-bit Linux.\n+if (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n+  # Ensure 64-bit offsets are used for filesystem accesses for 32-bit compilation.\n+  target_compile_definitions(core_interface INTERFACE\n+    _FILE_OFFSET_BITS=64\n+  )\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+  target_compile_definitions(core_interface INTERFACE\n+    MAC_OSX\n+    OBJC_OLD_DISPATCH_PROTOTYPES=0\n+  )\n+  # These flags are specific to ld64, and may cause issues with other linkers.\n+  # For example: GNU ld will interpret -dead_strip as -de and then try and use\n+  # \"ad_strip\" as the symbol for the entry point.\n+  try_append_linker_flag(\"-Wl,-dead_strip\" TARGET core_interface)\n+  try_append_linker_flag(\"-Wl,-dead_strip_dylibs\" TARGET core_interface)\n+  if(CMAKE_HOST_APPLE)\n+    try_append_linker_flag(\"-Wl,-headerpad_max_install_names\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+set(THREADS_PREFER_PTHREAD_FLAG ON)\n+find_package(Threads REQUIRED)\n+target_link_libraries(core_interface INTERFACE\n+  Threads::Threads\n+)\n+\n+add_library(sanitize_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE sanitize_interface)\n+if(SANITIZERS)\n+  # First check if the compiler accepts flags. If an incompatible pair like\n+  # -fsanitize=address,thread is used here, this check will fail. This will also\n+  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  try_append_cxx_flags(\"-fsanitize=${SANITIZERS}\" TARGET sanitize_interface\n+    RESULT_VAR cxx_supports_sanitizers\n+    SKIP_LINK\n+  )\n+  if(NOT cxx_supports_sanitizers)\n+    message(FATAL_ERROR \"Compiler did not accept requested flags.\")\n+  endif()\n+\n+  # Some compilers (e.g. GCC) require additional libraries like libasan,\n+  # libtsan, libubsan, etc. Make sure linking still works with the sanitize\n+  # flag. This is a separate check so we can give a better error message when\n+  # the sanitize flags are supported by the compiler but the actual sanitizer\n+  # libs are missing.\n+  try_append_linker_flag(\"-fsanitize=${SANITIZERS}\" VAR SANITIZER_LDFLAGS\n+    SOURCE \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      __attribute__((weak)) // allow for libFuzzer linking\n+      int main() { return 0; }\n+    \"\n+    RESULT_VAR linker_supports_sanitizers\n+  )\n+  if(NOT linker_supports_sanitizers)\n+    message(FATAL_ERROR \"Linker did not accept requested flags, you are missing required libraries.\")\n+  endif()\n+endif()\n+target_link_options(sanitize_interface INTERFACE ${SANITIZER_LDFLAGS})\n+\n+if(BUILD_FUZZ_BINARY)\n+  include(CheckSourceCompilesAndLinks)\n+  check_cxx_source_links_with_flags(\"${SANITIZER_LDFLAGS}\" \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      // No main() function.\n+    \" FUZZ_BINARY_LINKS_WITHOUT_MAIN_FUNCTION\n+  )\n+endif()\n+\n+include(AddBoostIfNeeded)\n+add_boost_if_needed()\n+\n+if(BUILD_DAEMON OR BUILD_GUI OR BUILD_CLI OR BUILD_TESTS OR BUILD_BENCH OR BUILD_FUZZ_BINARY)\n+  find_package(Libevent 2.1.8 MODULE REQUIRED)\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/ccache.cmake)\n+\n+add_library(warn_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE warn_interface)\n+if(MSVC)\n+  try_append_cxx_flags(\"/W3\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4018\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4244\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4267\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4715\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4805\" TARGET warn_interface SKIP_LINK)\n+  target_compile_definitions(warn_interface INTERFACE\n+    _CRT_SECURE_NO_WARNINGS\n+    _SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+  )\n+else()\n+  try_append_cxx_flags(\"-Wall\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wextra\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wgnu\" TARGET warn_interface SKIP_LINK)\n+  # Some compilers will ignore -Wformat-security without -Wformat, so just combine the two here.\n+  try_append_cxx_flags(\"-Wformat -Wformat-security\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wvla\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wshadow-field\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wthread-safety\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wloop-analysis\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wredundant-decls\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunused-member-function\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdate-time\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wconditional-uninitialized\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-branches\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-cond\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wlogical-op\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Woverloaded-virtual\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wsuggest-override\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wimplicit-fallthrough\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunreachable-code\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdocumentation\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wself-assign\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wundef\" TARGET warn_interface SKIP_LINK)\n+\n+  # Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  # unknown options if any other warning is produced. Test the -Wfoo case, and\n+  # set the -Wno-foo case if it works.\n+  try_append_cxx_flags(\"-Wunused-parameter\" TARGET warn_interface SKIP_LINK\n+    IF_CHECK_PASSED \"-Wno-unused-parameter\"\n+  )\n+endif()\n+\n+include(ProcessConfigurations)\n+set_default_config(RelWithDebInfo)\n+\n+# Redefine/adjust per-configuration flags.\n+target_compile_definitions(core_interface_debug INTERFACE\n+  DEBUG\n+  DEBUG_LOCKORDER\n+  DEBUG_LOCKCONTENTION\n+  RPC_DOC_CHECK\n+  ABORT_ON_FAILED_ASSUME\n+)\n+# We leave assertions on.\n+if(MSVC)\n+  remove_cxx_flag_from_all_configs(/DNDEBUG)\n+else()\n+  remove_cxx_flag_from_all_configs(-DNDEBUG)\n+\n+  # Adjust flags used by the CXX compiler during RELEASE builds.\n+  # Prefer -O2 optimization level. (-O3 is CMake's default for Release for many compilers.)\n+  replace_cxx_flag_in_config(Release -O3 -O2)\n+\n+  are_flags_overridden(CMAKE_CXX_FLAGS_DEBUG cxx_flags_debug_overridden)\n+  if(NOT cxx_flags_debug_overridden)\n+    # Redefine flags used by the CXX compiler during DEBUG builds.\n+    try_append_cxx_flags(\"-g3\" RESULT_VAR compiler_supports_g3)\n+    if(compiler_supports_g3)\n+      replace_cxx_flag_in_config(Debug -g -g3)\n+    endif()\n+    unset(compiler_supports_g3)\n+\n+    try_append_cxx_flags(\"-ftrapv\" RESULT_VAR compiler_supports_ftrapv)\n+    if(compiler_supports_ftrapv)\n+      string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-ftrapv \")\n+    endif()\n+    unset(compiler_supports_ftrapv)\n+\n+    string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-O0 \")\n+\n+    set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG}\"\n+      CACHE STRING\n+      \"Flags used by the CXX compiler during DEBUG builds.\"\n+      FORCE\n+    )\n+  endif()\n+  unset(cxx_flags_debug_overridden)\n+endif()\n+\n+set(CMAKE_CXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_OBJCXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\")\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\")\n+get_property(is_multi_config GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)\n+if(is_multi_config)\n+  if(NOT \"Coverage\" IN_LIST CMAKE_CONFIGURATION_TYPES)\n+    list(APPEND CMAKE_CONFIGURATION_TYPES Coverage)\n+  endif()\n+endif()\n+\n+configure_file(cmake/script/Coverage.cmake Coverage.cmake COPYONLY)\n+configure_file(cmake/script/CoverageFuzz.cmake CoverageFuzz.cmake COPYONLY)\n+configure_file(cmake/script/CoverageInclude.cmake.in CoverageInclude.cmake @ONLY)\n+configure_file(contrib/filter-lcov.py filter-lcov.py COPYONLY)\n+\n+# Don't allow extended (non-ASCII) symbols in identifiers. This is easier for code review.\n+try_append_cxx_flags(\"-fno-extended-identifiers\" TARGET core_interface SKIP_LINK)\n+\n+# Currently all versions of gcc are subject to a class of bugs, see the\n+# gccbug_90348 test case (only reproduces on GCC 11 and earlier) and\n+# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111843. To work around that, set\n+# -fstack-reuse=none for all gcc builds. (Only gcc understands this flag).\n+try_append_cxx_flags(\"-fstack-reuse=none\" TARGET core_interface)\n+\n+if(ENABLE_HARDENING)\n+  add_library(hardening_interface INTERFACE)\n+  target_link_libraries(core_interface INTERFACE hardening_interface)\n+  if(MSVC)\n+    try_append_linker_flag(\"/DYNAMICBASE\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/HIGHENTROPYVA\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/NXCOMPAT\" TARGET hardening_interface)\n+  else()\n+    try_append_cxx_flags(\"-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3\"\n+      RESULT_VAR cxx_supports_fortify_source\n+    )\n+    if(cxx_supports_fortify_source)\n+      # When the build configuration is Debug, all optimizations are disabled.\n+      # However, _FORTIFY_SOURCE requires that there is some level of optimization,\n+      # otherwise it does nothing and just creates a compiler warning.\n+      # Since _FORTIFY_SOURCE is a no-op without optimizations, do not enable it\n+      # when the build configuration is Debug.\n+      target_compile_options(hardening_interface INTERFACE\n+        $<$<NOT:$<CONFIG:Debug>>:-U_FORTIFY_SOURCE>\n+        $<$<NOT:$<CONFIG:Debug>>:-D_FORTIFY_SOURCE=3>\n+      )\n+    endif()\n+    unset(cxx_supports_fortify_source)\n+\n+    try_append_cxx_flags(\"-Wstack-protector\" TARGET hardening_interface SKIP_LINK)\n+    try_append_cxx_flags(\"-fstack-protector-all\" TARGET hardening_interface)\n+    try_append_cxx_flags(\"-fcf-protection=full\" TARGET hardening_interface)\n+\n+    if(MINGW)\n+      # stack-clash-protection doesn't compile with GCC 10 and earlier.\n+      # In any case, it is a no-op for Windows.\n+      # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458 for more details.\n+    else()\n+      try_append_cxx_flags(\"-fstack-clash-protection\" TARGET hardening_interface)\n+    endif()\n+\n+    if(CMAKE_SYSTEM_PROCESSOR STREQUAL \"aarch64\" OR CMAKE_SYSTEM_PROCESSOR STREQUAL \"arm64\")\n+      try_append_cxx_flags(\"-mbranch-protection=bti\" TARGET hardening_interface SKIP_LINK)\n+    endif()\n+\n+    try_append_linker_flag(\"-Wl,--enable-reloc-section\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--dynamicbase\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--nxcompat\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--high-entropy-va\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,relro\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,now\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,separate-code\" TARGET hardening_interface)\n+    if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+      try_append_linker_flag(\"-Wl,-fixup_chains\" TARGET hardening_interface)\n+    endif()\n+  endif()\n+endif()\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 587,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703899727,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Wonder if that was it?\r\n\r\nI don't [remember](https://github.com/hebasto/bitcoin/pull/303#issuecomment-2269145394).",
      "created_at": "2024-08-05T16:04:19Z",
      "updated_at": "2024-08-05T16:04:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1704345827",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704345827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 587,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704385992",
      "pull_request_review_id": 2219450044,
      "id": 1704385992,
      "node_id": "PRRC_kwDOABII585llt3I",
      "diff_hunk": "@@ -0,0 +1,715 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)\n+\n+option(INSTALL_MAN \"Install man pages.\" ON)\n+\n+set(APPEND_CPPFLAGS \"\" CACHE STRING \"Preprocessor flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CFLAGS \"\" CACHE STRING \"C compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CXXFLAGS \"\" CACHE STRING \"(Objective) C++ compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_LDFLAGS \"\" CACHE STRING \"Linker flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+# Appending to this low-level rule variables is the only way to\n+# guarantee that the flags appear at the end of the command line.\n+string(APPEND CMAKE_CXX_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CXXFLAGS}\")\n+string(APPEND CMAKE_CXX_CREATE_SHARED_LIBRARY \" ${APPEND_LDFLAGS}\")\n+string(APPEND CMAKE_CXX_LINK_EXECUTABLE \" ${APPEND_LDFLAGS}\")\n+\n+set(configure_warnings)\n+\n+include(CheckPIESupported)\n+check_pie_supported(OUTPUT_VARIABLE check_pie_output LANGUAGES CXX)\n+if(CMAKE_CXX_LINK_PIE_SUPPORTED)\n+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+elseif(NOT WIN32)\n+  # The warning is superfluous for Windows.\n+  message(WARNING \"PIE is not supported at link time: ${check_pie_output}\")\n+  list(APPEND configure_warnings \"Position independent code disabled.\")\n+endif()\n+unset(check_pie_output)\n+\n+# The core_interface library aims to encapsulate common build flags.\n+# It is a usage requirement for all targets except for secp256k1, which\n+# gets its flags by other means.\n+add_library(core_interface INTERFACE)\n+add_library(core_interface_relwithdebinfo INTERFACE)\n+add_library(core_interface_debug INTERFACE)\n+target_link_libraries(core_interface INTERFACE\n+  $<$<CONFIG:RelWithDebInfo>:core_interface_relwithdebinfo>\n+  $<$<CONFIG:Debug>:core_interface_debug>\n+)\n+\n+if(BUILD_FOR_FUZZING)\n+  message(WARNING \"BUILD_FOR_FUZZING=ON will disable all other targets and force BUILD_FUZZ_BINARY=ON.\")\n+  set(BUILD_DAEMON OFF)\n+  set(BUILD_CLI OFF)\n+  set(BUILD_TX OFF)\n+  set(BUILD_UTIL OFF)\n+  set(BUILD_UTIL_CHAINSTATE OFF)\n+  set(BUILD_KERNEL_LIB OFF)\n+  set(BUILD_WALLET_TOOL OFF)\n+  set(BUILD_GUI OFF)\n+  set(ENABLE_EXTERNAL_SIGNER OFF)\n+  set(WITH_NATPMP OFF)\n+  set(WITH_MINIUPNPC OFF)\n+  set(WITH_ZMQ OFF)\n+  set(BUILD_TESTS OFF)\n+  set(BUILD_GUI_TESTS OFF)\n+  set(BUILD_BENCH OFF)\n+  set(BUILD_FUZZ_BINARY ON)\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    ABORT_ON_FAILED_ASSUME\n+  )\n+endif()\n+\n+include(TryAppendCXXFlags)\n+include(TryAppendLinkerFlag)\n+\n+if(WIN32)\n+  #[=[\n+  This build system supports two ways to build binaries for Windows.\n+\n+  1. Building on Windows using MSVC.\n+  Implementation notes:\n+  - /DWIN32 and /D_WINDOWS definitions are included into the CMAKE_CXX_FLAGS_INIT\n+    and CMAKE_CXX_FLAGS_INIT variables by default.\n+  - A run-time library is selected using the CMAKE_MSVC_RUNTIME_LIBRARY variable.\n+  - MSVC-specific options, for example, /Zc:__cplusplus, are additionally required.\n+\n+  2. Cross-compiling using MinGW.\n+  Implementation notes:\n+  - WIN32 and _WINDOWS definitions must be provided explicitly.\n+  - A run-time library must be specified explicitly using _MT definition.\n+  ]=]\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    _WIN32_WINNT=0x0601\n+    _WIN32_IE=0x0501\n+    WIN32_LEAN_AND_MEAN\n+    NOMINMAX\n+  )\n+\n+  if(MSVC)\n+    if(VCPKG_TARGET_TRIPLET MATCHES \"-static\")\n+      set(msvc_library_linkage \"\")\n+    else()\n+      set(msvc_library_linkage \"DLL\")\n+    endif()\n+    set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>${msvc_library_linkage}\")\n+    unset(msvc_library_linkage)\n+\n+    target_compile_definitions(core_interface INTERFACE\n+      _UNICODE;UNICODE\n+    )\n+    target_compile_options(core_interface INTERFACE\n+      /utf-8\n+      /Zc:preprocessor\n+      /Zc:__cplusplus\n+      /sdl\n+    )\n+    # Improve parallelism in MSBuild.\n+    # See: https://devblogs.microsoft.com/cppblog/improved-parallelism-in-msbuild/.\n+    list(APPEND CMAKE_VS_GLOBALS \"UseMultiToolTask=true\")\n+  endif()\n+\n+  if(MINGW)\n+    target_compile_definitions(core_interface INTERFACE\n+      WIN32\n+      _WINDOWS\n+      _MT\n+    )\n+    # Avoid the use of aligned vector instructions when building for Windows.\n+    # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54412.\n+    try_append_cxx_flags(\"-Wa,-muse-unaligned-vector-move\" TARGET core_interface SKIP_LINK)\n+    try_append_linker_flag(\"-static\" TARGET core_interface)\n+    # We require Windows 7 (NT 6.1) or later.\n+    try_append_linker_flag(\"-Wl,--major-subsystem-version,6\" TARGET core_interface)\n+    try_append_linker_flag(\"-Wl,--minor-subsystem-version,1\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+# Use 64-bit off_t on 32-bit Linux.\n+if (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n+  # Ensure 64-bit offsets are used for filesystem accesses for 32-bit compilation.\n+  target_compile_definitions(core_interface INTERFACE\n+    _FILE_OFFSET_BITS=64",
      "path": "CMakeLists.txt",
      "position": 334,
      "original_position": 332,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like `AC_SYS_LARGEFILE` / `_LARGE_FILES` was never ported?",
      "created_at": "2024-08-05T16:41:51Z",
      "updated_at": "2024-08-05T16:41:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1704385992",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704385992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 334,
      "original_line": 334,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704600759",
      "pull_request_review_id": 2219811588,
      "id": 1704600759,
      "node_id": "PRRC_kwDOABII585lmiS3",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)",
      "path": "CMakeLists.txt",
      "position": 198,
      "original_position": 198,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Previously benchmarks were [enabled by default](https://github.com/bitcoin/bitcoin/blob/master/configure.ac#L180), right? (Edit, just noticed [previous comments](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2251018894) asking the same)\r\n\r\nIs this why the build is so much faster now?\r\n\r\nI can run the benchmarks from the command line, but the IDE is complaining they're not part of the project. Is that expected?\r\n<img src=\"https://github.com/user-attachments/assets/e4f0d837-bc70-48f6-8a75-e24b45cdeb42\">\r\n\r\nSame is true for the fuzz tests - was hoping I could run them from the IDE now.\r\n\r\nEdit: I see now that turning off bench was deliberate, my questions remain only about the IDE not detecting the benchmarks and fuzz even after I enable them, and running FUZZ tests from IDE, like we can run and debug other tests.",
      "created_at": "2024-08-05T20:29:57Z",
      "updated_at": "2024-08-06T07:09:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1704600759",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704600759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 198,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705010534",
      "pull_request_review_id": 2220439371,
      "id": 1705010534,
      "node_id": "PRRC_kwDOABII585loGVm",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake",
      "path": "CMakeLists.txt",
      "position": 6,
      "original_position": 6,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "if this refers to the docker base, we could update it to:\r\n```suggestion\r\n# Ubuntu 24.04 LTS Noble Numbat, https://wiki.ubuntu.com/Releases, EOSS in June 2029, EOL in April 2036:\r\n#  - CMake 3.28.3, https://packages.ubuntu.com/noble/cmake\r\n```",
      "created_at": "2024-08-06T06:58:21Z",
      "updated_at": "2024-08-06T06:58:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705010534",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705010534"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 5,
      "original_start_line": 5,
      "start_side": "RIGHT",
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705011162",
      "pull_request_review_id": 2220440443,
      "id": 1705011162,
      "node_id": "PRRC_kwDOABII585loGfa",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)",
      "path": "CMakeLists.txt",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "if we update the above, this can likely also be bumped, right?",
      "created_at": "2024-08-06T06:58:58Z",
      "updated_at": "2024-08-06T06:58:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705011162",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705011162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705095354",
      "pull_request_review_id": 2220577618,
      "id": 1705095354,
      "node_id": "PRRC_kwDOABII585lobC6",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake",
      "path": "CMakeLists.txt",
      "position": 6,
      "original_position": 6,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1705010534,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> if this refers to the docker base...\r\n\r\nIt refers to a system that users are using to build Bitcoin Core. In most cases, it will be their regular machines. However, building Bitcoin Core within a Docker container is also supported.\r\n\r\nUbuntu and CentOS are mentioned here as mainstream DEB and RPM-based distros. However, the new CMake-based build system is designed to work out-of-the-box on a wide range of other platforms.",
      "created_at": "2024-08-06T08:05:38Z",
      "updated_at": "2024-08-06T08:05:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705095354",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705095354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 5,
      "original_start_line": 5,
      "start_side": "RIGHT",
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705103582",
      "pull_request_review_id": 2220591482,
      "id": 1705103582,
      "node_id": "PRRC_kwDOABII585lodDe",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)",
      "path": "CMakeLists.txt",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1705011162,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We still want to allow the building of Bitcoin Core on Ubuntu 22.04 using the [`cmake`](https://packages.ubuntu.com/jammy/cmake) package available in the system repository.\r\n\r\nFor reference, the last time the CMake minimum required version was updated was in https://github.com/hebasto/bitcoin/pull/123.",
      "created_at": "2024-08-06T08:11:54Z",
      "updated_at": "2024-08-06T08:11:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705103582",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705103582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705137899",
      "pull_request_review_id": 2220647152,
      "id": 1705137899,
      "node_id": "PRRC_kwDOABII585lolbr",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)",
      "path": "CMakeLists.txt",
      "position": 198,
      "original_position": 198,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1704600759,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Previously benchmarks were [enabled by default](https://github.com/bitcoin/bitcoin/blob/master/configure.ac#L180), right?\r\n\r\nRight.\r\n\r\n> Is this why the build is so much faster now?\r\n\r\nAs [mentioned](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2251181234) earlier:\r\n> Regarding the part about \"the default with autoconf is on\" part, in the CMake working group, we decided to enable by default only the \"essential\" build targets that most developers build most often in their everyday work. This means, for instance, that `-DBUILD_BENCH` and `-DBUILD_GUI` are `OFF` by default.\r\n\r\n> I can run the benchmarks from the command line, but the IDE is complaining they're not part of the project. Is that expected?\r\n\r\nIs the project configured with `-DBUILD_BENCH=ON`?",
      "created_at": "2024-08-06T08:36:10Z",
      "updated_at": "2024-08-06T08:36:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705137899",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705137899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 198,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705405872",
      "pull_request_review_id": 2221090540,
      "id": 1705405872,
      "node_id": "PRRC_kwDOABII585lpm2w",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake",
      "path": "CMakeLists.txt",
      "position": 6,
      "original_position": 6,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1705010534,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Got it, so our tests are run with a different version than what we're mentioning here, right?\r\nNot sure it makes sense, but could we have one of the docker images have this version, to expose ourselves to the documented os version as well (e.g. to catch if someone uses an old dependency, like a `CMake 3.22.1` incompatibility)?",
      "created_at": "2024-08-06T11:55:15Z",
      "updated_at": "2024-08-06T11:55:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705405872",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705405872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 5,
      "original_start_line": 5,
      "start_side": "RIGHT",
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705415336",
      "pull_request_review_id": 2221105860,
      "id": 1705415336,
      "node_id": "PRRC_kwDOABII585lppKo",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)",
      "path": "CMakeLists.txt",
      "position": 198,
      "original_position": 198,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1704600759,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah (even edited the scripts to have them `ON` by default), I can run a benchmark from the terminal, but the IDE doesn't see them as part of the project.\r\nMaybe @rot13maxi can confirm or deny whether CLion sees the benchmarks.",
      "created_at": "2024-08-06T12:02:48Z",
      "updated_at": "2024-08-06T12:02:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705415336",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705415336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 198,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705423262",
      "pull_request_review_id": 2221118607,
      "id": 1705423262,
      "node_id": "PRRC_kwDOABII585lprGe",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake",
      "path": "CMakeLists.txt",
      "position": 6,
      "original_position": 6,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1705010534,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Got it, so our tests are run with a different version than what we're mentioning here, right?\r\n\r\nCMake version can be any >= 3.22. However, CMake ensures backward compatibility using the [policies](https://cmake.org/cmake/help/latest/manual/cmake-policies.7.html). Only policies known to version 3.22 are enabled, regardless of the actual CMake version.\r\n\r\n> Not sure it makes sense, but could we have one of the docker images have this version, to expose ourselves to the documented os version as well (e.g. to catch if someone uses an old dependency, like a `CMake 3.22.1` incompatibility)?\r\n\r\nThat was done for the [staging branch](https://github.com/hebasto/bitcoin/tree/cmake-staging) (see `.github/workflows/cmake.yml`). For this PR, it is out of the scope as it is focused on the migration only. Anyway, [this](https://cirrus-ci.com/task/5479234460712960) CI job uses Ubuntu 22.04 and CMake 3.22.1.",
      "created_at": "2024-08-06T12:09:04Z",
      "updated_at": "2024-08-06T12:09:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705423262",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705423262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 5,
      "original_start_line": 5,
      "start_side": "RIGHT",
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705430340",
      "pull_request_review_id": 2221129499,
      "id": 1705430340,
      "node_id": "PRRC_kwDOABII585lps1E",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)",
      "path": "CMakeLists.txt",
      "position": 198,
      "original_position": 198,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1704600759,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@paplorinc \r\n\r\nPlease open an issue in https://github.com/hebasto/bitcoin/issues with detailed steps to reproduce the problem from the scratch.",
      "created_at": "2024-08-06T12:14:26Z",
      "updated_at": "2024-08-06T12:14:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705430340",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705430340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 198,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705436112",
      "pull_request_review_id": 2221138699,
      "id": 1705436112,
      "node_id": "PRRC_kwDOABII585lpuPQ",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake",
      "path": "CMakeLists.txt",
      "position": 6,
      "original_position": 6,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1705010534,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks",
      "created_at": "2024-08-06T12:18:47Z",
      "updated_at": "2024-08-06T12:18:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705436112",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705436112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 5,
      "original_start_line": 5,
      "start_side": "RIGHT",
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705621067",
      "pull_request_review_id": 2221444266,
      "id": 1705621067,
      "node_id": "PRRC_kwDOABII585lqbZL",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)",
      "path": "CMakeLists.txt",
      "position": 198,
      "original_position": 198,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1704600759,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I managed to make it work, I think the internal IDE setting were overwriting the ones I was setting from the command line.\r\n\r\nFor the record, with these settings the bench and fuzz projects are enabled (though no IDE assistance - i.e. run from the IDE -, but that's a different issue):\r\n<img src=\"https://github.com/user-attachments/assets/06b10237-c4b3-4ca3-8547-b3299d214070\">\r\n\r\nI did open an unrelated suggestion for better error messages: https://github.com/hebasto/bitcoin/issues/306\r\n",
      "created_at": "2024-08-06T14:15:02Z",
      "updated_at": "2024-08-06T14:15:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705621067",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705621067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 198,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705751853",
      "pull_request_review_id": 2221659147,
      "id": 1705751853,
      "node_id": "PRRC_kwDOABII585lq7Ut",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)",
      "path": "CMakeLists.txt",
      "position": 198,
      "original_position": 198,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1704600759,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I managed to make it work...\r\n\r\nI consider this conversation as resolved then.",
      "created_at": "2024-08-06T15:36:49Z",
      "updated_at": "2024-08-06T15:36:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705751853",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705751853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 198,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706004353",
      "pull_request_review_id": 2222067429,
      "id": 1706004353,
      "node_id": "PRRC_kwDOABII585lr4-B",
      "diff_hunk": "@@ -0,0 +1,246 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(CheckCXXSourceCompiles)\n+include(CheckCXXSymbolExists)\n+include(CheckIncludeFileCXX)\n+\n+# The following HAVE_{HEADER}_H variables go to the bitcoin-config.h header.\n+check_include_file_cxx(sys/prctl.h HAVE_SYS_PRCTL_H)\n+check_include_file_cxx(sys/resources.h HAVE_SYS_RESOURCES_H)\n+check_include_file_cxx(sys/vmmeter.h HAVE_SYS_VMMETER_H)\n+check_include_file_cxx(vm/vm_param.h HAVE_VM_VM_PARAM_H)\n+\n+check_cxx_symbol_exists(O_CLOEXEC \"fcntl.h\" HAVE_O_CLOEXEC)\n+\n+check_include_file_cxx(unistd.h HAVE_UNISTD_H)\n+if(HAVE_UNISTD_H)\n+  check_cxx_symbol_exists(fdatasync \"unistd.h\" HAVE_FDATASYNC)\n+  check_cxx_symbol_exists(fork \"unistd.h\" HAVE_DECL_FORK)\n+  check_cxx_symbol_exists(pipe2 \"unistd.h\" HAVE_DECL_PIPE2)\n+  check_cxx_symbol_exists(setsid \"unistd.h\" HAVE_DECL_SETSID)\n+endif()\n+\n+check_include_file_cxx(sys/types.h HAVE_SYS_TYPES_H)\n+check_include_file_cxx(ifaddrs.h HAVE_IFADDRS_H)\n+if(HAVE_SYS_TYPES_H AND HAVE_IFADDRS_H)\n+  include(TestAppendRequiredLibraries)\n+  test_append_socket_library(core_interface)\n+endif()\n+\n+include(TestAppendRequiredLibraries)\n+test_append_atomic_library(core_interface)\n+\n+check_cxx_symbol_exists(std::system \"cstdlib\" HAVE_STD_SYSTEM)\n+check_cxx_symbol_exists(::_wsystem \"stdlib.h\" HAVE__WSYSTEM)\n+if(HAVE_STD_SYSTEM OR HAVE__WSYSTEM)\n+  set(HAVE_SYSTEM 1)\n+endif()\n+\n+check_include_file_cxx(string.h HAVE_STRING_H)\n+if(HAVE_STRING_H)\n+  check_cxx_source_compiles(\"\n+    #include <string.h>\n+\n+    int main()\n+    {\n+      char buf[100];\n+      char* p{strerror_r(0, buf, sizeof buf)};\n+      (void)p;\n+    }\n+    \" STRERROR_R_CHAR_P\n+  )\n+endif()\n+\n+# Check for malloc_info (for memory statistics information in getmemoryinfo).\n+check_cxx_symbol_exists(malloc_info \"malloc.h\" HAVE_MALLOC_INFO)\n+\n+# Check for mallopt(M_ARENA_MAX) (to set glibc arenas).\n+check_cxx_source_compiles(\"\n+  #include <malloc.h>\n+\n+  int main()\n+  {\n+    mallopt(M_ARENA_MAX, 1);\n+  }\n+  \" HAVE_MALLOPT_ARENA_MAX\n+)\n+\n+# Check for posix_fallocate().\n+check_cxx_source_compiles(\"\n+  // same as in src/util/fs_helpers.cpp\n+  #ifdef __linux__\n+  #ifdef _POSIX_C_SOURCE\n+  #undef _POSIX_C_SOURCE\n+  #endif\n+  #define _POSIX_C_SOURCE 200112L\n+  #endif // __linux__\n+  #include <fcntl.h>\n+\n+  int main()\n+  {\n+    return posix_fallocate(0, 0, 0);\n+  }\n+  \" HAVE_POSIX_FALLOCATE\n+)\n+\n+# Check for strong getauxval() support in the system headers.\n+check_cxx_source_compiles(\"\n+  #include <sys/auxv.h>\n+\n+  int main()\n+  {\n+    getauxval(AT_HWCAP);\n+  }\n+  \" HAVE_STRONG_GETAUXVAL\n+)\n+\n+# Check for UNIX sockets.\n+check_cxx_source_compiles(\"\n+  #include <sys/socket.h>\n+  #include <sys/un.h>\n+\n+  int main()\n+  {\n+    struct sockaddr_un addr;\n+    addr.sun_family = AF_UNIX;\n+  }\n+  \" HAVE_SOCKADDR_UN\n+)\n+\n+# Check for different ways of gathering OS randomness:\n+# - Linux getrandom()\n+check_cxx_source_compiles(\"\n+  #include <sys/random.h>\n+\n+  int main()\n+  {\n+    getrandom(nullptr, 32, 0);\n+  }\n+  \" HAVE_GETRANDOM\n+)\n+\n+# - BSD getentropy()\n+check_cxx_source_compiles(\"\n+  #include <sys/random.h>\n+\n+  int main()\n+  {\n+    getentropy(nullptr, 32);\n+  }\n+  \" HAVE_GETENTROPY_RAND\n+)\n+\n+\n+# - BSD sysctl()\n+check_cxx_source_compiles(\"\n+  #include <sys/types.h>\n+  #include <sys/sysctl.h>\n+\n+  #ifdef __linux__\n+  #error Don't use sysctl on Linux, it's deprecated even when it works\n+  #endif\n+\n+  int main()\n+  {\n+    sysctl(nullptr, 2, nullptr, nullptr, nullptr, 0);\n+  }\n+  \" HAVE_SYSCTL\n+)\n+\n+# - BSD sysctl(KERN_ARND)\n+check_cxx_source_compiles(\"\n+  #include <sys/types.h>\n+  #include <sys/sysctl.h>\n+\n+  #ifdef __linux__\n+  #error Don't use sysctl on Linux, it's deprecated even when it works\n+  #endif\n+\n+  int main()\n+  {\n+    static int name[2] = {CTL_KERN, KERN_ARND};\n+    sysctl(name, 2, nullptr, nullptr, nullptr, 0);\n+  }\n+  \" HAVE_SYSCTL_ARND\n+)\n+\n+check_cxx_source_compiles(\"\n+  int foo(void) __attribute__((visibility(\\\"default\\\")));\n+  int main(){}\n+  \" HAVE_DEFAULT_VISIBILITY_ATTRIBUTE",
      "path": "cmake/introspection.cmake",
      "position": null,
      "original_position": 172,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1704182733,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addressed in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2271981040.",
      "created_at": "2024-08-06T19:20:14Z",
      "updated_at": "2024-08-06T19:20:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1706004353",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706004353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706005633",
      "pull_request_review_id": 2222069575,
      "id": 1706005633,
      "node_id": "PRRC_kwDOABII585lr5SB",
      "diff_hunk": "@@ -0,0 +1,21 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+function(generate_header_from_json json_source_relpath)\n+  add_custom_command(\n+    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h\n+    COMMAND ${CMAKE_COMMAND} -DJSON_SOURCE_PATH=${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} -DHEADER_PATH=${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h -P ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake\n+    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake",
      "path": "cmake/module/GenerateHeaders.cmake",
      "position": null,
      "original_position": 9,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703721288,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addressed in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2271981040.",
      "created_at": "2024-08-06T19:21:38Z",
      "updated_at": "2024-08-06T19:21:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1706005633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706005633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706006163",
      "pull_request_review_id": 2222070336,
      "id": 1706006163,
      "node_id": "PRRC_kwDOABII585lr5aT",
      "diff_hunk": "@@ -60,7 +60,7 @@ example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dep\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n+results in configure scripts being able to execute Windows Portable Executable files. This can cause",
      "path": "doc/build-windows.md",
      "position": null,
      "original_position": 23,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698595899,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addressed in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2271981040.",
      "created_at": "2024-08-06T19:22:07Z",
      "updated_at": "2024-08-06T19:22:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1706006163",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706006163"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706688706",
      "pull_request_review_id": 2223676631,
      "id": 1706688706,
      "node_id": "PRRC_kwDOABII585lugDC",
      "diff_hunk": "@@ -0,0 +1,76 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+function(add_boost_if_needed)\n+  #[=[\n+  TODO: Not all targets, which will be added in the future, require\n+        Boost. Therefore, a proper check will be appropriate here.\n+\n+  Implementation notes:\n+  Although only Boost headers are used to build Bitcoin Core,\n+  we still leverage a standard CMake's approach to handle\n+  dependencies, i.e., the Boost::headers \"library\".\n+  A command target_link_libraries(target PRIVATE Boost::headers)\n+  will propagate Boost::headers usage requirements to the target.\n+  For Boost::headers such usage requirements is an include\n+  directory and other added INTERFACE properties.\n+  ]=]\n+\n+  # We cannot rely on find_package(Boost ...) to work properly without\n+  # Boost_NO_BOOST_CMAKE set until we require a more recent Boost because\n+  # upstream did not ship proper CMake files until 1.82.0.\n+  # Until then, we rely on CMake's FindBoost module.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0167.html\n+  if(POLICY CMP0167)\n+    cmake_policy(SET CMP0167 OLD)\n+  endif()\n+  set(Boost_NO_BOOST_CMAKE ON)\n+  find_package(Boost 1.73.0 REQUIRED)\n+  mark_as_advanced(Boost_INCLUDE_DIR)\n+  set_target_properties(Boost::headers PROPERTIES IMPORTED_GLOBAL TRUE)\n+  target_compile_definitions(Boost::headers INTERFACE\n+    # We don't use multi_index serialization.\n+    BOOST_MULTI_INDEX_DISABLE_SERIALIZATION\n+  )\n+  if(DEFINED VCPKG_TARGET_TRIPLET)\n+    # Workaround for https://github.com/microsoft/vcpkg/issues/36955.\n+    target_compile_definitions(Boost::headers INTERFACE\n+      BOOST_NO_USER_CONFIG\n+    )\n+  endif()\n+\n+  # Prevent use of std::unary_function, which was removed in C++17,\n+  # and will generate warnings with newer compilers for Boost\n+  # older than 1.80.\n+  # See: https://github.com/boostorg/config/pull/430.\n+  set(CMAKE_REQUIRED_DEFINITIONS -DBOOST_NO_CXX98_FUNCTION_BASE)",
      "path": "cmake/module/AddBoostIfNeeded.cmake",
      "position": 47,
      "original_position": 47,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Pretty sure there are two separate bugs here:\r\n\r\n* The first is that `BOOST_NO_CXX98_FUNCTION_BASE` isn't removed from `CMAKE_REQUIRED_DEFINITIONS` after this check, which means it's incorrectly reused for the check below.\r\n\r\n* The second is that when `-DWERROR=ON` is used, `-Werror` isn't being passed to the check for the Boost Test header (which also hides the first bug).",
      "created_at": "2024-08-07T09:27:52Z",
      "updated_at": "2024-08-07T09:27:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1706688706",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706688706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707326409",
      "pull_request_review_id": 2225598396,
      "id": 1707326409,
      "node_id": "PRRC_kwDOABII585lw7vJ",
      "diff_hunk": "@@ -0,0 +1,76 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+function(add_boost_if_needed)\n+  #[=[\n+  TODO: Not all targets, which will be added in the future, require\n+        Boost. Therefore, a proper check will be appropriate here.\n+\n+  Implementation notes:\n+  Although only Boost headers are used to build Bitcoin Core,\n+  we still leverage a standard CMake's approach to handle\n+  dependencies, i.e., the Boost::headers \"library\".\n+  A command target_link_libraries(target PRIVATE Boost::headers)\n+  will propagate Boost::headers usage requirements to the target.\n+  For Boost::headers such usage requirements is an include\n+  directory and other added INTERFACE properties.\n+  ]=]\n+\n+  # We cannot rely on find_package(Boost ...) to work properly without\n+  # Boost_NO_BOOST_CMAKE set until we require a more recent Boost because\n+  # upstream did not ship proper CMake files until 1.82.0.\n+  # Until then, we rely on CMake's FindBoost module.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0167.html\n+  if(POLICY CMP0167)\n+    cmake_policy(SET CMP0167 OLD)\n+  endif()\n+  set(Boost_NO_BOOST_CMAKE ON)\n+  find_package(Boost 1.73.0 REQUIRED)\n+  mark_as_advanced(Boost_INCLUDE_DIR)\n+  set_target_properties(Boost::headers PROPERTIES IMPORTED_GLOBAL TRUE)\n+  target_compile_definitions(Boost::headers INTERFACE\n+    # We don't use multi_index serialization.\n+    BOOST_MULTI_INDEX_DISABLE_SERIALIZATION\n+  )\n+  if(DEFINED VCPKG_TARGET_TRIPLET)\n+    # Workaround for https://github.com/microsoft/vcpkg/issues/36955.\n+    target_compile_definitions(Boost::headers INTERFACE\n+      BOOST_NO_USER_CONFIG\n+    )\n+  endif()\n+\n+  # Prevent use of std::unary_function, which was removed in C++17,\n+  # and will generate warnings with newer compilers for Boost\n+  # older than 1.80.\n+  # See: https://github.com/boostorg/config/pull/430.\n+  set(CMAKE_REQUIRED_DEFINITIONS -DBOOST_NO_CXX98_FUNCTION_BASE)",
      "path": "cmake/module/AddBoostIfNeeded.cmake",
      "position": 47,
      "original_position": 47,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1706688706,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For the following discussion, please see https://github.com/hebasto/bitcoin/pull/312.",
      "created_at": "2024-08-07T15:55:25Z",
      "updated_at": "2024-08-07T15:55:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707326409",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707326409"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707417887",
      "pull_request_review_id": 2225688525,
      "id": 1707417887,
      "node_id": "PRRC_kwDOABII585lxSEf",
      "diff_hunk": "@@ -0,0 +1,234 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(CheckCXXSourceCompiles)\n+include(CheckCXXSymbolExists)\n+include(CheckIncludeFileCXX)\n+\n+# The following HAVE_{HEADER}_H variables go to the bitcoin-config.h header.\n+check_include_file_cxx(sys/prctl.h HAVE_SYS_PRCTL_H)\n+check_include_file_cxx(sys/resources.h HAVE_SYS_RESOURCES_H)\n+check_include_file_cxx(sys/vmmeter.h HAVE_SYS_VMMETER_H)\n+check_include_file_cxx(vm/vm_param.h HAVE_VM_VM_PARAM_H)\n+\n+check_cxx_symbol_exists(O_CLOEXEC \"fcntl.h\" HAVE_O_CLOEXEC)\n+\n+check_include_file_cxx(unistd.h HAVE_UNISTD_H)\n+if(HAVE_UNISTD_H)\n+  check_cxx_symbol_exists(fdatasync \"unistd.h\" HAVE_FDATASYNC)\n+  check_cxx_symbol_exists(fork \"unistd.h\" HAVE_DECL_FORK)\n+  check_cxx_symbol_exists(pipe2 \"unistd.h\" HAVE_DECL_PIPE2)\n+  check_cxx_symbol_exists(setsid \"unistd.h\" HAVE_DECL_SETSID)\n+endif()\n+\n+check_include_file_cxx(sys/types.h HAVE_SYS_TYPES_H)\n+check_include_file_cxx(ifaddrs.h HAVE_IFADDRS_H)\n+if(HAVE_SYS_TYPES_H AND HAVE_IFADDRS_H)\n+  include(TestAppendRequiredLibraries)\n+  test_append_socket_library(core_interface)\n+endif()\n+\n+include(TestAppendRequiredLibraries)\n+test_append_atomic_library(core_interface)\n+\n+check_cxx_symbol_exists(std::system \"cstdlib\" HAVE_STD_SYSTEM)\n+check_cxx_symbol_exists(::_wsystem \"stdlib.h\" HAVE__WSYSTEM)\n+if(HAVE_STD_SYSTEM OR HAVE__WSYSTEM)\n+  set(HAVE_SYSTEM 1)\n+endif()\n+\n+check_include_file_cxx(string.h HAVE_STRING_H)",
      "path": "cmake/introspection.cmake",
      "position": null,
      "original_position": 41,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think we can just drop include checks like this (which don't produce defines used anywhere else in the codebase). I realise this kind of check was ported from Autotools, but I no-longer think it's necessary to do. Running a check to see if we can include `string.h`, just to then immediately compile something which includes `string.h`, seems like it should just be collapsed down to the compile. Looks like another one is `check_include_file_cxx(unistd.h HAVE_UNISTD_H)`.",
      "created_at": "2024-08-07T16:39:28Z",
      "updated_at": "2024-08-07T16:39:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707417887",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707417887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707716090",
      "pull_request_review_id": 2225993274,
      "id": 1707716090,
      "node_id": "PRRC_kwDOABII585lya36",
      "diff_hunk": "@@ -0,0 +1,234 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(CheckCXXSourceCompiles)\n+include(CheckCXXSymbolExists)\n+include(CheckIncludeFileCXX)\n+\n+# The following HAVE_{HEADER}_H variables go to the bitcoin-config.h header.\n+check_include_file_cxx(sys/prctl.h HAVE_SYS_PRCTL_H)\n+check_include_file_cxx(sys/resources.h HAVE_SYS_RESOURCES_H)\n+check_include_file_cxx(sys/vmmeter.h HAVE_SYS_VMMETER_H)\n+check_include_file_cxx(vm/vm_param.h HAVE_VM_VM_PARAM_H)\n+\n+check_cxx_symbol_exists(O_CLOEXEC \"fcntl.h\" HAVE_O_CLOEXEC)\n+\n+check_include_file_cxx(unistd.h HAVE_UNISTD_H)\n+if(HAVE_UNISTD_H)\n+  check_cxx_symbol_exists(fdatasync \"unistd.h\" HAVE_FDATASYNC)\n+  check_cxx_symbol_exists(fork \"unistd.h\" HAVE_DECL_FORK)\n+  check_cxx_symbol_exists(pipe2 \"unistd.h\" HAVE_DECL_PIPE2)\n+  check_cxx_symbol_exists(setsid \"unistd.h\" HAVE_DECL_SETSID)\n+endif()\n+\n+check_include_file_cxx(sys/types.h HAVE_SYS_TYPES_H)\n+check_include_file_cxx(ifaddrs.h HAVE_IFADDRS_H)\n+if(HAVE_SYS_TYPES_H AND HAVE_IFADDRS_H)\n+  include(TestAppendRequiredLibraries)\n+  test_append_socket_library(core_interface)\n+endif()\n+\n+include(TestAppendRequiredLibraries)\n+test_append_atomic_library(core_interface)\n+\n+check_cxx_symbol_exists(std::system \"cstdlib\" HAVE_STD_SYSTEM)\n+check_cxx_symbol_exists(::_wsystem \"stdlib.h\" HAVE__WSYSTEM)\n+if(HAVE_STD_SYSTEM OR HAVE__WSYSTEM)\n+  set(HAVE_SYSTEM 1)\n+endif()\n+\n+check_include_file_cxx(string.h HAVE_STRING_H)",
      "path": "cmake/introspection.cmake",
      "position": null,
      "original_position": 41,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707417887,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! Implemented in https://github.com/hebasto/bitcoin/pull/313.",
      "created_at": "2024-08-07T19:11:55Z",
      "updated_at": "2024-08-07T19:11:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707716090",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707716090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707740750",
      "pull_request_review_id": 2226017520,
      "id": 1707740750,
      "node_id": "PRRC_kwDOABII585lyg5O",
      "diff_hunk": "@@ -131,10 +142,14 @@ You may also need to take care of giving the correct path for `clang` and\n `clang++`, like `CC=/path/to/clang CXX=/path/to/clang++` if the non-systems\n `clang` does not come first in your path.\n \n-Full configure that was tested on macOS with `brew` installed `llvm`:\n+Full configuration step that was tested on macOS with `brew` installed `llvm`:\n \n ```sh\n-./configure --enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=$(brew --prefix llvm)/bin/clang CXX=$(brew --prefix llvm)/bin/clang++\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer \\",
      "path": "doc/fuzzing.md",
      "position": 86,
      "original_position": 86,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "do we need the escape at the end?",
      "created_at": "2024-08-07T19:26:46Z",
      "updated_at": "2024-08-07T19:26:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707740750",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707740750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 152,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707746253",
      "pull_request_review_id": 2226022459,
      "id": 1707746253,
      "node_id": "PRRC_kwDOABII585lyiPN",
      "diff_hunk": "@@ -150,16 +165,18 @@ $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n $ git clone https://github.com/AFLplusplus/AFLplusplus\n $ make -C AFLplusplus/ source-only\n-$ ./autogen.sh\n # If afl-clang-lto is not available, see\n # https://github.com/AFLplusplus/AFLplusplus#a-selecting-the-best-afl-compiler-for-instrumenting-the-target\n-$ CC=$(pwd)/AFLplusplus/afl-clang-lto CXX=$(pwd)/AFLplusplus/afl-clang-lto++ ./configure --enable-fuzz\n-$ make\n-# For macOS you may need to ignore x86 compilation checks when running \"make\". If so,\n-# try compiling using: AFL_NO_X86=1 make\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto++\" \\\n+   -DBUILD_FOR_FUZZING=ON\n+$ cmake --build build_fuzz -j$(nproc)\n+# For macOS you may need to ignore x86 compilation checks when running \"cmake --build\". If so,\n+# try compiling using: `AFL_NO_X86=1 cmake --build build_fuzz -j$(nproc)`",
      "path": "doc/fuzzing.md",
      "position": null,
      "original_position": 107,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "if this comment still refers to the mac build, note that mac doesn't have `nproc`",
      "created_at": "2024-08-07T19:29:53Z",
      "updated_at": "2024-08-07T19:29:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707746253",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707746253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707807652",
      "pull_request_review_id": 2226085150,
      "id": 1707807652,
      "node_id": "PRRC_kwDOABII585lyxOk",
      "diff_hunk": "@@ -0,0 +1,715 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)\n+\n+option(INSTALL_MAN \"Install man pages.\" ON)\n+\n+set(APPEND_CPPFLAGS \"\" CACHE STRING \"Preprocessor flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CFLAGS \"\" CACHE STRING \"C compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CXXFLAGS \"\" CACHE STRING \"(Objective) C++ compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_LDFLAGS \"\" CACHE STRING \"Linker flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+# Appending to this low-level rule variables is the only way to\n+# guarantee that the flags appear at the end of the command line.\n+string(APPEND CMAKE_CXX_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CXXFLAGS}\")\n+string(APPEND CMAKE_CXX_CREATE_SHARED_LIBRARY \" ${APPEND_LDFLAGS}\")\n+string(APPEND CMAKE_CXX_LINK_EXECUTABLE \" ${APPEND_LDFLAGS}\")\n+\n+set(configure_warnings)\n+\n+include(CheckPIESupported)\n+check_pie_supported(OUTPUT_VARIABLE check_pie_output LANGUAGES CXX)\n+if(CMAKE_CXX_LINK_PIE_SUPPORTED)\n+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+elseif(NOT WIN32)\n+  # The warning is superfluous for Windows.\n+  message(WARNING \"PIE is not supported at link time: ${check_pie_output}\")\n+  list(APPEND configure_warnings \"Position independent code disabled.\")\n+endif()\n+unset(check_pie_output)\n+\n+# The core_interface library aims to encapsulate common build flags.\n+# It is a usage requirement for all targets except for secp256k1, which\n+# gets its flags by other means.\n+add_library(core_interface INTERFACE)\n+add_library(core_interface_relwithdebinfo INTERFACE)\n+add_library(core_interface_debug INTERFACE)\n+target_link_libraries(core_interface INTERFACE\n+  $<$<CONFIG:RelWithDebInfo>:core_interface_relwithdebinfo>\n+  $<$<CONFIG:Debug>:core_interface_debug>\n+)\n+\n+if(BUILD_FOR_FUZZING)\n+  message(WARNING \"BUILD_FOR_FUZZING=ON will disable all other targets and force BUILD_FUZZ_BINARY=ON.\")\n+  set(BUILD_DAEMON OFF)\n+  set(BUILD_CLI OFF)\n+  set(BUILD_TX OFF)\n+  set(BUILD_UTIL OFF)\n+  set(BUILD_UTIL_CHAINSTATE OFF)\n+  set(BUILD_KERNEL_LIB OFF)\n+  set(BUILD_WALLET_TOOL OFF)\n+  set(BUILD_GUI OFF)\n+  set(ENABLE_EXTERNAL_SIGNER OFF)\n+  set(WITH_NATPMP OFF)\n+  set(WITH_MINIUPNPC OFF)\n+  set(WITH_ZMQ OFF)\n+  set(BUILD_TESTS OFF)\n+  set(BUILD_GUI_TESTS OFF)\n+  set(BUILD_BENCH OFF)\n+  set(BUILD_FUZZ_BINARY ON)\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    ABORT_ON_FAILED_ASSUME\n+  )\n+endif()\n+\n+include(TryAppendCXXFlags)\n+include(TryAppendLinkerFlag)\n+\n+if(WIN32)\n+  #[=[\n+  This build system supports two ways to build binaries for Windows.\n+\n+  1. Building on Windows using MSVC.\n+  Implementation notes:\n+  - /DWIN32 and /D_WINDOWS definitions are included into the CMAKE_CXX_FLAGS_INIT\n+    and CMAKE_CXX_FLAGS_INIT variables by default.\n+  - A run-time library is selected using the CMAKE_MSVC_RUNTIME_LIBRARY variable.\n+  - MSVC-specific options, for example, /Zc:__cplusplus, are additionally required.\n+\n+  2. Cross-compiling using MinGW.\n+  Implementation notes:\n+  - WIN32 and _WINDOWS definitions must be provided explicitly.\n+  - A run-time library must be specified explicitly using _MT definition.\n+  ]=]\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    _WIN32_WINNT=0x0601\n+    _WIN32_IE=0x0501\n+    WIN32_LEAN_AND_MEAN\n+    NOMINMAX\n+  )\n+\n+  if(MSVC)\n+    if(VCPKG_TARGET_TRIPLET MATCHES \"-static\")\n+      set(msvc_library_linkage \"\")\n+    else()\n+      set(msvc_library_linkage \"DLL\")\n+    endif()\n+    set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>${msvc_library_linkage}\")\n+    unset(msvc_library_linkage)\n+\n+    target_compile_definitions(core_interface INTERFACE\n+      _UNICODE;UNICODE\n+    )\n+    target_compile_options(core_interface INTERFACE\n+      /utf-8\n+      /Zc:preprocessor\n+      /Zc:__cplusplus\n+      /sdl\n+    )\n+    # Improve parallelism in MSBuild.\n+    # See: https://devblogs.microsoft.com/cppblog/improved-parallelism-in-msbuild/.\n+    list(APPEND CMAKE_VS_GLOBALS \"UseMultiToolTask=true\")\n+  endif()\n+\n+  if(MINGW)\n+    target_compile_definitions(core_interface INTERFACE\n+      WIN32\n+      _WINDOWS\n+      _MT\n+    )\n+    # Avoid the use of aligned vector instructions when building for Windows.\n+    # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54412.\n+    try_append_cxx_flags(\"-Wa,-muse-unaligned-vector-move\" TARGET core_interface SKIP_LINK)\n+    try_append_linker_flag(\"-static\" TARGET core_interface)\n+    # We require Windows 7 (NT 6.1) or later.\n+    try_append_linker_flag(\"-Wl,--major-subsystem-version,6\" TARGET core_interface)\n+    try_append_linker_flag(\"-Wl,--minor-subsystem-version,1\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+# Use 64-bit off_t on 32-bit Linux.\n+if (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n+  # Ensure 64-bit offsets are used for filesystem accesses for 32-bit compilation.\n+  target_compile_definitions(core_interface INTERFACE\n+    _FILE_OFFSET_BITS=64",
      "path": "CMakeLists.txt",
      "position": 334,
      "original_position": 332,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1704385992,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Looks like `AC_SYS_LARGEFILE` / `_LARGE_FILES` was never ported?\r\n\r\nThe comment in the [implementation code](https://git.savannah.gnu.org/gitweb/?p=autoconf.git;a=blob;f=lib/autoconf/specific.m4;h=cea6247a9d1417661e05f77e378460248540ea80;hb=HEAD#l264) mentions \"32-bit AIX 4.2.1+, 32-bit z/OS\". Do we support those systems?",
      "created_at": "2024-08-07T20:06:03Z",
      "updated_at": "2024-08-07T20:06:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707807652",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707807652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 334,
      "original_line": 334,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707812278",
      "pull_request_review_id": 2226090580,
      "id": 1707812278,
      "node_id": "PRRC_kwDOABII585lyyW2",
      "diff_hunk": "@@ -131,10 +142,14 @@ You may also need to take care of giving the correct path for `clang` and\n `clang++`, like `CC=/path/to/clang CXX=/path/to/clang++` if the non-systems\n `clang` does not come first in your path.\n \n-Full configure that was tested on macOS with `brew` installed `llvm`:\n+Full configuration step that was tested on macOS with `brew` installed `llvm`:\n \n ```sh\n-./configure --enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=$(brew --prefix llvm)/bin/clang CXX=$(brew --prefix llvm)/bin/clang++\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer \\",
      "path": "doc/fuzzing.md",
      "position": 86,
      "original_position": 86,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707740750,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "cc @dergoegge ",
      "created_at": "2024-08-07T20:08:31Z",
      "updated_at": "2024-08-07T20:08:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707812278",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707812278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 152,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707812607",
      "pull_request_review_id": 2226090931,
      "id": 1707812607,
      "node_id": "PRRC_kwDOABII585lyyb_",
      "diff_hunk": "@@ -150,16 +165,18 @@ $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n $ git clone https://github.com/AFLplusplus/AFLplusplus\n $ make -C AFLplusplus/ source-only\n-$ ./autogen.sh\n # If afl-clang-lto is not available, see\n # https://github.com/AFLplusplus/AFLplusplus#a-selecting-the-best-afl-compiler-for-instrumenting-the-target\n-$ CC=$(pwd)/AFLplusplus/afl-clang-lto CXX=$(pwd)/AFLplusplus/afl-clang-lto++ ./configure --enable-fuzz\n-$ make\n-# For macOS you may need to ignore x86 compilation checks when running \"make\". If so,\n-# try compiling using: AFL_NO_X86=1 make\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto++\" \\\n+   -DBUILD_FOR_FUZZING=ON\n+$ cmake --build build_fuzz -j$(nproc)\n+# For macOS you may need to ignore x86 compilation checks when running \"cmake --build\". If so,\n+# try compiling using: `AFL_NO_X86=1 cmake --build build_fuzz -j$(nproc)`",
      "path": "doc/fuzzing.md",
      "position": null,
      "original_position": 107,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707746253,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "cc @dergoegge ",
      "created_at": "2024-08-07T20:08:41Z",
      "updated_at": "2024-08-07T20:08:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707812607",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707812607"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707821187",
      "pull_request_review_id": 2226100409,
      "id": 1707821187,
      "node_id": "PRRC_kwDOABII585ly0iD",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wasn't able to run the fuzz tests with cmake (tried all mac tricks I could find here), I'm getting:\r\n```\r\n-- Performing Test CXX_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER\r\n-- Performing Test CXX_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER - Success\r\n-- Performing Test LINKER_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER_a797\r\n-- Performing Test LINKER_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER_a797 - Failed\r\nCMake Error at CMakeLists.txt:389 (message):\r\n  Linker did not accept requested flags, you are missing required libraries.\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\n```\r\n\r\ngiven:\r\n```\r\n% brew --prefix llvm   \r\n/opt/homebrew/opt/llvm\r\n\r\n% clang --version               \r\nHomebrew clang version 18.1.8\r\nTarget: arm64-apple-darwin23.5.0\r\nThread model: posix\r\nInstalledDir: /opt/homebrew/opt/llvm/bin\r\n\r\n% clang++ --version               \r\nHomebrew clang version 18.1.8\r\nTarget: arm64-apple-darwin23.5.0\r\nThread model: posix\r\nInstalledDir: /opt/homebrew/opt/llvm/bin\r\n```\r\n\r\n---\r\n\r\nAm I doing something wrong or should I open an issue for this as well?\r\n\r\ncc @dergoegge",
      "created_at": "2024-08-07T20:13:49Z",
      "updated_at": "2024-08-07T20:15:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707821187",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707821187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707843731",
      "pull_request_review_id": 2226126646,
      "id": 1707843731,
      "node_id": "PRRC_kwDOABII585ly6CT",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I wasn't able to run the fuzz tests with cmake\n\nAre you able to build them using Autotools?",
      "created_at": "2024-08-07T20:26:50Z",
      "updated_at": "2024-08-07T20:26:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707843731",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707843731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707893570",
      "pull_request_review_id": 2226182630,
      "id": 1707893570,
      "node_id": "PRRC_kwDOABII585lzGNC",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Kinda', but I do get some [errors](https://github.com/user-attachments/files/16534146/scratch_62.txt) at the beginning.",
      "created_at": "2024-08-07T20:55:09Z",
      "updated_at": "2024-08-07T20:56:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707893570",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707893570"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709002249",
      "pull_request_review_id": 2227273414,
      "id": 1709002249,
      "node_id": "PRRC_kwDOABII585l3U4J",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Are you able to build them using Autotools?\r\n\r\nYea, the steps in `fuzzing.md` currently work with master, but don't work this branch (ad2140d4d8cccec82fdad07bdc7532e202282306).",
      "created_at": "2024-08-08T09:00:09Z",
      "updated_at": "2024-08-08T09:00:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709002249",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709002249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709005443",
      "pull_request_review_id": 2227276755,
      "id": 1709005443,
      "node_id": "PRRC_kwDOABII585l3VqD",
      "diff_hunk": "@@ -131,10 +142,14 @@ You may also need to take care of giving the correct path for `clang` and\n `clang++`, like `CC=/path/to/clang CXX=/path/to/clang++` if the non-systems\n `clang` does not come first in your path.\n \n-Full configure that was tested on macOS with `brew` installed `llvm`:\n+Full configuration step that was tested on macOS with `brew` installed `llvm`:\n \n ```sh\n-./configure --enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=$(brew --prefix llvm)/bin/clang CXX=$(brew --prefix llvm)/bin/clang++\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer \\",
      "path": "doc/fuzzing.md",
      "position": 86,
      "original_position": 86,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707740750,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We probably don't.",
      "created_at": "2024-08-08T09:01:39Z",
      "updated_at": "2024-08-08T09:15:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709005443",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709005443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 152,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709007912",
      "pull_request_review_id": 2227276755,
      "id": 1709007912,
      "node_id": "PRRC_kwDOABII585l3WQo",
      "diff_hunk": "@@ -150,16 +165,18 @@ $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n $ git clone https://github.com/AFLplusplus/AFLplusplus\n $ make -C AFLplusplus/ source-only\n-$ ./autogen.sh\n # If afl-clang-lto is not available, see\n # https://github.com/AFLplusplus/AFLplusplus#a-selecting-the-best-afl-compiler-for-instrumenting-the-target\n-$ CC=$(pwd)/AFLplusplus/afl-clang-lto CXX=$(pwd)/AFLplusplus/afl-clang-lto++ ./configure --enable-fuzz\n-$ make\n-# For macOS you may need to ignore x86 compilation checks when running \"make\". If so,\n-# try compiling using: AFL_NO_X86=1 make\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto++\" \\\n+   -DBUILD_FOR_FUZZING=ON\n+$ cmake --build build_fuzz -j$(nproc)\n+# For macOS you may need to ignore x86 compilation checks when running \"cmake --build\". If so,\n+# try compiling using: `AFL_NO_X86=1 cmake --build build_fuzz -j$(nproc)`",
      "path": "doc/fuzzing.md",
      "position": null,
      "original_position": 107,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707746253,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, the \"-j$(nproc)\" bit should be removed. I don't have a Mac so I don't no if these instructions are still relevant.",
      "created_at": "2024-08-08T09:02:54Z",
      "updated_at": "2024-08-08T09:15:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709007912",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709007912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709030842",
      "pull_request_review_id": 2227276755,
      "id": 1709030842,
      "node_id": "PRRC_kwDOABII585l3b26",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've only tried the instructions in this doc on linux when I wrote them a few weeks back. I'm guessing this is a Mac only issue but perhaps not.",
      "created_at": "2024-08-08T09:14:59Z",
      "updated_at": "2024-08-08T09:15:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709030842",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709030842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709076520",
      "pull_request_review_id": 2227365621,
      "id": 1709076520,
      "node_id": "PRRC_kwDOABII585l3nAo",
      "diff_hunk": "@@ -150,16 +165,18 @@ $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n $ git clone https://github.com/AFLplusplus/AFLplusplus\n $ make -C AFLplusplus/ source-only\n-$ ./autogen.sh\n # If afl-clang-lto is not available, see\n # https://github.com/AFLplusplus/AFLplusplus#a-selecting-the-best-afl-compiler-for-instrumenting-the-target\n-$ CC=$(pwd)/AFLplusplus/afl-clang-lto CXX=$(pwd)/AFLplusplus/afl-clang-lto++ ./configure --enable-fuzz\n-$ make\n-# For macOS you may need to ignore x86 compilation checks when running \"make\". If so,\n-# try compiling using: AFL_NO_X86=1 make\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto++\" \\\n+   -DBUILD_FOR_FUZZING=ON\n+$ cmake --build build_fuzz -j$(nproc)\n+# For macOS you may need to ignore x86 compilation checks when running \"cmake --build\". If so,\n+# try compiling using: `AFL_NO_X86=1 cmake --build build_fuzz -j$(nproc)`",
      "path": "doc/fuzzing.md",
      "position": null,
      "original_position": 107,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707746253,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The mac equivalent is `make -j$(sysctl -n hw.ncpu)`",
      "created_at": "2024-08-08T09:38:47Z",
      "updated_at": "2024-08-08T09:38:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709076520",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709076520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709105914",
      "pull_request_review_id": 2227399035,
      "id": 1709105914,
      "node_id": "PRRC_kwDOABII585l3uL6",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(GNUInstallDirs)\n+include(AddWindowsResources)\n+\n+configure_file(${PROJECT_SOURCE_DIR}/cmake/bitcoin-config.h.in config/bitcoin-config.h @ONLY)\n+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})\n+\n+# After the transition from Autotools to CMake, the obj/ subdirectory\n+# could be dropped as its only purpose was to separate a generated header\n+# from source files.",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 13,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, what's the purpose of the comment?\r\nIs it to explain to the reviewers how to review it or will this make sense after we remove autotools? If the second, maybe we can explain in the commit message instead - or add a TODO in front of this to signal that it's a temporary explanation (otherwise people might be afraid to remove it)",
      "created_at": "2024-08-08T09:53:48Z",
      "updated_at": "2024-08-08T11:36:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709105914",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709105914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709145204",
      "pull_request_review_id": 2227399035,
      "id": 1709145204,
      "node_id": "PRRC_kwDOABII585l33x0",
      "diff_hunk": "@@ -102,9 +102,8 @@ brew install berkeley-db@4\n \n ###### Qt\n \n-Bitcoin Core includes a GUI built with the cross-platform Qt Framework.\n-To compile the GUI, we need to install `qt@5`.\n-Skip if you don't intend to use the GUI.\n+Bitcoin Core includes a GUI built with the cross-platform Qt Framework. To compile the GUI, we need to install\n+the necessary parts of Qt, the libqrencode and pass `-DBUILD_GUI=ON`. Skip if you don't intend to use the GUI.\n \n ``` bash\n brew install qt@5",
      "path": "doc/build-osx.md",
      "position": 28,
      "original_position": 28,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "👍 GUI is working with cmake, but I had to execute a `brew link qt5 --force` as well after `brew install qt@5` (applies to Autotools as well)",
      "created_at": "2024-08-08T10:14:40Z",
      "updated_at": "2024-08-08T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709145204",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709145204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709167244",
      "pull_request_review_id": 2227399035,
      "id": 1709167244,
      "node_id": "PRRC_kwDOABII585l39KM",
      "diff_hunk": "@@ -82,47 +85,41 @@ Bitcoin Core can provide notifications via ZeroMQ. If the package is installed,\n pkg_add zeromq\n ```\n \n-## Building Bitcoin Core\n-\n-**Important**: Use `gmake` (the non-GNU `make` will exit with an error).\n+#### Test Suite Dependencies\n+There is an included test suite that is useful for testing code changes when developing.\n+To run the test suite (recommended), you will need to have Python 3 installed:\n \n-Preparation:\n ```bash\n-\n-# Adapt the following for the version you installed (major.minor only):\n-export AUTOCONF_VERSION=2.71\n-export AUTOMAKE_VERSION=1.16\n-\n-./autogen.sh\n+pkg_add install python  # Select the newest version of the package.\n ```\n \n+## Building Bitcoin Core\n+\n ### 1. Configuration\n \n There are many ways to configure Bitcoin Core, here are a few common examples:\n \n ##### Descriptor Wallet and GUI:\n-This enables the GUI and descriptor wallet support, assuming `sqlite` and `qt5` are installed.\n+This enables descriptor wallet support and the GUI, assuming SQLite and Qt 5 are installed.\n \n ```bash\n-./configure MAKE=gmake\n+cmake -B build -DWITH_SQLITE=ON -DBUILD_GUI=ON\n ```\n \n+Run `cmake -B build -LH` to see the full list of available options.\n+\n ##### Descriptor & Legacy Wallet. No GUI:\n-This enables support for both wallet types and disables the GUI:\n+This enables support for both wallet types:\n \n ```bash\n-./configure --with-gui=no \\\n-    BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" \\\n-    BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" \\\n-    MAKE=gmake\n+cmake -B build -DBerkeleyDB_INCLUDE_DIR:PATH=\"${BDB_PREFIX}/include\"\n ```\n \n ### 2. Compile\n-**Important**: Use `gmake` (the non-GNU `make` will exit with an error).\n \n ```bash\n-gmake # use \"-j N\" for N parallel jobs\n-gmake check # Run tests if Python 3 is available\n+cmake --build build     # Use \"-j N\" for N parallel jobs.\n+ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-openbsd.md",
      "position": 118,
      "original_position": 118,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: \"Python 3\" is a bit confusing here since Python 2 was sunset in 2020, and we don't accept all 3.x versions.\r\nWould it make sense to simplify these \"Python 3\" references to just \"Python\"?",
      "created_at": "2024-08-08T10:26:53Z",
      "updated_at": "2024-08-08T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709167244",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709167244"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 122,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709170006",
      "pull_request_review_id": 2227399035,
      "id": 1709170006,
      "node_id": "PRRC_kwDOABII585l391W",
      "diff_hunk": "@@ -25,10 +24,10 @@ pkgin install gcc12\n \n Then, when configuring, pass the following:\n ```bash\n-./configure\n+cmake -B build\n     ...\n-    CC=\"/usr/pkg/gcc12/bin/gcc\" \\\n-    CXX=\"/usr/pkg/gcc12/bin/g++\" \\\n+    -DCMAKE_C_COMPILER=\"/usr/pkg/gcc12/bin/gcc\" \\\n+    -DCMAKE_CXX_COMPILER=\"/usr/pkg/gcc12/bin/g++\" \\",
      "path": "doc/build-netbsd.md",
      "position": 20,
      "original_position": 20,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit:\r\n```suggestion\r\n    -DCMAKE_C_COMPILER=/usr/pkg/gcc12/bin/gcc \\\r\n    -DCMAKE_CXX_COMPILER=/usr/pkg/gcc12/bin/g++ \\\r\n```",
      "created_at": "2024-08-08T10:28:24Z",
      "updated_at": "2024-08-08T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709170006",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709170006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 29,
      "original_start_line": 29,
      "start_side": "RIGHT",
      "line": 30,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709172104",
      "pull_request_review_id": 2227399035,
      "id": 1709172104,
      "node_id": "PRRC_kwDOABII585l3-WI",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\",
      "path": "doc/fuzzing.md",
      "position": 8,
      "original_position": 8,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: to be a bit more consistent, we may want to add quotes only when they're needed (or always)\r\n```suggestion\r\n   -DCMAKE_C_COMPILER=clang \\\r\n   -DCMAKE_CXX_COMPILER=clang++ \\\r\n```",
      "created_at": "2024-08-08T10:29:40Z",
      "updated_at": "2024-08-08T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709172104",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709172104"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 11,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709187478",
      "pull_request_review_id": 2227399035,
      "id": 1709187478,
      "node_id": "PRRC_kwDOABII585l4CGW",
      "diff_hunk": "@@ -276,8 +273,8 @@ tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n ## Other commands:\n \n ```shell",
      "path": "doc/build-osx.md",
      "position": 125,
      "original_position": 125,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: slightly unrelated, but in other cases similar code blocks are annotated as either \"\\```bash\" or \"```sh\" which are treated a bit different in e.g. CLion:\r\n<img src=\"https://github.com/user-attachments/assets/13f30a0a-1f92-4a39-87ce-8ca11a05a44f\">\r\n\r\nAlso note that \"\\``` bash\" is also a formatted differently than \"```bash\".\r\n\r\nShould probably be done in a different PR, though...",
      "created_at": "2024-08-08T10:37:42Z",
      "updated_at": "2024-08-08T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709187478",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709187478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 275,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709206550",
      "pull_request_review_id": 2227399035,
      "id": 1709206550,
      "node_id": "PRRC_kwDOABII585l4GwW",
      "diff_hunk": "@@ -0,0 +1,32 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Do not use generator expressions in test sources because the\n+# SOURCES property is processed to gather test suite macros.\n+target_sources(test_bitcoin\n+  PRIVATE\n+    init_test_fixture.cpp\n+    wallet_test_fixture.cpp",
      "path": "src/wallet/test/CMakeLists.txt",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: not very important, but can help with avoiding merge conflicts if we always sort these alphabetically (would be nice to have an automatic check for these, of course).\r\nUnless this is deliberate, in which case a comment could help.",
      "created_at": "2024-08-08T10:49:25Z",
      "updated_at": "2024-08-08T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709206550",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709206550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709270807",
      "pull_request_review_id": 2227399035,
      "id": 1709270807,
      "node_id": "PRRC_kwDOABII585l4WcX",
      "diff_hunk": "@@ -0,0 +1,22 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+file(READ ${RAW_SOURCE_PATH} hex_content HEX)\n+string(REGEX MATCHALL \"([A-Za-z0-9][A-Za-z0-9])\" bytes \"${hex_content}\")",
      "path": "cmake/script/GenerateHeaderFromRaw.cmake",
      "position": 6,
      "original_position": 6,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wanted to suggest`\"([A-Za-z0-9]{2})\"` (or `\\w{2}`), but it seems the regex parser was written almost 40 years ago https://github.com/Kitware/CMake/blob/master/Source/kwsys/RegularExpression.cxx#L628",
      "created_at": "2024-08-08T11:24:50Z",
      "updated_at": "2024-08-08T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709270807",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709270807"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709278334",
      "pull_request_review_id": 2227399035,
      "id": 1709278334,
      "node_id": "PRRC_kwDOABII585l4YR-",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there any way I could help here?",
      "created_at": "2024-08-08T11:29:40Z",
      "updated_at": "2024-08-08T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709278334",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709278334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709374557",
      "pull_request_review_id": 2227710747,
      "id": 1709374557,
      "node_id": "PRRC_kwDOABII585l4vxd",
      "diff_hunk": "@@ -25,10 +24,10 @@ pkgin install gcc12\n \n Then, when configuring, pass the following:\n ```bash\n-./configure\n+cmake -B build\n     ...\n-    CC=\"/usr/pkg/gcc12/bin/gcc\" \\\n-    CXX=\"/usr/pkg/gcc12/bin/g++\" \\\n+    -DCMAKE_C_COMPILER=\"/usr/pkg/gcc12/bin/gcc\" \\\n+    -DCMAKE_CXX_COMPILER=\"/usr/pkg/gcc12/bin/g++\" \\",
      "path": "doc/build-netbsd.md",
      "position": 20,
      "original_position": 20,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1709170006,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The quoting style was inherited from the master branch. Such an approach makes the diff easier to review.",
      "created_at": "2024-08-08T12:24:31Z",
      "updated_at": "2024-08-08T12:24:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709374557",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709374557"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 29,
      "original_start_line": 29,
      "start_side": "RIGHT",
      "line": 30,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709388813",
      "pull_request_review_id": 2227726740,
      "id": 1709388813,
      "node_id": "PRRC_kwDOABII585l4zQN",
      "diff_hunk": "@@ -0,0 +1,22 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+file(READ ${RAW_SOURCE_PATH} hex_content HEX)\n+string(REGEX MATCHALL \"([A-Za-z0-9][A-Za-z0-9])\" bytes \"${hex_content}\")",
      "path": "cmake/script/GenerateHeaderFromRaw.cmake",
      "position": 6,
      "original_position": 6,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1709270807,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. The CMake [Regex Specification](https://cmake.org/cmake/help/latest/command/string.html#regex-specification) does not include `\\w` support.",
      "created_at": "2024-08-08T12:31:17Z",
      "updated_at": "2024-08-08T12:31:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709388813",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709388813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709396728",
      "pull_request_review_id": 2227736762,
      "id": 1709396728,
      "node_id": "PRRC_kwDOABII585l41L4",
      "diff_hunk": "@@ -276,8 +273,8 @@ tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n ## Other commands:\n \n ```shell",
      "path": "doc/build-osx.md",
      "position": 125,
      "original_position": 125,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1709187478,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This PR is intended to focus solely on migration. It helps to review it a lot.\r\n\r\n> Should probably be done in a different PR, though...\r\n\r\nI agree.",
      "created_at": "2024-08-08T12:35:20Z",
      "updated_at": "2024-08-08T12:35:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709396728",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709396728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 275,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709569185",
      "pull_request_review_id": 2227970156,
      "id": 1709569185,
      "node_id": "PRRC_kwDOABII585l5fSh",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've tested on macOS Monterey 12.7.6 (Intel) with Homebrew's `llvm@16`. Everything works flawlessly.\r\n\r\n> Is there any way I could help here?\r\n\r\nMind providing full _verbose_ build logs for both Autotools and CMake please?",
      "created_at": "2024-08-08T13:56:37Z",
      "updated_at": "2024-08-08T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709569185",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709569185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710058792",
      "pull_request_review_id": 2228575499,
      "id": 1710058792,
      "node_id": "PRRC_kwDOABII585l7W0o",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(GNUInstallDirs)\n+include(AddWindowsResources)\n+\n+configure_file(${PROJECT_SOURCE_DIR}/cmake/bitcoin-config.h.in config/bitcoin-config.h @ONLY)\n+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})\n+\n+# After the transition from Autotools to CMake, the obj/ subdirectory\n+# could be dropped as its only purpose was to separate a generated header\n+# from source files.",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 13,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1709105914,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is a TODO comment. I'll update it if/when this file will be touched for other changes.",
      "created_at": "2024-08-08T18:24:14Z",
      "updated_at": "2024-08-08T18:24:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1710058792",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710058792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710065883",
      "pull_request_review_id": 2228584463,
      "id": 1710065883,
      "node_id": "PRRC_kwDOABII585l7Yjb",
      "diff_hunk": "@@ -0,0 +1,32 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Do not use generator expressions in test sources because the\n+# SOURCES property is processed to gather test suite macros.\n+target_sources(test_bitcoin\n+  PRIVATE\n+    init_test_fixture.cpp\n+    wallet_test_fixture.cpp",
      "path": "src/wallet/test/CMakeLists.txt",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1709206550,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Source files were separated in two groups: fixtures and tests themselves. Both groups are sorted alphabetically.\r\n\r\nThat seemed convenient to me while I was working on this script.",
      "created_at": "2024-08-08T18:29:12Z",
      "updated_at": "2024-08-08T18:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1710065883",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710065883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710280041",
      "pull_request_review_id": 2228841738,
      "id": 1710280041,
      "node_id": "PRRC_kwDOABII585l8M1p",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The problem was that [brew gcc](https://github.com/orgs/Homebrew/discussions/4794#discussioncomment-7044468) and Xcode 15 have an duplicate lib:\r\n> ld: warning: ignoring duplicate libraries: '-lc++'gs)\r\n\r\nBut since we've [enabled fatal warnings](https://github.com/bitcoin/bitcoin/blob/166e9fa9a0e8b1d84cce96b447e52a46e043cb40/cmake/module/TryAppendLinkerFlag.cmake#L82) for Mac, we're getting:\r\n> ld: fatal warning(s) induced error (-fatal_warnings)\r\n\r\nBased on:\r\nhttps://stackoverflow.com/questions/77164140/ld-warning-ignoring-duplicate-libraries-lgcc-after-the-recent-update-of-xc we should be able to work around it:\r\n```patch\r\ndiff --git a/cmake/module/TryAppendLinkerFlag.cmake b/cmake/module/TryAppendLinkerFlag.cmake\r\n--- a/cmake/module/TryAppendLinkerFlag.cmake\t(revision ec5d1c372b20d49147813aa0392195a3642b86a1)\r\n+++ b/cmake/module/TryAppendLinkerFlag.cmake\t(date 1723148834055)\r\n@@ -79,7 +79,7 @@\r\n if(MSVC)\r\n   try_append_linker_flag(\"/WX\" VAR working_linker_werror_flag)\r\n elseif(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\r\n-  try_append_linker_flag(\"-Wl,-fatal_warnings\" VAR working_linker_werror_flag)\r\n+  try_append_linker_flag(\"-Wl,-no_warn_duplicate_libraries,-fatal_warnings\" VAR working_linker_werror_flag) # https://github.com/orgs/Homebrew/discussions/4794#discussioncomment-7044468\r\n else()\r\n   try_append_linker_flag(\"-Wl,--fatal-warnings\" VAR working_linker_werror_flag)\r\n endif()\r\n```\r\n\r\nwhich makes building with fuzz possible:\r\n> ld: warning: ignoring duplicate libraries: '-lc++', '../../../libleveldb.a', '../../../libminisketch.a', '../../libbitcoin_common.a', '../../secp256k1/src/libsecp256k1.a', '../../univalue/libunivalue.a'\r\n[100%] Built target fuzz\r\n\r\nand fuzzing can start (with the same error as the Autotools version)\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n% FUZZ=bech32 ./build_fuzz/src/test/fuzz/fuzz  \r\nfuzz(91171,0x2060fcc00) malloc: nano zone abandoned due to inability to reserve vm space.\r\n/opt/homebrew/opt/llvm/bin/../include/c++/v1/variant:495:12: runtime error: call to function decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<0ul, 0ul>::__dispatch[abi:ne180100]<void std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>::__generic_construct[abi:ne180100]<std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>>(std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>&, std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&&)::'lambda'(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&, auto&&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&>(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&) through pointer to incorrect function type 'void (*)((lambda at /opt/homebrew/opt/llvm/bin/../include/c++/v1/variant:814:11) &&, std::__variant_detail::__base<std::__variant_detail::_Trait::_Available, RPCArg::Optional, std::string, UniValue> &, std::__variant_detail::__base<std::__variant_detail::_Trait::_Available, RPCArg::Optional, std::string, UniValue> &&)'\r\nvariant:532: note: decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<0ul, 0ul>::__dispatch[abi:ne180100]<void std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>::__generic_construct[abi:ne180100]<std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>>(std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>&, std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&&)::'lambda'(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&, auto&&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&>(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&) defined here\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /opt/homebrew/opt/llvm/bin/../include/c++/v1/variant:495:12 \r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 534925934\r\nINFO: Loaded 1 modules   (1210318 inline 8-bit counters): 1210318 [0x105d56048, 0x105e7d816), \r\nINFO: Loaded 1 PC tables (1210318 PCs): 1210318 [0x105e7d818,0x1070f54f8), \r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\r\nINFO: A corpus is not provided, starting from an empty corpus\r\n#2      INITED cov: 294 ft: 294 corp: 1/1b exec/s: 0 rss: 74Mb\r\n#3      NEW    cov: 294 ft: 298 corp: 2/2b lim: 4 exec/s: 0 rss: 74Mb L: 1/1 MS: 1 ChangeBit-\r\n#5      NEW    cov: 295 ft: 301 corp: 3/3b lim: 4 exec/s: 0 rss: 74Mb L: 1/1 MS: 2 ShuffleBytes-ChangeBit-\r\n#6      NEW    cov: 295 ft: 303 corp: 4/4b lim: 4 exec/s: 0 rss: 74Mb L: 1/1 MS: 1 ChangeBit-\r\n#7      NEW    cov: 295 ft: 305 corp: 5/5b lim: 4 exec/s: 0 rss: 74Mb L: 1/1 MS: 1 ChangeBit-\r\n\r\n</details>",
      "created_at": "2024-08-08T20:49:35Z",
      "updated_at": "2024-08-08T20:49:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1710280041",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710280041"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711061417",
      "pull_request_review_id": 2229678578,
      "id": 1711061417,
      "node_id": "PRRC_kwDOABII585l_Lmp",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> The problem was that [brew gcc](https://github.com/orgs/Homebrew/discussions/4794#discussioncomment-7044468) and Xcode 15 have an duplicate lib:\r\n\r\nNot sure, given that we aren't using Brew GCC, or Xcode, and the machine I tested on doesn't have either of them installed. The warning output might match, but I don't think this is the correct explanation (and it doesn't explain why it doesn't happen for Autotools build).",
      "created_at": "2024-08-09T08:41:50Z",
      "updated_at": "2024-08-09T08:41:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711061417",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711061417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711130542",
      "pull_request_review_id": 2229763892,
      "id": 1711130542,
      "node_id": "PRRC_kwDOABII585l_ceu",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This definitely fixed it for me, how can I help with the other cases you've mentioned?",
      "created_at": "2024-08-09T09:25:01Z",
      "updated_at": "2024-08-09T09:25:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711130542",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711130542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711152030",
      "pull_request_review_id": 2229790869,
      "id": 1711152030,
      "node_id": "PRRC_kwDOABII585l_hue",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> and it doesn't explain why it doesn't happen for Autotools build\r\n\r\nAutotools lack `-Wl,-fatal_warnings` in the following check: https://github.com/bitcoin/bitcoin/blob/24ced5274438c0185963ae1296ec7dda97ea62f1/configure.ac#L365-L375",
      "created_at": "2024-08-09T09:39:19Z",
      "updated_at": "2024-08-09T09:39:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711152030",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711152030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711157307",
      "pull_request_review_id": 2229797469,
      "id": 1711157307,
      "node_id": "PRRC_kwDOABII585l_jA7",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, but it's still not clear why a compiler we don't use / isn't installed, would be adding libraries to the link line.",
      "created_at": "2024-08-09T09:42:47Z",
      "updated_at": "2024-08-09T09:42:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711157307",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711157307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711188855",
      "pull_request_review_id": 2229838062,
      "id": 1711188855,
      "node_id": "PRRC_kwDOABII585l_qt3",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The proposed `-no_warn_duplicate_libraries` will only fix it for duplicate libs warnings (but any other warning would fail the build). Can we check if we're getting any other warning - or whether the above change fixes it?",
      "created_at": "2024-08-09T10:05:01Z",
      "updated_at": "2024-08-09T10:05:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711188855",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711188855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711197957",
      "pull_request_review_id": 2229849600,
      "id": 1711197957,
      "node_id": "PRRC_kwDOABII585l_s8F",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "On Arm Mac I get the same configuration problem. In the logs I'm seeing:\r\n\r\n```shell\r\nld: warning: ignoring duplicate libraries: '-lc++'\r\nld: fatal warning(s) induced error (-fatal_warnings)\r\n```\r\n\r\nIt works with autotools (perhaps warnings aren't errors in the configure tests?). I've passed the full log to @hebasto.",
      "created_at": "2024-08-09T10:11:44Z",
      "updated_at": "2024-08-09T10:11:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711197957",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711197957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711200712",
      "pull_request_review_id": 2229853644,
      "id": 1711200712,
      "node_id": "PRRC_kwDOABII585l_tnI",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@m3dwards \r\n\r\n> It works with autotools (perhaps warnings aren't errors in the configure tests?).\r\n\r\nSee: https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711152030",
      "created_at": "2024-08-09T10:13:57Z",
      "updated_at": "2024-08-09T10:13:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711200712",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711200712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711219004",
      "pull_request_review_id": 2229877693,
      "id": 1711219004,
      "node_id": "PRRC_kwDOABII585l_yE8",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@hebasto I had a stale version of this page open and hadn't seen the latest comments 🤦",
      "created_at": "2024-08-09T10:27:43Z",
      "updated_at": "2024-08-09T10:27:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711219004",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711219004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711246805",
      "pull_request_review_id": 2229912517,
      "id": 1711246805,
      "node_id": "PRRC_kwDOABII585l_43V",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Similar problem: https://github.com/orgs/Homebrew/discussions/4794",
      "created_at": "2024-08-09T10:49:41Z",
      "updated_at": "2024-08-09T10:49:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711246805",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711246805"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711262045",
      "pull_request_review_id": 2229932275,
      "id": 1711262045,
      "node_id": "PRRC_kwDOABII585l_8ld",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "On my macOS Sonoma 14.6.1:\r\n```\r\n% cat test.cpp \r\nint main() {}\r\n% /opt/homebrew/opt/llvm/bin/clang++ --version\r\nHomebrew clang version 18.1.8\r\nTarget: arm64-apple-darwin23.6.0\r\nThread model: posix\r\nInstalledDir: /opt/homebrew/opt/llvm/bin\r\n% /opt/homebrew/opt/llvm/bin/clang++ -fsanitize=fuzzer -o test test.cpp\r\nld: warning: ignoring duplicate libraries: '-lc++'\r\n```\r\n\r\nUPD. Same for the `llvm@17` package, which provides `clang version 17.0.6`.\r\n\r\nUPD 2. Same for the `llvm@16` package, which provides `clang version 16.0.6`.",
      "created_at": "2024-08-09T11:01:47Z",
      "updated_at": "2024-08-09T11:19:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711262045",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711262045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711302662",
      "pull_request_review_id": 2229980539,
      "id": 1711302662,
      "node_id": "PRRC_kwDOABII585mAGgG",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Similar problem: [github.com/orgs/Homebrew/discussions/4794](https://github.com/orgs/Homebrew/discussions/4794)\r\n\r\nSee: https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1710280041",
      "created_at": "2024-08-09T11:33:53Z",
      "updated_at": "2024-08-09T11:33:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711302662",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711302662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711338908",
      "pull_request_review_id": 2230023787,
      "id": 1711338908,
      "node_id": "PRRC_kwDOABII585mAPWc",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As an alternative workaround, I'd suggest to use an extra configuration option `-DAPPEND_LDFLAGS=\"-Wl,-no_warn_duplicate_libraries\"`.",
      "created_at": "2024-08-09T12:01:43Z",
      "updated_at": "2024-08-09T12:01:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711338908",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711338908"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711371725",
      "pull_request_review_id": 2230064800,
      "id": 1711371725,
      "node_id": "PRRC_kwDOABII585mAXXN",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "btw, is it expected that modifying `TryAppendLinkerFlag.cmake` (e.g. the `try_append_linker_flag(\"-Wl,-fatal_warnings\" VAR working_linker_werror_flag)` line) and rerunning `cmake -B build_fuzz` ignores the update? Shouldn't it detect that this file was changed?\r\nI need to `rm -rfd build_fuzz && cmake -B build_fuzz` for it to be picked up.",
      "created_at": "2024-08-09T12:26:08Z",
      "updated_at": "2024-08-09T12:27:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711371725",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711371725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711383749",
      "pull_request_review_id": 2230080151,
      "id": 1711383749,
      "node_id": "PRRC_kwDOABII585mAaTF",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As a side note, the UBSan errors observed [here](https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1710280041) are not caused by CMake. Other people have observed the same Mac specific behavior with autotools: https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2260863971.",
      "created_at": "2024-08-09T12:34:45Z",
      "updated_at": "2024-08-09T12:34:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711383749",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711383749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711390540",
      "pull_request_review_id": 2230089485,
      "id": 1711390540,
      "node_id": "PRRC_kwDOABII585mAb9M",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> errors observed https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1710280041 are not caused by CMake\r\n\r\nYeah, my example in https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707893570 was also in Autotools.\r\nThe same happens with CMake in https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1710280041",
      "created_at": "2024-08-09T12:39:40Z",
      "updated_at": "2024-08-09T12:39:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711390540",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711390540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711401797",
      "pull_request_review_id": 2230103501,
      "id": 1711401797,
      "node_id": "PRRC_kwDOABII585mAetF",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> btw, is it expected that modifying `TryAppendLinkerFlag.cmake` (e.g. the `try_append_linker_flag(\"-Wl,-fatal_warnings\" VAR working_linker_werror_flag)` line) and rerunning `cmake -B build_fuzz` ignores the update?\r\n\r\nYes, that is because the result is cached.",
      "created_at": "2024-08-09T12:47:22Z",
      "updated_at": "2024-08-09T12:49:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711401797",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711401797"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711403435",
      "pull_request_review_id": 2230105806,
      "id": 1711403435,
      "node_id": "PRRC_kwDOABII585mAfGr",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Of course, but shouldn't this change invalidate the cache?",
      "created_at": "2024-08-09T12:48:37Z",
      "updated_at": "2024-08-09T12:48:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711403435",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711403435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711409392",
      "pull_request_review_id": 2230113768,
      "id": 1711409392,
      "node_id": "PRRC_kwDOABII585mAgjw",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Apparently, not every change invalidates the cache. Mind reporting to https://gitlab.kitware.com/cmake/cmake/-/issues?",
      "created_at": "2024-08-09T12:52:54Z",
      "updated_at": "2024-08-09T12:52:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711409392",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711409392"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711452798",
      "pull_request_review_id": 2230175418,
      "id": 1711452798,
      "node_id": "PRRC_kwDOABII585mArJ-",
      "diff_hunk": "@@ -131,10 +142,14 @@ You may also need to take care of giving the correct path for `clang` and\n `clang++`, like `CC=/path/to/clang CXX=/path/to/clang++` if the non-systems\n `clang` does not come first in your path.\n \n-Full configure that was tested on macOS with `brew` installed `llvm`:\n+Full configuration step that was tested on macOS with `brew` installed `llvm`:\n \n ```sh\n-./configure --enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=$(brew --prefix llvm)/bin/clang CXX=$(brew --prefix llvm)/bin/clang++\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer \\",
      "path": "doc/fuzzing.md",
      "position": 86,
      "original_position": 86,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707740750,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addressed in https://github.com/hebasto/bitcoin/pull/316.",
      "created_at": "2024-08-09T13:19:41Z",
      "updated_at": "2024-08-09T13:19:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711452798",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711452798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 152,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711453187",
      "pull_request_review_id": 2230175825,
      "id": 1711453187,
      "node_id": "PRRC_kwDOABII585mArQD",
      "diff_hunk": "@@ -150,16 +165,18 @@ $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n $ git clone https://github.com/AFLplusplus/AFLplusplus\n $ make -C AFLplusplus/ source-only\n-$ ./autogen.sh\n # If afl-clang-lto is not available, see\n # https://github.com/AFLplusplus/AFLplusplus#a-selecting-the-best-afl-compiler-for-instrumenting-the-target\n-$ CC=$(pwd)/AFLplusplus/afl-clang-lto CXX=$(pwd)/AFLplusplus/afl-clang-lto++ ./configure --enable-fuzz\n-$ make\n-# For macOS you may need to ignore x86 compilation checks when running \"make\". If so,\n-# try compiling using: AFL_NO_X86=1 make\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto++\" \\\n+   -DBUILD_FOR_FUZZING=ON\n+$ cmake --build build_fuzz -j$(nproc)\n+# For macOS you may need to ignore x86 compilation checks when running \"cmake --build\". If so,\n+# try compiling using: `AFL_NO_X86=1 cmake --build build_fuzz -j$(nproc)`",
      "path": "doc/fuzzing.md",
      "position": null,
      "original_position": 107,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707746253,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addressed in https://github.com/hebasto/bitcoin/pull/316.",
      "created_at": "2024-08-09T13:19:54Z",
      "updated_at": "2024-08-09T13:19:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711453187",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711453187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711453782",
      "pull_request_review_id": 2230176570,
      "id": 1711453782,
      "node_id": "PRRC_kwDOABII585mArZW",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> As an alternative workaround, I'd suggest to use an extra configuration option `-DAPPEND_LDFLAGS=\"-Wl,-no_warn_duplicate_libraries\"`.\r\n\r\nAddressed in https://github.com/hebasto/bitcoin/pull/316.",
      "created_at": "2024-08-09T13:20:15Z",
      "updated_at": "2024-08-09T13:20:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711453782",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711453782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711453934",
      "pull_request_review_id": 2230176835,
      "id": 1711453934,
      "node_id": "PRRC_kwDOABII585mArbu",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(GNUInstallDirs)\n+include(AddWindowsResources)\n+\n+configure_file(${PROJECT_SOURCE_DIR}/cmake/bitcoin-config.h.in config/bitcoin-config.h @ONLY)\n+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})\n+\n+# After the transition from Autotools to CMake, the obj/ subdirectory\n+# could be dropped as its only purpose was to separate a generated header\n+# from source files.",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 13,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1709105914,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addressed in https://github.com/hebasto/bitcoin/pull/316.",
      "created_at": "2024-08-09T13:20:23Z",
      "updated_at": "2024-08-09T13:20:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711453934",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711453934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711661191",
      "pull_request_review_id": 2230464760,
      "id": 1711661191,
      "node_id": "PRRC_kwDOABII585mBeCH",
      "diff_hunk": "@@ -12,17 +12,13 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-**Bitcoin Core's `configure` script by default will ignore the depends output.** In\n+**When configuring Bitcoin Core, CMake by default will ignore the depends output.** In\n order for it to pick up libraries, tools, and settings from the depends build,\n-you must set the `CONFIG_SITE` environment variable to point to a `config.site` settings file.\n-Make sure that `CONFIG_SITE` is an absolute path.\n-In the above example, a file named `depends/x86_64-w64-mingw32/share/config.site` will be\n-created. To use it during compilation:\n+you must specify the toolchain file.\n+In the above example, a file named `depends/x86_64-w64-mingw32/toolchain.cmake` will be\n+created. To use it during configuring Bitcoin Core:\n \n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure\n-\n-The default install prefix when using `config.site` is `--prefix=depends/<host-platform-triplet>`,\n-so depends build outputs will be installed in that location.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake",
      "path": "depends/README.md",
      "position": 19,
      "original_position": 19,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I noticed that there are still a few leftover `make` reference in this file, and in other documentation: are we planning on updating them here or in a separate pr, e.g. when removing Autotools?\r\n\r\nI searched for other possible `make` references revealed a few:\r\n* https://github.com/bitcoin/bitcoin/blob/5ebb4063571aabd89c2d7ed6c2e70d27636efdeb/src/test/README.md?plain=1#L18-L24\r\n* https://github.com/bitcoin/bitcoin/blob/183e2fd6b55d84829faf70ba74d3f8865807772a/src/secp256k1/doc/release-process.md?plain=1#L20-L23\r\n* https://github.com/bitcoin/bitcoin/blob/14093d5d243f6eb9cfef721c80f92848d95032ee/doc/productivity.md?plain=1#L68\r\n* https://github.com/bitcoin/bitcoin/blob/463356d8b8948df118eda269827ca1a6da7d3132/depends/README.md?plain=1#L99\r\n* https://github.com/bitcoin/bitcoin/blob/d8513fe41102dcbfc05235f3b95e33eb1878f880/doc/benchmarking.md?plain=1#L16\r\n* https://github.com/bitcoin/bitcoin/blob/fad444f6e1b1ce5c1572c773db4a9a098c7a0b96/contrib/guix/INSTALL.md?plain=1#L244-L261\r\n* https://github.com/bitcoin/bitcoin/blob/fad444f6e1b1ce5c1572c773db4a9a098c7a0b96/contrib/guix/README.md?plain=1#L263\r\n* https://github.com/bitcoin/bitcoin/blob/fadb06c361bbda78192d89fd06195f0aa5418c56/test/README.md?plain=1#L16\r\n* https://github.com/bitcoin/bitcoin/blob/faeb5b59a098578b3e8c552d35b5ba02b12af14d/README.md?plain=1#L51",
      "created_at": "2024-08-09T15:17:34Z",
      "updated_at": "2024-08-09T15:17:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711661191",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711661191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711674603",
      "pull_request_review_id": 2230482172,
      "id": 1711674603,
      "node_id": "PRRC_kwDOABII585mBhTr",
      "diff_hunk": "@@ -12,17 +12,13 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-**Bitcoin Core's `configure` script by default will ignore the depends output.** In\n+**When configuring Bitcoin Core, CMake by default will ignore the depends output.** In\n order for it to pick up libraries, tools, and settings from the depends build,\n-you must set the `CONFIG_SITE` environment variable to point to a `config.site` settings file.\n-Make sure that `CONFIG_SITE` is an absolute path.\n-In the above example, a file named `depends/x86_64-w64-mingw32/share/config.site` will be\n-created. To use it during compilation:\n+you must specify the toolchain file.\n+In the above example, a file named `depends/x86_64-w64-mingw32/toolchain.cmake` will be\n+created. To use it during configuring Bitcoin Core:\n \n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure\n-\n-The default install prefix when using `config.site` is `--prefix=depends/<host-platform-triplet>`,\n-so depends build outputs will be installed in that location.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake",
      "path": "depends/README.md",
      "position": 19,
      "original_position": 19,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1711661191,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> are we planning on updating them here or in a separate pr, e.g. when removing Autotools?\r\n\r\nHere. Feel free to open a PR in https://github.com/hebasto/bitcoin/pulls against the `cmake-staging` branch. After merging, the changes will be pulled in here during the next update.\r\n\r\nUPD. Not all mentioned cases are related to CMake migration. For instance, depends still use the GNU Make.",
      "created_at": "2024-08-09T15:26:24Z",
      "updated_at": "2024-08-09T15:28:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711674603",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711674603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712605045",
      "pull_request_review_id": 2231402133,
      "id": 1712605045,
      "node_id": "PRRC_kwDOABII585mFEd1",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 45,
      "original_position": 45,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Q: given that FUZZ and BENCH are disabled by default, would it maybe make sense to make them separate projects? I'm not exactly familiar with what that would involve and don't have strong arguments either way, was just wondering when investigating some other cmake related issue.",
      "created_at": "2024-08-10T08:28:16Z",
      "updated_at": "2024-08-10T10:46:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712605045",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712605045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 45,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712605154",
      "pull_request_review_id": 2231402133,
      "id": 1712605154,
      "node_id": "PRRC_kwDOABII585mFEfi",
      "diff_hunk": "@@ -0,0 +1,68 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+add_library(bitcoin_crypto STATIC EXCLUDE_FROM_ALL\n+  aes.cpp\n+  chacha20.cpp\n+  chacha20poly1305.cpp\n+  hex_base.cpp\n+  hkdf_sha256_32.cpp\n+  hmac_sha256.cpp\n+  hmac_sha512.cpp\n+  poly1305.cpp",
      "path": "src/crypto/CMakeLists.txt",
      "position": 13,
      "original_position": 13,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: alphabetic ordering?\r\n```patch\r\ndiff --git a/src/crypto/CMakeLists.txt b/src/crypto/CMakeLists.txt\r\n--- a/src/crypto/CMakeLists.txt\t(revision 92f7fc21768b0d898655d68b5d76ff09ff71c682)\r\n+++ b/src/crypto/CMakeLists.txt\t(date 1723279760256)\r\n@@ -4,19 +4,19 @@\r\n \r\n add_library(bitcoin_crypto STATIC EXCLUDE_FROM_ALL\r\n   aes.cpp\r\n-  chacha20.cpp\r\n   chacha20poly1305.cpp\r\n+  chacha20.cpp\r\n   hex_base.cpp\r\n   hkdf_sha256_32.cpp\r\n   hmac_sha256.cpp\r\n   hmac_sha512.cpp\r\n-  poly1305.cpp\r\n   muhash.cpp\r\n+  poly1305.cpp\r\n   ripemd160.cpp\r\n   sha1.cpp\r\n-  sha256.cpp\r\n-  sha256_sse4.cpp\r\n   sha3.cpp\r\n+  sha256_sse4.cpp\r\n+  sha256.cpp\r\n   sha512.cpp\r\n   siphash.cpp\r\n   ../support/cleanse.cpp\r\n```",
      "created_at": "2024-08-10T08:29:20Z",
      "updated_at": "2024-08-10T10:44:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712605154",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712605154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712620747",
      "pull_request_review_id": 2231402133,
      "id": 1712620747,
      "node_id": "PRRC_kwDOABII585mFITL",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Apparently, not every change invalidates the cache\r\n\r\nMy understanding is that we're already avoiding the recompilation when the source didn't change, but when `working_linker_werror_flag` changes, that's ignored.\r\nI haven't opened a bug report to CMake since it seems to me we can fix it ourselved, see: https://github.com/hebasto/bitcoin/pull/319",
      "created_at": "2024-08-10T10:35:02Z",
      "updated_at": "2024-08-10T10:44:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712620747",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712620747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712621112",
      "pull_request_review_id": 2231402133,
      "id": 1712621112,
      "node_id": "PRRC_kwDOABII585mFIY4",
      "diff_hunk": "@@ -0,0 +1,59 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Wallet functionality used by bitcoind and bitcoin-wallet executables.\n+add_library(bitcoin_wallet STATIC EXCLUDE_FROM_ALL\n+  coincontrol.cpp\n+  coinselection.cpp\n+  context.cpp\n+  crypter.cpp\n+  db.cpp\n+  dump.cpp\n+  external_signer_scriptpubkeyman.cpp\n+  feebumper.cpp\n+  fees.cpp\n+  interfaces.cpp\n+  load.cpp\n+  migrate.cpp\n+  receive.cpp\n+  rpc/addresses.cpp\n+  rpc/backup.cpp\n+  rpc/coins.cpp\n+  rpc/encrypt.cpp\n+  rpc/spend.cpp\n+  rpc/signmessage.cpp",
      "path": "src/wallet/CMakeLists.txt",
      "position": 25,
      "original_position": 25,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit, feel free to ignore these if not important:\r\n```suggestion\r\n  rpc/spend.cpp\r\n  rpc/signmessage.cpp\r\n```",
      "created_at": "2024-08-10T10:37:40Z",
      "updated_at": "2024-08-10T10:44:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712621112",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712621112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 24,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712621771",
      "pull_request_review_id": 2231402133,
      "id": 1712621771,
      "node_id": "PRRC_kwDOABII585mFIjL",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(GNUInstallDirs)\n+include(AddWindowsResources)\n+\n+configure_file(${PROJECT_SOURCE_DIR}/cmake/bitcoin-config.h.in config/bitcoin-config.h @ONLY)\n+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})\n+\n+# After the transition from Autotools to CMake, the obj/ subdirectory\n+# could be dropped as its only purpose was to separate a generated header\n+# from source files.\n+add_custom_target(generate_build_info\n+  BYPRODUCTS ${PROJECT_BINARY_DIR}/src/obj/build.h\n+  COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_BINARY_DIR}/src/obj\n+  COMMAND ${CMAKE_COMMAND} -DBUILD_INFO_HEADER_PATH=${PROJECT_BINARY_DIR}/src/obj/build.h -DSOURCE_DIR=${PROJECT_SOURCE_DIR} -P ${PROJECT_SOURCE_DIR}/cmake/script/GenerateBuildInfo.cmake\n+  COMMENT \"Generating obj/build.h\"\n+  VERBATIM\n+)\n+add_library(bitcoin_clientversion OBJECT EXCLUDE_FROM_ALL\n+  clientversion.cpp\n+)\n+target_compile_definitions(bitcoin_clientversion\n+  PRIVATE\n+    HAVE_BUILD_INFO\n+)\n+target_link_libraries(bitcoin_clientversion\n+  PRIVATE\n+    core_interface\n+)\n+add_dependencies(bitcoin_clientversion generate_build_info)\n+\n+add_subdirectory(crypto)\n+add_subdirectory(univalue)\n+add_subdirectory(util)\n+if(WITH_MULTIPROCESS)\n+  add_subdirectory(ipc)\n+endif()\n+\n+#=============================\n+# secp256k1 subtree\n+#=============================\n+message(\"\")\n+message(\"Configuring secp256k1 subtree...\")\n+set(SECP256K1_DISABLE_SHARED ON CACHE BOOL \"\" FORCE)\n+set(SECP256K1_ENABLE_MODULE_ECDH OFF CACHE BOOL \"\" FORCE)\n+set(SECP256K1_ENABLE_MODULE_RECOVERY ON CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_BENCHMARK OFF CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_TESTS ${BUILD_TESTS} CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_EXHAUSTIVE_TESTS ${BUILD_TESTS} CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_EXAMPLES OFF CACHE BOOL \"\" FORCE)\n+include(GetTargetInterface)\n+# -fsanitize and related flags apply to both C++ and C,\n+# so we can pass them down to libsecp256k1 as CFLAGS.\n+get_target_interface(core_sanitizer_cxx_flags \"\" sanitize_interface COMPILE_OPTIONS)\n+set(SECP256K1_LATE_CFLAGS ${core_sanitizer_cxx_flags} CACHE STRING \"\" FORCE)\n+unset(core_sanitizer_cxx_flags)\n+# We want to build libsecp256k1 with the most tested RelWithDebInfo configuration.\n+enable_language(C)\n+foreach(config IN LISTS CMAKE_BUILD_TYPE CMAKE_CONFIGURATION_TYPES)\n+  if(config STREQUAL \"\")\n+    continue()\n+  endif()\n+  string(TOUPPER \"${config}\" config)\n+  set(CMAKE_C_FLAGS_${config} \"${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\n+endforeach()\n+# If the CFLAGS environment variable is defined during building depends\n+# and configuring this build system, its content might be duplicated.\n+if(DEFINED ENV{CFLAGS})\n+  deduplicate_flags(CMAKE_C_FLAGS)\n+endif()\n+set(CMAKE_EXPORT_COMPILE_COMMANDS OFF)\n+add_subdirectory(secp256k1)\n+set(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n+string(APPEND CMAKE_C_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CFLAGS}\")\n+\n+# Stable, backwards-compatible consensus functionality.\n+add_library(bitcoin_consensus STATIC EXCLUDE_FROM_ALL\n+  arith_uint256.cpp\n+  consensus/merkle.cpp\n+  consensus/tx_check.cpp\n+  hash.cpp\n+  primitives/block.cpp\n+  primitives/transaction.cpp\n+  pubkey.cpp\n+  script/interpreter.cpp\n+  script/script.cpp\n+  script/script_error.cpp\n+  uint256.cpp\n+)\n+target_link_libraries(bitcoin_consensus\n+  PRIVATE\n+    core_interface\n+    bitcoin_crypto\n+    secp256k1\n+)\n+\n+if(WITH_ZMQ)\n+  add_subdirectory(zmq)\n+endif()\n+\n+# Home for common functionality shared by different executables and libraries.\n+# Similar to `bitcoin_util` library, but higher-level.\n+add_library(bitcoin_common STATIC EXCLUDE_FROM_ALL\n+  addresstype.cpp",
      "path": "src/CMakeLists.txt",
      "position": 106,
      "original_position": 106,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit:\r\n```patch\r\ndiff --git a/src/CMakeLists.txt b/src/CMakeLists.txt\r\n--- a/src/CMakeLists.txt\t(revision 92f7fc21768b0d898655d68b5d76ff09ff71c682)\r\n+++ b/src/CMakeLists.txt\t(date 1723286445028)\r\n@@ -106,8 +106,8 @@\r\n   addresstype.cpp\r\n   base58.cpp\r\n   bech32.cpp\r\n-  chainparamsbase.cpp\r\n   chainparams.cpp\r\n+  chainparamsbase.cpp\r\n   coins.cpp\r\n   common/args.cpp\r\n   common/bloom.cpp\r\n@@ -130,18 +130,18 @@\r\n   key.cpp\r\n   key_io.cpp\r\n   merkleblock.cpp\r\n+  net_permissions.cpp\r\n   net_types.cpp\r\n   netaddress.cpp\r\n   netbase.cpp\r\n-  net_permissions.cpp\r\n   outputtype.cpp\r\n   policy/feerate.cpp\r\n   policy/policy.cpp\r\n   protocol.cpp\r\n   psbt.cpp\r\n+  rpc/external_signer.cpp\r\n   rpc/rawtransaction_util.cpp\r\n   rpc/request.cpp\r\n-  rpc/external_signer.cpp\r\n   rpc/util.cpp\r\n   scheduler.cpp\r\n   script/descriptor.cpp\r\n```",
      "created_at": "2024-08-10T10:41:31Z",
      "updated_at": "2024-08-10T10:44:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712621771",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712621771"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712625608",
      "pull_request_review_id": 2231420769,
      "id": 1712625608,
      "node_id": "PRRC_kwDOABII585mFJfI",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 45,
      "original_position": 45,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could you elaborate please? What are the benefits of maintaining the build system in separate projects? Is this practice used by other open-source projects?",
      "created_at": "2024-08-10T11:11:54Z",
      "updated_at": "2024-08-10T11:11:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712625608",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712625608"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 45,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626562",
      "pull_request_review_id": 2231421684,
      "id": 1712626562,
      "node_id": "PRRC_kwDOABII585mFJuC",
      "diff_hunk": "@@ -0,0 +1,234 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(CheckCXXSourceCompiles)\n+include(CheckCXXSymbolExists)\n+include(CheckIncludeFileCXX)\n+\n+# The following HAVE_{HEADER}_H variables go to the bitcoin-config.h header.\n+check_include_file_cxx(sys/prctl.h HAVE_SYS_PRCTL_H)\n+check_include_file_cxx(sys/resources.h HAVE_SYS_RESOURCES_H)\n+check_include_file_cxx(sys/vmmeter.h HAVE_SYS_VMMETER_H)\n+check_include_file_cxx(vm/vm_param.h HAVE_VM_VM_PARAM_H)\n+\n+check_cxx_symbol_exists(O_CLOEXEC \"fcntl.h\" HAVE_O_CLOEXEC)\n+\n+check_include_file_cxx(unistd.h HAVE_UNISTD_H)\n+if(HAVE_UNISTD_H)\n+  check_cxx_symbol_exists(fdatasync \"unistd.h\" HAVE_FDATASYNC)\n+  check_cxx_symbol_exists(fork \"unistd.h\" HAVE_DECL_FORK)\n+  check_cxx_symbol_exists(pipe2 \"unistd.h\" HAVE_DECL_PIPE2)\n+  check_cxx_symbol_exists(setsid \"unistd.h\" HAVE_DECL_SETSID)\n+endif()\n+\n+check_include_file_cxx(sys/types.h HAVE_SYS_TYPES_H)\n+check_include_file_cxx(ifaddrs.h HAVE_IFADDRS_H)\n+if(HAVE_SYS_TYPES_H AND HAVE_IFADDRS_H)\n+  include(TestAppendRequiredLibraries)\n+  test_append_socket_library(core_interface)\n+endif()\n+\n+include(TestAppendRequiredLibraries)\n+test_append_atomic_library(core_interface)\n+\n+check_cxx_symbol_exists(std::system \"cstdlib\" HAVE_STD_SYSTEM)\n+check_cxx_symbol_exists(::_wsystem \"stdlib.h\" HAVE__WSYSTEM)\n+if(HAVE_STD_SYSTEM OR HAVE__WSYSTEM)\n+  set(HAVE_SYSTEM 1)\n+endif()\n+\n+check_include_file_cxx(string.h HAVE_STRING_H)",
      "path": "cmake/introspection.cmake",
      "position": null,
      "original_position": 41,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707417887,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Resolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2281111100.",
      "created_at": "2024-08-10T11:19:23Z",
      "updated_at": "2024-08-10T11:19:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712626562",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626562"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626637",
      "pull_request_review_id": 2231421733,
      "id": 1712626637,
      "node_id": "PRRC_kwDOABII585mFJvN",
      "diff_hunk": "@@ -131,10 +142,14 @@ You may also need to take care of giving the correct path for `clang` and\n `clang++`, like `CC=/path/to/clang CXX=/path/to/clang++` if the non-systems\n `clang` does not come first in your path.\n \n-Full configure that was tested on macOS with `brew` installed `llvm`:\n+Full configuration step that was tested on macOS with `brew` installed `llvm`:\n \n ```sh\n-./configure --enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=$(brew --prefix llvm)/bin/clang CXX=$(brew --prefix llvm)/bin/clang++\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer \\",
      "path": "doc/fuzzing.md",
      "position": 86,
      "original_position": 86,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707740750,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Resolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2281111100.",
      "created_at": "2024-08-10T11:19:51Z",
      "updated_at": "2024-08-10T11:19:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712626637",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 152,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626646",
      "pull_request_review_id": 2231421742,
      "id": 1712626646,
      "node_id": "PRRC_kwDOABII585mFJvW",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 45,
      "original_position": 45,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might be controversial, but other Bitcoin clones seem to split into multiple projects after their CMake migrations: \r\n* https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/bench/CMakeLists.txt#L3\r\n* https://github.com/bitcoin-cash-node/bitcoin-cash-node/blob/master/src/bench/CMakeLists.txt#L3\r\n* https://github.com/bitcoin-sv/bitcoin-sv/blob/master/src/test/CMakeLists.txt#L5",
      "created_at": "2024-08-10T11:19:57Z",
      "updated_at": "2024-08-10T11:19:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712626646",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 45,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626661",
      "pull_request_review_id": 2231421765,
      "id": 1712626661,
      "node_id": "PRRC_kwDOABII585mFJvl",
      "diff_hunk": "@@ -150,16 +165,18 @@ $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n $ git clone https://github.com/AFLplusplus/AFLplusplus\n $ make -C AFLplusplus/ source-only\n-$ ./autogen.sh\n # If afl-clang-lto is not available, see\n # https://github.com/AFLplusplus/AFLplusplus#a-selecting-the-best-afl-compiler-for-instrumenting-the-target\n-$ CC=$(pwd)/AFLplusplus/afl-clang-lto CXX=$(pwd)/AFLplusplus/afl-clang-lto++ ./configure --enable-fuzz\n-$ make\n-# For macOS you may need to ignore x86 compilation checks when running \"make\". If so,\n-# try compiling using: AFL_NO_X86=1 make\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto++\" \\\n+   -DBUILD_FOR_FUZZING=ON\n+$ cmake --build build_fuzz -j$(nproc)\n+# For macOS you may need to ignore x86 compilation checks when running \"cmake --build\". If so,\n+# try compiling using: `AFL_NO_X86=1 cmake --build build_fuzz -j$(nproc)`",
      "path": "doc/fuzzing.md",
      "position": null,
      "original_position": 107,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707746253,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Resolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2281111100.",
      "created_at": "2024-08-10T11:20:09Z",
      "updated_at": "2024-08-10T11:20:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712626661",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626746",
      "pull_request_review_id": 2231421861,
      "id": 1712626746,
      "node_id": "PRRC_kwDOABII585mFJw6",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(GNUInstallDirs)\n+include(AddWindowsResources)\n+\n+configure_file(${PROJECT_SOURCE_DIR}/cmake/bitcoin-config.h.in config/bitcoin-config.h @ONLY)\n+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})\n+\n+# After the transition from Autotools to CMake, the obj/ subdirectory\n+# could be dropped as its only purpose was to separate a generated header\n+# from source files.",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 13,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1709105914,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Resolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2281111100.",
      "created_at": "2024-08-10T11:21:11Z",
      "updated_at": "2024-08-10T11:21:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712626746",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626746"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712627020",
      "pull_request_review_id": 2231422085,
      "id": 1712627020,
      "node_id": "PRRC_kwDOABII585mFJ1M",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I wasn't able to run the fuzz tests with cmake\r\n\r\nResolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2281111100.",
      "created_at": "2024-08-10T11:23:09Z",
      "updated_at": "2024-08-10T11:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712627020",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712627020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712627346",
      "pull_request_review_id": 2231422341,
      "id": 1712627346,
      "node_id": "PRRC_kwDOABII585mFJ6S",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 45,
      "original_position": 45,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Still curios about:\r\n> What are the benefits of maintaining the build system in separate projects?",
      "created_at": "2024-08-10T11:25:46Z",
      "updated_at": "2024-08-10T11:25:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712627346",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712627346"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 45,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712628124",
      "pull_request_review_id": 2231422999,
      "id": 1712628124,
      "node_id": "PRRC_kwDOABII585mFKGc",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 45,
      "original_position": 45,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm also curious, that's what I'm asking basically, why did the other clones decide to do this differently.\r\n\r\nI could only find general `Modularity and Reusability/Scalability/Improved Dependency Management/Isolation of Build Configurations` arguments online, but not sure any applies here, hence my question.",
      "created_at": "2024-08-10T11:32:08Z",
      "updated_at": "2024-08-10T11:32:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712628124",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712628124"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 45,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712633831",
      "pull_request_review_id": 2231428308,
      "id": 1712633831,
      "node_id": "PRRC_kwDOABII585mFLfn",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 45,
      "original_position": 45,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Might be controversial, but other Bitcoin clones seem to split into multiple projects after their CMake migrations:\r\n> \r\n>    * https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/bench/CMakeLists.txt#L3\r\n\r\nIt is not controversial, just broken :)\r\n\r\nThe `cmake -S src/bench -B build` command fails.",
      "created_at": "2024-08-10T12:18:00Z",
      "updated_at": "2024-08-10T12:18:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712633831",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712633831"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 45,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712637404",
      "pull_request_review_id": 2231431606,
      "id": 1712637404,
      "node_id": "PRRC_kwDOABII585mFMXc",
      "diff_hunk": "@@ -0,0 +1,68 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+add_library(bitcoin_crypto STATIC EXCLUDE_FROM_ALL\n+  aes.cpp\n+  chacha20.cpp\n+  chacha20poly1305.cpp\n+  hex_base.cpp\n+  hkdf_sha256_32.cpp\n+  hmac_sha256.cpp\n+  hmac_sha512.cpp\n+  poly1305.cpp",
      "path": "src/crypto/CMakeLists.txt",
      "position": 13,
      "original_position": 13,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605154,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See https://github.com/hebasto/bitcoin/pull/320.",
      "created_at": "2024-08-10T12:47:06Z",
      "updated_at": "2024-08-10T12:47:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712637404",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712637404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712637433",
      "pull_request_review_id": 2231431634,
      "id": 1712637433,
      "node_id": "PRRC_kwDOABII585mFMX5",
      "diff_hunk": "@@ -0,0 +1,59 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Wallet functionality used by bitcoind and bitcoin-wallet executables.\n+add_library(bitcoin_wallet STATIC EXCLUDE_FROM_ALL\n+  coincontrol.cpp\n+  coinselection.cpp\n+  context.cpp\n+  crypter.cpp\n+  db.cpp\n+  dump.cpp\n+  external_signer_scriptpubkeyman.cpp\n+  feebumper.cpp\n+  fees.cpp\n+  interfaces.cpp\n+  load.cpp\n+  migrate.cpp\n+  receive.cpp\n+  rpc/addresses.cpp\n+  rpc/backup.cpp\n+  rpc/coins.cpp\n+  rpc/encrypt.cpp\n+  rpc/spend.cpp\n+  rpc/signmessage.cpp",
      "path": "src/wallet/CMakeLists.txt",
      "position": 25,
      "original_position": 25,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712621112,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See https://github.com/hebasto/bitcoin/pull/320.",
      "created_at": "2024-08-10T12:47:17Z",
      "updated_at": "2024-08-10T12:47:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712637433",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712637433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 24,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712637443",
      "pull_request_review_id": 2231431642,
      "id": 1712637443,
      "node_id": "PRRC_kwDOABII585mFMYD",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(GNUInstallDirs)\n+include(AddWindowsResources)\n+\n+configure_file(${PROJECT_SOURCE_DIR}/cmake/bitcoin-config.h.in config/bitcoin-config.h @ONLY)\n+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})\n+\n+# After the transition from Autotools to CMake, the obj/ subdirectory\n+# could be dropped as its only purpose was to separate a generated header\n+# from source files.\n+add_custom_target(generate_build_info\n+  BYPRODUCTS ${PROJECT_BINARY_DIR}/src/obj/build.h\n+  COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_BINARY_DIR}/src/obj\n+  COMMAND ${CMAKE_COMMAND} -DBUILD_INFO_HEADER_PATH=${PROJECT_BINARY_DIR}/src/obj/build.h -DSOURCE_DIR=${PROJECT_SOURCE_DIR} -P ${PROJECT_SOURCE_DIR}/cmake/script/GenerateBuildInfo.cmake\n+  COMMENT \"Generating obj/build.h\"\n+  VERBATIM\n+)\n+add_library(bitcoin_clientversion OBJECT EXCLUDE_FROM_ALL\n+  clientversion.cpp\n+)\n+target_compile_definitions(bitcoin_clientversion\n+  PRIVATE\n+    HAVE_BUILD_INFO\n+)\n+target_link_libraries(bitcoin_clientversion\n+  PRIVATE\n+    core_interface\n+)\n+add_dependencies(bitcoin_clientversion generate_build_info)\n+\n+add_subdirectory(crypto)\n+add_subdirectory(univalue)\n+add_subdirectory(util)\n+if(WITH_MULTIPROCESS)\n+  add_subdirectory(ipc)\n+endif()\n+\n+#=============================\n+# secp256k1 subtree\n+#=============================\n+message(\"\")\n+message(\"Configuring secp256k1 subtree...\")\n+set(SECP256K1_DISABLE_SHARED ON CACHE BOOL \"\" FORCE)\n+set(SECP256K1_ENABLE_MODULE_ECDH OFF CACHE BOOL \"\" FORCE)\n+set(SECP256K1_ENABLE_MODULE_RECOVERY ON CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_BENCHMARK OFF CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_TESTS ${BUILD_TESTS} CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_EXHAUSTIVE_TESTS ${BUILD_TESTS} CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_EXAMPLES OFF CACHE BOOL \"\" FORCE)\n+include(GetTargetInterface)\n+# -fsanitize and related flags apply to both C++ and C,\n+# so we can pass them down to libsecp256k1 as CFLAGS.\n+get_target_interface(core_sanitizer_cxx_flags \"\" sanitize_interface COMPILE_OPTIONS)\n+set(SECP256K1_LATE_CFLAGS ${core_sanitizer_cxx_flags} CACHE STRING \"\" FORCE)\n+unset(core_sanitizer_cxx_flags)\n+# We want to build libsecp256k1 with the most tested RelWithDebInfo configuration.\n+enable_language(C)\n+foreach(config IN LISTS CMAKE_BUILD_TYPE CMAKE_CONFIGURATION_TYPES)\n+  if(config STREQUAL \"\")\n+    continue()\n+  endif()\n+  string(TOUPPER \"${config}\" config)\n+  set(CMAKE_C_FLAGS_${config} \"${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\n+endforeach()\n+# If the CFLAGS environment variable is defined during building depends\n+# and configuring this build system, its content might be duplicated.\n+if(DEFINED ENV{CFLAGS})\n+  deduplicate_flags(CMAKE_C_FLAGS)\n+endif()\n+set(CMAKE_EXPORT_COMPILE_COMMANDS OFF)\n+add_subdirectory(secp256k1)\n+set(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n+string(APPEND CMAKE_C_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CFLAGS}\")\n+\n+# Stable, backwards-compatible consensus functionality.\n+add_library(bitcoin_consensus STATIC EXCLUDE_FROM_ALL\n+  arith_uint256.cpp\n+  consensus/merkle.cpp\n+  consensus/tx_check.cpp\n+  hash.cpp\n+  primitives/block.cpp\n+  primitives/transaction.cpp\n+  pubkey.cpp\n+  script/interpreter.cpp\n+  script/script.cpp\n+  script/script_error.cpp\n+  uint256.cpp\n+)\n+target_link_libraries(bitcoin_consensus\n+  PRIVATE\n+    core_interface\n+    bitcoin_crypto\n+    secp256k1\n+)\n+\n+if(WITH_ZMQ)\n+  add_subdirectory(zmq)\n+endif()\n+\n+# Home for common functionality shared by different executables and libraries.\n+# Similar to `bitcoin_util` library, but higher-level.\n+add_library(bitcoin_common STATIC EXCLUDE_FROM_ALL\n+  addresstype.cpp",
      "path": "src/CMakeLists.txt",
      "position": 106,
      "original_position": 106,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712621771,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See https://github.com/hebasto/bitcoin/pull/320.",
      "created_at": "2024-08-10T12:47:24Z",
      "updated_at": "2024-08-10T12:47:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712637443",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712637443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712955667",
      "pull_request_review_id": 2231784814,
      "id": 1712955667,
      "node_id": "PRRC_kwDOABII585mGaET",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 45,
      "original_position": 45,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> The cmake -S src/bench -B build command fails.\r\n\r\nIt seems to me [they're using `ninja`](https://github.com/bitcoin-cash-node/bitcoin-cash-node/blob/master/doc/benchmarking.md?plain=1#L8) for these tasks, i.e. [`ninja bench-bitcoin`](https://github.com/bitcoin-cash-node/bitcoin-cash-node/blob/master/doc/ninja_targets.md?plain=1#L251) instead of raw cmake.",
      "created_at": "2024-08-11T10:20:20Z",
      "updated_at": "2024-08-11T10:20:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712955667",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712955667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 45,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712956905",
      "pull_request_review_id": 2231786120,
      "id": 1712956905,
      "node_id": "PRRC_kwDOABII585mGaXp",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 45,
      "original_position": 45,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> > The cmake -S src/bench -B build command fails.\r\n> \r\n> It seems to me [they're using `ninja`](https://github.com/bitcoin-cash-node/bitcoin-cash-node/blob/master/doc/benchmarking.md?plain=1#L8) for these tasks, i.e. [`ninja bench-bitcoin`](https://github.com/bitcoin-cash-node/bitcoin-cash-node/blob/master/doc/ninja_targets.md?plain=1#L251) instead of raw cmake.\r\n\r\nIt seems this discussion has gone off topic :)",
      "created_at": "2024-08-11T10:27:50Z",
      "updated_at": "2024-08-11T10:27:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712956905",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712956905"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 45,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712957036",
      "pull_request_review_id": 2231786327,
      "id": 1712957036,
      "node_id": "PRRC_kwDOABII585mGaZs",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 45,
      "original_position": 45,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Didn't realize that, please resolve it in that case",
      "created_at": "2024-08-11T10:29:08Z",
      "updated_at": "2024-08-11T10:29:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712957036",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712957036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 45,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712974890",
      "pull_request_review_id": 2231805083,
      "id": 1712974890,
      "node_id": "PRRC_kwDOABII585mGewq",
      "diff_hunk": "@@ -12,17 +12,13 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-**Bitcoin Core's `configure` script by default will ignore the depends output.** In\n+**When configuring Bitcoin Core, CMake by default will ignore the depends output.** In\n order for it to pick up libraries, tools, and settings from the depends build,\n-you must set the `CONFIG_SITE` environment variable to point to a `config.site` settings file.\n-Make sure that `CONFIG_SITE` is an absolute path.\n-In the above example, a file named `depends/x86_64-w64-mingw32/share/config.site` will be\n-created. To use it during compilation:\n+you must specify the toolchain file.\n+In the above example, a file named `depends/x86_64-w64-mingw32/toolchain.cmake` will be\n+created. To use it during configuring Bitcoin Core:\n \n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure\n-\n-The default install prefix when using `config.site` is `--prefix=depends/<host-platform-triplet>`,\n-so depends build outputs will be installed in that location.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake",
      "path": "depends/README.md",
      "position": 19,
      "original_position": 19,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1711661191,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How much rewrite do we need to do here?\r\nI have pushed https://github.com/hebasto/bitcoin/pull/322 to synchronize on the style, let me know how you imagine it.",
      "created_at": "2024-08-11T12:18:08Z",
      "updated_at": "2024-08-11T12:18:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712974890",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712974890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1713012418",
      "pull_request_review_id": 2231842092,
      "id": 1713012418,
      "node_id": "PRRC_kwDOABII585mGn7C",
      "diff_hunk": "@@ -12,17 +12,13 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-**Bitcoin Core's `configure` script by default will ignore the depends output.** In\n+**When configuring Bitcoin Core, CMake by default will ignore the depends output.** In\n order for it to pick up libraries, tools, and settings from the depends build,\n-you must set the `CONFIG_SITE` environment variable to point to a `config.site` settings file.\n-Make sure that `CONFIG_SITE` is an absolute path.\n-In the above example, a file named `depends/x86_64-w64-mingw32/share/config.site` will be\n-created. To use it during compilation:\n+you must specify the toolchain file.\n+In the above example, a file named `depends/x86_64-w64-mingw32/toolchain.cmake` will be\n+created. To use it during configuring Bitcoin Core:\n \n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure\n-\n-The default install prefix when using `config.site` is `--prefix=depends/<host-platform-triplet>`,\n-so depends build outputs will be installed in that location.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake",
      "path": "depends/README.md",
      "position": 19,
      "original_position": 19,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1711661191,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">    * https://github.com/bitcoin/bitcoin/blob/14093d5d243f6eb9cfef721c80f92848d95032ee/doc/productivity.md?plain=1#L68\r\n\r\nSee https://github.com/hebasto/bitcoin/pull/323.",
      "created_at": "2024-08-11T15:54:30Z",
      "updated_at": "2024-08-11T15:54:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1713012418",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1713012418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1713786718",
      "pull_request_review_id": 2233041214,
      "id": 1713786718,
      "node_id": "PRRC_kwDOABII585mJk9e",
      "diff_hunk": "@@ -12,17 +12,13 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-**Bitcoin Core's `configure` script by default will ignore the depends output.** In\n+**When configuring Bitcoin Core, CMake by default will ignore the depends output.** In\n order for it to pick up libraries, tools, and settings from the depends build,\n-you must set the `CONFIG_SITE` environment variable to point to a `config.site` settings file.\n-Make sure that `CONFIG_SITE` is an absolute path.\n-In the above example, a file named `depends/x86_64-w64-mingw32/share/config.site` will be\n-created. To use it during compilation:\n+you must specify the toolchain file.\n+In the above example, a file named `depends/x86_64-w64-mingw32/toolchain.cmake` will be\n+created. To use it during configuring Bitcoin Core:\n \n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure\n-\n-The default install prefix when using `config.site` is `--prefix=depends/<host-platform-triplet>`,\n-so depends build outputs will be installed in that location.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake",
      "path": "depends/README.md",
      "position": 19,
      "original_position": 19,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1711661191,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also https://github.com/hebasto/bitcoin/pull/324.",
      "created_at": "2024-08-12T13:29:39Z",
      "updated_at": "2024-08-12T13:29:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1713786718",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1713786718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714285678",
      "pull_request_review_id": 2233879918,
      "id": 1714285678,
      "node_id": "PRRC_kwDOABII585mLexu",
      "diff_hunk": "@@ -0,0 +1,31 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+if(NOT MSVC)\n+  find_program(CCACHE_EXECUTABLE ccache)\n+  if(CCACHE_EXECUTABLE)\n+    execute_process(\n+      COMMAND readlink -f ${CMAKE_CXX_COMPILER}\n+      OUTPUT_VARIABLE compiler_resolved_link\n+      ERROR_QUIET\n+      OUTPUT_STRIP_TRAILING_WHITESPACE\n+    )\n+    if(CCACHE_EXECUTABLE STREQUAL compiler_resolved_link)\n+      set(WITH_CCACHE \"ccache masquerades as the compiler\")\n+    elseif(WITH_CCACHE)\n+      list(APPEND CMAKE_C_COMPILER_LAUNCHER ${CCACHE_EXECUTABLE})\n+      list(APPEND CMAKE_CXX_COMPILER_LAUNCHER ${CCACHE_EXECUTABLE})\n+    endif()\n+    try_append_cxx_flags(\"-fdebug-prefix-map=A=B\" TARGET core_interface SKIP_LINK\n+      IF_CHECK_PASSED \"-fdebug-prefix-map=${PROJECT_SOURCE_DIR}=.\"",
      "path": "cmake/ccache.cmake",
      "position": 21,
      "original_position": 21,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "original_commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note that with 80073c75d1218759f58ceefcb41b4fbc4a3d1ecd I could right click and debug and CLion would stop at a breakpoint, but with 67b1e236334f38ec4e4d2251dbdfb790f20ed88b (adding `debug-prefix-map`) it won't stop at breakpoints anymore.\r\n<img width=\"500\" src=\"https://github.com/user-attachments/assets/66651d62-2dc9-4fa7-9f8f-d45b240aa048\">\r\n\r\nBut as stated in the docs, setting the `target.source-map` in `~/.lldbini` fixed debugging again.",
      "created_at": "2024-08-12T19:41:58Z",
      "updated_at": "2024-08-12T19:41:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1714285678",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714285678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    }
  ]
}