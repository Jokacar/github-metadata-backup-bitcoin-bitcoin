{
  "type": "issue",
  "issue": {
    "id": 1323281380,
    "node_id": "I_kwDOABII585O36vk",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/25752",
    "number": 25752,
    "state": "closed",
    "state_reason": "not_planned",
    "title": "rest: Further API and code cleanup with query parameters",
    "body": "## Introduction\r\n\r\nIn RESTful APIs, path parameters (e.g. `/some/unique/resource/`) are [typically](https://rapidapi.com/blog/api-glossary/parameters/query/) used to represent resources, and query parameters (e.g. `?sort=asc`) are used to control how these resources are being loaded through e.g. sorting, pagination, filtering, ...\r\n\r\nThe design of the [current REST API endpoints](https://github.com/bitcoin/bitcoin/blob/master/doc/REST-interface.md) is quite non-standard in a few ways, I've listed some examples below under \"Undesirable behaviour examples\". Generally, it relies on a number of path (or path-like) parameters that really should be query parameters. Besides being unintuitive for users, I also found the code can be much cleaner when using a generalized interface for query and path parameters. The first work towards this was already done in #24098, but there are still a number of issues outstanding, as e.g. discussed [here](https://github.com/bitcoin/bitcoin/pull/24098#discussion_r790336549) and [here](https://github.com/bitcoin/bitcoin/pull/24098#pullrequestreview-863331148).\r\n\r\n## Suggested changes\r\n\r\nI suggest (and have already prepared the code) to clean up the interface and the code. Besides perhaps the `-deprecatedrest` startup flag, no new user-facing functionality is introduced. Specifically, the relevant proposed changes are:\r\n- introduce a `-deprecatedrest` startup option to allow users to preserve REST endpoint functionality while they upgrade their dependencies, similar to `-deprecatedrpc`\r\n- expand the `HTTPRequest` interface to include easy-to-read functions to access path parameters, like #24098 introduced for query parameters: `HTTPRequest::GetPath()` and `HTTPRequest::GetPathParameter()`. This allows cleaning up the interface quite a bit, including removing the duplicated `strURIpart` that was passed as a third argument to each endpoint (but this is unintuitive and duplicated: the path data is already in the HTTPRequest object).\r\n- further streamline the endpoint URIs:\r\n  - in all endpoints: remove the path-like dot-separated format strings (e.g. `.json`) in favour of a query parameter (`?format=json`), which can default to `json` (especially useful in endpoints that only accept json)\r\n  - use `?from_blockhash=<blockhash>` query parameter instead of a path parameter in `/rest/headers` and `/rest/blockfilterheaders/`, since it is a collection endpoint (multiple resources are returned)\r\n  - deprecate `/rest/block/notxdetails` in favour of a `?txdetails=<true|false>` parameter in `/rest/block`\r\n\r\nThe suggested implementation keeps everything backwards compatible (with the `-deprecatedrest` functions enabled). Even though it means there is a bit more review overhead, I think the tradeoff is acceptable - I did my best to minimize code complexity due to this compatibility.\r\n\r\n\r\n## PRs\r\n\r\nThe suggested changes can largely be separated into 4 small-ish PRs (there are some dependencies, so they build sequentially - but shouldn't be too hard to rebase/reorder/leave things out). I have released the PRs as draft already, just to make it easier to look at the proposed changes.\r\n\r\n1. #25753\r\n1. #25754\r\n1. #25755\r\n1. #25756\r\n\r\n## Discussion questions/notes\r\n\r\nI've already written most of the code, but before fleshing out the PRs I'm first looking to get some feedback on the general concept and approach.\r\n\r\nA couple of notes/things to discuss:\r\n- the LoC change is quite significant, is this a wortwhile upgrade?\r\n- should we maintain backwards compatibility with `-deprecatedrest`, not have backwards compatibility at all, or hide the backwards compatibility from the user?\r\n- `-deprecatedrest` is documented to, like the RPC, operate on a per-endpoint basis. However, since the first PR (format string) affects all endpoints, I thought that would not be user-friendly and instead opted to group them by functional change. Going forward, since we now have a rather extensible interface with the query parameters, I expect we'll use `-deprecatedrest` on a per-endpoint basis indeed.\r\n\r\n\r\n## Undesirable behaviour examples\r\n\r\n- Require the user to explicitly define parameters where only 1 value is allowed anyway. For example, `rest/chaininfo/` only accepts `json` as a format but throws if we do not explicitly define `json` to be the format\r\n- [duplicate `deploymentinto` endpoints required](https://github.com/bitcoin/bitcoin/pull/25412#discussion_r927815259)\r\n- Unnecessary code coupling in [`ParseDataFormat()`](https://github.com/bitcoin/bitcoin/blob/c991132b0437b737502ae1f18480e00f84430b72/src/rest.cpp#L134-L157) where we need one function to get the entire query path and then magically remove the format string (e.g. `.json`) from it and return it separately.\r\n- Two different endpoints to support the [`notxdetails`](https://github.com/bitcoin/bitcoin/blob/master/src/rest.cpp#L944-L945) option in `/rest/block`, this could just be one endpoint with an optional default query parameter\r\n- APIs can now be upgraded in a backwards-compatible way more easily, since query parameters are named and thus do not rely on position and can be optional\r\n\r\n",
    "user": {
      "login": "stickies-v",
      "id": 69010457,
      "node_id": "MDQ6VXNlcjY5MDEwNDU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stickies-v",
      "html_url": "https://github.com/stickies-v",
      "followers_url": "https://api.github.com/users/stickies-v/followers",
      "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
      "organizations_url": "https://api.github.com/users/stickies-v/orgs",
      "repos_url": "https://api.github.com/users/stickies-v/repos",
      "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/stickies-v/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 8,
    "closed_at": "2023-03-13T11:27:43Z",
    "created_at": "2022-07-30T20:34:30Z",
    "updated_at": "2023-03-13T11:27:43Z"
  },
  "events": [
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-30T20:35:05Z",
      "updated_at": "2022-07-30T20:35:05Z",
      "source": {
        "issue": {
          "id": 1323281899,
          "node_id": "PR_kwDOABII5848X1y7",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25753",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25753/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25753/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25753/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25753",
          "number": 25753,
          "state": "closed",
          "state_reason": null,
          "title": "rest: Move format string from path-like parameter to query parameter",
          "body": "**Draft, for reference only to support #25752 for discussion on concept and approach. Code and tests should be fully functional, but still to be considered rough.**\r\n\r\n## Brief summary\r\nAll REST API endpoints require the user to specify the response format by including a format string at the end of the path (e.g. `/rest/chaininfo.json`). This PR removes the path-like parameter and updates all endpoints to use a `?format` query parameter, which defaults to `json` if unspecified.\r\n\r\nPrevious behaviour can be preserved through `-deprecatedrest=format`\r\n\r\nBenefits:\r\n- only use (standard) path and query parameters, no custom dot-separated parameter\r\n- a default `json` response format seems reasonable, and was trivial to implement with a query parameter\r\n- simplify code since we don't need bespoke logic to parse the format, e.g. remove `ParseDataFormat()` function which had too many responsibilities\r\n- Introduce `-deprecatedrest` startup option, similar to `-deprecatedrpc`. With this option, we keep API changes backwards compatible for as long as the `-deprecatedrest` option is available (usually 1 version?).",
          "user": {
            "login": "stickies-v",
            "id": 69010457,
            "node_id": "MDQ6VXNlcjY5MDEwNDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stickies-v",
            "html_url": "https://github.com/stickies-v",
            "followers_url": "https://api.github.com/users/stickies-v/followers",
            "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
            "organizations_url": "https://api.github.com/users/stickies-v/orgs",
            "repos_url": "https://api.github.com/users/stickies-v/repos",
            "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stickies-v/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25753",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25753",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25753.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25753.patch"
          },
          "closed_at": "2023-03-13T11:28:07Z",
          "created_at": "2022-07-30T20:35:05Z",
          "updated_at": "2023-03-13T11:28:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-30T20:35:18Z",
      "updated_at": "2022-07-30T20:35:18Z",
      "source": {
        "issue": {
          "id": 1323282093,
          "node_id": "PR_kwDOABII5848X110",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25754",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25754/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25754/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25754/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25754",
          "number": 25754,
          "state": "closed",
          "state_reason": null,
          "title": "rest: Extend HTTPRequest interface to support querying path (parameters)",
          "body": "**Draft, for reference only to support #25752 for discussion on concept and approach. Code and tests should be fully functional, but still to be considered rough.** Commits specific to this PR start from [rest: store endpoint prefix data in HTTPRequest](https://github.com/bitcoin/bitcoin/pull/25754/commits/dd99555d1e82b05674581584c3d8278472710a45).\r\n\r\n## Brief summary\r\n#24098 introduced a simple `HTTPRequest::GetQueryParameter()` function to access query parameters directly from the request, which is passed to every endpoint function. This PR extends this interface by introducing a similarly behaving `HTTPRequest::GetPath()` and `HTTPRequest::GetPathParameter()`. \r\n\r\nPreviously, path data was accessed through the `strURIpart` parameter which was passed to all endpoints. Since this data was already contained in the `HTTPRequest req` and we now have `HTTPRequest::GetPath()` and `HTTPRequest::GetPathParameter()` which are more intuitive to use, the `strURIpart` parameter is removed from the endpoint callback, simplifying the interface.\r\n\r\nFinally, the `?count` query parameter introduced by #24098 is now made required, unless `-deprecatedrest=count` is enabled. This way users understand the endpoint is updating, and we can reasonably remove it in some future update to simplify the code.",
          "user": {
            "login": "stickies-v",
            "id": 69010457,
            "node_id": "MDQ6VXNlcjY5MDEwNDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stickies-v",
            "html_url": "https://github.com/stickies-v",
            "followers_url": "https://api.github.com/users/stickies-v/followers",
            "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
            "organizations_url": "https://api.github.com/users/stickies-v/orgs",
            "repos_url": "https://api.github.com/users/stickies-v/repos",
            "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stickies-v/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25754",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25754",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25754.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25754.patch"
          },
          "closed_at": "2023-03-13T11:28:18Z",
          "created_at": "2022-07-30T20:35:17Z",
          "updated_at": "2023-03-13T11:28:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-30T20:35:30Z",
      "updated_at": "2022-07-30T20:35:30Z",
      "source": {
        "issue": {
          "id": 1323282274,
          "node_id": "PR_kwDOABII5848X14j",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25755",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25755/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25755/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25755/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25755",
          "number": 25755,
          "state": "closed",
          "state_reason": null,
          "title": "rest: Use from_blockhash and txdetails query parameters",
          "body": "**Draft, for reference only to support #25752 for discussion on concept and approach. Code and tests should be fully functional, but still to be considered rough.** Commits specific to this PR start from [rest: use from_blockhash query parameter](https://github.com/bitcoin/bitcoin/pull/25755/commits/afdaeb65342c9d6d1dddf651a92e07648d3a8dc2).\r\n\r\n## Brief summary\r\n\r\n### from_blockhash\r\n`/rest/headers` and `/rest/blockfilterheaders` are collection endpoints, i.e. they return an array of objects. The [<BLOCK-HASH>](https://github.com/bitcoin/bitcoin/blob/master/doc/REST-interface.md#blockheaders) was used not reference that specific resource, but to return all objects _since_ that block hash. Filtering parameters like this are normally provided via query parameters, for reasons such as being composable (multiple filters can be combined) and supporting default values.\r\n\r\nAs such, this PR removes removes the `<BLOCK-HASH>` from the path and inserts the `from_blockhash` query parameter for `/rest/headers` and `/rest/blockfilterheaders`. Behaviour can be reverted by using `-deprecatedrest=blockhash`.\r\n\r\n### txdetails\r\nIn `/rest/block/notxdetails/`, `notxdetails` is not a resource - it controls how much information we want to have included in the response. As above, this PR converts the `/notxdetails` path parameter into a `?txdetails=<true|false>` query parameter. Behaviour can be reverted by using `-deprecatedrest=txdetails`.",
          "user": {
            "login": "stickies-v",
            "id": 69010457,
            "node_id": "MDQ6VXNlcjY5MDEwNDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stickies-v",
            "html_url": "https://github.com/stickies-v",
            "followers_url": "https://api.github.com/users/stickies-v/followers",
            "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
            "organizations_url": "https://api.github.com/users/stickies-v/orgs",
            "repos_url": "https://api.github.com/users/stickies-v/repos",
            "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stickies-v/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25755",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25755",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25755.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25755.patch"
          },
          "closed_at": "2023-03-13T11:28:24Z",
          "created_at": "2022-07-30T20:35:30Z",
          "updated_at": "2023-03-13T11:28:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-30T20:35:50Z",
      "updated_at": "2022-07-30T20:35:50Z",
      "source": {
        "issue": {
          "id": 1323282527,
          "node_id": "PR_kwDOABII5848X18U",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25756",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25756/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25756/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25756/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25756",
          "number": 25756,
          "state": "closed",
          "state_reason": null,
          "title": "rest: Remove support for a number of `-deprecatedrest` options",
          "body": "**Draft, for reference only to support #25752 for discussion on concept and approach. Code and tests should be fully functional, but still to be considered rough.** Commits specific to this PR start from [rest: remove support for -deprecatedrest=format](https://github.com/bitcoin/bitcoin/pull/25756/commits/5b2c40acf5c223313598eec61648e6d8d3521dae).\r\n\r\n## Brief summary\r\n#25752 introduced a number of `-deprecatedrest` options to keep old behaviour on most REST endpoints. With this PR, we remove this support to clean up the code.\r\n\r\nThis PR should only be merged when we want to remove backwards compatibility, which I expect will be at least 1 release after merging the last PR in #25752. I've just prepared the code already to show how it can clean up the endpoint logic.",
          "user": {
            "login": "stickies-v",
            "id": 69010457,
            "node_id": "MDQ6VXNlcjY5MDEwNDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stickies-v",
            "html_url": "https://github.com/stickies-v",
            "followers_url": "https://api.github.com/users/stickies-v/followers",
            "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
            "organizations_url": "https://api.github.com/users/stickies-v/orgs",
            "repos_url": "https://api.github.com/users/stickies-v/repos",
            "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stickies-v/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25756",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25756",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25756.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25756.patch"
          },
          "closed_at": "2023-03-13T11:28:29Z",
          "created_at": "2022-07-30T20:35:49Z",
          "updated_at": "2023-03-13T11:28:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 7095464130,
      "node_id": "LE_lADOABII585O36vkzwAAAAGm7DDC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7095464130",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-30T20:50:26Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "subscribed",
      "id": 7128928204,
      "node_id": "SE_lADOABII585O36vkzwAAAAGo6s_M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7128928204",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-04T15:20:55Z"
    },
    {
      "event": "commented",
      "id": 1207444515,
      "node_id": "IC_kwDOABII585H-CQj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207444515",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-07T16:45:47Z",
      "updated_at": "2022-08-07T16:45:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "My impression from looking at the REST interface the last time was also that it's not standard in several ways. But it also seemed unclear who is actually using the REST interface if I remember correctly. That made it hard to decide both if anyone is facing issues from the changes and even if it's actually worth making improvements at all.\r\n\r\nIs there a list of projects that are using the REST interface? I think that would be very helpful anyway, in order to collect targeted feedback from the actual users that these changes will affect.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1207444515",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-08T15:35:18Z",
      "updated_at": "2022-08-08T15:35:18Z",
      "source": {
        "issue": {
          "id": 1023340020,
          "node_id": "I_kwDOABII5848_u30",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23259",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23259/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23259/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23259/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/23259",
          "number": 23259,
          "state": "closed",
          "state_reason": "completed",
          "title": "Deprecate REST Api and Replace with Python share script",
          "body": "The REST API introduces functionality that is redundant with the JSON RPCs, but it's designed to be an unauthenticated connection (but still trusted). This is a vauge security model and introduces additional code into bitcoin core.\r\n\r\nInstead, it might make sense to deprecate the REST Interface and replace it with a share python script that gives a similar interface. This server connection can receive a whitelistrpc'd credential that only enables the rest API queries. The python script can detect if e.g. twisted is available and run with that or use python3 built in http.server.\r\n\r\nOne justification for maintaining it's existence in present form is that I have heard is that performance is better than the JSON RPCs.\r\n\r\n\r\nIn terms of deprecation, one path would be (over a few releases):\r\n\r\nPhase 1: Marking Deprecated + Adding Python Script Server\r\nPhase 2: Making compilation of rest optional, default disabled\r\nPhase 3: Total Removal\r\n\r\nirc log discussion from #bitcoin-core-dev more generally about moving http outside of core\r\n\r\n```\r\n[2021-09-22T15:55:55.479Z] <jeremyrubin> I think what we'd want is to remove the http support from Bitcoin core and then build a separate binary with a simple http proxy to it\r\n[2021-09-22T15:56:31.719Z] <jeremyrubin> That doesn't even have to live in core.\r\n[2021-09-22T15:56:45.905Z] <sipa> that's also a possibility, but probably not a short-term one\r\n[2021-09-22T15:56:55.548Z] <sipa> (also, unix domain sockets don't exist on windows...)\r\n[2021-09-22T15:56:59.655Z] <jeremyrubin> It would be a breaking change so would be a maj release\r\n[2021-09-22T15:57:15.533Z] <jeremyrubin> I think they have something that can be used the same way these days\r\n[2021-09-22T15:57:24.404Z] <sipa> right, but we'd need that too :)\r\n[2021-09-22T15:57:58.032Z] <jeremyrubin> I think it's basically the exact same\r\n[2021-09-22T15:58:41.309Z] <darosior> Windows does support Unix Domain Sockets since W10\r\n[2021-09-22T15:58:45.306Z] <jeremyrubin> Just different headers and negative FDs\r\n[2021-09-22T16:06:49.684Z] <jeremyrubin> I think over the span of a few releases could reasonably do deprecated, not built by default, removed.\r\n[2021-09-22T16:30:01.771Z] <laanwj> yes, modern windows has them too\r\n[2021-09-22T16:36:51.958Z] <laanwj> i might give 'simple line protocol over UNIX socket' a try, if there is really enthousiasm for adding such a thing; at least i don't have to fight libevent's http client then, that's what i lost interest in\r\n[2021-09-22T16:43:05.850Z] <laanwj> i guess the only context information from HTTP that is used inside RPC calls is the wallet name from the path, in case of wallet RPC calls\r\n[2021-09-22T16:44:50.909Z] <laanwj> but would be straightforward to wrap in an object that provides the context otherwise, e.g. { 'wallet': 'name', 'params': {...} }\r\n[2021-09-22T16:57:06.615Z] <jeremyrubin> i guess the only other question is the rest API thing?\r\n[2021-09-22T16:58:39.695Z] <jeremyrubin> that also seems like stuff that should just be a proxy over core tho\r\n[2021-09-22T16:58:58.789Z] <jeremyrubin> (or just removed and see if anyone complains?)\r\n[2021-09-22T17:01:57.578Z] <laanwj> rest is very closely bound to http, how i imagine this would purely be for RPC calls (all information on rest is also available through RPC it's 'extra')\r\n[2021-09-22T17:02:59.063Z] <laanwj> i think that could very well be an optional thing that people can enable if they want it\r\n[2021-09-22T17:03:56.020Z] <laanwj> sharing the http server between rest and the json-rpc interface was always a bit questionable, they are separate things\r\n[2021-09-22T17:05:22.061Z] <jeremyrubin> laanwj does anyone use the rest interface in practice?\r\n[2021-09-22T17:05:56.144Z] <laanwj> i have no idea\r\n[2021-09-22T17:06:39.211Z] <jeremyrubin> i've never heard of anyone using it either\r\n[2021-09-22T17:06:45.038Z] <laanwj> it's much faster than JSON-RPC for some things as it saves on formatting and the info can (basically) directly be dumped to the socket\r\n[2021-09-22T17:10:11.984Z] <laanwj> though it's not as great as it sounds, i wanted to add a rest call for streaming utxo data once (without buffering it in memory first), but libevent's http server wouldn't let me due to not really being thread safe\r\n[2021-09-22T17:12:58.334Z] <laanwj> mostly it's not even issues with http itself we run against, but issues with libevent's http, but adding another dependency for http would be not nice\r\n[2021-09-22T17:17:50.893Z] <jeremyrubin> laanwj i think given that there are few users for rest (most likely) we could ship a /share script with a python http proxy for rest, altho performance might suffer a bit (maybe we add a raw response mode for the json rpcs if it's a concern?)\r\n[2021-09-22T17:20:19.972Z] <laanwj> yes...\r\n[2021-09-22T17:22:52.016Z] <laanwj> in the case where we directly 'own' the socket, and the protocol is up to us to define, in principle it could reply in a different way than a line with JSON on it if so requested, this does make clients that want to support that more complex, so everything should at least support JSON line in JSON line out\r\n[2021-09-22T17:24:11.086Z] <laanwj> honestly that kind of thing seems far enough away, i'm not sure it's worth spendng time on, it works as it does now, not sure about the added benefit of doing things slightly different\r\n[2021-09-22T17:25:23.066Z] <laanwj> i think my reply on twitter was more hypothetical, in a perfect clean-slate world where you don't have to balance so many different concerns and backwards compatibility, it would have been nice\r\n```",
          "user": {
            "login": "JeremyRubin",
            "id": 886523,
            "node_id": "MDQ6VXNlcjg4NjUyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeremyRubin",
            "html_url": "https://github.com/JeremyRubin",
            "followers_url": "https://api.github.com/users/JeremyRubin/followers",
            "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
            "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
            "repos_url": "https://api.github.com/users/JeremyRubin/repos",
            "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 18,
          "closed_at": "2022-12-16T15:59:44Z",
          "created_at": "2021-10-12T04:11:45Z",
          "updated_at": "2022-12-16T15:59:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1208296520,
      "node_id": "IC_kwDOABII585IBSRI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1208296520",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-08T15:45:50Z",
      "updated_at": "2022-08-08T15:45:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "> and even if it's actually worth making improvements at all.\r\n\r\nI think there's also a bit of a chicken-and-egg problem here: since the REST API is limited in functionality and not very easy-to-use, it will have little adoption, and because it has little adoption, it's not worked on much. \r\n\r\n> Is there a list of projects that are using the REST interface? I think that would be very helpful anyway, in order to collect targeted feedback from the actual users that these changes will affect.\r\n\r\nI agree, that would be useful to have. I have not seen such a list, and don't know about any big projects that currently use it. If I find anything, I'll keep track of it.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1208296520",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "commented",
      "id": 1209327967,
      "node_id": "IC_kwDOABII585IFOFf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1209327967",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-09T12:38:15Z",
      "updated_at": "2022-08-09T12:38:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Is there a list of projects that are using the REST interface? I think that would be very helpful anyway, in order to collect targeted feedback from the actual users that these changes will affect.\r\n\r\nI use the REST interface in two of my projects:\r\n- My mempool-observer queries `/rest/mempool/contents.json` as I've found it to be faster than the`getrawmempool` RPC, especially significant when my mempool is full. Also, using the REST interface instead of the RPC interface, I don't have to bake in any user/pass configuration. Also, no dependency on JSON RPC library. Using e.g. a Python/other RPC->REST proxy as discussed in #23259 would work, but also means an additional service that can break. \r\n- A WIP project of mine similar to https://forkmonitor.info uses the `getchaintips` RPC (I think this information could also be exposed via REST) and queries headers both via `getblockheader` and the old `/rest/headers/<COUNT>/<BLOCK-HASH>.bin` REST interface. I need to query many headers, so I prefer getting 2000 headers via REST than headers one-by-one via the `getblockheader` RPC (maybe getting a range of headers should be added to the RPC interface). I currently use the old, deprecated REST interface as I want to support older Bitcoin Core versions (similar to forkmonitor.info I want to query e.g. Bitcoin Core version v0.10 and v23 to compare their chain tips). Going forward, I think I will have to keep functionality for the deprecated interface and add the new interface.\r\n\r\nHappy to provide more usage feedback - feel free to ask.\r\n\r\nI think, if we keep the REST interface it's worth modernizing it. The proposed changes in your first three PRs seem reasonable.  Having a `-deprecatedrest` option for a while (one or two major releases) makes sense, but the old endpoints should be dropped eventually. \r\n",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1209327967",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "commented",
      "id": 1210045142,
      "node_id": "IC_kwDOABII585IH9LW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1210045142",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-10T01:18:22Z",
      "updated_at": "2022-08-10T01:18:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "why not just /rest/1/ or something to denote request versions? and then we can eventually drop the \"implicit v0\" query version / only turn it on if -deprecatedrest=0 is set? (parsed as comma separated list of deprecated rest versions)?\r\n\r\nThis way a node can serve both upgraded and unupgraded applications (e.g., suppose you run @0xB10C's services that upgrade AND some lightning thing @TheBlueMatt uses rest for, then both can work)",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1210045142",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "mentioned",
      "id": 7159754165,
      "node_id": "MEE_lADOABII585O36vkzwAAAAGqwS21",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7159754165",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-10T01:18:23Z"
    },
    {
      "event": "subscribed",
      "id": 7159754169,
      "node_id": "SE_lADOABII585O36vkzwAAAAGqwS25",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7159754169",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-10T01:18:23Z"
    },
    {
      "event": "mentioned",
      "id": 7159754172,
      "node_id": "MEE_lADOABII585O36vkzwAAAAGqwS28",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7159754172",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-10T01:18:23Z"
    },
    {
      "event": "subscribed",
      "id": 7159754177,
      "node_id": "SE_lADOABII585O36vkzwAAAAGqwS3B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7159754177",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-10T01:18:23Z"
    },
    {
      "event": "commented",
      "id": 1211988396,
      "node_id": "IC_kwDOABII585IPXms",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211988396",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-11T13:26:55Z",
      "updated_at": "2022-08-17T08:32:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the feedback and use case 0xB10C, that's helpful to know. I think extending the RPC to support fetching multiple blockheaders would make sense if that otherwise prevents the REST API from being updated.\r\n\r\n> why not just /rest/1/ or something to denote request versions?\r\n\r\nI initially implemented it that way and it would be my preferred approach, but since it (admittedly not by a crazy amount) increased the amount of code to review for (what I assumed to be) no substantial benefit in this particular case so I scrapped it. If indeed we want one bitcoind to be able to serve both v0 and v1 endpoints then that would be the way to go. But, practically, I'm not sure there's real demand for that? E.g. in your example if just one of both (external) services supports both versions, then your REST server can just run that shared version. This seems to be the case in this example since @0xB10C plans to add support for both interfaces. It would generally be a better design though, so I'll look into it again - thanks for the feedback.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1211988396",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "mentioned",
      "id": 7171655510,
      "node_id": "MEE_lADOABII585O36vkzwAAAAGrdsdW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7171655510",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-11T13:26:55Z"
    },
    {
      "event": "subscribed",
      "id": 7171655522,
      "node_id": "SE_lADOABII585O36vkzwAAAAGrdsdi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7171655522",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-11T13:26:55Z"
    },
    {
      "event": "commented",
      "id": 1217197363,
      "node_id": "IC_kwDOABII585IjPUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217197363",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T21:42:10Z",
      "updated_at": "2022-08-16T21:42:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "I use the REST Interface and I agree it should be improved.\r\n\r\n\r\n> in all endpoints: remove the path-like dot-separated format strings (e.g. .json) in favour of a query parameter (?format=json), which can default to json (especially useful in endpoints that only accept json)\r\n\r\nI agree 1000%, `format` is definitely something we can use with `query`. \r\n\r\n> deprecate /rest/block/notxdetails in favour of a ?txdetails=<true|false> parameter in /rest/block\r\n\r\nMaybe +0. I don't think it's a bad practice having `/notxdetails` in this case. But ok if we decide to change it.\r\n\r\n> the LoC change is quite significant, is this a wortwhile upgrade?\r\nSpecially about the path-like dot-separated format strings, I think so. I'd like to see the REST interface more friendly and robust, and more used.\r\n\r\nAnother improvement I've thought about REST Interface, maybe we could add authentication/authorization and could work with more sensitive endpoints. I couldn't find why we don't have auth yet (no one worked on that or is there any limitation?).",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1217197363",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "commented",
      "id": 1219800660,
      "node_id": "IC_kwDOABII585ItK5U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1219800660",
      "actor": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T18:24:59Z",
      "updated_at": "2022-08-18T18:24:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Although https://github.com/bitcoin/bitcoin/pull/7759 was about streaming the entire UTXO set, chunking it was further discussed in https://github.com/bitcoin/bitcoin/issues/14584. \r\nIs pagination/chunking something that could become easier through the proposed changes? Maybe by supporting a `skip` query parameter?",
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1219800660",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T19:04:07Z",
      "updated_at": "2022-09-29T19:04:07Z",
      "source": {
        "issue": {
          "id": 1391356579,
          "node_id": "PR_kwDOABII584_4cIP",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26207",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26207/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26207/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26207/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26207",
          "number": 26207,
          "state": "closed",
          "state_reason": null,
          "title": "rest: add verbose and mempool_sequence query params for mempool/contents",
          "body": "The verbose mempool json response can get very large. This adds an option to return the non-verbose response of just the txids. It is identical to the rpc response so the diff here is minimal. This also adds the mempool_sequence parameter for rpc consistency. Verbose defaults to true to remain backwards compatible.\r\n\r\nIt uses query parameters to be compatible with the efforts in https://github.com/bitcoin/bitcoin/issues/25752.",
          "user": {
            "login": "andrewtoth",
            "id": 237213,
            "node_id": "MDQ6VXNlcjIzNzIxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewtoth",
            "html_url": "https://github.com/andrewtoth",
            "followers_url": "https://api.github.com/users/andrewtoth/followers",
            "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
            "repos_url": "https://api.github.com/users/andrewtoth/repos",
            "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26207",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26207",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26207.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26207.patch"
          },
          "closed_at": "2023-03-15T23:39:47Z",
          "created_at": "2022-09-29T19:04:06Z",
          "updated_at": "2023-06-06T15:14:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1465971535,
      "node_id": "IC_kwDOABII585XYPNP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1465971535",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-13T11:27:42Z",
      "updated_at": "2023-03-13T11:27:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "Closing this (and draft PRs). I still think the suggested changes are an improvement, and that the state of our current interfaces is an impediment to (new) developers building on Bitcoin Core instead of using third-party services, but as evidenced by my lack of activity on this issue I don't feel anymore like this is currently a particularly worthwhile endeavour given current development resources and other active projects that require developer attention.\r\n\r\nMoreover, I think I'm now leaning more towards Bitcoin Core having a single fully functional, fully standard, performant interface (whether that's RPC or REST can be debated) to reduce maintenance burden. Optionally, light-weight wrapper services (e.g. https://github.com/bitcoin/bitcoin/issues/23259) can be provided to make it easier for developers to build on Core with technologies they're familiar with, but this need not necessarily be a Core project.\r\n\r\nThank you everyone for your input on this issue, my apologies for not making better use of your time here.\r\n\r\n---\r\n\r\n> Is pagination/chunking something that could become easier through the proposed changes?\r\n\r\nEach endpoint has to implement pagination because it's resource specific, but adding a `skip` parameter is trivial since https://github.com/bitcoin/bitcoin/pull/24098. Typically paginated REST responses include some headers such as `X-Page`, `X-Total-Pages`, ... for which additional helper utilities could be added to avoid code duplication - those are not included in any of the PRs in this issue.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/25752#issuecomment-1465971535",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25752"
    },
    {
      "event": "closed",
      "id": 8730589714,
      "node_id": "CE_lADOABII585O36vkzwAAAAIIYjoS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8730589714",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-13T11:27:43Z"
    },
    {
      "event": "referenced",
      "id": 8761181833,
      "node_id": "REFE_lADOABII585O36vkzwAAAAIKNQaJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8761181833",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ebb15ea75ad1e9c270ecf52e4a0cb67dc0199366",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/ebb15ea75ad1e9c270ecf52e4a0cb67dc0199366",
      "created_at": "2023-03-15T23:39:39Z"
    },
    {
      "event": "referenced",
      "id": 8762739450,
      "node_id": "REFE_lADOABII585O36vkzwAAAAIKTMr6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8762739450",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0dea134c109bbf40e40fa09762ca2002b139abe1",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/0dea134c109bbf40e40fa09762ca2002b139abe1",
      "created_at": "2023-03-16T04:27:19Z"
    },
    {
      "event": "referenced",
      "id": 8762785456,
      "node_id": "REFE_lADOABII585O36vkzwAAAAIKTX6w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8762785456",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "595099b00b65204a861399cdff9bded615cd3a1f",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/595099b00b65204a861399cdff9bded615cd3a1f",
      "created_at": "2023-03-16T04:38:11Z"
    }
  ]
}