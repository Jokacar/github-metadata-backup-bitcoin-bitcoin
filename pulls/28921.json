{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921",
    "id": 1609914906,
    "node_id": "PR_kwDOABII585f9Voa",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28921",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28921.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28921.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28921",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28921/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/a506148b7a7058b4c60e5c497e70688134ee9a3f",
    "number": 28921,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "multiprocess: Add basic type conversion hooks",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add type conversion hooks to allow `UniValue` objects, and objects that have `CDataStream` `Serialize` and `Unserialize` methods to be used as arguments and return values in Cap'nProto interface methods. Also add unit test to verify the hooks are working and data can be round-tripped correctly.\r\n\r\nThe non-test code in this PR was previously part of #10102 and has been split off for easier review, but the test code is new.\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).",
    "labels": [],
    "created_at": "2023-11-20T22:12:05Z",
    "updated_at": "2023-11-23T10:10:55Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "90a3f87a3bf701c9d04f2a785b1b4dfa3779079c",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "ryanofsky:pr/ipcc",
      "ref": "pr/ipcc",
      "sha": "a506148b7a7058b4c60e5c497e70688134ee9a3f",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 9,
        "watchers_count": 9,
        "size": 240455,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-11-23T01:36:19Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2023-09-13T00:29:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "daa56f7f665183bcce3df146f143be37f33c123e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36005,
        "stargazers_count": 72308,
        "watchers_count": 72308,
        "size": 245229,
        "default_branch": "master",
        "open_issues_count": 645,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-11-23T01:36:27Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-11-23T10:42:05Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 267,
    "deletions": 1,
    "changed_files": 9,
    "commits": 3,
    "review_comments": 7,
    "comments": 2
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI3ZjdmMDBmODU0Y2U4NDIzYTRmZjYwOGQzYTE1MTY5MTJjMWQwZDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27f7f00f854ce8423a4ff608d3a1516912c1d0d8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/27f7f00f854ce8423a4ff608d3a1516912c1d0d8",
      "tree": {
        "sha": "03a29b138b2bde9ba9ac7de586550d43238eb005",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03a29b138b2bde9ba9ac7de586550d43238eb005"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d752349029ec7a76f1fd440db2ec2e458d0f3c99",
          "sha": "d752349029ec7a76f1fd440db2ec2e458d0f3c99",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d752349029ec7a76f1fd440db2ec2e458d0f3c99"
        }
      ],
      "message": "test: add ipc test to test multiprocess type conversion code\n\nAdd unit test to test IPC method calls and type conversion between bitcoin c++\ntypes and capnproto messages.\n\nRight now there are custom type hooks in bitcoin IPC code, so the test is\nsimple, but in upcoming commits, code will be added to convert bitcoin types to\ncapnproto messages, and the test will be expanded.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2023-11-20T19:54:37Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2023-11-20T19:54:37Z"
      },
      "sha": "27f7f00f854ce8423a4ff608d3a1516912c1d0d8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDMzMTVmMzNlN2M2M2Q4OTlkYjQxMmRhY2I5Yzg2OGUxOGQwOWZkZWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3315f33e7c63d899db412dacb9c868e18d09fded",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3315f33e7c63d899db412dacb9c868e18d09fded",
      "tree": {
        "sha": "33737845c107f6fe8fe4d7d37e51539d257d0d9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33737845c107f6fe8fe4d7d37e51539d257d0d9d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27f7f00f854ce8423a4ff608d3a1516912c1d0d8",
          "sha": "27f7f00f854ce8423a4ff608d3a1516912c1d0d8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/27f7f00f854ce8423a4ff608d3a1516912c1d0d8"
        }
      ],
      "message": "multiprocess: Add type conversion code for serializable types\n\nAllow any C++ object that has Serialize and Unserialize methods and can be\nserialized to a bitcoin CDataStream to be converted to a capnproto Data field\nand passed as arguments or return values to capnproto methods using the Data\ntype.\n\nExtend IPC unit test to cover this and verify the serialization happens\ncorrectly.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2023-11-20T20:49:55Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2023-11-20T20:49:55Z"
      },
      "sha": "3315f33e7c63d899db412dacb9c868e18d09fded"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE1MDYxNDhiN2E3MDU4YjRjNjBlNWM0OTdlNzA2ODgxMzRlZTlhM2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a506148b7a7058b4c60e5c497e70688134ee9a3f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a506148b7a7058b4c60e5c497e70688134ee9a3f",
      "tree": {
        "sha": "f0fa254d128247b3b55cdb7de2d20301bb64c894",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f0fa254d128247b3b55cdb7de2d20301bb64c894"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3315f33e7c63d899db412dacb9c868e18d09fded",
          "sha": "3315f33e7c63d899db412dacb9c868e18d09fded",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3315f33e7c63d899db412dacb9c868e18d09fded"
        }
      ],
      "message": "multiprocess: Add type conversion code for UniValue types\n\nExtend IPC unit test to cover this and verify the serialization happens\ncorrectly.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2023-11-20T20:49:55Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2023-11-20T20:49:55Z"
      },
      "sha": "a506148b7a7058b4c60e5c497e70688134ee9a3f"
    },
    {
      "event": "commented",
      "id": 1819887472,
      "node_id": "IC_kwDOABII585seUdw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1819887472",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T22:12:08Z",
      "updated_at": "2023-11-23T10:10:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28921).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/28921#pullrequestreview-1746109544) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28921#issuecomment-1819887472",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28921"
    },
    {
      "event": "renamed",
      "id": 11017239102,
      "node_id": "RTE_lADOABII5853ZOxlzwAAAAKQrbo-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11017239102",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T22:12:18Z",
      "rename": {
        "from": "multiprocess: Add basic type conversion hoois",
        "to": "multiprocess: Add basic type conversion hooks"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T22:12:41Z",
      "updated_at": "2023-11-20T22:12:41Z",
      "source": {
        "issue": {
          "id": 1959828375,
          "node_id": "I_kwDOABII58500JuX",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28722",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28722/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28722/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28722/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/28722",
          "number": 28722,
          "state": "open",
          "state_reason": null,
          "title": "Multiprocess tracking issue",
          "body": "This issue will be updated to reflect the current state of bitcoin core [multiprocess support](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md).\r\n\r\nPRs ready for review:\r\n\r\n- [ ] #28921\r\n- [ ] #28929\r\n- [ ] #28907\r\n- [ ] #10102\r\n- [ ] #19460\r\n- [ ] #19461\r\n\r\nPRs previously merged:\r\n\r\n- [X] ~#10242~\r\n- [X] ~#10295~\r\n- [X] ~#10600~\r\n- [X] ~#10244~\r\n- [X] ~#10605~\r\n- [X] ~#14636~\r\n- [X] ~#14437~\r\n- [X] ~#14711~\r\n- [X] ~#15342~\r\n- [X] ~#15373~\r\n- [X] ~#15288~\r\n- [X] ~#15531~\r\n- [X] ~#10973~\r\n- [X] ~#16839~\r\n- [X] ~#17906~\r\n- [X] ~#18278~\r\n- [X] ~#16367~\r\n- [X] ~#17999~\r\n- [X] ~#18743~\r\n- [X] ~#18587~\r\n- [X] ~#18677~\r\n- [X] ~#20494~\r\n- [X] ~#20046~\r\n- [X] ~#21035~\r\n- [X] ~#21732~\r\n- [X] ~#19160~\r\n- [X] ~#22216~\r\n- [X] ~#22214~\r\n- [X] ~#22218~\r\n- [X] ~bitcoin-core/gui#360~\r\n- [X] ~#22215~\r\n- [X] ~#22217~\r\n- [X] ~#19101~\r\n- [X] ~#22848~\r\n- [X] ~#22219~\r\n- [X] ~#23003~\r\n- [X] ~#23006~\r\n- [X] ~#23004~\r\n- [X] ~#23005~\r\n- [X] ~#23499~\r\n- [X] ~#28721~\r\n\r\nLinks:\r\n\r\n* [Documentation](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md)\r\n* [Project board](https://github.com/bitcoin/bitcoin/projects/10)\r\n* [Wiki](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Process-Separation)\r\n* [Presentation](https://docs.google.com/presentation/d/1AeJ-7gD-dItUgs5yH-HoEzLvXaEWe_2ZiGUUxYIXcws/edit) ([code shown](https://github.com/ryanofsky/bitcoin/compare/master...pr/ipc.21))\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 0,
          "created_at": "2023-10-24T18:22:37Z",
          "updated_at": "2023-11-23T01:32:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11017309966,
      "node_id": "HRFPE_lADOABII5853ZOxlzwAAAAKQrs8O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11017309966",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T22:20:45Z"
    },
    {
      "event": "labeled",
      "id": 11017310454,
      "node_id": "LE_lADOABII5853ZOxlzwAAAAKQrtD2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11017310454",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T22:20:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 11017539234,
      "node_id": "UNLE_lADOABII5853ZOxlzwAAAAKQsk6i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11017539234",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T22:56:42Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1741322101,
      "node_id": "PRR_kwDOABII585nynd1",
      "url": null,
      "actor": null,
      "commit_id": "118d60e95cc5c8c0d5a88c0d16904355c7e0c5f6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28921#pullrequestreview-1741322101",
      "submitted_at": "2023-11-21T08:00:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921"
    },
    {
      "event": "reviewed",
      "id": 1741945816,
      "node_id": "PRR_kwDOABII585n0_vY",
      "url": null,
      "actor": null,
      "commit_id": "118d60e95cc5c8c0d5a88c0d16904355c7e0c5f6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28921#pullrequestreview-1741945816",
      "submitted_at": "2023-11-21T12:47:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-21T15:28:38Z",
      "updated_at": "2023-11-21T15:28:38Z",
      "source": {
        "issue": {
          "id": 1888574337,
          "node_id": "PR_kwDOABII585Z7NXs",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28438",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28438/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28438/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28438/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28438",
          "number": 28438,
          "state": "closed",
          "state_reason": null,
          "title": "Use serialization parameters for CTransaction",
          "body": "Choose whether witness is included in transaction serialization via serialization parameter rather than the stream version. See #25284 and #19477 for previous context.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/61",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/61",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/61/labels",
            "id": 9334188,
            "node_id": "MI_kwDOABII584Ajm2s",
            "number": 61,
            "state": "open",
            "title": "27.0",
            "description": "",
            "creator": {
              "login": "sipa",
              "id": 548488,
              "node_id": "MDQ6VXNlcjU0ODQ4OA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/sipa",
              "html_url": "https://github.com/sipa",
              "followers_url": "https://api.github.com/users/sipa/followers",
              "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
              "organizations_url": "https://api.github.com/users/sipa/orgs",
              "repos_url": "https://api.github.com/users/sipa/repos",
              "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/sipa/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 7,
            "closed_issues": 14,
            "created_at": "2023-04-27T08:01:57Z",
            "updated_at": "2023-11-22T11:48:20Z"
          },
          "locked": false,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28438",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28438",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28438.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28438.patch"
          },
          "closed_at": "2023-11-15T15:16:34Z",
          "created_at": "2023-09-09T04:41:00Z",
          "updated_at": "2023-11-23T02:33:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11028398433,
      "node_id": "HRFPE_lADOABII5853ZOxlzwAAAAKRWAFh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11028398433",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-21T19:26:50Z"
    },
    {
      "event": "commented",
      "id": 1821552816,
      "node_id": "IC_kwDOABII585skrCw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1821552816",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-21T19:28:05Z",
      "updated_at": "2023-11-21T20:40:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 42a51f8939200845c1702b3029377ebcf0aa3610 -> 118d60e95cc5c8c0d5a88c0d16904355c7e0c5f6 ([`pr/ipcc.1`](https://github.com/ryanofsky/bitcoin/commits/pr/ipcc.1) -> [`pr/ipcc.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipcc.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipcc.1..pr/ipcc.2)) fixing lint error and making minor cleanups\r\nUpdated 118d60e95cc5c8c0d5a88c0d16904355c7e0c5f6 -> 33d796411dd4d8098287e1307f1337b6e2eab3e7 ([`pr/ipcc.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipcc.2) -> [`pr/ipcc.3`](https://github.com/ryanofsky/bitcoin/commits/pr/ipcc.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipcc.2..pr/ipcc.3)) replacing `CDataStream` with `DataStream` as suggested and making minor cleanups\r\nUpdated 33d796411dd4d8098287e1307f1337b6e2eab3e7 -> a506148b7a7058b4c60e5c497e70688134ee9a3f ([`pr/ipcc.3`](https://github.com/ryanofsky/bitcoin/commits/pr/ipcc.3) -> [`pr/ipcc.4`](https://github.com/ryanofsky/bitcoin/commits/pr/ipcc.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipcc.3..pr/ipcc.4)) to try to fix MSVC link error https://github.com/bitcoin/bitcoin/actions/runs/6948636857/job/18905029537?pr=28921\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28921#issuecomment-1821552816",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28921"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-21T19:36:58Z",
      "updated_at": "2023-11-21T19:36:58Z",
      "source": {
        "issue": {
          "id": 217385623,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyODQ2NDMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
          "number": 10102,
          "state": "open",
          "state_reason": null,
          "title": "Multiprocess bitcoin",
          "body": "**This is a draft PR because it is based on #28921 and #28929.** The non-base commits are:\r\n\r\n- [`eb9c1ce439fb` Increase feature_block.py and feature_taproot.py timeouts](https://github.com/bitcoin/bitcoin/pull/10102/commits/eb9c1ce439fb7e0f45d54b09eab6211aff92edae)\r\n- [`8800fd32f075` Add util::Result workaround to be compatible with libmultiprocess](https://github.com/bitcoin/bitcoin/pull/10102/commits/8800fd32f07555ae52b7981ac93743b790773ef5)\r\n- [`ba8dfc47a4e3` Add capnp serialization code for bitcoin types](https://github.com/bitcoin/bitcoin/pull/10102/commits/ba8dfc47a4e355b503cdcc5fed8881c8911865b3)\r\n- [`567c852d0413` Add capnp wrapper for Handler interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/567c852d04137950e1479161368d5ce6ce46a0d5)\r\n- [`54e86c742024` Add capnp wrapper for Chain interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/54e86c7420241e234e8cc435d45a044fe98d7530)\r\n- [`9a9fe92b9439` Add capnp wrapper for Wallet interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/9a9fe92b943966c12c7ad29efea80f5eade981f1)\r\n- [`06830957b7e4` Add capnp wrapper for Node interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/06830957b7e42b32cb2755bd0ff37f229e180776)\r\n- [`69a35c63acd3` Make bitcoin-gui spawn a bitcoin-node process](https://github.com/bitcoin/bitcoin/pull/10102/commits/69a35c63acd35adb0f014118c89f98145535b5c6)\r\n- [`a2de9e1074da` Make bitcoin-node spawn a bitcoin-wallet process](https://github.com/bitcoin/bitcoin/pull/10102/commits/a2de9e1074dacd3bf02bc14e5ee184f19a02c92f)\r\n- [`16522411afe3` multiprocess: Add debug.log .wallet/.gui suffixes](https://github.com/bitcoin/bitcoin/pull/10102/commits/16522411afe3baca5a9834d6224ecad8c7299a04)\r\n- [`499f35b3fac8` doc: Multiprocess misc doc and comment updates](https://github.com/bitcoin/bitcoin/pull/10102/commits/499f35b3fac8e228e29148b4b8f5504fd9b5a0a0)\r\n- [`7ba123f1b47a` combine_logs: Handle multiprocess wallet log files](https://github.com/bitcoin/bitcoin/pull/10102/commits/7ba123f1b47a4a790370c9a5975b1e0b4026a241)\r\n\r\n---\r\n\r\nThis PR adds an `--enable-multiprocess` configure option which builds new `bitcoin-node`, `bitcoin-wallet`, and `bitcoin-gui` executables with relevant functionality isolated into different processes. See [doc/design/multiprocess.md](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md) for usage details and future plans.\r\n\r\nThe change is implemented by adding a new [`Init`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/init.h) interface that spawns new wallet and node subprocesses that can be controlled over a [socketpair](http://man7.org/linux/man-pages/man2/socketpair.2.html) by calling [`Node`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/node.h), [`Wallet`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/wallet.h), and [`ChainClient`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/chain.h) methods. When running with split processes, you can see the IPC messages going back and forth in `-debug=1` output. Followup PR's #19460 and #19461 add `-ipcbind` and `-ipcconnect` options that allow more flexibility in how processes are connected.\r\n\r\nThe IPC protocol used is Cap'n Proto, but this could be swapped out for another protocol. Cap'n Proto types and libraries are only accessed in the [src/ipc/capnp/](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/src/ipc/capnp) directory, and not in any public headers or other parts of bitcoin code.\r\n\r\nSlides from a presentation describing this change are available on [google drive](https://docs.google.com/presentation/d/1AeJ-7gD-dItUgs5yH-HoEzLvXaEWe_2ZiGUUxYIXcws/edit). Demo code used in the presentation was from an older version this PR (tag [ipc.21](https://github.com/ryanofsky/bitcoin/releases/tag/pr%2Fipc.21), [commits](https://github.com/ryanofsky/bitcoin/compare/master...pr/ipc.21)).\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 83,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10102",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10102.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10102.patch"
          },
          "created_at": "2017-03-27T21:48:26Z",
          "updated_at": "2023-11-23T10:07:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11028988338,
      "node_id": "HRFPE_lADOABII5853ZOxlzwAAAAKRYQGy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11028988338",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-21T20:40:02Z"
    },
    {
      "event": "reviewed",
      "id": 1744305635,
      "node_id": "PRR_kwDOABII585n9_3j",
      "url": null,
      "actor": null,
      "commit_id": "a506148b7a7058b4c60e5c497e70688134ee9a3f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28921#pullrequestreview-1744305635",
      "submitted_at": "2023-11-22T14:35:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921"
    },
    {
      "event": "reviewed",
      "id": 1746109544,
      "node_id": "PRR_kwDOABII585oE4Ro",
      "url": null,
      "actor": null,
      "commit_id": "a506148b7a7058b4c60e5c497e70688134ee9a3f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK a506148b7a7058b4c60e5c497e70688134ee9a3f\r\n\r\nCI failure looks spurious.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28921#pullrequestreview-1746109544",
      "submitted_at": "2023-11-23T10:10:52Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1400158381",
      "pull_request_review_id": 1741322101,
      "id": 1400158381,
      "node_id": "PRRC_kwDOABII585TdLit",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_CAPNP_COMMON_TYPES_H\n+#define BITCOIN_IPC_CAPNP_COMMON_TYPES_H\n+\n+#include <clientversion.h>\n+#include <streams.h>\n+#include <univalue.h>\n+\n+#include <cstddef>\n+#include <mp/proxy-types.h>\n+#include <type_traits>\n+#include <utility>\n+\n+namespace ipc {\n+namespace capnp {\n+//! Use SFINAE to define Serializeable<T> trait which is true if type T has a\n+//! Serialize(stream) method, false otherwise.\n+template <typename T>\n+struct Serializable {\n+private:\n+    template <typename C>\n+    static std::true_type test(decltype(std::declval<C>().Serialize(std::declval<std::nullptr_t&>()))*);\n+    template <typename>\n+    static std::false_type test(...);\n+\n+public:\n+    static constexpr bool value = decltype(test<T>(nullptr))::value;\n+};\n+\n+//! Use SFINAE to define Unserializeable<T> trait which is true if type T has\n+//! an Unserialize(stream) method, false otherwise.\n+template <typename T>\n+struct Unserializable {\n+private:\n+    template <typename C>\n+    static std::true_type test(decltype(std::declval<C>().Unserialize(std::declval<std::nullptr_t&>()))*);\n+    template <typename>\n+    static std::false_type test(...);\n+\n+public:\n+    static constexpr bool value = decltype(test<T>(nullptr))::value;\n+};\n+} // namespace capnp\n+} // namespace ipc\n+\n+//! Functions to serialize / deserialize common bitcoin types.\n+namespace mp {\n+//! Overload multiprocess library's CustomBuildField hook to allow any\n+//! serializable object to be stored in a capnproto Data field or passed to a\n+//! canproto interface. Use Priority<1> so this hook has medium priority, and\n+//! higher priority hooks could take precedence over this one.\n+template <typename LocalType, typename Value, typename Output>\n+void CustomBuildField(\n+    TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Value&& value, Output&& output,\n+    // Enable if serializeable and if LocalType is not cv or reference\n+    // qualified. If LocalType is cv or reference qualified, it is important to\n+    // fall back to lower-priority Priority<0> implementation of this function\n+    // that strips cv references, to prevent this CustomBuildField overload from\n+    // taking precedence over more narrow overloads for specific LocalTypes.\n+    typename std::enable_if_t<ipc::capnp::Serializable<LocalType>::value &&\n+                              std::is_same_v<LocalType, std::remove_cv_t<std::remove_reference_t<LocalType>>>>* enable = nullptr)\n+{\n+    CDataStream stream(SER_NETWORK, CLIENT_VERSION);",
      "path": "src/ipc/capnp/common-types.h",
      "position": null,
      "original_position": 66,
      "commit_id": "a506148b7a7058b4c60e5c497e70688134ee9a3f",
      "original_commit_id": "118d60e95cc5c8c0d5a88c0d16904355c7e0c5f6",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    DataStream stream{};\r\n```\r\n\r\nThe values are ignored either way, so it seems better to remove them. `CDataStream` will go away anyway, soon.",
      "created_at": "2023-11-21T08:00:15Z",
      "updated_at": "2023-11-21T08:00:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28921#discussion_r1400158381",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1400158381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1400413443",
      "pull_request_review_id": 1741720019,
      "id": 1400413443,
      "node_id": "PRRC_kwDOABII585TeJ0D",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_CAPNP_COMMON_TYPES_H\n+#define BITCOIN_IPC_CAPNP_COMMON_TYPES_H\n+\n+#include <clientversion.h>\n+#include <streams.h>\n+#include <univalue.h>\n+\n+#include <cstddef>\n+#include <mp/proxy-types.h>\n+#include <type_traits>\n+#include <utility>\n+\n+namespace ipc {\n+namespace capnp {\n+//! Use SFINAE to define Serializeable<T> trait which is true if type T has a\n+//! Serialize(stream) method, false otherwise.\n+template <typename T>\n+struct Serializable {\n+private:\n+    template <typename C>\n+    static std::true_type test(decltype(std::declval<C>().Serialize(std::declval<std::nullptr_t&>()))*);\n+    template <typename>\n+    static std::false_type test(...);\n+\n+public:\n+    static constexpr bool value = decltype(test<T>(nullptr))::value;\n+};\n+\n+//! Use SFINAE to define Unserializeable<T> trait which is true if type T has\n+//! an Unserialize(stream) method, false otherwise.\n+template <typename T>\n+struct Unserializable {\n+private:\n+    template <typename C>\n+    static std::true_type test(decltype(std::declval<C>().Unserialize(std::declval<std::nullptr_t&>()))*);\n+    template <typename>\n+    static std::false_type test(...);\n+\n+public:\n+    static constexpr bool value = decltype(test<T>(nullptr))::value;\n+};\n+} // namespace capnp\n+} // namespace ipc\n+\n+//! Functions to serialize / deserialize common bitcoin types.\n+namespace mp {\n+//! Overload multiprocess library's CustomBuildField hook to allow any\n+//! serializable object to be stored in a capnproto Data field or passed to a\n+//! canproto interface. Use Priority<1> so this hook has medium priority, and\n+//! higher priority hooks could take precedence over this one.\n+template <typename LocalType, typename Value, typename Output>\n+void CustomBuildField(\n+    TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Value&& value, Output&& output,\n+    // Enable if serializeable and if LocalType is not cv or reference\n+    // qualified. If LocalType is cv or reference qualified, it is important to\n+    // fall back to lower-priority Priority<0> implementation of this function\n+    // that strips cv references, to prevent this CustomBuildField overload from\n+    // taking precedence over more narrow overloads for specific LocalTypes.\n+    typename std::enable_if_t<ipc::capnp::Serializable<LocalType>::value &&\n+                              std::is_same_v<LocalType, std::remove_cv_t<std::remove_reference_t<LocalType>>>>* enable = nullptr)\n+{\n+    CDataStream stream(SER_NETWORK, CLIENT_VERSION);",
      "path": "src/ipc/capnp/common-types.h",
      "position": null,
      "original_position": 66,
      "commit_id": "a506148b7a7058b4c60e5c497e70688134ee9a3f",
      "original_commit_id": "118d60e95cc5c8c0d5a88c0d16904355c7e0c5f6",
      "in_reply_to_id": 1400158381,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28921#discussion_r1400158381\r\n\r\n> The values are ignored either way, so it seems better to remove them. `CDataStream` will go away anyway, soon.\r\n\r\nThanks, will update. This previously was used to serialize transactions, but now with #28438 that is broken anyway, so I'll need to find something different to do for transactions.",
      "created_at": "2023-11-21T11:09:35Z",
      "updated_at": "2023-11-21T15:09:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28921#discussion_r1400413443",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1400413443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1400551468",
      "pull_request_review_id": 1741945816,
      "id": 1400551468,
      "node_id": "PRRC_kwDOABII585Tergs",
      "diff_hunk": "@@ -0,0 +1,18 @@\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0xd71b0fc8727fdf83;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"gen\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"test/ipc_test.h\");\n+$Proxy.includeTypes(\"ipc/capnp/common-types.h\");\n+\n+interface FooInterface $Proxy.wrap(\"FooImplementation\") {\n+    add @0 (a :Int32, b :Int32) -> (result :Int32);\n+    passOutPoint @1 (arg :Data) -> (result :Data);",
      "path": "src/test/ipc_test.capnp",
      "position": 16,
      "original_position": 16,
      "commit_id": "a506148b7a7058b4c60e5c497e70688134ee9a3f",
      "original_commit_id": "118d60e95cc5c8c0d5a88c0d16904355c7e0c5f6",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This type of interface where we pass serialized objects (using our serialization) via capnp data obviously fits in quite well with our code base, but I am wondering if this is a nice design for external use? since now anybody using it needs capnp and our serialization format.\r\n\r\nI might have missed prior discussion on this, is the plan to gradually convert more of the interface to native capnp types?\r\n\r\n---\r\n\r\nI really like this conversion glue by the way (i.e. `$Proxy.wrap`, etc.)! I've been working on a clone of https://github.com/google/libprotobuf-mutator for capnp, which I eventually would like to use to fuzz the multi-process interfaces. Conversion from capnp to c++ types is always a bit annoying, so your work on this could integrate quite well I think.",
      "created_at": "2023-11-21T12:47:54Z",
      "updated_at": "2023-11-21T12:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28921#discussion_r1400551468",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1400551468"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1400723520",
      "pull_request_review_id": 1741720019,
      "id": 1400723520,
      "node_id": "PRRC_kwDOABII585TfVhA",
      "diff_hunk": "@@ -0,0 +1,18 @@\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0xd71b0fc8727fdf83;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"gen\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"test/ipc_test.h\");\n+$Proxy.includeTypes(\"ipc/capnp/common-types.h\");\n+\n+interface FooInterface $Proxy.wrap(\"FooImplementation\") {\n+    add @0 (a :Int32, b :Int32) -> (result :Int32);\n+    passOutPoint @1 (arg :Data) -> (result :Data);",
      "path": "src/test/ipc_test.capnp",
      "position": 16,
      "original_position": 16,
      "commit_id": "a506148b7a7058b4c60e5c497e70688134ee9a3f",
      "original_commit_id": "118d60e95cc5c8c0d5a88c0d16904355c7e0c5f6",
      "in_reply_to_id": 1400551468,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28921#discussion_r1400551468\r\n\r\n> This type of interface where we pass serialized objects (using our serialization) via capnp data obviously fits in quite well with our code base, but I am wondering if this is a nice design for external use? since now anybody using it needs capnp and our serialization format.\r\n\r\nI think the choice will vary on a case-by-case basis. If you look at [`chain.capnp`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/ipc/capnp/chain.capnp#L95-L185), [`node.capnp`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/ipc/capnp/node.capnp#L139-L206), [`wallet.capnp`](https://github.com/ryanofsky/bitcoin/blob/18d382f4f8a74612ae0e91efd8a2b83bb665e081/src/ipc/capnp/wallet.capnp#L141-L242) you'll see a lot of custom capnp structs being defined and used to send data, but types that support bitcoin serialization are just being passed as `Data` fields, and some types that support JSON serialization are being passed as `Text` fields. Using pre-existing serialization formats is nice because it saves code, but the resulting nested data format is not very pretty, and like you say it basically makes writing internal code easier at the expense of making writing external code harder. I think as long as we consider the API unstable and willing to break it, the best thing to do is start with a simple implementation and improve it later. There are other parts of the API that are unwieldy too (like basically the whole [`Chain`](https://github.com/ryanofsky/bitcoin/blob/18d382f4f8a74612ae0e91efd8a2b83bb665e081/src/interfaces/chain.h#L98-L122) interface) so I expect there will be a lot of chances to make improvements.",
      "created_at": "2023-11-21T14:54:05Z",
      "updated_at": "2023-11-21T15:09:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28921#discussion_r1400723520",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1400723520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1401997881",
      "pull_request_review_id": 1744305635,
      "id": 1401997881,
      "node_id": "PRRC_kwDOABII585TkMo5",
      "diff_hunk": "@@ -0,0 +1,89 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_CAPNP_COMMON_TYPES_H\n+#define BITCOIN_IPC_CAPNP_COMMON_TYPES_H\n+\n+#include <clientversion.h>\n+#include <streams.h>\n+\n+#include <cstddef>\n+#include <mp/proxy-types.h>\n+#include <type_traits>\n+#include <utility>\n+\n+namespace ipc {\n+namespace capnp {\n+//! Use SFINAE to define Serializeable<T> trait which is true if type T has a\n+//! Serialize(stream) method, false otherwise.\n+template <typename T>\n+struct Serializable {\n+private:\n+    template <typename C>\n+    static std::true_type test(decltype(std::declval<C>().Serialize(std::declval<std::nullptr_t&>()))*);\n+    template <typename>\n+    static std::false_type test(...);\n+\n+public:\n+    static constexpr bool value = decltype(test<T>(nullptr))::value;\n+};\n+\n+//! Use SFINAE to define Unserializeable<T> trait which is true if type T has\n+//! an Unserialize(stream) method, false otherwise.\n+template <typename T>\n+struct Unserializable {\n+private:\n+    template <typename C>\n+    static std::true_type test(decltype(std::declval<C>().Unserialize(std::declval<std::nullptr_t&>()))*);\n+    template <typename>\n+    static std::false_type test(...);\n+\n+public:\n+    static constexpr bool value = decltype(test<T>(nullptr))::value;\n+};\n+} // namespace capnp\n+} // namespace ipc\n+\n+//! Functions to serialize / deserialize common bitcoin types.\n+namespace mp {\n+//! Overload multiprocess library's CustomBuildField hook to allow any\n+//! serializable object to be stored in a capnproto Data field or passed to a\n+//! canproto interface. Use Priority<1> so this hook has medium priority, and\n+//! higher priority hooks could take precedence over this one.\n+template <typename LocalType, typename Value, typename Output>\n+void CustomBuildField(\n+    TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Value&& value, Output&& output,\n+    // Enable if serializeable and if LocalType is not cv or reference\n+    // qualified. If LocalType is cv or reference qualified, it is important to\n+    // fall back to lower-priority Priority<0> implementation of this function\n+    // that strips cv references, to prevent this CustomBuildField overload from\n+    // taking precedence over more narrow overloads for specific LocalTypes.\n+    std::enable_if_t<ipc::capnp::Serializable<LocalType>::value &&\n+                     std::is_same_v<LocalType, std::remove_cv_t<std::remove_reference_t<LocalType>>>>* enable = nullptr)",
      "path": "src/ipc/capnp/common-types.h",
      "position": 64,
      "original_position": 63,
      "commit_id": "a506148b7a7058b4c60e5c497e70688134ee9a3f",
      "original_commit_id": "3315f33e7c63d899db412dacb9c868e18d09fded",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm gonna try to summarize my understanding of this to make sure I actually got it right.\r\n\r\nWe want this specialization of `CustomBuildField` for (most) of our serializable types. So we can either define it manually for each type or we can make use of sfinae (like you do here) to automatically only create the specialization for each of the required serializable types.\r\n\r\nWe also want to be able to further overload `CustomBuildField` for serializable types that can't use this generic specialization (e.g. if we need to use `TX_WITH_WITNESS`), so we specify `Priority<1>` such that another overload with `Priority<2>` would take precedence.\r\n\r\nWhat I don't understand is making this exclusive to non cv and reference qualified types. \r\n\r\n> If LocalType is cv or reference qualified, it is important to fall back to lower-priority Priority<0> ... to prevent this CustomBuildField overload from taking precedence\r\n\r\nAs I understand it, this comment implies that (without `&& std::is_same_v<LocalType, std::remove_cv_t<std::remove_reference_t<LocalType>>>`) the following would not take precedence, even though it has `Priority<2>`?\r\n```c++\r\ntemplate <typename LocalType, typename Output>\r\nvoid CustomBuildField(TypeList<LocalType>, Priority<2>, InvokeContext& invoke_context, const CTransaction& value, Output&& output)\r\n{\r\n    DataStream stream;\r\n    stream << TX_WITH_WITNESS(value);\r\n    auto result = output.init(stream.size());\r\n    memcpy(result.begin(), stream.data(), stream.size());\r\n}\r\n```\r\n\r\n",
      "created_at": "2023-11-22T12:49:49Z",
      "updated_at": "2023-11-22T14:35:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28921#discussion_r1401997881",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1401997881"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921"
        }
      },
      "start_line": 51,
      "original_start_line": 50,
      "start_side": "RIGHT",
      "line": 64,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402240033",
      "pull_request_review_id": 1744689152,
      "id": 1402240033,
      "node_id": "PRRC_kwDOABII585TlHwh",
      "diff_hunk": "@@ -0,0 +1,89 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_CAPNP_COMMON_TYPES_H\n+#define BITCOIN_IPC_CAPNP_COMMON_TYPES_H\n+\n+#include <clientversion.h>\n+#include <streams.h>\n+\n+#include <cstddef>\n+#include <mp/proxy-types.h>\n+#include <type_traits>\n+#include <utility>\n+\n+namespace ipc {\n+namespace capnp {\n+//! Use SFINAE to define Serializeable<T> trait which is true if type T has a\n+//! Serialize(stream) method, false otherwise.\n+template <typename T>\n+struct Serializable {\n+private:\n+    template <typename C>\n+    static std::true_type test(decltype(std::declval<C>().Serialize(std::declval<std::nullptr_t&>()))*);\n+    template <typename>\n+    static std::false_type test(...);\n+\n+public:\n+    static constexpr bool value = decltype(test<T>(nullptr))::value;\n+};\n+\n+//! Use SFINAE to define Unserializeable<T> trait which is true if type T has\n+//! an Unserialize(stream) method, false otherwise.\n+template <typename T>\n+struct Unserializable {\n+private:\n+    template <typename C>\n+    static std::true_type test(decltype(std::declval<C>().Unserialize(std::declval<std::nullptr_t&>()))*);\n+    template <typename>\n+    static std::false_type test(...);\n+\n+public:\n+    static constexpr bool value = decltype(test<T>(nullptr))::value;\n+};\n+} // namespace capnp\n+} // namespace ipc\n+\n+//! Functions to serialize / deserialize common bitcoin types.\n+namespace mp {\n+//! Overload multiprocess library's CustomBuildField hook to allow any\n+//! serializable object to be stored in a capnproto Data field or passed to a\n+//! canproto interface. Use Priority<1> so this hook has medium priority, and\n+//! higher priority hooks could take precedence over this one.\n+template <typename LocalType, typename Value, typename Output>\n+void CustomBuildField(\n+    TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Value&& value, Output&& output,\n+    // Enable if serializeable and if LocalType is not cv or reference\n+    // qualified. If LocalType is cv or reference qualified, it is important to\n+    // fall back to lower-priority Priority<0> implementation of this function\n+    // that strips cv references, to prevent this CustomBuildField overload from\n+    // taking precedence over more narrow overloads for specific LocalTypes.\n+    std::enable_if_t<ipc::capnp::Serializable<LocalType>::value &&\n+                     std::is_same_v<LocalType, std::remove_cv_t<std::remove_reference_t<LocalType>>>>* enable = nullptr)",
      "path": "src/ipc/capnp/common-types.h",
      "position": 64,
      "original_position": 63,
      "commit_id": "a506148b7a7058b4c60e5c497e70688134ee9a3f",
      "original_commit_id": "3315f33e7c63d899db412dacb9c868e18d09fded",
      "in_reply_to_id": 1401997881,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> As I understand it, this comment implies that (without `&& std::is_same_v<LocalType, std::remove_cv_t<std::remove_reference_t<LocalType>>>`) the following would not take precedence, even though it has `Priority<2>`?\r\n> \r\n> ```c++\r\n> template <typename LocalType, typename Output>\r\n> void CustomBuildField(TypeList<LocalType>, Priority<2>, InvokeContext& invoke_context, const CTransaction& value, Output&& output)\r\n> ```\r\n\r\nYes that's right, but it would be more correct to say \"would not *reliably* take precedence\". For example, in the case where a `const CTransaction` argument was passed then the `Priority<2>` function actually would take precedence, but if a non-const `CTransaction` were passed the precedence would be ambiguous. This is because if you passed a non-const `CTransaction`, the types of the two functions after template type deduction would be:\r\n\r\n```\r\nvoid CustomBuildField(TypeList<LocalType>, Priority<1>, InvokeContext&, CTransaction&, Output&& output);\r\nvoid CustomBuildField(TypeList<LocalType>, Priority<2>, InvokeContext&, const CTransaction&, Output&& output);\r\n```\r\nSo with a non-const `CTransaction` argument, it would be ambiguous whether to call the Priority<2> function that requires a const conversion, or a Priority<1> function not requiring a const-conversion, and there would be a compile error about the overload being ambiguous.",
      "created_at": "2023-11-22T15:29:12Z",
      "updated_at": "2023-11-22T15:29:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28921#discussion_r1402240033",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402240033"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28921"
        }
      },
      "start_line": 51,
      "original_start_line": 50,
      "start_side": "RIGHT",
      "line": 64,
      "original_line": 63,
      "side": "RIGHT"
    }
  ]
}