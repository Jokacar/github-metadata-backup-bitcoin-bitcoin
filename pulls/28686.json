{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28686",
    "id": 1564506354,
    "node_id": "PR_kwDOABII585dQHjy",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28686",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28686.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28686.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28686",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28686/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28686/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28686/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
    "number": 28686,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "refactor: Split per-peer parts of net module into new node/connection module",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Move per-peer code from net into a new node/connection module. This is intended to capture logic that is lower-level than the p2p protocol (done in net_processing), but higher-level than raw bits-over-the-wire (handled by Sock).",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-10-19T10:23:42Z",
    "updated_at": "2023-10-24T22:35:02Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "c964744b7925274f299ff2f89695460089c3cb6d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "ajtowns:202310-nodenode",
      "ref": "202310-nodenode",
      "sha": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 53941525,
        "node_id": "MDEwOlJlcG9zaXRvcnk1Mzk0MTUyNQ==",
        "name": "bitcoin",
        "full_name": "ajtowns/bitcoin",
        "owner": {
          "login": "ajtowns",
          "id": 127186,
          "node_id": "MDQ6VXNlcjEyNzE4Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ajtowns",
          "html_url": "https://github.com/ajtowns",
          "followers_url": "https://api.github.com/users/ajtowns/followers",
          "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
          "organizations_url": "https://api.github.com/users/ajtowns/orgs",
          "repos_url": "https://api.github.com/users/ajtowns/repos",
          "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ajtowns/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ajtowns/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ajtowns/bitcoin",
        "archive_url": "https://api.github.com/repos/ajtowns/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ajtowns/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ajtowns/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ajtowns/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ajtowns/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ajtowns/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ajtowns/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ajtowns/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ajtowns/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ajtowns/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ajtowns/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ajtowns/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ajtowns/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ajtowns/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ajtowns/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ajtowns/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ajtowns/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ajtowns/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ajtowns/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ajtowns/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ajtowns/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ajtowns/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ajtowns/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ajtowns/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ajtowns/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ajtowns/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ajtowns/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ajtowns/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ajtowns/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ajtowns/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ajtowns/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ajtowns/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ajtowns/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ajtowns/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ajtowns/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ajtowns/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ajtowns/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ajtowns/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ajtowns/bitcoin/hooks",
        "svn_url": "https://github.com/ajtowns/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 7,
        "watchers_count": 7,
        "size": 273845,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-10-19T13:13:10Z",
        "created_at": "2016-03-15T12:11:24Z",
        "updated_at": "2023-03-19T19:22:46Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9e616baec0f2d94c5b9970cba657a3c79787ef84",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35867,
        "stargazers_count": 71888,
        "watchers_count": 71888,
        "size": 243752,
        "default_branch": "master",
        "open_issues_count": 628,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-10-24T21:20:18Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-10-24T21:42:59Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28686"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 2055,
    "deletions": 1979,
    "changed_files": 18,
    "commits": 3,
    "review_comments": 6,
    "comments": 7
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYxOGMwZTVhYzk5ZmQwYjQ0NDdjN2M3YjVlYWRlZjBlOTc1OGMzYzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/618c0e5ac99fd0b4447c7c7b5eadef0e9758c3c2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/618c0e5ac99fd0b4447c7c7b5eadef0e9758c3c2",
      "tree": {
        "sha": "58ca3e6046d81ff1f65ace97112915d4fbda2a8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58ca3e6046d81ff1f65ace97112915d4fbda2a8f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/655dc716aa6043613171a1338e22928de89a7d3e",
          "sha": "655dc716aa6043613171a1338e22928de89a7d3e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/655dc716aa6043613171a1338e22928de89a7d3e"
        }
      ],
      "message": "qt/guiutil: add missing include",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-10-19T09:48:12Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-10-19T09:47:57Z"
      },
      "sha": "618c0e5ac99fd0b4447c7c7b5eadef0e9758c3c2"
    },
    {
      "event": "commented",
      "id": 1770519657,
      "node_id": "IC_kwDOABII585ph_xp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770519657",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T10:23:45Z",
      "updated_at": "2023-10-20T17:45:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28686).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28690](https://github.com/bitcoin/bitcoin/pull/28690) (build: Introduce internal kernel library by TheCharlatan)\n* [#28481](https://github.com/bitcoin/bitcoin/pull/28481) (txorphanage: add size accounting, use wtxids, support multiple announcers by glozow)\n* [#28455](https://github.com/bitcoin/bitcoin/pull/28455) (refactor: share and use `GenerateRandomKey` helper by theStack)\n* [#28451](https://github.com/bitcoin/bitcoin/pull/28451) (Remove unused SER_DISK, SER_NETWORK, SER_GETHASH by maflcko)\n* [#28210](https://github.com/bitcoin/bitcoin/pull/28210) (build: Bump clang minimum supported version to 13 by maflcko)\n* [#27600](https://github.com/bitcoin/bitcoin/pull/27600) (net: Add new permission `forceinbound` to evict a random unprotected connection if all slots are otherwise full by pinheadmz)\n* [#27114](https://github.com/bitcoin/bitcoin/pull/27114) (p2p: Allow whitelisting outgoing connections by brunoerg)\n* [#26697](https://github.com/bitcoin/bitcoin/pull/26697) (logging: use bitset for categories by LarryRuane)\n* [#25832](https://github.com/bitcoin/bitcoin/pull/25832) (tracing: network connection tracepoints by 0xB10C)\n* [#10102](https://github.com/bitcoin/bitcoin/pull/10102) (Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#issuecomment-1770519657",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28686"
    },
    {
      "event": "labeled",
      "id": 10708308493,
      "node_id": "LE_lADOABII5850VniKzwAAAAJ-Q9IN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10708308493",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T10:23:48Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "commented",
      "id": 1770530541,
      "node_id": "IC_kwDOABII585piCbt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770530541",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T10:31:04Z",
      "updated_at": "2023-10-19T10:31:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "The idea here is to restructure `CNode` / `CConnman` / `PeerManager` a bit. Currently, net.h combines all the p2p logic in between the very low-level socket stuff (sock.h) and the high-level protocol (net_processing.h). This splits that into two parts: node/node.h that now contains `CNode`, `TransportV1`, etc that focusses on dealing with a single peer; and leaves `CConnman` in net.h, with the idea that that focusses on coordinating amongst the many peers we have (so, opening new connections, choosing what to evict, working out which node to give cpu time to next, etc).\r\n\r\nThis PR just moves code around; the idea is that future PRs would improve the separation more (see https://github.com/ajtowns/bitcoin/commits/202308-netnode and https://github.com/bitcoin/bitcoin/pull/28252#issuecomment-1680222391) and, eventually, breaking the circular dependency between `PeerManager` and `CConnman` (ie, have `PeerManager` only deal with a single node at a time, eg see the `PushMessage` changes in the repo just mentioned).",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#issuecomment-1770530541",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28686"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10708408485,
      "node_id": "HRFPE_lADOABII5850VniKzwAAAAJ-RVil",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10708408485",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T10:32:32Z"
    },
    {
      "event": "commented",
      "id": 1770711821,
      "node_id": "IC_kwDOABII585piusN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770711821",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T11:37:22Z",
      "updated_at": "2023-10-19T11:37:22Z",
      "author_association": "MEMBER",
      "body": "`node/node` seems a bit confusing, because the two `node` refer to different things. `node` refers to this node and the other `node` refers to a peer, so `node/peer` may be better?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#issuecomment-1770711821",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28686"
    },
    {
      "event": "commented",
      "id": 1770741963,
      "node_id": "IC_kwDOABII585pi2DL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770741963",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T11:52:01Z",
      "updated_at": "2023-10-19T11:52:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "> `node/node` seems a bit confusing, because the two `node` refer to different things. `node` refers to this node and the other `node` refers to a peer, so `node/peer` may be better?\r\n\r\nI did think about that, but it's confusing in its own way: we have `class Peer` in net_processing that contains the per-peer protocol-level data for a particular connection. I guess we could decide to move towards calling them `Peer` (instead of `CNode`) and `PeerLogic` (instead of `Peer`), and `PeerLogicManager` (instead of `PeerManager`)?",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#issuecomment-1770741963",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28686"
    },
    {
      "event": "commented",
      "id": 1770854526,
      "node_id": "IC_kwDOABII585pjRh-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770854526",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T12:22:12Z",
      "updated_at": "2023-10-19T12:22:12Z",
      "author_association": "MEMBER",
      "body": "While we are bike-shedding the naming, I actually think `node/connection` would make sense.  `Connection` would also seem like the appropriate name for `CNode` given that it is managed by something called connection manager.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#issuecomment-1770854526",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28686"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T12:47:52Z",
      "updated_at": "2023-10-19T12:47:52Z",
      "source": {
        "issue": {
          "id": 1896642598,
          "node_id": "PR_kwDOABII585aWNyZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28481",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28481/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28481/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28481/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28481",
          "number": 28481,
          "state": "open",
          "state_reason": null,
          "title": "txorphanage: add size accounting, use wtxids, support multiple announcers",
          "body": "This PR contains changes to `TxOrphanage` needed for package relay stuff. See #27463 for project tracking and #28031 for how this code is used.\r\n\r\nSeparating this PR was suggested in https://github.com/bitcoin/bitcoin/pull/28031#discussion_r1261414179.\r\n\r\nChanges here:\r\n- Change params to wtxid instead of txid.\r\n- Track total size (`CTransaction::GetTotalSize()` of orphans stored, as well as the size per peer.\r\n- Support having multiple announcers for the same tx. This helps us retry resolving the same orphan with multiple peers if it fails the first time.\r\n- Store the deduplicated missing parent txids in `OrphanTx` so that we don't need to calculate them again later on.\r\n- Return the erased wtxids from `EraseForBlock` which includes orphans that conflicted with the block. This helps us delete those orphan resolution attempts from our tracker.\r\n- Enable limiting the total size of orphans instead of just the total count. No new limits are introduced, the default is maximum count * maximum tx size.\r\n- Unit tests + fuzzer.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28481",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28481",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28481.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28481.patch"
          },
          "created_at": "2023-09-14T13:59:45Z",
          "updated_at": "2023-10-19T19:22:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T12:52:27Z",
      "updated_at": "2023-10-19T12:52:27Z",
      "source": {
        "issue": {
          "id": 1891532660,
          "node_id": "PR_kwDOABII585aE9mZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28455",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28455/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28455/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28455/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28455",
          "number": 28455,
          "state": "open",
          "state_reason": null,
          "title": "refactor: share and use `GenerateRandomKey` helper",
          "body": "Making the `GeneratingRandomKey` helper (recently introduced in PR #28433, commit b6934fd03f080d437acb1fd2b665503c3d6de785) available to other modules via key.{h.cpp} allows us to create random private keys directly at CKey instantiation, in contrast to the currently needed two-step process of creating an (invalid) CKey instance first and then having to call `MakeNewKey(...)`.\r\n\r\nThis is mostly used in unit tests and a few instances in the wallet.",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28455",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28455",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28455.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28455.patch"
          },
          "created_at": "2023-09-12T01:51:11Z",
          "updated_at": "2023-10-24T03:28:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T12:53:36Z",
      "updated_at": "2023-10-19T12:53:36Z",
      "source": {
        "issue": {
          "id": 1890832581,
          "node_id": "PR_kwDOABII585aClSK",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28451",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28451/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28451/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28451/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28451",
          "number": 28451,
          "state": "open",
          "state_reason": null,
          "title": "Remove unused SER_DISK, SER_NETWORK, SER_GETHASH",
          "body": "Seems odd to have code that is completely dead.\r\n\r\nFix this by removing all of it.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28451",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28451",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28451.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28451.patch"
          },
          "created_at": "2023-09-11T16:07:31Z",
          "updated_at": "2023-10-24T03:30:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU2N2FhOTE2Y2U4OTc0ZGNjYjZhOGYxMTdkY2ZmODY1YmFiY2IwN2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e67aa916ce8974dccb6a8f117dcff865babcb07a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e67aa916ce8974dccb6a8f117dcff865babcb07a",
      "tree": {
        "sha": "a4e0e642a6d28958987baac61cd9a6c52f7fdb06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a4e0e642a6d28958987baac61cd9a6c52f7fdb06"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/618c0e5ac99fd0b4447c7c7b5eadef0e9758c3c2",
          "sha": "618c0e5ac99fd0b4447c7c7b5eadef0e9758c3c2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/618c0e5ac99fd0b4447c7c7b5eadef0e9758c3c2"
        }
      ],
      "message": "move-only: split CNode into new node/connection.h module\n\nMove per-peer code from net into a new node/connection module. This\nis intended to capture logic that is lower-level than the p2p protocol\n(done in net_processing), but higher-level than raw bits-over-the-wire\n(handled by Sock).",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-10-19T13:10:24Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-10-19T09:19:54Z"
      },
      "sha": "e67aa916ce8974dccb6a8f117dcff865babcb07a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDExMTZlNTdkZTk1NTZkOTI3ZTFiM2VjMTRjMmM1YTcxYmQ2MDQzYzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "tree": {
        "sha": "a2d4f94c85394731dd012d62b6be7cf1b8a0efb2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2d4f94c85394731dd012d62b6be7cf1b8a0efb2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e67aa916ce8974dccb6a8f117dcff865babcb07a",
          "sha": "e67aa916ce8974dccb6a8f117dcff865babcb07a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e67aa916ce8974dccb6a8f117dcff865babcb07a"
        }
      ],
      "message": "remove unnecessary net.h includes",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-10-19T13:12:56Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2023-10-19T10:20:30Z"
      },
      "sha": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10711859545,
      "node_id": "HRFPE_lADOABII5850VniKzwAAAAJ-egFZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10711859545",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T13:13:15Z"
    },
    {
      "event": "commented",
      "id": 1770965821,
      "node_id": "IC_kwDOABII585pjss9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1770965821",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T13:14:05Z",
      "updated_at": "2023-10-19T13:14:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "> While we are bike-shedding the naming, I actually think `node/connection` would make sense. `Connection` would also seem like the appropriate name for `CNode` given that it is managed by something called connection manager.\r\n\r\nI like it! Done.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#issuecomment-1770965821",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28686"
    },
    {
      "event": "renamed",
      "id": 10711882212,
      "node_id": "RTE_lADOABII5850VniKzwAAAAJ-elnk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10711882212",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T13:15:05Z",
      "rename": {
        "from": "refactor: Split per-peer parts of net module into new node/node module",
        "to": "refactor: Split per-peer parts of net module into new node/connection module"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T13:41:09Z",
      "updated_at": "2023-10-19T13:41:09Z",
      "source": {
        "issue": {
          "id": 1834973590,
          "node_id": "PR_kwDOABII585XGwhh",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28210",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28210/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28210/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28210/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28210",
          "number": 28210,
          "state": "closed",
          "state_reason": null,
          "title": "build: Bump clang minimum supported version to 13",
          "body": "All supported operating systems ship with clang-13 (or later), so bump the minimum to that and remove now unused workarounds for previous clang bugs.\r\n\r\nFor reference:\r\n* https://packages.debian.org/bullseye/clang-13\r\n* https://packages.ubuntu.com/jammy/clang (`clang-14`) and https://packages.ubuntu.com/jammy/clang-15\r\n* CentOS-like 8/9 Stream: All Clang versions from 13 to 15\r\n* FreeBSD 12/13: All Clang version from 13 to 16\r\n* OpenSuse Tumbleweed ships with https://software.opensuse.org/package/clang (`clang16`); No idea about OpenSuse Leap\r\n\r\nThis is for Bitcoin Core 27.0 in 2024 (next year), not the soon upcoming 26.0 next month.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 1947349437,
              "node_id": "MDU6TGFiZWwxOTQ3MzQ5NDM3",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/DrahtBot%20Guix%20build%20requested",
              "name": "DrahtBot Guix build requested",
              "description": "",
              "color": "bfd4f2",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/61",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/61",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/61/labels",
            "id": 9334188,
            "node_id": "MI_kwDOABII584Ajm2s",
            "number": 61,
            "state": "open",
            "title": "27.0",
            "description": "",
            "creator": {
              "login": "sipa",
              "id": 548488,
              "node_id": "MDQ6VXNlcjU0ODQ4OA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/sipa",
              "html_url": "https://github.com/sipa",
              "followers_url": "https://api.github.com/users/sipa/followers",
              "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
              "organizations_url": "https://api.github.com/users/sipa/orgs",
              "repos_url": "https://api.github.com/users/sipa/repos",
              "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/sipa/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 5,
            "created_at": "2023-04-27T08:01:57Z",
            "updated_at": "2023-10-24T21:05:15Z"
          },
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28210",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28210",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28210.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28210.patch"
          },
          "closed_at": "2023-10-24T21:04:05Z",
          "created_at": "2023-08-03T12:32:42Z",
          "updated_at": "2023-10-24T21:26:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T14:38:07Z",
      "updated_at": "2023-10-19T14:38:07Z",
      "source": {
        "issue": {
          "id": 1700844188,
          "node_id": "PR_kwDOABII585QCBm_",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27600",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27600/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27600/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27600/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27600",
          "number": 27600,
          "state": "open",
          "state_reason": null,
          "title": "net: Add new permission `forceinbound` to evict a random unprotected connection if all slots are otherwise full",
          "body": "Closes https://github.com/bitcoin/bitcoin/issues/8798\r\n\r\nUse case: I run a full node that accepts inbound connections and have a `whitebind` setting so my personal light client can always connect, even when `maxconnections` (and particularly all inbound slots) is already full.\r\n\r\nCurrently when connections are full, if we receive an inbound peer request, we look for a current connection to evict so the new peer can have a slot. To find an evict-able peer we go through all our peers and \"protect\" multiple categories of peers, then we evict the \"worst\" peer that is left unprotected. If there are no peers left to evict, the inbound connection is denied.\r\n\r\nWith this PR, if the inbound connection has `forceinbound` permission we start the eviction process by first protecting all `noban` and outbound connections, then selecting one of the remaining peers (if any) at random. Then we loop through all our current connections, removing protected peers from the evict-able list. If we end up protecting all our remaining connections, the randomly chosen peer is evicted.\r\n\r\n`forceinbound` implies `noban` permission.\r\n\r\nAll outbound and `noban` connections remain protected from eviction.",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27600",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27600.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27600.patch"
          },
          "created_at": "2023-05-08T19:59:30Z",
          "updated_at": "2023-10-19T20:46:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T15:00:01Z",
      "updated_at": "2023-10-19T15:00:01Z",
      "source": {
        "issue": {
          "id": 1588322692,
          "node_id": "PR_kwDOABII585KKgel",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27114/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27114",
          "number": 27114,
          "state": "open",
          "state_reason": null,
          "title": "p2p: Allow whitelisting outgoing connections",
          "body": "Revives #17167. It allows whitelisting outgoing connections.\r\n\r\nI previously revived it with #26441, however, some reviewers told me it's better to keep them splitted to facilitate reviews and probably having this one merged first since we need it to improve functional tests. \r\n",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27114",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27114",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27114.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27114.patch"
          },
          "created_at": "2023-02-16T20:31:10Z",
          "updated_at": "2023-10-24T16:15:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T15:19:29Z",
      "updated_at": "2023-10-19T15:19:29Z",
      "source": {
        "issue": {
          "id": 1495740611,
          "node_id": "PR_kwDOABII585FZpvc",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26697",
          "number": 26697,
          "state": "open",
          "state_reason": null,
          "title": "logging: use bitset for categories",
          "body": "... rather than integer bitmasks such as (1 << 28). This removes the limit of 32 logging categories -- we're up to 28 currently.\r\n\r\nThis is an alternative to #26619 that was [suggested](https://github.com/bitcoin/bitcoin/pull/26619#issuecomment-1343902657) by luke-jr.\r\n\r\ntag jonatack klementtan",
          "user": {
            "login": "LarryRuane",
            "id": 8321330,
            "node_id": "MDQ6VXNlcjgzMjEzMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LarryRuane",
            "html_url": "https://github.com/LarryRuane",
            "followers_url": "https://api.github.com/users/LarryRuane/followers",
            "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
            "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
            "repos_url": "https://api.github.com/users/LarryRuane/repos",
            "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26697",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26697",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26697.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26697.patch"
          },
          "created_at": "2022-12-14T05:40:18Z",
          "updated_at": "2023-10-19T21:17:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T15:43:14Z",
      "updated_at": "2023-10-19T15:43:14Z",
      "source": {
        "issue": {
          "id": 1337499811,
          "node_id": "PR_kwDOABII5849G1u9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25832/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25832",
          "number": 25832,
          "state": "open",
          "state_reason": null,
          "title": "tracing: network connection tracepoints",
          "body": "This adds five new tracepoints with documentation and tests for network connections:\r\n\r\n- established connections with `net:inbound_connection` and `net:outbound_connection`\r\n- closed connections (both closed by us or by the peer) with `net:closed_connnection`\r\n- inbound connections that we choose to evict with `net:evicted_inbound_connection`\r\n- connections that are misbehaving and punished with `net:misbehaving_connection`\r\n\r\nI've been using these tracepoints for a few months now to monitor connection lifetimes, re-connection frequency by IP and netgroup, misbehavior, peer discouragement, and eviction and more. Together with the two existing P2P message tracepoints they allow for a good overview of local P2P network activity. Also sort-of addresses https://github.com/bitcoin/bitcoin/pull/22006#discussion_r636775863. \r\n\r\nI've been back and forth on which arguments to include. For example, `net:evicted_connection` could also include some of the eviction metrics like e.g. `last_block_time`, `min_ping_time`, ... but I've left them out for now. If wanted, this can be added here or in a follow-up. I've tried to minimize a potential performance impact by measuring executed instructions with `gdb` where possible (method described [here](https://github.com/bitcoin/bitcoin/pull/23724#issuecomment-996919963)). I don't think a few hundred extra instructions are too crucial, as connection opens/closes aren't too frequent (compared to e.g. P2P messages).   Note: e.g. `CreateNodeFromAcceptedSocket()` usually executes between 80k and 90k instructions for each new inbound connection.\r\n\r\n| tracepoint                 \t| instructions                                           \t|\r\n|----------------------------\t|--------------------------------------------------------\t|\r\n| net:inbound_connection     \t| 390 ins                                                \t|\r\n| net:outbound_connection    \t| between 700 and 1000 ins                                     \t|\r\n| net:closed_connnection     \t| 473 ins                                                \t|\r\n| net:evicted_inbound_connection     \t| not measured; likely similar to net:closed_connnection \t|\r\n| net:misbehaving_connection | not measured                                           \t|\r\n\r\nAlso added a bpftrace (tested with v0.14.1) `log_p2p_connections.bt` example script that produces output similar to:\r\n```\r\nAttaching 6 probes...\r\nLogging opened, closed, misbehaving, and evicted P2P connections\r\nOUTBOUND conn to 127.0.0.1:15287: id=0, type=block-relay-only, network=0, total_out=1\r\nINBOUND conn from 127.0.0.1:45324: id=1, type=inbound, network=0, total_in=1\r\nMISBEHAVING conn id=1, score_before=0, score_increase=20, message='getdata message size = 50001', threshold_exceeded=false\r\nCLOSED conn to 127.0.0.1:15287: id=0, type=block-relay-only, network=0, established=1231006505\r\nEVICTED conn to 127.0.0.1:45324: id=1, type=inbound, network=0, established=1612312312\r\n```",
          "user": {
            "login": "0xB10C",
            "id": 19157360,
            "node_id": "MDQ6VXNlcjE5MTU3MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xB10C",
            "html_url": "https://github.com/0xB10C",
            "followers_url": "https://api.github.com/users/0xB10C/followers",
            "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
            "organizations_url": "https://api.github.com/users/0xB10C/orgs",
            "repos_url": "https://api.github.com/users/0xB10C/repos",
            "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/0xB10C/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25832",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25832",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25832.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25832.patch"
          },
          "created_at": "2022-08-12T17:18:21Z",
          "updated_at": "2023-10-24T16:47:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1688907451,
      "node_id": "PRR_kwDOABII585kqq67",
      "url": null,
      "actor": null,
      "commit_id": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#pullrequestreview-1688907451",
      "submitted_at": "2023-10-20T00:19:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28686"
    },
    {
      "event": "reviewed",
      "id": 1689613170,
      "node_id": "PRR_kwDOABII585ktXNy",
      "url": null,
      "actor": null,
      "commit_id": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#pullrequestreview-1689613170",
      "submitted_at": "2023-10-20T09:19:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28686"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-20T11:56:56Z",
      "updated_at": "2023-10-20T11:56:56Z",
      "source": {
        "issue": {
          "id": 1954053513,
          "node_id": "PR_kwDOABII585dXq6y",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28690",
          "number": 28690,
          "state": "open",
          "state_reason": null,
          "title": "build: Introduce internal kernel library",
          "body": "This PR introduces a new `libbitcoin_kernel` internal library. It completes the internal library design as laid out in [doc/design/libraries.md](https://github.com/bitcoin/bitcoin/blob/master/doc/design/libraries.md). The external `libbitcoinkernel` library now uses the source lists of the internal library for its compilation.\r\n\r\nShould also address https://github.com/bitcoin/bitcoin/issues/28548.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28690",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28690",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28690.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28690.patch"
          },
          "created_at": "2023-10-20T11:01:03Z",
          "updated_at": "2023-10-24T06:32:59Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-20T21:07:43Z",
      "updated_at": "2023-10-20T21:07:43Z",
      "source": {
        "issue": {
          "id": 217385623,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyODQ2NDMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
          "number": 10102,
          "state": "open",
          "state_reason": null,
          "title": "Multiprocess bitcoin",
          "body": "**This is a draft PR because it is based on #28721.** The non-base commits are:\r\n\r\n- [`dc0a2a6726bb` depends: Update libmultiprocess library](https://github.com/bitcoin/bitcoin/pull/10102/commits/dc0a2a6726bbd3e197c64db93eaead76897e5fe3)\r\n- [`4a95a333717e` Increase feature_block.py and feature_taproot.py timeouts](https://github.com/bitcoin/bitcoin/pull/10102/commits/4a95a333717ed59b18de2759a4b5e6119c9efd9d)\r\n- [`debf07da817d` Add util::Result workaround to be compatible with libmultiprocess](https://github.com/bitcoin/bitcoin/pull/10102/commits/debf07da817dbfa60248a9527ba65a206799ab75)\r\n- [`21abaa9bba14` Add capnp serialization code for bitcoin types](https://github.com/bitcoin/bitcoin/pull/10102/commits/21abaa9bba1499a8134064a1ab31fbf789a43ef9)\r\n- [`12bbaf7c53f8` Add capnp wrapper for Handler interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/12bbaf7c53f84e49a7f7a1c79371dd6e347cdc4e)\r\n- [`82fdd6b35a7d` Add capnp wrapper for Chain interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/82fdd6b35a7d844a88194b1c1477144a5498bdf9)\r\n- [`4138a284cd68` Add capnp wrapper for Wallet interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/4138a284cd68bfe9a6c3b39c584fb2443a54c44c)\r\n- [`69df67fee50d` Add capnp wrapper for Node interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/69df67fee50dd396e9ae5354f499b4c879ae08e0)\r\n- [`0debb3a35abc` Make bitcoin-gui spawn a bitcoin-node process](https://github.com/bitcoin/bitcoin/pull/10102/commits/0debb3a35abce272de9c232bc1f8ede785ebe5c6)\r\n- [`c36072badafa` Make bitcoin-node spawn a bitcoin-wallet process](https://github.com/bitcoin/bitcoin/pull/10102/commits/c36072badafaaebf1b29db6ee76536adc11e9bb2)\r\n- [`0d151661f3bf` multiprocess: Add debug.log .wallet/.gui suffixes](https://github.com/bitcoin/bitcoin/pull/10102/commits/0d151661f3bf04fc6a6ae1d9560770a74681653d)\r\n- [`75fa53129e8d` doc: Multiprocess misc doc and comment updates](https://github.com/bitcoin/bitcoin/pull/10102/commits/75fa53129e8dfae3b043329895014ee3ef82fcb1)\r\n- [`18d382f4f8a7` combine_logs: Handle multiprocess wallet log files](https://github.com/bitcoin/bitcoin/pull/10102/commits/18d382f4f8a74612ae0e91efd8a2b83bb665e081)\r\n\r\n---\r\n\r\nThis PR adds an `--enable-multiprocess` configure option which builds new `bitcoin-node`, `bitcoin-wallet`, and `bitcoin-gui` executables with relevant functionality isolated into different processes. See [doc/design/multiprocess.md](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md) for usage details and future plans.\r\n\r\nThe change is implemented by adding a new [`Init`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/init.h) interface that spawns new wallet and node subprocesses that can be controlled over a [socketpair](http://man7.org/linux/man-pages/man2/socketpair.2.html) by calling [`Node`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/node.h), [`Wallet`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/wallet.h), and [`ChainClient`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/chain.h) methods. When running with split processes, you can see the IPC messages going back and forth in `-debug=1` output. Followup PR's #19460 and #19461 add `-ipcbind` and `-ipcconnect` options that allow more flexibility in how processes are connected.\r\n\r\nThe IPC protocol used is Cap'n Proto, but this could be swapped out for another protocol. Cap'n Proto types and libraries are only accessed in the [src/ipc/capnp/](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/src/ipc/capnp) directory, and not in any public headers or other parts of bitcoin code.\r\n\r\nSlides from a presentation describing this change are available on [google drive](https://docs.google.com/presentation/d/1AeJ-7gD-dItUgs5yH-HoEzLvXaEWe_2ZiGUUxYIXcws/edit). Demo code used in the presentation was from an older version this PR (tag [ipc.21](https://github.com/ryanofsky/bitcoin/releases/tag/pr%2Fipc.21), [commits](https://github.com/ryanofsky/bitcoin/compare/master...pr/ipc.21)).\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 82,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10102",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10102.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10102.patch"
          },
          "created_at": "2017-03-27T21:48:26Z",
          "updated_at": "2023-10-24T18:42:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 10759970187,
      "node_id": "LE_lADOABII5850VniKzwAAAAKBWB2L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10759970187",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-24T22:35:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1778154547,
      "node_id": "IC_kwDOABII585p_Hwz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1778154547",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-24T22:35:02Z",
      "updated_at": "2023-10-24T22:35:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#issuecomment-1778154547",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28686"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366273430",
      "pull_request_review_id": 1688907451,
      "id": 1366273430,
      "node_id": "PRRC_kwDOABII585Rb62W",
      "diff_hunk": "@@ -4,7 +4,6 @@\n \n #include <chainparams.h>\n #include <consensus/amount.h>\n-#include <net.h>",
      "path": "src/test/validation_tests.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "original_commit_id": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "in_reply_to_id": null,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "was this header not needed? I don't see `#include <node/connection.h>` being added",
      "created_at": "2023-10-20T00:19:17Z",
      "updated_at": "2023-10-20T00:19:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#discussion_r1366273430",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366273430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28686"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 7,
      "original_line": 7,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366395057",
      "pull_request_review_id": 1689112826,
      "id": 1366395057,
      "node_id": "PRRC_kwDOABII585RcYix",
      "diff_hunk": "@@ -4,7 +4,6 @@\n \n #include <chainparams.h>\n #include <consensus/amount.h>\n-#include <net.h>",
      "path": "src/test/validation_tests.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "original_commit_id": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "in_reply_to_id": 1366273430,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems like it wasn't; iwyu doesn't recommend adding it back, either. Shouldn't be needed -- validation stuff should be \"kernel\" level, so shouldn't rely on any p2p/net things.",
      "created_at": "2023-10-20T03:05:28Z",
      "updated_at": "2023-10-20T03:05:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#discussion_r1366395057",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366395057"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28686"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 7,
      "original_line": 7,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366408004",
      "pull_request_review_id": 1689130499,
      "id": 1366408004,
      "node_id": "PRRC_kwDOABII585RcbtE",
      "diff_hunk": "@@ -4,7 +4,6 @@\n \n #include <chainparams.h>\n #include <consensus/amount.h>\n-#include <net.h>",
      "path": "src/test/validation_tests.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "original_commit_id": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "in_reply_to_id": 1366273430,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sounds good to me!",
      "created_at": "2023-10-20T03:29:20Z",
      "updated_at": "2023-10-20T03:29:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#discussion_r1366408004",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366408004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28686"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 7,
      "original_line": 7,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366712378",
      "pull_request_review_id": 1689613170,
      "id": 1366712378,
      "node_id": "PRRC_kwDOABII585RdmA6",
      "diff_hunk": "@@ -0,0 +1,887 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NODE_CONNECTION_H\n+#define BITCOIN_NODE_CONNECTION_H\n+\n+/* This module encapsulates connecting with an individual peer,\n+ * translating messages into a byte stream and feeding it to a Sock\n+ * object. Protocol logic is left for net_processing/PeerManager, and\n+ * management of multiple peers is left for net/CConnman.\n+ */\n+\n+#include <bip324.h>\n+#include <hash.h>\n+#include <i2p.h>\n+#include <net_permissions.h>\n+#include <netaddress.h>\n+#include <node/connection_types.h>\n+#include <protocol.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <uint256.h>\n+#include <util/check.h>\n+#include <util/sock.h>\n+\n+#include <atomic>\n+#include <cstdint>\n+#include <deque>\n+#include <list>\n+#include <map>\n+#include <memory>\n+#include <optional>\n+#include <vector>\n+\n+/** Maximum length of incoming protocol messages (no message over 4 MB is currently acceptable). */\n+static const unsigned int MAX_PROTOCOL_MESSAGE_LENGTH = 4 * 1000 * 1000;\n+/** Maximum length of the user agent string in `version` message */\n+static const unsigned int MAX_SUBVERSION_LENGTH = 256;\n+\n+static const size_t DEFAULT_MAXRECEIVEBUFFER = 5 * 1000;\n+static const size_t DEFAULT_MAXSENDBUFFER    = 1 * 1000;\n+\n+typedef int64_t NodeId;\n+\n+struct CSerializedNetMsg {\n+    CSerializedNetMsg() = default;\n+    CSerializedNetMsg(CSerializedNetMsg&&) = default;\n+    CSerializedNetMsg& operator=(CSerializedNetMsg&&) = default;\n+    // No implicit copying, only moves.\n+    CSerializedNetMsg(const CSerializedNetMsg& msg) = delete;\n+    CSerializedNetMsg& operator=(const CSerializedNetMsg&) = delete;\n+\n+    CSerializedNetMsg Copy() const\n+    {\n+        CSerializedNetMsg copy;\n+        copy.data = data;\n+        copy.m_type = m_type;\n+        return copy;\n+    }\n+\n+    std::vector<unsigned char> data;\n+    std::string m_type;\n+\n+    /** Compute total memory usage of this object (own memory + any dynamic memory). */\n+    size_t GetMemoryUsage() const noexcept;\n+};\n+\n+extern const std::string NET_MESSAGE_TYPE_OTHER;\n+using mapMsgTypeSize = std::map</* message type */ std::string, /* total bytes */ uint64_t>;\n+\n+class CNodeStats\n+{\n+public:\n+    NodeId nodeid;\n+    std::chrono::seconds m_last_send;\n+    std::chrono::seconds m_last_recv;\n+    std::chrono::seconds m_last_tx_time;\n+    std::chrono::seconds m_last_block_time;\n+    std::chrono::seconds m_connected;\n+    int64_t nTimeOffset;\n+    std::string m_addr_name;\n+    int nVersion;\n+    std::string cleanSubVer;\n+    bool fInbound;\n+    // We requested high bandwidth connection to peer\n+    bool m_bip152_highbandwidth_to;\n+    // Peer requested high bandwidth connection\n+    bool m_bip152_highbandwidth_from;\n+    int m_starting_height;\n+    uint64_t nSendBytes;\n+    mapMsgTypeSize mapSendBytesPerMsgType;\n+    uint64_t nRecvBytes;\n+    mapMsgTypeSize mapRecvBytesPerMsgType;\n+    NetPermissionFlags m_permission_flags;\n+    std::chrono::microseconds m_last_ping_time;\n+    std::chrono::microseconds m_min_ping_time;\n+    // Our address, as reported by the peer\n+    std::string addrLocal;\n+    // Address of this peer\n+    CAddress addr;\n+    // Bind address of our side of the connection\n+    CAddress addrBind;\n+    // Network the peer connected through\n+    Network m_network;\n+    uint32_t m_mapped_as;\n+    ConnectionType m_conn_type;\n+    /** Transport protocol type. */\n+    TransportProtocolType m_transport_type;\n+    /** BIP324 session id string in hex, if any. */\n+    std::string m_session_id;\n+};\n+\n+\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * type and size.\n+ */\n+class CNetMessage {\n+public:\n+    CDataStream m_recv;                  //!< received message data\n+    std::chrono::microseconds m_time{0}; //!< time of message receipt\n+    uint32_t m_message_size{0};          //!< size of the payload\n+    uint32_t m_raw_message_size{0};      //!< used wire size of the message (including header/checksum)\n+    std::string m_type;\n+\n+    CNetMessage(CDataStream&& recv_in) : m_recv(std::move(recv_in)) {}\n+    // Only one CNetMessage object will exist for the same message on either\n+    // the receive or processing queue. For performance reasons we therefore\n+    // delete the copy constructor and assignment operator to avoid the\n+    // possibility of copying CNetMessage objects.\n+    CNetMessage(CNetMessage&&) = default;\n+    CNetMessage(const CNetMessage&) = delete;\n+    CNetMessage& operator=(CNetMessage&&) = default;\n+    CNetMessage& operator=(const CNetMessage&) = delete;\n+\n+    void SetVersion(int nVersionIn)\n+    {\n+        m_recv.SetVersion(nVersionIn);\n+    }\n+};\n+\n+/** The Transport converts one connection's sent messages to wire bytes, and received bytes back. */\n+class Transport {\n+public:\n+    virtual ~Transport() {}\n+\n+    struct Info\n+    {\n+        TransportProtocolType transport_type;\n+        std::optional<uint256> session_id;\n+    };\n+\n+    /** Retrieve information about this transport. */\n+    virtual Info GetInfo() const noexcept = 0;\n+\n+    // 1. Receiver side functions, for decoding bytes received on the wire into transport protocol\n+    // agnostic CNetMessage (message type & payload) objects.\n+\n+    /** Returns true if the current message is complete (so GetReceivedMessage can be called). */\n+    virtual bool ReceivedMessageComplete() const = 0;\n+\n+    /** Feed wire bytes to the transport.\n+     *\n+     * @return false if some bytes were invalid, in which case the transport can't be used anymore.\n+     *\n+     * Consumed bytes are chopped off the front of msg_bytes.\n+     */\n+    virtual bool ReceivedBytes(Span<const uint8_t>& msg_bytes) = 0;\n+\n+    /** Retrieve a completed message from transport.\n+     *\n+     * This can only be called when ReceivedMessageComplete() is true.\n+     *\n+     * If reject_message=true is returned the message itself is invalid, but (other than false\n+     * returned by ReceivedBytes) the transport is not in an inconsistent state.\n+     */\n+    virtual CNetMessage GetReceivedMessage(std::chrono::microseconds time, bool& reject_message) = 0;\n+\n+    // 2. Sending side functions, for converting messages into bytes to be sent over the wire.\n+\n+    /** Set the next message to send.\n+     *\n+     * If no message can currently be set (perhaps because the previous one is not yet done being\n+     * sent), returns false, and msg will be unmodified. Otherwise msg is enqueued (and\n+     * possibly moved-from) and true is returned.\n+     */\n+    virtual bool SetMessageToSend(CSerializedNetMsg& msg) noexcept = 0;\n+\n+    /** Return type for GetBytesToSend, consisting of:\n+     *  - Span<const uint8_t> to_send: span of bytes to be sent over the wire (possibly empty).\n+     *  - bool more: whether there will be more bytes to be sent after the ones in to_send are\n+     *    all sent (as signaled by MarkBytesSent()).\n+     *  - const std::string& m_type: message type on behalf of which this is being sent\n+     *    (\"\" for bytes that are not on behalf of any message).\n+     */\n+    using BytesToSend = std::tuple<\n+        Span<const uint8_t> /*to_send*/,\n+        bool /*more*/,\n+        const std::string& /*m_type*/\n+    >;\n+\n+    /** Get bytes to send on the wire, if any, along with other information about it.\n+     *\n+     * As a const function, it does not modify the transport's observable state, and is thus safe\n+     * to be called multiple times.\n+     *\n+     * @param[in] have_next_message If true, the \"more\" return value reports whether more will\n+     *            be sendable after a SetMessageToSend call. It is set by the caller when they know\n+     *            they have another message ready to send, and only care about what happens\n+     *            after that. The have_next_message argument only affects this \"more\" return value\n+     *            and nothing else.\n+     *\n+     *            Effectively, there are three possible outcomes about whether there are more bytes\n+     *            to send:\n+     *            - Yes:     the transport itself has more bytes to send later. For example, for\n+     *                       V1Transport this happens during the sending of the header of a\n+     *                       message, when there is a non-empty payload that follows.\n+     *            - No:      the transport itself has no more bytes to send, but will have bytes to\n+     *                       send if handed a message through SetMessageToSend. In V1Transport this\n+     *                       happens when sending the payload of a message.\n+     *            - Blocked: the transport itself has no more bytes to send, and is also incapable\n+     *                       of sending anything more at all now, if it were handed another\n+     *                       message to send. This occurs in V2Transport before the handshake is\n+     *                       complete, as the encryption ciphers are not set up for sending\n+     *                       messages before that point.\n+     *\n+     *            The boolean 'more' is true for Yes, false for Blocked, and have_next_message\n+     *            controls what is returned for No.\n+     *\n+     * @return a BytesToSend object. The to_send member returned acts as a stream which is only\n+     *         ever appended to. This means that with the exception of MarkBytesSent (which pops\n+     *         bytes off the front of later to_sends), operations on the transport can only append\n+     *         to what is being returned. Also note that m_type and to_send refer to data that is\n+     *         internal to the transport, and calling any non-const function on this object may\n+     *         invalidate them.\n+     */\n+    virtual BytesToSend GetBytesToSend(bool have_next_message) const noexcept = 0;\n+\n+    /** Report how many bytes returned by the last GetBytesToSend() have been sent.\n+     *\n+     * bytes_sent cannot exceed to_send.size() of the last GetBytesToSend() result.\n+     *\n+     * If bytes_sent=0, this call has no effect.\n+     */\n+    virtual void MarkBytesSent(size_t bytes_sent) noexcept = 0;\n+\n+    /** Return the memory usage of this transport attributable to buffered data to send. */\n+    virtual size_t GetSendMemoryUsage() const noexcept = 0;\n+\n+    // 3. Miscellaneous functions.\n+\n+    /** Whether upon disconnections, a reconnect with V1 is warranted. */\n+    virtual bool ShouldReconnectV1() const noexcept = 0;\n+};\n+\n+class V1Transport final : public Transport",
      "path": "src/node/connection.h",
      "position": 259,
      "original_position": 259,
      "commit_id": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "original_commit_id": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What do you think of moving the transport impls to net.cpp (or their own module)?. They aren't really part of this interface, more of a implementation detail.",
      "created_at": "2023-10-20T09:19:40Z",
      "updated_at": "2023-10-20T09:19:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#discussion_r1366712378",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366712378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28686"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 259,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366850622",
      "pull_request_review_id": 1689833687,
      "id": 1366850622,
      "node_id": "PRRC_kwDOABII585ReHw-",
      "diff_hunk": "@@ -0,0 +1,887 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NODE_CONNECTION_H\n+#define BITCOIN_NODE_CONNECTION_H\n+\n+/* This module encapsulates connecting with an individual peer,\n+ * translating messages into a byte stream and feeding it to a Sock\n+ * object. Protocol logic is left for net_processing/PeerManager, and\n+ * management of multiple peers is left for net/CConnman.\n+ */\n+\n+#include <bip324.h>\n+#include <hash.h>\n+#include <i2p.h>\n+#include <net_permissions.h>\n+#include <netaddress.h>\n+#include <node/connection_types.h>\n+#include <protocol.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <uint256.h>\n+#include <util/check.h>\n+#include <util/sock.h>\n+\n+#include <atomic>\n+#include <cstdint>\n+#include <deque>\n+#include <list>\n+#include <map>\n+#include <memory>\n+#include <optional>\n+#include <vector>\n+\n+/** Maximum length of incoming protocol messages (no message over 4 MB is currently acceptable). */\n+static const unsigned int MAX_PROTOCOL_MESSAGE_LENGTH = 4 * 1000 * 1000;\n+/** Maximum length of the user agent string in `version` message */\n+static const unsigned int MAX_SUBVERSION_LENGTH = 256;\n+\n+static const size_t DEFAULT_MAXRECEIVEBUFFER = 5 * 1000;\n+static const size_t DEFAULT_MAXSENDBUFFER    = 1 * 1000;\n+\n+typedef int64_t NodeId;\n+\n+struct CSerializedNetMsg {\n+    CSerializedNetMsg() = default;\n+    CSerializedNetMsg(CSerializedNetMsg&&) = default;\n+    CSerializedNetMsg& operator=(CSerializedNetMsg&&) = default;\n+    // No implicit copying, only moves.\n+    CSerializedNetMsg(const CSerializedNetMsg& msg) = delete;\n+    CSerializedNetMsg& operator=(const CSerializedNetMsg&) = delete;\n+\n+    CSerializedNetMsg Copy() const\n+    {\n+        CSerializedNetMsg copy;\n+        copy.data = data;\n+        copy.m_type = m_type;\n+        return copy;\n+    }\n+\n+    std::vector<unsigned char> data;\n+    std::string m_type;\n+\n+    /** Compute total memory usage of this object (own memory + any dynamic memory). */\n+    size_t GetMemoryUsage() const noexcept;\n+};\n+\n+extern const std::string NET_MESSAGE_TYPE_OTHER;\n+using mapMsgTypeSize = std::map</* message type */ std::string, /* total bytes */ uint64_t>;\n+\n+class CNodeStats\n+{\n+public:\n+    NodeId nodeid;\n+    std::chrono::seconds m_last_send;\n+    std::chrono::seconds m_last_recv;\n+    std::chrono::seconds m_last_tx_time;\n+    std::chrono::seconds m_last_block_time;\n+    std::chrono::seconds m_connected;\n+    int64_t nTimeOffset;\n+    std::string m_addr_name;\n+    int nVersion;\n+    std::string cleanSubVer;\n+    bool fInbound;\n+    // We requested high bandwidth connection to peer\n+    bool m_bip152_highbandwidth_to;\n+    // Peer requested high bandwidth connection\n+    bool m_bip152_highbandwidth_from;\n+    int m_starting_height;\n+    uint64_t nSendBytes;\n+    mapMsgTypeSize mapSendBytesPerMsgType;\n+    uint64_t nRecvBytes;\n+    mapMsgTypeSize mapRecvBytesPerMsgType;\n+    NetPermissionFlags m_permission_flags;\n+    std::chrono::microseconds m_last_ping_time;\n+    std::chrono::microseconds m_min_ping_time;\n+    // Our address, as reported by the peer\n+    std::string addrLocal;\n+    // Address of this peer\n+    CAddress addr;\n+    // Bind address of our side of the connection\n+    CAddress addrBind;\n+    // Network the peer connected through\n+    Network m_network;\n+    uint32_t m_mapped_as;\n+    ConnectionType m_conn_type;\n+    /** Transport protocol type. */\n+    TransportProtocolType m_transport_type;\n+    /** BIP324 session id string in hex, if any. */\n+    std::string m_session_id;\n+};\n+\n+\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * type and size.\n+ */\n+class CNetMessage {\n+public:\n+    CDataStream m_recv;                  //!< received message data\n+    std::chrono::microseconds m_time{0}; //!< time of message receipt\n+    uint32_t m_message_size{0};          //!< size of the payload\n+    uint32_t m_raw_message_size{0};      //!< used wire size of the message (including header/checksum)\n+    std::string m_type;\n+\n+    CNetMessage(CDataStream&& recv_in) : m_recv(std::move(recv_in)) {}\n+    // Only one CNetMessage object will exist for the same message on either\n+    // the receive or processing queue. For performance reasons we therefore\n+    // delete the copy constructor and assignment operator to avoid the\n+    // possibility of copying CNetMessage objects.\n+    CNetMessage(CNetMessage&&) = default;\n+    CNetMessage(const CNetMessage&) = delete;\n+    CNetMessage& operator=(CNetMessage&&) = default;\n+    CNetMessage& operator=(const CNetMessage&) = delete;\n+\n+    void SetVersion(int nVersionIn)\n+    {\n+        m_recv.SetVersion(nVersionIn);\n+    }\n+};\n+\n+/** The Transport converts one connection's sent messages to wire bytes, and received bytes back. */\n+class Transport {\n+public:\n+    virtual ~Transport() {}\n+\n+    struct Info\n+    {\n+        TransportProtocolType transport_type;\n+        std::optional<uint256> session_id;\n+    };\n+\n+    /** Retrieve information about this transport. */\n+    virtual Info GetInfo() const noexcept = 0;\n+\n+    // 1. Receiver side functions, for decoding bytes received on the wire into transport protocol\n+    // agnostic CNetMessage (message type & payload) objects.\n+\n+    /** Returns true if the current message is complete (so GetReceivedMessage can be called). */\n+    virtual bool ReceivedMessageComplete() const = 0;\n+\n+    /** Feed wire bytes to the transport.\n+     *\n+     * @return false if some bytes were invalid, in which case the transport can't be used anymore.\n+     *\n+     * Consumed bytes are chopped off the front of msg_bytes.\n+     */\n+    virtual bool ReceivedBytes(Span<const uint8_t>& msg_bytes) = 0;\n+\n+    /** Retrieve a completed message from transport.\n+     *\n+     * This can only be called when ReceivedMessageComplete() is true.\n+     *\n+     * If reject_message=true is returned the message itself is invalid, but (other than false\n+     * returned by ReceivedBytes) the transport is not in an inconsistent state.\n+     */\n+    virtual CNetMessage GetReceivedMessage(std::chrono::microseconds time, bool& reject_message) = 0;\n+\n+    // 2. Sending side functions, for converting messages into bytes to be sent over the wire.\n+\n+    /** Set the next message to send.\n+     *\n+     * If no message can currently be set (perhaps because the previous one is not yet done being\n+     * sent), returns false, and msg will be unmodified. Otherwise msg is enqueued (and\n+     * possibly moved-from) and true is returned.\n+     */\n+    virtual bool SetMessageToSend(CSerializedNetMsg& msg) noexcept = 0;\n+\n+    /** Return type for GetBytesToSend, consisting of:\n+     *  - Span<const uint8_t> to_send: span of bytes to be sent over the wire (possibly empty).\n+     *  - bool more: whether there will be more bytes to be sent after the ones in to_send are\n+     *    all sent (as signaled by MarkBytesSent()).\n+     *  - const std::string& m_type: message type on behalf of which this is being sent\n+     *    (\"\" for bytes that are not on behalf of any message).\n+     */\n+    using BytesToSend = std::tuple<\n+        Span<const uint8_t> /*to_send*/,\n+        bool /*more*/,\n+        const std::string& /*m_type*/\n+    >;\n+\n+    /** Get bytes to send on the wire, if any, along with other information about it.\n+     *\n+     * As a const function, it does not modify the transport's observable state, and is thus safe\n+     * to be called multiple times.\n+     *\n+     * @param[in] have_next_message If true, the \"more\" return value reports whether more will\n+     *            be sendable after a SetMessageToSend call. It is set by the caller when they know\n+     *            they have another message ready to send, and only care about what happens\n+     *            after that. The have_next_message argument only affects this \"more\" return value\n+     *            and nothing else.\n+     *\n+     *            Effectively, there are three possible outcomes about whether there are more bytes\n+     *            to send:\n+     *            - Yes:     the transport itself has more bytes to send later. For example, for\n+     *                       V1Transport this happens during the sending of the header of a\n+     *                       message, when there is a non-empty payload that follows.\n+     *            - No:      the transport itself has no more bytes to send, but will have bytes to\n+     *                       send if handed a message through SetMessageToSend. In V1Transport this\n+     *                       happens when sending the payload of a message.\n+     *            - Blocked: the transport itself has no more bytes to send, and is also incapable\n+     *                       of sending anything more at all now, if it were handed another\n+     *                       message to send. This occurs in V2Transport before the handshake is\n+     *                       complete, as the encryption ciphers are not set up for sending\n+     *                       messages before that point.\n+     *\n+     *            The boolean 'more' is true for Yes, false for Blocked, and have_next_message\n+     *            controls what is returned for No.\n+     *\n+     * @return a BytesToSend object. The to_send member returned acts as a stream which is only\n+     *         ever appended to. This means that with the exception of MarkBytesSent (which pops\n+     *         bytes off the front of later to_sends), operations on the transport can only append\n+     *         to what is being returned. Also note that m_type and to_send refer to data that is\n+     *         internal to the transport, and calling any non-const function on this object may\n+     *         invalidate them.\n+     */\n+    virtual BytesToSend GetBytesToSend(bool have_next_message) const noexcept = 0;\n+\n+    /** Report how many bytes returned by the last GetBytesToSend() have been sent.\n+     *\n+     * bytes_sent cannot exceed to_send.size() of the last GetBytesToSend() result.\n+     *\n+     * If bytes_sent=0, this call has no effect.\n+     */\n+    virtual void MarkBytesSent(size_t bytes_sent) noexcept = 0;\n+\n+    /** Return the memory usage of this transport attributable to buffered data to send. */\n+    virtual size_t GetSendMemoryUsage() const noexcept = 0;\n+\n+    // 3. Miscellaneous functions.\n+\n+    /** Whether upon disconnections, a reconnect with V1 is warranted. */\n+    virtual bool ShouldReconnectV1() const noexcept = 0;\n+};\n+\n+class V1Transport final : public Transport",
      "path": "src/node/connection.h",
      "position": 259,
      "original_position": 259,
      "commit_id": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "original_commit_id": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "in_reply_to_id": 1366712378,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The class info is exposed for unit tests, and you at least need `class Transport` in order to know what a `CNode` looks like. Separating out the V1/V2 implementation details alone doesn't seem like much of a win. (And wouldn't really be a win at all if we just had a concrete Transport class instead of the replaceable virtual setup, cf https://github.com/bitcoin/bitcoin/pull/28331#discussion_r1336030845)",
      "created_at": "2023-10-20T11:28:53Z",
      "updated_at": "2023-10-20T11:28:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#discussion_r1366850622",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366850622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28686"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 259,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366851589",
      "pull_request_review_id": 1689835431,
      "id": 1366851589,
      "node_id": "PRRC_kwDOABII585ReIAF",
      "diff_hunk": "@@ -0,0 +1,887 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NODE_CONNECTION_H\n+#define BITCOIN_NODE_CONNECTION_H\n+\n+/* This module encapsulates connecting with an individual peer,\n+ * translating messages into a byte stream and feeding it to a Sock\n+ * object. Protocol logic is left for net_processing/PeerManager, and\n+ * management of multiple peers is left for net/CConnman.\n+ */\n+\n+#include <bip324.h>\n+#include <hash.h>\n+#include <i2p.h>\n+#include <net_permissions.h>\n+#include <netaddress.h>\n+#include <node/connection_types.h>\n+#include <protocol.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <sync.h>\n+#include <uint256.h>\n+#include <util/check.h>\n+#include <util/sock.h>\n+\n+#include <atomic>\n+#include <cstdint>\n+#include <deque>\n+#include <list>\n+#include <map>\n+#include <memory>\n+#include <optional>\n+#include <vector>\n+\n+/** Maximum length of incoming protocol messages (no message over 4 MB is currently acceptable). */\n+static const unsigned int MAX_PROTOCOL_MESSAGE_LENGTH = 4 * 1000 * 1000;\n+/** Maximum length of the user agent string in `version` message */\n+static const unsigned int MAX_SUBVERSION_LENGTH = 256;\n+\n+static const size_t DEFAULT_MAXRECEIVEBUFFER = 5 * 1000;\n+static const size_t DEFAULT_MAXSENDBUFFER    = 1 * 1000;\n+\n+typedef int64_t NodeId;\n+\n+struct CSerializedNetMsg {\n+    CSerializedNetMsg() = default;\n+    CSerializedNetMsg(CSerializedNetMsg&&) = default;\n+    CSerializedNetMsg& operator=(CSerializedNetMsg&&) = default;\n+    // No implicit copying, only moves.\n+    CSerializedNetMsg(const CSerializedNetMsg& msg) = delete;\n+    CSerializedNetMsg& operator=(const CSerializedNetMsg&) = delete;\n+\n+    CSerializedNetMsg Copy() const\n+    {\n+        CSerializedNetMsg copy;\n+        copy.data = data;\n+        copy.m_type = m_type;\n+        return copy;\n+    }\n+\n+    std::vector<unsigned char> data;\n+    std::string m_type;\n+\n+    /** Compute total memory usage of this object (own memory + any dynamic memory). */\n+    size_t GetMemoryUsage() const noexcept;\n+};\n+\n+extern const std::string NET_MESSAGE_TYPE_OTHER;\n+using mapMsgTypeSize = std::map</* message type */ std::string, /* total bytes */ uint64_t>;\n+\n+class CNodeStats\n+{\n+public:\n+    NodeId nodeid;\n+    std::chrono::seconds m_last_send;\n+    std::chrono::seconds m_last_recv;\n+    std::chrono::seconds m_last_tx_time;\n+    std::chrono::seconds m_last_block_time;\n+    std::chrono::seconds m_connected;\n+    int64_t nTimeOffset;\n+    std::string m_addr_name;\n+    int nVersion;\n+    std::string cleanSubVer;\n+    bool fInbound;\n+    // We requested high bandwidth connection to peer\n+    bool m_bip152_highbandwidth_to;\n+    // Peer requested high bandwidth connection\n+    bool m_bip152_highbandwidth_from;\n+    int m_starting_height;\n+    uint64_t nSendBytes;\n+    mapMsgTypeSize mapSendBytesPerMsgType;\n+    uint64_t nRecvBytes;\n+    mapMsgTypeSize mapRecvBytesPerMsgType;\n+    NetPermissionFlags m_permission_flags;\n+    std::chrono::microseconds m_last_ping_time;\n+    std::chrono::microseconds m_min_ping_time;\n+    // Our address, as reported by the peer\n+    std::string addrLocal;\n+    // Address of this peer\n+    CAddress addr;\n+    // Bind address of our side of the connection\n+    CAddress addrBind;\n+    // Network the peer connected through\n+    Network m_network;\n+    uint32_t m_mapped_as;\n+    ConnectionType m_conn_type;\n+    /** Transport protocol type. */\n+    TransportProtocolType m_transport_type;\n+    /** BIP324 session id string in hex, if any. */\n+    std::string m_session_id;\n+};\n+\n+\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * type and size.\n+ */\n+class CNetMessage {\n+public:\n+    CDataStream m_recv;                  //!< received message data\n+    std::chrono::microseconds m_time{0}; //!< time of message receipt\n+    uint32_t m_message_size{0};          //!< size of the payload\n+    uint32_t m_raw_message_size{0};      //!< used wire size of the message (including header/checksum)\n+    std::string m_type;\n+\n+    CNetMessage(CDataStream&& recv_in) : m_recv(std::move(recv_in)) {}\n+    // Only one CNetMessage object will exist for the same message on either\n+    // the receive or processing queue. For performance reasons we therefore\n+    // delete the copy constructor and assignment operator to avoid the\n+    // possibility of copying CNetMessage objects.\n+    CNetMessage(CNetMessage&&) = default;\n+    CNetMessage(const CNetMessage&) = delete;\n+    CNetMessage& operator=(CNetMessage&&) = default;\n+    CNetMessage& operator=(const CNetMessage&) = delete;\n+\n+    void SetVersion(int nVersionIn)\n+    {\n+        m_recv.SetVersion(nVersionIn);\n+    }\n+};\n+\n+/** The Transport converts one connection's sent messages to wire bytes, and received bytes back. */\n+class Transport {\n+public:\n+    virtual ~Transport() {}\n+\n+    struct Info\n+    {\n+        TransportProtocolType transport_type;\n+        std::optional<uint256> session_id;\n+    };\n+\n+    /** Retrieve information about this transport. */\n+    virtual Info GetInfo() const noexcept = 0;\n+\n+    // 1. Receiver side functions, for decoding bytes received on the wire into transport protocol\n+    // agnostic CNetMessage (message type & payload) objects.\n+\n+    /** Returns true if the current message is complete (so GetReceivedMessage can be called). */\n+    virtual bool ReceivedMessageComplete() const = 0;\n+\n+    /** Feed wire bytes to the transport.\n+     *\n+     * @return false if some bytes were invalid, in which case the transport can't be used anymore.\n+     *\n+     * Consumed bytes are chopped off the front of msg_bytes.\n+     */\n+    virtual bool ReceivedBytes(Span<const uint8_t>& msg_bytes) = 0;\n+\n+    /** Retrieve a completed message from transport.\n+     *\n+     * This can only be called when ReceivedMessageComplete() is true.\n+     *\n+     * If reject_message=true is returned the message itself is invalid, but (other than false\n+     * returned by ReceivedBytes) the transport is not in an inconsistent state.\n+     */\n+    virtual CNetMessage GetReceivedMessage(std::chrono::microseconds time, bool& reject_message) = 0;\n+\n+    // 2. Sending side functions, for converting messages into bytes to be sent over the wire.\n+\n+    /** Set the next message to send.\n+     *\n+     * If no message can currently be set (perhaps because the previous one is not yet done being\n+     * sent), returns false, and msg will be unmodified. Otherwise msg is enqueued (and\n+     * possibly moved-from) and true is returned.\n+     */\n+    virtual bool SetMessageToSend(CSerializedNetMsg& msg) noexcept = 0;\n+\n+    /** Return type for GetBytesToSend, consisting of:\n+     *  - Span<const uint8_t> to_send: span of bytes to be sent over the wire (possibly empty).\n+     *  - bool more: whether there will be more bytes to be sent after the ones in to_send are\n+     *    all sent (as signaled by MarkBytesSent()).\n+     *  - const std::string& m_type: message type on behalf of which this is being sent\n+     *    (\"\" for bytes that are not on behalf of any message).\n+     */\n+    using BytesToSend = std::tuple<\n+        Span<const uint8_t> /*to_send*/,\n+        bool /*more*/,\n+        const std::string& /*m_type*/\n+    >;\n+\n+    /** Get bytes to send on the wire, if any, along with other information about it.\n+     *\n+     * As a const function, it does not modify the transport's observable state, and is thus safe\n+     * to be called multiple times.\n+     *\n+     * @param[in] have_next_message If true, the \"more\" return value reports whether more will\n+     *            be sendable after a SetMessageToSend call. It is set by the caller when they know\n+     *            they have another message ready to send, and only care about what happens\n+     *            after that. The have_next_message argument only affects this \"more\" return value\n+     *            and nothing else.\n+     *\n+     *            Effectively, there are three possible outcomes about whether there are more bytes\n+     *            to send:\n+     *            - Yes:     the transport itself has more bytes to send later. For example, for\n+     *                       V1Transport this happens during the sending of the header of a\n+     *                       message, when there is a non-empty payload that follows.\n+     *            - No:      the transport itself has no more bytes to send, but will have bytes to\n+     *                       send if handed a message through SetMessageToSend. In V1Transport this\n+     *                       happens when sending the payload of a message.\n+     *            - Blocked: the transport itself has no more bytes to send, and is also incapable\n+     *                       of sending anything more at all now, if it were handed another\n+     *                       message to send. This occurs in V2Transport before the handshake is\n+     *                       complete, as the encryption ciphers are not set up for sending\n+     *                       messages before that point.\n+     *\n+     *            The boolean 'more' is true for Yes, false for Blocked, and have_next_message\n+     *            controls what is returned for No.\n+     *\n+     * @return a BytesToSend object. The to_send member returned acts as a stream which is only\n+     *         ever appended to. This means that with the exception of MarkBytesSent (which pops\n+     *         bytes off the front of later to_sends), operations on the transport can only append\n+     *         to what is being returned. Also note that m_type and to_send refer to data that is\n+     *         internal to the transport, and calling any non-const function on this object may\n+     *         invalidate them.\n+     */\n+    virtual BytesToSend GetBytesToSend(bool have_next_message) const noexcept = 0;\n+\n+    /** Report how many bytes returned by the last GetBytesToSend() have been sent.\n+     *\n+     * bytes_sent cannot exceed to_send.size() of the last GetBytesToSend() result.\n+     *\n+     * If bytes_sent=0, this call has no effect.\n+     */\n+    virtual void MarkBytesSent(size_t bytes_sent) noexcept = 0;\n+\n+    /** Return the memory usage of this transport attributable to buffered data to send. */\n+    virtual size_t GetSendMemoryUsage() const noexcept = 0;\n+\n+    // 3. Miscellaneous functions.\n+\n+    /** Whether upon disconnections, a reconnect with V1 is warranted. */\n+    virtual bool ShouldReconnectV1() const noexcept = 0;\n+};\n+\n+class V1Transport final : public Transport",
      "path": "src/node/connection.h",
      "position": 259,
      "original_position": 259,
      "commit_id": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "original_commit_id": "1116e57de9556d927e1b3ec14c2c5a71bd6043c5",
      "in_reply_to_id": 1366712378,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(The `Transport` stuff is all specific to a single connection, so it would go in `node/connection.cpp` rather than `net.cpp` per the logic of this PR)",
      "created_at": "2023-10-20T11:29:56Z",
      "updated_at": "2023-10-20T11:29:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28686#discussion_r1366851589",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366851589"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28686"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 259,
      "original_line": 259,
      "side": "RIGHT"
    }
  ]
}