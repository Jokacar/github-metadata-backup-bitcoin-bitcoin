{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676",
    "id": 1563273625,
    "node_id": "PR_kwDOABII585dLamZ",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28676",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28676.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28676.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
    "number": 28676,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "[WIP] Cluster mempool implementation",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This is a draft implementation of the cluster mempool design described in #27677.  I'm opening this as a draft PR now to share the branch I'm working on with others, so that we can start to think about in-progress projects (like package relay, package validation, and package rbf) in the context of this design.  Also, I can use some help from others for parts of this work, including the interaction between the mempool and the wallet, and also reworking some of our existing test cases to fit a cluster-mempool world.\r\n\r\nNote that the design of this implementation is subject to change as I continue to iterate on the code (to make the code more hygienic and robust, in particular). At this point though I think the performance is pretty reasonable and I'm not currently aware of any bugs.  There are some microbenchmarks added here, and some improved fuzz tests; it would be great if others ran both of those on their own hardware as well and reported back on any findings.\r\n\r\nThis branch implements the following observable behavior changes:\r\n\r\n- Maintains a partitioning of the mempool into connected clusters\r\n- Each cluster is sorted (\"linearized\") either using an optimal sort, or an ancestor-feerate-based one, depending on the size of the cluster (thanks to @sipa for this logic)\r\n- Transaction selection for mining is updated to use the cluster linearizations\r\n- Mempool eviction is updated to use the cluster linearizations\r\n- The RBF rules are updated to drop the requirement that no new inputs are introduced, and to change the feerate requirement to instead check that the mining score of a replacement transaction exceed the mining score of the conflicted transactions\r\n- The CPFP carveout rule is eliminated (it doesn't make sense in a cluster-limited mempool)\r\n- The ancestor and descendant limits are no longer enforced.\r\n- New cluster count/cluster vsize limits are now enforced instead.\r\n\r\nSome less observable behavior changes:\r\n- The cached ancestor and descendant data are dropped from the mempool, along with the multi_index indices that were maintained to sort the mempool by ancestor and descendant feerates. For compatibility (eg with wallet behavior or RPCs exposing this), this information is now calculated dynamically instead.\r\n- The ancestor and descendant walking algorithms are now implemented using `epoch`s (resulting in a significant performance improvement, according to the benchmarks I've looked at)\r\n\r\nStill to do:\r\n\r\n- [ ] More comparisons between this branch and master on historical data to compare validation speed (accepting loose transactions, processing RBF transactions, validating a block/postprocessing, updating the mempool for a reorg).\r\n- [x] More historical data analysis to try to evaluate the likely impact of setting the cluster size limits to varying values (to motivate what values we should ultimately pick). [DONE, see [this post](https://delvingbitcoin.org/t/research-into-the-effects-of-a-cluster-size-limited-mempool-in-2023/794/1)]\r\n- [ ] Updating wallet code to be cluster-aware (including mini_miner and coin selection)\r\n- [ ] Rework many of our functional tests to be cluster-aware\r\n- [ ] Figure out what package validation and package RBF rules should be in this design\r\n- [x] Rework the `partially_downloaded_block` fuzz target to not add duplicate transactions to the mempool (#29990).\r\n- [ ] Update RBF logic to ensure that replacements always strictly improve the mempool.\r\n- [ ] Figure out how we want to document our RBF policy (preserve historical references to BIP 125 or previous Bitcoin Core behaviors vs clean slate documentation?)\r\n\r\nFor discussion/feedback:\r\n\r\n - How significant is it to be dropping the CPFP carveout rule?  Does that affect how we will ultimately want to stage new mempool deployment?\r\n - How well do the proposed RBF rules meet everyone's use cases?\r\n - What design improvements can we make to the cluster tracking implementation?\r\n - The ZMQ callbacks that occur when a block is found will happen in a slightly different order, because we now will fully remove all transactions occurring in a block from the mempool before removing any conflicts. Is this a problem?",
    "labels": [
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      }
    ],
    "created_at": "2023-10-18T18:59:37Z",
    "updated_at": "2024-11-14T01:49:58Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "9d3922d9af2c274f1a32a9c549e0abaa9d1363ad",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "sdaftuar:2023-10-cluster-mempool",
      "ref": "2023-10-cluster-mempool",
      "sha": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 28761781,
        "node_id": "MDEwOlJlcG9zaXRvcnkyODc2MTc4MQ==",
        "name": "bitcoin",
        "full_name": "sdaftuar/bitcoin",
        "owner": {
          "login": "sdaftuar",
          "id": 7463573,
          "node_id": "MDQ6VXNlcjc0NjM1NzM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sdaftuar",
          "html_url": "https://github.com/sdaftuar",
          "followers_url": "https://api.github.com/users/sdaftuar/followers",
          "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
          "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
          "repos_url": "https://api.github.com/users/sdaftuar/repos",
          "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/sdaftuar/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sdaftuar/bitcoin",
        "archive_url": "https://api.github.com/repos/sdaftuar/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sdaftuar/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sdaftuar/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sdaftuar/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sdaftuar/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sdaftuar/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sdaftuar/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sdaftuar/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sdaftuar/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sdaftuar/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sdaftuar/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sdaftuar/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sdaftuar/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sdaftuar/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sdaftuar/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sdaftuar/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sdaftuar/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sdaftuar/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sdaftuar/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sdaftuar/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sdaftuar/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sdaftuar/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sdaftuar/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sdaftuar/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sdaftuar/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sdaftuar/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sdaftuar/bitcoin/hooks",
        "svn_url": "https://github.com/sdaftuar/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 283144,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-14T00:21:28Z",
        "created_at": "2015-01-04T02:52:13Z",
        "updated_at": "2024-02-09T22:47:48Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "42282592943755be2b91ff27a4fafd997df98586",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36345,
        "stargazers_count": 79453,
        "watchers_count": 79453,
        "size": 272305,
        "default_branch": "master",
        "open_issues_count": 644,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-14T00:14:39Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-11-14T00:14:46Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 4419,
    "deletions": 3237,
    "changed_files": 71,
    "commits": 87,
    "review_comments": 84,
    "comments": 19
  },
  "events": [
    {
      "event": "mentioned",
      "id": 10697854902,
      "node_id": "MEE_lADOABII5850QVJBzwAAAAJ9pE-2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10697854902",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T18:59:38Z"
    },
    {
      "event": "subscribed",
      "id": 10697854917,
      "node_id": "SE_lADOABII5850QVJBzwAAAAJ9pE_F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10697854917",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T18:59:38Z"
    },
    {
      "event": "commented",
      "id": 1769143762,
      "node_id": "IC_kwDOABII585pcv3S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1769143762",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T18:59:40Z",
      "updated_at": "2024-11-01T15:00:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/28676.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30964](https://github.com/bitcoin/bitcoin/pull/30964) (Disable RBF Rule 2 by arik-so)\n* [#30903](https://github.com/bitcoin/bitcoin/pull/30903) (cmake: Add `FindZeroMQ` module by hebasto)\n* [#30882](https://github.com/bitcoin/bitcoin/pull/30882) (wip: Split fuzz binary (take 2) by dergoegge)\n* [#30592](https://github.com/bitcoin/bitcoin/pull/30592) (Remove mempoolfullrbf by instagibbs)\n* [#30391](https://github.com/bitcoin/bitcoin/pull/30391) (BlockAssembler: return selected packages vsize and feerate by ismaelsadeeq)\n* [#30157](https://github.com/bitcoin/bitcoin/pull/30157) (Fee Estimation via Fee rate Forecasters by ismaelsadeeq)\n* [#29954](https://github.com/bitcoin/bitcoin/pull/29954) (RPC: Return `permitbaremultisig` and `maxdatacarriersize` in `getmempoolinfo` by kristapsk)\n* [#29680](https://github.com/bitcoin/bitcoin/pull/29680) (wallet: fix unrelated parent conflict doesn't cause child tx to be marked as conflict by Eunovo)\n* [#28843](https://github.com/bitcoin/bitcoin/pull/28843) ([refactor] Cleanup BlockAssembler mempool usage by TheCharlatan)\n* [#28121](https://github.com/bitcoin/bitcoin/pull/28121) (include verbose \"reject-details\" field in testmempoolaccept response by pinheadmz)\n* [#26593](https://github.com/bitcoin/bitcoin/pull/26593) (tracing: Only prepare tracepoint arguments when actually tracing by 0xB10C)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1769143762",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "labeled",
      "id": 10697976819,
      "node_id": "LE_lADOABII5850QVJBzwAAAAJ9pivz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10697976819",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T19:11:53Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10697997651,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAJ9pn1T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10697997651",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T19:14:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10715626094,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAJ-s3pu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10715626094",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T18:28:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10717967266,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAJ-1zOi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10717967266",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T23:46:18Z"
    },
    {
      "event": "labeled",
      "id": 10722430474,
      "node_id": "LE_lADOABII5850QVJBzwAAAAJ_G04K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10722430474",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-20T09:57:25Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "reviewed",
      "id": 1685916441,
      "node_id": "PRR_kwDOABII585kfQsZ",
      "url": null,
      "actor": null,
      "commit_id": "7619c275dae3b2b0df8cd8071bc2250556350c49",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1685916441",
      "submitted_at": "2023-10-24T18:23:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "labeled",
      "id": 10809901870,
      "node_id": "LE_lADOABII5850QVJBzwAAAAKEUgMu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10809901870",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-30T15:55:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1809939629,
      "node_id": "IC_kwDOABII585r4Xyt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1809939629",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-14T10:29:27Z",
      "updated_at": "2023-11-14T14:23:52Z",
      "author_association": "MEMBER",
      "body": "It would be useful to add a `mempool_backwards_compatibility.py` test to illustrate how the new rules interact with older nodes. It could have two modern nodes and one v25 (or v26) node. Some of the tests you deleted in this branch could be moved there. E.g. the test could demonstrate how RBF rule 2 is not enforced when relaying to the new node, but it is when relaying to the v25 node.\r\n\r\nBenchmarks on a 2019 MacBook Pro (2,3 GHz 8-Core Intel Core i9), plugged in:\r\n\r\n```\r\n% src/bench/bench_bitcoin -filter=.*Mem.* -min-time=10000\r\n\r\n|      330,557,188.67 |                3.03 |    1.5% |     10.77 | `ComplexMemPool`\r\n|      451,529,273.50 |                2.21 |    2.8% |     10.01 | `MemPoolAddTransactions`\r\n|            2,847.13 |          351,231.06 |    2.7% |     10.93 | `MemPoolAncestorsDescendants`\r\n|           11,047.90 |           90,514.97 |    2.5% |     10.69 | `MemPoolMiningScoreCheck`\r\n|        4,328,796.04 |              231.01 |    1.1% |     10.99 | `MempoolCheck`\r\n|           36,268.80 |           27,571.91 |    2.9% |     11.17 | `MempoolEviction`\r\n|        9,123,684.25 |              109.60 |    1.4% |     10.74 | `RpcMempool`\r\n```\r\n\r\nUpdate: added bench for master@c2d4e40e454ba0c7c836a849b6d15db4850079f2:\r\n\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|      302,677,055.25 |                3.30 |    3.5% |     10.76 | `ComplexMemPool`\r\n|      100,167,478.00 |                9.98 |    2.5% |     11.08 | `MempoolCheck`\r\n|           43,759.84 |           22,852.00 |    4.1% |     11.42 | `MempoolEviction`\r\n|       10,235,913.25 |               97.70 |    3.5% |     10.66 | `RpcMempool`\r\n```",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1809939629",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "reviewed",
      "id": 1729366575,
      "node_id": "PRR_kwDOABII585nFAov",
      "url": null,
      "actor": null,
      "commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1729366575",
      "submitted_at": "2023-11-14T10:29:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1729419761,
      "node_id": "PRR_kwDOABII585nFNnx",
      "url": null,
      "actor": null,
      "commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1729419761",
      "submitted_at": "2023-11-14T12:23:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1729707068,
      "node_id": "PRR_kwDOABII585nGTw8",
      "url": null,
      "actor": null,
      "commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Couple more comments / questions. To be continued...",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1729707068",
      "submitted_at": "2023-11-14T14:27:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739566572,
      "node_id": "PRR_kwDOABII585nr63s",
      "url": null,
      "actor": null,
      "commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739566572",
      "submitted_at": "2023-11-20T11:54:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739706549,
      "node_id": "PRR_kwDOABII585nsdC1",
      "url": null,
      "actor": null,
      "commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739706549",
      "submitted_at": "2023-11-20T12:32:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739853534,
      "node_id": "PRR_kwDOABII585ntA7e",
      "url": null,
      "actor": null,
      "commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739853534",
      "submitted_at": "2023-11-20T13:42:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739865937,
      "node_id": "PRR_kwDOABII585ntD9R",
      "url": null,
      "actor": null,
      "commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739865937",
      "submitted_at": "2023-11-20T13:48:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "commented",
      "id": 1819105431,
      "node_id": "IC_kwDOABII585sbViX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1819105431",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T13:53:12Z",
      "updated_at": "2023-11-20T13:53:12Z",
      "author_association": "MEMBER",
      "body": "@Sjors I believe most if not all of this PR will be rewritten, and split up into several components. The goal here is just to give an idea of the high-level interactions with other changes (wallet behavior, package validation/relay/RBF, ...). I don't think a detailed line-by-line code review at this stage is a good use of your time.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1819105431",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "mentioned",
      "id": 11012203305,
      "node_id": "MEE_lADOABII5850QVJBzwAAAAKQYOMp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11012203305",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T13:53:13Z"
    },
    {
      "event": "subscribed",
      "id": 11012203324,
      "node_id": "SE_lADOABII5850QVJBzwAAAAKQYOM8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11012203324",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T13:53:13Z"
    },
    {
      "event": "reviewed",
      "id": 1739885361,
      "node_id": "PRR_kwDOABII585ntIsx",
      "url": null,
      "actor": null,
      "commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739885361",
      "submitted_at": "2023-11-20T13:58:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739889097,
      "node_id": "PRR_kwDOABII585ntJnJ",
      "url": null,
      "actor": null,
      "commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739889097",
      "submitted_at": "2023-11-20T14:00:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739900168,
      "node_id": "PRR_kwDOABII585ntMUI",
      "url": null,
      "actor": null,
      "commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739900168",
      "submitted_at": "2023-11-20T14:06:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739906712,
      "node_id": "PRR_kwDOABII585ntN6Y",
      "url": null,
      "actor": null,
      "commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739906712",
      "submitted_at": "2023-11-20T14:09:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739940128,
      "node_id": "PRR_kwDOABII585ntWEg",
      "url": null,
      "actor": null,
      "commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739940128",
      "submitted_at": "2023-11-20T14:24:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739947219,
      "node_id": "PRR_kwDOABII585ntXzT",
      "url": null,
      "actor": null,
      "commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739947219",
      "submitted_at": "2023-11-20T14:27:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "commented",
      "id": 1819230080,
      "node_id": "IC_kwDOABII585sbz-A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1819230080",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T15:00:32Z",
      "updated_at": "2023-11-20T15:44:36Z",
      "author_association": "MEMBER",
      "body": "I was wondering if we can drop RBF rule 5 (in a followup), but I'm guessing not really. My initial thinking was the cluster limit could be used instead. But `CalculateMiningScoreOfReplacementTx` only checks that the _new_ cluster doesn't get too big.\r\n\r\nBut does the new cluster system make it less of a burden to have large numbers of transactions appear and disappear from the mempool?\r\n\r\n—\r\n\r\nI'm also trying to understand if dropping the [CPFP carveout](https://bitcoinops.org/en/topics/cpfp-carve-out/) is fine. The original scenario described on the [mailistlist](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016518.html):\r\n\r\n\r\n```\r\nTX_important\r\n  * output Alice <- child_a_1 <- child_a_2 <- … -< child_a_25\r\n                   (^ intentionally low fees so it doesn't confirm before timeout)\r\n  * output Bob: child_b_1\r\n                ^ high fee\r\n```\r\n  \r\nThe carveout rule allows Bob's `child_b_1`, despite Alice having used up the 25 ancestor limit for TX_important. And alice can't use the carveout to just add child_a_26, because child_26 has more than one unconfirmed ancestor.\r\n\r\nSo what happens in the cluster world?\r\n\r\nFor simplicity, let's set `-limitclustercount` to 26 (the default is 100 in this PR). Without the CPFP carveout, can Bob still insert `child_b_1`?\r\n\r\nMy understanding is that he can't, because `ClusterSizeChecks` will fail.\r\n\r\nInstead of failing, can we check if it's possible to evict the lowest value chunk? Though it introduces an implicit RBF-like mechanism… If it were possible, then `child_a_25` would be evicted from the cluster as long as it has a longer fee rate than `child_b_1`.\r\n\r\nAlice might make sure that the fee rates of `child_a_1` … `child_a_25` increase such that there's only one chunk. That just requires Bob to use a higher fee rate.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1819230080",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "reviewed",
      "id": 1740177374,
      "node_id": "PRR_kwDOABII585nuP_e",
      "url": null,
      "actor": null,
      "commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1740177374",
      "submitted_at": "2023-11-20T16:04:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "commented",
      "id": 1819490214,
      "node_id": "IC_kwDOABII585sczem",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1819490214",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T17:16:02Z",
      "updated_at": "2023-11-20T17:20:44Z",
      "author_association": "MEMBER",
      "body": "> I don't think a detailed line-by-line code review at this stage is a good use of your time.\r\n\r\nThat's not what I'm trying to do. I strategically / haphazardly picked a dozen lines to ask questions about to get a better understanding of the whole thing. Based on IRC chat today, I'll wait now for the upcoming update.\r\n\r\nRelevant IRC log: https://bitcoin-irc.chaincode.com/bitcoin-core-dev/2023-11-20#984780;",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1819490214",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11173066958,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAKZ93jO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11173066958",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T20:01:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11184375069,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAKapAUd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11184375069",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T16:49:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11184482832,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAKapaoQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11184482832",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T16:59:36Z"
    },
    {
      "event": "unlabeled",
      "id": 11184594196,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAKap10U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11184594196",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T17:10:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11198263397,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAKbd_Bl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11198263397",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-08T22:44:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11201892660,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAKbr1E0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11201892660",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-10T01:26:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11202916862,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAKbvvH-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11202916862",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-10T13:45:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11202988562,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAKbwAoS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11202988562",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-10T14:25:00Z"
    },
    {
      "event": "unlabeled",
      "id": 11203076413,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAKbwWE9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11203076413",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-10T15:12:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11279737369,
      "node_id": "LE_lADOABII5850QVJBzwAAAAKgUyIZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11279737369",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-18T17:38:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 11763923253,
      "node_id": "REFE_lADOABII5850QVJBzwAAAAK9Lzk1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11763923253",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7143d4388407ab3d12005e55a02d5e8f334e4dc9",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7143d4388407ab3d12005e55a02d5e8f334e4dc9",
      "created_at": "2024-02-10T04:38:11Z"
    },
    {
      "event": "commented",
      "id": 1951640940,
      "node_id": "IC_kwDOABII5850U61s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1951640940",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T03:45:20Z",
      "updated_at": "2024-02-19T03:45:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "do you have a simulation environment or script like you’ve done for #25717 to observe the computational complexity diff compared to today’s mempool against different chain of transaction performance payload ?\r\ninteresting what is the lowest performance linux host assumed for decentralization of the tx-relay network.\r\nassume always 24/7 internet and on a vpcu instance, not baremetal.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1951640940",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "commented",
      "id": 1952644105,
      "node_id": "IC_kwDOABII5850YvwJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1952644105",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T15:05:34Z",
      "updated_at": "2024-02-19T15:08:27Z",
      "author_association": "MEMBER",
      "body": "In the context of Stratum v2 #29432 I'm looking for a more efficient way to decide when to generate a new block template.\r\n\r\nThe current implementation looks at the mempool's `GetTransactionsUpdated()` every `-sv2interval` seconds. If there was any update, it calls `CreateNewBlock()` on `BlockAssembler`. It then checks if fees increased by at least `-sv2feedelta` since the last template and if so, pushes it to connected clients.\r\n\r\n`GetTransactionsUpdated()` changes all the time, especially with a big mempool, so not that useful of a filter. I'd like something like `GetFeeEstimateAtTop(size vbytes=4000000)`. Would it be easy to keep track of that (approximate) number every time something is added or removed from the mempool?\r\n\r\nIdeally I'd like to change the meaning of `-sv2interval` from \"check every n seconds and push update if needed\" to \"push better templates immediately, but wait least n seconds between them\".",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1952644105",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "commented",
      "id": 1952653016,
      "node_id": "IC_kwDOABII5850Yx7Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1952653016",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T15:10:36Z",
      "updated_at": "2024-02-19T15:10:36Z",
      "author_association": "MEMBER",
      "body": "> Would it be easy to keep track of that (approximate) number every time something is added or removed from the mempool?\r\n\r\nAfter clustermempool, yes. Today doing that inherently requires running the mining algorithm to figure out what transactions to put there.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1952653016",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "commented",
      "id": 1952657689,
      "node_id": "IC_kwDOABII5850YzEZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1952657689",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T15:12:31Z",
      "updated_at": "2024-02-19T15:12:31Z",
      "author_association": "MEMBER",
      "body": "Indeed, I meant on top of this PR (or a later incarnation).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1952657689",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "commented",
      "id": 1959971463,
      "node_id": "IC_kwDOABII58500sqH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1959971463",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T17:56:07Z",
      "updated_at": "2024-02-22T17:56:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "> interesting what is the lowest performance linux host assumed for decentralization of the tx-relay network.\r\nassume always 24/7 internet and on a vpcu instance, not baremetal.\r\n\r\nRunning this branch mainet on a 2 vcpu instance, with the following performance characteristics:\r\n```\r\nprocessor       : 0\r\nvendor_id       : AuthenticAMD\r\ncpu family      : 25\r\nmodel           : 1\r\nmodel name      : AMD EPYC 7543 32-Core Processor\r\nstepping        : 1\r\nmicrocode       : 0xa0011d1\r\ncpu MHz         : 2794.750\r\ncache size      : 512 KB\r\n```\r\n\r\nIt would be very interesting to feed cluster-support testing node with all kinds of chain of transactions, and check substantial performance diff compared to non-cluster-support testing node. Check there is no substantial performance regression.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1959971463",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12042124799,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALNxD3_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12042124799",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T13:14:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12042232351,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALNxeIf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12042232351",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T13:23:01Z"
    },
    {
      "event": "unlabeled",
      "id": 12043647342,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAALN23lu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12043647342",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T15:02:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1923884910,
      "node_id": "PRR_kwDOABII585yrCdu",
      "url": null,
      "actor": null,
      "commit_id": "5ce8eff8e7c0d2f187ab39440b945d4a9d2f8259",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I’ll spend time reviewing current `CTxMemPool`’s code path w.r.t DoS resistance before to pursue review further. This is very unsure the introduction of `TxGraph` improves on this front as the design is focus on mining incentive-compatibility improvement first.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1923884910",
      "submitted_at": "2024-03-08T03:55:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "commented",
      "id": 1985000747,
      "node_id": "IC_kwDOABII5852ULUr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1985000747",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T04:01:40Z",
      "updated_at": "2024-03-08T04:01:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Running this branch mainet on a 2 vcpu instance, with the following performance characteristics:\r\n\r\nGot a disk space issue at block `501691` by syncing from genesis.\r\n\r\n```\r\n2024-02-23T10:53:41Z UpdateTip: new best=000000000000000000753b6b9821750d271e1730d7403a0658c507c88092bdf0 height=501691 version=0x20000000 log2_work=87.760876 tx=287312998 date='2017-12-30T07:48:59Z' progress=0.295839 cache=16.3MiB(151170txo)\r\n2024-02-23T10:53:41Z New outbound-full-relay v1 peer connected: version: 70016, blocks=831673, peer=196\r\n2024-02-23T10:53:47Z *** Disk space is too low!\r\n2024-02-23T10:53:47Z Error: Disk space is too low!\r\n```\r\n\r\nWas configured as a prune node with default pruning settings.\r\n```\r\n2024-02-22T17:49:33Z Prune configured to target 550 MiB on disk for block and undo files.\r\n```\r\n\r\nWith following `/proc/meminfo` dump\r\n\r\n```\r\nMemTotal:        4020688 kB\r\nMemFree:          359104 kB\r\nMemAvailable:    3650432 kB\r\nBuffers:           44424 kB\r\nCached:          3385624 kB\r\nSwapCached:            0 kB\r\nActive:          1312988 kB\r\nInactive:        2156904 kB\r\nActive(anon):        352 kB\r\nInactive(anon):    40004 kB\r\nActive(file):    1312636 kB\r\nInactive(file):  2116900 kB\r\n```",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1985000747",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "labeled",
      "id": 12062076131,
      "node_id": "LE_lADOABII5850QVJBzwAAAALO9Kzj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12062076131",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-09T02:13:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12346991211,
      "node_id": "LE_lADOABII5850QVJBzwAAAALf8CJr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12346991211",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-03T19:04:33Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2035375002,
      "node_id": "IC_kwDOABII5855UVua",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2035375002",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-03T19:04:34Z",
      "updated_at": "2024-04-03T19:04:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/22392307037</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-2035375002",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12599446272,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALu_EsA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12599446272",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T00:08:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12617684642,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALwEpai",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12617684642",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T02:01:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12617696524,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALwEsUM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12617696524",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T02:03:18Z"
    },
    {
      "event": "unlabeled",
      "id": 12618205113,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAALwGoe5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12618205113",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T03:36:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12621170971,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALwR8kb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12621170971",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T09:32:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12623436677,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALwaluF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12623436677",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T12:48:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12623460443,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALwarhb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12623460443",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T12:50:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12623524380,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALwa7Ic",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12623524380",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T12:56:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12623748677,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALwbx5F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12623748677",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T13:15:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12629428275,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALwxcgz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12629428275",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-27T00:34:35Z"
    },
    {
      "event": "reviewed",
      "id": 2026649349,
      "node_id": "PRR_kwDOABII5854zDcF",
      "url": null,
      "actor": null,
      "commit_id": "8ef26be6510f6aeadb98a08f353882cc19734c3d",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "Dianagram009",
        "id": 129525650,
        "node_id": "U_kgDOB7hnkg",
        "avatar_url": "https://avatars.githubusercontent.com/u/129525650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Dianagram009",
        "html_url": "https://github.com/Dianagram009",
        "followers_url": "https://api.github.com/users/Dianagram009/followers",
        "following_url": "https://api.github.com/users/Dianagram009/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Dianagram009/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Dianagram009/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Dianagram009/subscriptions",
        "organizations_url": "https://api.github.com/users/Dianagram009/orgs",
        "repos_url": "https://api.github.com/users/Dianagram009/repos",
        "events_url": "https://api.github.com/users/Dianagram009/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Dianagram009/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-2026649349",
      "submitted_at": "2024-04-27T13:23:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12634548648,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALxE-mo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12634548648",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-28T11:39:43Z"
    },
    {
      "event": "unlabeled",
      "id": 12635814791,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAALxJzuH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12635814791",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-28T20:36:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12655514371,
      "node_id": "LE_lADOABII5850QVJBzwAAAALyU9MD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12655514371",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-30T10:04:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2043188274,
      "node_id": "PRR_kwDOABII5855yJQy",
      "url": null,
      "actor": null,
      "commit_id": "c49e0444e5c474d5e1ac0af89e9bc27958f3ed31",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "Christewart",
        "id": 3514957,
        "node_id": "MDQ6VXNlcjM1MTQ5NTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3514957?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Christewart",
        "html_url": "https://github.com/Christewart",
        "followers_url": "https://api.github.com/users/Christewart/followers",
        "following_url": "https://api.github.com/users/Christewart/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Christewart/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Christewart/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Christewart/subscriptions",
        "organizations_url": "https://api.github.com/users/Christewart/orgs",
        "repos_url": "https://api.github.com/users/Christewart/repos",
        "events_url": "https://api.github.com/users/Christewart/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Christewart/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-2043188274",
      "submitted_at": "2024-05-07T13:25:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 2043431230,
      "node_id": "PRR_kwDOABII5855zEk-",
      "url": null,
      "actor": null,
      "commit_id": "c49e0444e5c474d5e1ac0af89e9bc27958f3ed31",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "Christewart",
        "id": 3514957,
        "node_id": "MDQ6VXNlcjM1MTQ5NTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3514957?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Christewart",
        "html_url": "https://github.com/Christewart",
        "followers_url": "https://api.github.com/users/Christewart/followers",
        "following_url": "https://api.github.com/users/Christewart/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Christewart/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Christewart/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Christewart/subscriptions",
        "organizations_url": "https://api.github.com/users/Christewart/orgs",
        "repos_url": "https://api.github.com/users/Christewart/repos",
        "events_url": "https://api.github.com/users/Christewart/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Christewart/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-2043431230",
      "submitted_at": "2024-05-07T14:50:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12748778825,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAL34u1J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12748778825",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T20:07:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13054519874,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMKHCpC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13054519874",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T16:50:01Z"
    },
    {
      "event": "unlabeled",
      "id": 13054704734,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAMKHvxe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13054704734",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T17:04:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13055037988,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMKJBIk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13055037988",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T17:31:30Z"
    },
    {
      "event": "labeled",
      "id": 13055038872,
      "node_id": "LE_lADOABII5850QVJBzwAAAAMKJBWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13055038872",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T17:31:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13055160610,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMKJfEi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13055160610",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T17:42:16Z"
    },
    {
      "event": "unlabeled",
      "id": 13056431160,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAMKOVQ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13056431160",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T19:23:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13056495477,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMKOk91",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13056495477",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T19:29:29Z"
    },
    {
      "event": "labeled",
      "id": 13084591219,
      "node_id": "LE_lADOABII5850QVJBzwAAAAML5wRz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13084591219",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-07T19:06:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13102514952,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMM-IMI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13102514952",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-10T14:27:07Z"
    },
    {
      "event": "unsubscribed",
      "id": 13102541378,
      "node_id": "UE_lADOABII5850QVJBzwAAAAMM-OpC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13102541378",
      "actor": {
        "login": "benthecarman",
        "id": 15256660,
        "node_id": "MDQ6VXNlcjE1MjU2NjYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benthecarman",
        "html_url": "https://github.com/benthecarman",
        "followers_url": "https://api.github.com/users/benthecarman/followers",
        "following_url": "https://api.github.com/users/benthecarman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benthecarman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benthecarman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
        "organizations_url": "https://api.github.com/users/benthecarman/orgs",
        "repos_url": "https://api.github.com/users/benthecarman/repos",
        "events_url": "https://api.github.com/users/benthecarman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benthecarman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-10T14:28:48Z"
    },
    {
      "event": "subscribed",
      "id": 13102541969,
      "node_id": "SE_lADOABII5850QVJBzwAAAAMM-OyR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13102541969",
      "actor": {
        "login": "benthecarman",
        "id": 15256660,
        "node_id": "MDQ6VXNlcjE1MjU2NjYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benthecarman",
        "html_url": "https://github.com/benthecarman",
        "followers_url": "https://api.github.com/users/benthecarman/followers",
        "following_url": "https://api.github.com/users/benthecarman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benthecarman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benthecarman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
        "organizations_url": "https://api.github.com/users/benthecarman/orgs",
        "repos_url": "https://api.github.com/users/benthecarman/repos",
        "events_url": "https://api.github.com/users/benthecarman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benthecarman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-10T14:28:51Z"
    },
    {
      "event": "unsubscribed",
      "id": 13102542691,
      "node_id": "UE_lADOABII5850QVJBzwAAAAMM-O9j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13102542691",
      "actor": {
        "login": "benthecarman",
        "id": 15256660,
        "node_id": "MDQ6VXNlcjE1MjU2NjYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benthecarman",
        "html_url": "https://github.com/benthecarman",
        "followers_url": "https://api.github.com/users/benthecarman/followers",
        "following_url": "https://api.github.com/users/benthecarman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benthecarman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benthecarman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
        "organizations_url": "https://api.github.com/users/benthecarman/orgs",
        "repos_url": "https://api.github.com/users/benthecarman/repos",
        "events_url": "https://api.github.com/users/benthecarman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benthecarman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-10T14:28:54Z"
    },
    {
      "event": "unlabeled",
      "id": 13103556163,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAMNCGZD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13103556163",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-10T15:37:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13108144980,
      "node_id": "LE_lADOABII5850QVJBzwAAAAMNTmtU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13108144980",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-10T22:21:45Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13122801566,
      "node_id": "LE_lADOABII5850QVJBzwAAAAMOLg-e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13122801566",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T21:07:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13135972112,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMO9wcQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13135972112",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T18:38:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13136108907,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMO-R1r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13136108907",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T18:52:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13164380820,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMQqIKU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13164380820",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T18:30:39Z"
    },
    {
      "event": "unlabeled",
      "id": 13164402359,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAMQqNa3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13164402359",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T18:33:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 13165258441,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAMQtebJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13165258441",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T20:18:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13192814508,
      "node_id": "LE_lADOABII5850QVJBzwAAAAMSWl-s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13192814508",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-17T23:30:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13203079578,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMS9wGa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13203079578",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T15:32:45Z"
    },
    {
      "event": "unlabeled",
      "id": 13203727096,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAMTAOL4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13203727096",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T16:23:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13205955910,
      "node_id": "LE_lADOABII5850QVJBzwAAAAMTIuVG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13205955910",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T20:03:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2176868650,
      "node_id": "IC_kwDOABII586BwGEq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2176868650",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T20:03:14Z",
      "updated_at": "2024-06-18T20:03:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/26377000968</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-2176868650",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "comment_deleted",
      "id": 13206111286,
      "node_id": "CDE_lADOABII5850QVJBzwAAAAMTJUQ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13206111286",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T20:18:42Z"
    },
    {
      "event": "labeled",
      "id": 13216276888,
      "node_id": "LE_lADOABII5850QVJBzwAAAAMTwGGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13216276888",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-19T13:07:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13301365807,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMY0rwv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13301365807",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-26T16:38:30Z"
    },
    {
      "event": "unlabeled",
      "id": 13302173468,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAMY3w8c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13302173468",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-26T17:48:04Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13332346854,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMaq3fm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13332346854",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T14:12:30Z"
    },
    {
      "event": "unlabeled",
      "id": 13333915655,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAMaw2gH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13333915655",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T16:25:23Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13353026754,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMb5wTC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13353026754",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T15:12:44Z"
    },
    {
      "event": "labeled",
      "id": 13373113772,
      "node_id": "LE_lADOABII5850QVJBzwAAAAMdGYWs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13373113772",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T00:07:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13464925922,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMiknbi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13464925922",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T02:18:46Z"
    },
    {
      "event": "commented",
      "id": 2221954487,
      "node_id": "IC_kwDOABII586EcFW3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2221954487",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T03:38:06Z",
      "updated_at": "2024-07-11T03:38:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/27300763520</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-2221954487",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "labeled",
      "id": 13465455604,
      "node_id": "LE_lADOABII5850QVJBzwAAAAMimov0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13465455604",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T03:38:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 13465594053,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAMinKjF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13465594053",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T04:03:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13472787663,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMjCmzP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13472787663",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T14:30:35Z"
    },
    {
      "event": "unlabeled",
      "id": 13475166732,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAMjLroM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13475166732",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T17:31:22Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13504666151,
      "node_id": "LE_lADOABII5850QVJBzwAAAAMk8Non",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13504666151",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-15T12:18:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2192522762,
      "node_id": "PRR_kwDOABII586Crz4K",
      "url": null,
      "actor": null,
      "commit_id": "809370c8324dbcec707b9970f3c61a1e86391b42",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "(after fixing the reported iterations done) Seeing a lot of linerarizations being done that are kind of odd looking repeats with same number of iterations?\r\n```\r\n2024-07-22T21:01:29.226080Z [bench] InvokeSort linearize cluster: 15 txs, 0.0184ms, 120 iter, 153.1ns/iter\r\n2024-07-22T21:01:29.226348Z [bench] InvokeSort linearize cluster: 15 txs, 0.0187ms, 120 iter, 155.7ns/iter\r\n2024-07-22T21:01:29.226633Z [bench] InvokeSort linearize cluster: 15 txs, 0.0180ms, 120 iter, 149.8ns/iter\r\n2024-07-22T21:01:29.226926Z [bench] InvokeSort linearize cluster: 15 txs, 0.0188ms, 120 iter, 156.8ns/iter\r\n```\r\nwhat's happening here?",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-2192522762",
      "submitted_at": "2024-07-23T15:24:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13661017157,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMuQpRF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13661017157",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T13:08:14Z"
    },
    {
      "event": "labeled",
      "id": 13662603974,
      "node_id": "LE_lADOABII5850QVJBzwAAAAMuWsrG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13662603974",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T15:06:01Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2252960912,
      "node_id": "IC_kwDOABII586GSXSQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2252960912",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T15:06:02Z",
      "updated_at": "2024-07-26T15:06:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/27964484768</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-2252960912",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "unlabeled",
      "id": 13663093655,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAMuYkOX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13663093655",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T15:48:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13666374857,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAMulFTJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13666374857",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T21:53:38Z"
    },
    {
      "event": "unlabeled",
      "id": 13667002672,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAMunekw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13667002672",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-27T00:41:58Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2256604232,
      "node_id": "IC_kwDOABII586GgQxI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2256604232",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T18:14:38Z",
      "updated_at": "2024-07-29T18:15:19Z",
      "author_association": "MEMBER",
      "body": "> (after fixing the reported iterations done) Seeing a lot of linerarizations being done that are kind of odd looking repeats with same number of iterations?\r\n> \r\n> ```\r\n> 2024-07-22T21:01:29.226080Z [bench] InvokeSort linearize cluster: 15 txs, 0.0184ms, 120 iter, 153.1ns/iter\r\n> 2024-07-22T21:01:29.226348Z [bench] InvokeSort linearize cluster: 15 txs, 0.0187ms, 120 iter, 155.7ns/iter\r\n> 2024-07-22T21:01:29.226633Z [bench] InvokeSort linearize cluster: 15 txs, 0.0180ms, 120 iter, 149.8ns/iter\r\n> 2024-07-22T21:01:29.226926Z [bench] InvokeSort linearize cluster: 15 txs, 0.0188ms, 120 iter, 156.8ns/iter\r\n> ```\r\n> \r\n> what's happening here?\r\n\r\nI observed some similar behavior on my node as well.  Without knowing exactly what was happening here: in the current draft of the PR, the number of iterations in an optimal sort is related to the number of topologically valid orderings of the cluster (since we look at all topologically valid subsets each time we try to find the best candidate), so if there are clusters with similar topologies, you might expect to see the same number of iterations needed.\r\n\r\nAdditionally, in the current draft, successful RBF candidates cause us to relinearize things twice: once to construct the feerate diagram, and once again when the new transaction is added to the mempool.  The intention is to eliminate the  linearizations upon acceptance to the mempool from taking place if they were already done as part of the RBF calculation (the design of the TxGraph was done with this in mind), but that is not yet implemented.  (In the example you pasted, I noticed there are 4 linearizations happening at the same millisecond, so I wonder if RBF may also be involved.)",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-2256604232",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "referenced",
      "id": 13760545240,
      "node_id": "REFE_lADOABII5850QVJBzwAAAAM0MUHY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13760545240",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bba01ba18d07f5bc7bf195319dc1229a88c4c220",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bba01ba18d07f5bc7bf195319dc1229a88c4c220",
      "created_at": "2024-08-05T08:43:35Z"
    },
    {
      "event": "labeled",
      "id": 13761791532,
      "node_id": "LE_lADOABII5850QVJBzwAAAAM0REYs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13761791532",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T10:04:17Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14066144949,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANGaFa1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14066144949",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T16:18:52Z"
    },
    {
      "event": "unlabeled",
      "id": 14068056397,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAANGhYFN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14068056397",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T18:27:09Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14069211188,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANGlyA0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14069211188",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T19:39:24Z"
    },
    {
      "event": "labeled",
      "id": 14074766315,
      "node_id": "LE_lADOABII5850QVJBzwAAAANG6-Pr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14074766315",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-30T03:57:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 14107550038,
      "node_id": "LE_lADOABII5850QVJBzwAAAANI4CFW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14107550038",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T22:45:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14116133013,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANJYxiV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14116133013",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T14:17:08Z"
    },
    {
      "event": "unlabeled",
      "id": 14117220396,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAANJc7As",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14117220396",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T15:23:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2277909745,
      "node_id": "PRR_kwDOABII586HxiTx",
      "url": null,
      "actor": null,
      "commit_id": "76b4f7ded7e4ba5364b8fe441b4f31ff1a37eafc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "had a look at some tests that are disabled or have TODOs",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-2277909745",
      "submitted_at": "2024-09-03T17:33:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "unlabeled",
      "id": 14120861903,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAANJq0DP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14120861903",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T20:29:28Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14134831400,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANKgGko",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14134831400",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T17:20:53Z"
    },
    {
      "event": "labeled",
      "id": 14135565848,
      "node_id": "LE_lADOABII5850QVJBzwAAAANKi54Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14135565848",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T18:29:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2329721390,
      "node_id": "IC_kwDOABII586K3Lou",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2329721390",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T18:29:41Z",
      "updated_at": "2024-09-04T18:29:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/29684404375</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-2329721390",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14135725012,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANKjgvU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14135725012",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T18:45:06Z"
    },
    {
      "event": "labeled",
      "id": 14137862340,
      "node_id": "LE_lADOABII5850QVJBzwAAAANKrqjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14137862340",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T21:39:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14138975986,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANKv6by",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14138975986",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-05T00:19:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14138981296,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANKv7uw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14138981296",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-05T00:20:43Z"
    },
    {
      "event": "unlabeled",
      "id": 14139487859,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAANKx3Zz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14139487859",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-05T01:47:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14150546590,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANLcDSe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14150546590",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-05T17:02:19Z"
    },
    {
      "event": "commented",
      "id": 2332274663,
      "node_id": "IC_kwDOABII586LA6_n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2332274663",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-05T17:28:01Z",
      "updated_at": "2024-09-05T17:28:01Z",
      "author_association": "MEMBER",
      "body": "Thanks @glozow for the test improvements.  I've also made a change to an RBF limit that I think is worth mentioning.  Rather than limit the number of direct conflicts that a transaction can have, I've now implemented the limit to be on the number of distinct clusters that the conflicts of a transaction belong to.\r\n\r\nThe idea is still to create some bound on the amount of CPU we might spend linearizing clusters and doing feerate diagram checks when processing a single transaction.  Limiting the number of conflicting clusters (at 100 for now) should be sufficient to achieve that.  I want to point out that we might linearize more than 100 clusters as a result of a replacement (because removing conflicts might cause clusters to split), but since linearizing small clusters is generally much less work than linearizing big clusters, I don't think this distinction materially affects the way we understand the implied CPU bound.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-2332274663",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "mentioned",
      "id": 14150829120,
      "node_id": "MEE_lADOABII5850QVJBzwAAAANLdIRA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14150829120",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-05T17:28:02Z"
    },
    {
      "event": "subscribed",
      "id": 14150829133,
      "node_id": "SE_lADOABII5850QVJBzwAAAANLdIRN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14150829133",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-05T17:28:02Z"
    },
    {
      "event": "reviewed",
      "id": 2283792936,
      "node_id": "PRR_kwDOABII586IH-oo",
      "url": null,
      "actor": null,
      "commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "poked at the function tests a bit",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-2283792936",
      "submitted_at": "2024-09-05T22:05:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14279244743,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANTG_vH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14279244743",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-16T20:05:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14281531617,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANTPuDh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14281531617",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-16T21:47:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14292097451,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANT4Bmr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14292097451",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-17T14:09:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14293095086,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANT71Ku",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14293095086",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-17T15:12:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14294383544,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANUAvu4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14294383544",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-17T16:51:05Z"
    },
    {
      "event": "unlabeled",
      "id": 14297687842,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAANUNWci",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14297687842",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-17T21:16:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 14462397451,
      "node_id": "LE_lADOABII5850QVJBzwAAAANeBqwL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14462397451",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T21:11:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14488553764,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANflckk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14488553764",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-02T13:12:20Z"
    },
    {
      "event": "unlabeled",
      "id": 14490239354,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAANfr4F6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14490239354",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-02T14:57:11Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14496408745,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANgDaSp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14496408745",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-02T23:08:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14732140255,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANuGp7f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14732140255",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-19T10:38:13Z"
    },
    {
      "event": "labeled",
      "id": 14732251007,
      "node_id": "LE_lADOABII5850QVJBzwAAAANuHE9_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14732251007",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-19T10:55:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2423759608,
      "node_id": "IC_kwDOABII586Qd6L4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2423759608",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-19T10:55:36Z",
      "updated_at": "2024-10-19T10:55:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/31768588577</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-2423759608",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14736150666,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANuV9CK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14736150666",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-19T15:45:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14736958675,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANuZCTT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14736958675",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-19T17:33:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14742001572,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANusRek",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14742001572",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-20T00:28:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14752108047,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANvS04P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14752108047",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-20T15:09:19Z"
    },
    {
      "event": "unlabeled",
      "id": 14753416138,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAANvX0PK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14753416138",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-20T16:40:57Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "subscribed",
      "id": 14758037821,
      "node_id": "SE_lADOABII5850QVJBzwAAAANvpck9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14758037821",
      "actor": {
        "login": "gsannikov",
        "id": 52405655,
        "node_id": "MDQ6VXNlcjUyNDA1NjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52405655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gsannikov",
        "html_url": "https://github.com/gsannikov",
        "followers_url": "https://api.github.com/users/gsannikov/followers",
        "following_url": "https://api.github.com/users/gsannikov/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gsannikov/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gsannikov/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gsannikov/subscriptions",
        "organizations_url": "https://api.github.com/users/gsannikov/orgs",
        "repos_url": "https://api.github.com/users/gsannikov/repos",
        "events_url": "https://api.github.com/users/gsannikov/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gsannikov/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-21T05:37:12Z"
    },
    {
      "event": "unsubscribed",
      "id": 14758037963,
      "node_id": "UE_lADOABII5850QVJBzwAAAANvpcnL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14758037963",
      "actor": {
        "login": "gsannikov",
        "id": 52405655,
        "node_id": "MDQ6VXNlcjUyNDA1NjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52405655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gsannikov",
        "html_url": "https://github.com/gsannikov",
        "followers_url": "https://api.github.com/users/gsannikov/followers",
        "following_url": "https://api.github.com/users/gsannikov/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gsannikov/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gsannikov/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gsannikov/subscriptions",
        "organizations_url": "https://api.github.com/users/gsannikov/orgs",
        "repos_url": "https://api.github.com/users/gsannikov/repos",
        "events_url": "https://api.github.com/users/gsannikov/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gsannikov/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-21T05:37:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14760855419,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANv0Md7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14760855419",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-21T09:09:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14764012503,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANwAPPX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14764012503",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-21T12:36:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14793653379,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAANxxTyD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14793653379",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-22T22:08:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14872911072,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAN2fpzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14872911072",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-25T12:31:57Z"
    },
    {
      "event": "labeled",
      "id": 14905414405,
      "node_id": "LE_lADOABII5850QVJBzwAAAAN4bpMF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14905414405",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T15:04:29Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14914246887,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAN49Vjn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914246887",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T21:56:22Z"
    },
    {
      "event": "unlabeled",
      "id": 14916062594,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAN5EQ2C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14916062594",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T23:21:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 14916575196,
      "node_id": "LE_lADOABII5850QVJBzwAAAAN5GN_c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14916575196",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T23:43:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14932721329,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAN6Dz6x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14932721329",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-27T21:42:04Z"
    },
    {
      "event": "unlabeled",
      "id": 14934329994,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAN6J8qK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14934329994",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-27T23:16:36Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 14989240683,
      "node_id": "LE_lADOABII5850QVJBzwAAAAN9balr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14989240683",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-29T18:01:29Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15070338046,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAOCQxv-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15070338046",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-01T15:00:53Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE1ZDk4MmY5MWU2YjBmMTQ1YzlkZDRlZGYyOTgyN2NmYWJiMzdhM2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15d982f91e6b0f145c9dd4edf29827cfabb37a3f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/15d982f91e6b0f145c9dd4edf29827cfabb37a3f",
      "tree": {
        "sha": "81fe4f4ecafffe26a3e89e687a1bebffde285281",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/81fe4f4ecafffe26a3e89e687a1bebffde285281"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/36f5effa1783a72d57c393588059a688068336e2",
          "sha": "36f5effa1783a72d57c393588059a688068336e2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/36f5effa1783a72d57c393588059a688068336e2"
        }
      ],
      "message": "Add package hash to package-rbf log message",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:10:57Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-23T16:24:41Z"
      },
      "sha": "15d982f91e6b0f145c9dd4edf29827cfabb37a3f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg3ZDkyZmEzNDAxOTVkOWM4N2JlM2QwMjNjYTEzM2I5MGIzYjdkNGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87d92fa340195d9c87be3d023ca133b90b3b7d4e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/87d92fa340195d9c87be3d023ca133b90b3b7d4e",
      "tree": {
        "sha": "0b1a6b2941f226ee128ed7d90bc5364329e1821a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b1a6b2941f226ee128ed7d90bc5364329e1821a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15d982f91e6b0f145c9dd4edf29827cfabb37a3f",
          "sha": "15d982f91e6b0f145c9dd4edf29827cfabb37a3f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/15d982f91e6b0f145c9dd4edf29827cfabb37a3f"
        }
      ],
      "message": "test: Add unit test coverage of package rbf + prioritisetransaction",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:10:57Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-24T12:24:00Z"
      },
      "sha": "87d92fa340195d9c87be3d023ca133b90b3b7d4e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgwMjIxNGMwODMyZGUwMGYyNDI2ODE4M2Y3NzYzZmE5ODRiYTc5MDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/802214c0832de00f24268183f7763fa984ba7903",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/802214c0832de00f24268183f7763fa984ba7903",
      "tree": {
        "sha": "0f7c811ca480b7660d3059cbc0c6e4fbc1ad559e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f7c811ca480b7660d3059cbc0c6e4fbc1ad559e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87d92fa340195d9c87be3d023ca133b90b3b7d4e",
          "sha": "87d92fa340195d9c87be3d023ca133b90b3b7d4e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/87d92fa340195d9c87be3d023ca133b90b3b7d4e"
        }
      ],
      "message": "Introduce mempool changesets\n\nIntroduce the CTxMemPool::ChangeSet, a wrapper for creating (potential) new\nmempool entries and removing conflicts.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:15:12Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-08-23T22:45:49Z"
      },
      "sha": "802214c0832de00f24268183f7763fa984ba7903"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAxZTE0NWI5NzU4ZjFkZjE0YTdlYTE4MDU4YmE5NTc3YmY4OGU0NTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01e145b9758f1df14a7ea18058ba9577bf88e459",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/01e145b9758f1df14a7ea18058ba9577bf88e459",
      "tree": {
        "sha": "a4b8bbaacd370e0917e0f1e158ec7771eaddec98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a4b8bbaacd370e0917e0f1e158ec7771eaddec98"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/802214c0832de00f24268183f7763fa984ba7903",
          "sha": "802214c0832de00f24268183f7763fa984ba7903",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/802214c0832de00f24268183f7763fa984ba7903"
        }
      ],
      "message": "Move changeset from workspace to subpackage\n\nRemoves a redundant check that mempool limits will not be violated during\npackage acceptance.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:17:27Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-08-24T10:53:43Z"
      },
      "sha": "01e145b9758f1df14a7ea18058ba9577bf88e459"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU3OTgzYjhhZGQ3MmEwNDcyMWQzZjIwNTBjMDYzYTNjNGQ4NjgzZWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57983b8add72a04721d3f2050c063a3c4d8683ed",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/57983b8add72a04721d3f2050c063a3c4d8683ed",
      "tree": {
        "sha": "0cabd81854db431b8dfd2bae9806bb29ea82eb3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0cabd81854db431b8dfd2bae9806bb29ea82eb3f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01e145b9758f1df14a7ea18058ba9577bf88e459",
          "sha": "01e145b9758f1df14a7ea18058ba9577bf88e459",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/01e145b9758f1df14a7ea18058ba9577bf88e459"
        }
      ],
      "message": "Move LimitMempoolSize to take place outside FinalizeSubpackage",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:17:28Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-08-24T11:26:09Z"
      },
      "sha": "57983b8add72a04721d3f2050c063a3c4d8683ed"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM0YjZjNTgzM2QxMWVhODRmYmQ0Yjg5MWUwNjQwOGY2ZjRjYTZmYWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34b6c5833d11ea84fbd4b891e06408f6f4ca6fac",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/34b6c5833d11ea84fbd4b891e06408f6f4ca6fac",
      "tree": {
        "sha": "9c801cbab6071ff1fc84210d6df6187e9ed94529",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9c801cbab6071ff1fc84210d6df6187e9ed94529"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57983b8add72a04721d3f2050c063a3c4d8683ed",
          "sha": "57983b8add72a04721d3f2050c063a3c4d8683ed",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/57983b8add72a04721d3f2050c063a3c4d8683ed"
        }
      ],
      "message": "Clean up FinalizeSubpackage to avoid workspace-specific information\n\nAlso, use the \"package hash\" for logging replacements in the package rbf\nsetting.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:19:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-08-24T11:26:09Z"
      },
      "sha": "34b6c5833d11ea84fbd4b891e06408f6f4ca6fac"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdmYjYyZjdkYjYwYzdkNzkzODI4YWU0NWY4N2JjM2Y1YzYzY2M5ODk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7fb62f7db60c7d793828ae45f87bc3f5c63cc989",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7fb62f7db60c7d793828ae45f87bc3f5c63cc989",
      "tree": {
        "sha": "f831fc51fbfd521e9b5161a13048ca0020d596b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f831fc51fbfd521e9b5161a13048ca0020d596b7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34b6c5833d11ea84fbd4b891e06408f6f4ca6fac",
          "sha": "34b6c5833d11ea84fbd4b891e06408f6f4ca6fac",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/34b6c5833d11ea84fbd4b891e06408f6f4ca6fac"
        }
      ],
      "message": "Apply mempool changeset transactions directly into the mempool\n\nRather than individually calling addUnchecked for each transaction added in a\nchangeset (after removing all the to-be-removed transactions), instead we can\ntake advantage of boost::multi_index's splicing features to extract and insert\nentries directly from the staging multi_index into mapTx.\n\nThis has the immediate advantage of saving allocation overhead for mempool\nentries which have already been allocated once. This also means that the memory\nlocations of mempool entries will not change when transactions go from staging\nto the main mempool.\n\nAdditionally, eliminate addUnchecked and require all new transactions to enter\nthe mempool via a CTxMemPoolChangeSet.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:26:56Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-10T18:59:23Z"
      },
      "sha": "7fb62f7db60c7d793828ae45f87bc3f5c63cc989"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE4ODI5MTk0Y2E2ODE1MmFjMGIzOGQzNGU5NGI5MjY1ZWU3NGM0MTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18829194ca68152ac0b38d34e94b9265ee74c410",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/18829194ca68152ac0b38d34e94b9265ee74c410",
      "tree": {
        "sha": "b90f585d166854b05f0113ed7d2ec3af502665a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b90f585d166854b05f0113ed7d2ec3af502665a0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7fb62f7db60c7d793828ae45f87bc3f5c63cc989",
          "sha": "7fb62f7db60c7d793828ae45f87bc3f5c63cc989",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7fb62f7db60c7d793828ae45f87bc3f5c63cc989"
        }
      ],
      "message": "Enforce that there is only one changeset at a time",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:27:01Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-14T14:19:44Z"
      },
      "sha": "18829194ca68152ac0b38d34e94b9265ee74c410"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJiMzBmNGQzNmM4NmY3NzVhYzYzN2IxNzFkMjdkNDJhMDIzMDljNWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b30f4d36c86f775ac637b171d27d42a02309c5b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2b30f4d36c86f775ac637b171d27d42a02309c5b",
      "tree": {
        "sha": "56d37bc1a57189a1b23b6e05fdc45061b7a19b16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56d37bc1a57189a1b23b6e05fdc45061b7a19b16"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18829194ca68152ac0b38d34e94b9265ee74c410",
          "sha": "18829194ca68152ac0b38d34e94b9265ee74c410",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/18829194ca68152ac0b38d34e94b9265ee74c410"
        }
      ],
      "message": "Make RemoveStaged() private",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:27:01Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T13:46:05Z"
      },
      "sha": "2b30f4d36c86f775ac637b171d27d42a02309c5b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI0NDc0MTZmZGRjYjhjODY0NzM5MTUwMmNjYTNkYmZkMTU1MmUwMmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b447416fddcb8c8647391502cca3dbfd1552e02e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b447416fddcb8c8647391502cca3dbfd1552e02e",
      "tree": {
        "sha": "05d446133a581cd91f1a16cd15cbf2dc102f6e2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05d446133a581cd91f1a16cd15cbf2dc102f6e2e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b30f4d36c86f775ac637b171d27d42a02309c5b",
          "sha": "2b30f4d36c86f775ac637b171d27d42a02309c5b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2b30f4d36c86f775ac637b171d27d42a02309c5b"
        }
      ],
      "message": "Public mempool removal methods Assume() no changeset is outstanding\n\nWhile a changeset is outstanding, removing transaction directly from the\nmempool will invalidate the changeset state, so this is not permitted.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:27:01Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-10-18T14:36:36Z"
      },
      "sha": "b447416fddcb8c8647391502cca3dbfd1552e02e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI1MzA0MTAyMWFiYzRmOWVlNzIwMzM0MTQxM2U4Njc2ZTJkNWE3Y2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b53041021abc4f9ee7203341413e8676e2d5a7ca",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b53041021abc4f9ee7203341413e8676e2d5a7ca",
      "tree": {
        "sha": "ff8de7091dc38dd4eb1d87798cd73900cbcc2761",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff8de7091dc38dd4eb1d87798cd73900cbcc2761"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b447416fddcb8c8647391502cca3dbfd1552e02e",
          "sha": "b447416fddcb8c8647391502cca3dbfd1552e02e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b447416fddcb8c8647391502cca3dbfd1552e02e"
        }
      ],
      "message": "Duplicate transactions are not permitted within a changeset",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:27:01Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-14T14:27:27Z"
      },
      "sha": "b53041021abc4f9ee7203341413e8676e2d5a7ca"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ0NmIwOGI1OTliYzQ5MmJiZWMxMGNjYzIyOTJhZWU2ZjkwYzU4ZTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/446b08b599bc492bbec10ccc2292aee6f90c58e7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/446b08b599bc492bbec10ccc2292aee6f90c58e7",
      "tree": {
        "sha": "21d507df613b34021ec46ab9d882346519773994",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21d507df613b34021ec46ab9d882346519773994"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b53041021abc4f9ee7203341413e8676e2d5a7ca",
          "sha": "b53041021abc4f9ee7203341413e8676e2d5a7ca",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b53041021abc4f9ee7203341413e8676e2d5a7ca"
        }
      ],
      "message": "Don't distinguish between direct conflicts and all conflicts when doing cluster-size-2-rbf checks",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:27:01Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-14T15:11:17Z"
      },
      "sha": "446b08b599bc492bbec10ccc2292aee6f90c58e7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI4NGExZDMzZjFkY2JjM2IzNDA0ZWE0MGE5NDhmZjY2MDAyMzk2MTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/284a1d33f1dcbc3b3404ea40a948ff6600239613",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/284a1d33f1dcbc3b3404ea40a948ff6600239613",
      "tree": {
        "sha": "68766132e1f666a4bba6c5e12e76df8e39639f16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68766132e1f666a4bba6c5e12e76df8e39639f16"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/446b08b599bc492bbec10ccc2292aee6f90c58e7",
          "sha": "446b08b599bc492bbec10ccc2292aee6f90c58e7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/446b08b599bc492bbec10ccc2292aee6f90c58e7"
        }
      ],
      "message": "Move prioritisation into changeset",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:27:01Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-16T20:36:36Z"
      },
      "sha": "284a1d33f1dcbc3b3404ea40a948ff6600239613"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ3ZGM5ZmQyZjdiYzY3NTI1NjY4N2I5YzU1ZmRiZWM5Y2M4YWM3ODE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7dc9fd2f7bc675256687b9c55fdbec9cc8ac781",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d7dc9fd2f7bc675256687b9c55fdbec9cc8ac781",
      "tree": {
        "sha": "b0a1d1e84436f30ed636d63512c870e84cc81fd4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0a1d1e84436f30ed636d63512c870e84cc81fd4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/284a1d33f1dcbc3b3404ea40a948ff6600239613",
          "sha": "284a1d33f1dcbc3b3404ea40a948ff6600239613",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/284a1d33f1dcbc3b3404ea40a948ff6600239613"
        }
      ],
      "message": "Move CalculateChunksForRBF() to the mempool changeset",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:27:01Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-16T13:09:44Z"
      },
      "sha": "d7dc9fd2f7bc675256687b9c55fdbec9cc8ac781"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQzYzhlN2RmYjYzZjc5ODZhMWY5NjU0ZWEyMzkzYWFiZTNjZDc4ZGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3c8e7dfb63f7986a1f9654ea2393aabe3cd78da",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d3c8e7dfb63f7986a1f9654ea2393aabe3cd78da",
      "tree": {
        "sha": "bf0895bb9a9dc8e3ef26785ffa0189ba680fcd80",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf0895bb9a9dc8e3ef26785ffa0189ba680fcd80"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7dc9fd2f7bc675256687b9c55fdbec9cc8ac781",
          "sha": "d7dc9fd2f7bc675256687b9c55fdbec9cc8ac781",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d7dc9fd2f7bc675256687b9c55fdbec9cc8ac781"
        }
      ],
      "message": "Ensure that we don't add duplicate transactions in rbf fuzz tests",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:27:01Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-19T14:18:53Z"
      },
      "sha": "d3c8e7dfb63f7986a1f9654ea2393aabe3cd78da"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgzZjgxNGIxZDExMDBiYWFjOWRjYTljMTc2Zjg5YjBlYzI1NTVkYmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83f814b1d1100baac9dca9c176f89b0ec2555dbc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/83f814b1d1100baac9dca9c176f89b0ec2555dbc",
      "tree": {
        "sha": "b92a2ecdd68c8dcb7b36ddd9ff25ce9ccad97510",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b92a2ecdd68c8dcb7b36ddd9ff25ce9ccad97510"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3c8e7dfb63f7986a1f9654ea2393aabe3cd78da",
          "sha": "d3c8e7dfb63f7986a1f9654ea2393aabe3cd78da",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d3c8e7dfb63f7986a1f9654ea2393aabe3cd78da"
        }
      ],
      "message": "Remove m_all_conflicts from SubPackageState",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:27:01Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-25T00:29:42Z"
      },
      "sha": "83f814b1d1100baac9dca9c176f89b0ec2555dbc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE0ZWMwN2YxOTQ0OTk5YzJlZWFkNDFkMDhkN2RkNGZjM2FhNzEyNDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4ec07f1944999c2eead41d08d7dd4fc3aa71243",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a4ec07f1944999c2eead41d08d7dd4fc3aa71243",
      "tree": {
        "sha": "bc09e5f9b0cc42e3e0309d584bf0c8a3db876736",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc09e5f9b0cc42e3e0309d584bf0c8a3db876736"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83f814b1d1100baac9dca9c176f89b0ec2555dbc",
          "sha": "83f814b1d1100baac9dca9c176f89b0ec2555dbc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/83f814b1d1100baac9dca9c176f89b0ec2555dbc"
        }
      ],
      "message": "doc: add comments for CTxMemPool::ChangeSet",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:27:01Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-25T00:42:47Z"
      },
      "sha": "a4ec07f1944999c2eead41d08d7dd4fc3aa71243"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU3MzZkMWRkYWNjNDAxOTEwMWU3YTUxNzBkZDI1ZWZiYzYzYjYyMmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5736d1ddacc4019101e7a5170dd25efbc63b622a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5736d1ddacc4019101e7a5170dd25efbc63b622a",
      "tree": {
        "sha": "4e9f6a3177a0003358e57bb76fda6aee2422801e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e9f6a3177a0003358e57bb76fda6aee2422801e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4ec07f1944999c2eead41d08d7dd4fc3aa71243",
          "sha": "a4ec07f1944999c2eead41d08d7dd4fc3aa71243",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a4ec07f1944999c2eead41d08d7dd4fc3aa71243"
        }
      ],
      "message": "tracing: pass if replaced by tx/pkg to tracepoint\n\nThe mempool:replaced tracepoint now reports either a txid or a\npackage hash (previously it always was a txid). To let users know\nif a txid or package hash is passed, a boolean argument is added\nthe the tracepoint.\n\nIn the functional test, a ctypes.Structure class for MempoolReplaced\nis introduced as Python warns the following when not explcitly\ncasting it to a ctype:\n\n  Type: 'bool' not recognized. Please define the data with ctypes manually.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T18:27:01Z"
      },
      "author": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2024-11-07T13:53:06Z"
      },
      "sha": "5736d1ddacc4019101e7a5170dd25efbc63b622a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFjNWVhODhlMTdiMjk2MWI5ZGM5ZDMyMGVkYzhjNDZkNmNkYmY1MmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac5ea88e17b2961b9dc9d320edc8c46d6cdbf52b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ac5ea88e17b2961b9dc9d320edc8c46d6cdbf52b",
      "tree": {
        "sha": "0c0b44284ab1dce1657489ceb1a3cd57c94e53b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c0b44284ab1dce1657489ceb1a3cd57c94e53b3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5736d1ddacc4019101e7a5170dd25efbc63b622a",
          "sha": "5736d1ddacc4019101e7a5170dd25efbc63b622a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5736d1ddacc4019101e7a5170dd25efbc63b622a"
        }
      ],
      "message": "Add is_visited helper to epochguard",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T20:06:16Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-08T14:44:33Z"
      },
      "sha": "ac5ea88e17b2961b9dc9d320edc8c46d6cdbf52b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU2YzczN2I4ZjJhNDRhY2JlNmU2OGEyZWVhMDk2ZGVmMjVhOGQ0Zjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56c737b8f2a44acbe6e68a2eea096def25a8d4f7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/56c737b8f2a44acbe6e68a2eea096def25a8d4f7",
      "tree": {
        "sha": "a4fb434694e62b57ae7a3c84b7b2be4fe3302823",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a4fb434694e62b57ae7a3c84b7b2be4fe3302823"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac5ea88e17b2961b9dc9d320edc8c46d6cdbf52b",
          "sha": "ac5ea88e17b2961b9dc9d320edc8c46d6cdbf52b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ac5ea88e17b2961b9dc9d320edc8c46d6cdbf52b"
        }
      ],
      "message": "Add txgraph module",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T20:09:53Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-08T14:53:51Z"
      },
      "sha": "56c737b8f2a44acbe6e68a2eea096def25a8d4f7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFkYmY5YTViMGE3YjlkNmU0YjlhOWM0MTliMWU0MDc3M2U4NGMwYjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/adbf9a5b0a7b9d6e4b9a9c419b1e40773e84c0b0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/adbf9a5b0a7b9d6e4b9a9c419b1e40773e84c0b0",
      "tree": {
        "sha": "9af02c8fbd3a6e5cb209168ba1f110acc0dee419",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9af02c8fbd3a6e5cb209168ba1f110acc0dee419"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56c737b8f2a44acbe6e68a2eea096def25a8d4f7",
          "sha": "56c737b8f2a44acbe6e68a2eea096def25a8d4f7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/56c737b8f2a44acbe6e68a2eea096def25a8d4f7"
        }
      ],
      "message": "wip: track iterations used in linearization",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T20:09:54Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-07-26T12:52:04Z"
      },
      "sha": "adbf9a5b0a7b9d6e4b9a9c419b1e40773e84c0b0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY1ODkxNjM4ODRiNmUyYjY1OTU1M2YyMzMwODUxMjk5M2Y2NzVlM2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6589163884b6e2b659553f23308512993f675e3d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6589163884b6e2b659553f23308512993f675e3d",
      "tree": {
        "sha": "25234983dc003d5b617fd79510cd81f9ec6ce9fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25234983dc003d5b617fd79510cd81f9ec6ce9fc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/adbf9a5b0a7b9d6e4b9a9c419b1e40773e84c0b0",
          "sha": "adbf9a5b0a7b9d6e4b9a9c419b1e40773e84c0b0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/adbf9a5b0a7b9d6e4b9a9c419b1e40773e84c0b0"
        }
      ],
      "message": "add fuzz test for txgraph",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T20:09:55Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-13T10:40:41Z"
      },
      "sha": "6589163884b6e2b659553f23308512993f675e3d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFkMzI5YmQ0MTE5MTgzMTQ3NDMzZTYxYmZkNmM1MWVlOWI2NzRmYjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad329bd4119183147433e61bfd6c51ee9b674fb8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ad329bd4119183147433e61bfd6c51ee9b674fb8",
      "tree": {
        "sha": "189b7d6de005bc058a823f296c40a2a6f44e3b1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/189b7d6de005bc058a823f296c40a2a6f44e3b1e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6589163884b6e2b659553f23308512993f675e3d",
          "sha": "6589163884b6e2b659553f23308512993f675e3d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6589163884b6e2b659553f23308512993f675e3d"
        }
      ],
      "message": "Make CTxMemPoolEntry derive from TxEntry",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T20:09:55Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-08T16:12:28Z"
      },
      "sha": "ad329bd4119183147433e61bfd6c51ee9b674fb8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhmODRhYjQzZWM5YTBmMjY0MGU4MDRjNzhiYTQxMTNkZTZiZGVhOTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f84ab43ec9a0f2640e804c78ba4113de6bdea94",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8f84ab43ec9a0f2640e804c78ba4113de6bdea94",
      "tree": {
        "sha": "1b2d4f72147be8941cbb74705f71ba9cdcdce31d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b2d4f72147be8941cbb74705f71ba9cdcdce31d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad329bd4119183147433e61bfd6c51ee9b674fb8",
          "sha": "ad329bd4119183147433e61bfd6c51ee9b674fb8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ad329bd4119183147433e61bfd6c51ee9b674fb8"
        }
      ],
      "message": "Track clusters in mempool with TxGraph",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T20:12:31Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-08T17:46:27Z"
      },
      "sha": "8f84ab43ec9a0f2640e804c78ba4113de6bdea94"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgyZDg0YTYxNzRlZTVjMWYwZWY0MDdlODBlM2U5MmM2MDJhNjkxOGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82d84a6174ee5c1f0ef407e80e3e92c602a6918e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/82d84a6174ee5c1f0ef407e80e3e92c602a6918e",
      "tree": {
        "sha": "2c542a9030d322902ce36cc87a2d47661b36f6c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2c542a9030d322902ce36cc87a2d47661b36f6c7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f84ab43ec9a0f2640e804c78ba4113de6bdea94",
          "sha": "8f84ab43ec9a0f2640e804c78ba4113de6bdea94",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8f84ab43ec9a0f2640e804c78ba4113de6bdea94"
        }
      ],
      "message": "Limit mempool size based on chunk feerate\n\nRather than evicting the transactions with the lowest descendant feerate,\ninstead evict transactions that have the lowest chunk feerate.\n\nOnce mining is implemented based on choosing transactions with highest chunk\nfeerate (see next commit), mining and eviction will be opposites, so that we\nwill evict the transactions that would be mined last.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T20:12:32Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-21T00:55:50Z"
      },
      "sha": "82d84a6174ee5c1f0ef407e80e3e92c602a6918e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNkNGZlNzUyMGQ4NmYxMjA4NzY0NWNlY2JiMzdiYzY0ODI5NjhlYjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d4fe7520d86f12087645cecbb37bc6482968eb1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3d4fe7520d86f12087645cecbb37bc6482968eb1",
      "tree": {
        "sha": "defc5f9192a1748545f89371a49891d6c9084629",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/defc5f9192a1748545f89371a49891d6c9084629"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82d84a6174ee5c1f0ef407e80e3e92c602a6918e",
          "sha": "82d84a6174ee5c1f0ef407e80e3e92c602a6918e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/82d84a6174ee5c1f0ef407e80e3e92c602a6918e"
        }
      ],
      "message": "Select transactions for blocks based on chunk feerate",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T20:12:32Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-21T01:16:36Z"
      },
      "sha": "3d4fe7520d86f12087645cecbb37bc6482968eb1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI5MDk4YzQzMjhjMTYzZDcyMTcxNmUzYWIyZmJjOGQ0MWE2ZjMyNzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29098c4328c163d721716e3ab2fbc8d41a6f3278",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/29098c4328c163d721716e3ab2fbc8d41a6f3278",
      "tree": {
        "sha": "345302df53918a670a3f54f8914d80f61c39c4aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/345302df53918a670a3f54f8914d80f61c39c4aa"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d4fe7520d86f12087645cecbb37bc6482968eb1",
          "sha": "3d4fe7520d86f12087645cecbb37bc6482968eb1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3d4fe7520d86f12087645cecbb37bc6482968eb1"
        }
      ],
      "message": "Add new (unused) limits for cluster size/count",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T20:12:32Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-21T10:17:40Z"
      },
      "sha": "29098c4328c163d721716e3ab2fbc8d41a6f3278"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRmMWMwNDYwOGRiYjNiMTc4ODBiODY5ODBlZTRjYmUwMGZkOTI3YmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df1c04608dbb3b17880b86980ee4cbe00fd927bd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/df1c04608dbb3b17880b86980ee4cbe00fd927bd",
      "tree": {
        "sha": "4f3fda8bbadc3d5c9b8b6264328a7521ba1385ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f3fda8bbadc3d5c9b8b6264328a7521ba1385ce"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29098c4328c163d721716e3ab2fbc8d41a6f3278",
          "sha": "29098c4328c163d721716e3ab2fbc8d41a6f3278",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/29098c4328c163d721716e3ab2fbc8d41a6f3278"
        }
      ],
      "message": "Do not allow mempool clusters to exceed configured limits",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:50:48Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-21T12:58:04Z"
      },
      "sha": "df1c04608dbb3b17880b86980ee4cbe00fd927bd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ2YWZmNGEyMmMzZjMxMTczMGI5NThlZjkwNmU0YzBmNmQ0NGNjNmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6aff4a22c3f311730b958ef906e4c0f6d44cc6d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d6aff4a22c3f311730b958ef906e4c0f6d44cc6d",
      "tree": {
        "sha": "886cd388c78668391bcf423fa2207320641c36bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/886cd388c78668391bcf423fa2207320641c36bd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df1c04608dbb3b17880b86980ee4cbe00fd927bd",
          "sha": "df1c04608dbb3b17880b86980ee4cbe00fd927bd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/df1c04608dbb3b17880b86980ee4cbe00fd927bd"
        }
      ],
      "message": "policy: Remove CPFP carveout rule\n\nThe addition of a cluster size limit makes the CPFP carveout rule useless,\nbecause carveout cannot be used to bypass the cluster size limit. Remove this\npolicy rule and update tests to no longer rely on the behavior.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:50:49Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-03T14:54:30Z"
      },
      "sha": "d6aff4a22c3f311730b958ef906e4c0f6d44cc6d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlhNDFmZjBkZmM0OTgzNzBkNDBiYThmZGFkM2I2NWE0MTczYTBjMDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a41ff0dfc498370d40ba8fdad3b65a4173a0c00",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9a41ff0dfc498370d40ba8fdad3b65a4173a0c00",
      "tree": {
        "sha": "cf0fe885f7d06416491375c0706ccdcf72cee032",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf0fe885f7d06416491375c0706ccdcf72cee032"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6aff4a22c3f311730b958ef906e4c0f6d44cc6d",
          "sha": "d6aff4a22c3f311730b958ef906e4c0f6d44cc6d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d6aff4a22c3f311730b958ef906e4c0f6d44cc6d"
        }
      ],
      "message": "Implement new RBF logic for cluster mempool\n\nWith a total ordering on mempool transactions, we are now able to calculate a\ntransaction's mining score at all times. Use this to improve the RBF logic:\n\n- we no longer enforce a \"no new unconfirmed parents\" rule\n\n- we now require that the mempool's feerate diagram must improve in order\n  to accept a replacement\n\nTODO: update functional test feature_rbf.py to cover all our new scenarios.\n\nCo-authored-by: Gregory Sanders <gsanders87@gmail.com>, glozow <gloriajzhao@gmail.com>",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:16Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-21T17:19:32Z"
      },
      "sha": "9a41ff0dfc498370d40ba8fdad3b65a4173a0c00"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJlY2ZkNjNiN2E3NTUyMTFhZTM2MTA4YTJhM2E3NGZlYTJiOGEwYWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ecfd63b7a755211ae36108a2a3a74fea2b8a0af",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2ecfd63b7a755211ae36108a2a3a74fea2b8a0af",
      "tree": {
        "sha": "cf0fe885f7d06416491375c0706ccdcf72cee032",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf0fe885f7d06416491375c0706ccdcf72cee032"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a41ff0dfc498370d40ba8fdad3b65a4173a0c00",
          "sha": "9a41ff0dfc498370d40ba8fdad3b65a4173a0c00",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9a41ff0dfc498370d40ba8fdad3b65a4173a0c00"
        }
      ],
      "message": "==== END CLUSTER IMPLEMENTATION ====",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-17T15:36:11Z"
      },
      "sha": "2ecfd63b7a755211ae36108a2a3a74fea2b8a0af"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhkYzcwOTk2ZTEzYTE1MjdhNWVkMmIzNjU4NmFhZTY2NzNjNzcxODg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8dc70996e13a1527a5ed2b36586aae6673c77188",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8dc70996e13a1527a5ed2b36586aae6673c77188",
      "tree": {
        "sha": "cf0fe885f7d06416491375c0706ccdcf72cee032",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf0fe885f7d06416491375c0706ccdcf72cee032"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ecfd63b7a755211ae36108a2a3a74fea2b8a0af",
          "sha": "2ecfd63b7a755211ae36108a2a3a74fea2b8a0af",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2ecfd63b7a755211ae36108a2a3a74fea2b8a0af"
        }
      ],
      "message": "==== BEGIN MEMPOOL CLEANUP ====",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-17T15:36:45Z"
      },
      "sha": "8dc70996e13a1527a5ed2b36586aae6673c77188"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAxYTdkZWZkNThiZDA3YzBiM2IwMzc1YWQ3Mjg1ZTI3NjM5NTg4MGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01a7defd58bd07c0b3b0375ad7285e276395880c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/01a7defd58bd07c0b3b0375ad7285e276395880c",
      "tree": {
        "sha": "edfde7a77e631f9dafb5c9675b24d0f826168916",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/edfde7a77e631f9dafb5c9675b24d0f826168916"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8dc70996e13a1527a5ed2b36586aae6673c77188",
          "sha": "8dc70996e13a1527a5ed2b36586aae6673c77188",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8dc70996e13a1527a5ed2b36586aae6673c77188"
        }
      ],
      "message": "Remove the ancestor and descendant indices from the mempool",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-21T18:45:20Z"
      },
      "sha": "01a7defd58bd07c0b3b0375ad7285e276395880c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBjOTI4ODUyOTdmZjU4NGFmYWNiNTYwYjgxMDE4NDAxZjBhNjk0ZTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c92885297ff584afacb560b81018401f0a694e3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0c92885297ff584afacb560b81018401f0a694e3",
      "tree": {
        "sha": "357d005d87950367193944a13fcaca1a1a428a68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/357d005d87950367193944a13fcaca1a1a428a68"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01a7defd58bd07c0b3b0375ad7285e276395880c",
          "sha": "01a7defd58bd07c0b3b0375ad7285e276395880c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/01a7defd58bd07c0b3b0375ad7285e276395880c"
        }
      ],
      "message": "Use cluster linearization for transaction relay sort order\n\nPreviously, transaction batches were first sorted by ancestor count and then\nfeerate, to ensure transactions are announced in a topologically valid order,\nwhile prioritizing higher feerate transactions. Ancestor count is a crude\ntopological sort criteria, so replace this with linearization order so that the\nhighest feerate transactions (as would be observed by the mining algorithm) are\nrelayed before lower feerate ones, in a topologically valid way.\n\nThis also fixes a test that only worked due to the ancestor-count-based sort\norder.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-27T18:47:42Z"
      },
      "sha": "0c92885297ff584afacb560b81018401f0a694e3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBjZDQ1MTE4OTRjM2NmOWY4YmQ3ZTIyNmNmM2YwNTM3ZTE3MmRhNzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0cd4511894c3cf9f8bd7e226cf3f0537e172da72",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0cd4511894c3cf9f8bd7e226cf3f0537e172da72",
      "tree": {
        "sha": "aa8c98a3bab10b40d79390ea4cfd1d0695f9dc94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa8c98a3bab10b40d79390ea4cfd1d0695f9dc94"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c92885297ff584afacb560b81018401f0a694e3",
          "sha": "0c92885297ff584afacb560b81018401f0a694e3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0c92885297ff584afacb560b81018401f0a694e3"
        }
      ],
      "message": "Remove CTxMemPool::GetSortedDepthAndScore\n\nThe mempool clusters and linearization permit sorting the mempool topologically\nwithout making use of ancestor counts.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-28T14:20:04Z"
      },
      "sha": "0cd4511894c3cf9f8bd7e226cf3f0537e172da72"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk2YTIwNmY3YmRiOGEzNmEwMTRlZjRiYTRmMTIwMTAzYzZhNDQwYjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96a206f7bdb8a36a014ef4ba4f120103c6a440b3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/96a206f7bdb8a36a014ef4ba4f120103c6a440b3",
      "tree": {
        "sha": "9dbdef156a06d8fe475c1ec7ca4905827e0e4aab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9dbdef156a06d8fe475c1ec7ca4905827e0e4aab"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0cd4511894c3cf9f8bd7e226cf3f0537e172da72",
          "sha": "0cd4511894c3cf9f8bd7e226cf3f0537e172da72",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0cd4511894c3cf9f8bd7e226cf3f0537e172da72"
        }
      ],
      "message": "Reimplement GetTransactionAncestry() to not rely on cached data\n\nIn preparation for removing ancestor data from CTxMemPoolEntry, recalculate the\nancestor statistics on demand wherever needed.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-28T18:47:40Z"
      },
      "sha": "96a206f7bdb8a36a014ef4ba4f120103c6a440b3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZlMDI1YjkyZWIyNzBkMDVmMTc0NmVmOTJjODA1M2JhNDU5MWE5ZGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e025b92eb270d05f1746ef92c8053ba4591a9dd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6e025b92eb270d05f1746ef92c8053ba4591a9dd",
      "tree": {
        "sha": "9f5c4efcef7eed6505f34facdeefa90fa2bdf428",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f5c4efcef7eed6505f34facdeefa90fa2bdf428"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96a206f7bdb8a36a014ef4ba4f120103c6a440b3",
          "sha": "96a206f7bdb8a36a014ef4ba4f120103c6a440b3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/96a206f7bdb8a36a014ef4ba4f120103c6a440b3"
        }
      ],
      "message": "rpc: Calculate ancestor data from scratch for mempool rpc calls",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-28T19:07:05Z"
      },
      "sha": "6e025b92eb270d05f1746ef92c8053ba4591a9dd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA1ODEzMTE0OTQwNmI0ODgyZjMzOTk0OTRiYTRiMjZiYzBhMWYzNzc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/058131149406b4882f3399494ba4b26bc0a1f377",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/058131149406b4882f3399494ba4b26bc0a1f377",
      "tree": {
        "sha": "2822b1486d6ed6e0fc4bf0e4ae3c50af24bd9f6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2822b1486d6ed6e0fc4bf0e4ae3c50af24bd9f6d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e025b92eb270d05f1746ef92c8053ba4591a9dd",
          "sha": "6e025b92eb270d05f1746ef92c8053ba4591a9dd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6e025b92eb270d05f1746ef92c8053ba4591a9dd"
        }
      ],
      "message": "Remove dependency on cached ancestor data in mini-miner",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-28T21:55:16Z"
      },
      "sha": "058131149406b4882f3399494ba4b26bc0a1f377"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY3NTA5NGZjMmQ3ZTRmYzg3ZDQyMjIwNWQ0ZWQ3NGRkNDg5MTk1MjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/675094fc2d7e4fc87d422205d4ed74dd48919524",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/675094fc2d7e4fc87d422205d4ed74dd48919524",
      "tree": {
        "sha": "eafed4b1cf6ac62712a0a82dcd4ab8c967698558",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eafed4b1cf6ac62712a0a82dcd4ab8c967698558"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/058131149406b4882f3399494ba4b26bc0a1f377",
          "sha": "058131149406b4882f3399494ba4b26bc0a1f377",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/058131149406b4882f3399494ba4b26bc0a1f377"
        }
      ],
      "message": "Stop enforcing ancestor size/count limits\n\nThe cluster limits should be sufficient.\n\nCo-Authored-By: Gregory Sanders <gsanders87@gmail.com>",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-28T21:59:15Z"
      },
      "sha": "675094fc2d7e4fc87d422205d4ed74dd48919524"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYwZjMwMmUxNjRjMzAzMDc3NGQyMzc1NjA1ZmRhYjVhODc3MTRlNGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60f302e164c3030774d2375605fdab5a87714e4f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/60f302e164c3030774d2375605fdab5a87714e4f",
      "tree": {
        "sha": "db58823656bf4a47b462eb77d15973b2a92e49a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db58823656bf4a47b462eb77d15973b2a92e49a8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/675094fc2d7e4fc87d422205d4ed74dd48919524",
          "sha": "675094fc2d7e4fc87d422205d4ed74dd48919524",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/675094fc2d7e4fc87d422205d4ed74dd48919524"
        }
      ],
      "message": "Add test case for cluster size limits to v3 logic",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-14T10:59:01Z"
      },
      "sha": "60f302e164c3030774d2375605fdab5a87714e4f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMzZWI0ZjBhMjIxMWI0ZjBhNzRhNTcyMGJlNTY0NTg2NGFkZjhmNDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3eb4f0a2211b4f0a74a5720be5645864adf8f46",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c3eb4f0a2211b4f0a74a5720be5645864adf8f46",
      "tree": {
        "sha": "43a5a8a0528e204a511ad0d1eb2d5568f053bfc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43a5a8a0528e204a511ad0d1eb2d5568f053bfc8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60f302e164c3030774d2375605fdab5a87714e4f",
          "sha": "60f302e164c3030774d2375605fdab5a87714e4f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/60f302e164c3030774d2375605fdab5a87714e4f"
        }
      ],
      "message": "Use mempool/txgraph to determine if a tx has descendants\n\nRemove a reference to GetCountWithDescendants() in preparation for removing\nthis function and the associated cached state from the mempool.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-03T15:19:15Z"
      },
      "sha": "c3eb4f0a2211b4f0a74a5720be5645864adf8f46"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxNjdkY2UwNzUzMDI2OTllMTc0YTc0M2Y4OTY3MjNjYTM1YzUwYWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2167dce075302699e174a743f896723ca35c50ab",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2167dce075302699e174a743f896723ca35c50ab",
      "tree": {
        "sha": "4fab1cdedc2a97b378460d2019a362e1f8487e63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4fab1cdedc2a97b378460d2019a362e1f8487e63"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3eb4f0a2211b4f0a74a5720be5645864adf8f46",
          "sha": "c3eb4f0a2211b4f0a74a5720be5645864adf8f46",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c3eb4f0a2211b4f0a74a5720be5645864adf8f46"
        }
      ],
      "message": "Calculate descendant information for mempool RPC output on-the-fly\n\nThis is in preparation for removing the cached descendant state from the\nmempool.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-03T15:57:16Z"
      },
      "sha": "2167dce075302699e174a743f896723ca35c50ab"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlhOTgxZDE0ZTBkNGUzYzQ4NTIyNTJjY2JlNmQ5OGExYTYyNDI0OTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a981d14e0d4e3c4852252ccbe6d98a1a6242493",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9a981d14e0d4e3c4852252ccbe6d98a1a6242493",
      "tree": {
        "sha": "70d187c2aa571b1cf9114eedfc1e2d89a077ab9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/70d187c2aa571b1cf9114eedfc1e2d89a077ab9f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2167dce075302699e174a743f896723ca35c50ab",
          "sha": "2167dce075302699e174a743f896723ca35c50ab",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2167dce075302699e174a743f896723ca35c50ab"
        }
      ],
      "message": "test: remove rbf carveout test from mempool_limit.py",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-18T17:22:09Z"
      },
      "sha": "9a981d14e0d4e3c4852252ccbe6d98a1a6242493"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQxMDI3NjlhYTZhZWQ5ZTRhMWZlM2EyOWUyYzI5NzMxMTAyMjRlZDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4102769aa6aed9e4a1fe3a29e2c2973110224ed8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4102769aa6aed9e4a1fe3a29e2c2973110224ed8",
      "tree": {
        "sha": "a05a99f1c82811a94aa7bed1d626536b24d85e06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a05a99f1c82811a94aa7bed1d626536b24d85e06"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a981d14e0d4e3c4852252ccbe6d98a1a6242493",
          "sha": "9a981d14e0d4e3c4852252ccbe6d98a1a6242493",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9a981d14e0d4e3c4852252ccbe6d98a1a6242493"
        }
      ],
      "message": "Stop enforcing descendant size/count limits\n\nCluster size limits should be enough.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-03T17:56:22Z"
      },
      "sha": "4102769aa6aed9e4a1fe3a29e2c2973110224ed8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNhMzFmMjY2MzllNzJkY2RiY2ZmNzE2OTc1NGI3Yzk0MTg1MDE1YzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a31f26639e72dcdbcff7169754b7c94185015c3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3a31f26639e72dcdbcff7169754b7c94185015c3",
      "tree": {
        "sha": "b3b873d2b8fc0b693d4a97552150d7b695a9453b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3b873d2b8fc0b693d4a97552150d7b695a9453b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4102769aa6aed9e4a1fe3a29e2c2973110224ed8",
          "sha": "4102769aa6aed9e4a1fe3a29e2c2973110224ed8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4102769aa6aed9e4a1fe3a29e2c2973110224ed8"
        }
      ],
      "message": "Eliminate RBF workaround for CPFP carveout transactions\n\nThe new cluster mempool RBF rules take into account clusters sizes exactly, so\nwith the removal of descendant count enforcement this idea is obsolete.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-06-12T18:50:47Z"
      },
      "sha": "3a31f26639e72dcdbcff7169754b7c94185015c3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM2MDI3YzNlMzhkZDI1Y2E3ZDRkYmExYjAyZmRhYjk3ZmRhY2JkMjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6027c3e38dd25ca7d4dba1b02fdab97fdacbd27",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c6027c3e38dd25ca7d4dba1b02fdab97fdacbd27",
      "tree": {
        "sha": "6a9c9c6ec6c348b80e1267c180c4b8cbc45b21bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a9c9c6ec6c348b80e1267c180c4b8cbc45b21bb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a31f26639e72dcdbcff7169754b7c94185015c3",
          "sha": "3a31f26639e72dcdbcff7169754b7c94185015c3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3a31f26639e72dcdbcff7169754b7c94185015c3"
        }
      ],
      "message": "wallet: Replace max descendantsize with clustersize\n\nWith the descendant size limits removed, replace the concept of \"max number of\ndescendants of any ancestor of a given tx\" with the cluster count of the cluster\nthat the transaction belongs to.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-03T19:00:00Z"
      },
      "sha": "c6027c3e38dd25ca7d4dba1b02fdab97fdacbd27"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRjYzEwYmYzNDI4NDUzZWMxZGY0NGU4NWRjMjVjZTlhYzAzMTRiMGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4cc10bf3428453ec1df44e85dc25ce9ac0314b0b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4cc10bf3428453ec1df44e85dc25ce9ac0314b0b",
      "tree": {
        "sha": "ca199068cbf4b0db1e34d980b4e07567d140aa76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca199068cbf4b0db1e34d980b4e07567d140aa76"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6027c3e38dd25ca7d4dba1b02fdab97fdacbd27",
          "sha": "c6027c3e38dd25ca7d4dba1b02fdab97fdacbd27",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c6027c3e38dd25ca7d4dba1b02fdab97fdacbd27"
        }
      ],
      "message": "mempool: Remove unused function CalculateDescendantMaximum",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-04T13:19:21Z"
      },
      "sha": "4cc10bf3428453ec1df44e85dc25ce9ac0314b0b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc0NDcxY2M4NmZjNzg4NGIwZmMwMjg3MzE2OTRiNzAwYTEwY2MwMTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74471cc86fc7884b0fc028731694b700a10cc014",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/74471cc86fc7884b0fc028731694b700a10cc014",
      "tree": {
        "sha": "f39d356e7bdd46ee544181a9c761c646f353f8bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f39d356e7bdd46ee544181a9c761c646f353f8bb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4cc10bf3428453ec1df44e85dc25ce9ac0314b0b",
          "sha": "4cc10bf3428453ec1df44e85dc25ce9ac0314b0b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4cc10bf3428453ec1df44e85dc25ce9ac0314b0b"
        }
      ],
      "message": "Eliminate use of cached ancestor data in miniminer_tests and v3_policy",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-14T17:49:03Z"
      },
      "sha": "74471cc86fc7884b0fc028731694b700a10cc014"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA5ZmZmOGZhNDE1MjE4MGI5ZDBlNzE2MmYwNWY3NjA1MTZiMjQ2N2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09fff8fa4152180b9d0e7162f05f760516b2467b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/09fff8fa4152180b9d0e7162f05f760516b2467b",
      "tree": {
        "sha": "90474290448b55f5faa09aa6fc4ff9b4e6a9fa34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90474290448b55f5faa09aa6fc4ff9b4e6a9fa34"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74471cc86fc7884b0fc028731694b700a10cc014",
          "sha": "74471cc86fc7884b0fc028731694b700a10cc014",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/74471cc86fc7884b0fc028731694b700a10cc014"
        }
      ],
      "message": "mempool: eliminate accessors to mempool entry ancestor/descendant cached state",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-04T13:28:05Z"
      },
      "sha": "09fff8fa4152180b9d0e7162f05f760516b2467b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI1MDg3Zjk4ODNkYjBkNGYzODkyMmY1YTM5YmJjYjJhY2FhYTQzNjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25087f9883db0d4f38922f5a39bbcb2acaaa4361",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/25087f9883db0d4f38922f5a39bbcb2acaaa4361",
      "tree": {
        "sha": "428372901525a259e40337482bce90c776b46256",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/428372901525a259e40337482bce90c776b46256"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09fff8fa4152180b9d0e7162f05f760516b2467b",
          "sha": "09fff8fa4152180b9d0e7162f05f760516b2467b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/09fff8fa4152180b9d0e7162f05f760516b2467b"
        }
      ],
      "message": "Remove unused members from CTxMemPoolEntry",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-04T13:48:04Z"
      },
      "sha": "25087f9883db0d4f38922f5a39bbcb2acaaa4361"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkwNTVkZWU1NzIxOWUxY2ZlODJiMzllZjQ2MjI1NmM2N2FmZTNlOTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9055dee57219e1cfe82b39ef462256c67afe3e91",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9055dee57219e1cfe82b39ef462256c67afe3e91",
      "tree": {
        "sha": "e793fecbe8bee7ab0d1067594172ad8a6f832f89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e793fecbe8bee7ab0d1067594172ad8a6f832f89"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25087f9883db0d4f38922f5a39bbcb2acaaa4361",
          "sha": "25087f9883db0d4f38922f5a39bbcb2acaaa4361",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/25087f9883db0d4f38922f5a39bbcb2acaaa4361"
        }
      ],
      "message": "Remove mempool logic designed to maintain ancestor/descendant state",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-04T14:47:14Z"
      },
      "sha": "9055dee57219e1cfe82b39ef462256c67afe3e91"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBkMjAwMjdhNWMzYjUzMDA3ZTNlNzgxNjUyM2NhZjU1NjMzY2IxNDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d20027a5c3b53007e3e7816523caf55633cb144",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0d20027a5c3b53007e3e7816523caf55633cb144",
      "tree": {
        "sha": "2b08ade7af13ad012d0efdec3aa3444bfc2ae489",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b08ade7af13ad012d0efdec3aa3444bfc2ae489"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9055dee57219e1cfe82b39ef462256c67afe3e91",
          "sha": "9055dee57219e1cfe82b39ef462256c67afe3e91",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9055dee57219e1cfe82b39ef462256c67afe3e91"
        }
      ],
      "message": "mempool: addUnchecked no longer needs ancestors",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-05T13:33:41Z"
      },
      "sha": "0d20027a5c3b53007e3e7816523caf55633cb144"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJlZTU3NTUyOTllN2U3ZDI1Y2M3ZTcwMzliYjlkY2JkNGI4YTE3YjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bee5755299e7e7d25cc7e7039bb9dcbd4b8a17b4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bee5755299e7e7d25cc7e7039bb9dcbd4b8a17b4",
      "tree": {
        "sha": "6cf77e6e7d6faa500e4e989e7e38ae930f46f371",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6cf77e6e7d6faa500e4e989e7e38ae930f46f371"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d20027a5c3b53007e3e7816523caf55633cb144",
          "sha": "0d20027a5c3b53007e3e7816523caf55633cb144",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0d20027a5c3b53007e3e7816523caf55633cb144"
        }
      ],
      "message": "Remove unused limits from CalculateMemPoolAncestors",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-15T01:15:06Z"
      },
      "sha": "bee5755299e7e7d25cc7e7039bb9dcbd4b8a17b4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYwNTE2MzcyNWUyY2I2NzRmZDhmZTljYWU1ZmUyNzBhMTk5YTc3ZDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f05163725e2cb674fd8fe9cae5fe270a199a77d0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f05163725e2cb674fd8fe9cae5fe270a199a77d0",
      "tree": {
        "sha": "e8b8c0d473ba937f452fbd991b7907b8d33d3c6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8b8c0d473ba937f452fbd991b7907b8d33d3c6c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bee5755299e7e7d25cc7e7039bb9dcbd4b8a17b4",
          "sha": "bee5755299e7e7d25cc7e7039bb9dcbd4b8a17b4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bee5755299e7e7d25cc7e7039bb9dcbd4b8a17b4"
        }
      ],
      "message": "Make removeConflicts private",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-15T10:12:22Z"
      },
      "sha": "f05163725e2cb674fd8fe9cae5fe270a199a77d0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU4ZDFhN2UyMGJhODA5Y2M5NGYwNDg2N2Y0MmQ5YzAzM2I4OWE3NDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8d1a7e20ba809cc94f04867f42d9c033b89a747",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e8d1a7e20ba809cc94f04867f42d9c033b89a747",
      "tree": {
        "sha": "e8b8c0d473ba937f452fbd991b7907b8d33d3c6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8b8c0d473ba937f452fbd991b7907b8d33d3c6c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f05163725e2cb674fd8fe9cae5fe270a199a77d0",
          "sha": "f05163725e2cb674fd8fe9cae5fe270a199a77d0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f05163725e2cb674fd8fe9cae5fe270a199a77d0"
        }
      ],
      "message": "==== END MEMPOOL CLEANUP ====",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-17T15:36:50Z"
      },
      "sha": "e8d1a7e20ba809cc94f04867f42d9c033b89a747"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ5YjUyZmI0ZmI2NzYzMWVhNmVjNWFiNzM0YzZhNTc4MjM2NThiYWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49b52fb4fb67631ea6ec5ab734c6a57823658bad",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/49b52fb4fb67631ea6ec5ab734c6a57823658bad",
      "tree": {
        "sha": "e8b8c0d473ba937f452fbd991b7907b8d33d3c6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8b8c0d473ba937f452fbd991b7907b8d33d3c6c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8d1a7e20ba809cc94f04867f42d9c033b89a747",
          "sha": "e8d1a7e20ba809cc94f04867f42d9c033b89a747",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e8d1a7e20ba809cc94f04867f42d9c033b89a747"
        }
      ],
      "message": "==== BEGIN OPTIMIZATIONS ====",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-17T15:37:03Z"
      },
      "sha": "49b52fb4fb67631ea6ec5ab734c6a57823658bad"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFhMzk2Yjg1MzZmNjBmNTRmNDE3YzE5NGQzZDY2YTVhOGVlZTA4YmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa396b8536f60f54f417c194d3d66a5a8eee08bd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/aa396b8536f60f54f417c194d3d66a5a8eee08bd",
      "tree": {
        "sha": "8f8fa0e435349a70047832113524e0a50ebaebae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f8fa0e435349a70047832113524e0a50ebaebae"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49b52fb4fb67631ea6ec5ab734c6a57823658bad",
          "sha": "49b52fb4fb67631ea6ec5ab734c6a57823658bad",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/49b52fb4fb67631ea6ec5ab734c6a57823658bad"
        }
      ],
      "message": "Rework removeForBlock so that clusters are only touched once\n\nAlso remove extra linearization that was happening and some logging\n\nUpdate interface_zmq.py for new block connection behavior",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2023-10-10T19:42:56Z"
      },
      "sha": "aa396b8536f60f54f417c194d3d66a5a8eee08bd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM0ZDBhOWY2YWQ2Nzk4MTYwZTM4YjA2Y2I4ZjkzNWUzYjAxOTg4N2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4d0a9f6ad6798160e38b06cb8f935e3b019887f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c4d0a9f6ad6798160e38b06cb8f935e3b019887f",
      "tree": {
        "sha": "0a6fb441b8d17bfe47868b0d293d19a7501ec91f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a6fb441b8d17bfe47868b0d293d19a7501ec91f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa396b8536f60f54f417c194d3d66a5a8eee08bd",
          "sha": "aa396b8536f60f54f417c194d3d66a5a8eee08bd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/aa396b8536f60f54f417c194d3d66a5a8eee08bd"
        }
      ],
      "message": "Simplify ancestor calculation functions\n\nNow that ancestor calculation never fails (due to ancestor/descendant limits\nbeing eliminated), we can eliminate the error handling from\nCalculateMemPoolAncestors.\n\ninterface_zmq test is broken",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-15T01:31:51Z"
      },
      "sha": "c4d0a9f6ad6798160e38b06cb8f935e3b019887f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU1NGMzMmQ0M2YwNDNmOGY0ZTJiYWYwMzZhYjY5Mjc0MmUxMWNjZTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/554c32d43f043f8f4e2baf036ab692742e11cce9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/554c32d43f043f8f4e2baf036ab692742e11cce9",
      "tree": {
        "sha": "6639fe15d5d1799fd27fa3ca719907509f4aa071",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6639fe15d5d1799fd27fa3ca719907509f4aa071"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4d0a9f6ad6798160e38b06cb8f935e3b019887f",
          "sha": "c4d0a9f6ad6798160e38b06cb8f935e3b019887f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c4d0a9f6ad6798160e38b06cb8f935e3b019887f"
        }
      ],
      "message": "Use txgraph to calculate ancestors",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-14T22:21:34Z"
      },
      "sha": "554c32d43f043f8f4e2baf036ab692742e11cce9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEyMzAwZTc5MjJkN2ZiNjY3MDEwZDRiMzg0YWRmOGVhNDZiNjViMjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12300e7922d7fb667010d4b384adf8ea46b65b25",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/12300e7922d7fb667010d4b384adf8ea46b65b25",
      "tree": {
        "sha": "7fe514ea5a87d235e8bbf11f4504ed2d3e14fbd5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7fe514ea5a87d235e8bbf11f4504ed2d3e14fbd5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/554c32d43f043f8f4e2baf036ab692742e11cce9",
          "sha": "554c32d43f043f8f4e2baf036ab692742e11cce9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/554c32d43f043f8f4e2baf036ab692742e11cce9"
        }
      ],
      "message": "Use txgraph to calculate descendants",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-14T23:28:25Z"
      },
      "sha": "12300e7922d7fb667010d4b384adf8ea46b65b25"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA5ODg5NjdkNTgzMzlkMTA2Y2E5NTI4MjNlMmY3ODhkMGNlNTE1OGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0988967d58339d106ca952823e2f788d0ce5158f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0988967d58339d106ca952823e2f788d0ce5158f",
      "tree": {
        "sha": "d7a731954f407e92ca8dca1fa3491988ab9c5b94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7a731954f407e92ca8dca1fa3491988ab9c5b94"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12300e7922d7fb667010d4b384adf8ea46b65b25",
          "sha": "12300e7922d7fb667010d4b384adf8ea46b65b25",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/12300e7922d7fb667010d4b384adf8ea46b65b25"
        }
      ],
      "message": "Move GetNumChildren() to be a mempool function",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-13T23:56:18Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T14:47:28Z"
      },
      "sha": "0988967d58339d106ca952823e2f788d0ce5158f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1ZDMxMDA2OGYxMjBmOTI1M2Y3YzhlNDYzOGE0ZDNiNTcwZjA2MDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95d310068f120f9253f7c8e4638a4d3b570f0609",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/95d310068f120f9253f7c8e4638a4d3b570f0609",
      "tree": {
        "sha": "bdde702fad5d0a29c443a0f5a402e9b59cb6a5d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bdde702fad5d0a29c443a0f5a402e9b59cb6a5d4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0988967d58339d106ca952823e2f788d0ce5158f",
          "sha": "0988967d58339d106ca952823e2f788d0ce5158f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0988967d58339d106ca952823e2f788d0ce5158f"
        }
      ],
      "message": "Make getting parents/children a function of the mempool, not a mempool entry",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T15:02:26Z"
      },
      "sha": "95d310068f120f9253f7c8e4638a4d3b570f0609"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg1OWRiMGRlOWVlMjRjOTc3YjUwNDViZDlmYWQ4NTM5OGMyNjhlMjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/859db0de9ee24c977b5045bd9fad85398c268e23",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/859db0de9ee24c977b5045bd9fad85398c268e23",
      "tree": {
        "sha": "cc213b3d6f146d594ce22c5de25eb0d2a120334f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc213b3d6f146d594ce22c5de25eb0d2a120334f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95d310068f120f9253f7c8e4638a4d3b570f0609",
          "sha": "95d310068f120f9253f7c8e4638a4d3b570f0609",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/95d310068f120f9253f7c8e4638a4d3b570f0609"
        }
      ],
      "message": "Rewrite GatherClusters to use the txgraph implementation",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T15:10:07Z"
      },
      "sha": "859db0de9ee24c977b5045bd9fad85398c268e23"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFjNDE1ZjFmMzdlN2NkZWU2ZTcwNGQyYmQyNmZlNzNhMTIyNGJiNmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac415f1f37e7cdee6e704d2bd26fe73a1224bb6a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ac415f1f37e7cdee6e704d2bd26fe73a1224bb6a",
      "tree": {
        "sha": "bfa3cde5621b4113cf7e3e24ca7b8a9637128bf8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bfa3cde5621b4113cf7e3e24ca7b8a9637128bf8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/859db0de9ee24c977b5045bd9fad85398c268e23",
          "sha": "859db0de9ee24c977b5045bd9fad85398c268e23",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/859db0de9ee24c977b5045bd9fad85398c268e23"
        }
      ],
      "message": "Switch to using txgraph parents/children in public accessors",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T15:11:04Z"
      },
      "sha": "ac415f1f37e7cdee6e704d2bd26fe73a1224bb6a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE5NzMyMTk4ZDEwMDRlZDg5YWVkNDJmNWZmOGVkYWM4NmE5ODhlNGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9732198d1004ed89aed42f5ff8edac86a988e4c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a9732198d1004ed89aed42f5ff8edac86a988e4c",
      "tree": {
        "sha": "1448da1ff67a7b1bd4928db1c79578a44f15e327",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1448da1ff67a7b1bd4928db1c79578a44f15e327"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac415f1f37e7cdee6e704d2bd26fe73a1224bb6a",
          "sha": "ac415f1f37e7cdee6e704d2bd26fe73a1224bb6a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ac415f1f37e7cdee6e704d2bd26fe73a1224bb6a"
        }
      ],
      "message": "Stop tracking parents/children outside of txgraph",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T16:13:42Z"
      },
      "sha": "a9732198d1004ed89aed42f5ff8edac86a988e4c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU4NGUyMzdiMGZkZTlhMDQ1YzU1NmEyOGEzMjQ4Yzc2MzJlMjhhMTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e84e237b0fde9a045c556a28a3248c7632e28a15",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e84e237b0fde9a045c556a28a3248c7632e28a15",
      "tree": {
        "sha": "e81fa3f2474117f10d42faa87783a0f15db40cbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e81fa3f2474117f10d42faa87783a0f15db40cbe"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9732198d1004ed89aed42f5ff8edac86a988e4c",
          "sha": "a9732198d1004ed89aed42f5ff8edac86a988e4c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a9732198d1004ed89aed42f5ff8edac86a988e4c"
        }
      ],
      "message": "Remove unused argument to RemoveStaged",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T17:37:46Z"
      },
      "sha": "e84e237b0fde9a045c556a28a3248c7632e28a15"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc5ZjViMGQyOTNhYzUzZTkxNjE4NDBkZWNiNzRjMTI5ZTJiYzNiZjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79f5b0d293ac53e9161840decb74c129e2bc3bf7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/79f5b0d293ac53e9161840decb74c129e2bc3bf7",
      "tree": {
        "sha": "653f8d92ed1e51c2608a8ff2f7fa9f21b09dce55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/653f8d92ed1e51c2608a8ff2f7fa9f21b09dce55"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e84e237b0fde9a045c556a28a3248c7632e28a15",
          "sha": "e84e237b0fde9a045c556a28a3248c7632e28a15",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e84e237b0fde9a045c556a28a3248c7632e28a15"
        }
      ],
      "message": "Switch to using the faster CalculateDescendants\n\nThe only place we still use the older interface is in policy/rbf.cpp, where\nit's helpful to incrementally calculate descendants to avoid calculating too\nmany at once (or cluttering the CalculateDescendants interface with a\ncalculation limit).",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-16T00:57:53Z"
      },
      "sha": "79f5b0d293ac53e9161840decb74c129e2bc3bf7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVmZWZmNDU2ODIxMTE4YzYwNmIzYjYzZTQwZTU4MmYzNzZjNGJkY2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/efeff456821118c606b3b63e40e582f376c4bdcb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/efeff456821118c606b3b63e40e582f376c4bdcb",
      "tree": {
        "sha": "737901c477eb8cab8c385ddc16465afb26805182",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/737901c477eb8cab8c385ddc16465afb26805182"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79f5b0d293ac53e9161840decb74c129e2bc3bf7",
          "sha": "79f5b0d293ac53e9161840decb74c129e2bc3bf7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/79f5b0d293ac53e9161840decb74c129e2bc3bf7"
        }
      ],
      "message": "Rewrite removeRecursive to use vectors instead of sets",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T17:42:55Z"
      },
      "sha": "efeff456821118c606b3b63e40e582f376c4bdcb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM2MjNiZGFlNDE0Y2ZiNDliYzVhYmQ4MGMzNTQxMmY5Zjc0ZjI3ZmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c623bdae414cfb49bc5abd80c35412f9f74f27fa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c623bdae414cfb49bc5abd80c35412f9f74f27fa",
      "tree": {
        "sha": "afd5489274729245f0721b72ce72590568ecb2bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/afd5489274729245f0721b72ce72590568ecb2bb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/efeff456821118c606b3b63e40e582f376c4bdcb",
          "sha": "efeff456821118c606b3b63e40e582f376c4bdcb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/efeff456821118c606b3b63e40e582f376c4bdcb"
        }
      ],
      "message": "Rewrite Expire to only invoke CalculateDescendants once",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T17:47:10Z"
      },
      "sha": "c623bdae414cfb49bc5abd80c35412f9f74f27fa"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI0ZDMxMmVlN2JkMGVhZGI4N2YyNzljNjZmZmE1NWMxYTVjOGVkMjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24d312ee7bd0eadb87f279c66ffa55c1a5c8ed22",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/24d312ee7bd0eadb87f279c66ffa55c1a5c8ed22",
      "tree": {
        "sha": "ce14d8f7ff26499df2d22fb52ab3711a6b8352a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce14d8f7ff26499df2d22fb52ab3711a6b8352a1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c623bdae414cfb49bc5abd80c35412f9f74f27fa",
          "sha": "c623bdae414cfb49bc5abd80c35412f9f74f27fa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c623bdae414cfb49bc5abd80c35412f9f74f27fa"
        }
      ],
      "message": "Rewrite removeForReorg to use a vector instead of a set",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T17:53:12Z"
      },
      "sha": "24d312ee7bd0eadb87f279c66ffa55c1a5c8ed22"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZmYTRiYmE4NDYzMmFlMTU4MjczMGEyNTk3ZTQxZTZjM2FjYzkzZjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ffa4bba84632ae1582730a2597e41e6c3acc93f3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ffa4bba84632ae1582730a2597e41e6c3acc93f3",
      "tree": {
        "sha": "fd8f949f282404be7e10e23973d38e880986d1f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd8f949f282404be7e10e23973d38e880986d1f8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24d312ee7bd0eadb87f279c66ffa55c1a5c8ed22",
          "sha": "24d312ee7bd0eadb87f279c66ffa55c1a5c8ed22",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/24d312ee7bd0eadb87f279c66ffa55c1a5c8ed22"
        }
      ],
      "message": "Drop unnecessary set in TrimToSize",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T19:08:47Z"
      },
      "sha": "ffa4bba84632ae1582730a2597e41e6c3acc93f3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRjYTMwYzZkZjViNmJiY2U2NWZmYTY1YmM0NTEwMjZjNzhiM2E1NWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dca30c6df5b6bbce65ffa65bc451026c78b3a55b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dca30c6df5b6bbce65ffa65bc451026c78b3a55b",
      "tree": {
        "sha": "ad133757758a79cedd764294f81911974573a66e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ad133757758a79cedd764294f81911974573a66e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ffa4bba84632ae1582730a2597e41e6c3acc93f3",
          "sha": "ffa4bba84632ae1582730a2597e41e6c3acc93f3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ffa4bba84632ae1582730a2597e41e6c3acc93f3"
        }
      ],
      "message": "RemoveStaged takes a vector, not a set",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T19:53:35Z"
      },
      "sha": "dca30c6df5b6bbce65ffa65bc451026c78b3a55b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYzYzE2N2Q5ZDUwMDVlMmZiZDYxMDY2YWJlNTk2OWU2Mzg5MzI0OWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63c167d9d5005e2fbd61066abe5969e63893249c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/63c167d9d5005e2fbd61066abe5969e63893249c",
      "tree": {
        "sha": "7e8d85da5283f961cb330d50622cbed979199689",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e8d85da5283f961cb330d50622cbed979199689"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dca30c6df5b6bbce65ffa65bc451026c78b3a55b",
          "sha": "dca30c6df5b6bbce65ffa65bc451026c78b3a55b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dca30c6df5b6bbce65ffa65bc451026c78b3a55b"
        }
      ],
      "message": "Only use CalculateDescendants() with vectors, not sets",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T20:02:06Z"
      },
      "sha": "63c167d9d5005e2fbd61066abe5969e63893249c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDczNWYwNzYzMGQzOTY1NTllYTIyMmZlMDM4NDQ3ODBjYjZkYjEyODc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/735f07630d396559ea222fe03844780cb6db1287",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/735f07630d396559ea222fe03844780cb6db1287",
      "tree": {
        "sha": "630222d8aac06099233030ab5e280a65774601fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/630222d8aac06099233030ab5e280a65774601fd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63c167d9d5005e2fbd61066abe5969e63893249c",
          "sha": "63c167d9d5005e2fbd61066abe5969e63893249c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/63c167d9d5005e2fbd61066abe5969e63893249c"
        }
      ],
      "message": "Use faster CalculateMemPoolAncestors in rbf",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T21:11:47Z"
      },
      "sha": "735f07630d396559ea222fe03844780cb6db1287"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcxMzM4ZGZhM2ExOTRjMGQyNGM3NjkzOTZiMWRmZjVhNjRkMTYyMTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/71338dfa3a194c0d24c769396b1dff5a64d16211",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/71338dfa3a194c0d24c769396b1dff5a64d16211",
      "tree": {
        "sha": "444898d1f60a644995433597ab41440f2deba25f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/444898d1f60a644995433597ab41440f2deba25f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/735f07630d396559ea222fe03844780cb6db1287",
          "sha": "735f07630d396559ea222fe03844780cb6db1287",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/735f07630d396559ea222fe03844780cb6db1287"
        }
      ],
      "message": "Use faster CMPA in rpc/mempool",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T21:12:37Z"
      },
      "sha": "71338dfa3a194c0d24c769396b1dff5a64d16211"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNhOWU1NWMyNjk1NDIwMWYzYTNiYzI3NTVlMDFlYzI0NzQzZDVjOTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a9e55c26954201f3a3bc2755e01ec24743d5c93",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3a9e55c26954201f3a3bc2755e01ec24743d5c93",
      "tree": {
        "sha": "e43cc7d3d37b33586d73438b60033f11717b6df8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e43cc7d3d37b33586d73438b60033f11717b6df8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/71338dfa3a194c0d24c769396b1dff5a64d16211",
          "sha": "71338dfa3a194c0d24c769396b1dff5a64d16211",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/71338dfa3a194c0d24c769396b1dff5a64d16211"
        }
      ],
      "message": "Eliminate need for ancestors in SingleV3Checks",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T21:13:13Z"
      },
      "sha": "3a9e55c26954201f3a3bc2755e01ec24743d5c93"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc4M2ExN2NlMjIyZTdjOGZhY2IwZDBlNzU3ZjY2ZWZjNGU2MzUzYjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/783a17ce222e7c8facb0d0e757f66efc4e6353b3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/783a17ce222e7c8facb0d0e757f66efc4e6353b3",
      "tree": {
        "sha": "374cca875f376d6ba130c22bdc1440308ef70484",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/374cca875f376d6ba130c22bdc1440308ef70484"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a9e55c26954201f3a3bc2755e01ec24743d5c93",
          "sha": "3a9e55c26954201f3a3bc2755e01ec24743d5c93",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3a9e55c26954201f3a3bc2755e01ec24743d5c93"
        }
      ],
      "message": "Eliminate need for ancestors in PackageTRUCChecks\n\nTO DO: Rewrite unit tests for this function to not lie about mempool parents, so that we\ncan push down the parent calculation into truc_policy from validation.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T22:11:41Z"
      },
      "sha": "783a17ce222e7c8facb0d0e757f66efc4e6353b3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUxYmFjYTM3OWU1NDVmMzU4OTE2ODg3OGZhMWE2MmZkYWNlZjNjNDU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51baca379e545f3589168878fa1a62fdacef3c45",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/51baca379e545f3589168878fa1a62fdacef3c45",
      "tree": {
        "sha": "b8e6b500c35d1cdbbc04cc2e66c685c98d1a14c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8e6b500c35d1cdbbc04cc2e66c685c98d1a14c2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/783a17ce222e7c8facb0d0e757f66efc4e6353b3",
          "sha": "783a17ce222e7c8facb0d0e757f66efc4e6353b3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/783a17ce222e7c8facb0d0e757f66efc4e6353b3"
        }
      ],
      "message": "Don't calculate ancestors except for RBF transactions",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T22:27:45Z"
      },
      "sha": "51baca379e545f3589168878fa1a62fdacef3c45"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ0NGMyNWNiNjRjY2UyNWQ4ODFlZGRkNzk2Zjg2M2Q2NzU3ZTEzZTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/444c25cb64cce25d881eddd796f863d6757e13e2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/444c25cb64cce25d881eddd796f863d6757e13e2",
      "tree": {
        "sha": "b8e6b500c35d1cdbbc04cc2e66c685c98d1a14c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8e6b500c35d1cdbbc04cc2e66c685c98d1a14c2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51baca379e545f3589168878fa1a62fdacef3c45",
          "sha": "51baca379e545f3589168878fa1a62fdacef3c45",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/51baca379e545f3589168878fa1a62fdacef3c45"
        }
      ],
      "message": "==== END OPTIMIZATIONS ====",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-17T15:37:08Z"
      },
      "sha": "444c25cb64cce25d881eddd796f863d6757e13e2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg1NTU0OThlM2M0ZmQxMmZhNTFjNzFiOTY3OWQ3MmUwYjlhNWI2NTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8555498e3c4fd12fa51c71b9679d72e0b9a5b651",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8555498e3c4fd12fa51c71b9679d72e0b9a5b651",
      "tree": {
        "sha": "b8e6b500c35d1cdbbc04cc2e66c685c98d1a14c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8e6b500c35d1cdbbc04cc2e66c685c98d1a14c2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/444c25cb64cce25d881eddd796f863d6757e13e2",
          "sha": "444c25cb64cce25d881eddd796f863d6757e13e2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/444c25cb64cce25d881eddd796f863d6757e13e2"
        }
      ],
      "message": "==== BEGIN TESTS ====",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-17T15:37:15Z"
      },
      "sha": "8555498e3c4fd12fa51c71b9679d72e0b9a5b651"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU4YTIyMmZlZjQ1ZWY0M2Y4NTZiNmE2N2ZjMGQzZDlmYTEwMTA1YWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8a222fef45ef43f856b6a67fc0d3d9fa10105af",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e8a222fef45ef43f856b6a67fc0d3d9fa10105af",
      "tree": {
        "sha": "4e16058eb1a11a0bd4243fc7914b3543137c44a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e16058eb1a11a0bd4243fc7914b3543137c44a0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8555498e3c4fd12fa51c71b9679d72e0b9a5b651",
          "sha": "8555498e3c4fd12fa51c71b9679d72e0b9a5b651",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8555498e3c4fd12fa51c71b9679d72e0b9a5b651"
        }
      ],
      "message": "bench: add more mempool benchmarks\n\nAdd benchmarks for:\n\n  - mempool update time when blocks are found\n  - adding a transaction\n  - performing the mempool's RBF calculation\n  - calculating mempool ancestors/descendants",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-11T15:34:16Z"
      },
      "sha": "e8a222fef45ef43f856b6a67fc0d3d9fa10105af"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDViNWJmMzEyM2IxZTExZjkyMTI2NzEyZjdlMDFjYjRhYmNkZGY0NGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b5bf3123b1e11f92126712f7e01cb4abcddf44e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5b5bf3123b1e11f92126712f7e01cb4abcddf44e",
      "tree": {
        "sha": "71b094036ccc0e15cafc16006013fcf73b14f372",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/71b094036ccc0e15cafc16006013fcf73b14f372"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8a222fef45ef43f856b6a67fc0d3d9fa10105af",
          "sha": "e8a222fef45ef43f856b6a67fc0d3d9fa10105af",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e8a222fef45ef43f856b6a67fc0d3d9fa10105af"
        }
      ],
      "message": "fuzz: try to add more code coverage for mempool fuzzing\n\nIncluding test coverage for mempool eviction and expiry",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2023-10-12T14:48:55Z"
      },
      "sha": "5b5bf3123b1e11f92126712f7e01cb4abcddf44e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ1ZWQxZTA0ZjZmZTc4Yjc5ODE0ZmNkNmFjZjZkY2Q0ZjFkZGNjMmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5ed1e04f6fe78b79814fcd6acf6dcd4f1ddcc2e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d5ed1e04f6fe78b79814fcd6acf6dcd4f1ddcc2e",
      "tree": {
        "sha": "6e3cead1aa656317ee2034f30b2c673968b74c5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6e3cead1aa656317ee2034f30b2c673968b74c5a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b5bf3123b1e11f92126712f7e01cb4abcddf44e",
          "sha": "5b5bf3123b1e11f92126712f7e01cb4abcddf44e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5b5bf3123b1e11f92126712f7e01cb4abcddf44e"
        }
      ],
      "message": "Pass through cluster size limits to TxGraph::check()",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-01-29T16:47:02Z"
      },
      "sha": "d5ed1e04f6fe78b79814fcd6acf6dcd4f1ddcc2e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFkYjk5ZjBhOWJiMzc2YTUxMDQ4NjhlYzFkNGUzMzEyZTVjNWJhYTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1db99f0a9bb376a5104868ec1d4e3312e5c5baa6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1db99f0a9bb376a5104868ec1d4e3312e5c5baa6",
      "tree": {
        "sha": "39e2489605a920c46520cd38f7250ac46215cec1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39e2489605a920c46520cd38f7250ac46215cec1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5ed1e04f6fe78b79814fcd6acf6dcd4f1ddcc2e",
          "sha": "d5ed1e04f6fe78b79814fcd6acf6dcd4f1ddcc2e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d5ed1e04f6fe78b79814fcd6acf6dcd4f1ddcc2e"
        }
      ],
      "message": "Expose cluster information via rpc\n\nCo-authored-by: glozow <gloriajzhao@gmail.com>",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-04-19T21:12:04Z"
      },
      "sha": "1db99f0a9bb376a5104868ec1d4e3312e5c5baa6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJjMzVkY2Y1OThjMDEzM2I3NTJlMzI5OGI2ZTQyOWJhNzNjOGZiYWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc35dcf598c0133b752e3298b6e429ba73c8fbae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bc35dcf598c0133b752e3298b6e429ba73c8fbae",
      "tree": {
        "sha": "86aeb03a4b056683a1b9c37a995aab08c1562a3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86aeb03a4b056683a1b9c37a995aab08c1562a3a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1db99f0a9bb376a5104868ec1d4e3312e5c5baa6",
          "sha": "1db99f0a9bb376a5104868ec1d4e3312e5c5baa6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1db99f0a9bb376a5104868ec1d4e3312e5c5baa6"
        }
      ],
      "message": "doc: Update mempool_replacements.md to reflect feerate diagram checks",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-24T23:52:18Z"
      },
      "sha": "bc35dcf598c0133b752e3298b6e429ba73c8fbae"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU0NzcyYTA3MWYzNTQ3MzJjZTBmYTY4MmU3OTY3MWJmM2ZmM2FmNDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4772a071f354732ce0fa682e79671bf3ff3af46",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e4772a071f354732ce0fa682e79671bf3ff3af46",
      "tree": {
        "sha": "70749a8c6d877fe339cd3ac73abc650bd1f8600c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/70749a8c6d877fe339cd3ac73abc650bd1f8600c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc35dcf598c0133b752e3298b6e429ba73c8fbae",
          "sha": "bc35dcf598c0133b752e3298b6e429ba73c8fbae",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bc35dcf598c0133b752e3298b6e429ba73c8fbae"
        }
      ],
      "message": "test: add functional test for new cluster mempool RPCs",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-27T13:31:59Z"
      },
      "sha": "e4772a071f354732ce0fa682e79671bf3ff3af46"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhmYTlmY2JiYzgwOTFhNWM1NWI2ZTVkNGI4MzQ2ODQyNjJkZjhhYzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "tree": {
        "sha": "b19be7f9b7097a7718f27e6ad965948bf6f45e85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b19be7f9b7097a7718f27e6ad965948bf6f45e85"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4772a071f354732ce0fa682e79671bf3ff3af46",
          "sha": "e4772a071f354732ce0fa682e79671bf3ff3af46",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e4772a071f354732ce0fa682e79671bf3ff3af46"
        }
      ],
      "message": "fuzz: remove comparison between mini_miner block construction and miner\n\nThis is in preparation for eliminating the block template building happening in\nmini_miner, in favor of directly using the linearizations done in the mempool.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-14T00:19:19Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-28T11:34:48Z"
      },
      "sha": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15290952916,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAOPaWzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15290952916",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "commit_url": "https://api.github.com/repos/sdaftuar/bitcoin/commits/8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "created_at": "2024-11-14T00:21:31Z"
    },
    {
      "event": "unlabeled",
      "id": 15291644756,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAOPc_tU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15291644756",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T01:49:57Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364398135",
      "pull_request_review_id": 1685916441,
      "id": 1364398135,
      "node_id": "PRRC_kwDOABII585RUxA3",
      "diff_hunk": "@@ -18,14 +18,7 @@ other consensus and policy rules, each of the following conditions are met:\n    Use the (`-mempoolfullrbf`) configuration option to allow transaction replacement without enforcement of the\n    opt-in signaling rule.\n \n-2. The replacement transaction only include an unconfirmed input if that input was included in\n-   one of the directly conflicting transactions. An unconfirmed input spends an output from a\n-   currently-unconfirmed transaction.\n-\n-   *Rationale*: When RBF was originally implemented, the mempool did not keep track of\n-   ancestor feerates yet. This rule was suggested as a temporary restriction.\n-\n-3. The replacement transaction pays an absolute fee of at least the sum paid by the original",
      "path": "doc/policy/mempool-replacements.md",
      "position": 12,
      "original_position": 11,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "b0f771bb559f38ea16a8f4d13110e2247ac080b9",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "might be easier to just \"strike out\" this rule and mark it deprecated instead of changing numbers since that's become engineer lingo",
      "created_at": "2023-10-18T19:11:00Z",
      "updated_at": "2023-10-24T18:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1364398135",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364398135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365716769",
      "pull_request_review_id": 1685916441,
      "id": 1365716769,
      "node_id": "PRRC_kwDOABII585RZy8h",
      "diff_hunk": "@@ -684,6 +830,19 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"incrementalrelayfee\", ValueFromAmount(pool.m_incremental_relay_feerate.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n     ret.pushKV(\"fullrbf\", pool.m_full_rbf);\n+    ret.pushKV(\"numberofclusters\", pool.m_cluster_map.size());\n+    int64_t max_cluster_count = 1;",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 283,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "shouldn't this be 0?",
      "created_at": "2023-10-19T15:13:12Z",
      "updated_at": "2023-10-24T18:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1365716769",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365716769"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 844,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365753481",
      "pull_request_review_id": 1685916441,
      "id": 1365753481,
      "node_id": "PRRC_kwDOABII585RZ76J",
      "diff_hunk": "@@ -60,57 +59,26 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n {\n     AssertLockHeld(pool.cs);\n     const uint256 txid = tx.GetHash();\n-    uint64_t nConflictingCount = 0;\n-    for (const auto& mi : iters_conflicting) {\n-        nConflictingCount += mi->GetCountWithDescendants();\n-        // Rule #5: don't consider replacing more than MAX_REPLACEMENT_CANDIDATES\n-        // entries from the mempool. This potentially overestimates the number of actual\n-        // descendants (i.e. if multiple conflicts share a descendant, it will be counted multiple\n-        // times), but we just want to be conservative to avoid doing too much work.\n-        if (nConflictingCount > MAX_REPLACEMENT_CANDIDATES) {\n-            return strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n-                             txid.ToString(),\n-                             nConflictingCount,\n-                             MAX_REPLACEMENT_CANDIDATES);\n-        }\n-    }\n     // Calculate the set of all transactions that would have to be evicted.\n     for (CTxMemPool::txiter it : iters_conflicting) {\n-        pool.CalculateDescendants(it, all_conflicts);\n-    }\n-    return std::nullopt;\n-}\n-\n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n-                                               const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n-{\n-    AssertLockHeld(pool.cs);\n-    std::set<uint256> parents_of_conflicts;\n-    for (const auto& mi : iters_conflicting) {\n-        for (const CTxIn& txin : mi->GetTx().vin) {\n-            parents_of_conflicts.insert(txin.prevout.hash);\n+        // Exit early if we're going to fail (see below)\n+        if (all_conflicts.size() > MAX_REPLACEMENT_CANDIDATES) {",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Note: this is sticking with the same rule#5 instead of number of effected clusters. It would be more ideal if it were number of clusters to allow for better usage of adversarial-ish batched CPFPs",
      "created_at": "2023-10-19T15:40:30Z",
      "updated_at": "2023-10-24T18:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1365753481",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365753481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366095113",
      "pull_request_review_id": 1685916441,
      "id": 1366095113,
      "node_id": "PRRC_kwDOABII585RbPUJ",
      "diff_hunk": "@@ -876,75 +880,8 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n \n     ws.m_iters_conflicting = m_pool.GetIterSet(ws.m_conflicts);\n \n-    // Note that these modifications are only applicable to single transaction scenarios;\n-    // carve-outs and package RBF are disabled for multi-transaction evaluations.\n-    CTxMemPool::Limits maybe_rbf_limits = m_pool.m_limits;\n-\n-    // Calculate in-mempool ancestors, up to a limit.\n-    if (ws.m_conflicts.size() == 1) {\n-        // In general, when we receive an RBF transaction with mempool conflicts, we want to know whether we\n-        // would meet the chain limits after the conflicts have been removed. However, there isn't a practical\n-        // way to do this short of calculating the ancestor and descendant sets with an overlay cache of\n-        // changed mempool entries. Due to both implementation and runtime complexity concerns, this isn't\n-        // very realistic, thus we only ensure a limited set of transactions are RBF'able despite mempool\n-        // conflicts here. Importantly, we need to ensure that some transactions which were accepted using\n-        // the below carve-out are able to be RBF'ed, without impacting the security the carve-out provides\n-        // for off-chain contract systems (see link in the comment below).\n-        //\n-        // Specifically, the subset of RBF transactions which we allow despite chain limits are those which\n-        // conflict directly with exactly one other transaction (but may evict children of said transaction),\n-        // and which are not adding any new mempool dependencies. Note that the \"no new mempool dependencies\"\n-        // check is accomplished later, so we don't bother doing anything about it here, but if our\n-        // policy changes, we may need to move that check to here instead of removing it wholesale.\n-        //\n-        // Such transactions are clearly not merging any existing packages, so we are only concerned with\n-        // ensuring that (a) no package is growing past the package size (not count) limits and (b) we are\n-        // not allowing something to effectively use the (below) carve-out spot when it shouldn't be allowed\n-        // to.\n-        //\n-        // To check these we first check if we meet the RBF criteria, above, and increment the descendant\n-        // limits by the direct conflict and its descendants (as these are recalculated in\n-        // CalculateMempoolAncestors by assuming the new transaction being added is a new descendant, with no\n-        // removals, of each parent's existing dependent set). The ancestor count limits are unmodified (as\n-        // the ancestor limits should be the same for both our new transaction and any conflicts).\n-        // We don't bother incrementing m_limit_descendants by the full removal count as that limit never comes\n-        // into force here (as we're only adding a single transaction).\n-        assert(ws.m_iters_conflicting.size() == 1);\n-        CTxMemPool::txiter conflict = *ws.m_iters_conflicting.begin();\n-\n-        maybe_rbf_limits.descendant_count += 1;\n-        maybe_rbf_limits.descendant_size_vbytes += conflict->GetSizeWithDescendants();\n-    }\n-\n-    auto ancestors{m_pool.CalculateMemPoolAncestors(*entry, maybe_rbf_limits)};\n-    if (!ancestors) {\n-        // If CalculateMemPoolAncestors fails second time, we want the original error string.\n-        // Contracting/payment channels CPFP carve-out:\n-        // If the new transaction is relatively small (up to 40k weight)\n-        // and has at most one ancestor (ie ancestor limit of 2, including\n-        // the new transaction), allow it if its parent has exactly the\n-        // descendant limit descendants.\n-        //\n-        // This allows protocols which rely on distrusting counterparties\n-        // being able to broadcast descendants of an unconfirmed transaction\n-        // to be secure by simply only having two immediately-spendable\n-        // outputs - one for each counterparty. For more info on the uses for\n-        // this, see https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016518.html\n-        CTxMemPool::Limits cpfp_carve_out_limits{\n-            .ancestor_count = 2,\n-            .ancestor_size_vbytes = maybe_rbf_limits.ancestor_size_vbytes,\n-            .descendant_count = maybe_rbf_limits.descendant_count + 1,\n-            .descendant_size_vbytes = maybe_rbf_limits.descendant_size_vbytes + EXTRA_DESCENDANT_TX_SIZE_LIMIT,\n-        };\n-        const auto error_message{util::ErrorString(ancestors).original};\n-        if (ws.m_vsize > EXTRA_DESCENDANT_TX_SIZE_LIMIT) {\n-            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"too-long-mempool-chain\", error_message);\n-        }\n-        ancestors = m_pool.CalculateMemPoolAncestors(*entry, cpfp_carve_out_limits);\n-        if (!ancestors) return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"too-long-mempool-chain\", error_message);\n-    }\n-\n-    ws.m_ancestors = *ancestors;\n+    // Calculate in-mempool ancestors",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "c5d3c42da466feca9192d0e389654ba55caec5a6",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "the check two conditionals above:\r\n\r\n```\r\nif (!bypass_limits && ws.m_modified_fees < m_pool.m_min_relay_feerate.GetFee(ws.m_vsize))\r\n```\r\n\r\nThis is still needed for the same reason as before: transaction that is above minrelay, but would be in a chunk below minrelay. We could immediately evict below minrelay chunks post-re-linearization f.e. which would allow 0-fee parents then relax this maybe.\r\n\r\n",
      "created_at": "2023-10-19T20:48:36Z",
      "updated_at": "2023-10-24T18:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1366095113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366095113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 896,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366105725",
      "pull_request_review_id": 1685916441,
      "id": 1366105725,
      "node_id": "PRRC_kwDOABII585RbR59",
      "diff_hunk": "@@ -83,26 +86,104 @@ static std::vector<CTransactionRef> CreateOrderedCoins(FastRandomContext& det_ra\n     return ordered_coins;\n }\n \n+static void MemPoolAddTransactions(benchmark::Bench& bench)\n+{\n+    FastRandomContext det_rand{true};\n+    int childTxs = 90;\n+    if (bench.complexityN() > 1) {\n+        childTxs = static_cast<int>(bench.complexityN());\n+    }\n+    const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *testing_setup.get()->m_node.mempool;\n+\n+    std::vector<CTransactionRef> transactions;\n+    // Create 1000 clusters of 100 transactions each",
      "path": "src/bench/mempool_stress.cpp",
      "position": 61,
      "original_position": 54,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "c5d3c42da466feca9192d0e389654ba55caec5a6",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "numbers in comments are off\r\n\r\nshower thought: Should we/can we bound the number of clusters in addition to total memory in TrimToSize? I can't think of a good way to do that that doesn't complicate things quite a bit, and perhaps practical mempool sizes make this moot. Just something to consider in case I missed something obvious.",
      "created_at": "2023-10-19T21:01:05Z",
      "updated_at": "2023-10-24T18:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1366105725",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366105725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 107,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1367425942",
      "pull_request_review_id": 1685916441,
      "id": 1367425942,
      "node_id": "PRRC_kwDOABII585RgUOW",
      "diff_hunk": "@@ -1135,29 +1457,67 @@ void CTxMemPool::TrimToSize(size_t sizelimit, std::vector<COutPoint>* pvNoSpends\n \n     unsigned nTxnRemoved = 0;\n     CFeeRate maxFeeRateRemoved(0);\n+\n+    // Use a heap to determine which chunks to evict, but only make the heap if\n+    // we're actually above the size limit.\n+    std::vector<Cluster::HeapEntry> heap_chunks;\n+    std::set<Cluster*> clusters_with_evictions;\n     while (!mapTx.empty() && DynamicMemoryUsage() > sizelimit) {\n-        indexed_transaction_set::index<descendant_score>::type::iterator it = mapTx.get<descendant_score>().begin();\n+        if (heap_chunks.empty()) {\n+            for (const auto & [id, cluster] : m_cluster_map) {\n+                if (!cluster->m_chunks.empty()) {\n+                    heap_chunks.emplace_back(cluster->m_chunks.end()-1, cluster.get());\n+                }\n+            }\n+        }\n+\n+        // Define comparison operator on our heap entries (using feerate of chunks).\n+        auto cmp = [](const Cluster::HeapEntry& a, const Cluster::HeapEntry& b) {\n+            // TODO: branch on size of fee to do this as 32-bit calculation\n+            // instead? etc\n+            return a.first->fee*b.first->size > b.first->fee*a.first->size;\n+        };\n+\n+        std::make_heap(heap_chunks.begin(), heap_chunks.end(), cmp);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 1421,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "26e831d5f2c7db15e7a50f910ddf4e1737d226da",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You probably didn't mean to call make_heap in the loop for 3N work each time. fwiw I don't see any performance difference between `push_heap`ing all the elements on vs one `make_heap`.\r\n\r\nonce this is changed, add+trimming seems to be faster than in master regardless of topology tested",
      "created_at": "2023-10-20T19:39:27Z",
      "updated_at": "2023-10-24T18:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1367425942",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1367425942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1481,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1367430770",
      "pull_request_review_id": 1685916441,
      "id": 1367430770,
      "node_id": "PRRC_kwDOABII585RgVZy",
      "diff_hunk": "@@ -210,183 +194,84 @@ bool BlockAssembler::TestPackage(uint64_t packageSize, int64_t packageSigOpsCost\n \n // Perform transaction-level checks before adding to block:\n // - transaction finality (locktime)\n-bool BlockAssembler::TestPackageTransactions(const CTxMemPool::setEntries& package) const\n+bool BlockAssembler::TestPackageTransactions(const std::list<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs) const\n {\n-    for (CTxMemPool::txiter it : package) {\n-        if (!IsFinalTx(it->GetTx(), nHeight, m_lock_time_cutoff)) {\n+    for (auto tx : txs) {\n+        if (!IsFinalTx(tx.get().GetTx(), nHeight, m_lock_time_cutoff)) {\n             return false;\n         }\n     }\n     return true;\n }\n \n-void BlockAssembler::AddToBlock(CTxMemPool::txiter iter)\n+void BlockAssembler::AddToBlock(const CTxMemPoolEntry& entry)\n {\n-    pblocktemplate->block.vtx.emplace_back(iter->GetSharedTx());\n-    pblocktemplate->vTxFees.push_back(iter->GetFee());\n-    pblocktemplate->vTxSigOpsCost.push_back(iter->GetSigOpCost());\n-    nBlockWeight += iter->GetTxWeight();\n+    pblocktemplate->block.vtx.emplace_back(entry.GetSharedTx());\n+    pblocktemplate->vTxFees.push_back(entry.GetFee());\n+    pblocktemplate->vTxSigOpsCost.push_back(entry.GetSigOpCost());\n+    nBlockWeight += entry.GetTxWeight();\n     ++nBlockTx;\n-    nBlockSigOpsCost += iter->GetSigOpCost();\n-    nFees += iter->GetFee();\n-    inBlock.insert(iter);\n+    nBlockSigOpsCost += entry.GetSigOpCost();\n+    nFees += entry.GetFee();\n \n     bool fPrintPriority = gArgs.GetBoolArg(\"-printpriority\", DEFAULT_PRINTPRIORITY);\n     if (fPrintPriority) {\n         LogPrintf(\"fee rate %s txid %s\\n\",\n-                  CFeeRate(iter->GetModifiedFee(), iter->GetTxSize()).ToString(),\n-                  iter->GetTx().GetHash().ToString());\n+                  CFeeRate(entry.GetModifiedFee(), entry.GetTxSize()).ToString(),\n+                  entry.GetTx().GetHash().ToString());\n     }\n }\n \n-/** Add descendants of given transactions to mapModifiedTx with ancestor\n- * state updated assuming given transactions are inBlock. Returns number\n- * of updated descendants. */\n-static int UpdatePackagesForAdded(const CTxMemPool& mempool,\n-                                  const CTxMemPool::setEntries& alreadyAdded,\n-                                  indexed_modified_transaction_set& mapModifiedTx) EXCLUSIVE_LOCKS_REQUIRED(mempool.cs)\n+void BlockAssembler::addChunks(const CTxMemPool& mempool)\n {\n     AssertLockHeld(mempool.cs);\n-\n-    int nDescendantsUpdated = 0;\n-    for (CTxMemPool::txiter it : alreadyAdded) {\n-        CTxMemPool::setEntries descendants;\n-        mempool.CalculateDescendants(it, descendants);\n-        // Insert all descendants (not yet in block) into the modified set\n-        for (CTxMemPool::txiter desc : descendants) {\n-            if (alreadyAdded.count(desc)) {\n-                continue;\n-            }\n-            ++nDescendantsUpdated;\n-            modtxiter mit = mapModifiedTx.find(desc);\n-            if (mit == mapModifiedTx.end()) {\n-                CTxMemPoolModifiedEntry modEntry(desc);\n-                mit = mapModifiedTx.insert(modEntry).first;\n-            }\n-            mapModifiedTx.modify(mit, update_for_parent_inclusion(it));\n-        }\n-    }\n-    return nDescendantsUpdated;\n-}\n-\n-void BlockAssembler::SortForBlock(const CTxMemPool::setEntries& package, std::vector<CTxMemPool::txiter>& sortedEntries)\n-{\n-    // Sort package by ancestor count\n-    // If a transaction A depends on transaction B, then A's ancestor count\n-    // must be greater than B's.  So this is sufficient to validly order the\n-    // transactions for block inclusion.\n-    sortedEntries.clear();\n-    sortedEntries.insert(sortedEntries.begin(), package.begin(), package.end());\n-    std::sort(sortedEntries.begin(), sortedEntries.end(), CompareTxIterByAncestorCount());\n-}\n-\n-// This transaction selection algorithm orders the mempool based\n-// on feerate of a transaction including all unconfirmed ancestors.\n-// Since we don't remove transactions from the mempool as we select them\n-// for block inclusion, we need an alternate method of updating the feerate\n-// of a transaction with its not-yet-selected ancestors as we go.\n-// This is accomplished by walking the in-mempool descendants of selected\n-// transactions and storing a temporary modified state in mapModifiedTxs.\n-// Each time through the loop, we compare the best transaction in\n-// mapModifiedTxs with the next transaction in the mempool to decide what\n-// transaction package to work on next.\n-void BlockAssembler::addPackageTxs(const CTxMemPool& mempool, int& nPackagesSelected, int& nDescendantsUpdated)\n-{\n-    AssertLockHeld(mempool.cs);\n-\n-    // mapModifiedTx will store sorted packages after they are modified\n-    // because some of their txs are already in the block\n-    indexed_modified_transaction_set mapModifiedTx;\n-    // Keep track of entries that failed inclusion, to avoid duplicate work\n-    CTxMemPool::setEntries failedTx;\n-\n-    CTxMemPool::indexed_transaction_set::index<ancestor_score>::type::iterator mi = mempool.mapTx.get<ancestor_score>().begin();\n-    CTxMemPool::txiter iter;\n-\n     // Limit the number of attempts to add transactions to the block when it is\n     // close to full; this is just a simple heuristic to finish quickly if the\n     // mempool has a lot of entries.\n     const int64_t MAX_CONSECUTIVE_FAILURES = 1000;\n     int64_t nConsecutiveFailed = 0;\n \n-    while (mi != mempool.mapTx.get<ancestor_score>().end() || !mapModifiedTx.empty()) {\n-        // First try to find a new transaction in mapTx to evaluate.\n-        //\n-        // Skip entries in mapTx that are already in a block or are present\n-        // in mapModifiedTx (which implies that the mapTx ancestor state is\n-        // stale due to ancestor inclusion in the block)\n-        // Also skip transactions that we've already failed to add. This can happen if\n-        // we consider a transaction in mapModifiedTx and it fails: we can then\n-        // potentially consider it again while walking mapTx.  It's currently\n-        // guaranteed to fail again, but as a belt-and-suspenders check we put it in\n-        // failedTx and avoid re-evaluation, since the re-evaluation would be using\n-        // cached size/sigops/fee values that are not actually correct.\n-        /** Return true if given transaction from mapTx has already been evaluated,\n-         * or if the transaction's cached data in mapTx is incorrect. */\n-        if (mi != mempool.mapTx.get<ancestor_score>().end()) {\n-            auto it = mempool.mapTx.project<0>(mi);\n-            assert(it != mempool.mapTx.end());\n-            if (mapModifiedTx.count(it) || inBlock.count(it) || failedTx.count(it)) {\n-                ++mi;\n-                continue;\n-            }\n-        }\n-\n-        // Now that mi is not stale, determine which transaction to evaluate:\n-        // the next entry from mapTx, or the best from mapModifiedTx?\n-        bool fUsingModified = false;\n-\n-        modtxscoreiter modit = mapModifiedTx.get<ancestor_score>().begin();\n-        if (mi == mempool.mapTx.get<ancestor_score>().end()) {\n-            // We're out of entries in mapTx; use the entry from mapModifiedTx\n-            iter = modit->iter;\n-            fUsingModified = true;\n-        } else {\n-            // Try to compare the mapTx entry to the mapModifiedTx entry\n-            iter = mempool.mapTx.project<0>(mi);\n-            if (modit != mapModifiedTx.get<ancestor_score>().end() &&\n-                    CompareTxMemPoolEntryByAncestorFee()(*modit, CTxMemPoolModifiedEntry(iter))) {\n-                // The best entry in mapModifiedTx has higher score\n-                // than the one from mapTx.\n-                // Switch which transaction (package) to consider\n-                iter = modit->iter;\n-                fUsingModified = true;\n-            } else {\n-                // Either no entry in mapModifiedTx, or it's worse than mapTx.\n-                // Increment mi for the next loop iteration.\n-                ++mi;\n-            }\n-        }\n-\n-        // We skip mapTx entries that are inBlock, and mapModifiedTx shouldn't\n-        // contain anything that is inBlock.\n-        assert(!inBlock.count(iter));\n-\n-        uint64_t packageSize = iter->GetSizeWithAncestors();\n-        CAmount packageFees = iter->GetModFeesWithAncestors();\n-        int64_t packageSigOpsCost = iter->GetSigOpCostWithAncestors();\n-        if (fUsingModified) {\n-            packageSize = modit->nSizeWithAncestors;\n-            packageFees = modit->nModFeesWithAncestors;\n-            packageSigOpsCost = modit->nSigOpCostWithAncestors;\n+    std::vector<Cluster::HeapEntry> heap_chunks;\n+    // Initialize the heap with the best entry from each cluster\n+    for (const auto & [id, cluster] : mempool.m_cluster_map) {\n+        if (!cluster->m_chunks.empty()) {\n+            heap_chunks.emplace_back(cluster->m_chunks.begin(), cluster.get());\n         }\n-\n-        if (packageFees < m_options.blockMinFeeRate.GetFee(packageSize)) {\n-            // Everything else we might consider has a lower fee rate\n+    }\n+    // Define comparison operator on our heap entries (using feerate of chunks).\n+    auto cmp = [](const Cluster::HeapEntry& a, const Cluster::HeapEntry& b) {\n+        // TODO: branch on size of fee to do this as 32-bit calculation\n+        // instead? etc\n+        return a.first->fee*b.first->size < b.first->fee*a.first->size;\n+    };\n+    // TODO: replace the heap with a priority queue\n+    std::make_heap(heap_chunks.begin(), heap_chunks.end(), cmp);",
      "path": "src/node/miner.cpp",
      "position": null,
      "original_position": 244,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "26e831d5f2c7db15e7a50f910ddf4e1737d226da",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "don't ask why but I'm getting significant performance improvement(>10%) just `push_heap`ing everything from scratch, and similarly with priority_queue",
      "created_at": "2023-10-20T19:46:25Z",
      "updated_at": "2023-10-24T18:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1367430770",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1367430770"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 248,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370716238",
      "pull_request_review_id": 1695722724,
      "id": 1370716238,
      "node_id": "PRRC_kwDOABII585Rs3hO",
      "diff_hunk": "@@ -83,26 +86,104 @@ static std::vector<CTransactionRef> CreateOrderedCoins(FastRandomContext& det_ra\n     return ordered_coins;\n }\n \n+static void MemPoolAddTransactions(benchmark::Bench& bench)\n+{\n+    FastRandomContext det_rand{true};\n+    int childTxs = 90;\n+    if (bench.complexityN() > 1) {\n+        childTxs = static_cast<int>(bench.complexityN());\n+    }\n+    const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *testing_setup.get()->m_node.mempool;\n+\n+    std::vector<CTransactionRef> transactions;\n+    // Create 1000 clusters of 100 transactions each",
      "path": "src/bench/mempool_stress.cpp",
      "position": 61,
      "original_position": 54,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "c5d3c42da466feca9192d0e389654ba55caec5a6",
      "in_reply_to_id": 1366105725,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The immediate downside to a cap on number of clusters is that singleton, high-feerate transactions would not be accepted.  And I don't think we need to -- the only places where having more clusters makes us slower is in eviction and mining, and for both of those use cases we could improve performance (if we need to) by maintaining the relevant heap data structures (or something equivalent) as chunks are modified, rather than all at once. \r\n\r\nFor now in this branch I've created these from scratch each time, but if it turns out that performance is meaningfully impacted when the mempool is busy, then I can optimize this further by just using a bit more memory.",
      "created_at": "2023-10-24T19:24:39Z",
      "updated_at": "2023-10-24T19:24:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1370716238",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370716238"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 107,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371708009",
      "pull_request_review_id": 1697257034,
      "id": 1371708009,
      "node_id": "PRRC_kwDOABII585Rwppp",
      "diff_hunk": "@@ -60,57 +59,26 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n {\n     AssertLockHeld(pool.cs);\n     const uint256 txid = tx.GetHash();\n-    uint64_t nConflictingCount = 0;\n-    for (const auto& mi : iters_conflicting) {\n-        nConflictingCount += mi->GetCountWithDescendants();\n-        // Rule #5: don't consider replacing more than MAX_REPLACEMENT_CANDIDATES\n-        // entries from the mempool. This potentially overestimates the number of actual\n-        // descendants (i.e. if multiple conflicts share a descendant, it will be counted multiple\n-        // times), but we just want to be conservative to avoid doing too much work.\n-        if (nConflictingCount > MAX_REPLACEMENT_CANDIDATES) {\n-            return strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n-                             txid.ToString(),\n-                             nConflictingCount,\n-                             MAX_REPLACEMENT_CANDIDATES);\n-        }\n-    }\n     // Calculate the set of all transactions that would have to be evicted.\n     for (CTxMemPool::txiter it : iters_conflicting) {\n-        pool.CalculateDescendants(it, all_conflicts);\n-    }\n-    return std::nullopt;\n-}\n-\n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n-                                               const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n-{\n-    AssertLockHeld(pool.cs);\n-    std::set<uint256> parents_of_conflicts;\n-    for (const auto& mi : iters_conflicting) {\n-        for (const CTxIn& txin : mi->GetTx().vin) {\n-            parents_of_conflicts.insert(txin.prevout.hash);\n+        // Exit early if we're going to fail (see below)\n+        if (all_conflicts.size() > MAX_REPLACEMENT_CANDIDATES) {",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": 1365753481,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "There is room to relax this rule some, so if this is important we can do so. I think the requirement is a bound on the number of clusters that would have to be re-sorted in order to accept the new transaction.  We can approximate that as the number of clusters that would be non-empty as a result of removing all the conflicting transactions from the mempool, and only process replacements for which that is below some target.  \r\n\r\nThat would be a more complex logic though, so before implementing it I wanted to have some sense of whether we need to.  Has the historical 100-transaction-conflict limit been problematic for use cases in the past?  Note also that in the new code, we are calculating the number of conflicts exactly (the old code used an approximation, which could be gamed by an adversary).",
      "created_at": "2023-10-25T12:48:09Z",
      "updated_at": "2023-10-25T12:48:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1371708009",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371708009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371803601",
      "pull_request_review_id": 1697415470,
      "id": 1371803601,
      "node_id": "PRRC_kwDOABII585RxA_R",
      "diff_hunk": "@@ -60,57 +59,26 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n {\n     AssertLockHeld(pool.cs);\n     const uint256 txid = tx.GetHash();\n-    uint64_t nConflictingCount = 0;\n-    for (const auto& mi : iters_conflicting) {\n-        nConflictingCount += mi->GetCountWithDescendants();\n-        // Rule #5: don't consider replacing more than MAX_REPLACEMENT_CANDIDATES\n-        // entries from the mempool. This potentially overestimates the number of actual\n-        // descendants (i.e. if multiple conflicts share a descendant, it will be counted multiple\n-        // times), but we just want to be conservative to avoid doing too much work.\n-        if (nConflictingCount > MAX_REPLACEMENT_CANDIDATES) {\n-            return strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n-                             txid.ToString(),\n-                             nConflictingCount,\n-                             MAX_REPLACEMENT_CANDIDATES);\n-        }\n-    }\n     // Calculate the set of all transactions that would have to be evicted.\n     for (CTxMemPool::txiter it : iters_conflicting) {\n-        pool.CalculateDescendants(it, all_conflicts);\n-    }\n-    return std::nullopt;\n-}\n-\n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n-                                               const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n-{\n-    AssertLockHeld(pool.cs);\n-    std::set<uint256> parents_of_conflicts;\n-    for (const auto& mi : iters_conflicting) {\n-        for (const CTxIn& txin : mi->GetTx().vin) {\n-            parents_of_conflicts.insert(txin.prevout.hash);\n+        // Exit early if we're going to fail (see below)\n+        if (all_conflicts.size() > MAX_REPLACEMENT_CANDIDATES) {",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": 1365753481,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "~~Ah! I wrote a huge response to this, then looked up our previous discussions, and realized I didn't actually read the code: https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1554708843~~\r\n\r\n~~IIUC now, this is only counting *direct* conflicts, and not the descendants that are booted.~~\r\n\r\n~~I think that's fine.~~\r\n\r\nActually no, the existing code comments were just misleading, looks like the issue still exists, see: https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1554708843",
      "created_at": "2023-10-25T13:52:53Z",
      "updated_at": "2023-10-25T13:59:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1371803601",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371803601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371813655",
      "pull_request_review_id": 1697431678,
      "id": 1371813655,
      "node_id": "PRRC_kwDOABII585RxDcX",
      "diff_hunk": "@@ -60,57 +59,26 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n {\n     AssertLockHeld(pool.cs);\n     const uint256 txid = tx.GetHash();\n-    uint64_t nConflictingCount = 0;\n-    for (const auto& mi : iters_conflicting) {\n-        nConflictingCount += mi->GetCountWithDescendants();\n-        // Rule #5: don't consider replacing more than MAX_REPLACEMENT_CANDIDATES\n-        // entries from the mempool. This potentially overestimates the number of actual\n-        // descendants (i.e. if multiple conflicts share a descendant, it will be counted multiple\n-        // times), but we just want to be conservative to avoid doing too much work.\n-        if (nConflictingCount > MAX_REPLACEMENT_CANDIDATES) {\n-            return strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n-                             txid.ToString(),\n-                             nConflictingCount,\n-                             MAX_REPLACEMENT_CANDIDATES);\n-        }\n-    }\n     // Calculate the set of all transactions that would have to be evicted.\n     for (CTxMemPool::txiter it : iters_conflicting) {\n-        pool.CalculateDescendants(it, all_conflicts);\n-    }\n-    return std::nullopt;\n-}\n-\n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n-                                               const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n-{\n-    AssertLockHeld(pool.cs);\n-    std::set<uint256> parents_of_conflicts;\n-    for (const auto& mi : iters_conflicting) {\n-        for (const CTxIn& txin : mi->GetTx().vin) {\n-            parents_of_conflicts.insert(txin.prevout.hash);\n+        // Exit early if we're going to fail (see below)\n+        if (all_conflicts.size() > MAX_REPLACEMENT_CANDIDATES) {",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": 1365753481,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah yes, in the new code I'm only counting direct conflicts right now, because every descendant of a direct conflict must be in the same cluster as that conflict.  So this is already a relaxation of the existing rule.",
      "created_at": "2023-10-25T13:59:21Z",
      "updated_at": "2023-10-25T13:59:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1371813655",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371813655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371819952",
      "pull_request_review_id": 1697442366,
      "id": 1371819952,
      "node_id": "PRRC_kwDOABII585RxE-w",
      "diff_hunk": "@@ -60,57 +59,26 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n {\n     AssertLockHeld(pool.cs);\n     const uint256 txid = tx.GetHash();\n-    uint64_t nConflictingCount = 0;\n-    for (const auto& mi : iters_conflicting) {\n-        nConflictingCount += mi->GetCountWithDescendants();\n-        // Rule #5: don't consider replacing more than MAX_REPLACEMENT_CANDIDATES\n-        // entries from the mempool. This potentially overestimates the number of actual\n-        // descendants (i.e. if multiple conflicts share a descendant, it will be counted multiple\n-        // times), but we just want to be conservative to avoid doing too much work.\n-        if (nConflictingCount > MAX_REPLACEMENT_CANDIDATES) {\n-            return strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n-                             txid.ToString(),\n-                             nConflictingCount,\n-                             MAX_REPLACEMENT_CANDIDATES);\n-        }\n-    }\n     // Calculate the set of all transactions that would have to be evicted.\n     for (CTxMemPool::txiter it : iters_conflicting) {\n-        pool.CalculateDescendants(it, all_conflicts);\n-    }\n-    return std::nullopt;\n-}\n-\n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n-                                               const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n-{\n-    AssertLockHeld(pool.cs);\n-    std::set<uint256> parents_of_conflicts;\n-    for (const auto& mi : iters_conflicting) {\n-        for (const CTxIn& txin : mi->GetTx().vin) {\n-            parents_of_conflicts.insert(txin.prevout.hash);\n+        // Exit early if we're going to fail (see below)\n+        if (all_conflicts.size() > MAX_REPLACEMENT_CANDIDATES) {",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": 1365753481,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I think the requirement is a bound on the number of clusters that would have to be re-sorted in order to accept the new transaction.\r\n\r\nAs an alternative, we drop the replacement limit to like, 10 or something, and then *only* count the *direct* conflicts, not the direct conflicts and all the descendants?",
      "created_at": "2023-10-25T14:01:44Z",
      "updated_at": "2023-10-25T14:01:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1371819952",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371819952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392325037",
      "pull_request_review_id": 1729366575,
      "id": 1392325037,
      "node_id": "PRRC_kwDOABII585S_TGt",
      "diff_hunk": "@@ -118,5 +199,63 @@ static void MempoolCheck(benchmark::Bench& bench)\n     });\n }\n \n+static void MemPoolMiningScoreCheck(benchmark::Bench& bench)\n+{\n+    // Default test: each cluster is of size 20, and we'll try to RBF with a\n+    // transaction that merges 10 clusters, evicting 10 transactions from each.\n+\n+    FastRandomContext det_rand{true};\n+    int childTxs = 10;\n+    if (bench.complexityN() > 1) {\n+        childTxs = static_cast<int>(bench.complexityN());\n+    }\n+    const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *testing_setup.get()->m_node.mempool;\n+\n+    LOCK2(cs_main, pool.cs);\n+\n+    std::vector<CTransactionRef> parent_txs_for_rbf;\n+    std::set<uint256> child_txs_to_conflict_with;\n+\n+    for (int i=0; i<10; i++) {\n+        std::vector<CTransactionRef> transactions = CreateCoinCluster(det_rand, childTxs, /*min_ancestors=*/1);\n+        parent_txs_for_rbf.push_back(transactions[0]);\n+        // Conflict with everything after the first 10 transactions\n+        for (size_t j=10; j<transactions.size(); ++j) {\n+            child_txs_to_conflict_with.insert(transactions[j]->GetHash());\n+        }\n+\n+        // Add all transactions to the mempool.\n+        for (auto& tx : transactions) {\n+            AddTx(tx, pool, det_rand);\n+        }\n+    }\n+\n+    // Construct a transaction that spends from each of the parent transactions\n+    // selected.\n+    CMutableTransaction tx = CMutableTransaction();\n+    tx.vin.resize(10);\n+    for (size_t i=0; i<parent_txs_for_rbf.size(); ++i) {\n+        tx.vin[i].prevout = COutPoint(parent_txs_for_rbf[i]->GetHash(), 0);\n+        tx.vin[i].scriptSig = CScript() << i;\n+    }\n+    tx.vout.resize(1);\n+    for (auto& out : tx.vout) {\n+        out.scriptPubKey = CScript() << CScriptNum(det_rand.randrange(19)+1) << OP_EQUAL;\n+        out.nValue = 10 * COIN;\n+    }\n+\n+    CTxMemPool::setEntries all_conflicts = pool.GetIterSet(child_txs_to_conflict_with);\n+    CTxMemPoolEntry entry(MakeTransactionRef(tx), det_rand.randrange(10000)+1000, 0, 1, 0, false, 4, LockPoints());\n+\n+    bench.run([&]() NO_THREAD_SAFETY_ANALYSIS {\n+        CTxMemPool::Limits limits(pool.m_limits);\n+        pool.CalculateMiningScoreOfReplacementTx(entry, det_rand.randrange(30000)+1000, all_conflicts, limits);\n+    });\n+}\n+\n+BENCHMARK(MemPoolAncestorsDescendants, benchmark::PriorityLevel::HIGH);\n+BENCHMARK(MemPoolAddTransactions, benchmark::PriorityLevel::HIGH);",
      "path": "src/bench/mempool_stress.cpp",
      "position": 228,
      "original_position": 210,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "dd6684ab665bc8ae76b76fdd2e578fc77d562a52",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "dd6684ab665bc8ae76b76fdd2e578fc77d562a52: While you're touching this, can you rename `MempoolCheck` to `MemPoolCheck`, `MempoolEviction` to `MemPoolEviction` and `ComplexMemPool` to `MempoolComplex`? That makes `-filter=MemPool.*` work\r\n\r\nAs a workaround, `-filter=.*Mem.*` does work.",
      "created_at": "2023-11-14T10:05:29Z",
      "updated_at": "2023-11-14T10:29:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1392325037",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392325037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 269,
      "original_line": 269,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392364899",
      "pull_request_review_id": 1729419761,
      "id": 1392364899,
      "node_id": "PRRC_kwDOABII585S_c1j",
      "diff_hunk": "@@ -574,6 +574,8 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-limitancestorsize=<n>\", strprintf(\"Do not accept transactions whose size with all in-mempool ancestors exceeds <n> kilobytes (default: %u)\", DEFAULT_ANCESTOR_SIZE_LIMIT_KVB), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-limitdescendantcount=<n>\", strprintf(\"Do not accept transactions if any ancestor would have <n> or more in-mempool descendants (default: %u)\", DEFAULT_DESCENDANT_LIMIT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT_KVB), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-limitclustercount=<n>\", strprintf(\"Do not accept transactions connected to <n> or more existing in-mempool transactions (default: %u)\", DEFAULT_CLUSTER_LIMIT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);",
      "path": "src/init.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I made an attempt at dropping `-limitdescendantsize` and friends: https://github.com/Sjors/bitcoin/commits/2022/11/cluster-mempool\r\n\r\nI (naively) replaced ancestor and descendent limits in coin selection with the new cluster limit. At least the tests pass *.\r\n\r\nWhen we drop these settings anyone who uses them will get an error when starting the node. That's probably a good thing, since they should read about this change.\r\n\r\n`* =` well, wallet_basic.py fails with:\r\n\r\n```\r\nInternal bug detected: Shared UTXOs among selection results\r\nwallet/coinselection.h:340 (InsertInputs)\r\n```",
      "created_at": "2023-11-14T10:34:19Z",
      "updated_at": "2023-11-14T12:30:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1392364899",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392364899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 617,
      "original_line": 617,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392567718",
      "pull_request_review_id": 1729707068,
      "id": 1392567718,
      "node_id": "PRRC_kwDOABII585TAOWm",
      "diff_hunk": "@@ -1245,3 +1536,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 407,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "54f39ca8f101483f5f82707689ca49431d4091e5",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "54f39ca8f101483f5f82707689ca49431d4091e5: what if the deleted transaction makes it so there are now two clusters? This is also safe to ignore? ",
      "created_at": "2023-11-14T13:15:36Z",
      "updated_at": "2023-11-14T14:27:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1392567718",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392567718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392640692",
      "pull_request_review_id": 1729707068,
      "id": 1392640692,
      "node_id": "PRRC_kwDOABII585TAgK0",
      "diff_hunk": "@@ -1245,3 +1536,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    return;\n+}\n+\n+void Cluster::RechunkFromLinearization(std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 423,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "54f39ca8f101483f5f82707689ca49431d4091e5",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "54f39ca8f101483f5f82707689ca49431d4091e5: So you're creating a chunk for each new transaction and then erasing it if the fee rate goes down. Why not the other way around? ",
      "created_at": "2023-11-14T14:09:48Z",
      "updated_at": "2023-11-14T14:27:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1392640692",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392640692"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1875,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392646700",
      "pull_request_review_id": 1729707068,
      "id": 1392646700,
      "node_id": "PRRC_kwDOABII585TAhos",
      "diff_hunk": "@@ -1245,3 +1536,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    return;\n+}\n+\n+void Cluster::RechunkFromLinearization(std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            double feerate_prev = prev_iter->fee*cur_iter->size;",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 427,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "54f39ca8f101483f5f82707689ca49431d4091e5",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "54f39ca8f101483f5f82707689ca49431d4091e5: shouldn't this be `fee / size`? Or do you mean to use an inverse fee rate for performance (`inv_fee_rate`)?",
      "created_at": "2023-11-14T14:13:05Z",
      "updated_at": "2023-11-14T14:27:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1392646700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392646700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1877,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399053865",
      "pull_request_review_id": 1739566572,
      "id": 1399053865,
      "node_id": "PRRC_kwDOABII585TY94p",
      "diff_hunk": "@@ -632,6 +634,22 @@ class CTxMemPool\n      */\n     void UpdateTransactionsFromBlock(const std::vector<uint256>& vHashesToUpdate) EXCLUSIVE_LOCKS_REQUIRED(cs, cs_main) LOCKS_EXCLUDED(m_epoch);\n \n+    /**\n+     * Calculate whether cluster size limits would be exceeded if a new tx were\n+     * added to the mempool (assuming no conflicts).",
      "path": "src/txmempool.h",
      "position": 277,
      "original_position": 15,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "065e18fff30a91c94c47d5c2fc65b13ddc38aa47",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "065e18fff30a91c94c47d5c2fc65b13ddc38aa47: do you plan to relax this assumption so that a transaction in (a) full cluster(s) can be replaced?\r\n\r\n_Update_: `AcceptSingleTransaction` skips `ClusterSizeChecks` if there's a replacement, in which case `ReplacementChecks` checks the new cluster size. So this is not an issue.",
      "created_at": "2023-11-20T11:22:37Z",
      "updated_at": "2023-11-20T14:32:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399053865",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399053865"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 427,
      "original_line": 427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399137900",
      "pull_request_review_id": 1739706549,
      "id": 1399137900,
      "node_id": "PRRC_kwDOABII585TZSZs",
      "diff_hunk": "@@ -553,6 +660,39 @@ static RPCHelpMan getmempooldescendants()\n     };\n }\n \n+static RPCHelpMan getmempoolcluster()\n+{\n+    return RPCHelpMan{\"getmempoolcluster\",\n+        \"\\nReturns mempool data for given cluster\\n\",\n+        {\n+            {\"id\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The cluster id (must be in mempool)\"},",
      "path": "src/rpc/mempool.cpp",
      "position": 233,
      "original_position": 192,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1: it would be more practical to (also) have a lookup by transaction hash",
      "created_at": "2023-11-20T12:32:16Z",
      "updated_at": "2023-11-20T12:32:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399137900",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399137900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 659,
      "original_line": 659,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399160874",
      "pull_request_review_id": 1739741540,
      "id": 1399160874,
      "node_id": "PRRC_kwDOABII585TZYAq",
      "diff_hunk": "@@ -1245,3 +1536,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    return;\n+}\n+\n+void Cluster::RechunkFromLinearization(std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            double feerate_prev = prev_iter->fee*cur_iter->size;",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 427,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "54f39ca8f101483f5f82707689ca49431d4091e5",
      "in_reply_to_id": 1392646700,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "To check `a/b > c/d` you can instead check `a*d > c*b`, which avoids divisions (which are an order of magnitude slower than multiplication).",
      "created_at": "2023-11-20T12:53:42Z",
      "updated_at": "2023-11-20T12:53:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399160874",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399160874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1877,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399161977",
      "pull_request_review_id": 1739743147,
      "id": 1399161977,
      "node_id": "PRRC_kwDOABII585TZYR5",
      "diff_hunk": "@@ -632,6 +634,22 @@ class CTxMemPool\n      */\n     void UpdateTransactionsFromBlock(const std::vector<uint256>& vHashesToUpdate) EXCLUSIVE_LOCKS_REQUIRED(cs, cs_main) LOCKS_EXCLUDED(m_epoch);\n \n+    /**\n+     * Calculate whether cluster size limits would be exceeded if a new tx were\n+     * added to the mempool (assuming no conflicts).",
      "path": "src/txmempool.h",
      "position": 277,
      "original_position": 15,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "065e18fff30a91c94c47d5c2fc65b13ddc38aa47",
      "in_reply_to_id": 1399053865,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I believe that's an idea we've toyed with (calling it \"sibling eviction\"), but so far it isn't clear how to align that with DoS prevention.",
      "created_at": "2023-11-20T12:54:40Z",
      "updated_at": "2023-11-20T12:54:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399161977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399161977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 427,
      "original_line": 427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399223399",
      "pull_request_review_id": 1739853534,
      "id": 1399223399,
      "node_id": "PRRC_kwDOABII585TZnRn",
      "diff_hunk": "@@ -249,34 +249,81 @@ static RPCHelpMan testmempoolaccept()\n     };\n }\n \n+static std::vector<RPCResult> ClusterDescription()\n+{\n+    return {\n+        RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\"},\n+        RPCResult{RPCResult::Type::NUM, \"txcount\", \"number of transactions (including this one)\"},\n+        RPCResult{RPCResult::Type::NUM, \"clusterid\", \"id of the cluster containing this tx\"},\n+        RPCResult{RPCResult::Type::ARR, \"chunks\", \"the cluster's chunks\",\n+            {RPCResult{RPCResult::Type::OBJ, \"chunkentry\", \"\",\n+                {\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"fee\", \"fee of this chunk\"},\n+                    RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual size of this chunk\"},\n+                    RPCResult{RPCResult::Type::NUM, \"feerate\", \"fee rate in \" + CURRENCY_UNIT + \"/kvB\"},\n+                    RPCResult{RPCResult::Type::ARR, \"txids\", \"txids in this chunk in sorted order\",\n+                        {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"the transaction id\"}}}\n+                }}\n+            }\n+        }\n+    };\n+}\n+\n static std::vector<RPCResult> MempoolEntryDescription()\n {\n     return {\n         RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\"},\n-        RPCResult{RPCResult::Type::NUM, \"weight\", \"transaction weight as defined in BIP 141.\"},\n-        RPCResult{RPCResult::Type::NUM_TIME, \"time\", \"local time transaction entered pool in seconds since 1 Jan 1970 GMT\"},\n-        RPCResult{RPCResult::Type::NUM, \"height\", \"block height when transaction entered pool\"},\n-        RPCResult{RPCResult::Type::NUM, \"descendantcount\", \"number of in-mempool descendant transactions (including this one)\"},\n-        RPCResult{RPCResult::Type::NUM, \"descendantsize\", \"virtual transaction size of in-mempool descendants (including this one)\"},\n-        RPCResult{RPCResult::Type::NUM, \"ancestorcount\", \"number of in-mempool ancestor transactions (including this one)\"},\n-        RPCResult{RPCResult::Type::NUM, \"ancestorsize\", \"virtual transaction size of in-mempool ancestors (including this one)\"},\n-        RPCResult{RPCResult::Type::STR_HEX, \"wtxid\", \"hash of serialized transaction, including witness data\"},\n-        RPCResult{RPCResult::Type::OBJ, \"fees\", \"\",\n-            {\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee, denominated in \" + CURRENCY_UNIT},\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"modified\", \"transaction fee with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"ancestor\", \"transaction fees of in-mempool ancestors (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"descendant\", \"transaction fees of in-mempool descendants (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n-            }},\n-        RPCResult{RPCResult::Type::ARR, \"depends\", \"unconfirmed transactions used as inputs for this transaction\",\n-            {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"parent transaction id\"}}},\n-        RPCResult{RPCResult::Type::ARR, \"spentby\", \"unconfirmed transactions spending outputs from this transaction\",\n-            {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"child transaction id\"}}},\n-        RPCResult{RPCResult::Type::BOOL, \"bip125-replaceable\", \"Whether this transaction signals BIP125 replaceability or has an unconfirmed ancestor signaling BIP125 replaceability.\\n\"},\n-        RPCResult{RPCResult::Type::BOOL, \"unbroadcast\", \"Whether this transaction is currently unbroadcast (initial broadcast not yet acknowledged by any peers)\"},\n+            RPCResult{RPCResult::Type::NUM, \"weight\", \"transaction weight as defined in BIP 141.\"},\n+            RPCResult{RPCResult::Type::NUM_TIME, \"time\", \"local time transaction entered pool in seconds since 1 Jan 1970 GMT\"},\n+            RPCResult{RPCResult::Type::NUM, \"height\", \"block height when transaction entered pool\"},\n+            RPCResult{RPCResult::Type::NUM, \"descendantcount\", \"number of in-mempool descendant transactions (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"descendantsize\", \"virtual transaction size of in-mempool descendants (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"ancestorcount\", \"number of in-mempool ancestor transactions (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"ancestorsize\", \"virtual transaction size of in-mempool ancestors (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"chunksize\", \"virtual transaction size of this transaction's chunk\"},\n+            RPCResult{RPCResult::Type::NUM, \"clusterid\", \"id of the cluster containing this tx\"},\n+            RPCResult{RPCResult::Type::STR_HEX, \"wtxid\", \"hash of serialized transaction, including witness data\"},\n+            RPCResult{RPCResult::Type::OBJ, \"fees\", \"\",\n+                {\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"modified\", \"transaction fee with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"ancestor\", \"transaction fees of in-mempool ancestors (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"descendant\", \"transaction fees of in-mempool descendants (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"chunk\", \"transaction fees of chunk, denominated in \" + CURRENCY_UNIT},\n+                }},\n+            RPCResult{RPCResult::Type::ARR, \"depends\", \"unconfirmed transactions used as inputs for this transaction\",\n+                {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"parent transaction id\"}}},\n+            RPCResult{RPCResult::Type::ARR, \"spentby\", \"unconfirmed transactions spending outputs from this transaction\",\n+                {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"child transaction id\"}}},\n+            RPCResult{RPCResult::Type::BOOL, \"bip125-replaceable\", \"Whether this transaction signals BIP125 replaceability or has an unconfirmed ancestor signaling BIP125 replaceability.\\n\"},\n+            RPCResult{RPCResult::Type::BOOL, \"unbroadcast\", \"Whether this transaction is currently unbroadcast (initial broadcast not yet acknowledged by any peers)\"},\n     };\n }\n \n+static void clusterToJSON(const CTxMemPool& pool, UniValue& info, const Cluster& c) EXCLUSIVE_LOCKS_REQUIRED(pool.cs)\n+{\n+    AssertLockHeld(pool.cs);\n+    info.pushKV(\"vsize\", (int)c.m_tx_size);\n+    info.pushKV(\"txcount\", (int)c.m_tx_count);\n+    info.pushKV(\"clusterid\", (int)c.m_id);\n+    UniValue chunks(UniValue::VARR);\n+    for (auto &chunk : c.m_chunks) {",
      "path": "src/rpc/mempool.cpp",
      "position": 55,
      "original_position": 83,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1: can you order chunks by mining score?",
      "created_at": "2023-11-20T13:42:19Z",
      "updated_at": "2023-11-20T13:42:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399223399",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399223399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 315,
      "original_line": 315,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399231122",
      "pull_request_review_id": 1739865937,
      "id": 1399231122,
      "node_id": "PRRC_kwDOABII585TZpKS",
      "diff_hunk": "@@ -764,48 +918,174 @@ void CTxMemPool::check(const CCoinsViewCache& active_coins_tip, int64_t spendhei\n         assert(&tx == it->second);\n     }\n \n+    // Check that clusters are sorted topologically and that the chunk metadata\n+    // matches the txs in the chunk.\n+    for (const auto & [id, cluster] : m_cluster_map) {\n+        assert(cluster->m_tx_count > 0); // no empty clusters\n+        CTxMemPoolEntry::Parents txs_so_far;\n+        for (size_t i=0; i<cluster->m_chunks.size(); ++i) {\n+            int64_t fee{0};\n+            int64_t size{0};\n+            assert(!cluster->m_chunks[i].txs.empty()); // no empty chunks\n+            for (auto it=cluster->m_chunks[i].txs.begin(); it != cluster->m_chunks[i].txs.end(); ++it) {\n+                fee += it->get().GetModifiedFee();\n+                size += it->get().GetTxSize();\n+                // Check that all parents are in txs_so_far\n+                for (const auto& parent : it->get().GetMemPoolParentsConst()) {\n+                    assert(txs_so_far.count(parent));\n+                }\n+                txs_so_far.insert(*it);\n+            }\n+            assert(fee == cluster->m_chunks[i].fee);\n+            assert(size == cluster->m_chunks[i].size);\n+        }\n+        innerUsage += cluster->GetMemoryUsage();\n+    }\n+\n+    // Check that each cluster is connected.\n+    for (const auto & [id, cluster] : m_cluster_map) {\n+        // Since we've checked the parents and children already, we'll use\n+        // those values here.\n+        // We'll check that if we walk to every transaction reachable from the\n+        // first one, that we get every tx in the cluster.\n+        auto first_tx = cluster->m_chunks.front().txs.front();\n+        std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef> work_queue;\n+        int reachable_txs = 1; // we'll count the transactions we reach.\n+\n+        WITH_FRESH_EPOCH(m_epoch);\n+        visited(first_tx.get());\n+        assert(first_tx.get().GetMemPoolParentsConst().size() == 0); // first tx can never have parents.\n+        for (auto child : first_tx.get().GetMemPoolChildrenConst()) {\n+            work_queue.push_back(child);\n+            visited(child.get());\n+            ++reachable_txs;\n+        }\n+        while (work_queue.size() > 0) {\n+            auto next_tx = work_queue.back();\n+            work_queue.pop_back();\n+            for (auto parent : next_tx.get().GetMemPoolParentsConst()) {\n+                if (!visited(parent.get())) {\n+                    ++reachable_txs;\n+                    work_queue.push_back(parent);\n+                }\n+            }\n+            for (auto child : next_tx.get().GetMemPoolChildrenConst()) {\n+                if (!visited(child.get())) {\n+                    ++reachable_txs;\n+                    work_queue.push_back(child);\n+                }\n+            }\n+        }\n+        assert(reachable_txs == cluster->m_tx_count);\n+    }\n+\n     assert(totalTxSize == checkTotal);\n     assert(m_total_fee == check_total_fee);\n     assert(innerUsage == cachedInnerUsage);\n }\n \n-bool CTxMemPool::CompareDepthAndScore(const uint256& hasha, const uint256& hashb, bool wtxid)\n+// Return true if a comes before b in mempool sort order\n+bool CTxMemPool::CompareMiningScore(txiter a, txiter b) const\n+{\n+    if (a == b) return false; // An element cannot be less than itself.\n+\n+    CAmount a_fee = a->m_cluster->m_chunks[a->m_loc.first].fee;\n+    int64_t a_size = a->m_cluster->m_chunks[a->m_loc.first].size;\n+    CAmount b_fee = b->m_cluster->m_chunks[b->m_loc.first].fee;\n+    int64_t b_size = b->m_cluster->m_chunks[b->m_loc.first].size;\n+\n+    int64_t a_score = a_fee * b_size;\n+    int64_t b_score = b_fee * a_size;",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 1113,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It would be good to explain the rationale for the miner score somewhere.\r\n\r\nWhy a * b and b * a?\r\n\r\nAnd why is not the fee rate `a_fee / a_size`? (inverse score?)",
      "created_at": "2023-11-20T13:48:38Z",
      "updated_at": "2023-11-20T13:51:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399231122",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399231122"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399244164",
      "pull_request_review_id": 1739885361,
      "id": 1399244164,
      "node_id": "PRRC_kwDOABII585TZsWE",
      "diff_hunk": "@@ -377,6 +427,63 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempoo\n     }\n }\n \n+static RPCHelpMan getmempoolfeesize()\n+{\n+    return RPCHelpMan{\"getmempoolfeesize\",\n+        \"Returns fee/size data for the whole mempool.\",\n+        {},\n+        {},\n+        RPCExamples{\n+            HelpExampleCli(\"getmempoolfeesize\", \"\")\n+            + HelpExampleRpc(\"getmempoolfeesize\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+            LOCK(mempool.cs);\n+\n+            UniValue result(UniValue::VARR);\n+\n+            // TODO: refactor so that we're not just copying this from the miner.\n+            std::vector<Cluster::HeapEntry> heap_chunks;\n+            // Initialize the heap with the best entry from each cluster\n+            for (const auto & [id, cluster] : mempool.m_cluster_map) {\n+                if (!cluster->m_chunks.empty()) {\n+                    heap_chunks.emplace_back(cluster->m_chunks.begin(), cluster.get());\n+                }\n+            }\n+            // Define comparison operator on our heap entries (using feerate of chunks).\n+            auto cmp = [](const Cluster::HeapEntry& a, const Cluster::HeapEntry& b) {\n+                return a.first->fee*b.first->size < b.first->fee*a.first->size;\n+            };\n+            std::make_heap(heap_chunks.begin(), heap_chunks.end(), cmp);\n+\n+            CAmount accum_fee{0};\n+            int64_t accum_size{0};\n+            while (!heap_chunks.empty()) {\n+                auto best_chunk = heap_chunks.front();\n+                std::pop_heap(heap_chunks.begin(), heap_chunks.end(), cmp);\n+                heap_chunks.pop_back();\n+\n+                accum_size += best_chunk.first->size;\n+                accum_fee += best_chunk.first->fee;\n+\n+                UniValue o(UniValue::VOBJ);",
      "path": "src/rpc/mempool.cpp",
      "position": 155,
      "original_position": 164,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1: this should also list the cluster id, and maybe also the chunk number.\r\n\r\nCould also add an argument limit the total number of vbytes.\r\n\r\n`getmempoolfeesize` can be introduced in its own commit",
      "created_at": "2023-11-20T13:58:48Z",
      "updated_at": "2023-11-20T13:59:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399244164",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399244164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 469,
      "original_line": 469,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399246551",
      "pull_request_review_id": 1739889097,
      "id": 1399246551,
      "node_id": "PRRC_kwDOABII585TZs7X",
      "diff_hunk": "@@ -377,6 +427,63 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempoo\n     }\n }\n \n+static RPCHelpMan getmempoolfeesize()\n+{\n+    return RPCHelpMan{\"getmempoolfeesize\",\n+        \"Returns fee/size data for the whole mempool.\",\n+        {},\n+        {},\n+        RPCExamples{\n+            HelpExampleCli(\"getmempoolfeesize\", \"\")\n+            + HelpExampleRpc(\"getmempoolfeesize\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+            LOCK(mempool.cs);\n+\n+            UniValue result(UniValue::VARR);\n+\n+            // TODO: refactor so that we're not just copying this from the miner.\n+            std::vector<Cluster::HeapEntry> heap_chunks;\n+            // Initialize the heap with the best entry from each cluster\n+            for (const auto & [id, cluster] : mempool.m_cluster_map) {\n+                if (!cluster->m_chunks.empty()) {\n+                    heap_chunks.emplace_back(cluster->m_chunks.begin(), cluster.get());\n+                }\n+            }\n+            // Define comparison operator on our heap entries (using feerate of chunks).\n+            auto cmp = [](const Cluster::HeapEntry& a, const Cluster::HeapEntry& b) {\n+                return a.first->fee*b.first->size < b.first->fee*a.first->size;",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 150,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1 : Could this use `CompareMiningScore` or does it have a different goal?",
      "created_at": "2023-11-20T14:00:41Z",
      "updated_at": "2023-11-20T14:00:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399246551",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399246551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 474,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399253500",
      "pull_request_review_id": 1739900168,
      "id": 1399253500,
      "node_id": "PRRC_kwDOABII585TZun8",
      "diff_hunk": "@@ -53,12 +46,10 @@ other consensus and policy rules, each of the following conditions are met:\n    significant portions of the node's mempool using replacements with multiple directly conflicting\n    transactions, each with large descendant sets.\n \n-6. The replacement transaction's feerate is greater than the feerates of all directly conflicting\n+5. The replacement transaction's mining score is greater than the mining score of all directly conflicting",
      "path": "doc/policy/mempool-replacements.md",
      "position": null,
      "original_position": 39,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "bf467f8286425b692a1736ab6d417d0ba6074658 Maybe make this rule 7. That seems a bit more clear than saying \"previously this rule referred to fee rate\"",
      "created_at": "2023-11-20T14:06:13Z",
      "updated_at": "2023-11-20T14:06:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399253500",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399253500"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399257380",
      "pull_request_review_id": 1739906712,
      "id": 1399257380,
      "node_id": "PRRC_kwDOABII585TZvkk",
      "diff_hunk": "@@ -18,14 +18,7 @@ other consensus and policy rules, each of the following conditions are met:\n    Use the (`-mempoolfullrbf`) configuration option to allow transaction replacement without enforcement of the\n    opt-in signaling rule.\n \n-2. The replacement transaction only include an unconfirmed input if that input was included in\n-   one of the directly conflicting transactions. An unconfirmed input spends an output from a\n-   currently-unconfirmed transaction.\n-\n-   *Rationale*: When RBF was originally implemented, the mempool did not keep track of\n-   ancestor feerates yet. This rule was suggested as a temporary restriction.\n-\n-3. The replacement transaction pays an absolute fee of at least the sum paid by the original\n+2. The replacement transaction pays an absolute fee of at least the sum paid by the original\n    transactions.\n \n    *Rationale*: Only requiring the replacement transaction to have a higher feerate could allow an",
      "path": "doc/policy/mempool-replacements.md",
      "position": null,
      "original_position": 15,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "bf467f8286425b692a1736ab6d417d0ba6074658: \"a higher feerate or (using clusters) mining score\"\r\n\r\nIs the \"Additionally\" reasoning still valid?",
      "created_at": "2023-11-20T14:09:35Z",
      "updated_at": "2023-11-20T14:10:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399257380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399257380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399277318",
      "pull_request_review_id": 1739940128,
      "id": 1399277318,
      "node_id": "PRRC_kwDOABII585TZ0cG",
      "diff_hunk": "@@ -53,12 +46,10 @@ other consensus and policy rules, each of the following conditions are met:\n    significant portions of the node's mempool using replacements with multiple directly conflicting\n    transactions, each with large descendant sets.\n \n-6. The replacement transaction's feerate is greater than the feerates of all directly conflicting\n+5. The replacement transaction's mining score is greater than the mining score of all directly conflicting\n    transactions.\n \n-   *Rationale*: This rule was originally intended to ensure that the replacement transaction is\n-   preferable for block-inclusion, compared to what would be removed from the mempool. This rule\n-   predates ancestor feerate-based transaction selection.\n+   *Rationale*: Ensure that the new transaction is more appealing to mine than those being evicted.\n \n This set of rules is similar but distinct from BIP125.\n ",
      "path": "doc/policy/mempool-replacements.md",
      "position": 41,
      "original_position": 48,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "bf467f8286425b692a1736ab6d417d0ba6074658: history can be expanded:\r\n\r\n```md\r\n  * Cluster mempool introduced, dropping rule 2 and introducing rule 7.\r\n    As of **v27.0** ([PR 28676](https://github.com/bitcoin/bitcoin/pull/28676)).\r\n```",
      "created_at": "2023-11-20T14:24:01Z",
      "updated_at": "2023-11-20T14:24:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399277318",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399277318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 46,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399281690",
      "pull_request_review_id": 1739947219,
      "id": 1399281690,
      "node_id": "PRRC_kwDOABII585TZ1ga",
      "diff_hunk": "@@ -139,11 +107,11 @@ std::optional<std::string> PaysMoreThanConflicts(const CTxMemPool::setEntries& i\n         // as that would lower the feerate of the next block. Requiring that the feerate always be\n         // increased is also an easy-to-reason about way to prevent DoS attacks via replacements.\n         //\n-        // We only consider the feerates of transactions being directly replaced, not their indirect\n-        // descendants. While that does mean high feerate children are ignored when deciding whether\n-        // or not to replace, we do require the replacement to pay more overall fees too, mitigating\n-        // most cases.\n-        CFeeRate original_feerate(mi->GetModifiedFee(), mi->GetTxSize());\n+        // We only need to consider the chunk feerates of transactions being\n+        // directly replaced, because descendant transactions which pay for the\n+        // parent will be reflected in the parent's chunk feerate.\n+        Cluster::Chunk &chunk = mi->m_cluster->m_chunks[mi->m_loc.first];\n+        CFeeRate original_feerate(chunk.fee, chunk.size);\n         if (replacement_feerate <= original_feerate) {\n             return strprintf(\"rejecting replacement %s; new feerate %s <= old feerate %s\",",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "bf467f8286425b692a1736ab6d417d0ba6074658: `; new chunk feerate %s <= old chunk feerate`",
      "created_at": "2023-11-20T14:27:08Z",
      "updated_at": "2023-11-20T14:27:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399281690",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399281690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399422341",
      "pull_request_review_id": 1740177374,
      "id": 1399422341,
      "node_id": "PRRC_kwDOABII585TaX2F",
      "diff_hunk": "@@ -1245,3 +1648,251 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+CTxMemPoolEntry::CTxMemPoolEntryRef Cluster::GetLastTransaction()\n+{\n+    assert(m_tx_count > 0);\n+    for (auto chunkit = m_chunks.rbegin(); chunkit != m_chunks.rend(); ++chunkit) {\n+        if (!chunkit->txs.empty()) return chunkit->txs.back();\n+    }\n+    // Unreachable\n+    assert(false);\n+}\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    m_tx_size += entry.GetTxSize();\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    m_tx_size -= entry.GetTxSize();\n+    return;\n+}\n+\n+void Cluster::RechunkFromLinearization(std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+    m_tx_size = 0;\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            double feerate_prev = prev_iter->fee*cur_iter->size;\n+            double feerate_cur = cur_iter->fee*prev_iter->size;\n+            // We only combine chunks if the feerate would go up; if two\n+            // chunks have equal feerate, we prefer to keep the smaller\n+            // chunksize (which is generally better for both mining and\n+            // eviction).\n+            if (feerate_cur > feerate_prev) {\n+                prev_iter->fee += cur_iter->fee;\n+                prev_iter->size += cur_iter->size;\n+                prev_iter->txs.splice(prev_iter->txs.end(), cur_iter->txs, cur_iter->txs.begin(), cur_iter->txs.end());\n+                m_chunks.erase(cur_iter);\n+            } else {\n+                break;\n+            }\n+        }\n+        m_tx_size += txentry.get().GetTxSize();\n+    }\n+\n+    if (reassign_locations) {\n+        // Update locations of all transactions\n+        for (size_t i=0; i<m_chunks.size(); ++i) {\n+            for (auto it = m_chunks[i].txs.begin(); it != m_chunks[i].txs.end(); ++it) {\n+                it->get().m_loc = {i, it};\n+            }\n+        }\n+    }\n+}\n+\n+namespace {\n+\n+template <typename SetType>\n+std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef> InvokeSort(size_t tx_count, const std::vector<Cluster::Chunk>& chunks)\n+{\n+    std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef> txs;",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 1667,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can you clarify what `txs`, `orig_txs` and `cluster` are for, and what the general strategy is here?",
      "created_at": "2023-11-20T16:04:07Z",
      "updated_at": "2023-11-20T16:04:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399422341",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399422341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1910,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399521672",
      "pull_request_review_id": 1740335905,
      "id": 1399521672,
      "node_id": "PRRC_kwDOABII585TawGI",
      "diff_hunk": "@@ -1245,3 +1536,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    return;\n+}\n+\n+void Cluster::RechunkFromLinearization(std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            double feerate_prev = prev_iter->fee*cur_iter->size;",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 427,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "54f39ca8f101483f5f82707689ca49431d4091e5",
      "in_reply_to_id": 1392646700,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The math school memories are coming back :-)",
      "created_at": "2023-11-20T17:22:14Z",
      "updated_at": "2023-11-20T17:22:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399521672",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399521672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1877,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419287189",
      "pull_request_review_id": 1770623709,
      "id": 1419287189,
      "node_id": "PRRC_kwDOABII585UmJqV",
      "diff_hunk": "@@ -18,14 +18,7 @@ other consensus and policy rules, each of the following conditions are met:\n    Use the (`-mempoolfullrbf`) configuration option to allow transaction replacement without enforcement of the\n    opt-in signaling rule.\n \n-2. The replacement transaction only include an unconfirmed input if that input was included in\n-   one of the directly conflicting transactions. An unconfirmed input spends an output from a\n-   currently-unconfirmed transaction.\n-\n-   *Rationale*: When RBF was originally implemented, the mempool did not keep track of\n-   ancestor feerates yet. This rule was suggested as a temporary restriction.\n-\n-3. The replacement transaction pays an absolute fee of at least the sum paid by the original",
      "path": "doc/policy/mempool-replacements.md",
      "position": 12,
      "original_position": 11,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "b0f771bb559f38ea16a8f4d13110e2247ac080b9",
      "in_reply_to_id": 1364398135,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not sure the best way to document things, but I added a to-do item to the OP so that we don't lose track of figuring out how we want the docs to look. (Will have to conform all the code comments as well.) ",
      "created_at": "2023-12-07T16:52:48Z",
      "updated_at": "2023-12-07T16:52:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1419287189",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419287189"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419291403",
      "pull_request_review_id": 1770628066,
      "id": 1419291403,
      "node_id": "PRRC_kwDOABII585UmKsL",
      "diff_hunk": "@@ -249,34 +249,81 @@ static RPCHelpMan testmempoolaccept()\n     };\n }\n \n+static std::vector<RPCResult> ClusterDescription()\n+{\n+    return {\n+        RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\"},\n+        RPCResult{RPCResult::Type::NUM, \"txcount\", \"number of transactions (including this one)\"},\n+        RPCResult{RPCResult::Type::NUM, \"clusterid\", \"id of the cluster containing this tx\"},\n+        RPCResult{RPCResult::Type::ARR, \"chunks\", \"the cluster's chunks\",\n+            {RPCResult{RPCResult::Type::OBJ, \"chunkentry\", \"\",\n+                {\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"fee\", \"fee of this chunk\"},\n+                    RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual size of this chunk\"},\n+                    RPCResult{RPCResult::Type::NUM, \"feerate\", \"fee rate in \" + CURRENCY_UNIT + \"/kvB\"},\n+                    RPCResult{RPCResult::Type::ARR, \"txids\", \"txids in this chunk in sorted order\",\n+                        {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"the transaction id\"}}}\n+                }}\n+            }\n+        }\n+    };\n+}\n+\n static std::vector<RPCResult> MempoolEntryDescription()\n {\n     return {\n         RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\"},\n-        RPCResult{RPCResult::Type::NUM, \"weight\", \"transaction weight as defined in BIP 141.\"},\n-        RPCResult{RPCResult::Type::NUM_TIME, \"time\", \"local time transaction entered pool in seconds since 1 Jan 1970 GMT\"},\n-        RPCResult{RPCResult::Type::NUM, \"height\", \"block height when transaction entered pool\"},\n-        RPCResult{RPCResult::Type::NUM, \"descendantcount\", \"number of in-mempool descendant transactions (including this one)\"},\n-        RPCResult{RPCResult::Type::NUM, \"descendantsize\", \"virtual transaction size of in-mempool descendants (including this one)\"},\n-        RPCResult{RPCResult::Type::NUM, \"ancestorcount\", \"number of in-mempool ancestor transactions (including this one)\"},\n-        RPCResult{RPCResult::Type::NUM, \"ancestorsize\", \"virtual transaction size of in-mempool ancestors (including this one)\"},\n-        RPCResult{RPCResult::Type::STR_HEX, \"wtxid\", \"hash of serialized transaction, including witness data\"},\n-        RPCResult{RPCResult::Type::OBJ, \"fees\", \"\",\n-            {\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee, denominated in \" + CURRENCY_UNIT},\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"modified\", \"transaction fee with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"ancestor\", \"transaction fees of in-mempool ancestors (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"descendant\", \"transaction fees of in-mempool descendants (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n-            }},\n-        RPCResult{RPCResult::Type::ARR, \"depends\", \"unconfirmed transactions used as inputs for this transaction\",\n-            {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"parent transaction id\"}}},\n-        RPCResult{RPCResult::Type::ARR, \"spentby\", \"unconfirmed transactions spending outputs from this transaction\",\n-            {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"child transaction id\"}}},\n-        RPCResult{RPCResult::Type::BOOL, \"bip125-replaceable\", \"Whether this transaction signals BIP125 replaceability or has an unconfirmed ancestor signaling BIP125 replaceability.\\n\"},\n-        RPCResult{RPCResult::Type::BOOL, \"unbroadcast\", \"Whether this transaction is currently unbroadcast (initial broadcast not yet acknowledged by any peers)\"},\n+            RPCResult{RPCResult::Type::NUM, \"weight\", \"transaction weight as defined in BIP 141.\"},\n+            RPCResult{RPCResult::Type::NUM_TIME, \"time\", \"local time transaction entered pool in seconds since 1 Jan 1970 GMT\"},\n+            RPCResult{RPCResult::Type::NUM, \"height\", \"block height when transaction entered pool\"},\n+            RPCResult{RPCResult::Type::NUM, \"descendantcount\", \"number of in-mempool descendant transactions (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"descendantsize\", \"virtual transaction size of in-mempool descendants (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"ancestorcount\", \"number of in-mempool ancestor transactions (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"ancestorsize\", \"virtual transaction size of in-mempool ancestors (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"chunksize\", \"virtual transaction size of this transaction's chunk\"},\n+            RPCResult{RPCResult::Type::NUM, \"clusterid\", \"id of the cluster containing this tx\"},\n+            RPCResult{RPCResult::Type::STR_HEX, \"wtxid\", \"hash of serialized transaction, including witness data\"},\n+            RPCResult{RPCResult::Type::OBJ, \"fees\", \"\",\n+                {\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"modified\", \"transaction fee with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"ancestor\", \"transaction fees of in-mempool ancestors (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"descendant\", \"transaction fees of in-mempool descendants (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"chunk\", \"transaction fees of chunk, denominated in \" + CURRENCY_UNIT},\n+                }},\n+            RPCResult{RPCResult::Type::ARR, \"depends\", \"unconfirmed transactions used as inputs for this transaction\",\n+                {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"parent transaction id\"}}},\n+            RPCResult{RPCResult::Type::ARR, \"spentby\", \"unconfirmed transactions spending outputs from this transaction\",\n+                {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"child transaction id\"}}},\n+            RPCResult{RPCResult::Type::BOOL, \"bip125-replaceable\", \"Whether this transaction signals BIP125 replaceability or has an unconfirmed ancestor signaling BIP125 replaceability.\\n\"},\n+            RPCResult{RPCResult::Type::BOOL, \"unbroadcast\", \"Whether this transaction is currently unbroadcast (initial broadcast not yet acknowledged by any peers)\"},\n     };\n }\n \n+static void clusterToJSON(const CTxMemPool& pool, UniValue& info, const Cluster& c) EXCLUSIVE_LOCKS_REQUIRED(pool.cs)\n+{\n+    AssertLockHeld(pool.cs);\n+    info.pushKV(\"vsize\", (int)c.m_tx_size);\n+    info.pushKV(\"txcount\", (int)c.m_tx_count);\n+    info.pushKV(\"clusterid\", (int)c.m_id);\n+    UniValue chunks(UniValue::VARR);\n+    for (auto &chunk : c.m_chunks) {",
      "path": "src/rpc/mempool.cpp",
      "position": 55,
      "original_position": 83,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "in_reply_to_id": 1399223399,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Chunks for a given cluster are already sorted in descending feerate (ie mining score) order, is that what you're asking about or is there another issue I'm overlooking?",
      "created_at": "2023-12-07T16:55:18Z",
      "updated_at": "2023-12-07T16:55:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1419291403",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419291403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 315,
      "original_line": 315,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419299493",
      "pull_request_review_id": 1770638034,
      "id": 1419299493,
      "node_id": "PRRC_kwDOABII585UmMql",
      "diff_hunk": "@@ -60,57 +59,26 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n {\n     AssertLockHeld(pool.cs);\n     const uint256 txid = tx.GetHash();\n-    uint64_t nConflictingCount = 0;\n-    for (const auto& mi : iters_conflicting) {\n-        nConflictingCount += mi->GetCountWithDescendants();\n-        // Rule #5: don't consider replacing more than MAX_REPLACEMENT_CANDIDATES\n-        // entries from the mempool. This potentially overestimates the number of actual\n-        // descendants (i.e. if multiple conflicts share a descendant, it will be counted multiple\n-        // times), but we just want to be conservative to avoid doing too much work.\n-        if (nConflictingCount > MAX_REPLACEMENT_CANDIDATES) {\n-            return strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n-                             txid.ToString(),\n-                             nConflictingCount,\n-                             MAX_REPLACEMENT_CANDIDATES);\n-        }\n-    }\n     // Calculate the set of all transactions that would have to be evicted.\n     for (CTxMemPool::txiter it : iters_conflicting) {\n-        pool.CalculateDescendants(it, all_conflicts);\n-    }\n-    return std::nullopt;\n-}\n-\n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n-                                               const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n-{\n-    AssertLockHeld(pool.cs);\n-    std::set<uint256> parents_of_conflicts;\n-    for (const auto& mi : iters_conflicting) {\n-        for (const CTxIn& txin : mi->GetTx().vin) {\n-            parents_of_conflicts.insert(txin.prevout.hash);\n+        // Exit early if we're going to fail (see below)\n+        if (all_conflicts.size() > MAX_REPLACEMENT_CANDIDATES) {",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": 1365753481,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I believe I (finally) actually fixed this behavior to count the number of direct conflicts.  ",
      "created_at": "2023-12-07T17:00:39Z",
      "updated_at": "2023-12-07T17:00:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1419299493",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419299493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419303051",
      "pull_request_review_id": 1770643203,
      "id": 1419303051,
      "node_id": "PRRC_kwDOABII585UmNiL",
      "diff_hunk": "@@ -1135,29 +1457,67 @@ void CTxMemPool::TrimToSize(size_t sizelimit, std::vector<COutPoint>* pvNoSpends\n \n     unsigned nTxnRemoved = 0;\n     CFeeRate maxFeeRateRemoved(0);\n+\n+    // Use a heap to determine which chunks to evict, but only make the heap if\n+    // we're actually above the size limit.\n+    std::vector<Cluster::HeapEntry> heap_chunks;\n+    std::set<Cluster*> clusters_with_evictions;\n     while (!mapTx.empty() && DynamicMemoryUsage() > sizelimit) {\n-        indexed_transaction_set::index<descendant_score>::type::iterator it = mapTx.get<descendant_score>().begin();\n+        if (heap_chunks.empty()) {\n+            for (const auto & [id, cluster] : m_cluster_map) {\n+                if (!cluster->m_chunks.empty()) {\n+                    heap_chunks.emplace_back(cluster->m_chunks.end()-1, cluster.get());\n+                }\n+            }\n+        }\n+\n+        // Define comparison operator on our heap entries (using feerate of chunks).\n+        auto cmp = [](const Cluster::HeapEntry& a, const Cluster::HeapEntry& b) {\n+            // TODO: branch on size of fee to do this as 32-bit calculation\n+            // instead? etc\n+            return a.first->fee*b.first->size > b.first->fee*a.first->size;\n+        };\n+\n+        std::make_heap(heap_chunks.begin(), heap_chunks.end(), cmp);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 1421,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "26e831d5f2c7db15e7a50f910ddf4e1737d226da",
      "in_reply_to_id": 1367425942,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should be fixed now.",
      "created_at": "2023-12-07T17:03:28Z",
      "updated_at": "2023-12-07T17:03:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1419303051",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419303051"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1481,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421668681",
      "pull_request_review_id": 1773954379,
      "id": 1421668681,
      "node_id": "PRRC_kwDOABII585UvPFJ",
      "diff_hunk": "@@ -1245,3 +1536,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 407,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "54f39ca8f101483f5f82707689ca49431d4091e5",
      "in_reply_to_id": 1392567718,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I wouldn't say it's safe to ignore, but the idea is that we often want to be able to batch deletions, and then clean things up in one pass.  So the call sites should all be dealing with this issue and ensuring that we always clean up at some point.\r\n\r\n(This is definitely an area where I expect that we'll be re-engineering all this logic and trying to come up with a better abstraction layer so that this is more robust and easier to think about!)",
      "created_at": "2023-12-10T01:33:24Z",
      "updated_at": "2023-12-10T01:33:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1421668681",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421668681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517064996",
      "pull_request_review_id": 1923884910,
      "id": 1517064996,
      "node_id": "PRRC_kwDOABII585abJMk",
      "diff_hunk": "@@ -764,6 +834,9 @@ class CTxMemPool\n      */\n     void UpdateForDescendants(txiter updateIt, cacheMap& cachedDescendants,\n                               const std::set<uint256>& setExclude, std::set<uint256>& descendants_to_remove) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+    // During reorg we add transactions back to mempool, must reconnect\n+    // clusters with in-mempool descendants.\n+    void UpdateClusterForDescendants(txiter updateIt) EXCLUSIVE_LOCKS_REQUIRED(cs);",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 97,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "96df5acec30995dcbaf800daf1945b9acff6bfb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think the introduction of `Cluster` alters the worst-case computational during re-org, when we reconnect `disconnectpool` to the current mempool. Before the limit we were strictly bounded with `DEFAULT_ANCESTOR_LIMIT` / `DEFAULT_DESCENDANT_LIMIT`. Now we have a `DEFAULT_CLUST_LIMIT`, where the worst-case graph traversal algorithm might have to visit more element than at max 25.",
      "created_at": "2024-03-08T01:47:09Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517064996",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517064996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517074825",
      "pull_request_review_id": 1923884910,
      "id": 1517074825,
      "node_id": "PRRC_kwDOABII585abLmJ",
      "diff_hunk": "@@ -99,6 +99,41 @@ void CTxMemPool::UpdateForDescendants(txiter updateIt, cacheMap& cachedDescendan\n     mapTx.modify(updateIt, [=](CTxMemPoolEntry& e) { e.UpdateDescendantState(modifySize, modifyFee, modifyCount); });\n }\n \n+void CTxMemPool::UpdateClusterForDescendants(txiter updateIt)\n+{\n+    AssertLockHeld(cs);\n+    CTxMemPoolEntry::Children children = updateIt->GetMemPoolChildrenConst();\n+    std::vector<Cluster *> clusters_to_merge{updateIt->m_cluster};\n+    {\n+        WITH_FRESH_EPOCH(m_epoch);\n+        visited(updateIt->m_cluster);\n+        cachedInnerUsage -= updateIt->m_cluster->GetMemoryUsage();\n+        for (auto child : children) {\n+            if (!visited(child.get().m_cluster)) {\n+                clusters_to_merge.push_back(child.get().m_cluster);\n+                cachedInnerUsage -= child.get().m_cluster->GetMemoryUsage();\n+            }\n+        }\n+    }\n+    if (clusters_to_merge.size() > 1) {\n+        // Merge the other clusters into this one, but keep this cluster as\n+        // first so that it's topologically sound.\n+        clusters_to_merge[0]->Merge(clusters_to_merge.begin()+1, clusters_to_merge.end(), true);\n+        // TODO: limit the size of the cluster, in case it got too big.",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "96df5acec30995dcbaf800daf1945b9acff6bfb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this introduces a transaction censorship vector for time-sensitive second-layers. If you can re-org one block and construct a cluster such a a target descendant is not reconnected with other clusters, the non-cluster connected target descendant might have a stale feerate. This descendant could be pinnned in the bottom of the local mempool.",
      "created_at": "2024-03-08T02:05:16Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517074825",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517074825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517078978",
      "pull_request_review_id": 1923884910,
      "id": 1517078978,
      "node_id": "PRRC_kwDOABII585abMnC",
      "diff_hunk": "@@ -474,6 +531,42 @@ void CTxMemPool::addUnchecked(const CTxMemPoolEntry &entry, setEntries &setAnces\n     txns_randomized.emplace_back(newit->GetSharedTx());\n     newit->idx_randomized = txns_randomized.size() - 1;\n \n+    // Figure out which cluster this transaction belongs to.\n+    auto iterset = GetIterSet(setParentTransactions);\n+    std::vector<Cluster*> clusters_to_merge;\n+    {\n+        WITH_FRESH_EPOCH(m_epoch);\n+        for (auto parentit : iterset) {\n+            if (!visited(parentit->m_cluster)) {\n+                clusters_to_merge.push_back(parentit->m_cluster);\n+            }\n+        }\n+    }\n+\n+    // Merge all the clusters together.\n+    if (clusters_to_merge.size() == 0) {\n+        // No parents, make a new cluster.\n+        newit->m_cluster = AssignCluster();\n+        newit->m_cluster->AddTransaction(*newit, true);\n+        cachedInnerUsage += newit->m_cluster->GetMemoryUsage();\n+    } else if (clusters_to_merge.size() == 1) {\n+        cachedInnerUsage -= clusters_to_merge[0]->GetMemoryUsage();\n+        // Only one parent cluster: add to it.\n+        clusters_to_merge[0]->AddTransaction(*newit, true);\n+        cachedInnerUsage += clusters_to_merge[0]->GetMemoryUsage();\n+    } else {\n+        cachedInnerUsage -= clusters_to_merge[0]->GetMemoryUsage();\n+        clusters_to_merge[0]->Merge(clusters_to_merge.begin()+1, clusters_to_merge.end(), false);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "96df5acec30995dcbaf800daf1945b9acff6bfb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This can bind max number of clusts's `Merge()`. `addUnchecked()` internal logic differs on tip commit.",
      "created_at": "2024-03-08T02:13:29Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517078978",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517078978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 559,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517086414",
      "pull_request_review_id": 1923884910,
      "id": 1517086414,
      "node_id": "PRRC_kwDOABII585abObO",
      "diff_hunk": "@@ -586,6 +682,105 @@ void CTxMemPool::removeRecursive(const CTransaction &origTx, MemPoolRemovalReaso\n         RemoveStaged(setAllRemoves, false, reason);\n }\n \n+Cluster* CTxMemPool::AssignCluster()\n+{\n+    auto new_cluster = std::make_unique<Cluster>(m_next_cluster_id++, this);\n+    Cluster* ret = new_cluster.get(); // XXX No one is going to like this.\n+    m_cluster_map[new_cluster->m_id] = std::move(new_cluster);\n+    return ret;\n+}\n+\n+// When transactions are removed from a cluster, the cluster might get split\n+// into smaller clusters.\n+void CTxMemPool::RecalculateClusterAndMaybeSort(Cluster *cluster, bool sort)\n+{\n+    // TODO: if the common case involves no cluster splitting, can we short\n+    // circuit the work here somehow?\n+\n+    // Wipe cluster assignments.\n+    std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef> txs;\n+    for (auto& chunk : cluster->m_chunks) {\n+        for (auto& txentry: chunk.txs) {\n+            txentry.get().m_cluster = nullptr;\n+            txs.push_back(txentry);\n+        }\n+    }\n+    cluster->Clear();\n+\n+    // The first transaction gets to stay in the existing cluster.\n+    bool first = true;\n+    for (auto& txentry : txs) {\n+        if (txentry.get().m_cluster == nullptr) {\n+            if (first) {\n+                txentry.get().m_cluster = cluster;\n+                first = false;\n+            } else {\n+                txentry.get().m_cluster = AssignCluster();\n+            }\n+            txentry.get().m_cluster->AddTransaction(txentry.get(), false);\n+            // We need to label all transactions connected to this one as\n+            // being in the same cluster.\n+            {\n+                WITH_FRESH_EPOCH(m_epoch);\n+                auto children = txentry.get().GetMemPoolChildrenConst();\n+                std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef> work_queue;\n+                for (auto entry : children) {\n+                    work_queue.push_back(entry);\n+                    visited(entry.get());\n+                }\n+\n+                while (!work_queue.empty()) {",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 182,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "96df5acec30995dcbaf800daf1945b9acff6bfb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think here a counter should be introduced to avoid iterating on more than `DEFAULT_CLUSTER_LIMIT` on this `work_queue`. It’s in `RemoveStaged` itself call in `Finalize`, I think you might have temporarily unbounded numbers with conflicting descendants transactions.",
      "created_at": "2024-03-08T02:27:24Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517086414",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517086414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 732,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517091357",
      "pull_request_review_id": 1923884910,
      "id": 1517091357,
      "node_id": "PRRC_kwDOABII585abPod",
      "diff_hunk": "@@ -1235,3 +1526,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 408,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "96df5acec30995dcbaf800daf1945b9acff6bfb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think you will have computational threshold effect with whatever limits you’re picking up for max cluster size and chunk ordering parameters. Namely, what is the minimal chunk modification that can provoke the maximum of re-ordering of all in-cluster chunks.",
      "created_at": "2024-03-08T02:34:53Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517091357",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517091357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1545,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517094848",
      "pull_request_review_id": 1923884910,
      "id": 1517094848,
      "node_id": "PRRC_kwDOABII585abQfA",
      "diff_hunk": "@@ -1235,3 +1526,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    return;\n+}\n+\n+void Cluster::RechunkFromLinearization(std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            double feerate_prev = prev_iter->fee*cur_iter->size;\n+            double feerate_cur = cur_iter->fee*prev_iter->size;\n+            // We only combine chunks if the feerate would go up; if two\n+            // chunks have equal feerate, we prefer to keep the smaller\n+            // chunksize (which is generally better for both mining and\n+            // eviction).",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 432,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "96df5acec30995dcbaf800daf1945b9acff6bfb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this is a broken assumption. You’re using virtual bytes (`GetTxSize()`), however an equivalent feerate cluster can have a smaller total witness unit as such a higher feerate w.r.t consensus rules (`MAX_BLOCK_WEIGHT`) and it should be selected in a mining block template.",
      "created_at": "2024-03-08T02:41:34Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517094848",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517094848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1569,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517104617",
      "pull_request_review_id": 1923884910,
      "id": 1517104617,
      "node_id": "PRRC_kwDOABII585abS3p",
      "diff_hunk": "@@ -1235,3 +1526,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    return;\n+}\n+\n+void Cluster::RechunkFromLinearization(std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            double feerate_prev = prev_iter->fee*cur_iter->size;\n+            double feerate_cur = cur_iter->fee*prev_iter->size;\n+            // We only combine chunks if the feerate would go up; if two\n+            // chunks have equal feerate, we prefer to keep the smaller\n+            // chunksize (which is generally better for both mining and\n+            // eviction).\n+            if (feerate_cur > feerate_prev) {\n+                prev_iter->fee += cur_iter->fee;\n+                prev_iter->size += cur_iter->size;\n+                prev_iter->txs.splice(prev_iter->txs.end(), cur_iter->txs, cur_iter->txs.begin(), cur_iter->txs.end());\n+                m_chunks.erase(cur_iter);\n+            } else {\n+                break;\n+            }\n+        }\n+    }\n+\n+    if (reassign_locations) {\n+        // Update locations of all transactions\n+        for (size_t i=0; i<m_chunks.size(); ++i) {\n+            for (auto it = m_chunks[i].txs.begin(); it != m_chunks[i].txs.end(); ++it) {\n+                it->get().m_loc = {i, it};\n+            }\n+        }\n+    }\n+}\n+\n+// Topologically sort the cluster, and update memory usage.\n+void Cluster::Sort(bool reassign_locations)\n+{\n+    LOCK(m_mempool->cs);\n+    std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef> txs;\n+\n+    // Insert all transactions from the cluster into txs\n+    for (auto &chunk : m_chunks) {\n+        for (auto chunk_tx : chunk.txs) {\n+            txs.push_back(chunk_tx.get());\n+        }\n+    }\n+    // Sorting by ancestor count is equivalent to topological sort.\n+    std::sort(txs.begin(), txs.end(), [](const CTxMemPoolEntry::CTxMemPoolEntryRef& a, const CTxMemPoolEntry::CTxMemPoolEntryRef& b) {\n+        return a.get().GetCountWithAncestors() < b.get().GetCountWithAncestors();",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 468,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "96df5acec30995dcbaf800daf1945b9acff6bfb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Note topological sort is not defined. At the very least you can have `a` and `b` both being the first child of a single ancestor and still being the 2rd and 3rd child of a common ancestor. Strictly inferior here cannot be say to be equivalent.",
      "created_at": "2024-03-08T02:56:23Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517104617",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517104617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1605,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517111975",
      "pull_request_review_id": 1923884910,
      "id": 1517111975,
      "node_id": "PRRC_kwDOABII585abUqn",
      "diff_hunk": "@@ -247,34 +247,81 @@ static RPCHelpMan testmempoolaccept()\n     };\n }\n \n+static std::vector<RPCResult> ClusterDescription()\n+{\n+    return {\n+        RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\"},\n+        RPCResult{RPCResult::Type::NUM, \"txcount\", \"number of transactions (including this one)\"},\n+        RPCResult{RPCResult::Type::NUM, \"clusterid\", \"id of the cluster containing this tx\"},",
      "path": "src/rpc/mempool.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ce414135924f2ab015e785b95114f1f998c45043",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "About the `clusterid` (`m_next_cluster_id`), I don’t think it’s a good idea to use it as a tie-breaker in `CompareMiningScore` as it’s just a monotonic counter, it’s not information perfomative for a mining score. You could use weight at least or reception timestamp e.g oldest the tx-relay reception more well-propagated on the network, already in every miner mempool.",
      "created_at": "2024-03-08T03:11:15Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517111975",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517111975"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 262,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517112700",
      "pull_request_review_id": 1923884910,
      "id": 1517112700,
      "node_id": "PRRC_kwDOABII585abU18",
      "diff_hunk": "@@ -370,6 +420,76 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempoo\n     }\n }\n \n+static RPCHelpMan getmempoolfeesize()\n+{\n+    return RPCHelpMan{\"getmempoolfeesize\",\n+        \"Returns fee/size data for the whole mempool.\",",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 126,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ce414135924f2ab015e785b95114f1f998c45043",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Obviously you can add fee/weight units here. ",
      "created_at": "2024-03-08T03:12:43Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517112700",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517112700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 426,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517121744",
      "pull_request_review_id": 1923884910,
      "id": 1517121744,
      "node_id": "PRRC_kwDOABII585abXDQ",
      "diff_hunk": "@@ -0,0 +1,157 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_FEEFRAC_H\n+#define BITCOIN_UTIL_FEEFRAC_H\n+\n+#include <assert.h>\n+#include <stdint.h>\n+\n+/** Data structure storing a fee and size, ordered by increasing fee/size.\n+ *\n+ * The size of a FeeFrac cannot be zero unless the fee is also zero.\n+ *\n+ * FeeFracs have a total ordering, first by increasing feerate (ratio of fee over size), and then\n+ * by decreasing size. The empty FeeFrac (fee and size both 0) sorts last. So for example, the",
      "path": "src/util/feefrac.h",
      "position": null,
      "original_position": 16,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "bb1bc54a7c980fb220d32e16e9504d53a87dcee8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is not perfect as you could use weight units and even have to consider what is the minimal satisfying witness under given consensus rules for a given transaction, especially if you have multiple candidate for a spend given a `witnessScript`. You have already such types of transaction like second-stage LN transactions (either revocation path or preimage/timeout path).",
      "created_at": "2024-03-08T03:31:50Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517121744",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517121744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517127592",
      "pull_request_review_id": 1923884910,
      "id": 1517127592,
      "node_id": "PRRC_kwDOABII585abYeo",
      "diff_hunk": "@@ -0,0 +1,157 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_FEEFRAC_H\n+#define BITCOIN_UTIL_FEEFRAC_H\n+\n+#include <assert.h>\n+#include <stdint.h>\n+\n+/** Data structure storing a fee and size, ordered by increasing fee/size.\n+ *\n+ * The size of a FeeFrac cannot be zero unless the fee is also zero.\n+ *\n+ * FeeFracs have a total ordering, first by increasing feerate (ratio of fee over size), and then\n+ * by decreasing size. The empty FeeFrac (fee and size both 0) sorts last. So for example, the\n+ * following FeeFracs are in sorted order:\n+ *\n+ * - fee=0 size=1 (feerate 0)\n+ * - fee=1 size=2 (feerate 0.5)\n+ * - fee=2 size=3 (feerate 0.667...)\n+ * - fee=2 size=2 (feerate 1)\n+ * - fee=1 size=1 (feerate 1)\n+ * - fee=3 size=2 (feerate 1.5)\n+ * - fee=2 size=1 (feerate 2)\n+ * - fee=0 size=0 (undefined feerate)\n+ *\n+ * A FeeFrac is considered \"better\" if it sorts after another, by this ordering. All standard\n+ * comparison operators (==, !=, >, <, >=, <=) respect this ordering.\n+ *\n+ * The >> and << operators only compare feerate and treat equal feerate but different size as\n+ * equivalent. The empty FeeFrac is neither lower or higher in feerate than any other.\n+ *\n+ * These comparisons are only guaranteed to be correct when the product of the highest fee and\n+ * highest size does not exceed 2^64-1. If the fee is a number in sats, and size in bytes, then\n+ * this allows up to 46116.86 BTC at size 4M, and 1844674.4 BTC at size 100k).",
      "path": "src/util/feefrac.h",
      "position": null,
      "original_position": 36,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "bb1bc54a7c980fb220d32e16e9504d53a87dcee8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this should be `MAX_MONEY` as `ReplacementChecks()` in `PreChecks()` are done before `PolicyScriptChecks()` and `ConsensusScriptChecks()` so an adversary does not have to own the solution of the scriptpubkey to fake `46116.86` or `1844674.4` of value in your local mempool, exceeds 2^64-1 and mess up with linearization.",
      "created_at": "2024-03-08T03:44:35Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517127592",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517127592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592480884",
      "pull_request_review_id": 2043188274,
      "id": 1592480884,
      "node_id": "PRRC_kwDOABII585e61R0",
      "diff_hunk": "@@ -0,0 +1,1352 @@\n+#include <kernel/txgraph.h>\n+#include <cluster_linearize.h>\n+#include <util/time.h>\n+#include <logging.h>\n+#include <reverse_iterator.h>\n+#include <util/strencodings.h>\n+\n+void TxGraphCluster::AddTransaction(const TxEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    //entry.m_cluster = this; XXX do we need this? it breaks the rbf logic.\n+    ++m_tx_count;\n+    m_tx_size += entry.GetTxSize();\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void TxGraphCluster::RemoveTransaction(const TxEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    m_tx_size -= entry.m_virtual_size;\n+    return;\n+}\n+\n+void TxGraphCluster::RechunkFromLinearization(std::vector<TxEntry::TxEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+    m_tx_size = 0;\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            // We only combine chunks if the feerate would go up; if two\n+            // chunks have equal feerate, we prefer to keep the smaller\n+            // chunksize (which is generally better for both mining and\n+            // eviction).\n+            if (prev_iter->feerate < cur_iter->feerate) {\n+                prev_iter->feerate += cur_iter->feerate;\n+                prev_iter->txs.splice(prev_iter->txs.end(), cur_iter->txs, cur_iter->txs.begin(), cur_iter->txs.end());\n+                m_chunks.erase(cur_iter);\n+            } else {\n+                break;\n+            }\n+        }\n+        m_tx_size += txentry.get().GetTxSize();\n+    }\n+\n+    if (reassign_locations) {\n+        AssignTransactions();\n+    }\n+}\n+\n+void TxGraphCluster::AssignTransactions()\n+{\n+    // Update locations of all transactions\n+    for (size_t i=0; i<m_chunks.size(); ++i) {\n+        for (auto it = m_chunks[i].txs.begin(); it != m_chunks[i].txs.end(); ++it) {\n+            it->get().m_cluster = this;\n+            it->get().m_loc = {i, it};\n+        }\n+    }\n+}\n+\n+TxEntry::TxEntryRef TxGraphCluster::GetLastTransaction()\n+{\n+    assert(m_tx_count > 0);\n+    for (auto chunkit = m_chunks.rbegin(); chunkit != m_chunks.rend(); ++chunkit) {\n+        if (!chunkit->txs.empty()) return chunkit->txs.back();\n+    }\n+    // Unreachable\n+    assert(false);\n+}\n+\n+bool TxGraphCluster::Check() const\n+{\n+    // First check that the metadata is correct.\n+    int64_t tx_count = 0;\n+    int64_t tx_size = 0;\n+    for (auto &chunk : m_chunks) {\n+        for (auto &tx : chunk.txs) {\n+            ++tx_count;\n+            tx_size += tx.get().GetTxSize();\n+        }\n+    }\n+    if (tx_count != m_tx_count) return false;\n+    if (tx_size != m_tx_size) return false;\n+\n+    // Check topology.\n+    std::set<TxEntry::TxEntryRef, TxEntry::CompareById> seen_elements;\n+    for (auto &chunk : m_chunks) {\n+        for (auto tx : chunk.txs) {\n+            for (auto parent : tx.get().GetTxEntryParents()) {\n+                if (seen_elements.count(parent) == 0) return false;\n+            }\n+            seen_elements.insert(tx);\n+            if (tx.get().m_cluster != this) return false;\n+            if (&m_chunks[tx.get().m_loc.first] != &chunk) return false;\n+            if (tx.get().m_loc.second->get().unique_id != tx.get().unique_id) return false;\n+        }\n+    }\n+    return true;\n+}\n+\n+bool TxGraphCluster::CheckTopo() const\n+{\n+    // Check topology.\n+    std::set<TxEntry::TxEntryRef, TxEntry::CompareById> seen_elements;\n+    for (auto &chunk : m_chunks) {\n+        for (auto tx : chunk.txs) {\n+            for (auto parent : tx.get().GetTxEntryParents()) {\n+                if (seen_elements.count(parent) == 0) return false;\n+            }\n+            seen_elements.insert(tx);\n+        }\n+    }\n+    return true;\n+}\n+\n+namespace {\n+\n+template <typename SetType>\n+std::vector<TxEntry::TxEntryRef> InvokeSort(size_t tx_count, const std::vector<TxGraphCluster::Chunk>& chunks)\n+{\n+    std::vector<TxEntry::TxEntryRef> txs;\n+    cluster_linearize::Cluster<SetType> cluster;\n+    const auto time_1{SteadyClock::now()};\n+\n+    std::vector<TxEntry::TxEntryRef> orig_txs;\n+    std::vector<std::pair<const TxEntry*, unsigned>> entry_to_index;\n+    cluster_linearize::LinearizationResult result;\n+\n+    cluster.reserve(tx_count);\n+    entry_to_index.reserve(tx_count);\n+    cluster.clear();\n+    for (auto &chunk : chunks) {\n+        for (auto tx : chunk.txs) {\n+            orig_txs.emplace_back(tx);\n+            cluster.emplace_back(FeeFrac(tx.get().GetModifiedFee(), tx.get().GetTxSize()), SetType{});\n+            entry_to_index.emplace_back(&(tx.get()), cluster.size() - 1);\n+        }\n+    }\n+    std::sort(entry_to_index.begin(), entry_to_index.end());\n+    for (size_t i=0; i<orig_txs.size(); ++i) {\n+        for (auto& parent : orig_txs[i].get().GetTxEntryParents()) {\n+            auto it = std::lower_bound(entry_to_index.begin(), entry_to_index.end(), &(parent.get()),\n+                    [&](const auto& a, const auto& b) { return std::less<const TxEntry*>()(a.first, b); });\n+            assert(it != entry_to_index.end());\n+            assert(it->first == &(parent.get()));\n+            cluster[i].second.Set(it->second);\n+        }\n+    }\n+    result = cluster_linearize::LinearizeCluster(cluster, 10, 0);\n+    if (tx_count > 10) {\n+        std::vector<unsigned int> orig_linearization;\n+        orig_linearization.reserve(tx_count);\n+        for (unsigned int i=0; i<cluster.size(); ++i) {\n+            orig_linearization.push_back(i);\n+        }\n+        result.linearization = cluster_linearize::MergeLinearizations(cluster, result.linearization, orig_linearization);\n+        cluster_linearize::PostLinearization(cluster, result.linearization);\n+        cluster_linearize::PostLinearization<SetType, true>(cluster, result.linearization);\n+    }\n+    txs.clear();\n+    for (auto index : result.linearization) {\n+        txs.push_back(orig_txs[index]);\n+    }\n+\n+    const auto time_2{SteadyClock::now()};\n+    if (tx_count >= 10) {\n+        double time_millis = Ticks<MillisecondsDouble>(time_2-time_1);\n+\n+        LogPrint(BCLog::BENCH, \"InvokeSort linearize cluster: %zu txs, %.4fms, %u iter, %.1fns/iter, %u comps, %.1fns/comp, encoding: %s\\n\",\n+                tx_count,\n+                time_millis,\n+                result.iterations,\n+                time_millis * 1000000.0 / (result.iterations > 0 ? result.iterations : result.iterations+1),\n+                result.comparisons,\n+                time_millis * 1000000.0 / (result.comparisons > 0 ? result.comparisons : result.comparisons+1),\n+                HexStr(cluster_linearize::DumpCluster(cluster)));\n+    }\n+    return txs;\n+}\n+\n+} // namespace\n+\n+void TxGraphCluster::Sort(bool reassign_locations)\n+{\n+    std::vector<TxEntry::TxEntryRef> txs;\n+    if (m_tx_count <= 32) {\n+        txs = InvokeSort<BitSet<32>>(m_tx_count, m_chunks);\n+    } else if (m_tx_count <= 64) {\n+        txs = InvokeSort<BitSet<64>>(m_tx_count, m_chunks);\n+    } else if (m_tx_count <= 128) {\n+        txs = InvokeSort<BitSet<128>>(m_tx_count, m_chunks);\n+    } else if (m_tx_count <= 192) {\n+        txs = InvokeSort<BitSet<192>>(m_tx_count, m_chunks);\n+    } else if (m_tx_count <= 256) {\n+        txs = InvokeSort<BitSet<256>>(m_tx_count, m_chunks);\n+    } else if (m_tx_count <= 320) {\n+        txs = InvokeSort<BitSet<320>>(m_tx_count, m_chunks);\n+    } else if (m_tx_count <= 384) {\n+        txs = InvokeSort<BitSet<384>>(m_tx_count, m_chunks);\n+    } else if (m_tx_count <= 1280) {\n+        txs = InvokeSort<BitSet<1280>>(m_tx_count, m_chunks);\n+    } else {\n+        // Only do the topological sort for big clusters\n+        for (auto &chunk : m_chunks) {\n+            for (auto chunk_tx : chunk.txs) {\n+                txs.emplace_back(chunk_tx.get());\n+            }\n+        }\n+        m_tx_graph->TopoSort(txs);\n+    }\n+    RechunkFromLinearization(txs, reassign_locations);\n+}\n+\n+void TxGraphCluster::Rechunk()\n+{\n+    std::vector<TxEntry::TxEntryRef> txs;\n+\n+    // Insert all transactions from the cluster into txs\n+    for (auto &chunk : m_chunks) {\n+        for (auto chunk_tx : chunk.txs) {\n+            txs.push_back(chunk_tx);\n+        }\n+    }\n+\n+    RechunkFromLinearization(txs, true);\n+}\n+\n+void TxGraphCluster::MergeCopy(std::vector<TxGraphCluster*>::const_iterator first, std::vector<TxGraphCluster*>::const_iterator last)\n+{\n+    if (first == last) return;\n+\n+    for (auto it=first; it != last; ++it) {\n+        for (auto &chunk : (*it)->m_chunks) {\n+            for (auto &tx: chunk.txs) {\n+                AddTransaction(tx, false);\n+            }\n+        }\n+    }\n+}\n+\n+// Merge the clusters from [first, last) into this cluster.\n+void TxGraphCluster::Merge(std::vector<TxGraphCluster*>::iterator first, std::vector<TxGraphCluster*>::iterator last, bool this_cluster_first)\n+{\n+    // Check to see if we have anything to do.\n+    if (first == last) return;\n+\n+    std::vector<Chunk> new_chunks;\n+    std::vector<TxGraphCluster::HeapEntry> heap_chunks;\n+\n+    int64_t total_txs = m_tx_count;\n+\n+    // Make a heap of all the best chunks.\n+    for (auto it = first; it != last; ++it) {\n+        if ((*it)->m_chunks.size() > 0) {\n+            heap_chunks.emplace_back((*it)->m_chunks.begin(), *it);\n+        }\n+        total_txs += (*it)->m_tx_count;\n+    }\n+\n+    // During a reorg, we want to merge clusters corresponding to descendants\n+    // so that they appear after the cluster with their parent. This allows us\n+    // to trim megaclusters down to our cluster size limit in a way that\n+    // respects topology but still preferences higher feerate chunks over lower\n+    // feerate chunks.\n+    if (this_cluster_first) {\n+        new_chunks = std::move(m_chunks);\n+        m_chunks.clear();\n+    } else if (m_tx_count > 0) {\n+        heap_chunks.emplace_back(m_chunks.begin(), this);\n+    }\n+    // Define comparison operator on our heap entries (using feerate of chunks).\n+    auto cmp = [](const TxGraphCluster::HeapEntry& a, const TxGraphCluster::HeapEntry& b) {\n+        return a.first->feerate < b.first->feerate;\n+    };\n+\n+    std::make_heap(heap_chunks.begin(), heap_chunks.end(), cmp);\n+\n+    while (!heap_chunks.empty()) {\n+        // Take the best chunk from the heap.\n+        auto best_chunk = heap_chunks.front();\n+        new_chunks.emplace_back(std::move(*(best_chunk.first)));\n+        // Remove the best chunk from the heap.\n+        std::pop_heap(heap_chunks.begin(), heap_chunks.end(), cmp);\n+        heap_chunks.pop_back();\n+        // If the cluster has more chunks, add the next best chunk to the heap.\n+        ++best_chunk.first;\n+        if (best_chunk.first != best_chunk.second->m_chunks.end()) {\n+            heap_chunks.emplace_back(best_chunk.first, best_chunk.second);\n+            std::push_heap(heap_chunks.begin(), heap_chunks.end(), cmp);\n+        }\n+    }\n+\n+    // At this point we've merged the clusters into new_chunks.\n+    m_chunks = std::move(new_chunks);\n+\n+    m_tx_count=0;\n+    m_tx_size=0;\n+\n+    for (size_t i=0; i<m_chunks.size(); ++i) {\n+        m_tx_count += m_chunks[i].txs.size();\n+        m_tx_size += m_chunks[i].feerate.size;\n+    }\n+\n+    // Update the cluster and location information for each transaction.\n+    AssignTransactions();\n+\n+    assert(m_tx_count == total_txs);\n+}\n+\n+void TxGraph::UpdateClusterIndex(TxGraphCluster* c)\n+{\n+    auto it = m_cluster_index.get<id>().find(c->m_id);\n+    if (it != m_cluster_index.get<id>().end()) {\n+        m_cluster_index.get<id>().erase(it);\n+    }\n+    m_cluster_index.insert(c);\n+}\n+\n+void TxGraph::EraseCluster(TxGraphCluster* c)\n+{\n+    LOCK(cs);\n+    auto it = m_cluster_index.get<id>().find(c->m_id);\n+    if (it != m_cluster_index.get<id>().end()) {\n+        m_cluster_index.get<id>().erase(it);\n+    }\n+    m_cluster_map.erase(c->m_id);\n+}\n+\n+void TxGraph::AddTx(TxEntry *new_tx, int32_t vsize, CAmount modified_fee, const std::vector<TxEntry::TxEntryRef>& parents)\n+{\n+    LOCK(cs);\n+    new_tx->m_virtual_size = vsize;\n+    new_tx->m_modified_fee = modified_fee;\n+    new_tx->GetTxEntryParents().clear();\n+    // Figure out which cluster this transaction belongs to.\n+    std::vector<TxGraphCluster*> clusters_to_merge;\n+    {\n+        WITH_FRESH_EPOCH(m_epoch);\n+        for (auto p : parents) {\n+            UpdateParent(*new_tx, p, true);\n+            UpdateChild(p, *new_tx, true);\n+            if (!visited(p.get().m_cluster)) {\n+                clusters_to_merge.push_back(p.get().m_cluster);\n+            }\n+        }\n+    }\n+\n+    // Merge all the clusters together.\n+    if (clusters_to_merge.size() == 0) {\n+        // No parents, make a new cluster.\n+        new_tx->m_cluster = AssignTxGraphCluster();\n+        new_tx->m_cluster->AddTransaction(*new_tx, true);\n+        cachedInnerUsage += new_tx->m_cluster->GetMemoryUsage();\n+        UpdateClusterIndex(new_tx->m_cluster);\n+    } else if (clusters_to_merge.size() == 1) {\n+        cachedInnerUsage -= clusters_to_merge[0]->GetMemoryUsage();\n+        // Only one parent cluster: add to it.\n+        new_tx->m_cluster = clusters_to_merge[0];\n+        clusters_to_merge[0]->AddTransaction(*new_tx, true);\n+        cachedInnerUsage += clusters_to_merge[0]->GetMemoryUsage();\n+        UpdateClusterIndex(new_tx->m_cluster);\n+    } else {\n+        cachedInnerUsage -= clusters_to_merge[0]->GetMemoryUsage();\n+        clusters_to_merge[0]->Merge(clusters_to_merge.begin()+1, clusters_to_merge.end(), false);\n+        // Add this transaction to the cluster.\n+        new_tx->m_cluster = clusters_to_merge[0];\n+        clusters_to_merge[0]->AddTransaction(*new_tx, true);\n+        UpdateClusterIndex(new_tx->m_cluster);\n+        // Need to delete the other clusters.\n+        for (auto it=clusters_to_merge.begin()+1; it != clusters_to_merge.end(); ++it) {\n+            cachedInnerUsage -= (*it)->GetMemoryUsage();\n+            EraseCluster(*it);\n+        }\n+        cachedInnerUsage += clusters_to_merge[0]->GetMemoryUsage();\n+    }\n+}\n+\n+void TxGraph::RemoveTx(TxEntry::TxEntryRef remove_tx)\n+{\n+    cachedInnerUsage -= memusage::DynamicUsage(remove_tx.get().GetTxEntryParents()) + memusage::DynamicUsage(remove_tx.get().GetTxEntryChildren());\n+    // Update the parent/child state\n+    for (const TxEntry::TxEntryRef& parent: remove_tx.get().GetTxEntryParents()) {\n+        parent.get().GetTxEntryChildren().erase(remove_tx);\n+        cachedInnerUsage -= memusage::IncrementalDynamicUsage(parent.get().GetTxEntryChildren());\n+    }\n+    for (const TxEntry::TxEntryRef& child: remove_tx.get().GetTxEntryChildren()) {\n+        child.get().GetTxEntryParents().erase(remove_tx);\n+        cachedInnerUsage -= memusage::IncrementalDynamicUsage(child.get().GetTxEntryParents());\n+    }\n+    // Update the cluster\n+    remove_tx.get().m_cluster->RemoveTransaction(remove_tx.get());\n+}\n+\n+\n+std::vector<TxEntry::TxEntryRef> TxGraph::GetDescendants(const std::vector<TxEntry::TxEntryRef>& txs) const\n+{\n+    std::vector<TxEntry::TxEntryRef> result{}, work_queue{};\n+\n+    LOCK(cs);\n+\n+    WITH_FRESH_EPOCH(m_epoch);\n+    for (auto tx : txs) {\n+        if (!visited(tx)) {\n+            work_queue.push_back(tx);\n+        }\n+    }\n+\n+    while (!work_queue.empty()) {\n+        auto it = work_queue.back();\n+        work_queue.pop_back();\n+        result.push_back(it);\n+        for (auto& child: it.get().GetTxEntryChildren()) {\n+            if (!visited(child.get())) {\n+                work_queue.push_back(child);\n+            }\n+        }\n+    }\n+    return result;\n+}\n+\n+std::vector<TxEntry::TxEntryRef> TxGraph::GetAncestors(const std::vector<TxEntry::TxEntryRef>& parents) const\n+{\n+    std::vector<TxEntry::TxEntryRef> result{}, work_queue{};\n+\n+    LOCK(cs);\n+\n+    WITH_FRESH_EPOCH(m_epoch);\n+    for (auto p : parents) {\n+        visited(p);\n+        work_queue.push_back(p);\n+    }\n+\n+    while (!work_queue.empty()) {\n+        auto it = work_queue.back();\n+        work_queue.pop_back();\n+        result.push_back(it);\n+        for (auto& parent: it.get().parents) {\n+            if (!visited(parent.get())) {\n+                work_queue.push_back(parent);\n+            }\n+        }\n+    }\n+    return result;\n+}\n+\n+std::vector<TxEntry::TxEntryRef> TxGraph::GatherAllClusterTransactions(const std::vector<TxEntry::TxEntryRef> &txs) const\n+{\n+    LOCK(cs);\n+\n+    WITH_FRESH_EPOCH(m_epoch);\n+    std::vector<TxEntry::TxEntryRef> result;\n+    for (auto tx : txs) {\n+        if (!visited(tx.get().m_cluster)) {\n+            for (auto &chunk : tx.get().m_cluster->m_chunks) {\n+                for (auto &txentry : chunk.txs) {\n+                    result.push_back(txentry);\n+                }\n+            }\n+        }\n+    }\n+    return result;\n+}\n+\n+TxGraphCluster* TxGraph::AssignTxGraphCluster()\n+{\n+    auto new_cluster = std::make_unique<TxGraphCluster>(m_next_cluster_id++, this);\n+    TxGraphCluster* ret = new_cluster.get(); // XXX No one is going to like this.\n+    m_cluster_map[new_cluster->m_id] = std::move(new_cluster);\n+    return ret;\n+}\n+\n+// When transactions are removed from a cluster, the cluster might get split\n+// into smaller clusters.\n+void TxGraph::RecalculateTxGraphClusterAndMaybeSort(TxGraphCluster *cluster, bool sort)\n+{\n+    // TODO: if the common case involves no cluster splitting, can we short\n+    // circuit the work here somehow?\n+\n+    // Wipe cluster assignments.\n+    std::vector<TxEntry::TxEntryRef> txs;\n+    for (auto& chunk : cluster->m_chunks) {\n+        for (auto& txentry: chunk.txs) {\n+            txentry.get().m_cluster = nullptr;\n+            txs.push_back(txentry);\n+        }\n+    }\n+    cluster->Clear();\n+\n+    // The first transaction gets to stay in the existing cluster.\n+    bool first = true;\n+    for (auto& txentry : txs) {\n+        if (txentry.get().m_cluster == nullptr) {",
      "path": "src/kernel/txgraph.cpp",
      "position": 522,
      "original_position": 507,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "c49e0444e5c474d5e1ac0af89e9bc27958f3ed31",
      "in_reply_to_id": null,
      "user": {
        "login": "Christewart",
        "id": 3514957,
        "node_id": "MDQ6VXNlcjM1MTQ5NTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3514957?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Christewart",
        "html_url": "https://github.com/Christewart",
        "followers_url": "https://api.github.com/users/Christewart/followers",
        "following_url": "https://api.github.com/users/Christewart/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Christewart/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Christewart/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Christewart/subscriptions",
        "organizations_url": "https://api.github.com/users/Christewart/orgs",
        "repos_url": "https://api.github.com/users/Christewart/repos",
        "events_url": "https://api.github.com/users/Christewart/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Christewart/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Isn't this trivially true from this? https://github.com/bitcoin/bitcoin/blob/c49e0444e5c474d5e1ac0af89e9bc27958f3ed31/src/kernel/txgraph.cpp#L498",
      "created_at": "2024-05-07T13:25:53Z",
      "updated_at": "2024-05-07T13:27:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1592480884",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592480884"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 522,
      "original_line": 522,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592626258",
      "pull_request_review_id": 2043431230,
      "id": 1592626258,
      "node_id": "PRRC_kwDOABII585e7YxS",
      "diff_hunk": "@@ -547,6 +645,40 @@ static RPCHelpMan getmempooldescendants()\n     };\n }\n \n+static RPCHelpMan getmempoolcluster()\n+{\n+    return RPCHelpMan{\"getmempoolcluster\",\n+        \"\\nReturns mempool data for given cluster\\n\",\n+        {\n+            {\"id\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The cluster id (must be in mempool)\"},",
      "path": "src/rpc/mempool.cpp",
      "position": 233,
      "original_position": 261,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "c49e0444e5c474d5e1ac0af89e9bc27958f3ed31",
      "in_reply_to_id": null,
      "user": {
        "login": "Christewart",
        "id": 3514957,
        "node_id": "MDQ6VXNlcjM1MTQ5NTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3514957?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Christewart",
        "html_url": "https://github.com/Christewart",
        "followers_url": "https://api.github.com/users/Christewart/followers",
        "following_url": "https://api.github.com/users/Christewart/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Christewart/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Christewart/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Christewart/subscriptions",
        "organizations_url": "https://api.github.com/users/Christewart/orgs",
        "repos_url": "https://api.github.com/users/Christewart/repos",
        "events_url": "https://api.github.com/users/Christewart/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Christewart/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "How are users of the RPC expected to obtain the set of `cluster_id`'s? \r\n\r\nIIUC, the way to do this currently is to query \r\n\r\n```\r\n./bin/bitcoin-cli getrawmempool true\r\n```\r\n\r\nand then aggregate the `cluster_id`'s yourself?",
      "created_at": "2024-05-07T14:50:23Z",
      "updated_at": "2024-05-07T15:00:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1592626258",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1592626258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 659,
      "original_line": 659,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594255018",
      "pull_request_review_id": 2046037783,
      "id": 1594255018,
      "node_id": "PRRC_kwDOABII585fBmaq",
      "diff_hunk": "@@ -547,6 +645,40 @@ static RPCHelpMan getmempooldescendants()\n     };\n }\n \n+static RPCHelpMan getmempoolcluster()\n+{\n+    return RPCHelpMan{\"getmempoolcluster\",\n+        \"\\nReturns mempool data for given cluster\\n\",\n+        {\n+            {\"id\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The cluster id (must be in mempool)\"},",
      "path": "src/rpc/mempool.cpp",
      "position": 233,
      "original_position": 261,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "c49e0444e5c474d5e1ac0af89e9bc27958f3ed31",
      "in_reply_to_id": 1592626258,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sjors suggested here https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399137900 that I add a way to do it by transaction hash, which would be easy. Let me know if you have other suggestions...",
      "created_at": "2024-05-08T15:45:24Z",
      "updated_at": "2024-05-08T15:45:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1594255018",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594255018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 659,
      "original_line": 659,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594262607",
      "pull_request_review_id": 2046049861,
      "id": 1594262607,
      "node_id": "PRRC_kwDOABII585fBoRP",
      "diff_hunk": "@@ -0,0 +1,1352 @@\n+#include <kernel/txgraph.h>\n+#include <cluster_linearize.h>\n+#include <util/time.h>\n+#include <logging.h>\n+#include <reverse_iterator.h>\n+#include <util/strencodings.h>\n+\n+void TxGraphCluster::AddTransaction(const TxEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    //entry.m_cluster = this; XXX do we need this? it breaks the rbf logic.\n+    ++m_tx_count;\n+    m_tx_size += entry.GetTxSize();\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void TxGraphCluster::RemoveTransaction(const TxEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    m_tx_size -= entry.m_virtual_size;\n+    return;\n+}\n+\n+void TxGraphCluster::RechunkFromLinearization(std::vector<TxEntry::TxEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+    m_tx_size = 0;\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            // We only combine chunks if the feerate would go up; if two\n+            // chunks have equal feerate, we prefer to keep the smaller\n+            // chunksize (which is generally better for both mining and\n+            // eviction).\n+            if (prev_iter->feerate < cur_iter->feerate) {\n+                prev_iter->feerate += cur_iter->feerate;\n+                prev_iter->txs.splice(prev_iter->txs.end(), cur_iter->txs, cur_iter->txs.begin(), cur_iter->txs.end());\n+                m_chunks.erase(cur_iter);\n+            } else {\n+                break;\n+            }\n+        }\n+        m_tx_size += txentry.get().GetTxSize();\n+    }\n+\n+    if (reassign_locations) {\n+        AssignTransactions();\n+    }\n+}\n+\n+void TxGraphCluster::AssignTransactions()\n+{\n+    // Update locations of all transactions\n+    for (size_t i=0; i<m_chunks.size(); ++i) {\n+        for (auto it = m_chunks[i].txs.begin(); it != m_chunks[i].txs.end(); ++it) {\n+            it->get().m_cluster = this;\n+            it->get().m_loc = {i, it};\n+        }\n+    }\n+}\n+\n+TxEntry::TxEntryRef TxGraphCluster::GetLastTransaction()\n+{\n+    assert(m_tx_count > 0);\n+    for (auto chunkit = m_chunks.rbegin(); chunkit != m_chunks.rend(); ++chunkit) {\n+        if (!chunkit->txs.empty()) return chunkit->txs.back();\n+    }\n+    // Unreachable\n+    assert(false);\n+}\n+\n+bool TxGraphCluster::Check() const\n+{\n+    // First check that the metadata is correct.\n+    int64_t tx_count = 0;\n+    int64_t tx_size = 0;\n+    for (auto &chunk : m_chunks) {\n+        for (auto &tx : chunk.txs) {\n+            ++tx_count;\n+            tx_size += tx.get().GetTxSize();\n+        }\n+    }\n+    if (tx_count != m_tx_count) return false;\n+    if (tx_size != m_tx_size) return false;\n+\n+    // Check topology.\n+    std::set<TxEntry::TxEntryRef, TxEntry::CompareById> seen_elements;\n+    for (auto &chunk : m_chunks) {\n+        for (auto tx : chunk.txs) {\n+            for (auto parent : tx.get().GetTxEntryParents()) {\n+                if (seen_elements.count(parent) == 0) return false;\n+            }\n+            seen_elements.insert(tx);\n+            if (tx.get().m_cluster != this) return false;\n+            if (&m_chunks[tx.get().m_loc.first] != &chunk) return false;\n+            if (tx.get().m_loc.second->get().unique_id != tx.get().unique_id) return false;\n+        }\n+    }\n+    return true;\n+}\n+\n+bool TxGraphCluster::CheckTopo() const\n+{\n+    // Check topology.\n+    std::set<TxEntry::TxEntryRef, TxEntry::CompareById> seen_elements;\n+    for (auto &chunk : m_chunks) {\n+        for (auto tx : chunk.txs) {\n+            for (auto parent : tx.get().GetTxEntryParents()) {\n+                if (seen_elements.count(parent) == 0) return false;\n+            }\n+            seen_elements.insert(tx);\n+        }\n+    }\n+    return true;\n+}\n+\n+namespace {\n+\n+template <typename SetType>\n+std::vector<TxEntry::TxEntryRef> InvokeSort(size_t tx_count, const std::vector<TxGraphCluster::Chunk>& chunks)\n+{\n+    std::vector<TxEntry::TxEntryRef> txs;\n+    cluster_linearize::Cluster<SetType> cluster;\n+    const auto time_1{SteadyClock::now()};\n+\n+    std::vector<TxEntry::TxEntryRef> orig_txs;\n+    std::vector<std::pair<const TxEntry*, unsigned>> entry_to_index;\n+    cluster_linearize::LinearizationResult result;\n+\n+    cluster.reserve(tx_count);\n+    entry_to_index.reserve(tx_count);\n+    cluster.clear();\n+    for (auto &chunk : chunks) {\n+        for (auto tx : chunk.txs) {\n+            orig_txs.emplace_back(tx);\n+            cluster.emplace_back(FeeFrac(tx.get().GetModifiedFee(), tx.get().GetTxSize()), SetType{});\n+            entry_to_index.emplace_back(&(tx.get()), cluster.size() - 1);\n+        }\n+    }\n+    std::sort(entry_to_index.begin(), entry_to_index.end());\n+    for (size_t i=0; i<orig_txs.size(); ++i) {\n+        for (auto& parent : orig_txs[i].get().GetTxEntryParents()) {\n+            auto it = std::lower_bound(entry_to_index.begin(), entry_to_index.end(), &(parent.get()),\n+                    [&](const auto& a, const auto& b) { return std::less<const TxEntry*>()(a.first, b); });\n+            assert(it != entry_to_index.end());\n+            assert(it->first == &(parent.get()));\n+            cluster[i].second.Set(it->second);\n+        }\n+    }\n+    result = cluster_linearize::LinearizeCluster(cluster, 10, 0);\n+    if (tx_count > 10) {\n+        std::vector<unsigned int> orig_linearization;\n+        orig_linearization.reserve(tx_count);\n+        for (unsigned int i=0; i<cluster.size(); ++i) {\n+            orig_linearization.push_back(i);\n+        }\n+        result.linearization = cluster_linearize::MergeLinearizations(cluster, result.linearization, orig_linearization);\n+        cluster_linearize::PostLinearization(cluster, result.linearization);\n+        cluster_linearize::PostLinearization<SetType, true>(cluster, result.linearization);\n+    }\n+    txs.clear();\n+    for (auto index : result.linearization) {\n+        txs.push_back(orig_txs[index]);\n+    }\n+\n+    const auto time_2{SteadyClock::now()};\n+    if (tx_count >= 10) {\n+        double time_millis = Ticks<MillisecondsDouble>(time_2-time_1);\n+\n+        LogPrint(BCLog::BENCH, \"InvokeSort linearize cluster: %zu txs, %.4fms, %u iter, %.1fns/iter, %u comps, %.1fns/comp, encoding: %s\\n\",\n+                tx_count,\n+                time_millis,\n+                result.iterations,\n+                time_millis * 1000000.0 / (result.iterations > 0 ? result.iterations : result.iterations+1),\n+                result.comparisons,\n+                time_millis * 1000000.0 / (result.comparisons > 0 ? result.comparisons : result.comparisons+1),\n+                HexStr(cluster_linearize::DumpCluster(cluster)));\n+    }\n+    return txs;\n+}\n+\n+} // namespace\n+\n+void TxGraphCluster::Sort(bool reassign_locations)\n+{\n+    std::vector<TxEntry::TxEntryRef> txs;\n+    if (m_tx_count <= 32) {\n+        txs = InvokeSort<BitSet<32>>(m_tx_count, m_chunks);\n+    } else if (m_tx_count <= 64) {\n+        txs = InvokeSort<BitSet<64>>(m_tx_count, m_chunks);\n+    } else if (m_tx_count <= 128) {\n+        txs = InvokeSort<BitSet<128>>(m_tx_count, m_chunks);\n+    } else if (m_tx_count <= 192) {\n+        txs = InvokeSort<BitSet<192>>(m_tx_count, m_chunks);\n+    } else if (m_tx_count <= 256) {\n+        txs = InvokeSort<BitSet<256>>(m_tx_count, m_chunks);\n+    } else if (m_tx_count <= 320) {\n+        txs = InvokeSort<BitSet<320>>(m_tx_count, m_chunks);\n+    } else if (m_tx_count <= 384) {\n+        txs = InvokeSort<BitSet<384>>(m_tx_count, m_chunks);\n+    } else if (m_tx_count <= 1280) {\n+        txs = InvokeSort<BitSet<1280>>(m_tx_count, m_chunks);\n+    } else {\n+        // Only do the topological sort for big clusters\n+        for (auto &chunk : m_chunks) {\n+            for (auto chunk_tx : chunk.txs) {\n+                txs.emplace_back(chunk_tx.get());\n+            }\n+        }\n+        m_tx_graph->TopoSort(txs);\n+    }\n+    RechunkFromLinearization(txs, reassign_locations);\n+}\n+\n+void TxGraphCluster::Rechunk()\n+{\n+    std::vector<TxEntry::TxEntryRef> txs;\n+\n+    // Insert all transactions from the cluster into txs\n+    for (auto &chunk : m_chunks) {\n+        for (auto chunk_tx : chunk.txs) {\n+            txs.push_back(chunk_tx);\n+        }\n+    }\n+\n+    RechunkFromLinearization(txs, true);\n+}\n+\n+void TxGraphCluster::MergeCopy(std::vector<TxGraphCluster*>::const_iterator first, std::vector<TxGraphCluster*>::const_iterator last)\n+{\n+    if (first == last) return;\n+\n+    for (auto it=first; it != last; ++it) {\n+        for (auto &chunk : (*it)->m_chunks) {\n+            for (auto &tx: chunk.txs) {\n+                AddTransaction(tx, false);\n+            }\n+        }\n+    }\n+}\n+\n+// Merge the clusters from [first, last) into this cluster.\n+void TxGraphCluster::Merge(std::vector<TxGraphCluster*>::iterator first, std::vector<TxGraphCluster*>::iterator last, bool this_cluster_first)\n+{\n+    // Check to see if we have anything to do.\n+    if (first == last) return;\n+\n+    std::vector<Chunk> new_chunks;\n+    std::vector<TxGraphCluster::HeapEntry> heap_chunks;\n+\n+    int64_t total_txs = m_tx_count;\n+\n+    // Make a heap of all the best chunks.\n+    for (auto it = first; it != last; ++it) {\n+        if ((*it)->m_chunks.size() > 0) {\n+            heap_chunks.emplace_back((*it)->m_chunks.begin(), *it);\n+        }\n+        total_txs += (*it)->m_tx_count;\n+    }\n+\n+    // During a reorg, we want to merge clusters corresponding to descendants\n+    // so that they appear after the cluster with their parent. This allows us\n+    // to trim megaclusters down to our cluster size limit in a way that\n+    // respects topology but still preferences higher feerate chunks over lower\n+    // feerate chunks.\n+    if (this_cluster_first) {\n+        new_chunks = std::move(m_chunks);\n+        m_chunks.clear();\n+    } else if (m_tx_count > 0) {\n+        heap_chunks.emplace_back(m_chunks.begin(), this);\n+    }\n+    // Define comparison operator on our heap entries (using feerate of chunks).\n+    auto cmp = [](const TxGraphCluster::HeapEntry& a, const TxGraphCluster::HeapEntry& b) {\n+        return a.first->feerate < b.first->feerate;\n+    };\n+\n+    std::make_heap(heap_chunks.begin(), heap_chunks.end(), cmp);\n+\n+    while (!heap_chunks.empty()) {\n+        // Take the best chunk from the heap.\n+        auto best_chunk = heap_chunks.front();\n+        new_chunks.emplace_back(std::move(*(best_chunk.first)));\n+        // Remove the best chunk from the heap.\n+        std::pop_heap(heap_chunks.begin(), heap_chunks.end(), cmp);\n+        heap_chunks.pop_back();\n+        // If the cluster has more chunks, add the next best chunk to the heap.\n+        ++best_chunk.first;\n+        if (best_chunk.first != best_chunk.second->m_chunks.end()) {\n+            heap_chunks.emplace_back(best_chunk.first, best_chunk.second);\n+            std::push_heap(heap_chunks.begin(), heap_chunks.end(), cmp);\n+        }\n+    }\n+\n+    // At this point we've merged the clusters into new_chunks.\n+    m_chunks = std::move(new_chunks);\n+\n+    m_tx_count=0;\n+    m_tx_size=0;\n+\n+    for (size_t i=0; i<m_chunks.size(); ++i) {\n+        m_tx_count += m_chunks[i].txs.size();\n+        m_tx_size += m_chunks[i].feerate.size;\n+    }\n+\n+    // Update the cluster and location information for each transaction.\n+    AssignTransactions();\n+\n+    assert(m_tx_count == total_txs);\n+}\n+\n+void TxGraph::UpdateClusterIndex(TxGraphCluster* c)\n+{\n+    auto it = m_cluster_index.get<id>().find(c->m_id);\n+    if (it != m_cluster_index.get<id>().end()) {\n+        m_cluster_index.get<id>().erase(it);\n+    }\n+    m_cluster_index.insert(c);\n+}\n+\n+void TxGraph::EraseCluster(TxGraphCluster* c)\n+{\n+    LOCK(cs);\n+    auto it = m_cluster_index.get<id>().find(c->m_id);\n+    if (it != m_cluster_index.get<id>().end()) {\n+        m_cluster_index.get<id>().erase(it);\n+    }\n+    m_cluster_map.erase(c->m_id);\n+}\n+\n+void TxGraph::AddTx(TxEntry *new_tx, int32_t vsize, CAmount modified_fee, const std::vector<TxEntry::TxEntryRef>& parents)\n+{\n+    LOCK(cs);\n+    new_tx->m_virtual_size = vsize;\n+    new_tx->m_modified_fee = modified_fee;\n+    new_tx->GetTxEntryParents().clear();\n+    // Figure out which cluster this transaction belongs to.\n+    std::vector<TxGraphCluster*> clusters_to_merge;\n+    {\n+        WITH_FRESH_EPOCH(m_epoch);\n+        for (auto p : parents) {\n+            UpdateParent(*new_tx, p, true);\n+            UpdateChild(p, *new_tx, true);\n+            if (!visited(p.get().m_cluster)) {\n+                clusters_to_merge.push_back(p.get().m_cluster);\n+            }\n+        }\n+    }\n+\n+    // Merge all the clusters together.\n+    if (clusters_to_merge.size() == 0) {\n+        // No parents, make a new cluster.\n+        new_tx->m_cluster = AssignTxGraphCluster();\n+        new_tx->m_cluster->AddTransaction(*new_tx, true);\n+        cachedInnerUsage += new_tx->m_cluster->GetMemoryUsage();\n+        UpdateClusterIndex(new_tx->m_cluster);\n+    } else if (clusters_to_merge.size() == 1) {\n+        cachedInnerUsage -= clusters_to_merge[0]->GetMemoryUsage();\n+        // Only one parent cluster: add to it.\n+        new_tx->m_cluster = clusters_to_merge[0];\n+        clusters_to_merge[0]->AddTransaction(*new_tx, true);\n+        cachedInnerUsage += clusters_to_merge[0]->GetMemoryUsage();\n+        UpdateClusterIndex(new_tx->m_cluster);\n+    } else {\n+        cachedInnerUsage -= clusters_to_merge[0]->GetMemoryUsage();\n+        clusters_to_merge[0]->Merge(clusters_to_merge.begin()+1, clusters_to_merge.end(), false);\n+        // Add this transaction to the cluster.\n+        new_tx->m_cluster = clusters_to_merge[0];\n+        clusters_to_merge[0]->AddTransaction(*new_tx, true);\n+        UpdateClusterIndex(new_tx->m_cluster);\n+        // Need to delete the other clusters.\n+        for (auto it=clusters_to_merge.begin()+1; it != clusters_to_merge.end(); ++it) {\n+            cachedInnerUsage -= (*it)->GetMemoryUsage();\n+            EraseCluster(*it);\n+        }\n+        cachedInnerUsage += clusters_to_merge[0]->GetMemoryUsage();\n+    }\n+}\n+\n+void TxGraph::RemoveTx(TxEntry::TxEntryRef remove_tx)\n+{\n+    cachedInnerUsage -= memusage::DynamicUsage(remove_tx.get().GetTxEntryParents()) + memusage::DynamicUsage(remove_tx.get().GetTxEntryChildren());\n+    // Update the parent/child state\n+    for (const TxEntry::TxEntryRef& parent: remove_tx.get().GetTxEntryParents()) {\n+        parent.get().GetTxEntryChildren().erase(remove_tx);\n+        cachedInnerUsage -= memusage::IncrementalDynamicUsage(parent.get().GetTxEntryChildren());\n+    }\n+    for (const TxEntry::TxEntryRef& child: remove_tx.get().GetTxEntryChildren()) {\n+        child.get().GetTxEntryParents().erase(remove_tx);\n+        cachedInnerUsage -= memusage::IncrementalDynamicUsage(child.get().GetTxEntryParents());\n+    }\n+    // Update the cluster\n+    remove_tx.get().m_cluster->RemoveTransaction(remove_tx.get());\n+}\n+\n+\n+std::vector<TxEntry::TxEntryRef> TxGraph::GetDescendants(const std::vector<TxEntry::TxEntryRef>& txs) const\n+{\n+    std::vector<TxEntry::TxEntryRef> result{}, work_queue{};\n+\n+    LOCK(cs);\n+\n+    WITH_FRESH_EPOCH(m_epoch);\n+    for (auto tx : txs) {\n+        if (!visited(tx)) {\n+            work_queue.push_back(tx);\n+        }\n+    }\n+\n+    while (!work_queue.empty()) {\n+        auto it = work_queue.back();\n+        work_queue.pop_back();\n+        result.push_back(it);\n+        for (auto& child: it.get().GetTxEntryChildren()) {\n+            if (!visited(child.get())) {\n+                work_queue.push_back(child);\n+            }\n+        }\n+    }\n+    return result;\n+}\n+\n+std::vector<TxEntry::TxEntryRef> TxGraph::GetAncestors(const std::vector<TxEntry::TxEntryRef>& parents) const\n+{\n+    std::vector<TxEntry::TxEntryRef> result{}, work_queue{};\n+\n+    LOCK(cs);\n+\n+    WITH_FRESH_EPOCH(m_epoch);\n+    for (auto p : parents) {\n+        visited(p);\n+        work_queue.push_back(p);\n+    }\n+\n+    while (!work_queue.empty()) {\n+        auto it = work_queue.back();\n+        work_queue.pop_back();\n+        result.push_back(it);\n+        for (auto& parent: it.get().parents) {\n+            if (!visited(parent.get())) {\n+                work_queue.push_back(parent);\n+            }\n+        }\n+    }\n+    return result;\n+}\n+\n+std::vector<TxEntry::TxEntryRef> TxGraph::GatherAllClusterTransactions(const std::vector<TxEntry::TxEntryRef> &txs) const\n+{\n+    LOCK(cs);\n+\n+    WITH_FRESH_EPOCH(m_epoch);\n+    std::vector<TxEntry::TxEntryRef> result;\n+    for (auto tx : txs) {\n+        if (!visited(tx.get().m_cluster)) {\n+            for (auto &chunk : tx.get().m_cluster->m_chunks) {\n+                for (auto &txentry : chunk.txs) {\n+                    result.push_back(txentry);\n+                }\n+            }\n+        }\n+    }\n+    return result;\n+}\n+\n+TxGraphCluster* TxGraph::AssignTxGraphCluster()\n+{\n+    auto new_cluster = std::make_unique<TxGraphCluster>(m_next_cluster_id++, this);\n+    TxGraphCluster* ret = new_cluster.get(); // XXX No one is going to like this.\n+    m_cluster_map[new_cluster->m_id] = std::move(new_cluster);\n+    return ret;\n+}\n+\n+// When transactions are removed from a cluster, the cluster might get split\n+// into smaller clusters.\n+void TxGraph::RecalculateTxGraphClusterAndMaybeSort(TxGraphCluster *cluster, bool sort)\n+{\n+    // TODO: if the common case involves no cluster splitting, can we short\n+    // circuit the work here somehow?\n+\n+    // Wipe cluster assignments.\n+    std::vector<TxEntry::TxEntryRef> txs;\n+    for (auto& chunk : cluster->m_chunks) {\n+        for (auto& txentry: chunk.txs) {\n+            txentry.get().m_cluster = nullptr;\n+            txs.push_back(txentry);\n+        }\n+    }\n+    cluster->Clear();\n+\n+    // The first transaction gets to stay in the existing cluster.\n+    bool first = true;\n+    for (auto& txentry : txs) {\n+        if (txentry.get().m_cluster == nullptr) {",
      "path": "src/kernel/txgraph.cpp",
      "position": 522,
      "original_position": 507,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "c49e0444e5c474d5e1ac0af89e9bc27958f3ed31",
      "in_reply_to_id": 1592480884,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See line 528 below: https://github.com/bitcoin/bitcoin/blob/c49e0444e5c474d5e1ac0af89e9bc27958f3ed31/src/kernel/txgraph.cpp#L528\r\n\r\nNote also that I expect this implementation of txgraph to be rewritten entirely, so the most relevant thing to review right now relating to this code is the header file, as the interface is the most important part (and the rest of the PR and the mempool code builds on top of that interface).\r\n",
      "created_at": "2024-05-08T15:50:59Z",
      "updated_at": "2024-05-08T15:52:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1594262607",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594262607"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 522,
      "original_line": 522,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687121805",
      "pull_request_review_id": 2192522762,
      "id": 1687121805,
      "node_id": "PRRC_kwDOABII585kj2-N",
      "diff_hunk": "@@ -0,0 +1,1353 @@\n+#include <kernel/txgraph.h>\n+#include <cluster_linearize.h>\n+#include <util/time.h>\n+#include <logging.h>\n+#include <reverse_iterator.h>\n+#include <util/strencodings.h>\n+#include <util/bitset.h>\n+\n+const uint64_t MAX_ITERATIONS = 1000;\n+\n+void TxGraphCluster::AddTransaction(const TxEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    //entry.m_cluster = this; XXX do we need this? it breaks the rbf logic.\n+    ++m_tx_count;\n+    m_tx_size += entry.GetTxSize();\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void TxGraphCluster::RemoveTransaction(const TxEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    m_tx_size -= entry.m_virtual_size;\n+    return;\n+}\n+\n+void TxGraphCluster::RechunkFromLinearization(std::vector<TxEntry::TxEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+    m_tx_size = 0;\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            // We only combine chunks if the feerate would go up; if two\n+            // chunks have equal feerate, we prefer to keep the smaller\n+            // chunksize (which is generally better for both mining and\n+            // eviction).\n+            if (prev_iter->feerate < cur_iter->feerate) {\n+                prev_iter->feerate += cur_iter->feerate;\n+                prev_iter->txs.splice(prev_iter->txs.end(), cur_iter->txs, cur_iter->txs.begin(), cur_iter->txs.end());\n+                m_chunks.erase(cur_iter);\n+            } else {\n+                break;\n+            }\n+        }\n+        m_tx_size += txentry.get().GetTxSize();\n+    }\n+\n+    if (reassign_locations) {\n+        AssignTransactions();\n+    }\n+}\n+\n+void TxGraphCluster::AssignTransactions()\n+{\n+    // Update locations of all transactions\n+    for (size_t i=0; i<m_chunks.size(); ++i) {\n+        for (auto it = m_chunks[i].txs.begin(); it != m_chunks[i].txs.end(); ++it) {\n+            it->get().m_cluster = this;\n+            it->get().m_loc = {i, it};\n+        }\n+    }\n+}\n+\n+TxEntry::TxEntryRef TxGraphCluster::GetLastTransaction()\n+{\n+    assert(m_tx_count > 0);\n+    for (auto chunkit = m_chunks.rbegin(); chunkit != m_chunks.rend(); ++chunkit) {\n+        if (!chunkit->txs.empty()) return chunkit->txs.back();\n+    }\n+    // Unreachable\n+    assert(false);\n+}\n+\n+bool TxGraphCluster::Check() const\n+{\n+    // First check that the metadata is correct.\n+    int64_t tx_count = 0;\n+    int64_t tx_size = 0;\n+    for (auto &chunk : m_chunks) {\n+        for (auto &tx : chunk.txs) {\n+            ++tx_count;\n+            tx_size += tx.get().GetTxSize();\n+        }\n+    }\n+    if (tx_count != m_tx_count) return false;\n+    if (tx_size != m_tx_size) return false;\n+\n+    // Check topology.\n+    std::set<TxEntry::TxEntryRef, TxEntry::CompareById> seen_elements;\n+    for (auto &chunk : m_chunks) {\n+        for (auto tx : chunk.txs) {\n+            for (auto parent : tx.get().GetTxEntryParents()) {\n+                if (seen_elements.count(parent) == 0) return false;\n+            }\n+            seen_elements.insert(tx);\n+            if (tx.get().m_cluster != this) return false;\n+            if (&m_chunks[tx.get().m_loc.first] != &chunk) return false;\n+            if (tx.get().m_loc.second->get().unique_id != tx.get().unique_id) return false;\n+        }\n+    }\n+    return true;\n+}\n+\n+bool TxGraphCluster::CheckTopo() const\n+{\n+    // Check topology.\n+    std::set<TxEntry::TxEntryRef, TxEntry::CompareById> seen_elements;\n+    for (auto &chunk : m_chunks) {\n+        for (auto tx : chunk.txs) {\n+            for (auto parent : tx.get().GetTxEntryParents()) {\n+                if (seen_elements.count(parent) == 0) return false;\n+            }\n+            seen_elements.insert(tx);\n+        }\n+    }\n+    return true;\n+}\n+\n+namespace {\n+\n+template <typename SetType>\n+std::vector<TxEntry::TxEntryRef> InvokeSort(size_t tx_count, const std::vector<TxGraphCluster::Chunk>& chunks)\n+{\n+    std::vector<TxEntry::TxEntryRef> txs;\n+    cluster_linearize::Cluster<SetType> cluster;\n+    const auto time_1{SteadyClock::now()};\n+\n+    std::vector<TxEntry::TxEntryRef> orig_txs;\n+    std::vector<std::pair<const TxEntry*, unsigned>> entry_to_index;\n+\n+    cluster.reserve(tx_count);\n+    entry_to_index.reserve(tx_count);\n+    cluster.clear();\n+    for (auto &chunk : chunks) {\n+        for (auto tx : chunk.txs) {\n+            orig_txs.emplace_back(tx);\n+            cluster.emplace_back(FeeFrac(tx.get().GetModifiedFee(), tx.get().GetTxSize()), SetType{});\n+            entry_to_index.emplace_back(&(tx.get()), cluster.size() - 1);\n+        }\n+    }\n+    std::sort(entry_to_index.begin(), entry_to_index.end());\n+    for (size_t i=0; i<orig_txs.size(); ++i) {\n+        for (auto& parent : orig_txs[i].get().GetTxEntryParents()) {\n+            auto it = std::lower_bound(entry_to_index.begin(), entry_to_index.end(), &(parent.get()),\n+                    [&](const auto& a, const auto& b) { return std::less<const TxEntry*>()(a.first, b); });\n+            assert(it != entry_to_index.end());\n+            assert(it->first == &(parent.get()));\n+            cluster[i].second.Set(it->second);\n+        }\n+    }\n+    uint64_t iterations = MAX_ITERATIONS;\n+\n+    std::vector<unsigned int> orig_linearization;\n+    orig_linearization.reserve(tx_count);\n+    for (unsigned int i=0; i<cluster.size(); ++i) {\n+        orig_linearization.push_back(i);\n+    }\n+    cluster_linearize::DepGraph dep_graph(cluster);\n+    auto result = cluster_linearize::Linearize(dep_graph, iterations, 0, orig_linearization);",
      "path": "src/kernel/txgraph.cpp",
      "position": null,
      "original_position": 174,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "7e97af364e9dbf48b06f49994a2840cc6c87e9a2",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`iterations` is not modified here, so you're just reporting 0 iters used everywhere, and always PostLinearizing\r\n\r\nDo we want to change the `Linearize` signature to report iters left, which can infer optimal or not as well?",
      "created_at": "2024-07-22T20:44:58Z",
      "updated_at": "2024-07-23T15:24:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1687121805",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687121805"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693039465",
      "pull_request_review_id": 2201794771,
      "id": 1693039465,
      "node_id": "PRRC_kwDOABII585k6btp",
      "diff_hunk": "@@ -0,0 +1,1353 @@\n+#include <kernel/txgraph.h>\n+#include <cluster_linearize.h>\n+#include <util/time.h>\n+#include <logging.h>\n+#include <reverse_iterator.h>\n+#include <util/strencodings.h>\n+#include <util/bitset.h>\n+\n+const uint64_t MAX_ITERATIONS = 1000;\n+\n+void TxGraphCluster::AddTransaction(const TxEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    //entry.m_cluster = this; XXX do we need this? it breaks the rbf logic.\n+    ++m_tx_count;\n+    m_tx_size += entry.GetTxSize();\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void TxGraphCluster::RemoveTransaction(const TxEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    m_tx_size -= entry.m_virtual_size;\n+    return;\n+}\n+\n+void TxGraphCluster::RechunkFromLinearization(std::vector<TxEntry::TxEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+    m_tx_size = 0;\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            // We only combine chunks if the feerate would go up; if two\n+            // chunks have equal feerate, we prefer to keep the smaller\n+            // chunksize (which is generally better for both mining and\n+            // eviction).\n+            if (prev_iter->feerate < cur_iter->feerate) {\n+                prev_iter->feerate += cur_iter->feerate;\n+                prev_iter->txs.splice(prev_iter->txs.end(), cur_iter->txs, cur_iter->txs.begin(), cur_iter->txs.end());\n+                m_chunks.erase(cur_iter);\n+            } else {\n+                break;\n+            }\n+        }\n+        m_tx_size += txentry.get().GetTxSize();\n+    }\n+\n+    if (reassign_locations) {\n+        AssignTransactions();\n+    }\n+}\n+\n+void TxGraphCluster::AssignTransactions()\n+{\n+    // Update locations of all transactions\n+    for (size_t i=0; i<m_chunks.size(); ++i) {\n+        for (auto it = m_chunks[i].txs.begin(); it != m_chunks[i].txs.end(); ++it) {\n+            it->get().m_cluster = this;\n+            it->get().m_loc = {i, it};\n+        }\n+    }\n+}\n+\n+TxEntry::TxEntryRef TxGraphCluster::GetLastTransaction()\n+{\n+    assert(m_tx_count > 0);\n+    for (auto chunkit = m_chunks.rbegin(); chunkit != m_chunks.rend(); ++chunkit) {\n+        if (!chunkit->txs.empty()) return chunkit->txs.back();\n+    }\n+    // Unreachable\n+    assert(false);\n+}\n+\n+bool TxGraphCluster::Check() const\n+{\n+    // First check that the metadata is correct.\n+    int64_t tx_count = 0;\n+    int64_t tx_size = 0;\n+    for (auto &chunk : m_chunks) {\n+        for (auto &tx : chunk.txs) {\n+            ++tx_count;\n+            tx_size += tx.get().GetTxSize();\n+        }\n+    }\n+    if (tx_count != m_tx_count) return false;\n+    if (tx_size != m_tx_size) return false;\n+\n+    // Check topology.\n+    std::set<TxEntry::TxEntryRef, TxEntry::CompareById> seen_elements;\n+    for (auto &chunk : m_chunks) {\n+        for (auto tx : chunk.txs) {\n+            for (auto parent : tx.get().GetTxEntryParents()) {\n+                if (seen_elements.count(parent) == 0) return false;\n+            }\n+            seen_elements.insert(tx);\n+            if (tx.get().m_cluster != this) return false;\n+            if (&m_chunks[tx.get().m_loc.first] != &chunk) return false;\n+            if (tx.get().m_loc.second->get().unique_id != tx.get().unique_id) return false;\n+        }\n+    }\n+    return true;\n+}\n+\n+bool TxGraphCluster::CheckTopo() const\n+{\n+    // Check topology.\n+    std::set<TxEntry::TxEntryRef, TxEntry::CompareById> seen_elements;\n+    for (auto &chunk : m_chunks) {\n+        for (auto tx : chunk.txs) {\n+            for (auto parent : tx.get().GetTxEntryParents()) {\n+                if (seen_elements.count(parent) == 0) return false;\n+            }\n+            seen_elements.insert(tx);\n+        }\n+    }\n+    return true;\n+}\n+\n+namespace {\n+\n+template <typename SetType>\n+std::vector<TxEntry::TxEntryRef> InvokeSort(size_t tx_count, const std::vector<TxGraphCluster::Chunk>& chunks)\n+{\n+    std::vector<TxEntry::TxEntryRef> txs;\n+    cluster_linearize::Cluster<SetType> cluster;\n+    const auto time_1{SteadyClock::now()};\n+\n+    std::vector<TxEntry::TxEntryRef> orig_txs;\n+    std::vector<std::pair<const TxEntry*, unsigned>> entry_to_index;\n+\n+    cluster.reserve(tx_count);\n+    entry_to_index.reserve(tx_count);\n+    cluster.clear();\n+    for (auto &chunk : chunks) {\n+        for (auto tx : chunk.txs) {\n+            orig_txs.emplace_back(tx);\n+            cluster.emplace_back(FeeFrac(tx.get().GetModifiedFee(), tx.get().GetTxSize()), SetType{});\n+            entry_to_index.emplace_back(&(tx.get()), cluster.size() - 1);\n+        }\n+    }\n+    std::sort(entry_to_index.begin(), entry_to_index.end());\n+    for (size_t i=0; i<orig_txs.size(); ++i) {\n+        for (auto& parent : orig_txs[i].get().GetTxEntryParents()) {\n+            auto it = std::lower_bound(entry_to_index.begin(), entry_to_index.end(), &(parent.get()),\n+                    [&](const auto& a, const auto& b) { return std::less<const TxEntry*>()(a.first, b); });\n+            assert(it != entry_to_index.end());\n+            assert(it->first == &(parent.get()));\n+            cluster[i].second.Set(it->second);\n+        }\n+    }\n+    uint64_t iterations = MAX_ITERATIONS;\n+\n+    std::vector<unsigned int> orig_linearization;\n+    orig_linearization.reserve(tx_count);\n+    for (unsigned int i=0; i<cluster.size(); ++i) {\n+        orig_linearization.push_back(i);\n+    }\n+    cluster_linearize::DepGraph dep_graph(cluster);\n+    auto result = cluster_linearize::Linearize(dep_graph, iterations, 0, orig_linearization);",
      "path": "src/kernel/txgraph.cpp",
      "position": null,
      "original_position": 174,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "7e97af364e9dbf48b06f49994a2840cc6c87e9a2",
      "in_reply_to_id": 1687121805,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed this to use `result.second`, which indicates whether the linearization is optimal.\r\n\r\nAlso added a wip commit to track iterations done, so that the benchmark logging is more useful for now.",
      "created_at": "2024-07-26T13:09:30Z",
      "updated_at": "2024-07-26T13:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1693039465",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693039465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742339252",
      "pull_request_review_id": 2277909745,
      "id": 1742339252,
      "node_id": "PRRC_kwDOABII585n2fy0",
      "diff_hunk": "@@ -109,6 +109,14 @@ def test_diamond(self):\n         raw_before[txid_c][\"fees\"][\"descendant\"] += fee_delta_c_1 + fee_delta_c_2\n         raw_before[txid_d][\"fees\"][\"ancestor\"] += fee_delta_b + fee_delta_c_1 + fee_delta_c_2\n         raw_after = self.nodes[0].getrawmempool(verbose=True)\n+        for txid in [txid_a, txid_b, txid_c, txid_d]:",
      "path": "test/functional/mining_prioritisetransaction.py",
      "position": 19,
      "original_position": 4,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "76b4f7ded7e4ba5364b8fe441b4f31ff1a37eafc",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "9047d620b81\r\nSuggestion for adding the deltas to chunk feerates instead of deleting the fields:\r\n```\r\ndiff --git a/test/functional/mining_prioritisetransaction.py b/test/functional/mining_prioritisetransaction.py\r\nindex a8183dc8e14..6c3e02b8862 100755\r\n--- a/test/functional/mining_prioritisetransaction.py\r\n+++ b/test/functional/mining_prioritisetransaction.py\r\n@@ -101,21 +101,19 @@ class PrioritiseTransactionTest(BitcoinTestFramework):\r\n         self.nodes[0].prioritisetransaction(txid=txid_c, fee_delta=int(fee_delta_c_1 * COIN))\r\n         self.nodes[0].prioritisetransaction(txid=txid_c, fee_delta=int(fee_delta_c_2 * COIN))\r\n         raw_before[txid_a][\"fees\"][\"descendant\"] += fee_delta_b + fee_delta_c_1 + fee_delta_c_2\r\n+        raw_before[txid_a][\"fees\"][\"chunk\"] += fee_delta_b + fee_delta_c_1 + fee_delta_c_2\r\n         raw_before[txid_b][\"fees\"][\"modified\"] += fee_delta_b\r\n         raw_before[txid_b][\"fees\"][\"ancestor\"] += fee_delta_b\r\n         raw_before[txid_b][\"fees\"][\"descendant\"] += fee_delta_b\r\n+        raw_before[txid_b][\"fees\"][\"chunk\"] += fee_delta_b + fee_delta_c_1 + fee_delta_c_2\r\n         raw_before[txid_c][\"fees\"][\"modified\"] += fee_delta_c_1 + fee_delta_c_2\r\n         raw_before[txid_c][\"fees\"][\"ancestor\"] += fee_delta_c_1 + fee_delta_c_2\r\n         raw_before[txid_c][\"fees\"][\"descendant\"] += fee_delta_c_1 + fee_delta_c_2\r\n+        raw_before[txid_c][\"fees\"][\"chunk\"] += fee_delta_b + fee_delta_c_1 + fee_delta_c_2\r\n         raw_before[txid_d][\"fees\"][\"ancestor\"] += fee_delta_b + fee_delta_c_1 + fee_delta_c_2\r\n         raw_after = self.nodes[0].getrawmempool(verbose=True)\r\n         for txid in [txid_a, txid_b, txid_c, txid_d]:\r\n-            del raw_before[txid][\"fees\"][\"chunk\"]\r\n-            del raw_before[txid][\"chunksize\"]\r\n             del raw_before[txid][\"clusterid\"]\r\n-        for txid in [txid_a, txid_b, txid_c, txid_d]:\r\n-            del raw_after[txid][\"fees\"][\"chunk\"]\r\n-            del raw_after[txid][\"chunksize\"]\r\n             del raw_after[txid][\"clusterid\"]\r\n         assert_equal(raw_before[txid_a], raw_after[txid_a])\r\n         assert_equal(raw_before, raw_after)\r\n@@ -137,8 +135,6 @@ class PrioritiseTransactionTest(BitcoinTestFramework):\r\n             self.nodes[0].sendrawtransaction(t)\r\n         raw_after = self.nodes[0].getrawmempool(verbose=True)\r\n         for txid in [txid_a, txid_b, txid_c, txid_d]:\r\n-            del raw_after[txid][\"fees\"][\"chunk\"]\r\n-            del raw_after[txid][\"chunksize\"]\r\n             del raw_after[txid][\"clusterid\"]\r\n         assert_equal(raw_before[txid_a], raw_after[txid_a])\r\n         assert_equal(raw_before, raw_after)\r\n```",
      "created_at": "2024-09-03T16:16:52Z",
      "updated_at": "2024-09-03T17:33:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1742339252",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742339252"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742343258",
      "pull_request_review_id": 2277909745,
      "id": 1742343258,
      "node_id": "PRRC_kwDOABII585n2gxa",
      "diff_hunk": "@@ -97,6 +97,9 @@ def run_test(self):\n         assert_equal(total_fee_old, sum(v['fees']['base'] for k, v in self.nodes[0].getrawmempool(verbose=True).items()))\n \n         last_entry = self.nodes[0].getmempoolentry(txid=last_txid)\n+        del last_entry[\"fees\"][\"chunk\"]\n+        del last_entry[\"clusterid\"]\n+        del last_entry[\"chunksize\"]",
      "path": "test/functional/mempool_persist.py",
      "position": null,
      "original_position": 6,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "76b4f7ded7e4ba5364b8fe441b4f31ff1a37eafc",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "9047d620b81 Just deleting the clusterid is sufficient\r\n```suggestion\r\n        del last_entry[\"clusterid\"]\r\n```",
      "created_at": "2024-09-03T16:20:04Z",
      "updated_at": "2024-09-03T17:33:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1742343258",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742343258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": 100,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742343699",
      "pull_request_review_id": 2277909745,
      "id": 1742343699,
      "node_id": "PRRC_kwDOABII585n2g4T",
      "diff_hunk": "@@ -131,7 +134,11 @@ def run_test(self):\n         assert_equal(fees['base'] + Decimal('0.00001000'), fees['modified'])\n \n         self.log.debug('Verify all fields are loaded correctly')\n-        assert_equal(last_entry, self.nodes[0].getmempoolentry(txid=last_txid))\n+        new_entry = self.nodes[0].getmempoolentry(txid=last_txid)\n+        del new_entry[\"fees\"][\"chunk\"]\n+        del new_entry[\"clusterid\"]\n+        del new_entry[\"chunksize\"]",
      "path": "test/functional/mempool_persist.py",
      "position": null,
      "original_position": 18,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "76b4f7ded7e4ba5364b8fe441b4f31ff1a37eafc",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "9047d620b81 similarly\r\n```suggestion\r\n        del new_entry[\"clusterid\"]\r\n```",
      "created_at": "2024-09-03T16:20:25Z",
      "updated_at": "2024-09-03T17:33:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1742343699",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742343699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": 138,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742345016",
      "pull_request_review_id": 2277909745,
      "id": 1742345016,
      "node_id": "PRRC_kwDOABII585n2hM4",
      "diff_hunk": "@@ -163,14 +163,17 @@ def create_bare_multisig_tx(utxo_to_spend=None):\n         assert_equal(parent_individual_testres[\"vsize\"], max_multisig_vsize)\n \n         # But together, it's exceeding limits in the *package* context. If sigops adjusted vsize wasn't being checked\n-        # here, it would get further in validation and give too-long-mempool-chain error instead.\n+        # here, it would get further in validation and give too-large-cluster error instead.\n         packet_test = self.nodes[0].testmempoolaccept([tx_parent.serialize().hex(), tx_child.serialize().hex()])\n-        expected_package_error = f\"package-mempool-limits, package size {2*max_multisig_vsize} exceeds ancestor size limit [limit: 101000]\"\n+        expected_package_error = f\"package-mempool-limits, exceeds cluster size limit [limit: 101000]\"\n         assert_equal([x[\"package-error\"] for x in packet_test], [expected_package_error] * 2)\n \n         # When we actually try to submit, the parent makes it into the mempool, but the child would exceed ancestor vsize limits\n         res = self.nodes[0].submitpackage([tx_parent.serialize().hex(), tx_child.serialize().hex()])\n-        assert \"too-long-mempool-chain\" in res[\"tx-results\"][tx_child.getwtxid()][\"error\"]\n+        assert \"too-large-cluster\" in res[\"tx-results\"][tx_child.getwtxid()][\"error\"]\n+        # When we actually try to submit, the parent makes it into the mempool, but the child would exceed cluster vsize limits\n+        #assert_raises_rpc_error(-26, \"too-large-cluster\", self.nodes[0].submitpackage, [tx_parent.serialize().hex(), tx_child.serialize().hex()])",
      "path": "test/functional/mempool_sigoplimit.py",
      "position": null,
      "original_position": 16,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "76b4f7ded7e4ba5364b8fe441b4f31ff1a37eafc",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "line should be deleted",
      "created_at": "2024-09-03T16:21:27Z",
      "updated_at": "2024-09-03T17:33:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1742345016",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742345016"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742376309",
      "pull_request_review_id": 2277909745,
      "id": 1742376309,
      "node_id": "PRRC_kwDOABII585n2o11",
      "diff_hunk": "@@ -557,10 +545,11 @@ def test_truc_sibling_eviction(self):\n         # Override maxfeerate - it costs a lot to replace these 100 transactions.\n         assert node.testmempoolaccept([tx_v3_replacement_only[\"hex\"]], maxfeerate=0)[0][\"allowed\"]\n         # Adding another one exceeds the limit.\n-        utxos_for_conflict.append(tx_v3_parent[\"new_utxos\"][1])\n-        tx_v3_child_2_rule5 = self.wallet.create_self_transfer_multi(utxos_to_spend=utxos_for_conflict, fee_per_output=4000000, version=3)\n-        rule5_str = f\"too many potential replacements (including sibling eviction), rejecting replacement {tx_v3_child_2_rule5['txid']}; too many potential replacements (101 > 100)\"\n-        assert_raises_rpc_error(-26, rule5_str, node.sendrawtransaction, tx_v3_child_2_rule5[\"hex\"])\n+        # TODO: rewrite this test given the new RBF rules",
      "path": "test/functional/mempool_truc.py",
      "position": null,
      "original_position": 75,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "76b4f7ded7e4ba5364b8fe441b4f31ff1a37eafc",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "d0576c134a5\r\nI don't think it's possible to adapt this test so that the tx has 100 direct conflicts, given that it needs to be within 1000vB (the only transactions allowed to have sibling eviction are TRUC children). Having 100 inputs makes it at least 3000-something vB. This would be the case for any new rule that requires 100 inputs.\r\n\r\nSo this test could just be deleted until we allow sibling eviction for transactions that don't have this size restriction.",
      "created_at": "2024-09-03T16:43:26Z",
      "updated_at": "2024-09-03T17:33:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1742376309",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742376309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 548,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742419135",
      "pull_request_review_id": 2277909745,
      "id": 1742419135,
      "node_id": "PRRC_kwDOABII585n2zS_",
      "diff_hunk": "@@ -60,14 +61,12 @@ def run_test(self):\n         self.log.info(\"Running test spends of conflicting outputs...\")\n         self.test_spends_of_conflicting_outputs()\n \n-        self.log.info(\"Running test new unconfirmed inputs...\")\n-        self.test_new_unconfirmed_inputs()\n+        # TODO: rework too many replacements test to use direct conflicts only\n+        #self.log.info(\"Running test too many replacements...\")\n+        #self.test_too_many_replacements()\n \n-        self.log.info(\"Running test too many replacements...\")\n-        self.test_too_many_replacements()\n-\n-        self.log.info(\"Running test too many replacements using default mempool params...\")\n-        self.test_too_many_replacements_with_default_mempool_params()\n+        #self.log.info(\"Running test too many replacements using default mempool params...\")\n+        #self.test_too_many_replacements_with_default_mempool_params()",
      "path": "test/functional/feature_rbf.py",
      "position": null,
      "original_position": 24,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "76b4f7ded7e4ba5364b8fe441b4f31ff1a37eafc",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "d0576c134a5\r\nI think we only need to adapt 1 of these 2 tests and it should be quite easy to do. Currently, `test_too_many_replacements` requires a high descendant limit because it's 1 parent with 100 children, but we can just add a `self.generate(node, 1)` in between and it can use node 1 (the default one). Then, we can just delete `test_too_many_replacements_with_default_mempool_params`\r\n\r\n```\r\ndiff --git a/test/functional/feature_rbf.py b/test/functional/feature_rbf.py\r\nindex f1de04008c4..57817380c50 100755\r\n--- a/test/functional/feature_rbf.py\r\n+++ b/test/functional/feature_rbf.py\r\n@@ -61,12 +61,8 @@ class ReplaceByFeeTest(BitcoinTestFramework):\r\n         self.log.info(\"Running test spends of conflicting outputs...\")\r\n         self.test_spends_of_conflicting_outputs()\r\n \r\n-        # TODO: rework too many replacements test to use direct conflicts only\r\n-        #self.log.info(\"Running test too many replacements...\")\r\n-        #self.test_too_many_replacements()\r\n-\r\n-        #self.log.info(\"Running test too many replacements using default mempool params...\")\r\n-        #self.test_too_many_replacements_with_default_mempool_params()\r\n+        self.log.info(\"Running test too many replacements...\")\r\n+        self.test_too_many_replacements()\r\n \r\n         self.log.info(\"Running test opt-in...\")\r\n         self.test_opt_in()\r\n@@ -331,17 +327,20 @@ class ReplaceByFeeTest(BitcoinTestFramework):\r\n         split_value = int((initial_nValue - fee) / (MAX_REPLACEMENT_LIMIT + 1))\r\n \r\n         splitting_tx_utxos = self.wallet.send_self_transfer_multi(\r\n-            from_node=self.nodes[0],\r\n+            from_node=self.nodes[1],\r\n             utxos_to_spend=[utxo],\r\n             sequence=0,\r\n             num_outputs=MAX_REPLACEMENT_LIMIT + 1,\r\n             amount_per_output=split_value,\r\n         )[\"new_utxos\"]\r\n \r\n+        # Let this tx confirm so that its children are not connected\r\n+        self.generate(self.nodes[1], 1)\r\n+\r\n         # Now spend each of those outputs individually\r\n         for utxo in splitting_tx_utxos:\r\n             self.wallet.send_self_transfer(\r\n-                from_node=self.nodes[0],\r\n+                from_node=self.nodes[1],\r\n                 utxo_to_spend=utxo,\r\n                 sequence=0,\r\n                 fee=Decimal(fee) / COIN,\r\n@@ -359,98 +358,13 @@ class ReplaceByFeeTest(BitcoinTestFramework):\r\n         double_tx_hex = double_tx.serialize().hex()\r\n \r\n         # This will raise an exception\r\n-        assert_raises_rpc_error(-26, \"too many potential replacements\", self.nodes[0].sendrawtransaction, double_tx_hex, 0)\r\n+        assert_raises_rpc_error(-26, \"too many potential replacements\", self.nodes[1].sendrawtransaction, double_tx_hex, 0)\r\n \r\n         # If we remove an input, it should pass\r\n         double_tx.vin.pop()\r\n         double_tx_hex = double_tx.serialize().hex()\r\n         self.nodes[0].sendrawtransaction(double_tx_hex, 0)\r\n \r\n-    def test_too_many_replacements_with_default_mempool_params(self):\r\n-        \"\"\"\r\n-        Test rule 5 (do not allow replacements that cause more than 100\r\n-        evictions) without having to rely on non-default mempool parameters.\r\n-\r\n-        In order to do this, create a number of \"root\" UTXOs, and then hang\r\n-        enough transactions off of each root UTXO to exceed the MAX_REPLACEMENT_LIMIT.\r\n-        Then create a conflicting RBF replacement transaction.\r\n-        \"\"\"\r\n-        # Clear mempools to avoid cross-node sync failure.\r\n-        for node in self.nodes:\r\n-            self.generate(node, 1)\r\n-        normal_node = self.nodes[1]\r\n-        wallet = MiniWallet(normal_node)\r\n-\r\n-        # This has to be chosen so that the total number of transactions can exceed\r\n-        # MAX_REPLACEMENT_LIMIT without having any one tx graph run into the descendant\r\n-        # limit; 10 works.\r\n-        num_tx_graphs = 10\r\n-\r\n-        # (Number of transactions per graph, rule 5 failure expected)\r\n-        cases = [\r\n-            # Test the base case of evicting fewer than MAX_REPLACEMENT_LIMIT\r\n-            # transactions.\r\n-            ((MAX_REPLACEMENT_LIMIT // num_tx_graphs) - 1, False),\r\n-\r\n-            # Test hitting the rule 5 eviction limit.\r\n-            (MAX_REPLACEMENT_LIMIT // num_tx_graphs, True),\r\n-        ]\r\n-\r\n-        for (txs_per_graph, failure_expected) in cases:\r\n-            self.log.debug(f\"txs_per_graph: {txs_per_graph}, failure: {failure_expected}\")\r\n-            # \"Root\" utxos of each txn graph that we will attempt to double-spend with\r\n-            # an RBF replacement.\r\n-            root_utxos = []\r\n-\r\n-            # For each root UTXO, create a package that contains the spend of that\r\n-            # UTXO and `txs_per_graph` children tx.\r\n-            for graph_num in range(num_tx_graphs):\r\n-                root_utxos.append(wallet.get_utxo())\r\n-\r\n-                optin_parent_tx = wallet.send_self_transfer_multi(\r\n-                    from_node=normal_node,\r\n-                    sequence=MAX_BIP125_RBF_SEQUENCE,\r\n-                    utxos_to_spend=[root_utxos[graph_num]],\r\n-                    num_outputs=txs_per_graph,\r\n-                )\r\n-                assert_equal(True, normal_node.getmempoolentry(optin_parent_tx['txid'])['bip125-replaceable'])\r\n-                new_utxos = optin_parent_tx['new_utxos']\r\n-\r\n-                for utxo in new_utxos:\r\n-                    # Create spends for each output from the \"root\" of this graph.\r\n-                    child_tx = wallet.send_self_transfer(\r\n-                        from_node=normal_node,\r\n-                        utxo_to_spend=utxo,\r\n-                    )\r\n-\r\n-                    assert normal_node.getmempoolentry(child_tx['txid'])\r\n-\r\n-            num_txs_invalidated = len(root_utxos) + (num_tx_graphs * txs_per_graph)\r\n-\r\n-            if failure_expected:\r\n-                assert num_txs_invalidated > MAX_REPLACEMENT_LIMIT\r\n-            else:\r\n-                assert num_txs_invalidated <= MAX_REPLACEMENT_LIMIT\r\n-\r\n-            # Now attempt to submit a tx that double-spends all the root tx inputs, which\r\n-            # would invalidate `num_txs_invalidated` transactions.\r\n-            tx_hex = wallet.create_self_transfer_multi(\r\n-                utxos_to_spend=root_utxos,\r\n-                fee_per_output=10_000_000,  # absurdly high feerate\r\n-            )[\"hex\"]\r\n-\r\n-            if failure_expected:\r\n-                assert_raises_rpc_error(\r\n-                    -26, \"too many potential replacements\", normal_node.sendrawtransaction, tx_hex, 0)\r\n-            else:\r\n-                txid = normal_node.sendrawtransaction(tx_hex, 0)\r\n-                assert normal_node.getmempoolentry(txid)\r\n-\r\n-        # Clear the mempool once finished, and rescan the other nodes' wallet\r\n-        # to account for the spends we've made on `normal_node`.\r\n-        self.generate(normal_node, 1)\r\n-        self.wallet.rescan_utxos()\r\n-\r\n     def test_opt_in(self):\r\n         \"\"\"Replacing should only work if orig tx opted in\"\"\"\r\n         tx0_outpoint = self.make_utxo(self.nodes[0], int(1.1 * COIN))\r\n```",
      "created_at": "2024-09-03T17:21:06Z",
      "updated_at": "2024-09-03T17:33:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1742419135",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742419135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": 64,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745897934",
      "pull_request_review_id": 2283650112,
      "id": 1745897934,
      "node_id": "PRRC_kwDOABII585oEEnO",
      "diff_hunk": "@@ -109,6 +109,14 @@ def test_diamond(self):\n         raw_before[txid_c][\"fees\"][\"descendant\"] += fee_delta_c_1 + fee_delta_c_2\n         raw_before[txid_d][\"fees\"][\"ancestor\"] += fee_delta_b + fee_delta_c_1 + fee_delta_c_2\n         raw_after = self.nodes[0].getrawmempool(verbose=True)\n+        for txid in [txid_a, txid_b, txid_c, txid_d]:",
      "path": "test/functional/mining_prioritisetransaction.py",
      "position": 19,
      "original_position": 4,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "76b4f7ded7e4ba5364b8fe441b4f31ff1a37eafc",
      "in_reply_to_id": 1742339252,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Taken, thanks.",
      "created_at": "2024-09-05T17:09:42Z",
      "updated_at": "2024-09-05T17:09:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1745897934",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745897934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745904431",
      "pull_request_review_id": 2283660352,
      "id": 1745904431,
      "node_id": "PRRC_kwDOABII585oEGMv",
      "diff_hunk": "@@ -60,57 +59,26 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n {\n     AssertLockHeld(pool.cs);\n     const uint256 txid = tx.GetHash();\n-    uint64_t nConflictingCount = 0;\n-    for (const auto& mi : iters_conflicting) {\n-        nConflictingCount += mi->GetCountWithDescendants();\n-        // Rule #5: don't consider replacing more than MAX_REPLACEMENT_CANDIDATES\n-        // entries from the mempool. This potentially overestimates the number of actual\n-        // descendants (i.e. if multiple conflicts share a descendant, it will be counted multiple\n-        // times), but we just want to be conservative to avoid doing too much work.\n-        if (nConflictingCount > MAX_REPLACEMENT_CANDIDATES) {\n-            return strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n-                             txid.ToString(),\n-                             nConflictingCount,\n-                             MAX_REPLACEMENT_CANDIDATES);\n-        }\n-    }\n     // Calculate the set of all transactions that would have to be evicted.\n     for (CTxMemPool::txiter it : iters_conflicting) {\n-        pool.CalculateDescendants(it, all_conflicts);\n-    }\n-    return std::nullopt;\n-}\n-\n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n-                                               const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n-{\n-    AssertLockHeld(pool.cs);\n-    std::set<uint256> parents_of_conflicts;\n-    for (const auto& mi : iters_conflicting) {\n-        for (const CTxIn& txin : mi->GetTx().vin) {\n-            parents_of_conflicts.insert(txin.prevout.hash);\n+        // Exit early if we're going to fail (see below)\n+        if (all_conflicts.size() > MAX_REPLACEMENT_CANDIDATES) {",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": 1365753481,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Will comment elsewhere as well, but I just updated this limit to be a limit on the number of distinct clusters that are conflicted.",
      "created_at": "2024-09-05T17:15:11Z",
      "updated_at": "2024-09-05T17:15:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1745904431",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745904431"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745906461",
      "pull_request_review_id": 2283663692,
      "id": 1745906461,
      "node_id": "PRRC_kwDOABII585oEGsd",
      "diff_hunk": "@@ -97,6 +97,9 @@ def run_test(self):\n         assert_equal(total_fee_old, sum(v['fees']['base'] for k, v in self.nodes[0].getrawmempool(verbose=True).items()))\n \n         last_entry = self.nodes[0].getmempoolentry(txid=last_txid)\n+        del last_entry[\"fees\"][\"chunk\"]\n+        del last_entry[\"clusterid\"]\n+        del last_entry[\"chunksize\"]",
      "path": "test/functional/mempool_persist.py",
      "position": null,
      "original_position": 6,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "76b4f7ded7e4ba5364b8fe441b4f31ff1a37eafc",
      "in_reply_to_id": 1742343258,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Taken",
      "created_at": "2024-09-05T17:17:04Z",
      "updated_at": "2024-09-05T17:17:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1745906461",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745906461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": 100,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745907045",
      "pull_request_review_id": 2283664571,
      "id": 1745907045,
      "node_id": "PRRC_kwDOABII585oEG1l",
      "diff_hunk": "@@ -131,7 +134,11 @@ def run_test(self):\n         assert_equal(fees['base'] + Decimal('0.00001000'), fees['modified'])\n \n         self.log.debug('Verify all fields are loaded correctly')\n-        assert_equal(last_entry, self.nodes[0].getmempoolentry(txid=last_txid))\n+        new_entry = self.nodes[0].getmempoolentry(txid=last_txid)\n+        del new_entry[\"fees\"][\"chunk\"]\n+        del new_entry[\"clusterid\"]\n+        del new_entry[\"chunksize\"]",
      "path": "test/functional/mempool_persist.py",
      "position": null,
      "original_position": 18,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "76b4f7ded7e4ba5364b8fe441b4f31ff1a37eafc",
      "in_reply_to_id": 1742343699,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Taken",
      "created_at": "2024-09-05T17:17:32Z",
      "updated_at": "2024-09-05T17:17:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1745907045",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745907045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": 138,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745907713",
      "pull_request_review_id": 2283665699,
      "id": 1745907713,
      "node_id": "PRRC_kwDOABII585oEHAB",
      "diff_hunk": "@@ -163,14 +163,17 @@ def create_bare_multisig_tx(utxo_to_spend=None):\n         assert_equal(parent_individual_testres[\"vsize\"], max_multisig_vsize)\n \n         # But together, it's exceeding limits in the *package* context. If sigops adjusted vsize wasn't being checked\n-        # here, it would get further in validation and give too-long-mempool-chain error instead.\n+        # here, it would get further in validation and give too-large-cluster error instead.\n         packet_test = self.nodes[0].testmempoolaccept([tx_parent.serialize().hex(), tx_child.serialize().hex()])\n-        expected_package_error = f\"package-mempool-limits, package size {2*max_multisig_vsize} exceeds ancestor size limit [limit: 101000]\"\n+        expected_package_error = f\"package-mempool-limits, exceeds cluster size limit [limit: 101000]\"\n         assert_equal([x[\"package-error\"] for x in packet_test], [expected_package_error] * 2)\n \n         # When we actually try to submit, the parent makes it into the mempool, but the child would exceed ancestor vsize limits\n         res = self.nodes[0].submitpackage([tx_parent.serialize().hex(), tx_child.serialize().hex()])\n-        assert \"too-long-mempool-chain\" in res[\"tx-results\"][tx_child.getwtxid()][\"error\"]\n+        assert \"too-large-cluster\" in res[\"tx-results\"][tx_child.getwtxid()][\"error\"]\n+        # When we actually try to submit, the parent makes it into the mempool, but the child would exceed cluster vsize limits\n+        #assert_raises_rpc_error(-26, \"too-large-cluster\", self.nodes[0].submitpackage, [tx_parent.serialize().hex(), tx_child.serialize().hex()])",
      "path": "test/functional/mempool_sigoplimit.py",
      "position": null,
      "original_position": 16,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "76b4f7ded7e4ba5364b8fe441b4f31ff1a37eafc",
      "in_reply_to_id": 1742345016,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed",
      "created_at": "2024-09-05T17:18:09Z",
      "updated_at": "2024-09-05T17:18:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1745907713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745907713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745908827",
      "pull_request_review_id": 2283667523,
      "id": 1745908827,
      "node_id": "PRRC_kwDOABII585oEHRb",
      "diff_hunk": "@@ -557,10 +545,11 @@ def test_truc_sibling_eviction(self):\n         # Override maxfeerate - it costs a lot to replace these 100 transactions.\n         assert node.testmempoolaccept([tx_v3_replacement_only[\"hex\"]], maxfeerate=0)[0][\"allowed\"]\n         # Adding another one exceeds the limit.\n-        utxos_for_conflict.append(tx_v3_parent[\"new_utxos\"][1])\n-        tx_v3_child_2_rule5 = self.wallet.create_self_transfer_multi(utxos_to_spend=utxos_for_conflict, fee_per_output=4000000, version=3)\n-        rule5_str = f\"too many potential replacements (including sibling eviction), rejecting replacement {tx_v3_child_2_rule5['txid']}; too many potential replacements (101 > 100)\"\n-        assert_raises_rpc_error(-26, rule5_str, node.sendrawtransaction, tx_v3_child_2_rule5[\"hex\"])\n+        # TODO: rewrite this test given the new RBF rules",
      "path": "test/functional/mempool_truc.py",
      "position": null,
      "original_position": 75,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "76b4f7ded7e4ba5364b8fe441b4f31ff1a37eafc",
      "in_reply_to_id": 1742376309,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Deleted.",
      "created_at": "2024-09-05T17:19:07Z",
      "updated_at": "2024-09-05T17:19:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1745908827",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745908827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 548,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745913307",
      "pull_request_review_id": 2283674966,
      "id": 1745913307,
      "node_id": "PRRC_kwDOABII585oEIXb",
      "diff_hunk": "@@ -60,14 +61,12 @@ def run_test(self):\n         self.log.info(\"Running test spends of conflicting outputs...\")\n         self.test_spends_of_conflicting_outputs()\n \n-        self.log.info(\"Running test new unconfirmed inputs...\")\n-        self.test_new_unconfirmed_inputs()\n+        # TODO: rework too many replacements test to use direct conflicts only\n+        #self.log.info(\"Running test too many replacements...\")\n+        #self.test_too_many_replacements()\n \n-        self.log.info(\"Running test too many replacements...\")\n-        self.test_too_many_replacements()\n-\n-        self.log.info(\"Running test too many replacements using default mempool params...\")\n-        self.test_too_many_replacements_with_default_mempool_params()\n+        #self.log.info(\"Running test too many replacements using default mempool params...\")\n+        #self.test_too_many_replacements_with_default_mempool_params()",
      "path": "test/functional/feature_rbf.py",
      "position": null,
      "original_position": 24,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "76b4f7ded7e4ba5364b8fe441b4f31ff1a37eafc",
      "in_reply_to_id": 1742419135,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, took this.",
      "created_at": "2024-09-05T17:23:09Z",
      "updated_at": "2024-09-05T17:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1745913307",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745913307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": 64,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745982880",
      "pull_request_review_id": 2283792936,
      "id": 1745982880,
      "node_id": "PRRC_kwDOABII585oEZWg",
      "diff_hunk": "@@ -30,6 +30,7 @@ def set_test_params(self):\n         self.extra_args = [\n             [\n                 \"-mempoolfullrbf=0\",\n+                \"-limitclustercount=200\",",
      "path": "test/functional/feature_rbf.py",
      "position": null,
      "original_position": 4,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nothing fails when I remove this",
      "created_at": "2024-09-05T18:23:43Z",
      "updated_at": "2024-09-05T22:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1745982880",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745982880"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745984816",
      "pull_request_review_id": 2283792936,
      "id": 1745984816,
      "node_id": "PRRC_kwDOABII585oEZ0w",
      "diff_hunk": "@@ -317,27 +315,6 @@ def test_spends_of_conflicting_outputs(self):\n         # This will raise an exception\n         assert_raises_rpc_error(-26, \"bad-txns-spends-conflicting-tx\", self.nodes[0].sendrawtransaction, tx2_hex, 0)\n \n-    def test_new_unconfirmed_inputs(self):",
      "path": "test/functional/feature_rbf.py",
      "position": 39,
      "original_position": 54,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "do we have functional test coverage that it *is* allowed elsewhere? Just check that it doesn't fail rather than rip out?",
      "created_at": "2024-09-05T18:25:18Z",
      "updated_at": "2024-09-05T22:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1745984816",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745984816"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 310,
      "original_line": 310,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745994360",
      "pull_request_review_id": 2283792936,
      "id": 1745994360,
      "node_id": "PRRC_kwDOABII585oEcJ4",
      "diff_hunk": "@@ -276,7 +274,7 @@ def test_replacement_feeperkb(self):\n         )[\"hex\"]\n \n         # This will raise an exception due to insufficient fee\n-        assert_raises_rpc_error(-26, \"insufficient fee\", self.nodes[0].sendrawtransaction, tx1b_hex, 0)\n+        assert_raises_rpc_error(-26, \"does not improve feerate diagram\", self.nodes[0].sendrawtransaction, tx1b_hex, 0)",
      "path": "test/functional/feature_rbf.py",
      "position": 32,
      "original_position": 46,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I wonder if we want to change this string to \"insufficient fee, does not improve feerate diagram\" to give a hint at what to do to user",
      "created_at": "2024-09-05T18:33:55Z",
      "updated_at": "2024-09-05T22:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1745994360",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745994360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 269,
      "original_line": 269,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745997228",
      "pull_request_review_id": 2283792936,
      "id": 1745997228,
      "node_id": "PRRC_kwDOABII585oEc2s",
      "diff_hunk": "@@ -45,7 +45,7 @@ def test_rbf_carveout_disallowed(self):\n         # B: First transaction in package, RBFs A by itself under individual evaluation, which would give it +1 descendant limit\n         # C: Second transaction in package, spends B. If the +1 descendant limit persisted, would make it into mempool\n \n-        self.restart_node(0, extra_args=self.extra_args[0] + [\"-limitancestorcount=2\", \"-limitdescendantcount=1\"])\n+        self.restart_node(0, extra_args=self.extra_args[0] + [\"-limitclustercount=1\"])",
      "path": "test/functional/mempool_limit.py",
      "position": null,
      "original_position": 5,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think `test_rbf_carveout_disallowed` is meaningless post-cluster mempool, we should be relying on other tests to ensure we never go above cluster count limit",
      "created_at": "2024-09-05T18:36:41Z",
      "updated_at": "2024-09-05T22:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1745997228",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745997228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1746041322",
      "pull_request_review_id": 2283792936,
      "id": 1746041322,
      "node_id": "PRRC_kwDOABII585oEnnq",
      "diff_hunk": "@@ -201,12 +198,12 @@ def test_package_rbf_additional_fees(self):\n \n     def test_package_rbf_max_conflicts(self):",
      "path": "test/functional/mempool_package_rbf.py",
      "position": 12,
      "original_position": 12,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Here's a diff to clean up some of the test language and double-checking the right number of clusters\r\n```\r\ndiff --git a/test/functional/mempool_package_rbf.py b/test/functional/mempool_package_rbf.py\r\nindex f75b13a571..201f303525 100755\r\n--- a/test/functional/mempool_package_rbf.py\r\n+++ b/test/functional/mempool_package_rbf.py\r\n@@ -176,95 +176,103 @@ class PackageRBFTest(BitcoinTestFramework):\r\n         assert_equal(f\"package RBF failed: insufficient anti-DoS fees, rejecting replacement {failure_package_txns3[1].rehash()}, not enough additional fees to relay; {incremental_sats_short} < {incremental_sats_required}\", pkg_results3[\"package_msg\"])\r\n         self.assert_mempool_contents(expected=package_txns1)\r\n \r\n         success_package_hex3, success_package_txns3 = self.create_simple_package(coin, parent_fee=DEFAULT_FEE, child_fee=DEFAULT_CHILD_FEE + incremental_sats_required)\r\n         node.submitpackage(success_package_hex3)\r\n         self.assert_mempool_contents(expected=success_package_txns3)\r\n         self.generate(node, 1)\r\n \r\n         self.log.info(\"Check Package RBF must have strict cpfp structure\")\r\n         coin = self.coins.pop()\r\n         package_hex4, package_txns4 = self.create_simple_package(coin, parent_fee=DEFAULT_FEE, child_fee=DEFAULT_CHILD_FEE)\r\n         node.submitpackage(package_hex4)\r\n         self.assert_mempool_contents(expected=package_txns4)\r\n         package_hex5, _package_txns5 = self.create_simple_package(coin, parent_fee=DEFAULT_CHILD_FEE, child_fee=DEFAULT_CHILD_FEE)\r\n         pkg_results5 = node.submitpackage(package_hex5)\r\n         assert 'package RBF failed: package feerate is less than or equal to parent feerate' in pkg_results5[\"package_msg\"]\r\n         self.assert_mempool_contents(expected=package_txns4)\r\n \r\n         package_hex5_1, package_txns5_1 = self.create_simple_package(coin, parent_fee=DEFAULT_CHILD_FEE, child_fee=DEFAULT_CHILD_FEE + Decimal(\"0.00000001\"))\r\n         node.submitpackage(package_hex5_1)\r\n         self.assert_mempool_contents(expected=package_txns5_1)\r\n         self.generate(node, 1)\r\n \r\n     def test_package_rbf_max_conflicts(self):\r\n         node = self.nodes[0]\r\n-        self.log.info(\"Check Package RBF cannot replace more than MAX_REPLACEMENT_CANDIDATES direct conflicts\")\r\n+        self.log.info(\"Check Package RBF cannot conflict with  more than MAX_REPLACEMENT_CANDIDATES clusters\")\r\n         num_coins = 101\r\n         parent_coins = self.coins[:num_coins]\r\n         del self.coins[:num_coins]\r\n \r\n-        # Original transactions: 101 transactions with 1 descendants each -> 202 total transactions\r\n+        # Original transactions: 101 transactions with 1 descendants each -> 202 total transactions, 101 clusters\r\n         size_two_clusters = []\r\n         for coin in parent_coins:\r\n             size_two_clusters.append(self.wallet.send_self_transfer_chain(from_node=node, chain_length=2, utxo_to_spend=coin))\r\n         expected_txns = [txn[\"tx\"] for parent_child_txns in size_two_clusters for txn in parent_child_txns]\r\n         assert_equal(len(expected_txns), num_coins * 2)\r\n         self.assert_mempool_contents(expected=expected_txns)\r\n \r\n+        # 101 clusters\r\n+        clusters = set([])\r\n+        for txn in expected_txns:\r\n+            clusters.add(node.getmempoolentry(txn.rehash())[\"clusterid\"])\r\n+        assert_equal(len(clusters), num_coins)\r\n+        \r\n         # parent feeerate needs to be high enough for minrelay\r\n         # child feerate needs to be large enough to trigger package rbf with a very large parent and\r\n         # pay for all evicted fees. maxfeerate turned off for all submissions since child feerate\r\n         # is extremely high\r\n         parent_fee_per_conflict = 10000\r\n         child_feerate = 10000 * DEFAULT_FEE\r\n \r\n-        # Conflict against all transactions by double-spending each parent, causing 202 evictions\r\n+        # Conflict against all transactions by double-spending each parent, causing 101 cluster conflicts\r\n         package_parent = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_coins, fee_per_output=parent_fee_per_conflict)\r\n         package_child = self.wallet.create_self_transfer(fee_rate=child_feerate, utxo_to_spend=package_parent[\"new_utxos\"][0])\r\n \r\n         pkg_results = node.submitpackage([package_parent[\"hex\"], package_child[\"hex\"]], maxfeerate=0)\r\n         print(pkg_results[\"package_msg\"])\r\n         assert_equal(f\"transaction failed\", pkg_results[\"package_msg\"])\r\n+        assert_equal(f\"too many potential replacements, rejecting replacement {package_parent['txid']}; too many conflicting clusters (101 > 100)\\n\", pkg_results[\"tx-results\"][package_parent[\"wtxid\"]][\"error\"])\r\n         self.assert_mempool_contents(expected=expected_txns)\r\n \r\n         # Make singleton tx to conflict with in next batch\r\n         singleton_coin = self.coins.pop()\r\n         singleton_tx = self.wallet.create_self_transfer(utxo_to_spend=singleton_coin)\r\n         node.sendrawtransaction(singleton_tx[\"hex\"])\r\n         expected_txns.append(singleton_tx[\"tx\"])\r\n \r\n-        # Double-spend same set minus last, and double-spend singleton. This is still too many direct conflicts.\r\n+        # Double-spend same set minus last, and double-spend singleton. This is still too many conflicted clusters.\r\n         # N.B. we can't RBF just a child tx in the clusters, as that would make resulting cluster of size 3.\r\n         double_spending_coins = parent_coins[:-1] + [singleton_coin]\r\n         package_parent = self.wallet.create_self_transfer_multi(utxos_to_spend=double_spending_coins, fee_per_output=parent_fee_per_conflict)\r\n         package_child = self.wallet.create_self_transfer(fee_rate=child_feerate, utxo_to_spend=package_parent[\"new_utxos\"][0])\r\n         pkg_results = node.submitpackage([package_parent[\"hex\"], package_child[\"hex\"]], maxfeerate=0)\r\n         assert_equal(f\"transaction failed\", pkg_results[\"package_msg\"])\r\n+        assert_equal(f\"too many potential replacements, rejecting replacement {package_parent['txid']}; too many conflicting clusters (101 > 100)\\n\", pkg_results[\"tx-results\"][package_parent[\"wtxid\"]][\"error\"])\r\n         self.assert_mempool_contents(expected=expected_txns)\r\n \r\n-        # Finally, evict MAX_REPLACEMENT_CANDIDATES direct conflicts\r\n+        # Finally, conflict with MAX_REPLACEMENT_CANDIDATES clusters\r\n         package_parent = self.wallet.create_self_transfer_multi(utxos_to_spend=parent_coins[:-1], fee_per_output=parent_fee_per_conflict)\r\n         package_child = self.wallet.create_self_transfer(fee_rate=child_feerate, utxo_to_spend=package_parent[\"new_utxos\"][0])\r\n         pkg_results = node.submitpackage([package_parent[\"hex\"], package_child[\"hex\"]], maxfeerate=0)\r\n         assert_equal(pkg_results[\"package_msg\"], \"success\")\r\n         self.assert_mempool_contents(expected=[singleton_tx[\"tx\"], size_two_clusters[-1][0][\"tx\"], size_two_clusters[-1][1][\"tx\"], package_parent[\"tx\"], package_child[\"tx\"]] )\r\n \r\n         self.generate(node, 1)\r\n \r\n     def test_too_numerous_ancestors(self):\r\n         self.log.info(\"Test that package RBF doesn't work with packages larger than 2 due to ancestors\")\r\n         node = self.nodes[0]\r\n         coin = self.coins.pop()\r\n \r\n         package_hex1, package_txns1 = self.create_simple_package(coin, DEFAULT_FEE, DEFAULT_CHILD_FEE)\r\n         node.submitpackage(package_hex1)\r\n         self.assert_mempool_contents(expected=package_txns1)\r\n \r\n         # Double-spends the original package\r\n         self.ctr += 1\r\n         parent_result1 = self.wallet.create_self_transfer(\r\n             fee=DEFAULT_FEE,\r\n             utxo_to_spend=coin,\r\n             sequence=MAX_BIP125_RBF_SEQUENCE - self.ctr,\r\n         )\r\n ```",
      "created_at": "2024-09-05T19:13:21Z",
      "updated_at": "2024-09-05T22:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1746041322",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1746041322"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 199,
      "original_line": 199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1746092665",
      "pull_request_review_id": 2283792936,
      "id": 1746092665,
      "node_id": "PRRC_kwDOABII585oE0J5",
      "diff_hunk": "@@ -33,8 +29,8 @@ def set_test_params(self):\n             [\n             ],\n             [\n-                \"-limitancestorcount={}\".format(CUSTOM_ANCESTOR_LIMIT),\n                 \"-limitdescendantcount={}\".format(CUSTOM_DESCENDANT_LIMIT),\n+                \"-limitclustercount={}\".format(CUSTOM_DESCENDANT_LIMIT),",
      "path": "test/functional/mempool_packages.py",
      "position": null,
      "original_position": 22,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this test is pretty ancient and tbh not sure worth holding around. But in case we want to hold onto it, modifications to make things more sensible in cluster mempool world\r\n\r\n```\r\ndiff --git a/test/functional/mempool_packages.py b/test/functional/mempool_packages.py\r\nindex f7fe381f43..9cf1aa01f5 100755\r\n--- a/test/functional/mempool_packages.py\r\n+++ b/test/functional/mempool_packages.py\r\n@@ -1,92 +1,91 @@\r\n #!/usr/bin/env python3\r\n # Copyright (c) 2014-2022 The Bitcoin Core developers\r\n # Distributed under the MIT software license, see the accompanying\r\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n \"\"\"Test descendant package tracking code.\"\"\"\r\n \r\n from decimal import Decimal\r\n \r\n from test_framework.messages import (\r\n-    DEFAULT_ANCESTOR_LIMIT,\r\n-    DEFAULT_DESCENDANT_LIMIT,\r\n+    DEFAULT_CLUSTER_LIMIT,\r\n )\r\n from test_framework.p2p import P2PTxInvStore\r\n from test_framework.test_framework import BitcoinTestFramework\r\n from test_framework.util import (\r\n     assert_equal,\r\n )\r\n from test_framework.wallet import MiniWallet\r\n \r\n # custom limits for node1\r\n-CUSTOM_DESCENDANT_LIMIT = 10\r\n+CUSTOM_CLUSTER_LIMIT = 10\r\n+assert CUSTOM_CLUSTER_LIMIT < DEFAULT_CLUSTER_LIMIT\r\n \r\n class MempoolPackagesTest(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n         self.num_nodes = 2\r\n         # whitelist peers to speed up tx relay / mempool sync\r\n         self.noban_tx_relay = True\r\n         self.extra_args = [\r\n             [\r\n             ],\r\n             [\r\n-                \"-limitdescendantcount={}\".format(CUSTOM_DESCENDANT_LIMIT),\r\n-                \"-limitclustercount={}\".format(CUSTOM_DESCENDANT_LIMIT),\r\n+                \"-limitclustercount={}\".format(CUSTOM_CLUSTER_LIMIT),\r\n             ],\r\n         ]\r\n \r\n     def run_test(self):\r\n         self.wallet = MiniWallet(self.nodes[0])\r\n         self.wallet.rescan_utxos()\r\n \r\n         peer_inv_store = self.nodes[0].add_p2p_connection(P2PTxInvStore()) # keep track of invs\r\n \r\n-        # DEFAULT_ANCESTOR_LIMIT transactions off a confirmed tx should be fine\r\n-        chain = self.wallet.create_self_transfer_chain(chain_length=DEFAULT_ANCESTOR_LIMIT)\r\n+        # DEFAULT_CLUSTER_LIMIT transactions off a confirmed tx should be fine for default node\r\n+        chain = self.wallet.create_self_transfer_chain(chain_length=DEFAULT_CLUSTER_LIMIT)\r\n         witness_chain = [t[\"wtxid\"] for t in chain]\r\n         ancestor_vsize = 0\r\n         ancestor_fees = Decimal(0)\r\n \r\n         for i, t in enumerate(chain):\r\n             ancestor_vsize += t[\"tx\"].get_vsize()\r\n             ancestor_fees += t[\"fee\"]\r\n             self.wallet.sendrawtransaction(from_node=self.nodes[0], tx_hex=t[\"hex\"])\r\n \r\n         # Wait until mempool transactions have passed initial broadcast (sent inv and received getdata)\r\n         # Otherwise, getrawmempool may be inconsistent with getmempoolentry if unbroadcast changes in between\r\n         peer_inv_store.wait_for_broadcast(witness_chain)\r\n \r\n-        # Check mempool has DEFAULT_ANCESTOR_LIMIT transactions in it, and descendant and ancestor\r\n+        # Check mempool has DEFAULT_CLUSTER_LIMIT transactions in it, and descendant and ancestor\r\n         # count and fees should look correct\r\n         mempool = self.nodes[0].getrawmempool(True)\r\n-        assert_equal(len(mempool), DEFAULT_ANCESTOR_LIMIT)\r\n+        assert_equal(len(mempool), DEFAULT_CLUSTER_LIMIT)\r\n         descendant_count = 1\r\n         descendant_fees = 0\r\n         descendant_vsize = 0\r\n \r\n         assert_equal(ancestor_vsize, sum([mempool[tx]['vsize'] for tx in mempool]))\r\n-        ancestor_count = DEFAULT_ANCESTOR_LIMIT\r\n+        ancestor_count = DEFAULT_CLUSTER_LIMIT\r\n         assert_equal(ancestor_fees, sum([mempool[tx]['fees']['base'] for tx in mempool]))\r\n \r\n         descendants = []\r\n         ancestors = [t[\"txid\"] for t in chain]\r\n         chain = [t[\"txid\"] for t in chain]\r\n         for x in reversed(chain):\r\n             # Check that getmempoolentry is consistent with getrawmempool\r\n             entry = self.nodes[0].getmempoolentry(x)\r\n             assert_equal(entry, mempool[x])\r\n \r\n             # Check that gettxspendingprevout is consistent with getrawmempool\r\n             witnesstx = self.nodes[0].getrawtransaction(txid=x, verbose=True)\r\n             for tx_in in witnesstx[\"vin\"]:\r\n                 spending_result = self.nodes[0].gettxspendingprevout([ {'txid' : tx_in[\"txid\"], 'vout' : tx_in[\"vout\"]} ])\r\n                 assert_equal(spending_result, [ {'txid' : tx_in[\"txid\"], 'vout' : tx_in[\"vout\"], 'spendingtxid' : x} ])\r\n \r\n             # Check that the descendant calculations are correct\r\n             assert_equal(entry['descendantcount'], descendant_count)\r\n             descendant_fees += entry['fees']['base']\r\n             assert_equal(entry['fees']['modified'], entry['fees']['base'])\r\n             assert_equal(entry['fees']['descendant'], descendant_fees)\r\n             descendant_vsize += entry['vsize']\r\n             assert_equal(entry['descendantsize'], descendant_vsize)\r\n             descendant_count += 1\r\n \r\n@@ -169,81 +168,81 @@ class MempoolPackagesTest(BitcoinTestFramework):\r\n         # Prioritise a transaction that has been mined, then add it back to the\r\n         # mempool by using invalidateblock.\r\n         self.nodes[0].prioritisetransaction(txid=chain[-1], fee_delta=2000)\r\n         self.nodes[0].invalidateblock(self.nodes[0].getbestblockhash())\r\n         # Keep node1's tip synced with node0\r\n         self.nodes[1].invalidateblock(self.nodes[1].getbestblockhash())\r\n \r\n         # Now check that the transaction is in the mempool, with the right modified fee\r\n         descendant_fees = 0\r\n         for x in reversed(chain):\r\n             entry = self.nodes[0].getmempoolentry(x)\r\n             descendant_fees += entry['fees']['base']\r\n             if (x == chain[-1]):\r\n                 assert_equal(entry['fees']['modified'], entry['fees']['base'] + Decimal(\"0.00002\"))\r\n             assert_equal(entry['fees']['descendant'], descendant_fees + Decimal(\"0.00002\"))\r\n \r\n         # Now test descendant chain limits\r\n         tx_children = []\r\n         # First create one parent tx with 10 children\r\n         tx_with_children = self.wallet.send_self_transfer_multi(from_node=self.nodes[0], num_outputs=10)\r\n         parent_transaction = tx_with_children[\"txid\"]\r\n         transaction_package = tx_with_children[\"new_utxos\"]\r\n \r\n         # Sign and send up to MAX_DESCENDANT transactions chained off the parent tx\r\n         chain = [] # save sent txs for the purpose of checking node1's mempool later (see below)\r\n-        for _ in range(DEFAULT_DESCENDANT_LIMIT - 1):\r\n+        for _ in range(DEFAULT_CLUSTER_LIMIT - 1):\r\n             utxo = transaction_package.pop(0)\r\n             new_tx = self.wallet.send_self_transfer_multi(from_node=self.nodes[0], num_outputs=10, utxos_to_spend=[utxo])\r\n             txid = new_tx[\"txid\"]\r\n             chain.append(txid)\r\n             if utxo['txid'] is parent_transaction:\r\n                 tx_children.append(txid)\r\n             transaction_package.extend(new_tx[\"new_utxos\"])\r\n \r\n         mempool = self.nodes[0].getrawmempool(True)\r\n-        assert_equal(mempool[parent_transaction]['descendantcount'], DEFAULT_DESCENDANT_LIMIT)\r\n+        assert_equal(mempool[parent_transaction]['descendantcount'], DEFAULT_CLUSTER_LIMIT)\r\n         assert_equal(sorted(mempool[parent_transaction]['spentby']), sorted(tx_children))\r\n \r\n         for child in tx_children:\r\n             assert_equal(mempool[child]['depends'], [parent_transaction])\r\n \r\n         # Check that node1's mempool is as expected, containing:\r\n         # - parent tx for descendant test\r\n         # - txs chained off parent tx (-> custom descendant limit)\r\n-        self.wait_until(lambda: len(self.nodes[1].getrawmempool()) == 2*CUSTOM_DESCENDANT_LIMIT, timeout=10)\r\n+        self.wait_until(lambda: len(self.nodes[1].getrawmempool()) == 2*CUSTOM_CLUSTER_LIMIT, timeout=10)\r\n         mempool0 = self.nodes[0].getrawmempool(False)\r\n         mempool1 = self.nodes[1].getrawmempool(False)\r\n         assert set(mempool1).issubset(set(mempool0))\r\n         assert parent_transaction in mempool1\r\n         for tx in chain:\r\n             if tx in mempool1:\r\n                 entry0 = self.nodes[0].getmempoolentry(tx)\r\n                 entry1 = self.nodes[1].getmempoolentry(tx)\r\n                 assert not entry0['unbroadcast']\r\n                 assert not entry1['unbroadcast']\r\n-                assert entry1[\"descendantcount\"] <= CUSTOM_DESCENDANT_LIMIT\r\n+                assert entry1[\"descendantcount\"] <= CUSTOM_CLUSTER_LIMIT\r\n                 assert_equal(entry1['fees']['base'], entry0['fees']['base'])\r\n                 assert_equal(entry1['vsize'], entry0['vsize'])\r\n                 assert_equal(entry1['depends'], entry0['depends'])\r\n \r\n         # Test reorg handling\r\n         # First, the basics:\r\n         self.generate(self.nodes[0], 1)\r\n         self.nodes[1].invalidateblock(self.nodes[0].getbestblockhash())\r\n         self.nodes[1].reconsiderblock(self.nodes[0].getbestblockhash())\r\n \r\n         # Now test the case where node1 has a transaction T in its mempool that\r\n         # depends on transactions A and B which are in a mined block, and the\r\n         # block containing A and B is disconnected, AND B is not accepted back\r\n         # into node1's mempool because its ancestor count is too high.\r\n \r\n         # Create 8 transactions, like so:\r\n         # Tx0 -> Tx1 (vout0)\r\n         #   \\--> Tx2 (vout1) -> Tx3 -> Tx4 -> Tx5 -> Tx6 -> Tx7\r\n         #\r\n         # Mine them in the next block, then generate a new tx8 that spends\r\n         # Tx1 and Tx7, and add to node1's mempool, then disconnect the\r\n         # last block.\r\n \r\n         # Create tx0 with 2 outputs\r\n         tx0 = self.wallet.send_self_transfer_multi(from_node=self.nodes[0], num_outputs=2)\r\n```",
      "created_at": "2024-09-05T20:00:12Z",
      "updated_at": "2024-09-05T22:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1746092665",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1746092665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1746098370",
      "pull_request_review_id": 2283792936,
      "id": 1746098370,
      "node_id": "PRRC_kwDOABII585oE1jC",
      "diff_hunk": "@@ -131,7 +132,9 @@ def run_test(self):\n         assert_equal(fees['base'] + Decimal('0.00001000'), fees['modified'])\n \n         self.log.debug('Verify all fields are loaded correctly')\n-        assert_equal(last_entry, self.nodes[0].getmempoolentry(txid=last_txid))\n+        new_entry = self.nodes[0].getmempoolentry(txid=last_txid)\n+        del new_entry[\"clusterid\"]\n+        assert_equal(last_entry, new_entry)",
      "path": "test/functional/mempool_persist.py",
      "position": null,
      "original_position": 15,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "can obviously ignore this but instead of deleting keys in two spots, could just do:\r\n`assert_equal({**last_entry, \"clusterid\": None}, {**new_entry, \"clusterid\": None})`",
      "created_at": "2024-09-05T20:06:20Z",
      "updated_at": "2024-09-05T22:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1746098370",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1746098370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1746201647",
      "pull_request_review_id": 2283792936,
      "id": 1746201647,
      "node_id": "PRRC_kwDOABII585oFOwv",
      "diff_hunk": "@@ -556,11 +544,6 @@ def test_truc_sibling_eviction(self):\n         tx_v3_replacement_only = self.wallet.create_self_transfer_multi(utxos_to_spend=utxos_for_conflict, fee_per_output=4000000)\n         # Override maxfeerate - it costs a lot to replace these 100 transactions.\n         assert node.testmempoolaccept([tx_v3_replacement_only[\"hex\"]], maxfeerate=0)[0][\"allowed\"]\n-        # Adding another one exceeds the limit.",
      "path": "test/functional/mempool_truc.py",
      "position": 72,
      "original_position": 71,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "heh, if you try 99 cluster conflicts + sibling eviction, that implies the new transaction has a vsize cap of 1kvB since it's a child, and since it will be north of 5kvB it will be rejected. I don't think we can have sibling eviction count meaningfully towards exceeding max cluster conflicts. Worth the coverage anyways?\r\n\r\n```\r\ndiff --git a/test/functional/mempool_truc.py b/test/functional/mempool_truc.py\r\nindex e3fcc45059..4e8e5943fc 100755\r\n--- a/test/functional/mempool_truc.py\r\n+++ b/test/functional/mempool_truc.py\r\n@@ -480,92 +480,101 @@ class MempoolTRUC(BitcoinTestFramework):\r\n \r\n         child_1 = self.wallet.send_self_transfer(from_node=node, version=3, utxo_to_spend=ancestor_tx[\"new_utxos\"][0])\r\n         child_2 = self.wallet.send_self_transfer(from_node=node, version=3, utxo_to_spend=ancestor_tx[\"new_utxos\"][1])\r\n         self.check_mempool([child_1[\"txid\"], child_2[\"txid\"]])\r\n \r\n         self.generate(node, 1)\r\n         self.check_mempool([])\r\n \r\n         # Create a reorg, causing ancestor_tx to exceed the 1-child limit\r\n         node.invalidateblock(block)\r\n         self.check_mempool([ancestor_tx[\"txid\"], child_1[\"txid\"], child_2[\"txid\"]])\r\n         assert_equal(node.getmempoolentry(ancestor_tx[\"txid\"])[\"descendantcount\"], 3)\r\n \r\n         # Create a replacement of child_1. It does not conflict with child_2.\r\n         child_1_conflict = self.wallet.send_self_transfer(from_node=node, version=3, utxo_to_spend=ancestor_tx[\"new_utxos\"][0], fee_rate=Decimal(\"0.01\"))\r\n \r\n         # Ensure child_1 and child_1_conflict are different transactions\r\n         assert (child_1_conflict[\"txid\"] != child_1[\"txid\"])\r\n         self.check_mempool([ancestor_tx[\"txid\"], child_1_conflict[\"txid\"], child_2[\"txid\"]])\r\n         assert_equal(node.getmempoolentry(ancestor_tx[\"txid\"])[\"descendantcount\"], 3)\r\n \r\n     @cleanup(extra_args=None)\r\n     def test_truc_sibling_eviction(self):\r\n         self.log.info(\"Test sibling eviction for TRUC\")\r\n         node = self.nodes[0]\r\n+\r\n+        # Seed sufficient utxos for the test\r\n+        self.generate(node, 100)\r\n+        self.wallet.rescan_utxos()\r\n+\r\n         tx_v3_parent = self.wallet.send_self_transfer_multi(from_node=node, num_outputs=2, version=3)\r\n         # This is the sibling to replace\r\n         tx_v3_child_1 = self.wallet.send_self_transfer(\r\n             from_node=node, utxo_to_spend=tx_v3_parent[\"new_utxos\"][0], fee_rate=DEFAULT_FEE * 2, version=3\r\n         )\r\n         assert tx_v3_child_1[\"txid\"] in node.getrawmempool()\r\n \r\n         self.log.info(\"Test tx must be higher feerate than sibling to evict it\")\r\n         tx_v3_child_2_rule6 = self.wallet.create_self_transfer(\r\n             utxo_to_spend=tx_v3_parent[\"new_utxos\"][1], fee_rate=DEFAULT_FEE, version=3\r\n         )\r\n         rule6_str = f\"insufficient fee (including sibling eviction), rejecting replacement {tx_v3_child_2_rule6['txid']}\"\r\n         assert_raises_rpc_error(-26, rule6_str, node.sendrawtransaction, tx_v3_child_2_rule6[\"hex\"])\r\n         self.check_mempool([tx_v3_parent['txid'], tx_v3_child_1['txid']])\r\n \r\n         self.log.info(\"Test tx must meet absolute fee rules to evict sibling\")\r\n         tx_v3_child_2_rule4 = self.wallet.create_self_transfer(\r\n             utxo_to_spend=tx_v3_parent[\"new_utxos\"][1], fee_rate=2 * DEFAULT_FEE + Decimal(\"0.00000001\"), version=3\r\n         )\r\n         rule4_str = f\"insufficient fee (including sibling eviction), rejecting replacement {tx_v3_child_2_rule4['txid']}, not enough additional fees to relay\"\r\n         assert_raises_rpc_error(-26, rule4_str, node.sendrawtransaction, tx_v3_child_2_rule4[\"hex\"])\r\n         self.check_mempool([tx_v3_parent['txid'], tx_v3_child_1['txid']])\r\n \r\n-        self.log.info(\"Test tx cannot cause more than 100 evictions including RBF and sibling eviction\")\r\n-        # First add 4 groups of 25 transactions.\r\n+        self.log.info(\"Test tx cannot cause more than 100 cluster conflicts including both explicit conflicts and sibling eviction\")\r\n+\r\n+        # First make 100 clusters, so sibling eviction counts as 101st conflicted cluster\r\n         utxos_for_conflict = []\r\n         txids_v2_100 = []\r\n-        for _ in range(4):\r\n+        for _ in range(100):\r\n             confirmed_utxo = self.wallet.get_utxo(confirmed_only=True)\r\n             utxos_for_conflict.append(confirmed_utxo)\r\n-            # 25 is within descendant limits\r\n-            chain_length = int(MAX_REPLACEMENT_CANDIDATES / 4)\r\n-            chain = self.wallet.create_self_transfer_chain(chain_length=chain_length, utxo_to_spend=confirmed_utxo)\r\n-            for item in chain:\r\n-                txids_v2_100.append(item[\"txid\"])\r\n-                node.sendrawtransaction(item[\"hex\"])\r\n+            tx = self.wallet.create_self_transfer(utxo_to_spend=confirmed_utxo)\r\n+            txids_v2_100.append(tx[\"txid\"])\r\n+            node.sendrawtransaction(tx[\"hex\"])\r\n         self.check_mempool(txids_v2_100 + [tx_v3_parent[\"txid\"], tx_v3_child_1[\"txid\"]])\r\n \r\n         # Replacing 100 transactions is fine\r\n         tx_v3_replacement_only = self.wallet.create_self_transfer_multi(utxos_to_spend=utxos_for_conflict, fee_per_output=4000000)\r\n         # Override maxfeerate - it costs a lot to replace these 100 transactions.\r\n         assert node.testmempoolaccept([tx_v3_replacement_only[\"hex\"]], maxfeerate=0)[0][\"allowed\"]\r\n+\r\n+        # Adding the sibling eviction exceeds the child TRUC vsize limit which is reported, not max clusters conflicted which is checked later.\r\n+        utxos_for_conflict.append(tx_v3_parent[\"new_utxos\"][1])\r\n+        tx_v3_child_2_rule5 = self.wallet.create_self_transfer_multi(utxos_to_spend=utxos_for_conflict, fee_per_output=4000000, version=3)\r\n+        tx_v3_violation_str = f\"TRUC-violation, version=3 child tx {tx_v3_child_2_rule5['txid']} (wtxid={tx_v3_child_2_rule5['wtxid']}) is too big: {tx_v3_child_2_rule5['tx'].get_vsize()} > 1000 virtual bytes\"\r\n+        assert_raises_rpc_error(-26, tx_v3_violation_str, node.sendrawtransaction, tx_v3_child_2_rule5[\"hex\"])\r\n         self.check_mempool(txids_v2_100 + [tx_v3_parent[\"txid\"], tx_v3_child_1[\"txid\"]])\r\n \r\n         self.log.info(\"Test sibling eviction is successful if it meets all RBF rules\")\r\n         tx_v3_child_2 = self.wallet.create_self_transfer(\r\n             utxo_to_spend=tx_v3_parent[\"new_utxos\"][1], fee_rate=DEFAULT_FEE*10, version=3\r\n         )\r\n         node.sendrawtransaction(tx_v3_child_2[\"hex\"])\r\n         self.check_mempool(txids_v2_100 + [tx_v3_parent[\"txid\"], tx_v3_child_2[\"txid\"]])\r\n \r\n         self.log.info(\"Test that it's possible to do a sibling eviction and RBF at the same time\")\r\n         utxo_unrelated_conflict = self.wallet.get_utxo(confirmed_only=True)\r\n         tx_unrelated_replacee = self.wallet.send_self_transfer(from_node=node, utxo_to_spend=utxo_unrelated_conflict)\r\n         assert tx_unrelated_replacee[\"txid\"] in node.getrawmempool()\r\n \r\n         fee_to_beat = max(int(tx_v3_child_2[\"fee\"] * COIN), int(tx_unrelated_replacee[\"fee\"]*COIN))\r\n \r\n         tx_v3_child_3 = self.wallet.create_self_transfer_multi(\r\n             utxos_to_spend=[tx_v3_parent[\"new_utxos\"][0], utxo_unrelated_conflict], fee_per_output=fee_to_beat*4, version=3\r\n         )\r\n         node.sendrawtransaction(tx_v3_child_3[\"hex\"])\r\n         self.check_mempool(txids_v2_100 + [tx_v3_parent[\"txid\"], tx_v3_child_3[\"txid\"]])\r\n \r\n     @cleanup(extra_args=None)\r\n     def test_reorg_sibling_eviction_1p2c(self):\r\n         node = self.nodes[0]\r\n```",
      "created_at": "2024-09-05T21:58:43Z",
      "updated_at": "2024-09-05T22:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1746201647",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1746201647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 532,
      "original_line": 532,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1746202560",
      "pull_request_review_id": 2283792936,
      "id": 1746202560,
      "node_id": "PRRC_kwDOABII585oFO_A",
      "diff_hunk": "@@ -18,7 +18,7 @@\n class MempoolUpdateFromBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000', '-limitancestorcount=100']]\n+        self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000', '-limitancestorcount=100', \"-limitclustersize=1000\"]]",
      "path": "test/functional/mempool_updatefromblock.py",
      "position": null,
      "original_position": 5,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "the rest of these args can be deleted and the test passes",
      "created_at": "2024-09-05T22:00:09Z",
      "updated_at": "2024-09-05T22:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1746202560",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1746202560"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1761997443",
      "pull_request_review_id": 2307894755,
      "id": 1761997443,
      "node_id": "PRRC_kwDOABII585pBfKD",
      "diff_hunk": "@@ -276,7 +274,7 @@ def test_replacement_feeperkb(self):\n         )[\"hex\"]\n \n         # This will raise an exception due to insufficient fee\n-        assert_raises_rpc_error(-26, \"insufficient fee\", self.nodes[0].sendrawtransaction, tx1b_hex, 0)\n+        assert_raises_rpc_error(-26, \"does not improve feerate diagram\", self.nodes[0].sendrawtransaction, tx1b_hex, 0)",
      "path": "test/functional/feature_rbf.py",
      "position": 32,
      "original_position": 46,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": 1745994360,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "good point. i wonder if we should just drop the feerate diagram language altogether and leave it at \"insufficient fee\"?",
      "created_at": "2024-09-16T21:40:15Z",
      "updated_at": "2024-09-17T16:51:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1761997443",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1761997443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 269,
      "original_line": 269,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1761997599",
      "pull_request_review_id": 2307894755,
      "id": 1761997599,
      "node_id": "PRRC_kwDOABII585pBfMf",
      "diff_hunk": "@@ -317,27 +315,6 @@ def test_spends_of_conflicting_outputs(self):\n         # This will raise an exception\n         assert_raises_rpc_error(-26, \"bad-txns-spends-conflicting-tx\", self.nodes[0].sendrawtransaction, tx2_hex, 0)\n \n-    def test_new_unconfirmed_inputs(self):",
      "path": "test/functional/feature_rbf.py",
      "position": 39,
      "original_position": 54,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": 1745984816,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2024-09-16T21:40:24Z",
      "updated_at": "2024-09-17T16:51:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1761997599",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1761997599"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 310,
      "original_line": 310,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763330087",
      "pull_request_review_id": 2307894755,
      "id": 1763330087,
      "node_id": "PRRC_kwDOABII585pGkgn",
      "diff_hunk": "@@ -30,6 +30,7 @@ def set_test_params(self):\n         self.extra_args = [\n             [\n                 \"-mempoolfullrbf=0\",\n+                \"-limitclustercount=200\",",
      "path": "test/functional/feature_rbf.py",
      "position": null,
      "original_position": 4,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": 1745982880,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed (it was needed in an intermediate commit).",
      "created_at": "2024-09-17T14:13:52Z",
      "updated_at": "2024-09-17T16:51:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1763330087",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763330087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763448694",
      "pull_request_review_id": 2307894755,
      "id": 1763448694,
      "node_id": "PRRC_kwDOABII585pHBd2",
      "diff_hunk": "@@ -45,7 +45,7 @@ def test_rbf_carveout_disallowed(self):\n         # B: First transaction in package, RBFs A by itself under individual evaluation, which would give it +1 descendant limit\n         # C: Second transaction in package, spends B. If the +1 descendant limit persisted, would make it into mempool\n \n-        self.restart_node(0, extra_args=self.extra_args[0] + [\"-limitancestorcount=2\", \"-limitdescendantcount=1\"])\n+        self.restart_node(0, extra_args=self.extra_args[0] + [\"-limitclustercount=1\"])",
      "path": "test/functional/mempool_limit.py",
      "position": null,
      "original_position": 5,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": 1745997228,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Dropped this test for now, and left a todo to add more tests to exercise different methods of mempool submission and ensure we never violate the cluster limits.",
      "created_at": "2024-09-17T15:24:10Z",
      "updated_at": "2024-09-17T16:51:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1763448694",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763448694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763454509",
      "pull_request_review_id": 2307894755,
      "id": 1763454509,
      "node_id": "PRRC_kwDOABII585pHC4t",
      "diff_hunk": "@@ -201,12 +198,12 @@ def test_package_rbf_additional_fees(self):\n \n     def test_package_rbf_max_conflicts(self):",
      "path": "test/functional/mempool_package_rbf.py",
      "position": 12,
      "original_position": 12,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": 1746041322,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! Taken.",
      "created_at": "2024-09-17T15:27:53Z",
      "updated_at": "2024-09-17T16:51:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1763454509",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763454509"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 199,
      "original_line": 199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763532380",
      "pull_request_review_id": 2307894755,
      "id": 1763532380,
      "node_id": "PRRC_kwDOABII585pHV5c",
      "diff_hunk": "@@ -33,8 +29,8 @@ def set_test_params(self):\n             [\n             ],\n             [\n-                \"-limitancestorcount={}\".format(CUSTOM_ANCESTOR_LIMIT),\n                 \"-limitdescendantcount={}\".format(CUSTOM_DESCENDANT_LIMIT),\n+                \"-limitclustercount={}\".format(CUSTOM_DESCENDANT_LIMIT),",
      "path": "test/functional/mempool_packages.py",
      "position": null,
      "original_position": 22,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": 1746092665,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! Taken.",
      "created_at": "2024-09-17T16:20:37Z",
      "updated_at": "2024-09-17T16:51:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1763532380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763532380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763536059",
      "pull_request_review_id": 2307894755,
      "id": 1763536059,
      "node_id": "PRRC_kwDOABII585pHWy7",
      "diff_hunk": "@@ -131,7 +132,9 @@ def run_test(self):\n         assert_equal(fees['base'] + Decimal('0.00001000'), fees['modified'])\n \n         self.log.debug('Verify all fields are loaded correctly')\n-        assert_equal(last_entry, self.nodes[0].getmempoolentry(txid=last_txid))\n+        new_entry = self.nodes[0].getmempoolentry(txid=last_txid)\n+        del new_entry[\"clusterid\"]\n+        assert_equal(last_entry, new_entry)",
      "path": "test/functional/mempool_persist.py",
      "position": null,
      "original_position": 15,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": 1746098370,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Taken.",
      "created_at": "2024-09-17T16:23:34Z",
      "updated_at": "2024-09-17T16:51:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1763536059",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763536059"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763546504",
      "pull_request_review_id": 2307894755,
      "id": 1763546504,
      "node_id": "PRRC_kwDOABII585pHZWI",
      "diff_hunk": "@@ -556,11 +544,6 @@ def test_truc_sibling_eviction(self):\n         tx_v3_replacement_only = self.wallet.create_self_transfer_multi(utxos_to_spend=utxos_for_conflict, fee_per_output=4000000)\n         # Override maxfeerate - it costs a lot to replace these 100 transactions.\n         assert node.testmempoolaccept([tx_v3_replacement_only[\"hex\"]], maxfeerate=0)[0][\"allowed\"]\n-        # Adding another one exceeds the limit.",
      "path": "test/functional/mempool_truc.py",
      "position": 72,
      "original_position": 71,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": 1746201647,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, right.  Given that this falls back to the vsize limit being exercised, I think this isn't really worth including?  Will leave this for now.",
      "created_at": "2024-09-17T16:30:48Z",
      "updated_at": "2024-09-17T16:51:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1763546504",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763546504"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 532,
      "original_line": 532,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763554660",
      "pull_request_review_id": 2307894755,
      "id": 1763554660,
      "node_id": "PRRC_kwDOABII585pHbVk",
      "diff_hunk": "@@ -18,7 +18,7 @@\n class MempoolUpdateFromBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000', '-limitancestorcount=100']]\n+        self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000', '-limitancestorcount=100', \"-limitclustersize=1000\"]]",
      "path": "test/functional/mempool_updatefromblock.py",
      "position": null,
      "original_position": 5,
      "commit_id": "8fa9fcbbc8091a5c55b6e5d4b834684262df8ac9",
      "original_commit_id": "ab35bca0972834a5ca2fc6220b8c6fa971815640",
      "in_reply_to_id": 1746202560,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, removed.",
      "created_at": "2024-09-17T16:37:08Z",
      "updated_at": "2024-09-17T16:51:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1763554660",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763554660"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    }
  ]
}