{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432",
    "id": 1725528875,
    "node_id": "PR_kwDOABII585m2Xsr",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29432",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29432.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29432.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/ecbd1e0d85ad9520caa0dcf44f559f538868892c",
    "number": 29432,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Stratum v2 Template Provider (take 3)",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Based on on @Fi3's https://github.com/bitcoin/bitcoin/compare/master...Fi3:bitcoin:PatchTemplates which is based on @ccdle12's #27854. I rebased it and re-wrote the commit history. Compared to #28983 it introduces EllSwift in the handshake and fixes various bugs. I used that opportunity to change the branch name, which makes testing against [SRI](https://github.com/stratum-mining/stratum) slightly easier. There's no conceptual discussion on #28983 so it can be ignored by reviewers.\r\n\r\nSee [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/sv2/doc/stratum-v2.md) for a brief description of Stratum v2 and the role of Bitcoin Core in that system..\r\n\r\n## What to test and review?\r\n\r\nI'll make separate pull requests for parts that are ready for detailed review.\r\n\r\n- [ ] #29346\r\n- [ ] #29295 \r\n- [ ] Custom signet mining improvement: #29032\r\n- [ ] Make nested pull-requests easier: #29274\r\n\r\nSee the [testing guide](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md#testing-guide) for various ways to test this PR. This branch is actively used by (testnet) pools, so it should be ready for high level review.\r\n\r\n### Related useful PRs\r\n\r\n- [ ] #26812\r\n\r\n## Implementation notes\r\n\r\nThere's roughly three layers:\r\n\r\n1. Noise encryption #29346\r\n2. Messages and transport layer\r\n3. The Template Provider\r\n\r\n* the `ci:` commits (#29274) are there to facilitate PR's against this branch, but they are not blocking for Stratum v2\r\n* the commits that move `transport.h` and some other stuff from `node` to `common` are not blocking. But in the longer run I'd like to see process separation between the node and the template provider.\r\n* I will occasionally add commits to _undo_ bug fixes, in order to stay compatible with the SRI `main` branch. Those will get dropped over time and can be ignored. \r\n\r\n## Contributing\r\n\r\nIf you want to help out with any of the issues below, please open a PR to my fork. I will then squash your commits into my own where needed. \r\n\r\n## Things left todo\r\n\r\n### Spec\r\n\r\n- [ ] modify spec to use `ProvideMissingTransactions`? (followup?)\r\n- [ ] pick a good default for `default_coinbase_tx_additional_output_size` (see `getblocktemplate` RPC)\r\n\r\n### Networking\r\n\r\n- [ ] add `-sv2bind` and `-sv2allowip`\r\n- [ ] optional `-sv2cert`\r\n- [ ] drop `Sv2TemplateProvider::SendBuf`, reuse p2p socket handling if possible\r\n- [ ] limit number of connected clients\r\n- [ ] maybe limit (number of) `coinbase_output_max_additional_size`\r\n- [ ] TMP / TODO comments at the top of `sv2_messages.h`\r\n\r\n### Testing\r\n\r\n- [ ] expand sv2_template_provider_tests\r\n- [ ] add transport fuzzer\r\n- [ ] add template provider fuzzer\r\n\r\n### Template generation and updating\r\n\r\n- [ ] group templates with the same `coinbase_tx_additional_output_size`\r\n- [ ] don't generate templates when no client is connected\r\n\r\n### Misc\r\n\r\n- [ ] move / refactor `GetMerklePathForCoinbase` helper (see Future Work in original PR, and https://github.com/stratum-mining/stratum/issues/567)\r\n- [ ] truncate long trace messages\r\n\r\n## Potential followups\r\n\r\n- [ ] implement Noise protocol and mock client in Python, add functional tests (based on `test/sv2_template_provider_tests.cpp`)\r\n- [ ] use process separation, e.g. a `bitcoin-tp` binary, see [multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/design/multiprocess.md?plain=1)\r\n- [ ] make template updates push based, on top of Cluster Mempool, see [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md) (for new blocks it's already push based)\r\n- [ ] push empty template for the next block (downstream can ignore or use, https://github.com/stratum-mining/stratum/issues/715)\r\n  - send prevhash for this template as soon as any new block arrives\r\n- [ ] push optimistic template for the next block\r\n  - send prevhash if and only if our template won (i.e. we got a `SubmitSolution` message)",
    "labels": [],
    "created_at": "2024-02-14T11:34:49Z",
    "updated_at": "2024-04-02T01:22:14Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "745f9774a3fa48e9a3597d55d0b420175a72de48",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "Sjors:sv2",
      "ref": "sv2",
      "sha": "ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 92390696,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MjM5MDY5Ng==",
        "name": "bitcoin",
        "full_name": "Sjors/bitcoin",
        "owner": {
          "login": "Sjors",
          "id": 10217,
          "node_id": "MDQ6VXNlcjEwMjE3",
          "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Sjors",
          "html_url": "https://github.com/Sjors",
          "followers_url": "https://api.github.com/users/Sjors/followers",
          "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
          "organizations_url": "https://api.github.com/users/Sjors/orgs",
          "repos_url": "https://api.github.com/users/Sjors/repos",
          "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Sjors/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/Sjors/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Sjors/bitcoin",
        "archive_url": "https://api.github.com/repos/Sjors/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Sjors/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Sjors/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Sjors/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Sjors/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Sjors/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Sjors/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Sjors/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Sjors/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Sjors/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Sjors/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Sjors/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Sjors/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Sjors/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Sjors/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Sjors/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Sjors/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Sjors/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Sjors/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Sjors/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Sjors/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Sjors/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Sjors/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Sjors/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Sjors/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Sjors/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Sjors/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Sjors/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Sjors/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Sjors/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Sjors/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Sjors/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Sjors/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Sjors/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Sjors/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Sjors/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Sjors/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Sjors/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Sjors/bitcoin/hooks",
        "svn_url": "https://github.com/Sjors/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 7,
        "stargazers_count": 5,
        "watchers_count": 5,
        "size": 233239,
        "default_branch": "sv2",
        "open_issues_count": 4,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-03-22T08:48:14Z",
        "created_at": "2017-05-25T10:05:54Z",
        "updated_at": "2024-03-27T10:16:40Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "71b63195b30b2fa0dff20ebb262ce7566dd5d673",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34974,
        "stargazers_count": 75196,
        "watchers_count": 75196,
        "size": 254241,
        "default_branch": "master",
        "open_issues_count": 722,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-04-01T21:21:22Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-04-02T01:57:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 7438,
    "deletions": 1973,
    "changed_files": 48,
    "commits": 22,
    "review_comments": 12,
    "comments": 12
  },
  "events": [
    {
      "event": "mentioned",
      "id": 11800505244,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAK_XWuc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11800505244",
      "actor": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T11:34:50Z"
    },
    {
      "event": "subscribed",
      "id": 11800505253,
      "node_id": "SE_lADOABII585_NKHDzwAAAAK_XWul",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11800505253",
      "actor": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T11:34:50Z"
    },
    {
      "event": "mentioned",
      "id": 11800505265,
      "node_id": "MEE_lADOABII585_NKHDzwAAAAK_XWux",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11800505265",
      "actor": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T11:34:50Z"
    },
    {
      "event": "subscribed",
      "id": 11800505291,
      "node_id": "SE_lADOABII585_NKHDzwAAAAK_XWvL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11800505291",
      "actor": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T11:34:50Z"
    },
    {
      "event": "commented",
      "id": 1943589322,
      "node_id": "IC_kwDOABII585z2NHK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1943589322",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T11:34:52Z",
      "updated_at": "2024-04-02T01:22:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29432).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29775](https://github.com/bitcoin/bitcoin/pull/29775) ([DO NOT MERGE] testnet4 including PoW difficulty adjustment fix by fjahr)\n* [#29675](https://github.com/bitcoin/bitcoin/pull/29675) (wallet: Be able to receive and spend inputs involving MuSig2 aggregate keys by achow101)\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo/LogDebug over LogPrintf/LogPrint by maflcko)\n* [#29623](https://github.com/bitcoin/bitcoin/pull/29623) (Simplify network-adjusted time warning logic by stickies-v)\n* [#29419](https://github.com/bitcoin/bitcoin/pull/29419) (log: deduplicate category names and improve logging.cpp by vasild)\n* [#29418](https://github.com/bitcoin/bitcoin/pull/29418) (rpc: provide per message stats for global traffic via new RPC 'getnetmsgstats' by vasild)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n* [#29274](https://github.com/bitcoin/bitcoin/pull/29274) (Support self-hosted Cirrus workers on forks by Sjors)\n* [#29071](https://github.com/bitcoin/bitcoin/pull/29071) (refactor: Remove Span operator==, Use std::ranges::equal by maflcko)\n* [#28417](https://github.com/bitcoin/bitcoin/pull/28417) (contrib/signet/miner updates by ajtowns)\n* [#28122](https://github.com/bitcoin/bitcoin/pull/28122) (Silent Payments: Implement BIP352 by josibake)\n* [#27679](https://github.com/bitcoin/bitcoin/pull/27679) (ZMQ: Support UNIX domain sockets by pinheadmz)\n* [#26966](https://github.com/bitcoin/bitcoin/pull/26966) (index: blockfilter initial sync speedup, parallelize process by furszy)\n* [#26697](https://github.com/bitcoin/bitcoin/pull/26697) (logging: use bitset for categories by LarryRuane)\n* [#26593](https://github.com/bitcoin/bitcoin/pull/26593) (tracing: Only prepare tracepoint arguments when actually tracing by 0xB10C)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1943589322",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T11:35:18Z",
      "updated_at": "2024-02-14T11:35:18Z",
      "source": {
        "issue": {
          "id": 2020711772,
          "node_id": "PR_kwDOABII585g48_Q",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28983",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28983/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28983/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28983/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28983",
          "number": 28983,
          "state": "closed",
          "state_reason": null,
          "title": "Stratum v2 Template Provider (take 2)",
          "body": "Based on on @Fi3's https://github.com/bitcoin/bitcoin/compare/master...Fi3:bitcoin:PatchTemplates which is based on @ccdle12's #27854. I rebased it and re-wrote the commit history. See the original branch for the evolution of the spec.\r\n\r\nSee [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md) for a brief description of Stratum v2 and the role of Bitcoin Core in that system..\r\n\r\n## What to test and review? \r\n\r\n- [ ] #29295 \r\n- [ ] Custom signet mining improvement: #29032\r\n- [ ] Make nested pull-requests easier: #29274\r\n\r\nSee the [testing guide](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md#testing-guide) for various ways to test this PR. This branch is actively used by (testnet) pools, so it should be ready for high level review.\r\n\r\nI'll make separate pull requests for parts that are ready for detailed review. Probably starting with ECDH and the Noise Protocol.\r\n\r\n## Implementation notes\r\n\r\nSilent Payments also needs the ECDH module, so I cherry-picked the commit from #28122. It uses ECDH is a slightly different way, but perhaps there's more overlap to be had.\r\n\r\n## Contributing\r\n\r\nIf you want to help out with any of the issues below, please open a PR to my fork. I will then squash your commits into my own where needed. \r\n\r\n## Upstream issues\r\n\r\n### Spec\r\n\r\n- [ ] modify spec to use `ProvideMissingTransactions`? (followup?)\r\n- [ ] pick a good default for `default_coinbase_tx_additional_output_size` (see `getblocktemplate` RPC)\r\n\r\n### Noise\r\n\r\n- [ ] use EllSwift https://github.com/stratum-mining/sv2-spec/pull/66, implemented in https://github.com/Sjors/bitcoin/pull/28\r\n- [ ] certificate signing issue: https://github.com/stratum-mining/stratum/issues/717, fix in https://github.com/Sjors/bitcoin/pull/29\r\n\r\n### Networking\r\n\r\n- [ ] add `-sv2bind` and `-sv2allowip`\r\n- [x] persist static key (needs #29229)\r\n- [ ] optional `-sv2cert`\r\n- [x] create `Sv2Transport` subclass similar to `V2Transport`: https://github.com/Sjors/bitcoin/pull/27\r\n- [ ] drop `Sv2TemplateProvider::SendBuf`, reuse p2p socket handling if possible\r\n- [ ] limit number of connected clients\r\n- [ ] maybe limit (number of) `coinbase_output_max_additional_size`\r\n- [ ] TMP / TODO comments at the top of `sv2_messages.h`\r\n- [ ] adjust base58 encoding of authority public key https://github.com/stratum-mining/stratum/issues/721\r\n\r\n### Testing\r\n\r\n- [ ] expand sv2_template_provider_tests\r\n- [ ] add transport fuzzer\r\n- [ ] add template provider fuzzer\r\n\r\n### Template generation and updating\r\n\r\n- [x] hold on to templates a bit after a block is found https://github.com/stratum-mining/stratum/issues/709 (in case of race to prevent downstream crashes, though we still wouldn't relay it without additional changes)\r\n- [ ] hold on to template transactions even if the mempool drops them (for some time)\r\n- [ ] group templates with the same `coinbase_tx_additional_output_size`\r\n- [ ] don't generate templates when no client is connected\r\n\r\n### Misc\r\n\r\n- [ ] move / refactor `GetMerklePathForCoinbase` helper (see Future Work in original PR, and https://github.com/stratum-mining/stratum/issues/567)\r\n- [ ] truncate long trace messages\r\n\r\n## Potential followups\r\n\r\n- [ ] implement Noise protocol and mock client in Python, add functional tests (based on `test/sv2_template_provider_tests.cpp`)\r\n- [ ] use process separation, e.g. a `bitcoin-tp` binary, see [multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/design/multiprocess.md?plain=1)\r\n- [ ] make template updates push based, on top of Cluster Mempool, see [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md) (for new blocks it's already push based)\r\n- [ ] push empty template for the next block (downstream can ignore or use, https://github.com/stratum-mining/stratum/issues/715)\r\n  - send prevhash for this template as soon as any new block arrives\r\n- [ ] push optimistic template for the next block\r\n  - send prevhash if and only if our template won (i.e. we got a `SubmitSolution` message)",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118378960,
              "node_id": "MDU6TGFiZWwxMTgzNzg5NjA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mining",
              "name": "Mining",
              "color": "c7def8",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28983",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28983",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28983.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28983.patch"
          },
          "closed_at": "2024-02-14T11:35:17Z",
          "created_at": "2023-12-01T11:39:27Z",
          "updated_at": "2024-02-14T11:35:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T11:46:06Z",
      "updated_at": "2024-02-14T11:46:06Z",
      "source": {
        "issue": {
          "id": 2105856059,
          "node_id": "PR_kwDOABII585lWGHe",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29346",
          "number": 29346,
          "state": "open",
          "state_reason": null,
          "title": "Stratum v2 Noise Protocol",
          "body": "Parent PR #29432 \r\n\r\nThis is the first part of the Stratum v2 Template Provider change that can be a standalone pull request.\r\n\r\nThe Noise Protocol Framework is defined here: https://noiseprotocol.org/noise.html\r\n\r\nIt's quite similar to BIP324. The main differences are explained here, including why Stratum v2 can't use BIP234 (yet): https://delvingbitcoin.org/t/stratum-v2-noise-protocol-bip324-nuggets/413\r\n\r\nThe implementation is based on revision 38, 2018-07-11 (most recent at the time of writing).\r\n\r\nThe Stratum v2 spec defines the specific choice of ciphers: https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\r\n\r\nThis protocol has been implemented in the Stratum Reference Implementation (SRI, using [rust-bitcoin](https://github.com/rust-bitcoin/rust-bitcoin)). https://github.com/stratum-mining/stratum\r\n\r\nIt has also been (independently) implemented in BraiinsOS. This part is currently not open source, and it's behind on some recent changes.\r\n\r\nThe classes in `sv2_noise.h` attempt to stay close to the paper, whereas the test and fuzzer code borrow heavily from BIP324.\r\n\r\nIt's ready for review, but not for merge:\r\n\r\n1. The parent PR may need more conceptual review (and perhaps the entire spec, but that would really slow things down)\r\n2. We could decide to not support Noise encryption at all and require users to install separate software for that. Code review of this PR could help inform that decision.\r\n\r\nYou can see this code in action in the parent PR #29432.\r\n\r\nInitial seed corpus: https://github.com/bitcoin-core/qa-assets/pull/169\r\n\r\n---\r\n\r\nThe following spec change is already implemented in this PR and in SRI:\r\n\r\n* The spec is being modified to use EllSwift (instead of regular x-only) for the encoding of public keys and ECDH: https://github.com/stratum-mining/sv2-spec/pull/66",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29346",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29346.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29346.patch"
          },
          "created_at": "2024-01-29T16:14:50Z",
          "updated_at": "2024-04-02T01:49:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 11801065208,
      "node_id": "LE_lADOABII585_NKHDzwAAAAK_Zfb4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11801065208",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T12:27:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1943673479,
      "node_id": "IC_kwDOABII585z2hqH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1943673479",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T12:27:21Z",
      "updated_at": "2024-02-14T12:27:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21562393655</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1943673479",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11801845077,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAK_cd1V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11801845077",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T13:35:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11801877404,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAK_cluc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11801877404",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T13:38:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11802374037,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAK_ee-V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11802374037",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T14:15:45Z"
    },
    {
      "event": "reviewed",
      "id": 1880414088,
      "node_id": "PRR_kwDOABII585wFNeI",
      "url": null,
      "actor": null,
      "commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#pullrequestreview-1880414088",
      "submitted_at": "2024-02-14T14:21:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T14:46:20Z",
      "updated_at": "2024-02-14T14:46:20Z",
      "source": {
        "issue": {
          "id": 2129010635,
          "node_id": "PR_kwDOABII585mk94S",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29419",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29419/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29419/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29419/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29419",
          "number": 29419,
          "state": "open",
          "state_reason": null,
          "title": "log: deduplicate category names and improve logging.cpp",
          "body": "The code in `logging.cpp` needs to: \r\n* Get the category name given the flag (e.g. `BCLog::PRUNE` -> `\"prune\"`)\r\n* Get the flag given the category name (e.g. `\"prune\"` -> `BCLog::PRUNE`)\r\n* Get the list of category names sorted in alphabetical order\r\n\r\nAchieve this by using the proper std containers. The result is\r\n* less code (the diff of the first commit is +62 / -129)\r\n* faster code (to linear search and no copy+sort)\r\n* more maintainable code (the categories are no longer duplicated in `LogCategories[]` and `LogCategoryToStr()`)\r\n\r\nThis behavior is preserved:\r\n`BCLog::NONE` -> `\"\"` (lookup by `LogCategoryToStr()`)\r\n`\"\"` -> `BCLog::ALL` (lookup by `GetLogCategory(\"\")`)\r\n\r\n---\r\n\r\nAlso remove unused `BCLog::UTIL`.\r\n\r\n---\r\n\r\nThese changes (modulo the `BCLog::UTIL` removal) are part of https://github.com/bitcoin/bitcoin/pull/29415 but they make sense on their own and would be good to have them, regardless of the fate of https://github.com/bitcoin/bitcoin/pull/29415. Also, if this is merged, that would reduce the size of https://github.com/bitcoin/bitcoin/pull/29415, thus the current standalone PR.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29419",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29419",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29419.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29419.patch"
          },
          "created_at": "2024-02-11T14:28:18Z",
          "updated_at": "2024-03-22T17:24:59Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T14:47:51Z",
      "updated_at": "2024-02-14T14:47:51Z",
      "source": {
        "issue": {
          "id": 2128913200,
          "node_id": "PR_kwDOABII585mkqvf",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29418",
          "number": 29418,
          "state": "open",
          "state_reason": null,
          "title": "rpc: provide per message stats for global traffic via new RPC 'getnetmsgstats'",
          "body": "Introduce a new RPC, `getnetmsgstats` to retrieve traffic bytes and count of messages possibly broken down by:\r\n* direction (sent or received)\r\n* network (ipv4, tor, etc)\r\n* connection type (outbound-full-relay, block-relay-only, etc)\r\n* message type (verack, ping, etc)\r\n\r\nImplements: https://github.com/bitcoin/bitcoin/issues/26337 Add per message stats to getnettotals rpc\r\n\r\n---\r\n\r\nExamples:\r\n\r\n<details>\r\n<summary>bitcoin-cli getnetmsgstats '[\"direction\", \"network\", \"connection_type\", \"message_type\"]'</summary>\r\n\r\n```\r\n{\r\n  \"bytes\": 5392756,\r\n  \"count\": 32683\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>bitcoin-cli getnetmsgstats '[\"direction\", \"network\", \"connection_type\"]'</summary>\r\n\r\n```\r\n{\r\n  \"sendcmpct\": {\r\n    \"bytes\": 975,\r\n    \"count\": 31\r\n  },\r\n  \"sendaddrv2\": {\r\n    \"bytes\": 816,\r\n    \"count\": 28\r\n  },\r\n  \"headers\": {\r\n    \"bytes\": 1786,\r\n    \"count\": 28\r\n  },\r\n  \"feefilter\": {\r\n    \"bytes\": 816,\r\n    \"count\": 27\r\n  },\r\n  \"version\": {\r\n    \"bytes\": 4843,\r\n    \"count\": 37\r\n  },\r\n  \"ping\": {\r\n    \"bytes\": 1104,\r\n    \"count\": 36\r\n  },\r\n  \"getaddr\": {\r\n    \"bytes\": 384,\r\n    \"count\": 13\r\n  },\r\n  \"block\": {\r\n    \"bytes\": 5128467,\r\n    \"count\": 20365\r\n  },\r\n  \"getheaders\": {\r\n    \"bytes\": 29436,\r\n    \"count\": 28\r\n  },\r\n  \"pong\": {\r\n    \"bytes\": 1040,\r\n    \"count\": 34\r\n  },\r\n  \"getdata\": {\r\n    \"bytes\": 1218925,\r\n    \"count\": 20008\r\n  },\r\n  \"sendheaders\": {\r\n    \"bytes\": 447,\r\n    \"count\": 16\r\n  },\r\n  \"wtxidrelay\": {\r\n    \"bytes\": 816,\r\n    \"count\": 28\r\n  },\r\n  \"addrv2\": {\r\n    \"bytes\": 301161,\r\n    \"count\": 25\r\n  },\r\n  \"verack\": {\r\n    \"bytes\": 816,\r\n    \"count\": 28\r\n  }\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>bitcoin-cli getnetmsgstats '[\"direction\", \"connection_type\", \"message_type\"]'</summary>\r\n\r\n```\r\n{\r\n  \"i2p\": {\r\n    \"bytes\": 1311861,\r\n    \"count\": 8226\r\n  },\r\n  \"onion\": {\r\n    \"bytes\": 3932760,\r\n    \"count\": 24272\r\n  },\r\n  \"ipv6\": {\r\n    \"bytes\": 631265,\r\n    \"count\": 3362\r\n  },\r\n  \"ipv4\": {\r\n    \"bytes\": 1300106,\r\n    \"count\": 7773\r\n  }\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>bitcoin-cli getnetmsgstats</summary>\r\n\r\n```\r\n{\r\n  \"recv\": {\r\n    \"i2p\": {\r\n      \"manual\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 90,\r\n          \"count\": 3\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 309,\r\n          \"count\": 3\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 87,\r\n          \"count\": 3\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 408,\r\n          \"count\": 3\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 87,\r\n          \"count\": 3\r\n        },\r\n        \"block\": {\r\n          \"bytes\": 432950,\r\n          \"count\": 1794\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 3150,\r\n          \"count\": 3\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 87,\r\n          \"count\": 3\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        },\r\n        \"addrv2\": {\r\n          \"bytes\": 68508,\r\n          \"count\": 3\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        }\r\n      }\r\n    },\r\n    \"onion\": {\r\n      \"block-relay-only\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 66,\r\n          \"count\": 2\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 106,\r\n          \"count\": 1\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 32,\r\n          \"count\": 1\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 126,\r\n          \"count\": 1\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 64,\r\n          \"count\": 2\r\n        },\r\n        \"block\": {\r\n          \"bytes\": 478479,\r\n          \"count\": 1896\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 1053,\r\n          \"count\": 1\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 64,\r\n          \"count\": 2\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        }\r\n      },\r\n      \"outbound-full-relay\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 195,\r\n          \"count\": 6\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 527,\r\n          \"count\": 5\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 157,\r\n          \"count\": 5\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 639,\r\n          \"count\": 5\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 189,\r\n          \"count\": 6\r\n        },\r\n        \"block\": {\r\n          \"bytes\": 1465688,\r\n          \"count\": 5957\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 5262,\r\n          \"count\": 5\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 189,\r\n          \"count\": 6\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        },\r\n        \"addrv2\": {\r\n          \"bytes\": 120693,\r\n          \"count\": 9\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        }\r\n      }\r\n    },\r\n    \"ipv6\": {\r\n      \"manual\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 120,\r\n          \"count\": 4\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 132,\r\n          \"count\": 4\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 412,\r\n          \"count\": 4\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 116,\r\n          \"count\": 4\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 544,\r\n          \"count\": 4\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 116,\r\n          \"count\": 4\r\n        },\r\n        \"block\": {\r\n          \"bytes\": 138074,\r\n          \"count\": 583\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 4200,\r\n          \"count\": 4\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 116,\r\n          \"count\": 4\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 132,\r\n          \"count\": 4\r\n        },\r\n        \"addrv2\": {\r\n          \"bytes\": 93436,\r\n          \"count\": 4\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 132,\r\n          \"count\": 4\r\n        }\r\n      },\r\n      \"outbound-full-relay\": {\r\n        \"version\": {\r\n          \"bytes\": 126,\r\n          \"count\": 1\r\n        }\r\n      }\r\n    },\r\n    \"ipv4\": {\r\n      \"outbound-full-relay\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 66,\r\n          \"count\": 2\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 106,\r\n          \"count\": 1\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 32,\r\n          \"count\": 1\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 252,\r\n          \"count\": 2\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 32,\r\n          \"count\": 1\r\n        },\r\n        \"block\": {\r\n          \"bytes\": 313988,\r\n          \"count\": 1255\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 1053,\r\n          \"count\": 1\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 32,\r\n          \"count\": 1\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"addrv2\": {\r\n          \"bytes\": 40,\r\n          \"count\": 1\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"sent\": {\r\n    \"i2p\": {\r\n      \"manual\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 90,\r\n          \"count\": 3\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 66,\r\n          \"count\": 3\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 87,\r\n          \"count\": 3\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 544,\r\n          \"count\": 4\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 87,\r\n          \"count\": 3\r\n        },\r\n        \"getaddr\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 3150,\r\n          \"count\": 3\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 87,\r\n          \"count\": 3\r\n        },\r\n        \"getdata\": {\r\n          \"bytes\": 105382,\r\n          \"count\": 1789\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        }\r\n      }\r\n    },\r\n    \"onion\": {\r\n      \"block-relay-only\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 33,\r\n          \"count\": 1\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 25,\r\n          \"count\": 1\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 127,\r\n          \"count\": 1\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 64,\r\n          \"count\": 2\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 1053,\r\n          \"count\": 1\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 64,\r\n          \"count\": 2\r\n        },\r\n        \"getdata\": {\r\n          \"bytes\": 115932,\r\n          \"count\": 1884\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        }\r\n      },\r\n      \"outbound-full-relay\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 162,\r\n          \"count\": 5\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 122,\r\n          \"count\": 5\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 157,\r\n          \"count\": 5\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 771,\r\n          \"count\": 6\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 221,\r\n          \"count\": 7\r\n        },\r\n        \"getaddr\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 5262,\r\n          \"count\": 5\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 189,\r\n          \"count\": 6\r\n        },\r\n        \"getdata\": {\r\n          \"bytes\": 363478,\r\n          \"count\": 5932\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        },\r\n        \"addrv2\": {\r\n          \"bytes\": 231,\r\n          \"count\": 4\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        }\r\n      }\r\n    },\r\n    \"ipv6\": {\r\n      \"manual\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 120,\r\n          \"count\": 4\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 132,\r\n          \"count\": 4\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 88,\r\n          \"count\": 4\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 116,\r\n          \"count\": 4\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 544,\r\n          \"count\": 4\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 116,\r\n          \"count\": 4\r\n        },\r\n        \"getaddr\": {\r\n          \"bytes\": 132,\r\n          \"count\": 4\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 4200,\r\n          \"count\": 4\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 116,\r\n          \"count\": 4\r\n        },\r\n        \"getdata\": {\r\n          \"bytes\": 35492,\r\n          \"count\": 584\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 132,\r\n          \"count\": 4\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 132,\r\n          \"count\": 4\r\n        }\r\n      },\r\n      \"outbound-full-relay\": {\r\n        \"version\": {\r\n          \"bytes\": 254,\r\n          \"count\": 2\r\n        }\r\n      }\r\n    },\r\n    \"ipv4\": {\r\n      \"outbound-full-relay\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 33,\r\n          \"count\": 1\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 25,\r\n          \"count\": 1\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 32,\r\n          \"count\": 1\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 508,\r\n          \"count\": 4\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 32,\r\n          \"count\": 1\r\n        },\r\n        \"getaddr\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 1053,\r\n          \"count\": 1\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 32,\r\n          \"count\": 1\r\n        },\r\n        \"getdata\": {\r\n          \"bytes\": 76531,\r\n          \"count\": 1231\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n</details>\r\n\r\n---\r\n\r\nPrevious incarnations of this:\r\nhttps://github.com/bitcoin/bitcoin/pull/27534 rpc: add 'getnetmsgstats', new rpc to view network message statistics (Thank you, @satsie!)\r\nhttps://github.com/bitcoin/bitcoin/pull/28926 rpc: add 'getnetmsgstats' RPC (Thank you, @willcl-ark!)",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29418",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29418.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29418.patch"
          },
          "created_at": "2024-02-11T09:32:51Z",
          "updated_at": "2024-03-29T01:37:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T14:49:23Z",
      "updated_at": "2024-02-14T14:49:23Z",
      "source": {
        "issue": {
          "id": 2127176950,
          "node_id": "PR_kwDOABII585me8Nn",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29415",
          "number": 29415,
          "state": "open",
          "state_reason": null,
          "title": "Broadcast own transactions only via short-lived Tor or I2P connections",
          "body": "To improve privacy, broadcast locally submitted transactions (from the `sendrawtransaction` RPC) to the P2P network only via Tor or I2P short-lived connections.\r\n\r\n* Introduce a new connection type for private broadcast of transactions with the following properties:\r\n  * started whenever there are local transactions to be sent\r\n  * only opened to Tor or I2P peers\r\n  * opened regardless of max connections limits\r\n  * after handshake is completed one local transaction is pushed to the peer, `PING` is sent and after receiving `PONG` the connection is closed\r\n  * ignore all incoming messages after handshake is completed (except `PONG`)\r\n\r\n* Broadcast transactions submitted via `sendrawtransaction` using this new mechanism, to a few Tor or I2P peers. Keep doing this until we receive an `INV` about this transaction from one of our ordinary peers (this takes about 1 second on mainnet).\r\n\r\n* The transaction is stored in peerman and does not enter the mempool.\r\n\r\n* Once we get an `INV` from somebody, then the normal flow executes: we request the transaction with `GETDATA`, receive it with a `TX` message, put it in our mempool and broadcast it to all our existent connections (as if we see it for the first time).\r\n\r\n* After we receive the full transaction as a `TX` message, in reply to our `GETDATA` request, only then consider the transaction has propagated through the network and remove it from the storage in peerman, ending the private broadcast attempts.\r\n\r\nThe messages exchange should look like this:\r\n\r\n```\r\ntx-sender >--- connect -------> tx-recipient\r\ntx-sender >--- VERSION -------> tx-recipient (dummy VERSION with no revealing data)\r\ntx-sender <--- VERSION -------< tx-recipient\r\ntx-sender <--- WTXIDRELAY ----< tx-recipient (maybe)\r\ntx-sender <--- SENDADDRV2 ----< tx-recipient (maybe)\r\ntx-sender <--- SENDTXRCNCL ---< tx-recipient (maybe)\r\ntx-sender <--- VERACK --------< tx-recipient\r\ntx-sender >--- VERACK --------> tx-recipient\r\ntx-sender >--- TX ------------> tx-recipient\r\ntx-sender >--- PING ----------> tx-recipient\r\ntx-sender <--- PONG ----------< tx-recipient\r\ntx-sender disconnects\r\n```\r\n\r\nWhenever a new transaction is received from `sendrawtransaction` RPC, the node will send it to 5 (`NUM_PRIVATE_BROADCAST_PER_TX`) recipients right away. If after 10-15 mins we still have not heard anything about the transaction from the network, then it will be sent to 1 more peer (see `PeerManagerImpl::ReattemptPrivateBroadcast()`).\r\n\r\nA few considerations:\r\n* The short-lived private broadcast connections are very cheap and fast wrt network traffic. It is expected that some of those peers could blackhole the transaction. Just one honest/proper peer is enough for successful propagation.\r\n* The peers that receive the transaction could deduce that this is initial transaction broadcast from the transaction originator. This is ok, they can't identify the sender.\r\n\r\n---\r\n\r\nSome explanation of the commits:\r\n\r\n* Independent improvement (also opened as a standalone PR at https://github.com/bitcoin/bitcoin/pull/29419):\r\n  * `log: deduplicate category names and improve logging.cpp`\r\n\r\n* New logging category and config option to enable private broadcast\r\n  * `log: introduce a new category for private broadcast`\r\n  * `init: introduce a new option to enable/disable private broadcast`\r\n\r\n* Implement the private broadcast connection handling on the `CConnman` side:\r\n  * `net: introduce a new connection type for private broadcast`\r\n  * `net: move peers counting before grant acquisition in ThreadOpenConnections()`\r\n  * `net: implement opening PRIVATE_BROADCAST connections`\r\n\r\n* Prepare `BroadcastTransaction()` for private broadcast requests:\r\n  * `net_processing: rename RelayTransaction to better describe what it does`\r\n  * `node: change a tx-relay on/off flag to a tri-state`\r\n  * `net_processing: store transactions for private broadcast in PeerManager`\r\n\r\n* Implement the private broadcast connection handling on the `PeerManager` side:\r\n  * `net_processing: reorder the code that handles the VERSION message`\r\n  * `net_processing: handle ConnectionType::PRIVATE_BROADCAST connections`\r\n  * `net_processing: stop private broadcast of a transaction after round-trip`\r\n  * `net_processing: retry private broadcast`\r\n\r\n* Engage the new functionality from `sendrawtransaction`:\r\n  * `rpc: use private broadcast from sendrawtransaction RPC if -privatebroadcast is ON`\r\n\r\n* Independent test framework improvements (also opened as a standalone PR at https://github.com/bitcoin/bitcoin/pull/29420):\r\n  * `test: improve debug log message from P2PConnection::connection_made()`\r\n  * `test: extend the SOCKS5 Python proxy to actually connect to a destination`\r\n  * `test: support WTX INVs from P2PDataStore and fix a comment`\r\n  * `test: set P2PConnection::p2p_connected_to_node in peer_connect_helper()`\r\n\r\n* New functional test that exercies some of the new code:\r\n  * `test: add functional test for local tx relay`\r\n\r\n---\r\n\r\nThis addresses:\r\nhttps://github.com/bitcoin/bitcoin/issues/3828 Clients leak IPs if they are recipients of a transaction\r\nhttps://github.com/bitcoin/bitcoin/issues/14692 Can't configure bitocoind to only send tx via Tor but receive clearnet transactions\r\nhttps://github.com/bitcoin/bitcoin/issues/19042 Tor-only transaction broadcast onlynet=onion alternative\r\nhttps://github.com/bitcoin/bitcoin/issues/24557 Option for receive events with all networks, but send transactions and/or blocks only with anonymous network[s]?\r\nhttps://github.com/bitcoin/bitcoin/issues/25450 Ability to broadcast wallet transactions only via dedicated oneshot Tor connections\r\n\r\nRelated, but different:\r\nhttps://github.com/bitcoin/bitcoin/issues/21876 Broadcast a transaction to specific nodes\r\nhttps://github.com/bitcoin/bitcoin/issues/28636 new RPC: sendrawtransactiontopeer\r\n\r\n---\r\n\r\n_A previous incarnation of this can be found at https://github.com/bitcoin/bitcoin/pull/27509. It puts the transaction in the mempool and (tries to) hide it from the outside observers. This turned out to be too error prone or maybe even impossible._\r\n",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29415",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29415.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29415.patch"
          },
          "created_at": "2024-02-09T13:39:10Z",
          "updated_at": "2024-04-02T01:34:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11803774786,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAK_j09C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11803774786",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T15:50:34Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T15:51:02Z",
      "updated_at": "2024-02-14T15:51:02Z",
      "source": {
        "issue": {
          "id": 2085050770,
          "node_id": "PR_kwDOABII585kQNwH",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29256/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29256",
          "number": 29256,
          "state": "open",
          "state_reason": null,
          "title": "Improve new LogDebug/Trace/Info/Warning/Error Macros",
          "body": "Improve new LogDebug(), LogTrace(), LogInfo(),  LogWarning(), LogError() macros introduced in #28318:\r\n\r\n- Make them consistent, now all accepting the same parameters.\r\n- Make them all accept log categories, to make it possible to filter or highlight log messages from a particular component.\r\n- Make them compatible with wallet logging, which includes the wallet name in log messages.\r\n- Make them not rely on a global LogInstance, to provide better control of logging in controlled environments, such as unit tests that want to selectively capture log output, or libbitcoinkernel applications that want to have multiple instances of validation objects without mixing their log output.\r\n- Make them less verbose by not requiring category constants to be specified in individual log prints.\r\n\r\nAn [overview](https://github.com/bitcoin/bitcoin/blob/0cd1616d47e61e125eb3e573573c0c56fba6b775/src/logging.h#L293-L332) of the macros can be found in the logging header.\r\n\r\n### Problems this PR attempts to solve\r\n\r\nThe new log macros in introduced #28318 are generally great. They allow writing code that is succinct and clear, and make it a lot easier to figure out what log levels are being used. Unfortunately, the new macros are slightly less general than than needed to be used throughout the codebase. Particularly:\r\n\r\n1. The new macros cannot be used conveniently in wallet code because wallet log prints are supposed to automatically attach wallet names to log messages.\r\n2. The new macros cannot be used in libbitcoinkernel code because they do not allow specifying a logger instance.\r\n\r\nWithout this PR, the only alternative approach to solving these problems would be to reimplement these macros outside the logging framework so they could be used by wallet and validation code. This PR just takes the approach of slightly generalizing these macros so they work everywhere.\r\n\r\n### Note to reviewers\r\n\r\nI'd encourage looking at the description and code changes in this PR to evaluate it and try to come an independent judgement before looking at the discussion history. Unfortunately and regrettably, I made some dismissive comments on the previous PR, so the discussion here starts out immediately heated. I think the criticisms in the discussion are well intended and made in good faith, but they go down a lot of tangents, and as far as I can tell are only making the argument that this PR is unnecessary, not that it is harmful, so I don't think they are essential to read or understand.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29256",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29256",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29256.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29256.patch"
          },
          "created_at": "2024-01-16T22:09:35Z",
          "updated_at": "2024-03-30T02:16:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T16:35:08Z",
      "updated_at": "2024-02-14T16:35:08Z",
      "source": {
        "issue": {
          "id": 2049590379,
          "node_id": "PR_kwDOABII585ia4AQ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29119",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29119/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29119/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29119/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29119",
          "number": 29119,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Use std::span over Span",
          "body": "`std::span` allows static extents, which is a nice benefit over just `Span`.\r\n\r\nHowever, the interface of the two isn't identical and requires some more changes than just defining an alias. This is my current draft to *compile* with `std::span`. This should be the minimal changes required to get a green CI, but the changes may not be ideal, so this remains a draft.\r\n\r\nAlso, this requires and is based on #29071, which is blocked on OSS-Fuzz.\r\n\r\nIn the meantime, changes that make sense on their own, can be split up.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29119",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29119",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29119.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29119.patch"
          },
          "created_at": "2023-12-19T23:36:52Z",
          "updated_at": "2024-02-26T12:26:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T16:44:12Z",
      "updated_at": "2024-02-14T16:44:12Z",
      "source": {
        "issue": {
          "id": 2039458902,
          "node_id": "PR_kwDOABII585h4izR",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29071",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29071/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29071/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29071/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29071",
          "number": 29071,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Remove Span operator==, Use std::ranges::equal",
          "body": "`std::span` removed the comparison operators, so it makes sense to remove them for the `Span` \"backport\" as well. Using `std::ranges::equal` also has the benefit that some `Span` temporary constructions can now be dropped.\r\n\r\nThis is required to move from `Span` toward `std::span`.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/66",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/66",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/66/labels",
            "id": 10314936,
            "node_id": "MI_kwDOABII584AnWS4",
            "number": 66,
            "state": "open",
            "title": "28.0",
            "creator": {
              "login": "DrahtBot",
              "id": 39886733,
              "node_id": "MDQ6VXNlcjM5ODg2NzMz",
              "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/DrahtBot",
              "html_url": "https://github.com/DrahtBot",
              "followers_url": "https://api.github.com/users/DrahtBot/followers",
              "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
              "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
              "repos_url": "https://api.github.com/users/DrahtBot/repos",
              "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 4,
            "created_at": "2023-12-15T12:08:23Z",
            "updated_at": "2024-04-01T15:53:40Z"
          },
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29071",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29071",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29071.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29071.patch"
          },
          "created_at": "2023-12-13T10:58:46Z",
          "updated_at": "2024-03-30T02:51:13Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T16:54:58Z",
      "updated_at": "2024-02-14T16:54:58Z",
      "source": {
        "issue": {
          "id": 2029493410,
          "node_id": "PR_kwDOABII585hWvMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29015",
          "number": 29015,
          "state": "open",
          "state_reason": null,
          "title": "kernel: Streamline util library",
          "body": "Remove `fees.h`, `errors.h`, and `spanparsing.h` from the util library. Specifically:\r\n\r\n- Move `Split` functions from `util/spanparsing.h` to `util/string.h`, using `util` namespace for clarity.\r\n- Move remaining spanparsing functions to `script/parsing.h` since they are used for descriptor and miniscript parsing.\r\n- Combine `util/fees.h` and `util/errors.h` into `common/messages.h` so there is a place for simple functions that generate user messages to live, and these functions are not part of the util library.\r\n\r\nMotivation for this change is that the util library is a dependency of the kernel, and we should remove functionality from util that shouldn't be called by kernel code or kernel applications. These changes should also improve code organization and make functions easier to discover. Some of these same moves are (or were) part of #28690, but did not help with code organization, or made it worse, so it is better to move them and clean them up in the same PR so code only has to change one time.\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29015",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29015.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29015.patch"
          },
          "created_at": "2023-12-06T22:26:39Z",
          "updated_at": "2024-04-01T17:52:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T17:08:53Z",
      "updated_at": "2024-02-14T17:08:53Z",
      "source": {
        "issue": {
          "id": 2014355259,
          "node_id": "PR_kwDOABII585gjLxA",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28955",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28955/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28955/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28955/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28955",
          "number": 28955,
          "state": "closed",
          "state_reason": null,
          "title": "index: block filters sync, reduce disk read operations by caching last header",
          "body": "Work decoupled from #26966 per request.\r\n\r\nThe aim is to remove an unnecessary disk read operation that currently takes place with every new arriving block (or scanned block during background sync). Instead of reading the last filter header from disk merely to access its hash for constructing the next filter, this work caches it, occupying just 32 more bytes in memory.\r\n\r\nAlso, reduces `cs_main` lock contention during the index initial sync process. And, simplifies the indexes initialization and shutdown procedure.\r\n\r\nTesting Note:\r\nTo compare the changes, added a pretty basic benchmark in the second commit. Alternatively, could also test the changes by timing the block filter sync from scratch on any network; start the node with `-blockfilterindex` and monitor the logs until the syncing process finish.\r\n\r\nLocal Benchmark Results:\r\n\r\n*Master (c252a0fc0f4dc7d262b971a5e7ff01508159193b):\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|      132,042,516.60 |                7.57 |    0.3% |      7.79 | `BlockFilterIndexSync`\r\n\r\n*PR (43a212cfdac6c64e82b601c664443d022f191520):\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|      126,915,841.60 |                7.88 |    0.6% |      7.51 | `BlockFilterIndexSync`\r\n",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignee": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "achow101",
              "id": 3782274,
              "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
              "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/achow101",
              "html_url": "https://github.com/achow101",
              "followers_url": "https://api.github.com/users/achow101/followers",
              "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
              "organizations_url": "https://api.github.com/users/achow101/orgs",
              "repos_url": "https://api.github.com/users/achow101/repos",
              "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/achow101/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28955",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28955",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28955.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28955.patch"
          },
          "closed_at": "2024-03-20T16:30:56Z",
          "created_at": "2023-11-28T12:42:40Z",
          "updated_at": "2024-03-20T19:38:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T18:15:55Z",
      "updated_at": "2024-02-14T18:15:55Z",
      "source": {
        "issue": {
          "id": 1882278959,
          "node_id": "PR_kwDOABII585ZlyrP",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28417",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28417/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28417/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28417/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28417",
          "number": 28417,
          "state": "open",
          "state_reason": null,
          "title": "contrib/signet/miner updates",
          "body": "Refactors the code a bunch, and adds `--poolnum` / `--poolid` options so that signers can tag their coinbases in a way that explorers can recognise (see also https://github.com/bitcoin-data/mining-pools/pull/82 and https://github.com/mempool/mempool/issues/2903).\r\n\r\nThe refactoring in particular helps enable the \"try using inquisition's getblocktemplate, and if that doesn't work fall back to core's getblocktemplate\" logic, as described/implemented in https://github.com/bitcoin-inquisition/bitcoin/pull/7",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28417",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28417",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28417.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28417.patch"
          },
          "created_at": "2023-09-05T16:12:05Z",
          "updated_at": "2024-03-22T20:43:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T18:37:19Z",
      "updated_at": "2024-02-14T18:37:19Z",
      "source": {
        "issue": {
          "id": 1842817294,
          "node_id": "PR_kwDOABII585Xg45g",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28241",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28241/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28241/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28241/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28241",
          "number": 28241,
          "state": "open",
          "state_reason": null,
          "title": "Silent payment index (for light wallets and consistency check)",
          "body": "This PR adds an index with the silent payment tweak for every transaction. It builds on top of #28122.\r\n\r\nIt also adds a `getsilentpaymentblockdata` RPC that returns an array of silent payment tweaked public keys, one for each qualifying transaction. \r\n\r\nThis index serves two purposes:\r\n1. Light client support, see [BIP 352](https://github.com/josibake/bips/blob/silent-payments-bip/bip-0352.mediawiki#user-content-Tweak_Data)\r\n2. A more thorough check than the test vectors; e.g. by comparing a checksum of the index for all of mainnet.\r\n\r\nBased on the index that was originally part of #24897.\r\n\r\nTODO:\r\n- [ ] check correctness against another implementation\r\n- [ ] make `-silentpaymentindex=0` mean off (default), `-silentpaymentindex=v0` on\r\n- [ ] figure out how to do versioning (make the index flexible enough, or just rebuild the index at the next version)\r\n- [ ] remove dependency on wallet (move `GetSilentPaymentsTweakDataFromTxInputs` and everything it needs out of the wallet)\r\n- [ ] cleanup various TODO's in the code\r\n- [ ] brainstorm updating index when outputs are spent\r\n- add tests\r\n  - [ ] that a reorg adds the new blocks (and it's fine to keep the old one) ",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 57,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28241",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28241",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28241.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28241.patch"
          },
          "created_at": "2023-08-09T09:13:55Z",
          "updated_at": "2024-03-17T19:03:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11806417923,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAAK_t6QD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11806417923",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T20:01:07Z"
    },
    {
      "event": "reviewed",
      "id": 1881182173,
      "node_id": "PRR_kwDOABII585wII_d",
      "url": null,
      "actor": null,
      "commit_id": "1bacb8998725de866b109c4fdd9f8739fcfb2344",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#pullrequestreview-1881182173",
      "submitted_at": "2024-02-14T20:04:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T20:05:29Z",
      "updated_at": "2024-02-14T20:05:29Z",
      "source": {
        "issue": {
          "id": 1495740611,
          "node_id": "PR_kwDOABII585FZpvc",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26697",
          "number": 26697,
          "state": "open",
          "state_reason": null,
          "title": "logging: use bitset for categories",
          "body": "... rather than integer bitmasks such as (1 << 28). This removes the limit of 32 logging categories -- we're up to 28 currently.\r\n\r\nThis is an alternative to #26619 that was [suggested](https://github.com/bitcoin/bitcoin/pull/26619#issuecomment-1343902657) by luke-jr.\r\n\r\ntag jonatack klementtan",
          "user": {
            "login": "LarryRuane",
            "id": 8321330,
            "node_id": "MDQ6VXNlcjgzMjEzMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LarryRuane",
            "html_url": "https://github.com/LarryRuane",
            "followers_url": "https://api.github.com/users/LarryRuane/followers",
            "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
            "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
            "repos_url": "https://api.github.com/users/LarryRuane/repos",
            "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26697",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26697",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26697.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26697.patch"
          },
          "created_at": "2022-12-14T05:40:18Z",
          "updated_at": "2024-03-26T05:03:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T20:11:31Z",
      "updated_at": "2024-02-14T20:11:31Z",
      "source": {
        "issue": {
          "id": 1467073842,
          "node_id": "PR_kwDOABII585D1g33",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26593",
          "number": 26593,
          "state": "open",
          "state_reason": null,
          "title": "tracing: Only prepare tracepoint arguments when actually tracing",
          "body": "Currently, if the tracepoints are compiled (e.g. in depends and release builds), we always prepare the tracepoint arguments regardless of the tracepoints being used or not. We made sure that the argument preparation is as cheap as possible, but we can almost completely eliminate any overhead for users not interested in the tracepoints (the vast majority), by gating the tracepoint argument preparation with an `if(something is attached to this tracepoint)`. To achieve this, we use the optional semaphore feature provided by SystemTap.\r\n\r\nThe first commit simplifies and deduplicates our tracepoint macros from 13 TRACEx macros to a single TRACEPOINT macro. This makes them easier to use and also avoids more duplicate macro definitions in the second commit.\r\n\r\nThe Linux tracing tools I'm aware of (bcc, bpftrace, libbpf, and systemtap) all support the semaphore gating feature. Thus, all existing tracepoints and their argument preparation is gated in the second commit. For details, please refer to the commit messages and the updated documentation in `doc/tracing.md`.\r\n\r\nAlso adding unit tests that include all tracepoint macros to make sure there are no compiler problems with them (e.g. some varadiac extension not supported). \r\n\r\nReviewers might want to check:\r\n- Do the tracepoints still work for you? Do the examples in `contrib/tracing/` run on your system (as bpftrace frequently breaks on every new version, please test master too if it should't work for you)? Do the CI interface tests still pass?\r\n- Is the new documentation clear? \r\n- The `TRACEPOINT_SEMAPHORE(event, context)` macros places global variables in our global namespace. Is this something we strictly want to avoid or maybe move to all `TRACEPOINT_SEMAPHORE`s to a separate .cpp file or even namespace? I like having the `TRACEPOINT_SEMAPHORE()` in same file as the `TRACEPOINT()`, but open for suggestion on alternative approaches. \r\n- Are newly added tracepoints in the unit tests visible when using `readelf -n /src/test/test_bitcoin`? You can run the new unit tests with `./src/test/test_bitcoin --run_test=util_trace_tests* --log_level=all`.\r\n<details><summary>Two of the added unit tests demonstrate that we are only processing the tracepoint arguments when attached by having a test-failure condition in the tracepoint argument preparation. The following bpftrace script can be used to demonstrate that the tests do indeed fail when attached to the tracepoints.</summary>\r\n\r\n`fail_tests.bt`:\r\n\r\n```c\r\n#!/usr/bin/env bpftrace\r\n\r\nusdt:./src/test/test_bitcoin:test:check_if_attached {\r\n  printf(\"the 'check_if_attached' test should have failed\\n\");\r\n}\r\n\r\nusdt:./src/test/test_bitcoin:test:expensive_section {\r\n  printf(\"the 'expensive_section' test should have failed\\n\");\r\n}\r\n```\r\n\r\nRun the unit tests with `./src/test/test_bitcoin` and start `bpftrace fail_tests.bt -p $(pidof test_bitcoin)` in a separate terminal. The unit tests should fail with:\r\n\r\n```\r\nRunning 594 test cases...\r\ntest/util_trace_tests.cpp(31): error: in \"util_trace_tests/test_tracepoint_check_if_attached\": check false has failed\r\ntest/util_trace_tests.cpp(51): error: in \"util_trace_tests/test_tracepoint_manual_tracepoint_active_check\": check false has failed\r\n\r\n*** 2 failures are detected in the test module \"Bitcoin Core Test Suite\"\r\n```\r\n\r\n</details>\r\n\r\nThese links might provide more contextual information for reviewers:\r\n- [How SystemTap Userspace Probes Work by eklitzke](https://eklitzke.org/how-sytemtap-userspace-probes-work) (actually an example on Bitcoin Core; mentions that with semaphores \"the overhead for an untraced process is effectively zero.\")\r\n- [libbpf comment on USDT semaphore handling](https://github.com/libbpf/libbpf/blob/1596a09b5de2a50ab8d44218fc29b6d42f886305/src/usdt.c#L83-L92) (can recommend the whole comment for background on how the tracepoints and tracing tools work together)\r\n- https://sourceware.org/systemtap/wiki/UserSpaceProbeImplementation#Semaphore_Handling",
          "user": {
            "login": "0xB10C",
            "id": 19157360,
            "node_id": "MDQ6VXNlcjE5MTU3MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xB10C",
            "html_url": "https://github.com/0xB10C",
            "followers_url": "https://api.github.com/users/0xB10C/followers",
            "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
            "organizations_url": "https://api.github.com/users/0xB10C/orgs",
            "repos_url": "https://api.github.com/users/0xB10C/repos",
            "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/0xB10C/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26593",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26593.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26593.patch"
          },
          "created_at": "2022-11-28T20:50:26Z",
          "updated_at": "2024-03-29T06:49:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T20:45:02Z",
      "updated_at": "2024-02-14T20:45:02Z",
      "source": {
        "issue": {
          "id": 1166781352,
          "node_id": "PR_kwDOABII5840UWxr",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24539",
          "number": 24539,
          "state": "open",
          "state_reason": null,
          "title": "Add a \"tx output spender\" index",
          "body": "This PR adds a new \"tx output spender\" index, which allows users to query which tx spent a given outpoint with the `gettxspendingprevout` RPC call that was added by https://github.com/bitcoin/bitcoin/pull/24408.\r\n\r\nSuch an index would be extremely useful for Lightning, and probably for most layer-2 protocols that rely on chains of unpublished transactions.\r\n\r\nUPDATE: this PR is ready for review and issues have been addressed:\r\n- using a watch-only wallet instead would not work if there is a significant number of outpoints to watch (see https://github.com/bitcoin/bitcoin/pull/24539#issuecomment-1276595646)\r\n- this PR does not require `-txindex` anymore\r\n\r\n\r\nI chose to store an outpoint (32 + 4 bytes) -> txid (32 bytes) index (so -txospenderindex requires -txindex) rather than a outpoint -> disk pos index.",
          "user": {
            "login": "sstone",
            "id": 1573866,
            "node_id": "MDQ6VXNlcjE1NzM4NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sstone",
            "html_url": "https://github.com/sstone",
            "followers_url": "https://api.github.com/users/sstone/followers",
            "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
            "organizations_url": "https://api.github.com/users/sstone/orgs",
            "repos_url": "https://api.github.com/users/sstone/repos",
            "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sstone/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24539",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24539.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24539.patch"
          },
          "created_at": "2022-03-11T19:32:41Z",
          "updated_at": "2024-03-22T00:23:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11813556469,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALAJJD1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11813556469",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T10:38:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11815961938,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALASUVS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11815961938",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T14:05:04Z"
    },
    {
      "event": "commented",
      "id": 1946168171,
      "node_id": "IC_kwDOABII5850ACtr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1946168171",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T14:07:31Z",
      "updated_at": "2024-02-15T14:07:31Z",
      "author_association": "MEMBER",
      "body": "Added `m_tp_mutex` to `Sv2TemplateProvider`.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1946168171",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 1946293497,
      "node_id": "IC_kwDOABII5850AhT5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1946293497",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T15:12:13Z",
      "updated_at": "2024-02-15T16:09:29Z",
      "author_association": "MEMBER",
      "body": "Bumping macOS to 14 on the CI does not help (tried in https://github.com/Sjors/bitcoin/pull/35). I also can't reproduce [this failure](https://github.com/bitcoin/bitcoin/actions/runs/7917147558/job/21612591013?pr=29432) on my own Intel macOS machines, not on 13.6.4 and not on 14.2.1. A `Sock` mock is probably the most robust solution, but it'd be nice to find another workaround.\r\n\r\nThis extra delay seems to do the trick for now: https://github.com/Sjors/bitcoin/commit/c8d10afd4d3152a665ab96f1a8d39293e02d8410\r\n\r\nAnother option to consider is using the functional test framework instead, since these are not really unit tests. However that involves implementing the sv2 noise protocol in Python and a bunch of other work to export transport functions to the functional test framework. If anyone feels up to that challenge, let me know...",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1946293497",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11817232843,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALAXKnL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11817232843",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T15:35:07Z"
    },
    {
      "event": "unlabeled",
      "id": 11818134285,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAALAamsN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11818134285",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T16:43:09Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11828610995,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALBCkez",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11828610995",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T12:59:16Z"
    },
    {
      "event": "commented",
      "id": 1948355393,
      "node_id": "IC_kwDOABII5850IYtB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1948355393",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T13:05:46Z",
      "updated_at": "2024-02-16T13:07:07Z",
      "author_association": "MEMBER",
      "body": "Added `m_clients_mutex` similar to the one in `Connman`. Fixed a deadlock on `g_best_block_mutex` when we receive a fresh block simultaneously from a peer and a client (`SubmitSolution` message).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1948355393",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "commented",
      "id": 1948481906,
      "node_id": "IC_kwDOABII5850I3ly",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1948481906",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T14:28:10Z",
      "updated_at": "2024-02-16T14:28:10Z",
      "author_association": "MEMBER",
      "body": "Windows test fails with:\r\n\r\n```\r\ntest/sv2_noise_tests.cpp(62): fatal error: in \"sv2_noise_tests/certificate_test\": critical check !alice_certificate.Validate(XOnlyPubKey(alice_authority_key.GetPubKey())) has failed\r\n```\r\n\r\nOdd. Part of https://github.com/bitcoin/bitcoin/pull/29346 so can be debugged there.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1948481906",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "labeled",
      "id": 11829822443,
      "node_id": "LE_lADOABII585_NKHDzwAAAALBHMPr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11829822443",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T14:46:09Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1948517224,
      "node_id": "IC_kwDOABII5850JANo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1948517224",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T14:46:10Z",
      "updated_at": "2024-02-16T14:46:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21654131515</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1948517224",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T17:38:47Z",
      "updated_at": "2024-02-16T17:38:47Z",
      "source": {
        "issue": {
          "id": 1519092836,
          "node_id": "PR_kwDOABII585Godbn",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26812/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26812/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26812/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26812",
          "number": 26812,
          "state": "open",
          "state_reason": null,
          "title": "test: add end-to-end tests for CConnman and PeerManager",
          "body": "Add fuzz and unit tests that write (fuzzed) data to a mocked socket and inspect what CConnman/PeerManager have written back to the socket, or check the internal state to verify that the behavior is as expected.\r\n\r\nThis is now possible, after most of https://github.com/bitcoin/bitcoin/pull/21878 has been merged - we don't do any syscalls (e.g. `connect()`, `recv()`) from the high level code and using a mocked socket allows testing the entire networking stack without opening actual network connections.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 33,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26812",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26812.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26812.patch"
          },
          "created_at": "2023-01-04T14:39:37Z",
          "updated_at": "2024-03-28T11:16:28Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11832607699,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALBR0PT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11832607699",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T19:01:59Z"
    },
    {
      "event": "commented",
      "id": 1949144664,
      "node_id": "IC_kwDOABII5850LZZY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1949144664",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T19:08:48Z",
      "updated_at": "2024-02-16T19:21:08Z",
      "author_association": "MEMBER",
      "body": "With https://github.com/stratum-mining/stratum/pull/737, https://github.com/stratum-mining/stratum/pull/752 (allowing me to drop 2469053d31f11f5edc766108d9a67ed7572d5b61), https://github.com/stratum-mining/stratum/pull/729 and https://github.com/stratum-mining/stratum/pull/722 merged this PR is now compatible with SRI's `main` branch. This should make testing a lot easier. ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1949144664",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "unlabeled",
      "id": 11834133232,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAALBXorw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11834133232",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T22:01:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-18T10:24:43Z",
      "updated_at": "2024-02-18T10:24:43Z",
      "source": {
        "issue": {
          "id": 2140878936,
          "node_id": "PR_kwDOABII585nNc-J",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29444",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29444/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29444/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29444/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29444",
          "number": 29444,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: improve readability of numeric literals in consensus parameters and network settings",
          "body": "This commit enhances the readability of large numeric literals across various parts of the Bitcoin Core codebase by introducing thousands separators ('), leveraging the C++14 digit separator feature.\r\n\r\nThis readability enhancement follows the precedent set in various places within the Bitcoin Core codebase and aligns with ongoing efforts to improve code quality and developer experience: delimiters were already [used](https://github.com/bitcoin/bitcoin/blob/master/src/kernel/mempool_limits.h#L26) [in](https://github.com/bitcoin/bitcoin/blob/master/src/kernel/mempool_options.h#L40) [a](https://github.com/bitcoin/bitcoin/blob/master/src/kernel/mempool_limits.h#L22) [few](https://github.com/bitcoin/bitcoin/blob/master/src/kernel/chainparams.cpp#L380) [places](https://github.com/bitcoin/bitcoin/blob/master/src/kernel/chainparams.cpp#L271), even in comments:\r\n<img alt=\"image\" src=\"https://github.com/bitcoin/bitcoin/assets/1841944/997032db-3595-4f32-a17e-62ec9d3ded82\">\r\n",
          "user": {
            "login": "paplorinc",
            "id": 1841944,
            "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paplorinc",
            "html_url": "https://github.com/paplorinc",
            "followers_url": "https://api.github.com/users/paplorinc/followers",
            "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
            "organizations_url": "https://api.github.com/users/paplorinc/orgs",
            "repos_url": "https://api.github.com/users/paplorinc/repos",
            "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/paplorinc/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29444",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29444",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29444.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29444.patch"
          },
          "closed_at": "2024-02-20T15:31:37Z",
          "created_at": "2024-02-18T09:28:54Z",
          "updated_at": "2024-02-20T16:48:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T15:05:35Z",
      "updated_at": "2024-02-19T15:05:35Z",
      "source": {
        "issue": {
          "id": 1950437953,
          "node_id": "PR_kwDOABII585dLamZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28676",
          "number": 28676,
          "state": "open",
          "state_reason": null,
          "title": "[WIP] Cluster mempool implementation",
          "body": "This is a draft implementation of the cluster mempool design described in #27677.  I'm opening this as a draft PR now to share the branch I'm working on with others, so that we can start to think about in-progress projects (like package relay, package validation, and package rbf) in the context of this design.  Also, I can use some help from others for parts of this work, including the interaction between the mempool and the wallet, and also reworking some of our existing test cases to fit a cluster-mempool world.\r\n\r\nNote that the design of this implementation is subject to change as I continue to iterate on the code (to make the code more hygienic and robust, in particular). At this point though I think the performance is pretty reasonable and I'm not currently aware of any bugs.  There are some microbenchmarks added here, and some improved fuzz tests; it would be great if others ran both of those on their own hardware as well and reported back on any findings.\r\n\r\nThis branch implements the following observable behavior changes:\r\n\r\n- Maintains a partitioning of the mempool into connected clusters\r\n- Each cluster is sorted (\"linearized\") either using an optimal sort, or an ancestor-feerate-based one, depending on the size of the cluster (thanks to @sipa for this logic)\r\n- Transaction selection for mining is updated to use the cluster linearizations\r\n- Mempool eviction is updated to use the cluster linearizations\r\n- The RBF rules are updated to drop the requirement that no new inputs are introduced, and to change the feerate requirement to instead check that the mining score of a replacement transaction exceed the mining score of the conflicted transactions\r\n- The CPFP carveout rule is eliminated (it doesn't make sense in a cluster-limited mempool)\r\n- The ancestor and descendant limits are no longer enforced.\r\n- New cluster count/cluster vsize limits are now enforced instead.\r\n\r\nSome less observable behavior changes:\r\n- The cached ancestor and descendant data are dropped from the mempool, along with the multi_index indices that were maintained to sort the mempool by ancestor and descendant feerates. For compatibility (eg with wallet behavior or RPCs exposing this), this information is now calculated dynamically instead.\r\n- The ancestor and descendant walking algorithms are now implemented using `epoch`s (resulting in a significant performance improvement, according to the benchmarks I've looked at)\r\n\r\nStill to do:\r\n\r\n- [ ] More comparisons between this branch and master on historical data to compare validation speed (accepting loose transactions, processing RBF transactions, validating a block/postprocessing, updating the mempool for a reorg).\r\n- [ ] More historical data analysis to try to evaluate the likely impact of setting the cluster size limits to varying values (to motivate what values we should ultimately pick)\r\n- [ ] Updating wallet code to be cluster-aware (including mini_miner and coin selection)\r\n- [ ] Rework many of our functional tests to be cluster-aware\r\n- [ ] Figure out what package validation and package RBF rules should be in this design\r\n- [ ] Rework the `partially_downloaded_block` fuzz target to not add mempool transactions in a topologically-invalid way.\r\n- [ ] Update RBF logic to ensure that replacements always strictly improve the mempool.\r\n- [ ] Figure out how we want to document our RBF policy (preserve historical references to BIP 125 or previous Bitcoin Core behaviors vs clean slate documentation?)\r\n\r\nFor discussion/feedback:\r\n\r\n - How significant is it to be dropping the CPFP carveout rule?  Does that affect how we will ultimately want to stage new mempool deployment?\r\n - How well do the proposed RBF rules meet everyone's use cases?\r\n - What design improvements can we make to the cluster tracking implementation?\r\n - The ZMQ callbacks that occur when a block is found will happen in a slightly different order, because we now will fully remove all transactions occurring in a block from the mempool before removing any conflicts. Is this a problem?",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28676",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28676.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28676.patch"
          },
          "created_at": "2023-10-18T18:59:37Z",
          "updated_at": "2024-03-09T02:54:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-20T07:42:05Z",
      "updated_at": "2024-02-20T07:42:05Z",
      "source": {
        "issue": {
          "id": 1816230792,
          "node_id": "PR_kwDOABII585WHu-Q",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28122",
          "number": 28122,
          "state": "open",
          "state_reason": null,
          "title": "Silent Payments: Implement BIP352",
          "body": "This PR is part of integrating silent payments into Bitcoin Core. The project is tracked in https://github.com/bitcoin/bitcoin/issues/28536\r\n\r\n## BIP352\r\n\r\nThis PR focuses strictly on the BIP logic and attempts to separate it from the wallet and transaction implementation details. This is accomplished by working directly with public and private keys, instead of needing a wallet backend and transactions for testing. Labels for the receiver are optional and thus deferred for a later PR.\r\n\r\nTest vectors from the BIP are included as unit tests.\r\n\r\nBefore reviewing, it is strongly recommended you read https://github.com/bitcoin/bips/pull/1458 and take a look at the reference python implementation on the BIP.\r\n",
          "user": {
            "login": "josibake",
            "id": 7444140,
            "node_id": "MDQ6VXNlcjc0NDQxNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josibake",
            "html_url": "https://github.com/josibake",
            "followers_url": "https://api.github.com/users/josibake/followers",
            "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
            "organizations_url": "https://api.github.com/users/josibake/orgs",
            "repos_url": "https://api.github.com/users/josibake/repos",
            "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/josibake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 249581124,
              "node_id": "MDU6TGFiZWwyNDk1ODExMjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Privacy",
              "name": "Privacy",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 32,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28122",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28122.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28122.patch"
          },
          "created_at": "2023-07-21T18:36:37Z",
          "updated_at": "2024-03-30T05:06:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-27T05:47:01Z",
      "updated_at": "2024-02-27T05:47:01Z",
      "source": {
        "issue": {
          "id": 2155219888,
          "node_id": "PR_kwDOABII585n-MJV",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29485",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29485/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29485/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29485/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29485",
          "number": 29485,
          "state": "closed",
          "state_reason": null,
          "title": "build: Enable -Wshadow",
          "body": "This is an attempt to demonstrate what is necessary to get `-Wshadow` building under `-Werror` on clang, and to see what other existing pull requests that might conflict with.\r\n\r\nThis was prompted by [an example of shadowing I spotted in review](https://github.com/bitcoin/bitcoin/pull/29473#discussion_r1501678205). We currently [warn against shadowing](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#shadowing) in the docs but do not detect it, so instead rely on review to identify these issues.\r\n\r\nNote:\r\n* This was [previously enabled in 2016 ](https://github.com/bitcoin/bitcoin/pull/8794) and [reverted six months later](https://github.com/bitcoin/bitcoin/pull/10136).\r\n* [I proposed a version in 2019](https://github.com/bitcoin/bitcoin/pull/15377) using a different approach in a different context.\r\n\r\nThe question is: have the circumstances changed in the past 9 years? Is a partial fix beneficial?\r\n\r\nOne option would be to merge the low-risk changes, re.  tests, etc. and exclude\r\nsensitive files from this warning to get it applied to regular builds.\r\n\r\nRelated:\r\n* https://github.com/bitcoin/bitcoin/pull/27087\r\n\r\n<!--\r\n*** Please remove the following help text before submitting: ***\r\n\r\nPull requests without a rationale and clear improvement may be closed\r\nimmediately.\r\n\r\nGUI-related pull requests should be opened against\r\nhttps://github.com/bitcoin-core/gui\r\nfirst. See CONTRIBUTING.md\r\n-->\r\n\r\n<!--\r\nPlease provide clear motivation for your patch and explain how it improves\r\nBitcoin Core user experience or Bitcoin Core developer experience\r\nsignificantly:\r\n\r\n* Any test improvements or new tests that improve coverage are always welcome.\r\n* All other changes should have accompanying unit tests (see `src/test/`) or\r\n  functional tests (see `test/`). Contributors should note which tests cover\r\n  modified code. If no tests exist for a region of modified code, new tests\r\n  should accompany the change.\r\n* Bug fixes are most welcome when they come with steps to reproduce or an\r\n  explanation of the potential issue as well as reasoning for the way the bug\r\n  was fixed.\r\n* Features are welcome, but might be rejected due to design or scope issues.\r\n  If a feature is based on a lot of dependencies, contributors should first\r\n  consider building the system outside of Bitcoin Core, if possible.\r\n* Refactoring changes are only accepted if they are required for a feature or\r\n  bug fix or otherwise improve developer experience significantly. For example,\r\n  most \"code style\" refactoring changes require a thorough explanation why they\r\n  are useful, what downsides they have and why they *significantly* improve\r\n  developer experience or avoid serious programming bugs. Note that code style\r\n  is often a subjective matter. Unless they are explicitly mentioned to be\r\n  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\r\n  changes are usually rejected.\r\n-->\r\n\r\n<!--\r\nBitcoin Core has a thorough review process and even the most trivial change\r\nneeds to pass a lot of eyes and requires non-zero or even substantial time\r\neffort to review. There is a huge lack of active reviewers on the project, so\r\npatches often sit for a long time.\r\n-->\r\n",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29485",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29485",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29485.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29485.patch"
          },
          "closed_at": "2024-02-27T16:54:25Z",
          "created_at": "2024-02-26T21:47:59Z",
          "updated_at": "2024-02-27T16:54:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-27T18:42:18Z",
      "updated_at": "2024-02-27T18:42:18Z",
      "source": {
        "issue": {
          "id": 2088449017,
          "node_id": "PR_kwDOABII585kbvvE",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29274",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29274/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29274/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29274/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29274",
          "number": 29274,
          "state": "open",
          "state_reason": null,
          "title": "Support self-hosted Cirrus workers on forks",
          "body": "I find myself making pull requests against my fork (mostly on top of #28983), or asking others to do so. Currently only the Github actions are run on forks, because we use self-hosted runners for the Cirrus tasks.\r\n\r\nWhile setting up my own self-hosted runners for my fork, I ran into a number of issues. This PR addresses those.\r\n\r\nSome issues are related to me using multiple regular users on the same physical machine, rather than running every worker in a VM. Update: these fixes have been absorbed by https://github.com/bitcoin/bitcoin/pull/29441.\r\n\r\nReplaces #29259 using the self hosted workers via Cirrus instead of Github.\r\n\r\nYou can see this PR in action on this pull request to my fork: https://github.com/Sjors/bitcoin/pull/30\r\n\r\nTo test it yourself:\r\n1. spin up at least two [self hosted runners](https://github.com/cirruslabs/cirrus-cli/blob/master/PERSISTENT-WORKERS.md). Either use a seperate VM for each, or give them their own user.\r\n2. Install Podman and other CI dependencies (see `.cirrus.yml`)\r\n3. Give Cirrus access to your fork at `https://cirrus-ci.com/settings/github/YOU`\r\n4. Get a token from Cirrus and use it to start your worker(s)\r\n5. Optionally set `NO_BRANCH=true`, `NO_ARM=true` and `NO_NOBLE=true` env variables (see `.cirrus.yml`)\r\n6. make a pull request to your own fork, with this PR as the base branch\r\n\r\nSecurity wise: when dealing with code from strangers on the internet, review it first before running the CI. There's a Cirrus check-box that requires approval for people without write access to trigger CI.\r\n\r\n\r\nOne side-effect of this PR is that on forks Github CI is no longer runs on branch pushes. It does still run for pull requests. I could undo that, but the downside is that is Github CI would run twice in a typical pull request workflow.",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29274",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29274",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29274.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29274.patch"
          },
          "created_at": "2024-01-18T14:49:43Z",
          "updated_at": "2024-03-22T18:01:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 11971076197,
      "node_id": "LE_lADOABII585_NKHDzwAAAALJiCBl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11971076197",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T20:21:41Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1971893632,
      "node_id": "IC_kwDOABII5851iLWA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1971893632",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T20:21:42Z",
      "updated_at": "2024-02-29T20:21:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21668951058</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1971893632",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11978493028,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALJ-Uxk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11978493028",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T11:51:46Z"
    },
    {
      "event": "commented",
      "id": 1973051164,
      "node_id": "IC_kwDOABII5851ml8c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1973051164",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T11:52:18Z",
      "updated_at": "2024-03-01T12:57:18Z",
      "author_association": "MEMBER",
      "body": "Rebased and hopefully satisfied new `bitcoin-config.h` linter rule.\r\n\r\nThe kind of incidental [failure](https://github.com/bitcoin/bitcoin/actions/runs/8110904735/job/22169119592?pr=29432#step:7:6067) in `sv2_template_provider_tests` can probably be avoided with the mock socket introduced / improved in ##26812.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1973051164",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "unlabeled",
      "id": 11980388499,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAALKFjiT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11980388499",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T14:40:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T17:52:51Z",
      "updated_at": "2024-03-08T17:52:51Z",
      "source": {
        "issue": {
          "id": 2176301110,
          "node_id": "I_kwDOBYHFKM6Bt7g2",
          "url": "https://api.github.com/repos/Sjors/bitcoin/issues/38",
          "repository_url": "https://api.github.com/repos/Sjors/bitcoin",
          "labels_url": "https://api.github.com/repos/Sjors/bitcoin/issues/38/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/Sjors/bitcoin/issues/38/comments",
          "events_url": "https://api.github.com/repos/Sjors/bitcoin/issues/38/events",
          "html_url": "https://github.com/Sjors/bitcoin/issues/38",
          "number": 38,
          "state": "open",
          "state_reason": null,
          "title": "Stratum v2 handshake fails cert validation",
          "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current behaviour\n\nNoise handshake fails if NOISE_SIGNATURE_MESSAGE validation is enforced.\r\n\r\n\n\n### Expected behaviour\n\nThe signature should be validated successfully\n\n### Steps to reproduce\n\n1. Run `./bitcoind -regtest -sv2 -debug=sv2 -loglevel=sv2:trace`\r\n2.  copy authority key `2024-03-08T15:27:58Z Template Provider authority key: 9bNYLvwTgfh9Ez9REW9giPcXgKi3HTijS5bSJvgF47gRdQmsveT`\r\n3. Attach a client stratum-v2 application. Enforce signature validation with respect to authority `9bNYLvwTgfh9Ez9REW9giPcXgKi3HTijS5bSJvgF47gRdQmsveT`\n\n### Relevant log output\n\nmy logs\r\n```\r\n2024-03-08T15:45:18.095056Z TRACE initiator:init-step0: ii_noise_core::cryptography::noise_nx_secp256k1_chachapoly_sha256: ephemeral key [64 bytes] total_bytes_sent=64\r\n2024-03-08T15:45:18.095119Z TRACE initiator: ii_stratum2_noise::stratum_handshake::initiator: -> e [64 bytes]\r\n2024-03-08T15:45:18.246834Z TRACE initiator:init-step1: ii_noise_core::cryptography::noise_nx_secp256k1_chachapoly_sha256: bytes_read=234\r\n2024-03-08T15:45:18.246969Z TRACE initiator:init-step1: ii_noise_core::cryptography::noise_nx_secp256k1_chachapoly_sha256: remote ephemeral key [64 bytes], remote static key [80 bytes], encrypted payload [90 bytes] total_bytes_received=234\r\n2024-03-08T15:45:18.250441Z TRACE initiator: ii_stratum2_noise::stratum_handshake::initiator: <- e, ee, s, es [payload: 74 bytes]\r\n2024-03-08T15:45:18.250562Z TRACE initiator: ii_stratum2_noise::stratum_handshake: Time and signature validation of server certificate version=0 valid_from=1709908078 not_valid_after=4294967295 server_static_key=9buWsBdB1WEsGTn95Q2qM8A4RHvE3RbnuFWhQk7u3JWkNyiKzr7 signature=6zqN4Z9hNx35e2NEeVMQGK7V1GgBPNRSjdvucBkSjR4M5V7tB8aE4sEgct5sixCkHUDp4YYYM3CNWLxeVXj8hiy authority=9bNYLvwTgfh9Ez9REW9giPcXgKi3HTijS5bSJvgF47gRdQmsveT\r\nError: Initialization failure Signature is invalid\r\n\r\nCaused by:\r\n    0: Signature is invalid\r\n    1: Signature is invalid\r\n```\r\n\r\n\r\nlogs on TP on start\r\n```\r\n2024-03-08T15:27:58Z [sv2] Reading cached static key from /home/kuba/.bitcoin/regtest/sv2_static_key\r\n2024-03-08T15:27:58Z msghand thread start\r\n2024-03-08T15:27:58Z [sv2:info] Static key: 02a7e5a29bf028e6c8191f88b508edce7734282dd8bafeeb2b26bb92ebdd8c0027\r\n2024-03-08T15:27:58Z dnsseed thread start\r\n2024-03-08T15:27:58Z Loading addresses from DNS seed dummySeed.invalid.\r\n2024-03-08T15:27:58Z Template Provider authority key: 9bNYLvwTgfh9Ez9REW9giPcXgKi3HTijS5bSJvgF47gRdQmsveT\r\n2024-03-08T15:27:58Z [sv2:trace] Authority key: 6190cafb7c16ffd34900472108ab76d2289f08cc32e87ed7e4e1e02f248ca769\r\n2024-03-08T15:27:58Z [sv2:trace] Certificate hashed data: 00006e20eb65ffffffff\r\n2024-03-08T15:27:58Z init message: Done loading\r\n2024-03-08T15:27:58Z sv2 thread start\r\n2024-03-08T15:27:58Z Leaving InitialBlockDownload (latching to false)\r\n2024-03-08T15:27:58Z [sv2:info] Template Provider listening on port: 18447\r\n```\n\n### How did you obtain Bitcoin Core\n\nCompiled from source\n\n### What version of Bitcoin Core are you using?\n\n2024/02/sv2-poll-ellswift@8b42c0f7d5\n\n### Operating system and version\n\narch linux\n\n### Machine specifications\n\n_No response_",
          "user": {
            "login": "jakubtrnka",
            "id": 13293315,
            "node_id": "MDQ6VXNlcjEzMjkzMzE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13293315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakubtrnka",
            "html_url": "https://github.com/jakubtrnka",
            "followers_url": "https://api.github.com/users/jakubtrnka/followers",
            "following_url": "https://api.github.com/users/jakubtrnka/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jakubtrnka/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jakubtrnka/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jakubtrnka/subscriptions",
            "organizations_url": "https://api.github.com/users/jakubtrnka/orgs",
            "repos_url": "https://api.github.com/users/jakubtrnka/repos",
            "events_url": "https://api.github.com/users/jakubtrnka/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jakubtrnka/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 612894403,
              "node_id": "MDU6TGFiZWw2MTI4OTQ0MDM=",
              "url": "https://api.github.com/repos/Sjors/bitcoin/labels/bug",
              "name": "bug",
              "color": "ee0701",
              "default": true
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 2,
          "created_at": "2024-03-08T15:50:53Z",
          "updated_at": "2024-03-08T18:52:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T18:11:32Z",
      "updated_at": "2024-03-08T18:11:32Z",
      "source": {
        "issue": {
          "id": 2173706155,
          "node_id": "I_kwDOFDde0s6BkB-r",
          "url": "https://api.github.com/repos/stratum-mining/stratum/issues/786",
          "repository_url": "https://api.github.com/repos/stratum-mining/stratum",
          "labels_url": "https://api.github.com/repos/stratum-mining/stratum/issues/786/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/stratum-mining/stratum/issues/786/comments",
          "events_url": "https://api.github.com/repos/stratum-mining/stratum/issues/786/events",
          "html_url": "https://github.com/stratum-mining/stratum/issues/786",
          "number": 786,
          "state": "closed",
          "state_reason": "completed",
          "title": "TP enter invalid state when receive invalid messae",
          "body": "When we send an Sv2 message to the TP where the message header contains a payload len bigger than the actual payload len, the TP enter in an invalid state and must be killed cause is irresponsive. @Sjors \r\n\r\n- [ ] add a test\r\n- [ ] fix the issue",
          "user": {
            "login": "Fi3",
            "id": 6207037,
            "node_id": "MDQ6VXNlcjYyMDcwMzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Fi3",
            "html_url": "https://github.com/Fi3",
            "followers_url": "https://api.github.com/users/Fi3/followers",
            "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
            "organizations_url": "https://api.github.com/users/Fi3/orgs",
            "repos_url": "https://api.github.com/users/Fi3/repos",
            "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Fi3/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 4875638934,
              "node_id": "LA_kwDOFDde0s8AAAABIpxYlg",
              "url": "https://api.github.com/repos/stratum-mining/stratum/labels/template%20provider",
              "name": "template provider",
              "description": "",
              "color": "D93F0B",
              "default": false
            }
          ],
          "assignee": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "Sjors",
              "id": 10217,
              "node_id": "MDQ6VXNlcjEwMjE3",
              "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/Sjors",
              "html_url": "https://github.com/Sjors",
              "followers_url": "https://api.github.com/users/Sjors/followers",
              "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
              "organizations_url": "https://api.github.com/users/Sjors/orgs",
              "repos_url": "https://api.github.com/users/Sjors/repos",
              "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/Sjors/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "COLLABORATOR",
          "milestone": {
            "url": "https://api.github.com/repos/stratum-mining/stratum/milestones/13",
            "html_url": "https://github.com/stratum-mining/stratum/milestone/13",
            "labels_url": "https://api.github.com/repos/stratum-mining/stratum/milestones/13/labels",
            "id": 10430703,
            "node_id": "MI_kwDOFDde0s4Anyjv",
            "number": 13,
            "state": "closed",
            "title": "Milestone 4",
            "description": "Milestone 4 should ensure no major bugs and specification incompatibilities exist. It sets the foundation for publishing a first official release of SRI. ",
            "creator": {
              "login": "Fi3",
              "id": 6207037,
              "node_id": "MDQ6VXNlcjYyMDcwMzc=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/Fi3",
              "html_url": "https://github.com/Fi3",
              "followers_url": "https://api.github.com/users/Fi3/followers",
              "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
              "organizations_url": "https://api.github.com/users/Fi3/orgs",
              "repos_url": "https://api.github.com/users/Fi3/repos",
              "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/Fi3/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 24,
            "created_at": "2024-01-17T14:19:16Z",
            "updated_at": "2024-03-21T22:15:57Z",
            "closed_at": "2024-03-21T22:15:57Z",
            "due_on": "2024-02-16T08:00:00Z"
          },
          "locked": false,
          "comments": 7,
          "closed_at": "2024-03-18T16:21:25Z",
          "created_at": "2024-03-07T12:02:52Z",
          "updated_at": "2024-03-18T16:21:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T21:19:11Z",
      "updated_at": "2024-03-11T21:19:11Z",
      "source": {
        "issue": {
          "id": 2179883018,
          "node_id": "PR_kwDOABII585pSMZE",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29623",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29623/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29623/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29623/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29623",
          "number": 29623,
          "state": "open",
          "state_reason": null,
          "title": "Simplify network-adjusted time warning logic",
          "body": "[An earlier approach](https://github.com/bitcoin/bitcoin/commits/1d226ae1f984c5c808f5c24c431b959cdefa692e/) in #28956 involved simplifying and refactoring the network-adjusted time calculation logic, but this was eventually [left out](https://github.com/bitcoin/bitcoin/pull/28956#issuecomment-1904214370) of the PR to make it easier for reviewers to focus on consensus logic changes.\r\n\r\nSince network-adjusted time is now only used for warning/informational purposes, cleaning up the logic (building on @dergoegge's approach in #28956) should be quite straightforward and uncontroversial. The main changes are:\r\n\r\n- Previously, we would only calculate the time offset from the first 199 outbound peers that we connected to. This limitation is now removed, and we have a proper rolling calculation. I've reduced the set to 50 outbound peers, which seems plenty.\r\n- Previously, we would automatically use the network-adjusted time if the difference was < 70 mins, and warn the user if the difference was larger than that. Since there is no longer any automated time adjustment, I've changed the warning threshold to ~~20~~ 10 minutes (which is an arbitrary number).\r\n- Previously, a warning would only be raised once, and then never again until node restart. This behaviour is now updated to  1) warn to log for every new outbound peer for as long as we appear out of sync, 2) have the RPC warning toggled on/off whenever we go in/out of sync, and 3) have the GUI warn whenever we are out of sync (again), but limited to 1 messagebox per 60 minutes\r\n- no more globals\r\n- remove the `-maxtimeadjustment` startup arg\r\n\r\nCloses #4521",
          "user": {
            "login": "stickies-v",
            "id": 69010457,
            "node_id": "MDQ6VXNlcjY5MDEwNDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stickies-v",
            "html_url": "https://github.com/stickies-v",
            "followers_url": "https://api.github.com/users/stickies-v/followers",
            "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
            "organizations_url": "https://api.github.com/users/stickies-v/orgs",
            "repos_url": "https://api.github.com/users/stickies-v/repos",
            "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stickies-v/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29623",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29623",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29623.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29623.patch"
          },
          "created_at": "2024-03-11T18:18:21Z",
          "updated_at": "2024-04-02T00:16:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-13T07:51:43Z",
      "updated_at": "2024-03-13T07:51:43Z",
      "source": {
        "issue": {
          "id": 2182604130,
          "node_id": "PR_kwDOABII585pbmSj",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29641",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29641/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29641/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29641/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29641",
          "number": 29641,
          "state": "open",
          "state_reason": null,
          "title": "scripted-diff: Use LogInfo/LogDebug over LogPrintf/LogPrint",
          "body": "`LogPrintf/LogPrint` are problematic, because:\r\n\r\n* Their name is non-descriptive of what the function does (info logging or debug logging).\r\n* They are deprecated aliases, where code is using either the deprecated or non-deprecated alias, which is inconsistent and confusing.\r\n\r\nFix all issues by replacing the usage.\r\n\r\nWhile the diff is large and may cause merge conflicts or backport conflicts, I don't see the deprecated aliases being kept forever, so this will have to be done at some point. All conflicts should be trivial to solve, in any case.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29641",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29641",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29641.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29641.patch"
          },
          "created_at": "2024-03-12T20:21:40Z",
          "updated_at": "2024-04-01T11:51:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 12142044786,
      "node_id": "LE_lADOABII585_NKHDzwAAAALTuOZy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12142044786",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T06:23:37Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2002328172,
      "node_id": "IC_kwDOABII5853WRps",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2002328172",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T06:23:38Z",
      "updated_at": "2024-03-17T06:23:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/22448274349</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2002328172",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12158474796,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALUs5os",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12158474796",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-18T20:01:37Z"
    },
    {
      "event": "commented",
      "id": 2004835535,
      "node_id": "IC_kwDOABII5853f1zP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2004835535",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-18T20:01:40Z",
      "updated_at": "2024-03-18T20:01:40Z",
      "author_association": "MEMBER",
      "body": "Rebased after #27375. Changed the default binding from `0.0.0.0` to `127.0.0.1` to make it abundantly clear that it's currently unsafe to expose this to the big bad internet. The previous behaviour can be achieved with the new `-sv2bind=0.0.0.0`\r\n\r\nFinally, we immediately listen for new client connections. Previously we'd wait for IBD to finish. However we hold off on sending template updates. Except for Signet, because you may be the only miner and after a day of not mining the chain would get stuck.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-2004835535",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T00:10:56Z",
      "updated_at": "2024-03-19T00:10:56Z",
      "source": {
        "issue": {
          "id": 2193536131,
          "node_id": "PR_kwDOABII585qA2aJ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29675",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29675/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29675/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29675/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29675",
          "number": 29675,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Be able to receive and spend inputs involving MuSig2 aggregate keys",
          "body": "This PR implements the [proposed](https://github.com/bitcoin/bips/pull/1540) MuSig2 descriptors, derivation, and PSBT fields so that the wallet can receive and spend from taproot addresses that have keys involving a MuSig2 aggregate key.\r\n\r\nThis pulls in (an older version of) the musig module in libsecp (https://github.com/bitcoin-core/secp256k1/pull/1479) in order to do all of the necessary MuSig2 computation.\r\n\r\nAn open question is whether the approach for handling the secnonces is ideal and safe. Since nonces must not be reused, this PR holds them exclusively in memory, so a restart of the software will require a restart of the MuSig2 signing process. Additionally, the current MuSig API in libsecp basically involves us holding onto and passing around an opaque libsecp object. There may be some additional work there to make the code more ergonomic.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29675",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29675",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29675.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29675.patch"
          },
          "created_at": "2024-03-18T22:32:37Z",
          "updated_at": "2024-04-01T23:51:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 12162389790,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAALU71ce",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12162389790",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T02:07:33Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T06:46:20Z",
      "updated_at": "2024-03-19T06:46:20Z",
      "source": {
        "issue": {
          "id": 1712671682,
          "node_id": "PR_kwDOABII585QpmkI",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27679",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27679/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27679/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27679/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27679",
          "number": 27679,
          "state": "open",
          "state_reason": null,
          "title": "ZMQ: Support UNIX domain sockets",
          "body": "This is a follow-up to https://github.com/bitcoin/bitcoin/pull/27375, allowing ZMQ notifications to be published to a UNIX domain socket.\r\n\r\nFortunately, libzmq handles unix sockets already, all we really have to do to support it is allow the format in the actual option.\r\n\r\n[libzmq](https://libzmq.readthedocs.io/en/latest/zmq_ipc.html) uses the prefix `ipc://` as opposed to `unix:` which is [used by Tor](https://gitlab.torproject.org/tpo/core/tor/-/blob/main/doc/man/tor.1.txt?ref_type=heads#L1475) and now also by [bitcoind](https://github.com/bitcoin/bitcoin/blob/a85e5a7c9ab75209bc88e49be6991ba0a467034e/doc/release-notes-27375.md?plain=1#L5) so we need to switch that internally.\r\n\r\nAs far as I can tell, [LND](https://github.com/lightninglabs/gozmq/blob/d20a764486bf506bc045642e455bc7f0d21b232a/zmq.go#L38) supports `ipc://` and `unix://` (notice the double slashes).\r\n\r\nWith this patch, LND can connect to bitcoind using unix sockets:\r\n\r\n\r\nExample:\r\n\r\n*bitcoin.conf*:\r\n```\r\nzmqpubrawblock=unix:/tmp/zmqsb\r\nzmqpubrawtx=unix:/tmp/zmqst\r\n```\r\n\r\n*lnd.conf*:\r\n```\r\nbitcoind.zmqpubrawblock=ipc:///tmp/zmqsb\r\nbitcoind.zmqpubrawtx=ipc:///tmp/zmqst\r\n```",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27679",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27679",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27679.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27679.patch"
          },
          "created_at": "2023-05-16T20:08:15Z",
          "updated_at": "2024-03-22T22:06:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 12188469049,
      "node_id": "LE_lADOABII585_NKHDzwAAAALWfUc5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12188469049",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T17:11:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE1MTcxYTcwMTQyOWIxMTUzNmI2NTA3OTVkZTkyZGZkZTRhMWEzMjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15171a701429b11536b650795de92dfde4a1a329",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/15171a701429b11536b650795de92dfde4a1a329",
      "tree": {
        "sha": "458fa20e7e8cd7ead1d77be0d64c67af711b2a83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/458fa20e7e8cd7ead1d77be0d64c67af711b2a83"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 458fa20e7e8cd7ead1d77be0d64c67af711b2a83\nparent 71b63195b30b2fa0dff20ebb262ce7566dd5d673\nauthor Sjors Provoost <sjors@sprovoost.nl> 1701349128 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711094914 +0100\n\nAdd sv2 log category for Stratum v2\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9PIIACgkQV/+b28ww\nEAn4lg/7B14+lvTJQhbNyx8SQlZONZsgyL+d6yKUSCrSNBkUhQm6rAgkg77eD7/i\nOKNEjAGRU9a+CDy4Hw2Hpoj36Qzq5xQeLcp/4yMRbo4g8MOYaEe6dRaD+ZLDFv4w\nLON5xfQNLfTRBwQ8T1wss7jwFDO0lW8nBhl3tEMAI2+o5SKos2HzUXEHNF7W44XH\nuRjI3sqm1xrd3QbcdgNY8YKGIbqq/frtiBm9aIicgCW0pllxUSYfEb1uo7tN2/pR\nYpdOP27JWeLXs3ufeOLGM3Dkl1Y4cnnaSYnfxOiOBZwW+EQFvxm3iYJvadk48WrF\ngDFcAba7CVaH18ZbXZ5dMEh36MlVpuK8tg02UXSoqXU9xa/AsV6ucKXM3DOJ1LBn\nnlTPQGxhf37ffonSD1zNBfnPAim3MUdG2PhDNNrqdhpbcaA1qk5YvWaMriIJo9Dk\n4NT6UboIHkU2E4pJ7+z8XaBmOThNAAxALU4eN/wSWs5B1Yu7sNBryXwPPWUV0tjf\nrYEswN3bqNa3MVI30yP1G36k8qC2KCS7pLEOdC/cK/EYUOwl6vV2bRwAbYBJrenR\ntsvjP+oXxbCRltDxkhcS4qd2xS+GTAOzMLEEWnI+vGp47vlObhHA0lJFGKQ3iRLR\nWX3aKlF+mljqqbRJsA95oWtrQRqNyhT+nytD2XwpFRU4Lp5PLCU=\n=bcYO\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/71b63195b30b2fa0dff20ebb262ce7566dd5d673",
          "sha": "71b63195b30b2fa0dff20ebb262ce7566dd5d673",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/71b63195b30b2fa0dff20ebb262ce7566dd5d673"
        }
      ],
      "message": "Add sv2 log category for Stratum v2",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:08:34Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-11-30T12:58:48Z"
      },
      "sha": "15171a701429b11536b650795de92dfde4a1a329"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM5MmQ5ZTZlODNhOTFhMzNiY2MyZWYwZjNhZDE0NzNkZWMxNDdiMTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c92d9e6e83a91a33bcc2ef0f3ad1473dec147b17",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c92d9e6e83a91a33bcc2ef0f3ad1473dec147b17",
      "tree": {
        "sha": "0ac085b8a49cf5953c4a5cac15d6c4b96db15cb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ac085b8a49cf5953c4a5cac15d6c4b96db15cb4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0ac085b8a49cf5953c4a5cac15d6c4b96db15cb4\nparent 15171a701429b11536b650795de92dfde4a1a329\nauthor Sjors Provoost <sjors@sprovoost.nl> 1706876104 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711094915 +0100\n\nAdd sv2 noise protocol\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9PIMACgkQV/+b28ww\nEAn/GQ//b5zdxdKMK9bH99fAmtkrdhAtkjw8CcPlQ+/FHD3vcQ18MsEjn9PJCigx\n7ifwcJLbe6WnwLAy+EcGa/TvA1sRxzbrTWgQzZlKpH2zCkni0QojB+Bw62B89nf9\nyYcMUEa0CusDEfjJ4n8/QHvPNu5PeY9o2lZEGrYuuK5/h5NpGVnYBrDCXUHKAxwZ\nqBBL8DkZkBp13+4VSHQ81gFQYKWKLbgDoR/LyP/tXWHGxurHgSeWE8/Y8hpyxEOL\nfpIabNQGDabg5idI5bq4CZRUCsSMayp1+NvXn7BSTffGLkoB1jvlhahhm5nH/x+Z\nATsNbyMnNAOn5adilt3I/ZW13xi9+fkV5HdxC7ajhT7h/mSOuLU9FqlN/XelN8OS\nVEAw2DFExleRMV9aR/itSbstsURcG83AIF4es4B+4kWy9JsNupUkbYWpqgvRI9/V\n5zPftoMPAGnfjjQtADjrYU9h4gD5WdKwyAqwKFrWToWECewl2heYCH0scjFvZI19\n1TA2B4HJkgzc1Tz9yhlBQ/EU+D2uZPlZO7wh2yQ++dkZGc2Rk2jvRrCZpNS96ysV\n1+rufm/f5cDnFOSHseXkBvyI5zcjuXIJOy6FGWs5WBKmFroAAI637lkXZZc8WK7M\nE/nd2J/CatJPQ77tXGPYQNSVMsSuhwL6wixilmiFZvPmQ/mRkb8=\n=aeSF\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15171a701429b11536b650795de92dfde4a1a329",
          "sha": "15171a701429b11536b650795de92dfde4a1a329",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/15171a701429b11536b650795de92dfde4a1a329"
        }
      ],
      "message": "Add sv2 noise protocol\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:08:35Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-02-02T12:15:04Z"
      },
      "sha": "c92d9e6e83a91a33bcc2ef0f3ad1473dec147b17"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg5OWZhMjU3ZTliMTM4MTdiN2FhYmE5MmEwMTczYTViNGQ2NTYzZDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/899fa257e9b13817b7aaba92a0173a5b4d6563d0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/899fa257e9b13817b7aaba92a0173a5b4d6563d0",
      "tree": {
        "sha": "de3f84e7c2c5f8e85f4cfdbab6e0c9befb395300",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de3f84e7c2c5f8e85f4cfdbab6e0c9befb395300"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree de3f84e7c2c5f8e85f4cfdbab6e0c9befb395300\nparent c92d9e6e83a91a33bcc2ef0f3ad1473dec147b17\nauthor Sjors Provoost <sjors@sprovoost.nl> 1704740613 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095521 +0100\n\nmove-only: introduce common/transport.h\n\nThe proposed Stratum v2 integration introduces a new Transport subclass. This commit makes it easier in the future to move this integration to its own process.\n\nnet.cpp is currently part of libbitcoin_node. Avoid a dependency on the node by moving the Transport abstract class to common.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9PuEACgkQV/+b28ww\nEAkkTRAAqRtiCymhKWyXbq7a/14Pg/bg49ZbqRl7CQpLdfdLLZufeOIvfN4mlGvb\n53vygtZ10xLFFu12hevs4aX6//LhrtxDH7SgriUbSZjm6zrvOkU0VKbHwCC2aW8N\naOJsgUf8xBY5V5jMdj71gg8qeGIxC2cUpHsUzJxyDJ6lPHMIp0HG55fgF0riq1pr\nhdwd7BQm3Hs1ViLoSXSDyhiqI+nZwj3kbkMMgb+5RGyao0mRaEB95c57exnWX2Gd\n/q1rg5OsDcqrku/U7mbQvTbSjtfEzaooDpghxp4zF6H7TMMLq6guNvC53vq0KXQo\nQ+7yepbDyMpZvL/UGodpVscEg8/+I2unbxcZlbm07Fx6anrkH41SV+SQfoYcMzvL\nDc0H3w3eBrcvDQBqX+Lmk+zDqmqHHFhl48ZfdlGIdM02o/RM85fjKwelBKvVWtbr\nPdxjSi4CJgCRB8aP2xjbnDiXpy1JCKNTaQe9IDMov+TyC4w7Xun8tLreJx9tH0Mb\n6noQADRmzR2a5EDyypqD/T0E5rnYumauWhMdyWArTawrqAwvzXSuWfywOvC5Yi0Y\nEU0DBXVzCbk4Yi+EGE6NjNgF4sYPQvtqpEcD3KAT9RHicsjJasf/3dqL9Wm+TkEc\ngNm5AteqAHZj4NJigmDHM0mBzNJwriLiLtvdshyy9fXPDmWmIPQ=\n=NcFQ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c92d9e6e83a91a33bcc2ef0f3ad1473dec147b17",
          "sha": "c92d9e6e83a91a33bcc2ef0f3ad1473dec147b17",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c92d9e6e83a91a33bcc2ef0f3ad1473dec147b17"
        }
      ],
      "message": "move-only: introduce common/transport.h\n\nThe proposed Stratum v2 integration introduces a new Transport subclass. This commit makes it easier in the future to move this integration to its own process.\n\nnet.cpp is currently part of libbitcoin_node. Avoid a dependency on the node by moving the Transport abstract class to common.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:18:41Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-01-08T19:03:33Z"
      },
      "sha": "899fa257e9b13817b7aaba92a0173a5b4d6563d0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBkMjkwYjcwOTBkMWE2NzRmMmFkYmEwYjQ1NzJlNTRlMTM1ZjA0Yjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d290b7090d1a674f2adba0b4572e54e135f04b9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0d290b7090d1a674f2adba0b4572e54e135f04b9",
      "tree": {
        "sha": "4d24c0be362efb26841289cb9c76774ccbf1b1f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d24c0be362efb26841289cb9c76774ccbf1b1f5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4d24c0be362efb26841289cb9c76774ccbf1b1f5\nparent 899fa257e9b13817b7aaba92a0173a5b4d6563d0\nauthor Sjors Provoost <sjors@sprovoost.nl> 1703854081 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095521 +0100\n\nmove-only: v1 and v2 transport to their own file\n\nThis helps reduce the size and scope net.h, as well as to make v1 and v2 transport usable outside libbitcoin_node. This is useful for utilities that need a one-shot p2p connection, e.g. to broadcast a transaction or fetch a specific block.\n\nThis commit is not necessary for Stratum v2 process separation.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9PuIACgkQV/+b28ww\nEAnMvBAAmK968O+fYqLJhl93Jj+Ycl/Kfi3U9UnOQ9zdp6QkV2VXq3dgcbJvtbTB\nt0zmAbQR8xhCpJiE2GuwD4/LM3YZDeNqymxnRk2yIkoFPdCugou/Hyb5f2J4skFP\nGF9YwPqh+h0JEWAJHv0bufTjEoXtt7njhPRhavfAMFCV+nvlkMpwWWNX4IexJJJL\nMf2LuctlYv5wDsYCn51+zRBXJvMQyNN5niPw/6W/IfWcLbJCN/2lo85R8s/7gU5K\nOCMNRyht/GBJqWGF8XAVZZLJDWxe0y6RiNZ1MTjpUdvV8+Y++Wv8gWKunmQI4I5B\nsE7snq3WXxESKOvCTTqJvj/XCAIIIn2o6IrBcaN1QlQG3fL6c25Y3LFnUciV/gwS\n8yq5X1SXtw43/JV6tR7AJZLNc1a4zLh6sC8B7C503QyDo+fOdlQyu0bDxmgdJPQn\nUAPLAv4GvHN2mEzHtx+al8u/EAVW6iPhJGcU3fdFnmxrNGtDrRI8kXXab58nYVlM\nd1LEpxv04pXrQpvs47g8/veUy8syPpm3rYuqZZPaQDTZMsN9i7Cg1sJoJ4EEqH4M\nZMHsuDlR5MVxW3VGmFtKuLAt3kRjEYvPovPyEuEH4chIHWJjAtfXc49l95sCg1ZY\nU2XV2kfJ1nCFnm1Df+nBmvSCulFo9YeBcD/fuzXVYI1VZxnT9S8=\n=cPeS\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/899fa257e9b13817b7aaba92a0173a5b4d6563d0",
          "sha": "899fa257e9b13817b7aaba92a0173a5b4d6563d0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/899fa257e9b13817b7aaba92a0173a5b4d6563d0"
        }
      ],
      "message": "move-only: v1 and v2 transport to their own file\n\nThis helps reduce the size and scope net.h, as well as to make v1 and v2 transport usable outside libbitcoin_node. This is useful for utilities that need a one-shot p2p connection, e.g. to broadcast a transaction or fetch a specific block.\n\nThis commit is not necessary for Stratum v2 process separation.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:18:41Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-12-29T12:48:01Z"
      },
      "sha": "0d290b7090d1a674f2adba0b4572e54e135f04b9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg3MjIxZmQ5NzIzMDFiNDIzZTIwN2JmNTBiYmEyMDdlODQ2YTZjYTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87221fd972301b423e207bf50bba207e846a6ca9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/87221fd972301b423e207bf50bba207e846a6ca9",
      "tree": {
        "sha": "d4a833b9228cbc2d248a4395fc367b63d425c4ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4a833b9228cbc2d248a4395fc367b63d425c4ed"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d4a833b9228cbc2d248a4395fc367b63d425c4ed\nparent 0d290b7090d1a674f2adba0b4572e54e135f04b9\nauthor Sjors Provoost <sjors@sprovoost.nl> 1701423228 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095522 +0100\n\nAdd sv2 messages\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9PuIACgkQV/+b28ww\nEAm+jQ/+JsFIsLjBm95Kk0Zvz+jwIra9pu4EcJqN7yLdznqRhEnxCab2yet+K/oc\nh4x5asFfIXxqpz4tRjRCEpdVBBPdO0nJigGOr5kZKAYcr32zRa+ywQxP0p5IO28x\nKe1hwWXQMknJMrtV69Rt4AmwgT1dOeYDU9h/IxCZAOKflNDtx5oVKc74Zi6oYDCJ\nijoT+4XLTnZx/23pctom7qjfbFGOQE6Gg2EZx25iqnaGRxFVHx8jklWrIcOkwwgN\nnqaTzViPMSa6I0o+AxyoeDhSdrS3c/Rlmxq1Bf178p0gMlmf0wawun0Tv6dN+qxf\nVUc6V9QHnArlJ2SDtcaDlWBpZepur+HvODEdN3qT7NEoVJxoxT/o8yNFGITmauZx\nvjpPGcz/hXUwleWOHHxdAcUG2DxnROQVMD6cL4g2tLnN8OxioxWqrOQL8NbZAKFc\n94vOB69jRS8+ViJwSjmWe7Eyj8KaGD/FJukWD0+XepoP/PGhd7R8z6oqIOpuOcFh\nHvYiyabQ4Igon8+EvbXAf1Oqr7u3TXk0H6NTp3S7yrSF5gWH/Z604/yph1v974MC\nTQ+an2GB/tfgrDWvXsP41w8MDlGYLYgXlKtX8alSUxbgh5VvJvmUzIj7J/I7Vq/X\nMakF7Wu5MLUpCMlHQLtldZuxDNmZbudB4A+mFItBjJbdngRgS+g=\n=fVpY\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d290b7090d1a674f2adba0b4572e54e135f04b9",
          "sha": "0d290b7090d1a674f2adba0b4572e54e135f04b9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0d290b7090d1a674f2adba0b4572e54e135f04b9"
        }
      ],
      "message": "Add sv2 messages\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:18:42Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-12-01T09:33:48Z"
      },
      "sha": "87221fd972301b423e207bf50bba207e846a6ca9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU3ZDNlNzZkNzc3YzQ5OWUxYzUyMGJlNTEwZGI5NGIwMDJkMmNhOTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7d3e76d777c499e1c520be510db94b002d2ca98",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e7d3e76d777c499e1c520be510db94b002d2ca98",
      "tree": {
        "sha": "11588046a77406d7675de51aceb892404b57fab6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/11588046a77406d7675de51aceb892404b57fab6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 11588046a77406d7675de51aceb892404b57fab6\nparent 87221fd972301b423e207bf50bba207e846a6ca9\nauthor Sjors Provoost <sjors@sprovoost.nl> 1704742135 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095522 +0100\n\nIntroduce Sv2Transport\n\nImplemented starting from a copy of V2Transport and the V2TransportTester, modifying it to fit Stratum v2 and Noise Protocol requirements.\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\nCo-Authored-By: Fi3\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9PuIACgkQV/+b28ww\nEAkgKhAAkIGSttI3LblVYY4hgMNWlkBZqsjt82HvIa9tAznCw2zifdgHfcF0uOk2\nyQDU5kBHOrzS+M+BPw3nS4E8FGFGwNrTFW9rtZOlpCtbCdIfCp2bWBTFcpoLfqmJ\nWCev7Wn/QRqZk2SVDZpZ04PoifqzjX8MTIXcX183gjU9f6q3QWhvQFoI4l6aYd0W\nhzBew4ozJett/DgP9DhIYwO+nmx+JMsjNFjzMIiWUZHWlmG9eZM+KM+sJxuS5ga7\nsKewjdpzItGM1DcgDmkaXbyA/mlxBrrKVkFpD3GWXJSgZoYfNqFJaSRIS1UsSs83\nU/eql1elrmbUgsegRftvfVAik5vGbZ3b16MSuUiSzqHME69ddOICcfuCai0/JAg+\nxxrdgdkwVqfGlW7BqLKGkfh+6XMmO6BXcxXz+tNkquqTJJIL3Yncmv2JK9YowwQB\nZqHd3YYfNaqctmMbK34vDDLG/Cho8BITwkp7T2hmOMffZ0/DnocrDj9DTBJruWwi\nMzSw8OUCcQiXMF9kXJGO5xzyHBH5doxsIqfdgsUXXwwB7TXG6qD2uLnYNvN5BaZf\npgjZ/FDl/OmvMlPC+K90hrFdsZI4PRc4faix0A+FvxqN9bFjGu3q3eA9lE82/Xix\nxbYxxTCx3rW6fl1wlUevANuluiPDo+ImO+e2Yt2mlwkQxqMcwws=\n=M6b4\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87221fd972301b423e207bf50bba207e846a6ca9",
          "sha": "87221fd972301b423e207bf50bba207e846a6ca9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/87221fd972301b423e207bf50bba207e846a6ca9"
        }
      ],
      "message": "Introduce Sv2Transport\n\nImplemented starting from a copy of V2Transport and the V2TransportTester, modifying it to fit Stratum v2 and Noise Protocol requirements.\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\nCo-Authored-By: Fi3",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:18:42Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-01-08T19:28:55Z"
      },
      "sha": "e7d3e76d777c499e1c520be510db94b002d2ca98"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJiYzhkMzZkODkyNzRhNzBmYWViZmQ5NDFlMjg3Y2IxYWViZjEwYTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2bc8d36d89274a70faebfd941e287cb1aebf10a6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2bc8d36d89274a70faebfd941e287cb1aebf10a6",
      "tree": {
        "sha": "228ad29421f000882f8fd3b26332a0904e3696c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/228ad29421f000882f8fd3b26332a0904e3696c2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 228ad29421f000882f8fd3b26332a0904e3696c2\nparent e7d3e76d777c499e1c520be510db94b002d2ca98\nauthor Sjors Provoost <sjors@sprovoost.nl> 1706793529 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095522 +0100\n\nCKey: add Serialize and Unserialize\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9PuIACgkQV/+b28ww\nEAmIoA//aIIcSfypRtDh9BWQBUG9q9jHa0dhpikcInfCiyeu8o8J+CpdH8Oo8n+x\n7nB+63gEZccOtuuSeTfB8pbXYpP/AvGFEJZ7vvxGzPuo1au2b4YIfCJ21naoNKEL\nesLng/cai4nNSQUP2DsbDOT6aPO2VqSyuzCAXsbIhCJQfG4LpQSrfjxNAPiztu5W\nAB518l40PJpVsM5crqARjYq9Xt8N3zXLzs3qzFIgd6gn62hlBL4o/LbeTyYtzIYN\n9382sB0hm2am2ipeCkAookMZxooyXwpcPW+yrDkbRkxhQ56Hm7YU4p03U/w+sQDA\n66nhGfXYHCxEAlgeNn20xTFULnOvv4dG7+KiQMe9mzlATePxUPZ0awp/DoZ7rkXN\nlD4yfZI0uML84qeyuUf6sIl0MIsEOgc5tI6qCJCpbMpCt81cvd8jPaGdk4nq7g38\neOJPvZn5mEKLnxCFXQCRKbWaf7bTrs5pdSOAHNTbNLi/Ryordwu3tm7ZZH8KAy8b\nBgVCd7z7Tw/1kwLvqVPvMErLCZ6eRzdzG+gY+elkJZiHDGkdME4TbBG/mr6LM6WE\n5DJSGLWB2OSkVJTWjbgtVTZGx3dgxTpGE37o2ygrNIt1/GB2u467nMsQNxT1YUae\nr5d8mIQBhC8xchZJsmsp0/FV5fp/ZFa1juXj5wX4t37gLIpq3qM=\n=Ubxp\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7d3e76d777c499e1c520be510db94b002d2ca98",
          "sha": "e7d3e76d777c499e1c520be510db94b002d2ca98",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e7d3e76d777c499e1c520be510db94b002d2ca98"
        }
      ],
      "message": "CKey: add Serialize and Unserialize\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:18:42Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-02-01T13:18:49Z"
      },
      "sha": "2bc8d36d89274a70faebfd941e287cb1aebf10a6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg1ODkyNmZjOTVkMzBlMjdlMzY0Njg0MWY0M2FkY2E3MWZkZjhjYTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/858926fc95d30e27e3646841f43adca71fdf8ca3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/858926fc95d30e27e3646841f43adca71fdf8ca3",
      "tree": {
        "sha": "108fe9a8bf0a65d9478ec0c4b79040ac7e5e6c5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/108fe9a8bf0a65d9478ec0c4b79040ac7e5e6c5b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 108fe9a8bf0a65d9478ec0c4b79040ac7e5e6c5b\nparent 2bc8d36d89274a70faebfd941e287cb1aebf10a6\nauthor Sjors Provoost <sjors@sprovoost.nl> 1701277619 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095522 +0100\n\nChainparams: add default sv2 port\n\nCo-authored-by: Christopher Coverdale <chris.coverdale24@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9PuIACgkQV/+b28ww\nEAkEqA/6A7ymk9N+mBOxmPMC+R8lLxVb8ITZdLyj7z4l/AIeIv/1aEMN/P7jWg/w\no+39yMMUEtHZxWxZmHGGUDTYn6GfJzrUaDmatrfOCj5pSrDUZD5QRyLx7aX/l4TX\nUDqqrSwtZGmgodpjsxCVnrZHfJX7Vfm9xa/WOH8L67Wz8iyp0yIOlCDdHTZPmIPc\nGbK9O5kQ+k8GvHp3s/9JmskU8n9aR6Umralpu6lnzAHEgsybuHikMvTCQ7vOgq0/\nKGm6ntz901AfigloS90gFNHmj0YYOigBZPTv+Ve9Bf8z+w38bU64g6BBP/AYfd2Z\ngtzbboB9lRO65Yvn3lH6u4EgRPKlK35B1XcYwkvARcTF1JvSa+xa+megzQRpruan\nFyHw3pSqPgjg4EVGEWqIlWjat3fEguG3GBtiD1g9qvZW6Q0xVgc+zk6W4bQA2oky\nucq89slgQBH9ckBldQwasUf6rrHKZyhJKQs7rv5vjDMpaYf1OONovWgsMUHhxiR6\nXarHj+UZfGaDxpJpQGjjaGovG3XLTd1kTupzKljQHekIpw/t1G8ZzPSwUJssZdSd\nrL+0Zlzq/Zh76ZsAlXLv+Mzd7YSvbVML3UuGnudmcAR9koIJdOoQJmInnQdVItXg\nCCX+seYt2i+cB5jsXU7MnLD1+VClDo8xg3GvCQvMYCeCzAxUrHM=\n=GmMX\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2bc8d36d89274a70faebfd941e287cb1aebf10a6",
          "sha": "2bc8d36d89274a70faebfd941e287cb1aebf10a6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2bc8d36d89274a70faebfd941e287cb1aebf10a6"
        }
      ],
      "message": "Chainparams: add default sv2 port\n\nCo-authored-by: Christopher Coverdale <chris.coverdale24@gmail.com>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:18:42Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-11-29T17:06:59Z"
      },
      "sha": "858926fc95d30e27e3646841f43adca71fdf8ca3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY4ZWQ2YzdlZjk5MmIyMTBhZTZhMzk1OTE0MjY3MzkyMmI2ZTljZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68ed6c7ef992b210ae6a3959142673922b6e9cd9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/68ed6c7ef992b210ae6a3959142673922b6e9cd9",
      "tree": {
        "sha": "12d3d69e3deaa76a684726b1d5af6fb172bf8c0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12d3d69e3deaa76a684726b1d5af6fb172bf8c0b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 12d3d69e3deaa76a684726b1d5af6fb172bf8c0b\nparent 858926fc95d30e27e3646841f43adca71fdf8ca3\nauthor Sjors Provoost <sjors@sprovoost.nl> 1704728495 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095987 +0100\n\nStratum v2 template provider scaffold\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9QLUACgkQV/+b28ww\nEAnwqxAAnB9aY/lixgvTMNOLMjQakvNtRlfxz9MJOFmG2qs7mmpSoKKm1ZaBbbdg\nTPFHnP6KFPZx+54n1MKyVe9xHErm726ca/1otjuDqoUuBA5/K2pmWjbXehdXJr6V\ntUh3bBvaE7exyaF0StZH5zcYerGKClghMDcfgRnwSXRpFYMx2cvpqin7Lwg3zntA\nCklakeP+N/1X2I6EZm1xoZ1xzZbaLkkR0c7p7AYFPGJ+o1TW4+iU3c/vmM8VENLd\n/yl97kNA9QR4iWjpHEgnhZ4ipWC+a6xAPPmqwh/AVl1ffGvqdVNIXsa4ff+rganY\nefIg61Ii4+YfhBWv0ZBIFvaSPwS3Voj83n4QFEzWNWZeTtS+w0HiOed/VRGAgidG\nu8K7Uwf22G0yUR9+4MgzC6qNb9fA25wmNN/HPvLItC3yjHw80cEryptrUnOcyzHF\nv7sDmjycEUFKUbMi5DPKyiSKXPUtHDO6I89OQsK51gWpKI8UT1YFWhGEyKV2Gn9T\nxL3y/9wiLwq1hHek6Q/gFpio0Fp5wdwrQkdPYiYYig5RZaO3HJZuEeQTNa6Tg0rX\naYzlpRD1szRfMDnrZjN1zLZ7MZsGkBiTK7mBZOmBHqUbxmBctUXbmuxlVhJzvysS\nyToQ6OHyWD/Ur1PeHc1BF3XDhIbSoOmFtM9rulMBy+ArQxTcHIc=\n=cy68\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/858926fc95d30e27e3646841f43adca71fdf8ca3",
          "sha": "858926fc95d30e27e3646841f43adca71fdf8ca3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/858926fc95d30e27e3646841f43adca71fdf8ca3"
        }
      ],
      "message": "Stratum v2 template provider scaffold\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:26:27Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-01-08T15:41:35Z"
      },
      "sha": "68ed6c7ef992b210ae6a3959142673922b6e9cd9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFhMzE5YmI3YjYwMDNjNzk0Y2VlYzQ0MTdiNzhjOTZiYjZkZjZhYzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa319bb7b6003c794ceec4417b78c96bb6df6ac6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/aa319bb7b6003c794ceec4417b78c96bb6df6ac6",
      "tree": {
        "sha": "d0364c0e72b8e280730aa563db531a0208e339ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d0364c0e72b8e280730aa563db531a0208e339ca"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d0364c0e72b8e280730aa563db531a0208e339ca\nparent 68ed6c7ef992b210ae6a3959142673922b6e9cd9\nauthor Sjors Provoost <sjors@sprovoost.nl> 1707468085 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095989 +0100\n\nTemplate provider sv2 connection support\n\nThe template provider will listen for a Job Declarator client.\nIt can establish a connection and detect various protocol errors.\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\nCo-Authored-By: Fi3\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9QLUACgkQV/+b28ww\nEAn3uQ/+NWxllkLwdU4myR/dXhI4sEWiUXr6xLM6zVbbZA30D0PzA66fMJirBlBX\n7AvFHxf0v5hG115c5Lu/KBU995xL/cwOGPlyWRoi63Mpk62sMI+tUSjiQgtDNU/5\nyREMY7BP8hXRk8JVplxkdIxWiVimYdhMhhGTOD1MfmVoqNnGD/noPsS5UprlHncA\ngftu/OlkTx6U6Qy2EDFdGtg3WvDqrQPV/DFDhIwFzZS2qCxBU8+MAXHqiULNpsve\n9lp6IX+VCvTEBKQdHikq9Cl8g9uhqp3lttoKtR9q2nOVl2MzXLHgMiouH/PQr7rr\nUPQnJO+cJQA3Pm9fnvHOxJr41pdrzlsNcvMZAmH8jIusgDnYYshPZzs+1SadhjVq\nTbDlPcsOnGCMzxyKYHnmBMmN0JTBolbge6uMLI+PE7uZRDjxtFweHWspwF5/5GgQ\njNDedC1yNbNJkDPUG6z/04RoruBYqjlcoUq1sBmrLDrH0LwgICgRycqMfHben2sW\n0m7IUqqfMIrTiDVGjeCaiA3RZnFWWwE5RUIadd0SjHMa/ugPkEYkILiBJkr6xQDP\nyUvIPaPnuMR2KkCriD59IHs5LirWlHLyFfXWm0gGooeg5LCk5cfvnbQIi+bPWE7+\nPddGzEaS9Vr1uoVLOh5qUrVhQen7sfnHS6sRwOxam1oHGBwO6sU=\n=3wzZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68ed6c7ef992b210ae6a3959142673922b6e9cd9",
          "sha": "68ed6c7ef992b210ae6a3959142673922b6e9cd9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/68ed6c7ef992b210ae6a3959142673922b6e9cd9"
        }
      ],
      "message": "Template provider sv2 connection support\n\nThe template provider will listen for a Job Declarator client.\nIt can establish a connection and detect various protocol errors.\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\nCo-Authored-By: Fi3",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:26:29Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-02-09T08:41:25Z"
      },
      "sha": "aa319bb7b6003c794ceec4417b78c96bb6df6ac6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRlYTMxZTgzZjg5MDYxYzVkNTQ5YzAyYzMzZTUxMmJhYTc1MTNjZjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ea31e83f89061c5d549c02c33e512baa7513cf8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4ea31e83f89061c5d549c02c33e512baa7513cf8",
      "tree": {
        "sha": "b67b63afff6855f9d36af047dbd3b839afa15a5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b67b63afff6855f9d36af047dbd3b839afa15a5b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b67b63afff6855f9d36af047dbd3b839afa15a5b\nparent aa319bb7b6003c794ceec4417b78c96bb6df6ac6\nauthor Sjors Provoost <sjors@sprovoost.nl> 1704985128 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095990 +0100\n\nPersist static key for Template Provider\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9QLYACgkQV/+b28ww\nEAkFCQ/7BGpZUghpZyR5Emu4u9qjruJSVlGhI++mebFyON+UHmoOYVpaKM70uFSL\nU4xjmRGkjKFXo+qnqOTFvIxBFBsGeXMUFWwgN+sCBOnvMlyKnEF62D1A012JKOzw\nN9tmmwM7ypwXM+jCC8uoGUgDRlIdLkqTzzn7UIYEnT6QChB4LQXADcs6HlqhPieN\npXidrtfWbNHnkcIzwcVAUxufQwXrOYp6VuzpR0Iktf9v0POc6jQ4rL/AJXkoVXdF\nz4623cABIR6i9PrFTBRL8krvbmBrn+j78n8dD6u4HDQTyUrSwK+FrX+uMBc8BPbI\nQ2nulrYPaWrWXCCutofI7EmNXJzF3MkmDehUcKArlVmuxlh3kFrK7TPpON4jvsCZ\nFS4Xv7b1ODeDSHEwltQwoaz8pzZ/fr2uB/oKsMnZgQxSDGJU2K5vg8x4NBoFqYtA\niJwHwvnf0SmJppmOwgxdXsVoiPihx7HbLb5n3jSZa2gNglS4lyoDwJ/BPD/K8zjv\nJYPKVVIOzpHrssJMzMcn8o3o9IPl0u6k2ImD0pDEZA3mV5Q+bUG/aYkySWI5lN4a\nc/KWSXZcgnrMpa5oo6ANwWOmzAPMLBm5/04CWxVBK23y4K97rPuC1qGG5uqREcGA\n0Te2qA8wd3qimZwuHQJeU+lLRnsUYp7FJcfaPvdjXxTAzyKHeyc=\n=D1Tu\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa319bb7b6003c794ceec4417b78c96bb6df6ac6",
          "sha": "aa319bb7b6003c794ceec4417b78c96bb6df6ac6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/aa319bb7b6003c794ceec4417b78c96bb6df6ac6"
        }
      ],
      "message": "Persist static key for Template Provider",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:26:30Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-01-11T14:58:48Z"
      },
      "sha": "4ea31e83f89061c5d549c02c33e512baa7513cf8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEzOGYwZTQ5Mjc3NjcwZTAyNjg5YTg1ZWI1ZTZjZmZiZTYxOTgyZDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/138f0e49277670e02689a85eb5e6cffbe61982d8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/138f0e49277670e02689a85eb5e6cffbe61982d8",
      "tree": {
        "sha": "fa9ec39acb873759de91e28961ef59bc1c104963",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa9ec39acb873759de91e28961ef59bc1c104963"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree fa9ec39acb873759de91e28961ef59bc1c104963\nparent 4ea31e83f89061c5d549c02c33e512baa7513cf8\nauthor Sjors Provoost <sjors@sprovoost.nl> 1703773536 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095990 +0100\n\nSv2: construct and submit block templates\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9QLYACgkQV/+b28ww\nEAkpuA//d6HaigJh2R3Cr3MvkRa18hvXeFgEmaI0sWAo4NQmPbT6HaPEUlIfzBfe\n/mxe8npKDwowX8MTnGXG6aM759pktOQfYB2f2vuSE4pwH/iu8sdLSyv9hUjnZebX\n7O1nGNDXdC3UTuRcvWz8L7UhgXY8bCqolDNgzz62tiho2sBi66BIRH8vRx5NZEKy\nWztrz/pMJtstxKBRx7EIckBh/c7aW+poKLC837ih7c5BV3GirBtgOazirkL8HzIQ\nzKlaQU/+EGNyea7nTDWiSPtl0STPQCLHxQZmQ4WBoqkldlII/LOgbVBXEcYvnDJ9\n1Pv4iOi1RmhRBhhML1XRB67wx6wh4jr4KfNqbO7rnzZfpwjS6c2BHp0Ct5ahre7t\n2PdyoF+gsnzwI1G3GuGd8i3V4BtFBEo/+kL7wjrGGUJw5PJMiigH9kPw/WKxDHR+\nwCDFk3/gG8qWOgexGumZCJPHb0n49BzG9ZfGhcG+isBlWl400EguIKnPvuGVwpUH\n2TNQcoU3phEXri/K41kHPr05x9z2vgJC90QphUPcdQYdq1YLmwXnr7J6S4QE1Bow\nHNJsYYfGON4IyIkjXGMqGPBn9oZakapHCcT+cvFG/wShi6ylGSznJF0xIQPQac/C\nqLB4Ef2ZHd1XeGsOFKRf112H+wNGd/Dg8+QR2SXrv99YP0HMtCU=\n=kd/d\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ea31e83f89061c5d549c02c33e512baa7513cf8",
          "sha": "4ea31e83f89061c5d549c02c33e512baa7513cf8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4ea31e83f89061c5d549c02c33e512baa7513cf8"
        }
      ],
      "message": "Sv2: construct and submit block templates\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:26:30Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-12-28T14:25:36Z"
      },
      "sha": "138f0e49277670e02689a85eb5e6cffbe61982d8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA3M2EzZjgxNzRlZGQ3ZWIzYjMzMDM0MjM2ZGNlZDljYTVkNjlmN2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/073a3f8174edd7eb3b33034236dced9ca5d69f7a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/073a3f8174edd7eb3b33034236dced9ca5d69f7a",
      "tree": {
        "sha": "bb07f79454b62c945511d36753e72bdb83719d14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb07f79454b62c945511d36753e72bdb83719d14"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree bb07f79454b62c945511d36753e72bdb83719d14\nparent 138f0e49277670e02689a85eb5e6cffbe61982d8\nauthor Sjors Provoost <sjors@sprovoost.nl> 1708086291 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095990 +0100\n\nIncrementally update sv2 block template\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9QLYACgkQV/+b28ww\nEAnZNA//RvugigqLfy/rMs6A71vGDU/hWkqnD1HoQbQFeE39cBiCQ6N8CQgaz4nw\nTR0i5LHE7dF8tqcZd3MFNgD3ElP9j3znkaRAuhQvwNwDhCp2WiJsUTAj0j1nTIWd\ngJMDFihbJjxm9RqsPcFkGu3AioxVE662+yFsyFiD0tPRD/Un9FaQJG/+hGGrvcwG\nPZ3FKMUKg+ZkL4R0G/0p63dIa9vKGm5WpqqtCufYi7DukWVRD33EBCvj0BqJUsn0\nzyO17dU9qmmCkG6rYV/+KgV3ncZkZEzCXF/bgbnzPPmts23zzoRliNX2Pj5Y22kQ\nRjw7zK+vqap0VghUimpA1VOknkBpP+pndNau15s3kNzqFU7O4nncbfgrqJuTSOJI\nbtladtymfCLWj6Spzu1HM6NV2MRDMBWCWkR8pzdb2+9KsTN7NgbDTR25c1XAYYCs\nFC7w4t43sLDERaKgcN4UXaatoS9dlyc59lKF8ZSAl1qAV5td1ND5KE34ZhxEi5m4\nQuV044fwqFaX6LH52jDJw3cZ5aQZdS7GSyhD57uEs301cenQSsvM6Jdi/wSKzITs\nLRwhELvKygPfXo64OIRwEi9EKiYXySG/uykmnchZfd930LFYMSJ5GZKWWDw2uXts\n8gRfyMj1qFawHLTfJaHBgw33uh0jK8ttloe2E7z+2AZg/e3nkfM=\n=0xl3\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/138f0e49277670e02689a85eb5e6cffbe61982d8",
          "sha": "138f0e49277670e02689a85eb5e6cffbe61982d8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/138f0e49277670e02689a85eb5e6cffbe61982d8"
        }
      ],
      "message": "Incrementally update sv2 block template",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:26:30Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-02-16T12:24:51Z"
      },
      "sha": "073a3f8174edd7eb3b33034236dced9ca5d69f7a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM5Nzk5ZTRiYzkwYWFkZmIyNGRjMzJkZDhjZTRlYjVkNDc0MTE0ODQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39799e4bc90aadfb24dc32dd8ce4eb5d47411484",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/39799e4bc90aadfb24dc32dd8ce4eb5d47411484",
      "tree": {
        "sha": "1e6f384e0ac135609d352e24cb8b3c30aa788b84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e6f384e0ac135609d352e24cb8b3c30aa788b84"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1e6f384e0ac135609d352e24cb8b3c30aa788b84\nparent 073a3f8174edd7eb3b33034236dced9ca5d69f7a\nauthor Sjors Provoost <sjors@sprovoost.nl> 1707751785 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095990 +0100\n\nReject RequestTransactionData for stale templates\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9QLYACgkQV/+b28ww\nEAnQwQ/9FJaEy60o+fjg8eU7ew85ysUHdhbfvR0+7xav5mEPD6ObWWTnSoukvzqd\nehJzy7J7DkQ2oE041C5LAFAIafcQ42RbFj1SK6WT4vVm70nad/R+syXcULaf+wg3\nlkDr+Sw3K+5x70wXPKuW1hcEwTXGVcCU9gNGrPwCJOAtNU7ryQF0MOvXvkOwJl5K\nn5PCQB6YSyFk68aJtYrAB+w7HBMTFc01Y+zvwcrEF27s6HueRzpaRJ64weFRKuUa\nfVn0pM3mIDw9VPeuJkW+ndjTxWDinS4nd6wEA3mdiFqmUWCu9CSsRNZBHVKqU907\nLOTLhOAIZZNLfQTgiccbZ4dI47p2I6pkpOmYtHFq+5qxPxIVAog2vTDBg6Wfahko\nvLZ9uFfMQO1vjytRQKNRofnzwDFsNgU1peaktrDaQheQL/AJWVCmO/j8qETuj+OL\nqZLxPN5STCJMwjozqgK5nt2gNg3/KkvEuEXOn/rU8SlyA0Tz18Rz5iK5QQu5XIVN\nz2yCX09VXAVeR5ur8D6i99yrTDC7I8oC14f75OiCRFLWTXhcsDP9BX8ZhGXFtITe\ngia6e0gyjUu2Hhw9aGys63VR39iI3iwlbSWUn673DHZR/oDdF/5xl8qFz1YwuarL\nQDQyuffg+Nh1QIlQKgheUmht2/o/katST6nPZARNu3dJZvMGEdc=\n=WL+j\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/073a3f8174edd7eb3b33034236dced9ca5d69f7a",
          "sha": "073a3f8174edd7eb3b33034236dced9ca5d69f7a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/073a3f8174edd7eb3b33034236dced9ca5d69f7a"
        }
      ],
      "message": "Reject RequestTransactionData for stale templates",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:26:30Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-02-12T15:29:45Z"
      },
      "sha": "39799e4bc90aadfb24dc32dd8ce4eb5d47411484"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIyNTA4YzJmNjA3M2EwMmM5MGFlYzg5YmFjZjY0ZDFiYzMxZmRhNjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2508c2f6073a02c90aec89bacf64d1bc31fda68",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b2508c2f6073a02c90aec89bacf64d1bc31fda68",
      "tree": {
        "sha": "0925212224f75a6cf072fdc0eecb19f54cdb406f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0925212224f75a6cf072fdc0eecb19f54cdb406f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0925212224f75a6cf072fdc0eecb19f54cdb406f\nparent 39799e4bc90aadfb24dc32dd8ce4eb5d47411484\nauthor Sjors Provoost <sjors@sprovoost.nl> 1707312064 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095990 +0100\n\ntest: Sv2TemplateProvider tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9QLYACgkQV/+b28ww\nEAktgBAAtyVH7QP6MiE/nYX8vOtNLoVO2ncfay5j2M8OfVTbNROsg9UEBVNDXndY\nE8MrZme5AjiRf6VxLp9y5mDoPDCTj1irnnnRN7vVBvYhQq9un4FqgVhIJJc4HvwS\nNKqSKxjlzoh687yARREfbidqZE49AOPNSTGaSzU7BWoW+SCFd7B/e+VpYhYK+Lqs\nlZcK6aji2dU8cfttoImVYBDqm70sTPERDclxUZKb8jK7eQcY3AhgGLgy3+z+CPvs\nyMv8IGtpSvYl9AqE/m/EiM3hgxBf1k7+uho+AW0vsQQ0hInuevv+wL/Og4opWeWJ\nlDeV07t8h/URSG1X94BIsgBzSnyxztWXGRgmlFjAXijohlrd1uEhiynTE5LmGg/C\nstC7SOPf3A0JRu4xhT0IcjNmCb25kn1nBQPXHQa+ELUlCXkwV9hQv7Lu6Rnfugp2\n+op59JW7i3odmN7Ieo+upkB8GI4Ua66Qv6Z56rkAa/9pyLwoqCOw0mbEUIFNq9o5\n8ZJ6kMS6jxbNW7njrDl4IAZz3Wbf5R/dyevVEziPQ9Ovy/dmOZpTds3gB4EJeFOo\n4esJMElQlnIMd+kOSEgLBpqQEEOw9llo2yul6jz9eo55eup6Svm8D/t9z4zjrEe/\nnUAoAXS2D9JNUSgQ5HQ03Gat3NH2MT0dyuH4vFo+Lv2ZGBlhsOQ=\n=Ggpo\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39799e4bc90aadfb24dc32dd8ce4eb5d47411484",
          "sha": "39799e4bc90aadfb24dc32dd8ce4eb5d47411484",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/39799e4bc90aadfb24dc32dd8ce4eb5d47411484"
        }
      ],
      "message": "test: Sv2TemplateProvider tests",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:26:30Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-02-07T13:21:04Z"
      },
      "sha": "b2508c2f6073a02c90aec89bacf64d1bc31fda68"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMyNDc3ODQzZDcxYzM5YTJkYzcxZTA4MjdkMjcxMTExNmE2ZDgxMTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c2477843d71c39a2dc71e0827d2711116a6d8115",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c2477843d71c39a2dc71e0827d2711116a6d8115",
      "tree": {
        "sha": "ed6206f18b0faf7d090fd397b95a79c13454eb9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed6206f18b0faf7d090fd397b95a79c13454eb9e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ed6206f18b0faf7d090fd397b95a79c13454eb9e\nparent b2508c2f6073a02c90aec89bacf64d1bc31fda68\nauthor Sjors Provoost <sjors@sprovoost.nl> 1702044481 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095991 +0100\n\nsignet: miner skips PSBT step for OP_TRUE\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9QLcACgkQV/+b28ww\nEAnU2A/+KYarniAEaVVeO/NeUrmA48jmWO4KZZY9/C601pTcn/xLPGOgD1ci8cIw\n8MIcWeTpprxkXgxu38SJiUlZ0Z8+uDzSuYFOmSk1a08psom5ED76R8V+W4EOdN0b\nPXbXq54hAdSMjRb/NAxHhItoVWT5fqXQVKFPOK9E2hJsK9oI4PIAhXG43Ws1v1rx\ngznqr2QO0suAeET5n41rI+5MG6FZxNfsEYoXmQ09fDuydRIk5rahADnp/BlDRtQC\n0NWGy4qeUoPAV8eJNjWPNO/FooNgB9UgC4UWFOS7rO+sPhTAst1XwZK6m2y59B7p\nMDtS2eHZoaLygVUGPyYKmse2QjJmvAupP3LHZGXfZxzz7cOQp4cNUvwP+LGlTjsh\nv9kFo+ca1ckssJpVgc78G7Fuf18fv/rg256Nf76DcgVOwiAjebOU5AxvU9yT7xKd\nU52suI5onmgCwWKWZBkDzCxB4Nt+vI+y0463tT2Hzelwj97qbun6j632Lih9Q4kC\n679ONgSNSxhN/cKaKrKJoAM7qc/5fyPOKaoGsS18AQghPJctEzcCiw7UkouRCjEy\nTQ8z3+OUC4y/Co+KwVo85Pr1RDzgSnsQ34cS2mCW1kgx78NCk0T9+Qg3Sp4ia0yG\nJKtSBCm5v5O6c03/4omzK/6rBUggGoiNPS+jfZ6dLWZ9nDM81ZU=\n=mIgE\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2508c2f6073a02c90aec89bacf64d1bc31fda68",
          "sha": "b2508c2f6073a02c90aec89bacf64d1bc31fda68",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b2508c2f6073a02c90aec89bacf64d1bc31fda68"
        }
      ],
      "message": "signet: miner skips PSBT step for OP_TRUE",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:26:31Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-12-08T14:08:01Z"
      },
      "sha": "c2477843d71c39a2dc71e0827d2711116a6d8115"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhkYzA4YzU4NzVjZjZhMDViZmY1YzRjNjczYjEyOWUxNjI0N2IyZmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8dc08c5875cf6a05bff5c4c673b129e16247b2fd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8dc08c5875cf6a05bff5c4c673b129e16247b2fd",
      "tree": {
        "sha": "eeead3b7a03e6a9fa424cabcfa044186b5b6ca4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eeead3b7a03e6a9fa424cabcfa044186b5b6ca4b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree eeead3b7a03e6a9fa424cabcfa044186b5b6ca4b\nparent c2477843d71c39a2dc71e0827d2711116a6d8115\nauthor Sjors Provoost <sjors@sprovoost.nl> 1703767798 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095991 +0100\n\ndoc: explain Stratum v2 design, testing and usage\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9QLcACgkQV/+b28ww\nEAnIbBAAhH0jBuPGYfqF5Jd0WFKY+qjWEYfSdsUntGjCl4UWQm+qOhTrRYugqibe\nWQsFRFSuSjVr9HnSraUSzcdgZdTQhntkAyBTMaaOttyo8I2BBDOaQiy85Gw7XHqp\n//DDmU7VQYuoOELBvKpS54gJnHiNaxDjzOBNGvSgX/yfCOYaeEavn7aDom9gVVAJ\nQqfxwXkSFy5dE7Pe3km0m4euQXu+LLyh0MK3QKf2Czvpl1FTuIutewgXN5YkBQag\nfDE5K3vTONWne6BlD2tG5LyNpfDg3wtB9FykhLlFbc4FLyOPPUflkDmWqcVTMYcT\n8ki+Gcs0cNDFTHLILm1foHST9qPHZ08pq3Etx/6h0nehKH7LwzgU8TjFUxYUNtNy\nw4PYnJ2BKsFbosvrh45/gxkHVuyhKPqZ1cfo0ty7SwggMAD4rGXMAP/vHw1pYBrn\n/S4zvefQnaus423Vn2aQTLjn3YQkeoD841WSbjH9J+dGofh0qzBBRqCQMQ2sMcqd\nAwQoMs4C21JjdcvMTu5vMj893UUPHkAn6MLNPlYyvIIhmKU3qQ5v2R1Rw2IppgY8\nkYnmBqQFsxYKM2z8x1gsp/w9hI+9FHwBdCbEOOVcVlbSGcIlcK0SrJ0VoMIRff3q\nkx4gdWgZDrw4UZ6Yl17MJWhQmsaYyRGoOiyrY9UWlrCCmeyvPsg=\n=FcaK\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c2477843d71c39a2dc71e0827d2711116a6d8115",
          "sha": "c2477843d71c39a2dc71e0827d2711116a6d8115",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c2477843d71c39a2dc71e0827d2711116a6d8115"
        }
      ],
      "message": "doc: explain Stratum v2 design, testing and usage",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:26:31Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-12-28T12:49:58Z"
      },
      "sha": "8dc08c5875cf6a05bff5c4c673b129e16247b2fd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBkYTdlN2VjMjMyMmJiOTU2ZGI0Mjk0OTAyMmMwNjExYWVhYjZiOTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0da7e7ec2322bb956db42949022c0611aeab6b96",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0da7e7ec2322bb956db42949022c0611aeab6b96",
      "tree": {
        "sha": "7052b12d73fa8daef6b98a726f1c677543e9d94f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7052b12d73fa8daef6b98a726f1c677543e9d94f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7052b12d73fa8daef6b98a726f1c677543e9d94f\nparent 8dc08c5875cf6a05bff5c4c673b129e16247b2fd\nauthor Sjors Provoost <sjors@sprovoost.nl> 1705595487 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095991 +0100\n\nci: forks can opt-out of CI branch push\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9QLcACgkQV/+b28ww\nEAmK9hAApW+85teMO8b9X0VQSnSqdb80yg9boJfNbl28C+ZpHVQ6LOkBFZoEo9A/\neZaneA5VrV3QaHDaNPBunGj2MDiBjPXxHZJucFHvCzh/ogN0VH3jBuh/YZ7I6AlO\nmVH+j1vWfGNMo4J3FHuazn1AtxOLhfFHCG997WXGeBEXETUoVro/ZZ9GpwKneECh\nY5uJFhbBbD1jeXk3ttcLknTtsmas6hzZquw+phmR8Paibi5kC4uXGeevUD1QbGrP\nBKgcmRSda2dCy1NHGgSNLk+6nG+ZVSWtSUT26ihRh3yOxAo8mJawA7yVdzFC4x3z\nv8zhaX1rxmO1O5QA0BjrZLjgEGJ064BOthoNc+IQRC1SS97yibo6IP2IyULpWxKE\nC0qylfLZnG1dt+WeFK+KVdOemfDl9VOVKq2muV1RxO1mXSmI17Fz2i0sW2/VywbN\nPnpNpIeuivS6yXrEidOSLF7BUj52fHBUJL1PE3ikq4zgFwx5qlXtW8/j4Wb27FWp\nsthMgfp34XCWB54lAIabQRGr/oyz/nZ2O7Eq6lTPtG15DeLKo5sKSpEwIqdA/rjj\np19cSAJOQkGeO/KCMhGKD/633cj/KpaJzKHo10Si/KdCC/Qe9xLWMYTbVbavjGUi\n7S4tbFjQCc+E5Bx8pgbH5nRaz345wrI0l/6TQE82Bs6a1nxtzfQ=\n=ly4P\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8dc08c5875cf6a05bff5c4c673b129e16247b2fd",
          "sha": "8dc08c5875cf6a05bff5c4c673b129e16247b2fd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8dc08c5875cf6a05bff5c4c673b129e16247b2fd"
        }
      ],
      "message": "ci: forks can opt-out of CI branch push",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:26:31Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-01-18T16:31:27Z"
      },
      "sha": "0da7e7ec2322bb956db42949022c0611aeab6b96"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ2NGQ5NWRjOTU4ODE1NGQ2MTBmN2NlNjdlOTNhM2JiOWExMDVjNWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/464d95dc9588154d610f7ce67e93a3bb9a105c5f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/464d95dc9588154d610f7ce67e93a3bb9a105c5f",
      "tree": {
        "sha": "b06ec7dbcfb785b8ce25747389384e6092c2fce2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b06ec7dbcfb785b8ce25747389384e6092c2fce2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b06ec7dbcfb785b8ce25747389384e6092c2fce2\nparent 0da7e7ec2322bb956db42949022c0611aeab6b96\nauthor Sjors Provoost <sjors@sprovoost.nl> 1705584502 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095991 +0100\n\nci: skip arm and noble if no worker is configured\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9QLcACgkQV/+b28ww\nEAkSWg//Tb50FXuNd4zYazth2ewAwIQV5ac687mSgUQPYSIbfo7SIfSr1RHBVMOC\n2SWCE5oGe3o+O4XWF4SER6zv1b4SjDxb6m/p/ROm1EG0yarZNu4D8hwCcloSxFdK\neL/9wDEANVq7JSOWvA29V6LuiGzshv3fxAnIWQURlGl1CZgEghFIZPq1SmbgsmkY\nhOQEpL/z6VK+kBoOAwJ7UcvIsuXCKYLezt0I4WGyXDf0dqGujzVMHZsGbeBZXCXi\n4saOBGHAi6cBXtZAtNJjSTNZAW/RC3/I5UMKSELtsTLTAjfupLBC6sgtavdxvPKp\nfDjiF4es3IPo4HZdFo+35m+/KgmkwiEFGgf4dVUtMr1RpnYO0uoElUgoIu5Xk7CM\n13hyeP4PGVyuuv+6C2VPmXK3+DqJ2m0eBtou3aebBxCQKwNXTF3r5I6WYyHLQALq\nNrlbJgHcUqGvS9TDmZLKNLd3XKvUF8fx10rxTwCEJkhpgwVJUf4xeNpDECMfUFKU\nwAeUx3ru38f2b6qtNLoTsA2jeV2hpjwEtDeJ8FHno+NuoEajbVM6/i4uvG2LbyIF\naLWEjl967rWJdH30wnem+Dmz6NU9dJUCb27QrVTq5Nk3WK/oIZNGeVHZ/NC+OWCD\n9thxFYiBpV/CLJJ2NPFRSekF3UL5BMD8Gc4dhbjyhKs2rz3BivI=\n=7DNZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0da7e7ec2322bb956db42949022c0611aeab6b96",
          "sha": "0da7e7ec2322bb956db42949022c0611aeab6b96",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0da7e7ec2322bb956db42949022c0611aeab6b96"
        }
      ],
      "message": "ci: skip arm and noble if no worker is configured",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:26:31Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-01-18T13:28:22Z"
      },
      "sha": "464d95dc9588154d610f7ce67e93a3bb9a105c5f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFmYTlhOWNhZTcwOWFlM2E3NDA2MzhlZDFjZTE3OTIwYzViZDkwNzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/afa9a9cae709ae3a740638ed1ce17920c5bd9075",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/afa9a9cae709ae3a740638ed1ce17920c5bd9075",
      "tree": {
        "sha": "5a6282ff92276454602909821310596a2fbb0281",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a6282ff92276454602909821310596a2fbb0281"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5a6282ff92276454602909821310596a2fbb0281\nparent 464d95dc9588154d610f7ce67e93a3bb9a105c5f\nauthor Sjors Provoost <sjors@sprovoost.nl> 1705595777 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095991 +0100\n\nci: skip Github CI on branch pushes for forks\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9QLcACgkQV/+b28ww\nEAnWAQ//XkPCaOvrEj81guZr4r49VaUJ7jzI0rST8I6LevYzRW2GonZy6Ksgmnki\n+xTMacvt10P1X2SIYw1qeAjgsok1I8qEj0ucloZg1fwlIemclmzmmmDfERJLC5Rr\nKXgWKP/gN4Q7Rlha+NAjRpWo2GPQ/QqOLKeFMYATQwSQXqm+zQOxZGugLegXqvbI\n0C4EvFAV03kWv/ZlM5XHpXVVu9SuGyKoSStBVJTCZ4MIBldOyrPxCT6XAIM1/msM\nF4T5jq1RbIwA+4gZkpjIjG12cZwB4JGJ0gUBRCwKo3R/+y8l8UHvpkT4/wAKp0lL\n4lJqcZecwRA5TihkD+L/U71hd1CnkRQ61k8oFFUWeVulG9QH8a84KfIpPOJuoF54\nbY/TAilCxmKJml5MeadSePTcOMf0T3uNWbDXFs1CYGlT57SMSMSgiIrPKzwKNTme\nBW2A308kaGGMH2C9byVWG14D5O0urX/H4cp/n/wDc/pkYK8PNogjVGEGOXzwH8kJ\nCGUCWUjXh4+SyI7Jr7qre+lLTOi88hsFfhNM6dvljIM1yFl54pWKlnUQ/JZLAlMs\nhtBC8yUsveyHHYJdkWlzI4zhu251aiqhtWBATaBkTYktejydpusMKASxmbf1STnC\n03ctqk+T0WAaYA6L9RWkIXLZS7WdyeZOSkhOmK4rLFTLG+71yRw=\n=2++I\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/464d95dc9588154d610f7ce67e93a3bb9a105c5f",
          "sha": "464d95dc9588154d610f7ce67e93a3bb9a105c5f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/464d95dc9588154d610f7ce67e93a3bb9a105c5f"
        }
      ],
      "message": "ci: skip Github CI on branch pushes for forks",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:26:31Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-01-18T16:36:17Z"
      },
      "sha": "afa9a9cae709ae3a740638ed1ce17920c5bd9075"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBiYWFjZWYxNzliNzZkYTAxNzY5YjZhY2JhZTg2N2Q1M2VmZTk2MDU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0baacef179b76da01769b6acbae867d53efe9605",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0baacef179b76da01769b6acbae867d53efe9605",
      "tree": {
        "sha": "59bef0ef0ba369def34bddd7c566e5e1a3af241b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59bef0ef0ba369def34bddd7c566e5e1a3af241b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 59bef0ef0ba369def34bddd7c566e5e1a3af241b\nparent afa9a9cae709ae3a740638ed1ce17920c5bd9075\nauthor Sjors Provoost <sjors@sprovoost.nl> 1705595814 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095991 +0100\n\nci: skip 'test each commit' task for forks\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9QLgACgkQV/+b28ww\nEAlJlw//Yl1DuzU7FHZoqW7ercPNwt+e9XZe/IUUjkkWfMqC6HBJWdTn/rx3H3ID\n8aT0g3zs0FIil2wwWezcnc9Swr4IEXzJTU9PsKFaNMsddpwI/0INbGlW8jpYJCnO\nu8pGI/nX/8xfizScg6h6qtPXsZ3zTXtnDA58ufxU3bMdBPHr90wn85MjAKwH1bCD\nNITsUfh7Izfc9xUbOi8gGNoZ04mWySDs+JNG5FfxqH6G8IayONpmY0LySsTN2kkQ\n2/4yPUK45u3c87z07d/qmxJsMxWtcBCqlQydsfkPvHJq/uzLRB+TK5fYFyT0XYw9\nR5YiooJQGZrZOsSG+OM723i4PjZxxNbXMIzG07QodWa+6QnEWpKClHE6yzIJiLIJ\nsGUeW9KJ6FzVJGA0yI07BSgszal1C0vGdsMKMUtdPnKdEvmWEUWFfSjCUd1L5g4y\nmHn6qKTv4Dr62JIACPvZEtlEzqiwmO6YVBb+p/rJPHrA0BH+oDY5M9qTbJD9s1bu\naFwHuAWwhroMm0KlDj8Sad1iadzxzA+MVXLRg4SBhr4R/6nvEB1KIsqdKvE+fqg+\nlLVlJbHjCyq3hyc+9Q6EGjiL2zSr8siMJpPSCuGNWqO+MKJ4Jl1kKyulOSxQmT4+\n6spC/kDdo4mLAkf4RJj1dZ2+FL2g3JEBQ+6gM3Gl6bh0Wq4teJE=\n=/M9J\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/afa9a9cae709ae3a740638ed1ce17920c5bd9075",
          "sha": "afa9a9cae709ae3a740638ed1ce17920c5bd9075",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/afa9a9cae709ae3a740638ed1ce17920c5bd9075"
        }
      ],
      "message": "ci: skip 'test each commit' task for forks",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:26:31Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-01-18T16:36:54Z"
      },
      "sha": "0baacef179b76da01769b6acbae867d53efe9605"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVjYmQxZTBkODVhZDk1MjBjYWEwZGNmNDRmNTU5ZjUzODg2ODg5MmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "tree": {
        "sha": "b0ef86de69afc8e91012346c2cef21255207e24f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0ef86de69afc8e91012346c2cef21255207e24f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b0ef86de69afc8e91012346c2cef21255207e24f\nparent 0baacef179b76da01769b6acbae867d53efe9605\nauthor Sjors Provoost <sjors@sprovoost.nl> 1709802983 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1711095992 +0100\n\nci: clarify Cirrus self-hosted workers setup\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmX9QLgACgkQV/+b28ww\nEAkuFQ/9HkL8zwlg+p34d7ntawlFAVSHD/PRC7CCekeDJMqaGSub7d/+rotxqa2n\n+Rk/sGU6aqYCa8gLidV2PF7Ay0/newWxCVCFNyfqKs/K0l30bo4H+yt9U5zAnsfN\nsyq/tuEP+7UN/7PJfSU1RpbfXgZuiPhOzxX0Bsf1uGDezIFjxH01xTOfeUUmU+qP\nAMCOTGnKeBpizS303JP2TdIRpvdR8qGxoQRyAF8Xaalv2xJDau7QCKMMY3VcwsqP\nK66W0dCgVNRs+a1AuizkQjDMmjzCFGf8wgYrloF8tCviywc+4G7el+73+CnYMsJv\nEgBzqLSq8Pu/fBonwCFPl/4P7XeXwFOE+kexCZF5XY696QAiKFbHT0Kkgq88ovo6\nMH+5hxEUl26aEahSivN2nUVECQuMjIPtEjmPqiE9CGoisyCZp4qVJnv9ME8UX15T\nS+cUH9Az/OEzscsfpyn/Kmv5bdK8xMDKlQ+VJWsK8LnOh0fsKPqbqMo1Bq9FeP4s\n9ocB6DXaTcbLwuiU1B4mSbWis8//r6vyE8FfsZVt8Ld2FCJIZOA9jyXPlkw1hVPT\n6/8V66xuEkFuv26VAAYRScJEEbbSu3IMG4mh3Q7j6grzcmT71alXrs2s9CJ4rEOQ\nHZagLtwK8dzlm1FEQieKs6ql3fpb/cNVVmLVnIfSrEe3piZZhzg=\n=Jlr9\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0baacef179b76da01769b6acbae867d53efe9605",
          "sha": "0baacef179b76da01769b6acbae867d53efe9605",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0baacef179b76da01769b6acbae867d53efe9605"
        }
      ],
      "message": "ci: clarify Cirrus self-hosted workers setup",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-22T08:26:32Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-03-07T09:16:23Z"
      },
      "sha": "ecbd1e0d85ad9520caa0dcf44f559f538868892c"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12212430559,
      "node_id": "HRFPE_lADOABII585_NKHDzwAAAALX6ubf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12212430559",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-22T08:27:26Z"
    },
    {
      "event": "unlabeled",
      "id": 12212954706,
      "node_id": "UNLE_lADOABII585_NKHDzwAAAALX8uZS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12212954706",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-22T09:13:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-22T22:48:35Z",
      "updated_at": "2024-03-22T22:48:35Z",
      "source": {
        "issue": {
          "id": 1556671710,
          "node_id": "PR_kwDOABII585Ig7Js",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26966",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26966/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26966/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26966/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26966",
          "number": 26966,
          "state": "open",
          "state_reason": null,
          "title": "index: blockfilter initial sync speedup, parallelize process",
          "body": "The current procedure for building the block filter index involves processing filters one at a time;\r\nReading blocks, undo data, and previous headers from disk sequentially.\r\n\r\nThis PR introduces a new mechanism to perform the work concurrently. Dividing the filters\r\ngeneration workload among a pool of workers that can be configured by the user,\r\nsignificantly increasing the speed of the index construction process.\r\n\r\nThe same concurrent processing model has been applied to the transactions index as well.\r\n\r\nThe newly introduced init flag `-indexworkers=<n>` enables the concurrent sync\r\nbehavior.\r\nWhere \"n\" is the number of worker threads that will be spawned at startup to create ranges\r\nof block filters during the initial sync process. Destroying the workers pool once the\r\ninitial sync completes.\r\nNote: by default, the parallelized sync process is not enabled.\r\n\r\nNow the juicy part:\r\nIn my computer, with the node in debug mode and on IBD, with `-indexworkers=4`, the\r\nblock filter index generation took less than an hour. While, in master, the sync took more than 7 hours.\r\n\r\nImportant Note:\r\nAs the access to the block data on disk is protected by `cs_main`, this new feature runs substantially\r\nfaster when the node is not in IBD.\r\n\r\nFootnote:\r\nThis is part of a larger project :).",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26966",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26966",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26966.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26966.patch"
          },
          "created_at": "2023-01-25T13:36:23Z",
          "updated_at": "2024-03-25T09:08:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-01T10:08:59Z",
      "updated_at": "2024-04-01T10:08:59Z",
      "source": {
        "issue": {
          "id": 2217234852,
          "node_id": "PR_kwDOABII585rQxI1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29775",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29775/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29775/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29775/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29775",
          "number": 29775,
          "state": "open",
          "state_reason": null,
          "title": "[DO NOT MERGE] testnet4 including PoW difficulty adjustment fix",
          "body": "To supplement the [ongoing conceptual discussion about a testnet reset](https://groups.google.com/g/bitcoindev/c/9bL00vRj7OU/m/9yCPo3uUBwAJ) I have drafted a move to v4 including a fix to the difficulty adjustment mechanism, which was part of the motivation that started the discussion.\r\n\r\nConceptual considerations:\r\n- The conceptual discussion about doing a testnet4 or softforking the fix into testnet3 is outside of the scope of this PR and I would ask reviewers to contribute their opinions on this on the ML instead. However, I am happy to adapt this PR to a softfork change on testnet3 if there is consensus for that instead.\r\n- The difficulty adjustment fix suggested here touches the `CalculateNextWorkRequired` function and uses the same logic used in `GetNextWorkRequired` to find the last previous block that was not mined with difficulty 1 under the exceptionf. An alternative fix briefly mentioned on the mailing list by Jameson Lopp would be to \"restrict the special testnet minimum difficulty rule so that it can't be triggered on the block right before a difficulty retarget\". That would also fix the issue but I find my suggestion here a bit more elegant.",
          "user": {
            "login": "fjahr",
            "id": 1322187,
            "node_id": "MDQ6VXNlcjEzMjIxODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjahr",
            "html_url": "https://github.com/fjahr",
            "followers_url": "https://api.github.com/users/fjahr/followers",
            "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
            "organizations_url": "https://api.github.com/users/fjahr/orgs",
            "repos_url": "https://api.github.com/users/fjahr/repos",
            "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fjahr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29775",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29775",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29775.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29775.patch"
          },
          "created_at": "2024-03-31T22:55:22Z",
          "updated_at": "2024-04-01T19:54:59Z"
        },
        "type": "issue"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489543326",
      "pull_request_review_id": 1880414088,
      "id": 1489543326,
      "node_id": "PRRC_kwDOABII585YyKCe",
      "diff_hunk": "@@ -0,0 +1,298 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 36,
      "original_position": 36,
      "commit_id": "ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "original_commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The template provider tests are quite brittle because they use a real socket.",
      "created_at": "2024-02-14T14:17:54Z",
      "updated_at": "2024-02-14T14:21:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1489543326",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489543326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 36,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489710751",
      "pull_request_review_id": 1880677814,
      "id": 1489710751,
      "node_id": "PRRC_kwDOABII585Yyy6f",
      "diff_hunk": "@@ -0,0 +1,298 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 36,
      "original_position": 36,
      "commit_id": "ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "original_commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "in_reply_to_id": 1489543326,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For the time being I just added handling for `MSG_MORE` (on e.g. macOS sequential messages are sent separately while on Linux they're combined). I also made the timeouts a bit longer.\r\n\r\nHopefully that does the trick. This can be revisited closer to the time when the Template Provider is ready for its own PR.",
      "created_at": "2024-02-14T15:57:24Z",
      "updated_at": "2024-02-14T15:57:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1489710751",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489710751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 36,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489927269",
      "pull_request_review_id": 1881030165,
      "id": 1489927269,
      "node_id": "PRRC_kwDOABII585Yznxl",
      "diff_hunk": "@@ -0,0 +1,298 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 36,
      "original_position": 36,
      "commit_id": "ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "original_commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "in_reply_to_id": 1489543326,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Except the macOS native CI... https://github.com/Sjors/bitcoin/actions/runs/7905485495/job/21578223892?pr=34#step:7:6060",
      "created_at": "2024-02-14T18:54:53Z",
      "updated_at": "2024-02-14T18:54:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1489927269",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489927269"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 36,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489958435",
      "pull_request_review_id": 1881082138,
      "id": 1489958435,
      "node_id": "PRRC_kwDOABII585YzvYj",
      "diff_hunk": "@@ -0,0 +1,298 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 36,
      "original_position": 36,
      "commit_id": "ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "original_commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "in_reply_to_id": 1489543326,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Working on a fix in https://github.com/Sjors/bitcoin/pull/34",
      "created_at": "2024-02-14T19:25:39Z",
      "updated_at": "2024-02-14T19:25:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1489958435",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489958435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 36,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489998271",
      "pull_request_review_id": 1881182173,
      "id": 1489998271,
      "node_id": "PRRC_kwDOABII585Yz5G_",
      "diff_hunk": "@@ -0,0 +1,314 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:\n+        UninterruptibleSleep(std::chrono::milliseconds{1000});\n+        return true;\n+    }\n+\n+    void SendPeerBytes()\n+    {\n+        int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+        ssize_t sent = 0;\n+        const auto& [data, more] =m_peer_transport->GetBytesToSendSv2(/*have_next_message=*/false);\n+        BOOST_REQUIRE(data.size() > 0);\n+        sent = m_peer_socket->Send(data.data(), data.size(), flags);\n+        m_peer_transport->MarkBytesSent(sent);\n+\n+        BOOST_REQUIRE(sent > 0);\n+    }\n+\n+    // Have the peer receive and process bytes:\n+    size_t PeerReceiveBytes()\n+    {\n+        uint8_t bytes_received_buf[0x10000];\n+        const auto num_bytes_received = m_peer_socket->Recv(bytes_received_buf, sizeof(bytes_received_buf), MSG_DONTWAIT);\n+\n+        // Have peer process received bytes:\n+        Span<const uint8_t> received = Span(bytes_received_buf).subspan(0, num_bytes_received);\n+        BOOST_REQUIRE(m_peer_transport->ReceivedBytes(received));\n+\n+        return num_bytes_received;\n+    }\n+\n+    /* Create a new client and perform handshake */\n+    void handshake()\n+    {\n+        m_peer_transport.reset();\n+\n+        auto peer_static_key{GenerateRandomKey()};\n+        m_peer_transport = std::make_unique<Sv2Transport>(std::move(peer_static_key), m_tp->m_authority_pubkey);\n+\n+        // Connect client via socket to Template Provider\n+\n+        std::optional<CService> tp{Lookup(\"127.0.0.1\", 18447, /*fAllowLookup=*/false)};\n+        BOOST_REQUIRE(tp);\n+        m_peer_socket = CreateSock(*tp);\n+        BOOST_REQUIRE(m_peer_socket);\n+        bool connected = ConnectSocketDirectly(*tp, *m_peer_socket, /*nTimeout=*/100, true);\n+        BOOST_REQUIRE(connected);\n+\n+        // Flush transport for handshake part 1\n+        SendPeerBytes();\n+\n+        // Read handshake part 2 from transport\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        BOOST_REQUIRE_EQUAL(PeerReceiveBytes(), Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+    }\n+\n+    void receiveMessage(Sv2NetMsg msg)\n+    {\n+        // Client encrypts message and puts it on the transport:\n+        BOOST_REQUIRE(m_peer_transport->SetMessageToSend(msg));\n+        SendPeerBytes();\n+    }\n+\n+    void ProcessOurResponse(size_t reply_bytes_expected)\n+    {\n+        // Respond to peer\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        size_t bytes_received = PeerReceiveBytes();\n+\n+        // Wait for a possible second message (if MSG_MORE was set)\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+\n+        if (occurred != 0) {\n+            // Have peer process response bytes:\n+            bytes_received += PeerReceiveBytes();\n+        }\n+\n+        BOOST_REQUIRE_EQUAL(bytes_received, reply_bytes_expected);\n+    }\n+\n+    bool IsConnected()\n+    {\n+        return m_tp->ConnectedClients() > 0;\n+    }\n+\n+    bool IsFullyConnected()\n+    {\n+        return m_tp->FullyConnectedClients() > 0;\n+    }\n+\n+    Sv2NetMsg SetupConnectionMsg()\n+    {\n+        std::vector<uint8_t> bytes{\n+            0x02,                                                 // protocol\n+            0x02, 0x00,                                           // min_version\n+            0x02, 0x00,                                           // max_version\n+            0x01, 0x00, 0x00, 0x00,                               // flags\n+            0x07, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30,       // endpoint_host\n+            0x61, 0x21,                                           // endpoint_port\n+            0x07, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x69, 0x6e,       // vendor\n+            0x08, 0x53, 0x39, 0x69, 0x20, 0x31, 0x33, 0x2e, 0x35, // hardware_version\n+            0x1c, 0x62, 0x72, 0x61, 0x69, 0x69, 0x6e, 0x73, 0x2d, 0x6f, 0x73, 0x2d, 0x32, 0x30,\n+            0x31, 0x38, 0x2d, 0x30, 0x39, 0x2d, 0x32, 0x32, 0x2d, 0x31, 0x2d, 0x68, 0x61, 0x73,\n+            0x68, // firmware\n+            0x10, 0x73, 0x6f, 0x6d, 0x65, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x75,\n+            0x75, 0x69, 0x64, // device_id\n+        };\n+\n+        node::Sv2NetHeader setup_conn_header = node::Sv2NetHeader{node::Sv2MsgType::SETUP_CONNECTION, static_cast<uint32_t>(bytes.size())};\n+        return node::Sv2NetMsg{std::move(setup_conn_header), std::move(bytes)};\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(client_tests)\n+{\n+    TPTester tester{*m_node.chainman, *m_node.mempool};\n+    BOOST_REQUIRE(tester.start());\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+    tester.handshake();\n+    BOOST_REQUIRE(tester.IsConnected());\n+    BOOST_REQUIRE(!tester.IsFullyConnected());\n+\n+    // After the handshake the client must send a SetupConnection message to the\n+    // Template Provider.\n+\n+    // An empty SetupConnection message should cause disconnection\n+    node::Sv2NetHeader setup_conn_header{node::Sv2MsgType::SETUP_CONNECTION, 0};\n+    node::Sv2NetMsg sv2_msg{std::move(setup_conn_header), {}};\n+    tester.receiveMessage(sv2_msg);\n+    tester.ProcessOurResponse(0);\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+\n+    // Reconnect\n+    tester.handshake();\n+\n+    node::Sv2NetMsg setup{tester.SetupConnectionMsg()};\n+    // SetupConnection.Success is 6 bytes\n+    tester.receiveMessage(setup);\n+    tester.ProcessOurResponse(SV2_HEADER_ENCRYPTED_SIZE + 6 + Poly1305::TAGLEN);\n+    BOOST_REQUIRE(tester.IsFullyConnected());\n+\n+    // There should be no block templates before any client gave us their coinbase\n+    // output data size:\n+    BOOST_REQUIRE(tester.m_tp->GetBlockTemplates().empty());\n+\n+    std::vector<uint8_t> coinbase_output_max_additional_size_bytes{\n+        0x01, 0x00, 0x00, 0x00\n+    };\n+    node::Sv2NetHeader cb_header{node::Sv2MsgType::COINBASE_OUTPUT_DATA_SIZE, 4};\n+    node::Sv2NetMsg msg{std::move(cb_header), std::move(coinbase_output_max_additional_size_bytes)};\n+    // The reply should be NewTemplate and SetNewPrevHash\n+    tester.receiveMessage(msg);\n+    tester.ProcessOurResponse(2 * SV2_HEADER_ENCRYPTED_SIZE + 91 + 80 + 2 * Poly1305::TAGLEN);\n+\n+    // There should now be one template\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Move mock time by at least DEFAULT_SV2_INTERVAL\n+    // If the mempool doesn't change, no new template is generated.\n+    SetMockTime(GetMockTime() + std::chrono::seconds{DEFAULT_SV2_INTERVAL});\n+    // Briefly wait for the timer in ThreadSv2Handler and block creation\n+    UninterruptibleSleep(std::chrono::milliseconds{200});\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Create a transaction with a large fee\n+    size_t tx_size;\n+    CKey key = GenerateRandomKey();\n+    CScript locking_script = GetScriptForDestination(PKHash(key.GetPubKey()));\n+    // Don't hold on to the transaction\n+    {\n+        auto mtx = CreateValidMempoolTransaction(/*input_transaction=*/m_coinbase_txns[0], /*input_vout=*/0,\n+                                                        /*input_height=*/0, /*input_signing_key=*/coinbaseKey,\n+                                                        /*output_destination=*/locking_script,\n+                                                        /*output_amount=*/CAmount(49 * COIN), /*submit=*/true);\n+        CTransactionRef tx = MakeTransactionRef(mtx);\n+\n+        // Get serialized transaction size\n+        DataStream ss;\n+        ss << TX_WITH_WITNESS(tx);\n+        tx_size = ss.size();\n+    }\n+",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 252,
      "original_position": 226,
      "commit_id": "ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "original_commit_id": "1bacb8998725de866b109c4fdd9f8739fcfb2344",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "TSAN is tripping up somewhere around here. The last thing it logs is ` - Connect 2 transactions:`. It doesn't get to ` - Verify ... txins:`. I wonder if this is related to mock time, which I'm testing in https://github.com/Sjors/bitcoin/pull/34",
      "created_at": "2024-02-14T20:04:56Z",
      "updated_at": "2024-02-14T20:17:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1489998271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1489998271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 252,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490054499",
      "pull_request_review_id": 1881291760,
      "id": 1490054499,
      "node_id": "PRRC_kwDOABII585Y0G1j",
      "diff_hunk": "@@ -0,0 +1,298 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 36,
      "original_position": 36,
      "commit_id": "ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "original_commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "in_reply_to_id": 1489543326,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I should probably look into using `StaticContentsSock`",
      "created_at": "2024-02-14T20:53:36Z",
      "updated_at": "2024-02-14T20:53:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1490054499",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490054499"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 36,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490849107",
      "pull_request_review_id": 1882502597,
      "id": 1490849107,
      "node_id": "PRRC_kwDOABII585Y3I1T",
      "diff_hunk": "@@ -0,0 +1,314 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:\n+        UninterruptibleSleep(std::chrono::milliseconds{1000});\n+        return true;\n+    }\n+\n+    void SendPeerBytes()\n+    {\n+        int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+        ssize_t sent = 0;\n+        const auto& [data, more] =m_peer_transport->GetBytesToSendSv2(/*have_next_message=*/false);\n+        BOOST_REQUIRE(data.size() > 0);\n+        sent = m_peer_socket->Send(data.data(), data.size(), flags);\n+        m_peer_transport->MarkBytesSent(sent);\n+\n+        BOOST_REQUIRE(sent > 0);\n+    }\n+\n+    // Have the peer receive and process bytes:\n+    size_t PeerReceiveBytes()\n+    {\n+        uint8_t bytes_received_buf[0x10000];\n+        const auto num_bytes_received = m_peer_socket->Recv(bytes_received_buf, sizeof(bytes_received_buf), MSG_DONTWAIT);\n+\n+        // Have peer process received bytes:\n+        Span<const uint8_t> received = Span(bytes_received_buf).subspan(0, num_bytes_received);\n+        BOOST_REQUIRE(m_peer_transport->ReceivedBytes(received));\n+\n+        return num_bytes_received;\n+    }\n+\n+    /* Create a new client and perform handshake */\n+    void handshake()\n+    {\n+        m_peer_transport.reset();\n+\n+        auto peer_static_key{GenerateRandomKey()};\n+        m_peer_transport = std::make_unique<Sv2Transport>(std::move(peer_static_key), m_tp->m_authority_pubkey);\n+\n+        // Connect client via socket to Template Provider\n+\n+        std::optional<CService> tp{Lookup(\"127.0.0.1\", 18447, /*fAllowLookup=*/false)};\n+        BOOST_REQUIRE(tp);\n+        m_peer_socket = CreateSock(*tp);\n+        BOOST_REQUIRE(m_peer_socket);\n+        bool connected = ConnectSocketDirectly(*tp, *m_peer_socket, /*nTimeout=*/100, true);\n+        BOOST_REQUIRE(connected);\n+\n+        // Flush transport for handshake part 1\n+        SendPeerBytes();\n+\n+        // Read handshake part 2 from transport\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        BOOST_REQUIRE_EQUAL(PeerReceiveBytes(), Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+    }\n+\n+    void receiveMessage(Sv2NetMsg msg)\n+    {\n+        // Client encrypts message and puts it on the transport:\n+        BOOST_REQUIRE(m_peer_transport->SetMessageToSend(msg));\n+        SendPeerBytes();\n+    }\n+\n+    void ProcessOurResponse(size_t reply_bytes_expected)\n+    {\n+        // Respond to peer\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        size_t bytes_received = PeerReceiveBytes();\n+\n+        // Wait for a possible second message (if MSG_MORE was set)\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+\n+        if (occurred != 0) {\n+            // Have peer process response bytes:\n+            bytes_received += PeerReceiveBytes();\n+        }\n+\n+        BOOST_REQUIRE_EQUAL(bytes_received, reply_bytes_expected);\n+    }\n+\n+    bool IsConnected()\n+    {\n+        return m_tp->ConnectedClients() > 0;\n+    }\n+\n+    bool IsFullyConnected()\n+    {\n+        return m_tp->FullyConnectedClients() > 0;\n+    }\n+\n+    Sv2NetMsg SetupConnectionMsg()\n+    {\n+        std::vector<uint8_t> bytes{\n+            0x02,                                                 // protocol\n+            0x02, 0x00,                                           // min_version\n+            0x02, 0x00,                                           // max_version\n+            0x01, 0x00, 0x00, 0x00,                               // flags\n+            0x07, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30,       // endpoint_host\n+            0x61, 0x21,                                           // endpoint_port\n+            0x07, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x69, 0x6e,       // vendor\n+            0x08, 0x53, 0x39, 0x69, 0x20, 0x31, 0x33, 0x2e, 0x35, // hardware_version\n+            0x1c, 0x62, 0x72, 0x61, 0x69, 0x69, 0x6e, 0x73, 0x2d, 0x6f, 0x73, 0x2d, 0x32, 0x30,\n+            0x31, 0x38, 0x2d, 0x30, 0x39, 0x2d, 0x32, 0x32, 0x2d, 0x31, 0x2d, 0x68, 0x61, 0x73,\n+            0x68, // firmware\n+            0x10, 0x73, 0x6f, 0x6d, 0x65, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x75,\n+            0x75, 0x69, 0x64, // device_id\n+        };\n+\n+        node::Sv2NetHeader setup_conn_header = node::Sv2NetHeader{node::Sv2MsgType::SETUP_CONNECTION, static_cast<uint32_t>(bytes.size())};\n+        return node::Sv2NetMsg{std::move(setup_conn_header), std::move(bytes)};\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(client_tests)\n+{\n+    TPTester tester{*m_node.chainman, *m_node.mempool};\n+    BOOST_REQUIRE(tester.start());\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+    tester.handshake();\n+    BOOST_REQUIRE(tester.IsConnected());\n+    BOOST_REQUIRE(!tester.IsFullyConnected());\n+\n+    // After the handshake the client must send a SetupConnection message to the\n+    // Template Provider.\n+\n+    // An empty SetupConnection message should cause disconnection\n+    node::Sv2NetHeader setup_conn_header{node::Sv2MsgType::SETUP_CONNECTION, 0};\n+    node::Sv2NetMsg sv2_msg{std::move(setup_conn_header), {}};\n+    tester.receiveMessage(sv2_msg);\n+    tester.ProcessOurResponse(0);\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+\n+    // Reconnect\n+    tester.handshake();\n+\n+    node::Sv2NetMsg setup{tester.SetupConnectionMsg()};\n+    // SetupConnection.Success is 6 bytes\n+    tester.receiveMessage(setup);\n+    tester.ProcessOurResponse(SV2_HEADER_ENCRYPTED_SIZE + 6 + Poly1305::TAGLEN);\n+    BOOST_REQUIRE(tester.IsFullyConnected());\n+\n+    // There should be no block templates before any client gave us their coinbase\n+    // output data size:\n+    BOOST_REQUIRE(tester.m_tp->GetBlockTemplates().empty());\n+\n+    std::vector<uint8_t> coinbase_output_max_additional_size_bytes{\n+        0x01, 0x00, 0x00, 0x00\n+    };\n+    node::Sv2NetHeader cb_header{node::Sv2MsgType::COINBASE_OUTPUT_DATA_SIZE, 4};\n+    node::Sv2NetMsg msg{std::move(cb_header), std::move(coinbase_output_max_additional_size_bytes)};\n+    // The reply should be NewTemplate and SetNewPrevHash\n+    tester.receiveMessage(msg);\n+    tester.ProcessOurResponse(2 * SV2_HEADER_ENCRYPTED_SIZE + 91 + 80 + 2 * Poly1305::TAGLEN);\n+\n+    // There should now be one template\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Move mock time by at least DEFAULT_SV2_INTERVAL\n+    // If the mempool doesn't change, no new template is generated.\n+    SetMockTime(GetMockTime() + std::chrono::seconds{DEFAULT_SV2_INTERVAL});\n+    // Briefly wait for the timer in ThreadSv2Handler and block creation\n+    UninterruptibleSleep(std::chrono::milliseconds{200});\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Create a transaction with a large fee\n+    size_t tx_size;\n+    CKey key = GenerateRandomKey();\n+    CScript locking_script = GetScriptForDestination(PKHash(key.GetPubKey()));\n+    // Don't hold on to the transaction\n+    {\n+        auto mtx = CreateValidMempoolTransaction(/*input_transaction=*/m_coinbase_txns[0], /*input_vout=*/0,\n+                                                        /*input_height=*/0, /*input_signing_key=*/coinbaseKey,\n+                                                        /*output_destination=*/locking_script,\n+                                                        /*output_amount=*/CAmount(49 * COIN), /*submit=*/true);\n+        CTransactionRef tx = MakeTransactionRef(mtx);\n+\n+        // Get serialized transaction size\n+        DataStream ss;\n+        ss << TX_WITH_WITNESS(tx);\n+        tx_size = ss.size();\n+    }\n+",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 252,
      "original_position": 226,
      "commit_id": "ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "original_commit_id": "1bacb8998725de866b109c4fdd9f8739fcfb2344",
      "in_reply_to_id": 1489998271,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@maflcko shouldn't TSan on CI output something useful about why it crashed? I currently only says \"error 2\": https://cirrus-ci.com/task/5124733717446656?logs=ci#L3531\r\n\r\nWhen running this locally on Ubuntu with clang 16.0.6 I get a `WARNING: ThreadSanitizer: data race` and significantly more details (still a bit cryptic, but hopefully enough to figure out what's happening).",
      "created_at": "2024-02-15T11:15:40Z",
      "updated_at": "2024-02-15T11:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1490849107",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490849107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 252,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490855751",
      "pull_request_review_id": 1882517892,
      "id": 1490855751,
      "node_id": "PRRC_kwDOABII585Y3KdH",
      "diff_hunk": "@@ -0,0 +1,298 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 36,
      "original_position": 36,
      "commit_id": "ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "original_commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "in_reply_to_id": 1489543326,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@vasild any thoughts on how to make mock `Sock`s that can be used to play messages in two directions?",
      "created_at": "2024-02-15T11:20:56Z",
      "updated_at": "2024-02-15T11:20:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1490855751",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490855751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 36,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490880303",
      "pull_request_review_id": 1882554577,
      "id": 1490880303,
      "node_id": "PRRC_kwDOABII585Y3Qcv",
      "diff_hunk": "@@ -0,0 +1,314 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:\n+        UninterruptibleSleep(std::chrono::milliseconds{1000});\n+        return true;\n+    }\n+\n+    void SendPeerBytes()\n+    {\n+        int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+        ssize_t sent = 0;\n+        const auto& [data, more] =m_peer_transport->GetBytesToSendSv2(/*have_next_message=*/false);\n+        BOOST_REQUIRE(data.size() > 0);\n+        sent = m_peer_socket->Send(data.data(), data.size(), flags);\n+        m_peer_transport->MarkBytesSent(sent);\n+\n+        BOOST_REQUIRE(sent > 0);\n+    }\n+\n+    // Have the peer receive and process bytes:\n+    size_t PeerReceiveBytes()\n+    {\n+        uint8_t bytes_received_buf[0x10000];\n+        const auto num_bytes_received = m_peer_socket->Recv(bytes_received_buf, sizeof(bytes_received_buf), MSG_DONTWAIT);\n+\n+        // Have peer process received bytes:\n+        Span<const uint8_t> received = Span(bytes_received_buf).subspan(0, num_bytes_received);\n+        BOOST_REQUIRE(m_peer_transport->ReceivedBytes(received));\n+\n+        return num_bytes_received;\n+    }\n+\n+    /* Create a new client and perform handshake */\n+    void handshake()\n+    {\n+        m_peer_transport.reset();\n+\n+        auto peer_static_key{GenerateRandomKey()};\n+        m_peer_transport = std::make_unique<Sv2Transport>(std::move(peer_static_key), m_tp->m_authority_pubkey);\n+\n+        // Connect client via socket to Template Provider\n+\n+        std::optional<CService> tp{Lookup(\"127.0.0.1\", 18447, /*fAllowLookup=*/false)};\n+        BOOST_REQUIRE(tp);\n+        m_peer_socket = CreateSock(*tp);\n+        BOOST_REQUIRE(m_peer_socket);\n+        bool connected = ConnectSocketDirectly(*tp, *m_peer_socket, /*nTimeout=*/100, true);\n+        BOOST_REQUIRE(connected);\n+\n+        // Flush transport for handshake part 1\n+        SendPeerBytes();\n+\n+        // Read handshake part 2 from transport\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        BOOST_REQUIRE_EQUAL(PeerReceiveBytes(), Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+    }\n+\n+    void receiveMessage(Sv2NetMsg msg)\n+    {\n+        // Client encrypts message and puts it on the transport:\n+        BOOST_REQUIRE(m_peer_transport->SetMessageToSend(msg));\n+        SendPeerBytes();\n+    }\n+\n+    void ProcessOurResponse(size_t reply_bytes_expected)\n+    {\n+        // Respond to peer\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        size_t bytes_received = PeerReceiveBytes();\n+\n+        // Wait for a possible second message (if MSG_MORE was set)\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+\n+        if (occurred != 0) {\n+            // Have peer process response bytes:\n+            bytes_received += PeerReceiveBytes();\n+        }\n+\n+        BOOST_REQUIRE_EQUAL(bytes_received, reply_bytes_expected);\n+    }\n+\n+    bool IsConnected()\n+    {\n+        return m_tp->ConnectedClients() > 0;\n+    }\n+\n+    bool IsFullyConnected()\n+    {\n+        return m_tp->FullyConnectedClients() > 0;\n+    }\n+\n+    Sv2NetMsg SetupConnectionMsg()\n+    {\n+        std::vector<uint8_t> bytes{\n+            0x02,                                                 // protocol\n+            0x02, 0x00,                                           // min_version\n+            0x02, 0x00,                                           // max_version\n+            0x01, 0x00, 0x00, 0x00,                               // flags\n+            0x07, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30,       // endpoint_host\n+            0x61, 0x21,                                           // endpoint_port\n+            0x07, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x69, 0x6e,       // vendor\n+            0x08, 0x53, 0x39, 0x69, 0x20, 0x31, 0x33, 0x2e, 0x35, // hardware_version\n+            0x1c, 0x62, 0x72, 0x61, 0x69, 0x69, 0x6e, 0x73, 0x2d, 0x6f, 0x73, 0x2d, 0x32, 0x30,\n+            0x31, 0x38, 0x2d, 0x30, 0x39, 0x2d, 0x32, 0x32, 0x2d, 0x31, 0x2d, 0x68, 0x61, 0x73,\n+            0x68, // firmware\n+            0x10, 0x73, 0x6f, 0x6d, 0x65, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x75,\n+            0x75, 0x69, 0x64, // device_id\n+        };\n+\n+        node::Sv2NetHeader setup_conn_header = node::Sv2NetHeader{node::Sv2MsgType::SETUP_CONNECTION, static_cast<uint32_t>(bytes.size())};\n+        return node::Sv2NetMsg{std::move(setup_conn_header), std::move(bytes)};\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(client_tests)\n+{\n+    TPTester tester{*m_node.chainman, *m_node.mempool};\n+    BOOST_REQUIRE(tester.start());\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+    tester.handshake();\n+    BOOST_REQUIRE(tester.IsConnected());\n+    BOOST_REQUIRE(!tester.IsFullyConnected());\n+\n+    // After the handshake the client must send a SetupConnection message to the\n+    // Template Provider.\n+\n+    // An empty SetupConnection message should cause disconnection\n+    node::Sv2NetHeader setup_conn_header{node::Sv2MsgType::SETUP_CONNECTION, 0};\n+    node::Sv2NetMsg sv2_msg{std::move(setup_conn_header), {}};\n+    tester.receiveMessage(sv2_msg);\n+    tester.ProcessOurResponse(0);\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+\n+    // Reconnect\n+    tester.handshake();\n+\n+    node::Sv2NetMsg setup{tester.SetupConnectionMsg()};\n+    // SetupConnection.Success is 6 bytes\n+    tester.receiveMessage(setup);\n+    tester.ProcessOurResponse(SV2_HEADER_ENCRYPTED_SIZE + 6 + Poly1305::TAGLEN);\n+    BOOST_REQUIRE(tester.IsFullyConnected());\n+\n+    // There should be no block templates before any client gave us their coinbase\n+    // output data size:\n+    BOOST_REQUIRE(tester.m_tp->GetBlockTemplates().empty());\n+\n+    std::vector<uint8_t> coinbase_output_max_additional_size_bytes{\n+        0x01, 0x00, 0x00, 0x00\n+    };\n+    node::Sv2NetHeader cb_header{node::Sv2MsgType::COINBASE_OUTPUT_DATA_SIZE, 4};\n+    node::Sv2NetMsg msg{std::move(cb_header), std::move(coinbase_output_max_additional_size_bytes)};\n+    // The reply should be NewTemplate and SetNewPrevHash\n+    tester.receiveMessage(msg);\n+    tester.ProcessOurResponse(2 * SV2_HEADER_ENCRYPTED_SIZE + 91 + 80 + 2 * Poly1305::TAGLEN);\n+\n+    // There should now be one template\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Move mock time by at least DEFAULT_SV2_INTERVAL\n+    // If the mempool doesn't change, no new template is generated.\n+    SetMockTime(GetMockTime() + std::chrono::seconds{DEFAULT_SV2_INTERVAL});\n+    // Briefly wait for the timer in ThreadSv2Handler and block creation\n+    UninterruptibleSleep(std::chrono::milliseconds{200});\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Create a transaction with a large fee\n+    size_t tx_size;\n+    CKey key = GenerateRandomKey();\n+    CScript locking_script = GetScriptForDestination(PKHash(key.GetPubKey()));\n+    // Don't hold on to the transaction\n+    {\n+        auto mtx = CreateValidMempoolTransaction(/*input_transaction=*/m_coinbase_txns[0], /*input_vout=*/0,\n+                                                        /*input_height=*/0, /*input_signing_key=*/coinbaseKey,\n+                                                        /*output_destination=*/locking_script,\n+                                                        /*output_amount=*/CAmount(49 * COIN), /*submit=*/true);\n+        CTransactionRef tx = MakeTransactionRef(mtx);\n+\n+        // Get serialized transaction size\n+        DataStream ss;\n+        ss << TX_WITH_WITNESS(tx);\n+        tx_size = ss.size();\n+    }\n+",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 252,
      "original_position": 226,
      "commit_id": "ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "original_commit_id": "1bacb8998725de866b109c4fdd9f8739fcfb2344",
      "in_reply_to_id": 1489998271,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, I guess the unit tests don't capture the tsan output?",
      "created_at": "2024-02-15T11:39:27Z",
      "updated_at": "2024-02-15T11:39:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1490880303",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490880303"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 252,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490884343",
      "pull_request_review_id": 1882563090,
      "id": 1490884343,
      "node_id": "PRRC_kwDOABII585Y3Rb3",
      "diff_hunk": "@@ -0,0 +1,314 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:\n+        UninterruptibleSleep(std::chrono::milliseconds{1000});\n+        return true;\n+    }\n+\n+    void SendPeerBytes()\n+    {\n+        int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+        ssize_t sent = 0;\n+        const auto& [data, more] =m_peer_transport->GetBytesToSendSv2(/*have_next_message=*/false);\n+        BOOST_REQUIRE(data.size() > 0);\n+        sent = m_peer_socket->Send(data.data(), data.size(), flags);\n+        m_peer_transport->MarkBytesSent(sent);\n+\n+        BOOST_REQUIRE(sent > 0);\n+    }\n+\n+    // Have the peer receive and process bytes:\n+    size_t PeerReceiveBytes()\n+    {\n+        uint8_t bytes_received_buf[0x10000];\n+        const auto num_bytes_received = m_peer_socket->Recv(bytes_received_buf, sizeof(bytes_received_buf), MSG_DONTWAIT);\n+\n+        // Have peer process received bytes:\n+        Span<const uint8_t> received = Span(bytes_received_buf).subspan(0, num_bytes_received);\n+        BOOST_REQUIRE(m_peer_transport->ReceivedBytes(received));\n+\n+        return num_bytes_received;\n+    }\n+\n+    /* Create a new client and perform handshake */\n+    void handshake()\n+    {\n+        m_peer_transport.reset();\n+\n+        auto peer_static_key{GenerateRandomKey()};\n+        m_peer_transport = std::make_unique<Sv2Transport>(std::move(peer_static_key), m_tp->m_authority_pubkey);\n+\n+        // Connect client via socket to Template Provider\n+\n+        std::optional<CService> tp{Lookup(\"127.0.0.1\", 18447, /*fAllowLookup=*/false)};\n+        BOOST_REQUIRE(tp);\n+        m_peer_socket = CreateSock(*tp);\n+        BOOST_REQUIRE(m_peer_socket);\n+        bool connected = ConnectSocketDirectly(*tp, *m_peer_socket, /*nTimeout=*/100, true);\n+        BOOST_REQUIRE(connected);\n+\n+        // Flush transport for handshake part 1\n+        SendPeerBytes();\n+\n+        // Read handshake part 2 from transport\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        BOOST_REQUIRE_EQUAL(PeerReceiveBytes(), Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+    }\n+\n+    void receiveMessage(Sv2NetMsg msg)\n+    {\n+        // Client encrypts message and puts it on the transport:\n+        BOOST_REQUIRE(m_peer_transport->SetMessageToSend(msg));\n+        SendPeerBytes();\n+    }\n+\n+    void ProcessOurResponse(size_t reply_bytes_expected)\n+    {\n+        // Respond to peer\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        size_t bytes_received = PeerReceiveBytes();\n+\n+        // Wait for a possible second message (if MSG_MORE was set)\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+\n+        if (occurred != 0) {\n+            // Have peer process response bytes:\n+            bytes_received += PeerReceiveBytes();\n+        }\n+\n+        BOOST_REQUIRE_EQUAL(bytes_received, reply_bytes_expected);\n+    }\n+\n+    bool IsConnected()\n+    {\n+        return m_tp->ConnectedClients() > 0;\n+    }\n+\n+    bool IsFullyConnected()\n+    {\n+        return m_tp->FullyConnectedClients() > 0;\n+    }\n+\n+    Sv2NetMsg SetupConnectionMsg()\n+    {\n+        std::vector<uint8_t> bytes{\n+            0x02,                                                 // protocol\n+            0x02, 0x00,                                           // min_version\n+            0x02, 0x00,                                           // max_version\n+            0x01, 0x00, 0x00, 0x00,                               // flags\n+            0x07, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30,       // endpoint_host\n+            0x61, 0x21,                                           // endpoint_port\n+            0x07, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x69, 0x6e,       // vendor\n+            0x08, 0x53, 0x39, 0x69, 0x20, 0x31, 0x33, 0x2e, 0x35, // hardware_version\n+            0x1c, 0x62, 0x72, 0x61, 0x69, 0x69, 0x6e, 0x73, 0x2d, 0x6f, 0x73, 0x2d, 0x32, 0x30,\n+            0x31, 0x38, 0x2d, 0x30, 0x39, 0x2d, 0x32, 0x32, 0x2d, 0x31, 0x2d, 0x68, 0x61, 0x73,\n+            0x68, // firmware\n+            0x10, 0x73, 0x6f, 0x6d, 0x65, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x75,\n+            0x75, 0x69, 0x64, // device_id\n+        };\n+\n+        node::Sv2NetHeader setup_conn_header = node::Sv2NetHeader{node::Sv2MsgType::SETUP_CONNECTION, static_cast<uint32_t>(bytes.size())};\n+        return node::Sv2NetMsg{std::move(setup_conn_header), std::move(bytes)};\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(client_tests)\n+{\n+    TPTester tester{*m_node.chainman, *m_node.mempool};\n+    BOOST_REQUIRE(tester.start());\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+    tester.handshake();\n+    BOOST_REQUIRE(tester.IsConnected());\n+    BOOST_REQUIRE(!tester.IsFullyConnected());\n+\n+    // After the handshake the client must send a SetupConnection message to the\n+    // Template Provider.\n+\n+    // An empty SetupConnection message should cause disconnection\n+    node::Sv2NetHeader setup_conn_header{node::Sv2MsgType::SETUP_CONNECTION, 0};\n+    node::Sv2NetMsg sv2_msg{std::move(setup_conn_header), {}};\n+    tester.receiveMessage(sv2_msg);\n+    tester.ProcessOurResponse(0);\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+\n+    // Reconnect\n+    tester.handshake();\n+\n+    node::Sv2NetMsg setup{tester.SetupConnectionMsg()};\n+    // SetupConnection.Success is 6 bytes\n+    tester.receiveMessage(setup);\n+    tester.ProcessOurResponse(SV2_HEADER_ENCRYPTED_SIZE + 6 + Poly1305::TAGLEN);\n+    BOOST_REQUIRE(tester.IsFullyConnected());\n+\n+    // There should be no block templates before any client gave us their coinbase\n+    // output data size:\n+    BOOST_REQUIRE(tester.m_tp->GetBlockTemplates().empty());\n+\n+    std::vector<uint8_t> coinbase_output_max_additional_size_bytes{\n+        0x01, 0x00, 0x00, 0x00\n+    };\n+    node::Sv2NetHeader cb_header{node::Sv2MsgType::COINBASE_OUTPUT_DATA_SIZE, 4};\n+    node::Sv2NetMsg msg{std::move(cb_header), std::move(coinbase_output_max_additional_size_bytes)};\n+    // The reply should be NewTemplate and SetNewPrevHash\n+    tester.receiveMessage(msg);\n+    tester.ProcessOurResponse(2 * SV2_HEADER_ENCRYPTED_SIZE + 91 + 80 + 2 * Poly1305::TAGLEN);\n+\n+    // There should now be one template\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Move mock time by at least DEFAULT_SV2_INTERVAL\n+    // If the mempool doesn't change, no new template is generated.\n+    SetMockTime(GetMockTime() + std::chrono::seconds{DEFAULT_SV2_INTERVAL});\n+    // Briefly wait for the timer in ThreadSv2Handler and block creation\n+    UninterruptibleSleep(std::chrono::milliseconds{200});\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Create a transaction with a large fee\n+    size_t tx_size;\n+    CKey key = GenerateRandomKey();\n+    CScript locking_script = GetScriptForDestination(PKHash(key.GetPubKey()));\n+    // Don't hold on to the transaction\n+    {\n+        auto mtx = CreateValidMempoolTransaction(/*input_transaction=*/m_coinbase_txns[0], /*input_vout=*/0,\n+                                                        /*input_height=*/0, /*input_signing_key=*/coinbaseKey,\n+                                                        /*output_destination=*/locking_script,\n+                                                        /*output_amount=*/CAmount(49 * COIN), /*submit=*/true);\n+        CTransactionRef tx = MakeTransactionRef(mtx);\n+\n+        // Get serialized transaction size\n+        DataStream ss;\n+        ss << TX_WITH_WITNESS(tx);\n+        tx_size = ss.size();\n+    }\n+",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 252,
      "original_position": 226,
      "commit_id": "ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "original_commit_id": "1bacb8998725de866b109c4fdd9f8739fcfb2344",
      "in_reply_to_id": 1489998271,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "But they should. At least back when I tested https://github.com/bitcoin/bitcoin/pull/27667",
      "created_at": "2024-02-15T11:41:35Z",
      "updated_at": "2024-02-15T11:41:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1490884343",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490884343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 252,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490885359",
      "pull_request_review_id": 1882564775,
      "id": 1490885359,
      "node_id": "PRRC_kwDOABII585Y3Rrv",
      "diff_hunk": "@@ -0,0 +1,314 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:\n+        UninterruptibleSleep(std::chrono::milliseconds{1000});\n+        return true;\n+    }\n+\n+    void SendPeerBytes()\n+    {\n+        int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+        ssize_t sent = 0;\n+        const auto& [data, more] =m_peer_transport->GetBytesToSendSv2(/*have_next_message=*/false);\n+        BOOST_REQUIRE(data.size() > 0);\n+        sent = m_peer_socket->Send(data.data(), data.size(), flags);\n+        m_peer_transport->MarkBytesSent(sent);\n+\n+        BOOST_REQUIRE(sent > 0);\n+    }\n+\n+    // Have the peer receive and process bytes:\n+    size_t PeerReceiveBytes()\n+    {\n+        uint8_t bytes_received_buf[0x10000];\n+        const auto num_bytes_received = m_peer_socket->Recv(bytes_received_buf, sizeof(bytes_received_buf), MSG_DONTWAIT);\n+\n+        // Have peer process received bytes:\n+        Span<const uint8_t> received = Span(bytes_received_buf).subspan(0, num_bytes_received);\n+        BOOST_REQUIRE(m_peer_transport->ReceivedBytes(received));\n+\n+        return num_bytes_received;\n+    }\n+\n+    /* Create a new client and perform handshake */\n+    void handshake()\n+    {\n+        m_peer_transport.reset();\n+\n+        auto peer_static_key{GenerateRandomKey()};\n+        m_peer_transport = std::make_unique<Sv2Transport>(std::move(peer_static_key), m_tp->m_authority_pubkey);\n+\n+        // Connect client via socket to Template Provider\n+\n+        std::optional<CService> tp{Lookup(\"127.0.0.1\", 18447, /*fAllowLookup=*/false)};\n+        BOOST_REQUIRE(tp);\n+        m_peer_socket = CreateSock(*tp);\n+        BOOST_REQUIRE(m_peer_socket);\n+        bool connected = ConnectSocketDirectly(*tp, *m_peer_socket, /*nTimeout=*/100, true);\n+        BOOST_REQUIRE(connected);\n+\n+        // Flush transport for handshake part 1\n+        SendPeerBytes();\n+\n+        // Read handshake part 2 from transport\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        BOOST_REQUIRE_EQUAL(PeerReceiveBytes(), Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+    }\n+\n+    void receiveMessage(Sv2NetMsg msg)\n+    {\n+        // Client encrypts message and puts it on the transport:\n+        BOOST_REQUIRE(m_peer_transport->SetMessageToSend(msg));\n+        SendPeerBytes();\n+    }\n+\n+    void ProcessOurResponse(size_t reply_bytes_expected)\n+    {\n+        // Respond to peer\n+        constexpr auto timeout = std::chrono::milliseconds(1000);\n+        Sock::Event occurred;\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+        BOOST_REQUIRE(occurred != 0);\n+\n+        size_t bytes_received = PeerReceiveBytes();\n+\n+        // Wait for a possible second message (if MSG_MORE was set)\n+        BOOST_REQUIRE(m_peer_socket->Wait(timeout, Sock::RECV, &occurred));\n+\n+        if (occurred != 0) {\n+            // Have peer process response bytes:\n+            bytes_received += PeerReceiveBytes();\n+        }\n+\n+        BOOST_REQUIRE_EQUAL(bytes_received, reply_bytes_expected);\n+    }\n+\n+    bool IsConnected()\n+    {\n+        return m_tp->ConnectedClients() > 0;\n+    }\n+\n+    bool IsFullyConnected()\n+    {\n+        return m_tp->FullyConnectedClients() > 0;\n+    }\n+\n+    Sv2NetMsg SetupConnectionMsg()\n+    {\n+        std::vector<uint8_t> bytes{\n+            0x02,                                                 // protocol\n+            0x02, 0x00,                                           // min_version\n+            0x02, 0x00,                                           // max_version\n+            0x01, 0x00, 0x00, 0x00,                               // flags\n+            0x07, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x30,       // endpoint_host\n+            0x61, 0x21,                                           // endpoint_port\n+            0x07, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x69, 0x6e,       // vendor\n+            0x08, 0x53, 0x39, 0x69, 0x20, 0x31, 0x33, 0x2e, 0x35, // hardware_version\n+            0x1c, 0x62, 0x72, 0x61, 0x69, 0x69, 0x6e, 0x73, 0x2d, 0x6f, 0x73, 0x2d, 0x32, 0x30,\n+            0x31, 0x38, 0x2d, 0x30, 0x39, 0x2d, 0x32, 0x32, 0x2d, 0x31, 0x2d, 0x68, 0x61, 0x73,\n+            0x68, // firmware\n+            0x10, 0x73, 0x6f, 0x6d, 0x65, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x75,\n+            0x75, 0x69, 0x64, // device_id\n+        };\n+\n+        node::Sv2NetHeader setup_conn_header = node::Sv2NetHeader{node::Sv2MsgType::SETUP_CONNECTION, static_cast<uint32_t>(bytes.size())};\n+        return node::Sv2NetMsg{std::move(setup_conn_header), std::move(bytes)};\n+    }\n+};\n+\n+BOOST_AUTO_TEST_CASE(client_tests)\n+{\n+    TPTester tester{*m_node.chainman, *m_node.mempool};\n+    BOOST_REQUIRE(tester.start());\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+    tester.handshake();\n+    BOOST_REQUIRE(tester.IsConnected());\n+    BOOST_REQUIRE(!tester.IsFullyConnected());\n+\n+    // After the handshake the client must send a SetupConnection message to the\n+    // Template Provider.\n+\n+    // An empty SetupConnection message should cause disconnection\n+    node::Sv2NetHeader setup_conn_header{node::Sv2MsgType::SETUP_CONNECTION, 0};\n+    node::Sv2NetMsg sv2_msg{std::move(setup_conn_header), {}};\n+    tester.receiveMessage(sv2_msg);\n+    tester.ProcessOurResponse(0);\n+\n+    BOOST_REQUIRE(!tester.IsConnected());\n+\n+    // Reconnect\n+    tester.handshake();\n+\n+    node::Sv2NetMsg setup{tester.SetupConnectionMsg()};\n+    // SetupConnection.Success is 6 bytes\n+    tester.receiveMessage(setup);\n+    tester.ProcessOurResponse(SV2_HEADER_ENCRYPTED_SIZE + 6 + Poly1305::TAGLEN);\n+    BOOST_REQUIRE(tester.IsFullyConnected());\n+\n+    // There should be no block templates before any client gave us their coinbase\n+    // output data size:\n+    BOOST_REQUIRE(tester.m_tp->GetBlockTemplates().empty());\n+\n+    std::vector<uint8_t> coinbase_output_max_additional_size_bytes{\n+        0x01, 0x00, 0x00, 0x00\n+    };\n+    node::Sv2NetHeader cb_header{node::Sv2MsgType::COINBASE_OUTPUT_DATA_SIZE, 4};\n+    node::Sv2NetMsg msg{std::move(cb_header), std::move(coinbase_output_max_additional_size_bytes)};\n+    // The reply should be NewTemplate and SetNewPrevHash\n+    tester.receiveMessage(msg);\n+    tester.ProcessOurResponse(2 * SV2_HEADER_ENCRYPTED_SIZE + 91 + 80 + 2 * Poly1305::TAGLEN);\n+\n+    // There should now be one template\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Move mock time by at least DEFAULT_SV2_INTERVAL\n+    // If the mempool doesn't change, no new template is generated.\n+    SetMockTime(GetMockTime() + std::chrono::seconds{DEFAULT_SV2_INTERVAL});\n+    // Briefly wait for the timer in ThreadSv2Handler and block creation\n+    UninterruptibleSleep(std::chrono::milliseconds{200});\n+    BOOST_REQUIRE_EQUAL(tester.m_tp->GetBlockTemplates().size(), 1);\n+\n+    // Create a transaction with a large fee\n+    size_t tx_size;\n+    CKey key = GenerateRandomKey();\n+    CScript locking_script = GetScriptForDestination(PKHash(key.GetPubKey()));\n+    // Don't hold on to the transaction\n+    {\n+        auto mtx = CreateValidMempoolTransaction(/*input_transaction=*/m_coinbase_txns[0], /*input_vout=*/0,\n+                                                        /*input_height=*/0, /*input_signing_key=*/coinbaseKey,\n+                                                        /*output_destination=*/locking_script,\n+                                                        /*output_amount=*/CAmount(49 * COIN), /*submit=*/true);\n+        CTransactionRef tx = MakeTransactionRef(mtx);\n+\n+        // Get serialized transaction size\n+        DataStream ss;\n+        ss << TX_WITH_WITNESS(tx);\n+        tx_size = ss.size();\n+    }\n+",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 252,
      "original_position": 226,
      "commit_id": "ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "original_commit_id": "1bacb8998725de866b109c4fdd9f8739fcfb2344",
      "in_reply_to_id": 1489998271,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe good to re-check this when/after the cmake migration is done?",
      "created_at": "2024-02-15T11:42:32Z",
      "updated_at": "2024-02-15T11:42:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1490885359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490885359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 252,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1492773923",
      "pull_request_review_id": 1885639720,
      "id": 1492773923,
      "node_id": "PRRC_kwDOABII585Y-ewj",
      "diff_hunk": "@@ -0,0 +1,298 @@\n+#include <addresstype.h>\n+#include <boost/test/unit_test.hpp>\n+#include <common/sv2_messages.h>\n+#include <node/transaction.h>\n+#include <node/sv2_template_provider.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/transaction_utils.h>\n+#include <util/sock.h>\n+#include <util/strencodings.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_template_provider_tests, TestChain100Setup)\n+\n+/**\n+  * A class for testing the Template Provider. Each TPTester encapsulates a\n+  * Sv2TemplateProvider (the one being tested) as well as a Sv2Cipher\n+  * to act as the other side.\n+  */\n+class TPTester {\n+private:\n+    std::unique_ptr<Sv2Transport> m_peer_transport; //!< Transport for peer\n+    std::unique_ptr<Sock> m_peer_socket;\n+\n+public:\n+    std::unique_ptr<Sv2TemplateProvider> m_tp; //!< Sv2TemplateProvider being tested\n+\n+    TPTester(ChainstateManager& chainman, CTxMemPool& mempool)\n+    {\n+        m_tp = std::make_unique<Sv2TemplateProvider>(chainman, mempool);\n+    }\n+\n+    bool start()\n+    {\n+        bool started = m_tp->Start(Sv2TemplateProviderOptions { .port = 18447 });\n+        if (! started) return false;\n+        // Avoid \"Connection refused\" on CI:",
      "path": "src/test/sv2_template_provider_tests.cpp",
      "position": 36,
      "original_position": 36,
      "commit_id": "ecbd1e0d85ad9520caa0dcf44f559f538868892c",
      "original_commit_id": "684890f900b2fee3f2c6e7610820d70de5f4f0fb",
      "in_reply_to_id": 1489543326,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes! See the first two commits in https://github.com/bitcoin/bitcoin/pull/26812:\r\n\r\nbee6bdf0a5 `test: put the generic parts from StaticContentsSock into a separate class`\r\nf42e4f3b3b `test: add a mocked Sock that allows inspecting what has been Send() to it`\r\n\r\nand then how to use that in the last commit of the same PR:\r\n\r\n8b10990aa0 `test: add unit tests exercising full call chain of CConnman and PeerManager`\r\n\r\nWith those it is possible to send/receive raw bytes to/from the (mocked) socket, or NetMsgs, e.g.:\r\n\r\n```cpp\r\npipes->recv.PushNetMsg(NetMsgType::GETBLOCKS, block_locator, hash_stop);\r\n```",
      "created_at": "2024-02-16T17:20:48Z",
      "updated_at": "2024-02-16T17:20:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29432#discussion_r1492773923",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1492773923"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 36,
      "original_line": 36,
      "side": "RIGHT"
    }
  ]
}