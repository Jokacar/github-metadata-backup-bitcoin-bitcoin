{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043",
    "id": 1424579402,
    "node_id": "PR_kwDOABII585U6VtK",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28043",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28043.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28043.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/8a7feb65732742b2bd88263e751e9f9cdc21fdce",
    "number": 28043,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "fuzz: Test headers pre-sync through p2p interface",
    "user": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR adds a regression fuzz test for #26355 and [some of the bugs](https://github.com/bitcoin/bitcoin/pull/25717/commits/ed6cddd98e32263fc116a4380af6d66da20da990) found during review of #25717.\r\n\r\nShould give us more confidence in doing #25725.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2023-07-07T12:05:27Z",
    "updated_at": "2023-07-30T12:18:30Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "d68b7c57e6c4bc40a91c5db5edb48f130e03890d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "dergoegge:2023-07-fuzz-pow",
      "ref": "2023-07-fuzz-pow",
      "sha": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 315023492,
        "node_id": "MDEwOlJlcG9zaXRvcnkzMTUwMjM0OTI=",
        "name": "bitcoin",
        "full_name": "dergoegge/bitcoin",
        "owner": {
          "login": "dergoegge",
          "id": 8077169,
          "node_id": "MDQ6VXNlcjgwNzcxNjk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/dergoegge",
          "html_url": "https://github.com/dergoegge",
          "followers_url": "https://api.github.com/users/dergoegge/followers",
          "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
          "organizations_url": "https://api.github.com/users/dergoegge/orgs",
          "repos_url": "https://api.github.com/users/dergoegge/repos",
          "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/dergoegge/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/dergoegge/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/dergoegge/bitcoin",
        "archive_url": "https://api.github.com/repos/dergoegge/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/dergoegge/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/dergoegge/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/dergoegge/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/dergoegge/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/dergoegge/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/dergoegge/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/dergoegge/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/dergoegge/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/dergoegge/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/dergoegge/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/dergoegge/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/dergoegge/bitcoin/events",
        "forks_url": "https://api.github.com/repos/dergoegge/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/dergoegge/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/dergoegge/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/dergoegge/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/dergoegge/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/dergoegge/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/dergoegge/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/dergoegge/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/dergoegge/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/dergoegge/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/dergoegge/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/dergoegge/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/dergoegge/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/dergoegge/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/dergoegge/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/dergoegge/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:dergoegge/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/dergoegge/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/dergoegge/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/dergoegge/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/dergoegge/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/dergoegge/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/dergoegge/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/dergoegge/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/dergoegge/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/dergoegge/bitcoin/hooks",
        "svn_url": "https://github.com/dergoegge/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 224372,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-26T13:28:39Z",
        "created_at": "2020-11-22T11:41:30Z",
        "updated_at": "2023-05-05T12:10:28Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e35fb7bc48d360585b80d0c7f89ac5087c1d405e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35467,
        "stargazers_count": 70573,
        "watchers_count": 70573,
        "size": 236074,
        "default_branch": "master",
        "open_issues_count": 677,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-30T23:22:26Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-07-30T23:57:45Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 216,
    "deletions": 9,
    "changed_files": 6,
    "commits": 3,
    "review_comments": 6,
    "comments": 3
  },
  "events": [
    {
      "event": "commented",
      "id": 1625314105,
      "node_id": "IC_kwDOABII585g4FM5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1625314105",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T12:05:30Z",
      "updated_at": "2023-07-30T12:18:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27509](https://github.com/bitcoin/bitcoin/pull/27509) (Relay own transactions only via short-lived Tor or I2P connections by vasild)\n* [#26812](https://github.com/bitcoin/bitcoin/pull/26812) (test: add end-to-end tests for CConnman and PeerManager by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#issuecomment-1625314105",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043"
    },
    {
      "event": "labeled",
      "id": 9754392485,
      "node_id": "LE_lADOABII585q5aJSzwAAAAJFaDel",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9754392485",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T12:05:32Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 9754397489,
      "node_id": "CTDE_lADOABII585q5aJSzwAAAAJFaEsx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9754397489",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T12:06:03Z"
    },
    {
      "event": "commented",
      "id": 1625315268,
      "node_id": "IC_kwDOABII585g4FfE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1625315268",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T12:06:22Z",
      "updated_at": "2023-07-07T12:06:22Z",
      "author_association": "MEMBER",
      "body": "Draft until #27499 is in.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#issuecomment-1625315268",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043"
    },
    {
      "event": "reviewed",
      "id": 1520679325,
      "node_id": "PRR_kwDOABII585ao7md",
      "url": null,
      "actor": null,
      "commit_id": "4407469bd697d50beb9afe4bb946d55952c1893d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#pullrequestreview-1520679325",
      "submitted_at": "2023-07-08T09:38:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
    },
    {
      "event": "labeled",
      "id": 9845427791,
      "node_id": "LE_lADOABII585q5aJSzwAAAAJK1U5P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9845427791",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-18T04:54:54Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1544111927,
      "node_id": "PRR_kwDOABII585cCUc3",
      "url": null,
      "actor": null,
      "commit_id": "4407469bd697d50beb9afe4bb946d55952c1893d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#pullrequestreview-1544111927",
      "submitted_at": "2023-07-24T19:21:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
    },
    {
      "event": "labeled",
      "id": 9910180230,
      "node_id": "LE_lADOABII585q5aJSzwAAAAJOsVmG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9910180230",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T10:54:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUwY2MzOTAxMTJjMGE1MmQ1YmUwOWU0OTcxNzJkZDg0OGFmYWUzMjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0cc390112c0a52d5be09e497172dd848afae326",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e0cc390112c0a52d5be09e497172dd848afae326",
      "tree": {
        "sha": "558957e0cb5a1d296c10b82484e493daa007722f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/558957e0cb5a1d296c10b82484e493daa007722f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e35fb7bc48d360585b80d0c7f89ac5087c1d405e",
          "sha": "e35fb7bc48d360585b80d0c7f89ac5087c1d405e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e35fb7bc48d360585b80d0c7f89ac5087c1d405e"
        }
      ],
      "message": "Allow mocking CheckProofOfWork",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-07-25T12:15:07Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-07-07T10:22:15Z"
      },
      "sha": "e0cc390112c0a52d5be09e497172dd848afae326"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFhZDRlMjMxZTY3MjYzZGU2Zjc0ZWFiMDNjMWRlOTY0YTYyMDE0MWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aad4e231e67263de6f74eab03c1de964a620141a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/aad4e231e67263de6f74eab03c1de964a620141a",
      "tree": {
        "sha": "9be000c2a2f880fe4ac999c6ad25f1f0228eb5ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9be000c2a2f880fe4ac999c6ad25f1f0228eb5ae"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0cc390112c0a52d5be09e497172dd848afae326",
          "sha": "e0cc390112c0a52d5be09e497172dd848afae326",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e0cc390112c0a52d5be09e497172dd848afae326"
        }
      ],
      "message": "[net processing] Make MAX_HEADERS_RESULT a PeerManager option",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-07-25T12:15:07Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-07-07T08:52:22Z"
      },
      "sha": "aad4e231e67263de6f74eab03c1de964a620141a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9910970392,
      "node_id": "HRFPE_lADOABII585q5aJSzwAAAAJOvWgY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9910970392",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T12:19:03Z"
    },
    {
      "event": "ready_for_review",
      "id": 9910983351,
      "node_id": "RFRE_lADOABII585q5aJSzwAAAAJOvZq3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9910983351",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T12:20:25Z"
    },
    {
      "event": "commented",
      "id": 1649733407,
      "node_id": "IC_kwDOABII585iVO8f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1649733407",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T12:20:44Z",
      "updated_at": "2023-07-25T12:20:44Z",
      "author_association": "MEMBER",
      "body": "Rebased and un-drafted, ready for review!",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#issuecomment-1649733407",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhhN2ZlYjY1NzMyNzQyYjJiZDg4MjYzZTc1MWU5ZjljZGMyMWZkY2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "tree": {
        "sha": "d10421d0e07452f6695f229d8c4cd16d1c16e8aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d10421d0e07452f6695f229d8c4cd16d1c16e8aa"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aad4e231e67263de6f74eab03c1de964a620141a",
          "sha": "aad4e231e67263de6f74eab03c1de964a620141a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/aad4e231e67263de6f74eab03c1de964a620141a"
        }
      ],
      "message": "[fuzz] Test headers sync through the p2p interface",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-07-25T12:24:41Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-07-06T14:55:17Z"
      },
      "sha": "8a7feb65732742b2bd88263e751e9f9cdc21fdce"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9911027522,
      "node_id": "HRFPE_lADOABII585q5aJSzwAAAAJOvkdC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9911027522",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T12:25:00Z"
    },
    {
      "event": "unlabeled",
      "id": 9911587590,
      "node_id": "UNLE_lADOABII585q5aJSzwAAAAJOxtMG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9911587590",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T13:12:04Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9912365746,
      "node_id": "UNLE_lADOABII585q5aJSzwAAAAJO0rKy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9912365746",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T14:08:34Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1545352861,
      "node_id": "PRR_kwDOABII585cHDad",
      "url": null,
      "actor": null,
      "commit_id": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#pullrequestreview-1545352861",
      "submitted_at": "2023-07-28T09:48:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257196740",
      "pull_request_review_id": 1520679325,
      "id": 1257196740,
      "node_id": "PRRC_kwDOABII585K70zE",
      "diff_hunk": "@@ -43,9 +46,19 @@ struct CNodeStateStats {\n class PeerManager : public CValidationInterface, public NetEventsInterface\n {\n public:\n+    struct Options {\n+        BanMan* banman{nullptr};\n+        bool ignore_incoming_txs{false};\n+        bool reconcile_txs{false};\n+        uint32_t max_orphan_txs{DEFAULT_MAX_ORPHAN_TRANSACTIONS};\n+        size_t max_extra_txs{DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN};\n+        bool capture_messages{false};\n+        uint32_t max_headers_result{MAX_HEADERS_RESULTS};",
      "path": "src/net_processing.h",
      "position": 14,
      "original_position": 21,
      "commit_id": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "original_commit_id": "4407469bd697d50beb9afe4bb946d55952c1893d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like this is the only option that is required by the fuzz target, so maybe remove the others for now to hopefully reduce the number of conflicting pulls and remove the dependency on the other pull?",
      "created_at": "2023-07-08T09:38:11Z",
      "updated_at": "2023-07-08T09:38:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#discussion_r1257196740",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257196740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 58,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258057941",
      "pull_request_review_id": 1521779648,
      "id": 1258057941,
      "node_id": "PRRC_kwDOABII585K_HDV",
      "diff_hunk": "@@ -43,9 +46,19 @@ struct CNodeStateStats {\n class PeerManager : public CValidationInterface, public NetEventsInterface\n {\n public:\n+    struct Options {\n+        BanMan* banman{nullptr};\n+        bool ignore_incoming_txs{false};\n+        bool reconcile_txs{false};\n+        uint32_t max_orphan_txs{DEFAULT_MAX_ORPHAN_TRANSACTIONS};\n+        size_t max_extra_txs{DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN};\n+        bool capture_messages{false};\n+        uint32_t max_headers_result{MAX_HEADERS_RESULTS};",
      "path": "src/net_processing.h",
      "position": 14,
      "original_position": 21,
      "commit_id": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "original_commit_id": "4407469bd697d50beb9afe4bb946d55952c1893d",
      "in_reply_to_id": 1257196740,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3 of the PRs are mine (I don't care about rebasing) and the package relay stuff is gonna conflict either way, so I'd prefer keeping it as is.",
      "created_at": "2023-07-10T10:37:59Z",
      "updated_at": "2023-07-10T10:38:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#discussion_r1258057941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258057941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 58,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272659160",
      "pull_request_review_id": 1544111927,
      "id": 1272659160,
      "node_id": "PRRC_kwDOABII585L2zzY",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     const std::vector<const char*>& extra_args = {})\n+        : TestingSetup(chain_type, extra_args)\n+    {\n+        PeerManager::Options peerman_opts;\n+        peerman_opts.banman = m_node.banman.get();\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           *m_node.chainman, *m_node.mempool,\n+                                           peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    (void)connman.ReceiveMsgFrom(connection, msg);\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // Doesn't need to be a valid block but it needs to have one transaction\n+    // for compact block construction.\n+    CBlock block{header};\n+    block.vtx.push_back(MakeTransactionRef(CMutableTransaction{}));\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    // Reduce proof-of-work check to one bit.\n+    g_check_pow_mock = [](uint256 hash, unsigned int, const Consensus::Params&) {\n+        return (hash.data()[31] & 0x80) == 0;\n+    };",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 126,
      "original_position": 127,
      "commit_id": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "original_commit_id": "4407469bd697d50beb9afe4bb946d55952c1893d",
      "in_reply_to_id": null,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why not disabling it completely instead of mocking it?",
      "created_at": "2023-07-24T19:21:25Z",
      "updated_at": "2023-07-24T19:21:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#discussion_r1272659160",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272659160"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
        }
      },
      "start_line": 123,
      "original_start_line": 124,
      "start_side": "RIGHT",
      "line": 126,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1273450317",
      "pull_request_review_id": 1545327630,
      "id": 1273450317,
      "node_id": "PRRC_kwDOABII585L509N",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     const std::vector<const char*>& extra_args = {})\n+        : TestingSetup(chain_type, extra_args)\n+    {\n+        PeerManager::Options peerman_opts;\n+        peerman_opts.banman = m_node.banman.get();\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           *m_node.chainman, *m_node.mempool,\n+                                           peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    (void)connman.ReceiveMsgFrom(connection, msg);\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // Doesn't need to be a valid block but it needs to have one transaction\n+    // for compact block construction.\n+    CBlock block{header};\n+    block.vtx.push_back(MakeTransactionRef(CMutableTransaction{}));\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    // Reduce proof-of-work check to one bit.\n+    g_check_pow_mock = [](uint256 hash, unsigned int, const Consensus::Params&) {\n+        return (hash.data()[31] & 0x80) == 0;\n+    };",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 126,
      "original_position": 127,
      "commit_id": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "original_commit_id": "4407469bd697d50beb9afe4bb946d55952c1893d",
      "in_reply_to_id": 1272659160,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My thinking was that this should result in more coverage because we'll also cover paths for invalid PoW.",
      "created_at": "2023-07-25T12:23:12Z",
      "updated_at": "2023-07-25T12:23:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#discussion_r1273450317",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1273450317"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
        }
      },
      "start_line": 123,
      "original_start_line": 124,
      "start_side": "RIGHT",
      "line": 126,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1273466446",
      "pull_request_review_id": 1545352861,
      "id": 1273466446,
      "node_id": "PRRC_kwDOABII585L545O",
      "diff_hunk": "@@ -0,0 +1,197 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     const std::vector<const char*>& extra_args = {})\n+        : TestingSetup(chain_type, extra_args)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    (void)connman.ReceiveMsgFrom(connection, msg);\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // Doesn't need to be a valid block but it needs to have one transaction\n+    // for compact block construction.\n+    CBlock block{header};\n+    block.vtx.push_back(MakeTransactionRef(CMutableTransaction{}));\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    // Reduce proof-of-work check to one bit.\n+    g_check_pow_mock = [](uint256 hash, unsigned int, const Consensus::Params&) {\n+        return (hash.data()[31] & 0x80) == 0;\n+    };\n+\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {\"-checkpoints=0\"});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(Params().GenesisBlock().nTime);\n+\n+    size_t original_index_size{WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size())};\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes(), 100)\n+    {\n+        auto finalized_block = [&]() {\n+            auto prev = WITH_LOCK(cs_main,\n+                                  return PickValue(fuzzed_data_provider, chainman.m_blockman.m_block_index))\n+                            .second.GetBlockHeader();\n+            CBlock block = ConsumeBlock(fuzzed_data_provider, prev.GetHash(), prev.nBits);\n+            FinalizeHeader(block);\n+            return block;\n+        };\n+\n+        std::vector<std::function<void()>> actions = {",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 159,
      "original_position": 159,
      "commit_id": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "original_commit_id": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How is this different from CallOneOf?",
      "created_at": "2023-07-25T12:35:21Z",
      "updated_at": "2023-07-28T09:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#discussion_r1273466446",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1273466446"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278551101",
      "pull_request_review_id": 1553624235,
      "id": 1278551101,
      "node_id": "PRRC_kwDOABII585MNSQ9",
      "diff_hunk": "@@ -0,0 +1,197 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     const std::vector<const char*>& extra_args = {})\n+        : TestingSetup(chain_type, extra_args)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    (void)connman.ReceiveMsgFrom(connection, msg);\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // Doesn't need to be a valid block but it needs to have one transaction\n+    // for compact block construction.\n+    CBlock block{header};\n+    block.vtx.push_back(MakeTransactionRef(CMutableTransaction{}));\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    // Reduce proof-of-work check to one bit.\n+    g_check_pow_mock = [](uint256 hash, unsigned int, const Consensus::Params&) {\n+        return (hash.data()[31] & 0x80) == 0;\n+    };\n+\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {\"-checkpoints=0\"});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(Params().GenesisBlock().nTime);\n+\n+    size_t original_index_size{WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size())};\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes(), 100)\n+    {\n+        auto finalized_block = [&]() {\n+            auto prev = WITH_LOCK(cs_main,\n+                                  return PickValue(fuzzed_data_provider, chainman.m_blockman.m_block_index))\n+                            .second.GetBlockHeader();\n+            CBlock block = ConsumeBlock(fuzzed_data_provider, prev.GetHash(), prev.nBits);\n+            FinalizeHeader(block);\n+            return block;\n+        };\n+\n+        std::vector<std::function<void()>> actions = {",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 159,
      "original_position": 159,
      "commit_id": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "original_commit_id": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "in_reply_to_id": 1273466446,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "it's not, iirc I had some trouble with thread safety annotations but I'll give `CallOneOf` another try",
      "created_at": "2023-07-30T11:12:47Z",
      "updated_at": "2023-07-30T11:12:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#discussion_r1278551101",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278551101"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    }
  ]
}