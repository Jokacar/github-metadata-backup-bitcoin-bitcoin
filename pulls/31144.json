{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144",
    "id": 2142876066,
    "node_id": "PR_kwDOABII585_ubGi",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31144",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31144.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31144.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b9c847fd093d100628817af98fe837db938160f7",
    "number": 31144,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "optimization: speed up XOR by 4% (9% when disabled) by applying it in larger batches",
    "user": {
      "login": "l0rinc",
      "id": 1841944,
      "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l0rinc",
      "html_url": "https://github.com/l0rinc",
      "followers_url": "https://api.github.com/users/l0rinc/followers",
      "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
      "organizations_url": "https://api.github.com/users/l0rinc/orgs",
      "repos_url": "https://api.github.com/users/l0rinc/repos",
      "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/l0rinc/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "The recently merged [XOR obfuscation](https://github.com/bitcoin/bitcoin/pull/28207) introduced a minor serialization cost (seen during IBD benchmarking). This PR is meant to alleviate that.\r\n\r\n#### Summary\r\n\r\nThe obfuscation's effect on IBD seems' to be about ~4% when it still has to be applied, and ~9% when it's turned off, see: \r\n* https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2519764142\r\n* https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2523295114\r\n\r\n#### Changes in testing, benchmarking and implementation\r\n\r\n* Added new tests comparing randomized inputs against a trivial implementation and performing roundtrip checks with random chunks.\r\n* Updated the benchmark to reflect realistic scenarios by capturing every call of `util::Xor` for the first 860k blocks, creating a model with the same data distribution.\r\nAn additional benchmark checks the effect of short-circuiting XOR when the key is zero, ensuring no speed regression occurs when the obfuscation feature is disabled.\r\n* Optimized the Xor function to process in batches (64/32/16/8 bits instead of per-byte).\r\n* Migrated remaining `std::vector<std::byte>(8)` values to `uint64_t`.\r\n\r\n#### Reproducer and assembly\r\n\r\nMemory alignment is handled via `std::memcpy`, optimized out on tested platforms (see https://godbolt.org/z/GGYcedjzY):\r\n* _Clang_ (x86-64) - 32 bytes/iter using SSE vector operations\r\n* _GCC_ (x86-64) - 16 bytes/iter using unrolled 64-bit XORs\r\n* _RISC-V_ (32-bit) - 8 bytes/iter using load/XOR/store sequence\r\n* _s390x_ (big-endian) - 64 bytes/iter with unrolled 8-byte XORs\r\n\r\n#### Endianness\r\n\r\nThe only endianness issue was with bit rotation, intended to realign the key if obfuscation halted before full key consumption.\r\nElsewhere, memory is read, processed, and written back in the same endianness, preserving byte order.\r\nSince CI lacks a big-endian machine, testing was done locally via Docker.\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nbrew install podman pigz\r\nsoftwareupdate --install-rosetta\r\npodman machine init\r\npodman machine start\r\ndocker run --platform linux/s390x -it ubuntu:latest /bin/bash\r\n    apt update && apt install -y git build-essential cmake ccache pkg-config libevent-dev libboost-dev libssl-dev libsqlite3-dev && \\\r\n    cd /mnt && git clone https://github.com/bitcoin/bitcoin.git && cd bitcoin && git remote add l0rinc https://github.com/l0rinc/bitcoin.git && git fetch --all && git checkout l0rinc/optimize-xor && \\\r\n    cmake -B build && cmake --build build --target test_bitcoin -j$(nproc) && \\\r\n    ./build/src/test/test_bitcoin --run_test=streams_tests\r\n```\r\n\r\n</details>\r\n\r\n#### Performance\r\n\r\n```bash\r\n   cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release \\\r\n&& cmake --build build -j$(nproc) \\\r\n&& build/src/bench/bench_bitcoin -filter='XorHistogram|AutoFileXor' -min-time=10000\r\n```\r\n\r\nThe [860k block profile](https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2457667761) contains a lot of very big arrays (96'233 separate sizes, biggest was 3'992'470 bytes long) - a big departure from the previous 400k and 700k blocks (having 1500 sizes, biggest was 9319 bytes long).\r\n\r\nThe performance characteristics are also quite different, now that we have more and bigger byte arrays:\r\n\r\n#### C++ compiler .......................... AppleClang 16.0.0.16000026\r\n\r\n> Before:\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.00 |    1,000,913,427.27 |    0.7% |     10.20 | `AutoFileXor`\r\n|                0.85 |    1,173,442,964.60 |    0.2% |     11.16 | `XorHistogram`\r\n\r\n> After:\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                0.09 |   11,204,183,007.86 |    0.6% |     11.08 | `AutoFileXor`\r\n|                0.15 |    6,459,482,269.06 |    0.3% |     10.97 | `XorHistogram`\r\n\r\ni.e. ~11/5.5x (disabled/enabled) faster with Clang at processing the data with representative histograms.\r\n\r\n#### C++ compiler .......................... GNU 13.2.0\r\n\r\n> Before:\r\n\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                1.87 |      535,253,389.72 |    0.0% |            9.20 |            3.45 |  2.669 |           1.03 |    0.1% |     11.02 | `AutoFileXor`\r\n|                1.70 |      587,844,715.57 |    0.0% |            9.35 |            5.41 |  1.729 |           1.05 |    1.7% |     10.95 | `XorHistogram`\r\n\r\n> After:\r\n\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                0.59 |    1,706,433,032.76 |    0.1% |            0.00 |            0.00 |  0.620 |           0.00 |    1.8% |     11.01 | `AutoFileXor`\r\n|                0.47 |    2,145,375,849.71 |    0.0% |            0.95 |            1.48 |  0.642 |           0.20 |    9.6% |     10.93 | `XorHistogram`\r\n\r\ni.e. ~3.2/3.5x faster (disabled/enabled) with GCC at processing the data with representative histograms.\r\n\r\n<details>\r\n<summary>A few other benchmarks that seem to have improved as well (tested with Clang only)</summary>\r\n\r\n> Before:\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        2,237,168.64 |              446.99 |    0.3% |     10.91 | `ReadBlockFromDiskTest`\r\n|          748,837.59 |            1,335.40 |    0.2% |     10.68 | `ReadRawBlockFromDiskTest`\r\n\r\n> After:\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        1,827,436.12 |              547.21 |    0.7% |     10.95 | `ReadBlockFromDiskTest`\r\n|           49,276.48 |           20,293.66 |    0.2% |     10.99 | `ReadRawBlockFromDiskTest`\r\n\r\n</details>\r\n\r\nAlso visible on https://corecheck.dev/bitcoin/bitcoin/pulls/31144",
    "labels": [
      {
        "id": 219890555,
        "node_id": "MDU6TGFiZWwyMTk4OTA1NTU=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Block%20storage",
        "name": "Block storage",
        "color": "000000",
        "default": false
      }
    ],
    "created_at": "2024-10-24T07:11:11Z",
    "updated_at": "2024-12-10T13:29:03Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "8d37f2ca156771ac3b25d8c5c2944f1744e6bb3d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "l0rinc:l0rinc/optimize-xor",
      "ref": "l0rinc/optimize-xor",
      "sha": "b9c847fd093d100628817af98fe837db938160f7",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 674169038,
        "node_id": "R_kgDOKC8Azg",
        "name": "bitcoin",
        "full_name": "l0rinc/bitcoin",
        "owner": {
          "login": "l0rinc",
          "id": 1841944,
          "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/l0rinc",
          "html_url": "https://github.com/l0rinc",
          "followers_url": "https://api.github.com/users/l0rinc/followers",
          "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
          "organizations_url": "https://api.github.com/users/l0rinc/orgs",
          "repos_url": "https://api.github.com/users/l0rinc/repos",
          "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/l0rinc/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/l0rinc/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/l0rinc/bitcoin",
        "archive_url": "https://api.github.com/repos/l0rinc/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/l0rinc/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/l0rinc/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/l0rinc/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/l0rinc/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/l0rinc/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/l0rinc/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/l0rinc/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/l0rinc/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/l0rinc/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/l0rinc/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/l0rinc/bitcoin/events",
        "forks_url": "https://api.github.com/repos/l0rinc/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/l0rinc/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/l0rinc/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/l0rinc/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/l0rinc/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/l0rinc/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/l0rinc/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/l0rinc/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/l0rinc/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/l0rinc/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/l0rinc/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/l0rinc/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/l0rinc/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:l0rinc/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/l0rinc/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/l0rinc/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/l0rinc/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/l0rinc/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/l0rinc/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/l0rinc/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/l0rinc/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/l0rinc/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/l0rinc/bitcoin/hooks",
        "svn_url": "https://github.com/l0rinc/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 251660,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-12-09T18:55:19Z",
        "created_at": "2023-08-03T09:49:12Z",
        "updated_at": "2024-07-18T12:40:18Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "22723c809a8abce415195693546e2a7c03e516c4",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36536,
        "stargazers_count": 80419,
        "watchers_count": 80419,
        "size": 273401,
        "default_branch": "master",
        "open_issues_count": 663,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-12-10T09:33:36Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-12-10T13:58:37Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 1224,
    "deletions": 89,
    "changed_files": 12,
    "commits": 4,
    "review_comments": 83,
    "comments": 34
  },
  "events": [
    {
      "event": "commented",
      "id": 2434475807,
      "node_id": "IC_kwDOABII586RGycf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2434475807",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T07:11:15Z",
      "updated_at": "2024-12-10T13:29:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31144.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [hodlinator](https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2408330350), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2515108628) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30342](https://github.com/bitcoin/bitcoin/pull/30342) (kernel, logging: Pass Logger instances to kernel objects by ryanofsky)\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo over LogPrintf [WIP, NOMERGE, DRAFT] by maflcko)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2434475807",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14843711057,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN0wQ5R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14843711057",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "created_at": "2024-10-24T07:59:16Z"
    },
    {
      "event": "labeled",
      "id": 14843712179,
      "node_id": "LE_lADOABII586bm_bxzwAAAAN0wRKz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14843712179",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T07:59:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2391705369,
      "node_id": "PRR_kwDOABII586OjocZ",
      "url": null,
      "actor": null,
      "commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2391705369",
      "submitted_at": "2024-10-24T08:27:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2434625837,
      "node_id": "IC_kwDOABII586RHXEt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2434625837",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T08:27:45Z",
      "updated_at": "2024-10-24T08:27:45Z",
      "author_association": "MEMBER",
      "body": "I think your example may be a bit skewed? It shows how much time is spent when deserializing a `CScript` from a block file. However, block files contain full blocks, where many (most?) of the writes are single bytes (or 4 bytes), see https://github.com/bitcoin/bitcoin/issues/30833#issuecomment-2338250464. Thus, it would be useful to know what the overall end-to-end performance difference is. Also taking into account the utxo db.\r\n\r\nIf you want the micro-benchmark to be representative, I'd presume you'd have to mimic the histogram of the sizes of writes. Just picking one (1024, or 1004), which is never hit in reality, and then optimizing for that may be misleading.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2434625837",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14844891646,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN00xH-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14844891646",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "23f4809b113e95d69763b39b7fe665805d46779f",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/23f4809b113e95d69763b39b7fe665805d46779f",
      "created_at": "2024-10-24T09:06:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14845839276,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN04Yes",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14845839276",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "created_at": "2024-10-24T09:59:16Z"
    },
    {
      "event": "commented",
      "id": 2434840321,
      "node_id": "IC_kwDOABII586RILcB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2434840321",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T10:02:58Z",
      "updated_at": "2024-10-24T10:02:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "> where many (most?) of the writes are single bytes (or 4 bytes)\r\n\r\nThanks, I've extended your previous benchmarks with both Autofile serialization and very small vectors.\r\nI will also run a reindex of 400k blocks before and after to see if the effect is measurable or not.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2434840321",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2392082288,
      "node_id": "PRR_kwDOABII586OlEdw",
      "url": null,
      "actor": null,
      "commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2392082288",
      "submitted_at": "2024-10-24T10:41:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "reviewed",
      "id": 2392084054,
      "node_id": "PRR_kwDOABII586OlE5W",
      "url": null,
      "actor": null,
      "commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2392084054",
      "submitted_at": "2024-10-24T10:42:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "unlabeled",
      "id": 14849341925,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAN1Fvnl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14849341925",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T11:32:00Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14849432681,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN1GFxp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14849432681",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "created_at": "2024-10-24T11:37:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14850268982,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN1JR82",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14850268982",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "created_at": "2024-10-24T12:20:00Z"
    },
    {
      "event": "renamed",
      "id": 14851329429,
      "node_id": "RTE_lADOABII586bm_bxzwAAAAN1NU2V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14851329429",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T13:14:20Z",
      "rename": {
        "from": "optimization: pack util::Xor into 64 bit chunks instead of doing it byte-by-byte",
        "to": "optimization: pack util::Xor into 64/32 bit chunks instead of doing it byte-by-byte"
      }
    },
    {
      "event": "ready_for_review",
      "id": 14852618787,
      "node_id": "RFRE_lADOABII586bm_bxzwAAAAN1SPoj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14852618787",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T14:22:04Z"
    },
    {
      "event": "labeled",
      "id": 14855476257,
      "node_id": "LE_lADOABII586bm_bxzwAAAAN1dJQh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14855476257",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T17:01:18Z",
      "label": {
        "name": "Block storage",
        "color": "000000"
      }
    },
    {
      "event": "commented",
      "id": 2436158760,
      "node_id": "IC_kwDOABII586RNNUo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2436158760",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T19:14:18Z",
      "updated_at": "2024-10-24T19:14:18Z",
      "author_association": "MEMBER",
      "body": "It would be good to explain the jpegs in the description, or even remove them. They will be excluded from the merge commit and aren't shown, unless GitHub happens to be reachable and online. Are they saying that IBD was 4% faster? Also, I think they were created with the UB version of this pull, so may be outdated either way?\r\n\r\nI did a quick check on my laptop and it seems the `XorSmall` (1+4 bytes) is slower with this pull. The `Xor` (modified to check 40 bytes) was twice as fast. Overall, I'd expect it to be slower on my machine, due to the histogram of real data showing more small byte writes than long ones, IIRC.\r\n\r\nI can try to bench on another machine later, to see if it makes a difference.\r\n\r\nCan you clarify what type of machine you tested this on?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2436158760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2436298046,
      "node_id": "IC_kwDOABII586RNvU-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2436298046",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T20:39:31Z",
      "updated_at": "2024-10-24T20:41:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Are they saying that IBD was 4% faster?\r\n\r\nThat's what I'm measuring currently, but I don't expect more than 2% difference here.\r\n\r\n> Also, I think they were created with the UB version of this pull, so may be outdated either way?\r\n\r\nBenchmarks indicated that the 64 bit compiled result was basically the same.\r\n\r\n> Overall, I'd expect it to be slower on my machine, due to the histogram of real data showing more small byte writes than long ones, IIRC.\r\n\r\nI'll investigate, thanks.\r\n\r\nPosting the perf here for reference:\r\n<img width=\"500\" alt=\"image\" src=\"https://github.com/user-attachments/assets/6dc99dee-bda8-40d0-bdb0-2030982e0645\">\r\nReindexing until 300k blocks reveals that XOR usage was reduced:\r\n<img width=\"500\" alt=\"image\" src=\"https://github.com/user-attachments/assets/fe308c34-da65-42f3-9b10-7d34aa9a8056\">\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2436298046",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2395174160,
      "node_id": "PRR_kwDOABII586Ow3UQ",
      "url": null,
      "actor": null,
      "commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK a3dc138798e2f2c7aa1c9b37633c16c1b523a251\r\n\r\nOperating on CPU words rather than individual bytes. :+1: \r\n\r\nNot entirely clear to me from https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814741753 whether the optimizer is able to use SIMD. Guess picking through the binary of a GUIX-build would give a definitive answer.\r\n\r\nThe verbosity of `std::memcpy` hurts readability but alignment issues are real.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2395174160",
      "submitted_at": "2024-10-25T14:02:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "convert_to_draft",
      "id": 14881645500,
      "node_id": "CTDE_lADOABII586bm_bxzwAAAAN3A-O8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14881645500",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-25T18:47:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14896670298,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN36SZa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14896670298",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "89a721fddd76104688633ba2433050772bed6823",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/89a721fddd76104688633ba2433050772bed6823",
      "created_at": "2024-10-26T07:17:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14914013411,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN48cjj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914013411",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "95e38ac8cba2c89dd86e11f419edb24c180597c4",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/95e38ac8cba2c89dd86e11f419edb24c180597c4",
      "created_at": "2024-10-26T21:45:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14914294089,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN49hFJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914294089",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cd61e8b3737afcf4133dbec5029c911c0104bd2c",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/cd61e8b3737afcf4133dbec5029c911c0104bd2c",
      "created_at": "2024-10-26T21:58:11Z"
    },
    {
      "event": "commented",
      "id": 2439748354,
      "node_id": "IC_kwDOABII586Ra5sC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2439748354",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T21:58:16Z",
      "updated_at": "2024-10-26T21:58:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/32109998785</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2439748354",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "labeled",
      "id": 14914296180,
      "node_id": "LE_lADOABII586bm_bxzwAAAAN49hl0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914296180",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T21:58:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14914676976,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN4--jw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914676976",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d72968f3c9292ff8f911c04e85bdc5629ebb7f62",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/d72968f3c9292ff8f911c04e85bdc5629ebb7f62",
      "created_at": "2024-10-26T22:17:12Z"
    },
    {
      "event": "renamed",
      "id": 14914789715,
      "node_id": "RTE_lADOABII586bm_bxzwAAAAN4_aFT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914789715",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T22:21:56Z",
      "rename": {
        "from": "optimization: pack util::Xor into 64/32 bit chunks instead of doing it byte-by-byte",
        "to": "optimization: change XOR obfuscation key from `std::vector<std::byte>(8)` to `uint64_t`"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14926771325,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN5tHR9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14926771325",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "555f8c889041e16be10a3dbe3886616ccf4f031c",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/555f8c889041e16be10a3dbe3886616ccf4f031c",
      "created_at": "2024-10-27T15:17:23Z"
    },
    {
      "event": "unlabeled",
      "id": 14928066250,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAN5yDbK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14928066250",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-27T16:42:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14928265331,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN5y0Bz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14928265331",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4b3fb90496db369ea8d0247af406196068c538af",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/4b3fb90496db369ea8d0247af406196068c538af",
      "created_at": "2024-10-27T16:55:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14928272303,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN5y1uv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14928272303",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f63d44c5cc740e132e2e74a2304e5f93c5e5741f",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/f63d44c5cc740e132e2e74a2304e5f93c5e5741f",
      "created_at": "2024-10-27T16:56:33Z"
    },
    {
      "event": "ready_for_review",
      "id": 14931818998,
      "node_id": "RFRE_lADOABII586bm_bxzwAAAAN6AXn2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14931818998",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-27T20:43:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14983670549,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN9GKsV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14983670549",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0e9b5024a477438bdcd41a529bee932c9a853dd5",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/0e9b5024a477438bdcd41a529bee932c9a853dd5",
      "created_at": "2024-10-29T12:43:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14983767249,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN9GiTR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14983767249",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/8696184c2fd183483fa843348323ffbc62c2de3c",
      "created_at": "2024-10-29T12:49:15Z"
    },
    {
      "event": "labeled",
      "id": 14983769030,
      "node_id": "LE_lADOABII586bm_bxzwAAAAN9GivG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14983769030",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-29T12:49:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2444121923,
      "node_id": "IC_kwDOABII586RrldD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2444121923",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-29T12:49:22Z",
      "updated_at": "2024-10-29T12:49:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/32217592364</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2444121923",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "unlabeled",
      "id": 14985423140,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAN9M2kk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14985423140",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-29T14:19:10Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2449751980,
      "node_id": "IC_kwDOABII586SBD-s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449751980",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T12:40:37Z",
      "updated_at": "2024-10-31T12:40:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "The CI failure in https://github.com/bitcoin/bitcoin/runs/32217592364 might come from a bad rebase reconciliation with master?\r\n```\r\n[12:44:30.723] Duplicate include(s) in src/bench/xor.cpp:\r\n[12:44:30.723] #include <cstddef>\r\n[12:44:30.723] #include <span.h>\r\n[12:44:30.723] #include <streams.h>\r\n[12:44:30.723] #include <random.h>\r\n[12:44:30.723] #include <vector>\r\n[12:44:30.723] #include <bench/bench.h>\r\n[12:44:30.723] \r\n[12:44:30.728] ^---- ⚠️ Failure generated from lint-includes.py\r\n```",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449751980",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2449786517,
      "node_id": "IC_kwDOABII586SBMaV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449786517",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T12:59:36Z",
      "updated_at": "2024-10-31T12:59:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The CI failure in [bitcoin/bitcoin/runs/32217592364](https://github.com/bitcoin/bitcoin/runs/32217592364) might come from a bad rebase reconciliation with master?\r\n\r\nThat's an old build, right? Latest [Lint](https://github.com/bitcoin/bitcoin/pull/31144/checks?check_run_id=32217909313) seems fine\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449786517",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2407930796,
      "node_id": "PRR_kwDOABII586Phhus",
      "url": null,
      "actor": null,
      "commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2407930796",
      "submitted_at": "2024-10-31T13:16:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2449824362,
      "node_id": "IC_kwDOABII586SBVpq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449824362",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T13:18:18Z",
      "updated_at": "2024-10-31T13:18:18Z",
      "author_association": "MEMBER",
      "body": "Taking a step back, I wonder if this is worth it. IIRC it gives a +1% speedup when run on spinning storage, so it seems a higher speedup is possibly visible on faster, modern storage. However, it would be good if any IO delay was taken out of IBD completely, so that the speed of storage and the speed of XOR is largely irrelevant.\r\n\r\nI haven't looked, but this may be possible by asking the next block the be read into memory in the background, as soon as work on the current block begins.\r\n\r\nSomething similar is done in net_processing, where the (presumed) current block is read into memory, and kept there, to avoid having to read it from storage again in validation. See https://github.com/bitcoin/bitcoin/blob/f07a533dfcb172321972e5afb3b38a4bd24edb87/src/net_processing.cpp#L823",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449824362",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2449836182,
      "node_id": "IC_kwDOABII586SBYiW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449836182",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T13:24:08Z",
      "updated_at": "2024-10-31T13:24:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Taking a step back, I wonder if this is worth it. IIRC it gives a +1% speedup \r\n\r\nThat's not the main point, rather that we're storing the key in a value that can be short-circuited easily so that when key is 0 (i.e. xor is NOOP), we can skip it. Previously this would have only been possible by checking each byte of the key.\r\nIt's also a lot cleaner to store it in a primitive instead, which supports xor natively.\r\nXor comes up in every profiling I do, we shouldn't have a regression because of https://github.com/bitcoin/bitcoin/pull/28207 - this PR solves that.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449836182",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2449867757,
      "node_id": "IC_kwDOABII586SBgPt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449867757",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T13:39:07Z",
      "updated_at": "2024-10-31T13:39:07Z",
      "author_association": "MEMBER",
      "body": "> we shouldn't have a regression because of #28207 - this PR solves that.\r\n\r\nIt is not possible to do XOR without any cost at all. There will always be an overhead and I think calling #28207 a regression and this change a \"fix\" is not entirely accurate. This change reduces the overhead, according to the benchmarks.\r\n\r\n> That's not the main point\r\n\r\nThe pull request title starts with \"optimization\", so I got the impression that a speedup is the main point.\r\n\r\nThe reason that `std::vector` was picked is that switching to larger sizes is possible. However, if there was a need to do that, XOR would likely not be sufficient anyway. So limiting to 8 bytes fixed at compile time seems reasonable.\r\n\r\nI am mostly saying that any speedup here may not be visible at all if IO is completely taken out of the critical path, but I haven't looked into that in detail.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449867757",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2449896533,
      "node_id": "IC_kwDOABII586SBnRV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449896533",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T13:52:30Z",
      "updated_at": "2024-10-31T13:52:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "> change a \"fix\" is not entirely accurate\r\n\r\nwhen xor is disabled we're not xor-ing now at all. Previously we did xor, so this change brings back the previous behavior when xor is not needed.\r\n\r\n> The pull request title starts with \"optimization\", so I got the impression that a speedup is the main point.\r\n\r\nYes, please see the updated description with the benchmarks: https://github.com/bitcoin/bitcoin/pull/31144#issue-2610689777\r\n\r\n> may not be visible at all if IO is completely taken out of the critical path\r\n\r\nI'd argue the current implementation is slightly simpler (i.e. xor is stored and performed natively and can be disabled) and faster (2x for a representative dataset).",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449896533",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15036659118,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOAQTWu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15036659118",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "33625e9d5327263c273583d7b3fe2f3114ebf12e",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/33625e9d5327263c273583d7b3fe2f3114ebf12e",
      "created_at": "2024-10-31T13:55:38Z"
    },
    {
      "event": "reviewed",
      "id": 2407902826,
      "node_id": "PRR_kwDOABII586Pha5q",
      "url": null,
      "actor": null,
      "commit_id": "33625e9d5327263c273583d7b3fe2f3114ebf12e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2407902826",
      "submitted_at": "2024-10-31T14:52:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15038772310,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOAYXRW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15038772310",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a5cad729c76cafa047a2b1897595669ae9b2b0d5",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/a5cad729c76cafa047a2b1897595669ae9b2b0d5",
      "created_at": "2024-10-31T15:13:09Z"
    },
    {
      "event": "reviewed",
      "id": 2408330350,
      "node_id": "PRR_kwDOABII586PjDRu",
      "url": null,
      "actor": null,
      "commit_id": "a5cad729c76cafa047a2b1897595669ae9b2b0d5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "(Reviewed a5cad729c76cafa047a2b1897595669ae9b2b0d5)\r\n\r\nSince my previous Concept ACK, the PR was changed to switch the xor key more completely to `uint64_t`. Before the PR, we were already using fixed-size of 8 bytes for the obfuscation value in the file formats, so changing the type to `uint64_t` shouldn't be noticeable to users. :+1: \r\n\r\nEven if we could move reading and XOR-ing out of the hot path as suggested by maflcko, we might as well make use the CPU architectures we have. I would expect larger-sized XOR operations to have less overhead and energy waste (less heat).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2408330350",
      "submitted_at": "2024-10-31T16:00:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2450447158,
      "node_id": "IC_kwDOABII586SDts2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2450447158",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T17:32:38Z",
      "updated_at": "2024-10-31T17:32:38Z",
      "author_association": "MEMBER",
      "body": "> We could have used `ReadLE64` to unify the byte order for keys and writable values, but that shouldn't be necessary, since both have the same endianness locally that shouldn't be affected by a byte-by-byte xor.\r\n\r\nThe s390x unit tests fail:\r\n\r\n\r\n```\r\n./src/test/streams_tests.cpp(40): error: in \"streams_tests/xor_bytes\": check { expected.begin(), expected.end() } == { actual.begin(), actual.end() } has failed. \r\nMismatch at position 0: � != |\r\nMismatch at position 1: Y != �\r\nMismatch at position 2: � != �\r\nMismatch at position 3: � != �\r\nMismatch at position 4: w != �\r\nMismatch at position 5: C != �\r\nMismatch at position 6:  != x\r\nMismatch at position 7: � != �\r\nMismatch at position 8: � != C\r\nMismatch at position 9: Y != �\r\nMismatch at position 10: � != �\r\nMismatch at position 11: , != �\r\nMismatch at position 12: � != R\r\nMismatch at position 13: 8 != �\r\nMismatch at position 14: � != �\r\nMismatch at position 15: � != �\r\nMismatch at position 16: � != l\r\nMismatch at position 17: � != n\r\nMismatch at position 18: � != �\r\nMismatch at position 19: t != B\r\nMismatch at position 20: ; != �\r\nMismatch at position 21: != �\r\nMismatch at position 22: � != �\r\nMismatch at position 23: � != �\r\nMismatch at position 24: k != �\r\nMismatch at position 25: � != Z\r\nMismatch at position 26: � != �\r\nMismatch at position 27: � != �\r\nMismatch at position 28: � != #\r\nMismatch at position 29: 8 != �\r\nMismatch at position 30: � != �\r\nMismatch at position 31: � != �\r\nMismatch at position 32: g != �\r\nMismatch at position 33: � != ^\r\nMismatch at position 34: � != �\r\nismatch at position 36: � != k\r\nMismatch at position 37: * != �\r\nMismatch at position 38: q != \r\nMismatch at position 39: � != �\r\nMismatch at position 40: � != �\r\nMismatch at position 41: r != e\r\nMismatch at position 42: � != �\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2450447158",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2450465825,
      "node_id": "IC_kwDOABII586SDyQh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2450465825",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T17:42:23Z",
      "updated_at": "2024-10-31T17:45:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The s390x unit tests fail:\r\n\r\nI don't know how to access that, is it part of CI? Does the test suite pass on it otherwise or was it just curiosity? Do you know the reason it fails, is my assumption incorrect that endianness should apply to both parts (key and value) the same way? Is the test wrong or the xor, should I change the test such that xor-ing twice should reveal the original data instead (while the intermediary part should not)?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2450465825",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2450578651,
      "node_id": "IC_kwDOABII586SENzb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2450578651",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T18:37:39Z",
      "updated_at": "2024-10-31T18:37:39Z",
      "author_association": "MEMBER",
      "body": "> I don't know how to access that, is it part of CI?\r\n\r\nIt needs to be run manually. See https://github.com/bitcoin/bitcoin/tree/master/ci#running-a-stage-locally. (`podman run --rm --privileged docker.io/multiarch/qemu-user-static --reset -p yes` may be required to setup qemu-s390x, depending on your setup). Then something like `MAKEJOBS=\"-j$(nproc)\" FILE_ENV=\"./ci/test/00_setup_env_s390x.sh\" ./ci/test_run_all.sh` should run it.\r\n\r\n\r\n\r\n> Does the test suite pass on it otherwise or was it just curiosity?\r\n\r\nYes, it should pass on s390x. If not, that is a bug somewhere.\r\n\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2450578651",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "convert_to_draft",
      "id": 15048568983,
      "node_id": "CTDE_lADOABII586bm_bxzwAAAAOA9vCX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15048568983",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T21:51:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15083119052,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAODBiHM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15083119052",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "created_at": "2024-11-02T19:26:30Z"
    },
    {
      "event": "commented",
      "id": 2453108430,
      "node_id": "IC_kwDOABII586SN3bO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2453108430",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-02T19:45:57Z",
      "updated_at": "2024-11-03T12:06:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the hints @maflcko, I was under the impression that big-endian tests were run automatically.\r\n\r\n### Fix\r\n\r\nIt seem that that `std::rotr` doesn't take endianness into account, so the fix basically looks like:\r\n```C++\r\nsize_t key_rotation = 8 * key_offset;\r\nif constexpr (std::endian::native == std::endian::big) key_rotation *= -1;\r\nreturn std::rotr(key, key_rotation);\r\n```\r\nI've emulated the s390x behavior locally like this:\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nbrew install podman pigz\r\nsoftwareupdate --install-rosetta\r\npodman machine init\r\npodman machine start\r\ndocker run --platform linux/s390x -it ubuntu:22.04 /bin/bash\r\n    apt update && apt install -y git build-essential cmake ccache pkg-config libevent-dev libboost-dev libssl-dev libsqlite3-dev && \\\r\n    cd /mnt && git clone https://github.com/bitcoin/bitcoin.git && cd bitcoin && git remote add l0rinc https://github.com/l0rinc/bitcoin.git && git fetch --all && git checkout l0rinc/optimize-xor && \\\r\n    cmake -B build && cmake --build build --target test_bitcoin -j$(nproc) && \\\r\n    ./build/src/test/test_bitcoin --run_test=streams_tests\r\n```\r\n\r\n</details>\r\n\r\n\r\n### Changes\r\n\r\n* The change also includes an updated benchmarking suite with 700k blocks inspected for all usages of `utils::Xor` to make the benchmark representative:\r\n<img src=\"https://github.com/user-attachments/assets/83f16fc6-1596-40af-a813-e4e67982a051\">\r\n\r\n* Changed `AutoFileXor` benchmark to measure the regression of turning off obfuscation.\r\n\r\n* I've also updated all key derivations to vector-to-uint64 instead of generating the 64 bit key directly (it's more consistent, more representative and helps with endianness).\r\n\r\n* Added a xor roundtrip test which applies the xor in random chunks, asserts that it differs from the original and reapplies it in different random chunks and asserts that it's equivalent to the original.\r\n\r\nSee the complete diff: https://github.com/bitcoin/bitcoin/compare/a5cad729c76cafa047a2b1897595669ae9b2b0d5..af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2453108430",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15083482417,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAODC60x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15083482417",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-02T19:45:58Z"
    },
    {
      "event": "subscribed",
      "id": 15083482419,
      "node_id": "SE_lADOABII586bm_bxzwAAAAODC60z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15083482419",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-02T19:45:59Z"
    },
    {
      "event": "ready_for_review",
      "id": 15085109230,
      "node_id": "RFRE_lADOABII586bm_bxzwAAAAODJH_u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15085109230",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-02T21:18:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15123493358,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOFbjHu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15123493358",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "918121b2ac50a63c6a78b06feb2dcaf6112f26ff",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/918121b2ac50a63c6a78b06feb2dcaf6112f26ff",
      "created_at": "2024-11-05T16:40:32Z"
    },
    {
      "event": "commented",
      "id": 2457667761,
      "node_id": "IC_kwDOABII586SfQix",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2457667761",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-05T16:40:43Z",
      "updated_at": "2024-11-08T20:21:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated the benchmark to 860k blocks (September 2024):\r\n<img src=\"https://github.com/user-attachments/assets/1d70f5d9-68cb-4e5f-85e9-ffb9fd3b3f1c\">\r\n\r\nThis one contains a lot of very big arrays (96'233 separate sizes, biggest was 3'992'470 bytes long) - a big departure from the previous 400k and 700k blocks (having 1500 sizes, biggest was 9319 bytes long). \r\n\r\nThe performance characteristics are also quite different, now that we have more and bigger byte arrays:\r\n\r\n> C++ compiler .......................... AppleClang 16.0.0.16000026\r\n\r\n> Before:\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.29 |      774,577,944.12 |    0.2% |    115.99 | `XorHistogram`\r\n\r\n> After:\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                0.04 |   26,411,646,837.32 |    0.2% |      8.97 | `XorHistogram`\r\n\r\ni.e. ~35x faster with Clang at processing the data with representative histograms.\r\n\r\n> C++ compiler .......................... GNU 13.2.0\r\n\r\n> Before:\r\n\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                0.97 |    1,032,916,679.87 |    0.0% |            9.01 |            3.29 |  2.738 |           1.00 |    0.0% |     86.58 | `XorHistogram`\r\n\r\n> After:\r\n\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                0.10 |   10,369,097,976.62 |    0.0% |            0.32 |            0.33 |  0.985 |           0.06 |    0.6% |      8.63 | `XorHistogram`\r\n\r\ni.e. ~10x faster with GCC at processing the data with representative histograms.\r\n\r\nEdit: note that I couldn't use random byte generation for each benchmark value since it timed out on CI. I have replaced it with getting subsets of a single big random vector.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2457667761",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15123639854,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOFcG4u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15123639854",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e205ad45d2aaad3c35886c665d11f52f43403cb9",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/e205ad45d2aaad3c35886c665d11f52f43403cb9",
      "created_at": "2024-11-05T16:48:58Z"
    },
    {
      "event": "labeled",
      "id": 15123641461,
      "node_id": "LE_lADOABII586bm_bxzwAAAAOFcHR1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15123641461",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-05T16:49:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2457686794,
      "node_id": "IC_kwDOABII586SfVMK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2457686794",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-05T16:49:07Z",
      "updated_at": "2024-11-05T16:49:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/32549559124</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2457686794",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15142559946,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOGkSDK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15142559946",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1b640f667333dca30b0432992794e630e1b3cc4c",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/1b640f667333dca30b0432992794e630e1b3cc4c",
      "created_at": "2024-11-06T08:28:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15149971443,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOHAjfz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15149971443",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d7242c66894bf2d2c3e5e502f7ad67f03e7ed31a",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/d7242c66894bf2d2c3e5e502f7ad67f03e7ed31a",
      "created_at": "2024-11-06T13:15:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15191115003,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOJdgT7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15191115003",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0cca451d00ec0971345347739258426a2e0cbaab",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/0cca451d00ec0971345347739258426a2e0cbaab",
      "created_at": "2024-11-07T19:39:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15225699628,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOLhb0s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15225699628",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/a1232973189126cfc9526713011461709685fcc8",
      "created_at": "2024-11-08T20:15:24Z"
    },
    {
      "event": "unlabeled",
      "id": 15227120742,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAOLm2xm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15227120742",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-08T21:19:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2467888419,
      "node_id": "IC_kwDOABII586TGP0j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2467888419",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-11T10:59:28Z",
      "updated_at": "2024-11-11T21:45:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "I ran a `reindex-chainstate` until 860k blocks (SSD, i7 CPU), before and after this change, 2 runs per commit.\r\nAs stated in the previous comment, the latter blocks (>700k) seem to contain a lot of very big vectors where the new algorithm shines.\r\n\r\n<details>\r\n<summary>benchmark</summary>\r\n\r\n```bash\r\nhyperfine   \\\r\n--runs 2   \\\r\n--export-json /mnt/my_storage/reindex-chainstate-obfuscation-overhead.json  \\\r\n--parameter-list COMMIT 866f4fa521f6932162570d6531055cc007e3d0cd,3efc72ff7cbdfb788b23bf4346e29ba99362c120,08db1794647c37f966c525411f931a4a0f6b6119 \\\r\n--prepare 'git checkout {COMMIT} && git clean -fxd && git reset --hard && cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_UTIL=OFF -DBUILD_TX=OFF -DBUILD_TESTS=OFF -DENABLE_WALLET=OFF -DINSTALL_MAN=OFF && cmake --build build -j$(nproc)' \\\r\n'COMMIT={COMMIT} ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=860000 -dbcache=10000 -printtoconsole=0 -reindex-chainstate'\r\n```\r\n\r\n</details>\r\n\r\nWhich indicates that this change speeds up IBD (or at least reindex-chainstate) by roughly ~3% (i.e. reverts the regression):\r\n* 866f4fa521f6932162570d6531055cc007e3d0cd - baseline\r\n* 3efc72ff7cbdfb788b23bf4346e29ba99362c120 - end-to-end vector to uint64\r\n* 08db1794647c37f966c525411f931a4a0f6b6119 - dummy commit that forces obfuscation keys to be 0 to ignore xor operations (since `-blocksxor=0` doesn't affect `dbwrapper`), to see how xor affects speed in general\r\n\r\n<details>\r\n<summary>details</summary>\r\n\r\n> Benchmark 1: COMMIT=866f4fa521f6932162570d6531055cc007e3d0cd ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=860000 -dbcache=10000 -printtoconsole=0 -reindex-chainstate\r\n\r\n  Time (mean ± σ):     20846.396 s ± 72.227 s    [User: 22353.773 s, System: 2563.864 s]\r\n  Range (min … max):   20795.323 s … 20897.468 s    2 runs\r\n\r\n> Benchmark 2: COMMIT=3efc72ff7cbdfb788b23bf4346e29ba99362c120 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=860000 -dbcache=10000 -printtoconsole=0 -reindex-chainstate\r\n\r\n  Time (mean ± σ):     20308.036 s ± 100.345 s    [User: 21745.076 s, System: 2591.459 s]\r\n  Range (min … max):   20237.081 s … 20378.991 s    2 runs\r\n\r\n> Benchmark 3: COMMIT=08db1794647c37f966c525411f931a4a0f6b6119 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=860000 -dbcache=10000 -printtoconsole=0 -reindex-chainstate\r\n\r\n  Time (mean ± σ):     20293.227 s ±  9.923 s    [User: 21711.799 s, System: 2588.886 s]\r\n  Range (min … max):   20286.210 s … 20300.244 s    2 runs\r\n\r\n</details>\r\n\r\n```bash\r\nSummary\r\n'COMMIT=08db1794647c37f966c525411f931a4a0f6b6119 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=860000 -dbcache=10000 -printtoconsole=0 -reindex-chainstate' ran\r\n 1.00 ± 0.00 times faster than 'COMMIT=3efc72ff7cbdfb788b23bf4346e29ba99362c120 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=860000 -dbcache=10000 -printtoconsole=0 -reindex-chainstate'\r\n 1.03 ± 0.00 times faster than 'COMMIT=866f4fa521f6932162570d6531055cc007e3d0cd ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=860000 -dbcache=10000 -printtoconsole=0 -reindex-chainstate'\r\n```\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2467888419",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2428114068,
      "node_id": "PRR_kwDOABII586QuhSU",
      "url": null,
      "actor": null,
      "commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Reviewed a1232973189126cfc9526713011461709685fcc8\r\n\r\n`git range-diff master a5cad72 a123297`\r\n\r\nThe awk script in the comment in c671dd17dced0d51845dc8d2148f288c4c44ecb2 doesn't add the `'` separators...?\r\n\r\nCare to explain the `scaling_factor` value?\r\n\r\n`XorHistogram` claims to use 8 GB of RAM. Could be a bit much if we want to be able to also run benchmarks on low-end devices.\r\n\r\n```diff\r\ndiff --git a/src/bench/xor.cpp b/src/bench/xor.cpp\r\nindex 2ba8b17f08..bb193c7fcf 100644\r\n--- a/src/bench/xor.cpp\r\n+++ b/src/bench/xor.cpp\r\n@@ -96269,18 +96269,13 @@ static void XorHistogram(benchmark::Bench& bench)\r\n \r\n         total_bytes += scaled_count * size;\r\n         for (size_t j{0}; j < scaled_count; ++j) {\r\n-            std::vector<std::byte> ret;\r\n-            ret.reserve(size);\r\n-            ret.insert(ret.end(), pattern.begin(), pattern.begin() + size);\r\n-            test_data.push_back(std::move(ret));\r\n+            test_data.emplace_back(pattern.begin(), pattern.begin() + size);\r\n         }\r\n     }\r\n     assert(total_bytes == 8'129'394'848); // ~8 GB of data\r\n     std::shuffle(test_data.begin(), test_data.end(), rng); // Make it more realistic & less predictable\r\n \r\n-    std::vector key_bytes{rng.randbytes<std::byte>(8)};\r\n-    uint64_t key;\r\n-    std::memcpy(&key, key_bytes.data(), 8);\r\n+    const uint64_t key{rng.rand64()};\r\n \r\n     size_t offset{0};\r\n     bench.batch(total_bytes).unit(\"byte\").run([&] {\r\n@@ -96296,9 +96291,7 @@ static void AutoFileXor(benchmark::Bench& bench)\r\n     FastRandomContext rng{/*fDeterministic=*/true};\r\n     auto data{rng.randbytes<std::byte>(1'000'000)};\r\n \r\n-    std::vector<std::byte> empty_key_bytes(8, std::byte{0}); // Test disabled xor\r\n-    uint64_t empty_key;\r\n-    std::memcpy(&empty_key, empty_key_bytes.data(), 8);\r\n+    uint64_t empty_key{0};\r\n \r\n     const fs::path test_path = fs::temp_directory_path() / \"xor_benchmark.dat\";\r\n     AutoFile f{fsbridge::fopen(test_path, \"wb+\"), empty_key};\r\n```",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2428114068",
      "submitted_at": "2024-11-11T21:49:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2469174132,
      "node_id": "IC_kwDOABII586TLJt0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2469174132",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-11T22:11:50Z",
      "updated_at": "2024-11-12T15:18:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The awk script in the comment in https://github.com/bitcoin/bitcoin/commit/c671dd17dced0d51845dc8d2148f288c4c44ecb2 doesn't add the ' separators...?\r\n\r\nI've added them manually.\r\n\r\n> Care to explain the scaling_factor value?\r\n\r\n~The values in the histogram (i.e. total bytes streamed through xor) add up to 92gb, but 1 byte values occupy half of that.~ (edit: this is only true for the first row, in other cases we would need to multiply by the first column)\r\n\r\nSince we have thousands of big values that represent vector of that size, we have to include all of those into the test set at least once.\r\nI had to scale down the histogram such that the lower values, having a few hundred occurrences aren't flattened out completely - to make the histogram still representative. Do you have a better idea?\r\n\r\n> XorHistogram claims to use 8 GB of RAM. Could be a bit much if we want to be able to also run benchmarks on low-end devices.\r\n\r\nYes, but if I scale it down more, more values will be equal in the histogram and it won't reflect real usage.\r\nThat's why I've set it to low priority, we don't have to run these for every execution.\r\n\r\nEdit: pushed some nits to `git range-diff 866f4fa521f6932162570d6531055cc007e3d0cd..a1232973189126cfc9526713011461709685fcc8 866f4fa521f6932162570d6531055cc007e3d0cd..57caa965b5ae284e501f892415d60fcb536f4c0e`",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2469174132",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15256433172,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAONWrIU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15256433172",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "57caa965b5ae284e501f892415d60fcb536f4c0e",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/57caa965b5ae284e501f892415d60fcb536f4c0e",
      "created_at": "2024-11-11T23:06:20Z"
    },
    {
      "event": "renamed",
      "id": 15256443209,
      "node_id": "RTE_lADOABII586bm_bxzwAAAAONWtlJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15256443209",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-11T23:07:50Z",
      "rename": {
        "from": "optimization: change XOR obfuscation key from `std::vector<std::byte>(8)` to `uint64_t`",
        "to": "optimization: change XOR obfuscation key from `std::vector<std::byte>{8}` to `uint64_t`"
      }
    },
    {
      "event": "commented",
      "id": 2469297214,
      "node_id": "IC_kwDOABII586TLnw-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2469297214",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-11T23:43:35Z",
      "updated_at": "2024-11-11T23:43:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > Care to explain the scaling_factor value?\r\n> \r\n> The values in the histogram (i.e. total bytes streamed through xor) add up to ~92gb, but 1 byte values occupy half of that. I had to scale down the histogram such that the lower values, having a few hundred occurrences aren't flattened out completely - to make the histogram still representative. Do you have a better idea?\r\n\r\nSo `raw_histogram` really is the raw data?\r\n\r\nAdded:\r\n```C++\r\n    uint64_t raw_total_bytes{0};\r\n    for (size_t i{0}; i < std::size(raw_histogram); i += 2) {\r\n        const uint64_t size = raw_histogram[i];\r\n        const uint64_t count = raw_histogram[i + 1];\r\n        raw_total_bytes += size * count;\r\n    }\r\n    printf(\"raw_total_bytes: %ld\", raw_total_bytes);\r\n```\r\nGot:\r\n```\r\nraw_total_bytes: 1'277'637'746'542 # \"'\" added manually\r\n```\r\n\r\nSo something like 1.28TB instead of 92GB, but I can't seem to get my head screwed on right today.\r\n\r\n---\r\n\r\nIf I re-understood correctly what the code was doing with the scaling - it's doing only `1'000'000` XOR-passes for the most common size (1 byte) instead of `47'584'838'861`, and scaling down the number of XOR-passes for the others by the same factor.\r\n\r\nThought the following would be slightly faster:\r\n```\r\ndiff --git a/src/bench/xor.cpp b/src/bench/xor.cpp\r\nindex 2ba8b17f08..5e933d74ea 100644\r\n--- a/src/bench/xor.cpp\r\n+++ b/src/bench/xor.cpp\r\n@@ -96253,7 +96253,7 @@ static void XorHistogram(benchmark::Bench& bench)\r\n     };\r\n \r\n     const auto max_count{static_cast<double>(raw_histogram[1])}; // 1 byte is the most common\r\n-    const auto scaling_factor{1'000'000U};\r\n+    const auto scaling_factor{1'000'000.0 / max_count};\r\n \r\n     FastRandomContext rng{/*fDeterministic=*/true};\r\n     const size_t pattern_size = raw_histogram[std::size(raw_histogram) - 2];\r\n@@ -96265,7 +96265,7 @@ static void XorHistogram(benchmark::Bench& bench)\r\n     for (size_t i{0}; i < std::size(raw_histogram); i += 2) {\r\n         const uint64_t size = raw_histogram[i];\r\n         const uint64_t count = raw_histogram[i + 1];\r\n-        const size_t scaled_count{static_cast<size_t>(std::ceil((static_cast<double>(count) / max_count) * scaling_factor))};\r\n+        const size_t scaled_count{static_cast<size_t>(std::ceil(static_cast<double>(count) * scaling_factor))};\r\n \r\n         total_bytes += scaled_count * size;\r\n         for (size_t j{0}; j < scaled_count; ++j) {\r\n```\r\nStill passes the `total_bytes == 8'129'394'848`-assert unmodified, but seems slightly slower in my measurements (including for posterity).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2469297214",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2429009065,
      "node_id": "PRR_kwDOABII586Qx7yp",
      "url": null,
      "actor": null,
      "commit_id": "57caa965b5ae284e501f892415d60fcb536f4c0e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Reviewed 57caa965b5ae284e501f892415d60fcb536f4c0e\r\n\r\n`git range-diff master a123297 57caa96`\r\n\r\n- Applied most of my nits that were still valid.\r\n\r\nI understand you were burned by endianness but I disagree that it's worth sacrificing readability where endianness is a non-issue.\r\n\r\nFor cases where endianness is a concern, I suggest the following pattern:\r\n```C++\r\nuint64_t xor_key;\r\nconstexpr std::array<uint8_t, sizeof xor_key> xor_pat{std::to_array<uint8_t>({0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00})};\r\nstd::memcpy(&xor_key, xor_pat.data(), sizeof xor_key);\r\n```\r\n1. Declare the `uint64_t` first so `sizeof` can be used in place of magic `8`.\r\n2. Use `constexpr std::array` instead of `const std::vector` to constrain the size.\r\n3. Use `to_array` initialization since regular brace-initialization will only complain if *too many* elements are given, not too few.\r\n4. Use `uint8_t` in favor of `std::byte` to improve readability.\r\n5. Use `sizeof <target>` for the `memcpy` call since it is good practice to avoid writing out of bounds and also avoids the magic `8`.\r\n\r\n---\r\nUse `~0ULL` to express a `uint64_t` with all bits set, ensuring one doesn't forget an `f`.\r\n\r\n---\r\n<details>\r\n<summary>\r\nFull diff of suggestions:\r\n</summary>\r\n\r\n```diff\r\ndiff --git a/src/bench/xor.cpp b/src/bench/xor.cpp\r\nindex f94a1a6f96..fdf41b3696 100644\r\n--- a/src/bench/xor.cpp\r\n+++ b/src/bench/xor.cpp\r\n@@ -96275,10 +96275,7 @@ static void XorHistogram(benchmark::Bench& bench)\r\n     assert(total_bytes == 8'129'394'848); // ~8 GB of data\r\n     std::shuffle(test_data.begin(), test_data.end(), rng); // Make it more realistic & less predictable\r\n \r\n-    std::vector key_bytes{rng.randbytes<std::byte>(8)};\r\n-    uint64_t key;\r\n-    std::memcpy(&key, key_bytes.data(), 8);\r\n-\r\n+    const uint64_t key{rng.rand64()};\r\n     size_t offset{0};\r\n     bench.batch(total_bytes).unit(\"byte\").run([&] {\r\n         for (auto& data : test_data) {\r\n@@ -96293,10 +96290,7 @@ static void AutoFileXor(benchmark::Bench& bench)\r\n     FastRandomContext rng{/*fDeterministic=*/true};\r\n     auto data{rng.randbytes<std::byte>(1'000'000)};\r\n \r\n-    std::vector<std::byte> empty_key_bytes(8, std::byte{0}); // Test disabled xor\r\n-    uint64_t empty_key;\r\n-    std::memcpy(&empty_key, empty_key_bytes.data(), 8);\r\n-\r\n+    const uint64_t empty_key{0}; // Test disabled xor\r\n     const fs::path test_path = fs::temp_directory_path() / \"xor_benchmark.dat\";\r\n     AutoFile f{fsbridge::fopen(test_path, \"wb+\"), empty_key};\r\n     bench.batch(data.size()).unit(\"byte\").run([&] {\r\ndiff --git a/src/test/streams_tests.cpp b/src/test/streams_tests.cpp\r\nindex 5e9b607b3a..ac51eb3e51 100644\r\n--- a/src/test/streams_tests.cpp\r\n+++ b/src/test/streams_tests.cpp\r\n@@ -77,9 +77,9 @@ BOOST_AUTO_TEST_CASE(xor_file)\r\n     auto raw_file{[&](const auto& mode) { return fsbridge::fopen(xor_path, mode); }};\r\n     const std::vector<uint8_t> test1{1, 2, 3};\r\n     const std::vector<uint8_t> test2{4, 5};\r\n-    const std::vector xor_pat{std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}};\r\n     uint64_t xor_key;\r\n-    std::memcpy(&xor_key, xor_pat.data(), 8);\r\n+    constexpr std::array<uint8_t, sizeof xor_key> xor_pat{std::to_array<uint8_t>({0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00})};\r\n+    std::memcpy(&xor_key, xor_pat.data(), sizeof xor_key);\r\n \r\n     {\r\n         // Check errors for missing file\r\n@@ -293,12 +293,8 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\r\n     in.push_back(std::byte{0xf0});\r\n \r\n     {\r\n-        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\r\n-        uint64_t xor_key;\r\n-        std::memcpy(&xor_key, xor_pat.data(), 8);\r\n-\r\n         DataStream ds{in};\r\n-        ds.Xor(xor_key);\r\n+        ds.Xor(~0ULL);\r\n         BOOST_CHECK_EQUAL(\"\\xf0\\x0f\"s, ds.str());\r\n     }\r\n \r\n@@ -307,9 +303,9 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\r\n     in.push_back(std::byte{0x0f});\r\n \r\n     {\r\n-        const std::vector xor_pat{std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}};\r\n         uint64_t xor_key;\r\n-        std::memcpy(&xor_key, xor_pat.data(), 8);\r\n+        constexpr std::array<uint8_t, sizeof xor_key> xor_pat{std::to_array<uint8_t>({0xff, 0x0f, 0xff, 0x0f, 0xff, 0x0f, 0xff, 0x0f})};\r\n+        std::memcpy(&xor_key, xor_pat.data(), sizeof xor_key);\r\n \r\n         DataStream ds{in};\r\n         ds.Xor(xor_key);\r\n```\r\n\r\n</details>",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2429009065",
      "submitted_at": "2024-11-12T09:21:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2470110678,
      "node_id": "IC_kwDOABII586TOuXW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2470110678",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-12T10:07:24Z",
      "updated_at": "2024-11-12T10:07:24Z",
      "author_association": "MEMBER",
      "body": "I haven't really looked at the changes here, but just looking at the diff (+96'000 lines), my feedback would be that you'll need to change approach in regards to making your data available (if the intent is to have that included), as I doubt we'll be adding 96'000 lines to `bench/xor.cpp`. You could look at how we generate a header from bench/data/block413567.raw for a different approach, as including a small binary blob, and parsing it into a header at compile time is far more palatable.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2470110678",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2470809178,
      "node_id": "IC_kwDOABII586TRY5a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2470809178",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-12T15:16:20Z",
      "updated_at": "2024-11-12T15:38:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks  @fanquake, I thought of that, can you please help me understand the constraints?\r\nWouldn't that require a cmake generation step from binary to header which would basically produce the exact same lines as what we have now?\r\nWould it help if I simply extracted it to a separate header file instead?\r\n\r\n> So something like 1.28TB instead of 92GB, but I can't seem to get my head screwed on right today.\r\n\r\nYeah, I've edited that part since, my napkin calculations were only true for the first row, in other cases we would need to multiply by the first column - like you did. But the point is that it's a lot of data that we have to scale down.\r\n\r\n> but seems slightly slower in my measurements\r\n\r\nI thought of that as well, but wanted to avoid floating point conversion (likely the reason for the slowness in your example)",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2470809178",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15266463621,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAON87-F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15266463621",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-12T15:16:21Z"
    },
    {
      "event": "subscribed",
      "id": 15266463656,
      "node_id": "SE_lADOABII586bm_bxzwAAAAON87-o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15266463656",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-12T15:16:21Z"
    },
    {
      "event": "commented",
      "id": 2471201204,
      "node_id": "IC_kwDOABII586TS4m0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2471201204",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-12T17:51:12Z",
      "updated_at": "2024-11-12T17:51:12Z",
      "author_association": "MEMBER",
      "body": "> Wouldn't that require a cmake generation step from binary to header which would basically produce the exact same lines as what we have now?\r\n\r\nYes. See `bench/data/block413567.raw` & `bench/data/block413567.raw.h`, where at build time a header file of ~`125'000` lines is produced.\r\n\r\n> Would it help if I simply extracted it to a separate header file instead?\r\n\r\nI don't think so. The point is more to not add 100'000s of lines of \"data\" to this repo, which doesn't scale across many benchmarks, creates unusable diffs, leaves (source) files unviewable on GH etc.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2471201204",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15284972538,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOPDiv6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15284972538",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2ec822c723708d0aa800585576f7986ce41452b5",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/2ec822c723708d0aa800585576f7986ce41452b5",
      "created_at": "2024-11-13T15:25:47Z"
    },
    {
      "event": "commented",
      "id": 2473947449,
      "node_id": "IC_kwDOABII586TdXE5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2473947449",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-13T15:27:57Z",
      "updated_at": "2024-11-13T15:27:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I understand you were burned by endianness but I disagree that it's worth sacrificing readability where endianness is a non-issue.\r\n\r\nThanks @hodlinator for the suggestions, I tried them all, but in the end decided that I value consistency more than coming up with a separate solution for each test case. These are ugly, I agree, but at least they're testing the setup we're using in prod.\r\nI did however change the hard-coded 8 values to `sizeof xor_key` (for memcpy) or `sizeof(uint64_t)` for vector inits.\r\n\r\n> The point is more to not add 100'000s of lines of \"data\" to this repo\r\n\r\nI have stored the sorted diffs in the end (since the lines are correlated, i.e. more likely to have similar neighbours) and compressed them using .tar.gz (added the [generator python script](https://gist.github.com/l0rinc/a44da845ad32ec89c30525507cdd28ee) as a gist, please verify) - this way the histogram data is ~100 kb instead of 1.7 MB (thanks for the hint @fanquake).\r\nI've extended `GenerateHeaderFromRaw.cmake` with compression support (adjusting `GenerateHeaders.cmake` to trim the suffix from the header name) and added more safety asserts to make sure the data read back is the same as before.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2473947449",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15285005365,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOPDqw1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15285005365",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-13T15:27:58Z"
    },
    {
      "event": "subscribed",
      "id": 15285005389,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOPDqxN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15285005389",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-13T15:27:58Z"
    },
    {
      "event": "mentioned",
      "id": 15285005427,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOPDqxz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15285005427",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-13T15:27:58Z"
    },
    {
      "event": "subscribed",
      "id": 15285005447,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOPDqyH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15285005447",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-13T15:27:58Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUxMDc0MDgxYzlmMTg5NWE0ZjYyOWRmZWUzNDdjZWFlNDg0YTEwZDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1074081c9f1895a4f629dfee347ceae484a10d3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e1074081c9f1895a4f629dfee347ceae484a10d3",
      "tree": {
        "sha": "cf1162ed7c53cb9fae8d5c80cbed6b99e385ce87",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf1162ed7c53cb9fae8d5c80cbed6b99e385ce87"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/192767410072ad27fc09fc5fb79ee625e717e663",
          "sha": "192767410072ad27fc09fc5fb79ee625e717e663",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/192767410072ad27fc09fc5fb79ee625e717e663"
        }
      ],
      "message": "test: Compare util::Xor with randomized inputs against simple impl\n\nSince production code only uses keys of length 8, we're not testing with other values anymore",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-02T14:21:30Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-10-24T06:37:57Z"
      },
      "sha": "e1074081c9f1895a4f629dfee347ceae484a10d3"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15493848930,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAObgV9i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15493848930",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "created_at": "2024-12-02T14:21:52Z"
    },
    {
      "event": "reviewed",
      "id": 2475934654,
      "node_id": "PRR_kwDOABII586Tk8O-",
      "url": null,
      "actor": null,
      "commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code reviewed f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5\r\n\r\n```\r\n₿ git range-diff master 57caa96 f2fd1f7\r\n₿ git show e314bb7e00 > old\r\n₿ git show 91a8fde051 > new\r\n₿ meld old new\r\n```\r\n\r\nThanks for using more `constexpr` `std::array`s and clearer `sizeof`s!\r\n\r\nNice that block data could be compressed to such a large extent.\r\n\r\nnit: Would prefer the *\\*.cmake* changes where broken out into their own commit, keeping only *src/bench/CMakeLists.txt* as part of the benchmark change.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2475934654",
      "submitted_at": "2024-12-03T16:04:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2515108628,
      "node_id": "IC_kwDOABII586V6YMU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2515108628",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:00:02Z",
      "updated_at": "2024-12-03T17:00:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, but curious for more feedback from @maflcko about this PR. The actual code changes here do not seem too complicated but maybe they make the code less generic. I wonder if you think there are concrete downsides to this PR, or if the changes are ok but possibly not be worth the review effort (as https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449824362 seems to suggest)\r\n\r\nI'm happy to spend time reviewing this if it improves performance and doesn't cause other problems.\r\n\r\n> this way the histogram data is ~100 kb instead of 1.7 MB\r\n\r\nCurrent approach seems ok to me, but wondering it it might be better to just use a sampling of the most common write sizes instead of including the entire histogram. It seems like if you take the top 50 sizes it covers 99.6% of the writes, and might make the test more maintainable and PR easier to understand without changing results too much.\r\n\r\n<details><summary>code</summary>\r\n<p>\r\n\r\nusing histogram from https://gist.github.com/l0rinc/a44da845ad32ec89c30525507cdd28ee\r\n\r\n```python\r\n    cut = 50\r\n    hist_count = rest_count = 0\r\n    histogram.sort(key=lambda h: (-h[1]*h[0]))\r\n    for i, (size, count) in enumerate(histogram):\r\n        if i < cut:\r\n           print(f\"{size=}, {count=}\")\r\n           hist_count += count\r\n        else:\r\n           rest_count += count\r\n\r\n    print()\r\n    print(f\"{hist_count=} {hist_count/(hist_count+rest_count)*100:.1f}%\")\r\n    print(f\"{rest_count=} {rest_count/(hist_count+rest_count)*100:.1f}%\")\r\n```\r\n</p>\r\n</details>\r\n\r\n<details><summary>sizes</summary>\r\n<p>\r\n\r\n```\r\nsize=32, count=5369404406\r\nsize=106, count=1193555153\r\nsize=71, count=1763349816\r\nsize=107, count=1064027363\r\nsize=25, count=2705183236\r\nsize=33, count=2025696499\r\nsize=4, count=14983070199\r\nsize=72, count=827712501\r\nsize=23, count=2357347372\r\nsize=1, count=47584838861\r\nsize=8, count=5939128629\r\nsize=21, count=2019807250\r\nsize=22, count=1616301504\r\nsize=34, count=682781008\r\nsize=139, count=155158814\r\nsize=253, count=83729340\r\nsize=105, count=198656556\r\nsize=64, count=275253628\r\nsize=4096, count=3905157\r\nsize=138, count=112918349\r\nsize=252, count=48105681\r\nsize=254, count=38940977\r\nsize=35, count=269339238\r\nsize=218, count=25918921\r\nsize=140, count=37826769\r\nsize=83, count=53818260\r\nsize=217, count=13625647\r\nsize=219, count=12992432\r\nsize=108, count=24662023\r\nsize=488, count=4909014\r\nsize=27, count=87057844\r\nsize=489, count=4483016\r\nsize=28, count=78184146\r\nsize=40, count=50600412\r\nsize=113, count=17829712\r\nsize=65, count=29197009\r\nsize=128, count=13323530\r\nsize=123, count=12986923\r\nsize=37, count=41467794\r\nsize=114, count=9826401\r\nsize=26, count=35870265\r\nsize=130, count=7111451\r\nsize=29, count=30858682\r\nsize=487, count=1836899\r\nsize=70, count=12772097\r\nsize=131, count=6398914\r\nsize=109, count=7506161\r\nsize=490, count=1380253\r\nsize=95901, count=6384\r\nsize=30, count=19197417\r\n\r\nhist_count=91959859913 99.6%\r\nrest_count=382932220 0.4%\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2515108628",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15513166134,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOcqCE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513166134",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:00:03Z"
    },
    {
      "event": "subscribed",
      "id": 15513166154,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOcqCFK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513166154",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:00:03Z"
    },
    {
      "event": "commented",
      "id": 2515129785,
      "node_id": "IC_kwDOABII586V6dW5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2515129785",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:09:30Z",
      "updated_at": "2024-12-03T17:09:30Z",
      "author_association": "MEMBER",
      "body": "> Concept ACK, but curious for more feedback from @maflcko about this PR. The actual code changes here do not seem too complicated but maybe they make the code less generic.\r\n\r\nThere is a good chance that increasing the size of the vector is insufficient, if there is ever a need to increase it to more than 8 bytes, so a complete rewrite may be needed in that case anyway. However, this is just my guess and only time will tell. So I'd say this change is probably fine for now.\r\n\r\nWould still be nice to if there was a way to take all of it out of the hot path (possibly with higher overall benefits), but I don't know if such a change is possible and will replace this pull.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2515129785",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15513307140,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOcqkgE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513307140",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:09:31Z"
    },
    {
      "event": "subscribed",
      "id": 15513307155,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOcqkgT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513307155",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:09:31Z"
    },
    {
      "event": "commented",
      "id": 2515212570,
      "node_id": "IC_kwDOABII586V6xka",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2515212570",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:44:18Z",
      "updated_at": "2024-12-03T17:44:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Would still be nice to if there was a way to take all of it out of the hot path\r\n\r\nCan you give me hints on how to do that?\r\nSince we have a primitive as a key now, we already skip xor with 0 value now, see https://github.com/bitcoin/bitcoin/pull/31144/files#diff-4020c723bb55e114bdc7ff769086a765dcc7ccfb61da2047a315db16c0c7a8b4R295\r\n\r\n> but wondering it it might be better to just use a sampling of the most common write sizes\r\n\r\n@fanquake mentioned that he thinks this benchmark could be useful - if he's fine with the truncated version as well, I'll simplify (would solve some of @hodlinator's cmake concerns as well).",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2515212570",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15513907197,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOcs2_9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513907197",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:44:20Z"
    },
    {
      "event": "subscribed",
      "id": 15513907219,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOcs3AT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513907219",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:44:20Z"
    },
    {
      "event": "mentioned",
      "id": 15513907243,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOcs3Ar",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513907243",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:44:20Z"
    },
    {
      "event": "subscribed",
      "id": 15513907261,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOcs3A9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513907261",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:44:20Z"
    },
    {
      "event": "commented",
      "id": 2515307127,
      "node_id": "IC_kwDOABII586V7Ip3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2515307127",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T18:33:10Z",
      "updated_at": "2024-12-03T18:33:10Z",
      "author_association": "MEMBER",
      "body": "> It seems like if you take the top 50 sizes it covers 99.6% of the writes\r\n\r\nI had the same thought. Obviously there could be an unlikely problem if the remaining 0.04% of writes accounted for the majority of the time, but that seems unlikely. Other than that, taking only the top N seems preferable.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2515307127",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2519764142,
      "node_id": "IC_kwDOABII586WMIyu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2519764142",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T09:38:34Z",
      "updated_at": "2024-12-05T09:43:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Would still be nice to if there was a way to take all of it out of the hot path\r\n\r\nSince blocks are XOR-ed as well, I can't meaningfully test it with a reindex(-chainstate), so I did 2 full IBDs until 800k blocks, rebased after https://github.com/bitcoin/bitcoin/pull/30039 with `-blocksxor=0` to test whether we can disable xor completely now.\r\n\r\n<details>\r\n<summary>benchmark</summary>\r\n\r\n```bash\r\nhyperfine \\\r\n--runs 2 \\\r\n--export-json /mnt/my_storage/IBD-xor-rebased.json \\\r\n--parameter-list COMMIT e1074081c9f1895a4f629dfee347ceae484a10d3,f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5 \\\r\n--prepare 'rm -rf /mnt/my_storage/BitcoinData/* && git checkout {COMMIT} && git clean -fxd && git reset --hard && cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_UTIL=OFF -DBUILD_TX=OFF -DBUILD_TESTS=OFF -DENABLE_WALLET=OFF -DINSTALL_MAN=OFF && cmake --build build -j$(nproc)' \\\r\n'COMMIT={COMMIT} ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -blocksxor=0 -dbcache=10000 -printtoconsole=0'\r\n```\r\n\r\n</details>\r\n\r\n```bash\r\nBenchmark 1: COMMIT=e1074081c9f1895a4f629dfee347ceae484a10d3 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -blocksxor=0 -dbcache=10000 -printtoconsole=0\r\n  Time (mean ± σ):     25797.921 s ± 61.629 s    [User: 26803.189 s, System: 1457.936 s]\r\n  Range (min … max):   25754.343 s … 25841.500 s    2 runs\r\n \r\nBenchmark 2: COMMIT=f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -blocksxor=0 -dbcache=10000 -printtoconsole=0\r\n  Time (mean ± σ):     23751.046 s ± 342.376 s    [User: 25322.345 s, System: 1509.236 s]\r\n  Range (min … max):   23508.949 s … 23993.142 s    2 runs\r\n```\r\n \r\nWhich indicates a 9% speedup compared to the baseline:\r\n```bash \r\nSummary\r\n  COMMIT=f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -blocksxor=0 -dbcache=10000 -printtoconsole=0 ran\r\n    1.09 ± 0.02 times faster than COMMIT=e1074081c9f1895a4f629dfee347ceae484a10d3 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -blocksxor=0 -dbcache=10000 -printtoconsole=0\r\n```",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2519764142",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2519783287,
      "node_id": "IC_kwDOABII586WMNd3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2519783287",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T09:46:12Z",
      "updated_at": "2024-12-05T09:46:12Z",
      "author_association": "MEMBER",
      "body": "> Would still be nice to if there was a way to take all of it out of the hot path (possibly with higher overall benefits), but I don't know if such a change is possible and will replace this pull.\r\n\r\nActually, this change here also affects RPC performance, not just internal validation, so this can be done in a follow-up or separate pull, if it is possible at all.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2519783287",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2523295114,
      "node_id": "IC_kwDOABII586WZm2K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2523295114",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T13:48:59Z",
      "updated_at": "2024-12-06T13:53:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "More context:\r\nThe previous benchmark was for completely turning off XOR - but we can only do that for new IBD by explicitly setting it to 0. But for the majority of cases we likely want to still to the xor, so this PR is meant to speed it up.\r\nI have remeasured it with doing full IBD until 800k blocks (two runs to measure stability, since reindex wouldn't cover all usages of XOR):\r\n\r\n<details>\r\n<summary>benchmark</summary>\r\n\r\n```bash\r\nhyperfine \\\r\n--runs 2 \\\r\n--export-json /mnt/my_storage/IBD-xor-rebased.json \\\r\n--parameter-list COMMIT e1074081c9f1895a4f629dfee347ceae484a10d3,f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5 \\\r\n--prepare 'rm -rf /mnt/my_storage/BitcoinData/* && git checkout {COMMIT} && git clean -fxd && git reset --hard && cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_UTIL=OFF -DBUILD_TX=OFF -DBUILD_TESTS=OFF -DENABLE_WALLET=OFF -DINSTALL_MAN=OFF && cmake --build build -j$(nproc)' \\\r\n'COMMIT={COMMIT} ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -dbcache=10000 -printtoconsole=0'\r\n```\r\n\r\n</details>\r\n\r\n```bash\r\nBenchmark 1: COMMIT=e1074081c9f1895a4f629dfee347ceae484a10d3 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -dbcache=10000 -printtoconsole=0\r\n  Time (mean ± σ):     25601.461 s ± 65.686 s    [User: 27025.116 s, System: 1586.908 s]\r\n  Range (min … max):   25555.014 s … 25647.907 s    2 runs\r\n \r\nBenchmark 2: COMMIT=f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -dbcache=10000 -printtoconsole=0\r\n  Time (mean ± σ):     24526.781 s ± 389.029 s    [User: 25525.801 s, System: 1552.625 s]\r\n  Range (min … max):   24251.697 s … 24801.866 s    2 runs\r\n```\r\n\r\nWhich indicates that this will speed up IBD by roughly 4% on average (now that 30039 was merged the difference is more obvious):\r\n ```bash\r\nSummary\r\n  COMMIT=f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -dbcache=10000 -printtoconsole=0 ran\r\n    1.04 ± 0.02 times faster than COMMIT=e1074081c9f1895a4f629dfee347ceae484a10d3 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -dbcache=10000 -printtoconsole=0\r\n```",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2523295114",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "renamed",
      "id": 15560727277,
      "node_id": "RTE_lADOABII586bm_bxzwAAAAOffdrt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15560727277",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T13:52:17Z",
      "rename": {
        "from": "optimization: change XOR obfuscation key from `std::vector<std::byte>{8}` to `uint64_t`",
        "to": "optimization: speed up XOR by 4% (9% when disabled) by applying it in larger batches"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15563515230,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOfqGVe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563515230",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b58e3bf928905f394add3d081dd8a35b208b42c6",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/b58e3bf928905f394add3d081dd8a35b208b42c6",
      "created_at": "2024-12-06T17:22:30Z"
    },
    {
      "event": "commented",
      "id": 2523810705,
      "node_id": "IC_kwDOABII586WbkuR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2523810705",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:30:09Z",
      "updated_at": "2024-12-06T17:37:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the reviews and hints, I've pushed the following [changes](https://github.com/bitcoin/bitcoin/compare/f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5..b9c847fd093d100628817af98fe837db938160f7):\r\n* Reverted all cmake changes @hodlinator mentioned and histogram archives, and based on the hints of @ryanofsky and @maflcko I've kept only the top entries (by frequency, re-sorted by size), making sure that the really big write-vectors are also covered (so kept the first 1000 instead of just the first 50). This enabled putting all the data in the sourcefile.\r\n* Added `Assume`s to each xor to check that we don't have any useless calls with `0` keys - making sure we \"turn off\" the feature when we can.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2523810705",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15563649309,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOfqnEd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563649309",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:30:11Z"
    },
    {
      "event": "subscribed",
      "id": 15563649367,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOfqnFX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563649367",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:30:11Z"
    },
    {
      "event": "mentioned",
      "id": 15563649417,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOfqnGJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563649417",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:30:11Z"
    },
    {
      "event": "subscribed",
      "id": 15563649456,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOfqnGw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563649456",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:30:11Z"
    },
    {
      "event": "mentioned",
      "id": 15563649529,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOfqnH5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563649529",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:30:11Z"
    },
    {
      "event": "subscribed",
      "id": 15563649572,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOfqnIk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563649572",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:30:12Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNhYWZiZDA2OTI0Njg0OGE4YmRmYzJmNDJmZDFkNjkyYTgyNGRlOTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/caafbd069246848a8bdfc2f42fd1d692a824de94",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/caafbd069246848a8bdfc2f42fd1d692a824de94",
      "tree": {
        "sha": "ed1438c3967c0c27dd0be1cd65933c99fb1568ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed1438c3967c0c27dd0be1cd65933c99fb1568ec"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1074081c9f1895a4f629dfee347ceae484a10d3",
          "sha": "e1074081c9f1895a4f629dfee347ceae484a10d3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e1074081c9f1895a4f629dfee347ceae484a10d3"
        }
      ],
      "message": "bench: Make Xor benchmark more representative\n\nTo make the benchmarks representative, I've collected the write-vector's sizes during IBD for every invocation of `util::Xor` until 860k blocks, and used it as a basis for the micro-benchmarks, having a similar distribution of random data (taking the 1000 most frequent ones, making sure the very big ones are also covered).\n\nAnd even though we already have serialization tests, `AutoFileXor` was added to serializing 1 MB via the provided key_bytes.\nThis was used to test the effect of disabling obfuscation.\n\n>  cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release \\\n&& cmake --build build -j$(nproc) \\\n&& build/src/bench/bench_bitcoin -filter='XorHistogram|AutoFileXor' -min-time=10000\n\nC++ compiler .......................... AppleClang 16.0.0.16000026\n\n|             ns/byte |              byte/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|                1.00 |    1,000,913,427.27 |    0.7% |     10.20 | `AutoFileXor`\n|                0.85 |    1,173,442,964.60 |    0.2% |     11.16 | `XorHistogram`\n\nC++ compiler .......................... GNU 13.2.0\n\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\n|                1.87 |      535,253,389.72 |    0.0% |            9.20 |            3.45 |  2.669 |           1.03 |    0.1% |     11.02 | `AutoFileXor`\n|                1.70 |      587,844,715.57 |    0.0% |            9.35 |            5.41 |  1.729 |           1.05 |    1.7% |     10.95 | `XorHistogram`",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-06T17:32:39Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-06T15:18:03Z"
      },
      "sha": "caafbd069246848a8bdfc2f42fd1d692a824de94"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdhMmU1ZWM5NzcwMDU4NGVlYWM2ZjhiMDhlZjY5N2RmNmExNDc2MDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a2e5ec97700584eeac6f8b08ef697df6a147606",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7a2e5ec97700584eeac6f8b08ef697df6a147606",
      "tree": {
        "sha": "ae82c52cbef5185787b2d313fa9969464fb0988e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae82c52cbef5185787b2d313fa9969464fb0988e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/caafbd069246848a8bdfc2f42fd1d692a824de94",
          "sha": "caafbd069246848a8bdfc2f42fd1d692a824de94",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/caafbd069246848a8bdfc2f42fd1d692a824de94"
        }
      ],
      "message": "optimization: Xor 64 bits together instead of byte-by-byte\n\n`util::Xor` method was split out into more focused parts:\n* one which assumes tha the `uint64_t` key is properly aligned, doing the first few xors as 64 bits (the memcpy is eliminated in most compilers), and the last iteration is optimized for 8/16/32 bytes.\n* an unaligned `uint64_t` key with a `key_offset` parameter which is rotated to accommodate the data (adjusting for endianness).\n* a legacy `std::vector<std::byte>` key with an asserted 8 byte size, converted to `uint64_t`.\n\nNote that the default statement alone would pass the tests, but would be very slow, since the 1, 2 and 4 byte versions won't be specialized by the compiler, hence the switch.\n\nAsserts were added throughout the code to make sure every such vector has length 8, since in the next commit we're converting all of them to `uint64_t`.",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-06T17:34:21Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-10-24T07:10:46Z"
      },
      "sha": "7a2e5ec97700584eeac6f8b08ef697df6a147606"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI5Yzg0N2ZkMDkzZDEwMDYyODgxN2FmOThmZTgzN2RiOTM4MTYwZjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b9c847fd093d100628817af98fe837db938160f7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b9c847fd093d100628817af98fe837db938160f7",
      "tree": {
        "sha": "d6619c21da811f6fa975c6aa23bf4aff6a0399f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6619c21da811f6fa975c6aa23bf4aff6a0399f6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a2e5ec97700584eeac6f8b08ef697df6a147606",
          "sha": "7a2e5ec97700584eeac6f8b08ef697df6a147606",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7a2e5ec97700584eeac6f8b08ef697df6a147606"
        }
      ],
      "message": "refactor: Migrate fixed-size obfuscation end-to-end from `std::vector<std::byte>` to `uint64_t`\n\nSince `util::Xor` accepts `uint64_t` values, we're eliminating any repeated vector-to-uint64_t conversions going back to the loading/saving of these values (we're still serializing them as vectors, but converting as soon as possible to `uint64_t`). This is the reason the tests still generate vector values and convert to `uint64_t` later instead of generating it directly.\n\nWe're also short-circuit `Xor` calls with 0 key values early to avoid unnecessary calculations (e.g. `MakeWritableByteSpan`) - even assuming that XOR is never called for 0.\n\n>  cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release \\\n&& cmake --build build -j$(nproc) \\\n&& build/src/bench/bench_bitcoin -filter='XorHistogram|AutoFileXor' -min-time=10000\n\nC++ compiler .......................... AppleClang 16.0.0.16000026\n\n|             ns/byte |              byte/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|                0.09 |   11,204,183,007.86 |    0.6% |     11.08 | `AutoFileXor`\n|                0.15 |    6,459,482,269.06 |    0.3% |     10.97 | `XorHistogram`\n\nC++ compiler .......................... GNU 13.2.0\n\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\n|                0.59 |    1,706,433,032.76 |    0.1% |            0.00 |            0.00 |  0.620 |           0.00 |    1.8% |     11.01 | `AutoFileXor`\n|                0.47 |    2,145,375,849.71 |    0.0% |            0.95 |            1.48 |  0.642 |           0.20 |    9.6% |     10.93 | `XorHistogram`\n\n----\n\nA few other benchmarks that seem to have improved as well (tested with Clang only):\nBefore:\n\n|               ns/op |                op/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|        2,237,168.64 |              446.99 |    0.3% |     10.91 | `ReadBlockFromDiskTest`\n|          748,837.59 |            1,335.40 |    0.2% |     10.68 | `ReadRawBlockFromDiskTest`\n\nAfter:\n\n|               ns/op |                op/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|        1,827,436.12 |              547.21 |    0.7% |     10.95 | `ReadBlockFromDiskTest`\n|           49,276.48 |           20,293.66 |    0.2% |     10.99 | `ReadRawBlockFromDiskTest`",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-06T17:34:23Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-10-26T13:56:33Z"
      },
      "sha": "b9c847fd093d100628817af98fe837db938160f7"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15563721859,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOfq4yD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563721859",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/b9c847fd093d100628817af98fe837db938160f7",
      "created_at": "2024-12-06T17:35:35Z"
    },
    {
      "event": "reviewed",
      "id": 2486500175,
      "node_id": "PRR_kwDOABII586UNPtP",
      "url": null,
      "actor": null,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2486500175",
      "submitted_at": "2024-12-10T13:20:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518633",
      "pull_request_review_id": 2391705369,
      "id": 1814518633,
      "node_id": "PRRC_kwDOABII585sJ1tp",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I fail to see how this is not UB. This is identical to https://github.com/bitcoin/bitcoin/pull/30349#discussion_r1804480124",
      "created_at": "2024-10-24T08:27:10Z",
      "updated_at": "2024-10-24T08:27:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814518633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518826",
      "pull_request_review_id": 2391705369,
      "id": 1814518826,
      "node_id": "PRRC_kwDOABII585sJ1wq",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());\n+        const auto size64 = remaining / 8;\n+        for (auto& write64 : std::span(std::bit_cast<uint64_t*>(write.data() + i), size64)) {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "same",
      "created_at": "2024-10-24T08:27:16Z",
      "updated_at": "2024-10-24T08:27:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814518826",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814534953",
      "pull_request_review_id": 2391731741,
      "id": 1814534953,
      "node_id": "PRRC_kwDOABII585sJ5sp",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());\n+        const auto size64 = remaining / 8;\n+        for (auto& write64 : std::span(std::bit_cast<uint64_t*>(write.data() + i), size64)) {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518826,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "CI seems to agree:\r\n\r\n```\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1100:16: runtime error: reference binding to misaligned address 0x7f10961d9084 for type 'unsigned long', which requires 8 byte alignment\r\n0x7f10961d9084: note: pointer points here\r\n  94 8e 20 eb 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00\r\n              ^ \r\n    #0 0x55780d85ab85 in __gnu_cxx::__normal_iterator<unsigned long*, std::span<unsigned long, 18446744073709551615ul>>::operator*() const /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1100:9\r\n    #1 0x55780d85ab85 in util::Xor(Span<std::byte>, Span<std::byte const>, unsigned long) ci/scratch/build-x86_64-pc-linux-gnu/src/test/./src/streams.h:42:28\r\n```\r\n\r\nhttps://github.com/bitcoin/bitcoin/actions/runs/11495063168/job/31993791381?pr=31144#step:7:4647",
      "created_at": "2024-10-24T08:37:11Z",
      "updated_at": "2024-10-24T08:37:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814534953",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814534953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814546031",
      "pull_request_review_id": 2391748872,
      "id": 1814546031,
      "node_id": "PRRC_kwDOABII585sJ8Zv",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());\n+        const auto size64 = remaining / 8;\n+        for (auto& write64 : std::span(std::bit_cast<uint64_t*>(write.data() + i), size64)) {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518826,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, I'll investigate.\r\nI assumed there will be more to check, that's why it's still a draft.",
      "created_at": "2024-10-24T08:44:12Z",
      "updated_at": "2024-10-24T08:44:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814546031",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814546031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814563302",
      "pull_request_review_id": 2391776469,
      "id": 1814563302,
      "node_id": "PRRC_kwDOABII585sKAnm",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518633,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Isn't this what we're doing in `CScript` as well https://github.com/bitcoin/bitcoin/blob/master/src/script/script.h#L496 ?\r\n\r\nno? `value_type` is `unsigned char` (an 8-bit integer type) and this one here is `uint64_t` (an 64-bit integer type).",
      "created_at": "2024-10-24T08:54:46Z",
      "updated_at": "2024-10-24T08:54:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814563302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814563302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814564883",
      "pull_request_review_id": 2391778993,
      "id": 1814564883,
      "node_id": "PRRC_kwDOABII585sKBAT",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518633,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, just saw it, my mistake",
      "created_at": "2024-10-24T08:55:40Z",
      "updated_at": "2024-10-24T08:55:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814564883",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814564883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814606913",
      "pull_request_review_id": 2391845703,
      "id": 1814606913,
      "node_id": "PRRC_kwDOABII585sKLRB",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518633,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Replaced it with `memcpy` and it looks like the compiler successfully simplifies it to proper [vector instructions](https://www.felixcloutier.com/x86/pxor): https://godbolt.org/z/Koscjconz",
      "created_at": "2024-10-24T09:17:19Z",
      "updated_at": "2024-10-24T09:18:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814606913",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814606913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814734979",
      "pull_request_review_id": 2392082288,
      "id": 1814734979,
      "node_id": "PRRC_kwDOABII585sKqiD",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "i have a hard time believing this will make a large difference, especially with the two memcpys involved\r\nOn modern CPUs, ALU operations (especially bitwise ones) are so fast compared to any kind of memory access.\r\nAnd this isn't some advanced crypto math, it's *one* Xor operation per word with a fixed key.\r\n\r\nCould avoid the memcpys if the code takes memory alignment into account, but that makes it even more complex. Not sure the pros/cons work out here.",
      "created_at": "2024-10-24T10:41:35Z",
      "updated_at": "2024-10-24T10:41:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814734979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814734979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814736038",
      "pull_request_review_id": 2392084054,
      "id": 1814736038,
      "node_id": "PRRC_kwDOABII585sKqym",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Please avoid % (especially with a dynamic value) in an inner loop. It's essentially a division operation and those are not cheap.",
      "created_at": "2024-10-24T10:42:26Z",
      "updated_at": "2024-10-24T10:42:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814736038",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814736038"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814739738",
      "pull_request_review_id": 2392090246,
      "id": 1814739738,
      "node_id": "PRRC_kwDOABII585sKrsa",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for the hint, I deliberately removed that (please check the commit messages for details), since these are optimized away.\r\nAlso, this is just the leftover part, so for key of length 8 (the version used in most places) this will have 7 iterations at most.\r\nCan you see any difference with any of the benchmarks?",
      "created_at": "2024-10-24T10:45:15Z",
      "updated_at": "2024-10-24T10:46:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814739738",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814739738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814741753",
      "pull_request_review_id": 2392093399,
      "id": 1814741753,
      "node_id": "PRRC_kwDOABII585sKsL5",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814734979,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The speedup comes from the vectorized operations, i.e. doing 64 bit xor instead of byte-by-byte xor (memcpy seems to be eliminated on 64 bit architectures successfully), see https://godbolt.org/z/Koscjconz",
      "created_at": "2024-10-24T10:46:42Z",
      "updated_at": "2024-10-24T10:46:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814741753",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814741753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814763442",
      "pull_request_review_id": 2392129853,
      "id": 1814763442,
      "node_id": "PRRC_kwDOABII585sKxey",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's only up to 7 iterations (assuming the key size is 8), sure, youre're right.\r\n\r\nBut ok, yea, i'm a bit divided about relying on specific non-trivial things being optimized out, makes the output very dependent on specific compiler decisions (which may be fickle in some cases).",
      "created_at": "2024-10-24T11:02:51Z",
      "updated_at": "2024-10-24T11:02:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814763442",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814763442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766636",
      "pull_request_review_id": 2392135328,
      "id": 1814766636,
      "node_id": "PRRC_kwDOABII585sKyQs",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Often the simplest code gets optimized most, since it's more predictable.\r\nWould you like me to extend the test or benchmark suite or try something else to make sure we're comfortable with the change?",
      "created_at": "2024-10-24T11:05:33Z",
      "updated_at": "2024-10-24T11:05:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814766636",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766970",
      "pull_request_review_id": 2392135936,
      "id": 1814766970,
      "node_id": "PRRC_kwDOABII585sKyV6",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814734979,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Right, that's trivial for x86_64. Let's also check for architectures that do require alignment for 64-bit reads and writes, like RISC-V.",
      "created_at": "2024-10-24T11:05:45Z",
      "updated_at": "2024-10-24T11:05:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814766970",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766970"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814773275",
      "pull_request_review_id": 2392146665,
      "id": 1814773275,
      "node_id": "PRRC_kwDOABII585sKz4b",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No, it's fine. It just gives me goosebumps seeing code like this, but if it doesn't affect the benchmark and no one else cares then it doesn't matter.",
      "created_at": "2024-10-24T11:10:55Z",
      "updated_at": "2024-10-24T11:10:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814773275",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814773275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814847538",
      "pull_request_review_id": 2392272679,
      "id": 1814847538,
      "node_id": "PRRC_kwDOABII585sLGAy",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814734979,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added RISC-V compiler to https://godbolt.org/z/n5rMeYeas - where it seems to my untrained eyes that it uses two separate 32 bit xors to emulate the 64 bit operation (but even if it's byte-by-byte on 32 bit processors, that's still the same as what it was before on 64 bit CPUs, right?).",
      "created_at": "2024-10-24T12:06:13Z",
      "updated_at": "2024-10-24T12:12:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814847538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814847538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814852528",
      "pull_request_review_id": 2392281388,
      "id": 1814852528,
      "node_id": "PRRC_kwDOABII585sLHOw",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "To get rid of the goosebumps [I'm handling the remaining 4 bytes as a single 32 bit xor now](https://github.com/bitcoin/bitcoin/compare/6ae466bf112a1dedca3965718fc89b20b0e0e194..353915bae14b9704a209bc09b021d3dd2ee11cf2), so the final loop (when keys are 8 bytes long, which is mostly the case for us, I think) does 3 iterations at most. So even if it's not optimized away, we should be fine doing 3 divisions by a nice round number like 8.",
      "created_at": "2024-10-24T12:09:56Z",
      "updated_at": "2024-10-24T12:13:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814852528",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814852528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814863916",
      "pull_request_review_id": 2392302787,
      "id": 1814863916,
      "node_id": "PRRC_kwDOABII585sLKAs",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> divisions by a nice round number like 8.\r\n\r\nI don't think the compiler knows the number here, so can't use it to optimize the code based on it.",
      "created_at": "2024-10-24T12:17:28Z",
      "updated_at": "2024-10-24T12:17:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814863916",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814863916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814865983",
      "pull_request_review_id": 2392307155,
      "id": 1814865983,
      "node_id": "PRRC_kwDOABII585sLKg_",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is that important for max 3 divisions?",
      "created_at": "2024-10-24T12:19:01Z",
      "updated_at": "2024-10-24T12:19:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814865983",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814865983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815601596",
      "pull_request_review_id": 2393555424,
      "id": 1815601596,
      "node_id": "PRRC_kwDOABII585sN-G8",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes. At least for me locally, but I am getting widely different bench results anyway: https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2436158760\r\n\r\nWith this one reverted, `XorSmall` is back to being just slightly slower than current master for me.",
      "created_at": "2024-10-24T19:33:20Z",
      "updated_at": "2024-10-24T19:33:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1815601596",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815601596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815667257",
      "pull_request_review_id": 2393663006,
      "id": 1815667257,
      "node_id": "PRRC_kwDOABII585sOOI5",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Usually these optimizations concentrate on the measurable parts based on the profiling results that I'm getting during reindexing or IBD. Obfuscating a single bit (i.e. `XorSmall`) wasn't my focus, it's already very fast, didn't seem like the bottleneck.\r\nWould you like me to concentrate on that scenario instead? Or would it make more sense to serialize a block and use that as the basis for the benchmarks?\r\n\r\n> C++ compiler .......................... AppleClang 16.0.0.16000026\r\n\r\nBefore:\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.99 |      501,740,412.05 |    0.5% |     10.27 | `AutoFileXor`\r\n|                1.24 |      807,597,761.92 |    0.0% |     11.01 | `Xor`\r\n|                1.29 |      776,238,564.27 |    0.0% |     10.59 | `XorSmall`\r\n\r\nAfter:\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                0.73 |    1,364,622,484.81 |    0.9% |      8.78 | `AutoFileXor`\r\n|                0.02 |   40,999,383,920.82 |    0.0% |     11.00 | `Xor`\r\n|                0.54 |    1,862,525,472.57 |    0.0% |     11.00 | `XorSmall`\r\n\r\n> C++ compiler .......................... GNU 12.2.0\r\n\r\nBefore:\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                1.60 |      624,562,742.35 |    0.2% |            9.20 |            3.57 |  2.579 |           1.03 |    0.1% |     10.61 | `AutoFileXor`\r\n|                0.91 |    1,102,205,071.31 |    0.0% |            9.02 |            3.26 |  2.763 |           1.00 |    0.1% |     11.00 | `Xor`\r\n|                1.23 |      811,876,565.33 |    0.1% |           14.60 |            4.43 |  3.295 |           1.80 |    0.0% |     10.56 | `XorSmall`\r\n\r\nAfter:\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                0.74 |    1,346,798,809.87 |    0.1% |            0.72 |            0.47 |  1.531 |           0.16 |    0.2% |     11.02 | `AutoFileXor`\r\n|                0.09 |   11,450,472,586.50 |    0.0% |            0.59 |            0.31 |  1.882 |           0.14 |    1.9% |     10.82 | `Xor`\r\n|                5.65 |      177,092,223.60 |    0.1% |           22.00 |           20.31 |  1.083 |           4.80 |    0.0% |     10.99 | `XorSmall`",
      "created_at": "2024-10-24T20:37:25Z",
      "updated_at": "2024-10-24T20:37:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1815667257",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815667257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815699568",
      "pull_request_review_id": 2393715070,
      "id": 1815699568,
      "node_id": "PRRC_kwDOABII585sOWBw",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Would you like me to concentrate on that scenario instead? Or would it make more sense to serialize a block and use that as the basis for the benchmarks?\r\n\r\nWell no. I think this has been mentioned previously. Generally, optimizing for micro benchmarks may not yield results that are actually meaningful or visible for end-users, because the benchmarks capture only a very specific and narrow view. Optimizing for one could even make the code slower for another (as observed above). Adding a bench for the block couldn't hurt, but I haven't checked how representative it is. If such a bench represents the IBD behavior, it would be ideal. (There already is a block in the hex bench data, which could be used)\r\n\r\n> Usually these optimizations concentrate on the measurable parts based on the profiling results that I'm getting during reindexing or IBD\r\n\r\nYes, that is more useful. It would be good to share the number you got. Because the commit message simply claims that no benefit was found (\"The `if (j == key.size())` optimization wasn't kept since the benchmarks couldn't show any advantage anymore\"). \r\n\r\n\r\n> XorSmall\r\n\r\nLooks like you can reproduce the slowdown. I wonder if it is correlated with the use of libc++  vs libstdc++",
      "created_at": "2024-10-24T21:11:27Z",
      "updated_at": "2024-10-24T21:12:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1815699568",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815699568"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816522021",
      "pull_request_review_id": 2395021458,
      "id": 1816522021,
      "node_id": "PRRC_kwDOABII585sRe0l",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": ">  It would be good to share the number you got\r\n\r\nThe `reindex-chainstate` until 600k, 2 runs just finished - comparing master against the 64/32 bit packing (current state) on Linux (with GCC, showing the above inconsistency).\r\n\r\n<details>\r\n<summary>benchmark</summary>\r\n\r\n```bash\r\nhyperfine \\\r\n--runs 2 \\\r\n--show-output \\\r\n--export-json /mnt/my_storage/reindex-xor.json \\\r\n--parameter-list COMMIT dea7e2faf1bc48f96741ef\r\n84e25e6f47cefd5a92,353915bae14b9704a209bc09b021d3dd2ee11cf2 \\\r\n--prepare 'cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_UTIL=OFF -DBUILD_TX=OFF -DBUILD_TESTS=OFF -DENABLE_WALLET=OFF -DI\r\nNSTALL_MAN=OFF && cmake --build build -j$(nproc)' \\\r\n'COMMIT={COMMIT} ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=600000 -dbcache=500 -printtoconsole=0 -reindex-chainstate -connect=0'\r\n```\r\n\r\n</details>\r\n\r\nBefore:\r\n* 3.554 hours\r\n* 3.567 hours\r\n\r\nAfter:\r\n* 3.523 hours\r\n* 3.527 hours\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nBenchmark 1: COMMIT=dea7e2faf1bc48f96741ef84e25e6f47cefd5a92 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=600000 -dbcache=500 -printtoconsole=0 -reindex-chains\r\ntate -connect=0\r\n  Time (mean ± σ):     12819.367 s ± 35.155 s    [User: 11992.168 s, System: 2509.200 s]\r\n  Range (min … max):   12794.508 s … 12844.225 s    2 runs\r\n\r\nBenchmark 2: COMMIT=353915bae14b9704a209bc09b021d3dd2ee11cf2 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=600000 -dbcache=500 -printtoconsole=0 -reindex-chains\r\ntate -connect=0\r\n  Time (mean ± σ):     12685.350 s ± 19.878 s    [User: 11918.349 s, System: 2523.819 s]\r\n  Range (min … max):   12671.295 s … 12699.406 s    2 runs\r\n```\r\n\r\n</details>\r\n\r\n----\r\n\r\nReindexing is a lot more stable than IBD (as seen from multiple measurements), showing a consistent 1% speedup.\r\nNot earth-shattering, but at least this way the obfuscation isn't causing a speed regression anymore.\r\n\r\n----\r\n\r\n> Adding a bench for the block couldn't hurt, but I haven't checked how representative it is\r\n\r\nLet's find out!",
      "created_at": "2024-10-25T11:35:23Z",
      "updated_at": "2024-10-25T11:38:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816522021",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816522021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816612914",
      "pull_request_review_id": 2395174160,
      "id": 1816612914,
      "node_id": "PRRC_kwDOABII585sR1Ay",
      "diff_hunk": "@@ -270,7 +297,7 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file)\n         BOOST_CHECK(false);\n     } catch (const std::exception& e) {\n         BOOST_CHECK(strstr(e.what(),\n-                        \"Rewind limit must be less than buffer size\") != nullptr);\n+                           \"Rewind limit must be less than buffer size\") != nullptr);",
      "path": "src/test/streams_tests.cpp",
      "position": 161,
      "original_position": 48,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems like prior author just rounded off to some *not too unreasonable* tab-indentation (efd2474d17098c754367b844ec646ebececc7c74). Function isn't touched in this PR so should probably resist touching here and below.",
      "created_at": "2024-10-25T12:41:11Z",
      "updated_at": "2024-10-25T14:02:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816612914",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816612914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 338,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816619457",
      "pull_request_review_id": 2395174160,
      "id": 1816619457,
      "node_id": "PRRC_kwDOABII585sR2nB",
      "diff_hunk": "@@ -14,6 +14,33 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_bytes)\n+{\n+    auto expected_xor = [](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {\n+        if (key.size()) {\n+            for (auto& b : write) {\n+                b ^= key[key_offset++ % key.size()];\n+            }\n+        }\n+    };\n+\n+    FastRandomContext rng{false};\n+    for (int test = 0; test < 100; ++test) {\n+        const size_t key_size = rng.randrange(10);\n+        const size_t write_size = rng.randrange(100);\n+        const size_t key_offset = rng.randrange(key_size + 2);\n+\n+        std::vector key(rng.randbytes<std::byte>(key_size));\n+        std::vector expected(rng.randbytes<std::byte>(write_size));\n+        std::vector actual(expected);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Experimented with changed to brace-initialization which uncovered some slight narrowing/widening occurring. (Thought I had an angle for making the code more robust in a more material way but that attempt failed).\r\n```suggestion\r\n    auto expected_xor{[](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {\r\n        if (key.size()) {\r\n            for (auto& b : write) {\r\n                b ^= key[key_offset++ % key.size()];\r\n            }\r\n        }\r\n    }};\r\n\r\n    FastRandomContext rng{false};\r\n    for (int test = 0; test < 100; ++test) {\r\n        const int key_size{rng.randrange(10)};\r\n        const int write_size{rng.randrange(100)};\r\n        const int key_offset{rng.randrange(key_size + 2)};\r\n\r\n        std::vector key{rng.randbytes<std::byte>(key_size)};\r\n        std::vector expected{rng.randbytes<std::byte>(write_size)};\r\n        std::vector actual{expected};\r\n```",
      "created_at": "2024-10-25T12:46:18Z",
      "updated_at": "2024-10-25T14:02:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816619457",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816619457"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816662396",
      "pull_request_review_id": 2395174160,
      "id": 1816662396,
      "node_id": "PRRC_kwDOABII585sSBF8",
      "diff_hunk": "@@ -14,6 +14,33 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_bytes)\n+{\n+    auto expected_xor = [](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Might as well use `std::span` for new code.",
      "created_at": "2024-10-25T13:12:54Z",
      "updated_at": "2024-10-25T14:02:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816662396",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816662396"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816775973",
      "pull_request_review_id": 2395447475,
      "id": 1816775973,
      "node_id": "PRRC_kwDOABII585sSc0l",
      "diff_hunk": "@@ -270,7 +297,7 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file)\n         BOOST_CHECK(false);\n     } catch (const std::exception& e) {\n         BOOST_CHECK(strstr(e.what(),\n-                        \"Rewind limit must be less than buffer size\") != nullptr);\n+                           \"Rewind limit must be less than buffer size\") != nullptr);",
      "path": "src/test/streams_tests.cpp",
      "position": 161,
      "original_position": 48,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": 1816612914,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems it was a [deliberate formatting](https://github.com/bitcoin/bitcoin/commit/efd2474d17098c754367b844ec646ebececc7c74#diff-73552341d85aec344497b47f1c2aa53a7e01a415030e40f56b1c454aef5f209dR221-R222), so I'll revert.\r\nWill push after I have the block serialization benchmark working.",
      "created_at": "2024-10-25T14:18:31Z",
      "updated_at": "2024-10-25T14:18:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816775973",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816775973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 338,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816776293",
      "pull_request_review_id": 2395447971,
      "id": 1816776293,
      "node_id": "PRRC_kwDOABII585sSc5l",
      "diff_hunk": "@@ -14,6 +14,33 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_bytes)\n+{\n+    auto expected_xor = [](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {\n+        if (key.size()) {\n+            for (auto& b : write) {\n+                b ^= key[key_offset++ % key.size()];\n+            }\n+        }\n+    };\n+\n+    FastRandomContext rng{false};\n+    for (int test = 0; test < 100; ++test) {\n+        const size_t key_size = rng.randrange(10);\n+        const size_t write_size = rng.randrange(100);\n+        const size_t key_offset = rng.randrange(key_size + 2);\n+\n+        std::vector key(rng.randbytes<std::byte>(key_size));\n+        std::vector expected(rng.randbytes<std::byte>(write_size));\n+        std::vector actual(expected);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": 1816619457,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems a bit excessive for a test, but ended up changing it to e.g. `const size_t write_size{rng.randrange(100U)};`. Will push a bit later.",
      "created_at": "2024-10-25T14:18:44Z",
      "updated_at": "2024-10-26T21:59:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816776293",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816776293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816776448",
      "pull_request_review_id": 2395448225,
      "id": 1816776448,
      "node_id": "PRRC_kwDOABII585sSc8A",
      "diff_hunk": "@@ -14,6 +14,33 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_bytes)\n+{\n+    auto expected_xor = [](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": 1816662396,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Indeed!",
      "created_at": "2024-10-25T14:18:50Z",
      "updated_at": "2024-10-25T14:18:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816776448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816776448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939448",
      "pull_request_review_id": 2397366260,
      "id": 1817939448,
      "node_id": "PRRC_kwDOABII585sW434",
      "diff_hunk": "@@ -270,7 +297,7 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file)\n         BOOST_CHECK(false);\n     } catch (const std::exception& e) {\n         BOOST_CHECK(strstr(e.what(),\n-                        \"Rewind limit must be less than buffer size\") != nullptr);\n+                           \"Rewind limit must be less than buffer size\") != nullptr);",
      "path": "src/test/streams_tests.cpp",
      "position": 161,
      "original_position": 48,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": 1816612914,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ended up modifying a lot more in the latest push, so this line was formatted again",
      "created_at": "2024-10-26T21:58:41Z",
      "updated_at": "2024-10-26T21:58:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1817939448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 338,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939675",
      "pull_request_review_id": 2397366442,
      "id": 1817939675,
      "node_id": "PRRC_kwDOABII585sW47b",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814734979,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've replaced all vector keys with 64 bit ints\r\n\r\nEdit:\r\nMemory alignment is handled via `std::memcpy`, optimized out on tested platforms (see [godbolt.org/z/dcxvh6abq](https://godbolt.org/z/dcxvh6abq)):\r\n\r\n* Clang (x86-64) - 32 bytes/iter using SSE vector operations\r\n* GCC (x86-64) - 16 bytes/iter using unrolled 64-bit XORs\r\n* RISC-V (32-bit) - 8 bytes/iter using load/XOR/store sequence\r\n* s390x (big-endian) - 64 bytes/iter with unrolled 8-byte XORs\r\n\r\n(please validate, my assembly knowledge is mostly academic)",
      "created_at": "2024-10-26T22:01:14Z",
      "updated_at": "2024-11-10T20:39:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1817939675",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939890",
      "pull_request_review_id": 2397366600,
      "id": 1817939890,
      "node_id": "PRRC_kwDOABII585sW4-y",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've change the usages to avoid std::vector keys, this way GCC and Clang both agree that the new results are faster (even though clang manages to compile to 32 byte SIMD, while GCC only to 16 bytes per iteration, see https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1817939675)",
      "created_at": "2024-10-26T22:03:23Z",
      "updated_at": "2024-10-26T22:03:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1817939890",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824429398",
      "pull_request_review_id": 2407902826,
      "id": 1824429398,
      "node_id": "PRRC_kwDOABII585svpVW",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "While `key_exists` is only created for this ìf`-block, there are other conditions involved, and we test for the negation of the value, so I find it less surprising to revert to the previous approach.\r\n```suggestion\r\n    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector);\r\n    if (!key_exists && params.obfuscate && IsEmpty()) {\r\n```",
      "created_at": "2024-10-31T13:09:44Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824429398",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824429398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824438833",
      "pull_request_review_id": 2407902826,
      "id": 1824438833,
      "node_id": "PRRC_kwDOABII585svrox",
      "diff_hunk": "@@ -1174,7 +1174,11 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    assert(xor_key.size() == 8);\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), 8);\n+    xor_key.fill(std::byte{0});",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I find it more useful to (static) assert that the `std::array` size matches the uint64 size directly. Also don't see a point in zeroing out the local variable before returning?\r\n```suggestion\r\n    uint64_t key;\r\n    static_assert(xor_key.size() == sizeof(key));\r\n    std::memcpy(&key, xor_key.data(), sizeof(key));\r\n```",
      "created_at": "2024-10-31T13:16:46Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824438833",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824438833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1180,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824438854",
      "pull_request_review_id": 2407930796,
      "id": 1824438854,
      "node_id": "PRRC_kwDOABII585svrpG",
      "diff_hunk": "@@ -3,22 +3,1283 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <cmath>\n+#include <cstddef>\n+#include <map>",
      "path": "src/bench/xor.cpp",
      "position": 1,
      "original_position": 6,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You can keep the std lib headers separated from our own headers.",
      "created_at": "2024-10-31T13:16:47Z",
      "updated_at": "2024-10-31T13:16:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824438854",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824438854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 7,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824444165",
      "pull_request_review_id": 2407902826,
      "id": 1824444165,
      "node_id": "PRRC_kwDOABII585svs8F",
      "diff_hunk": "@@ -1174,6 +1174,7 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n+    assert(xor_key.size() == 8);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "23fc898514bf9696facbaff65251b62c362d214e",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Don't see much point in adding the assert here in 23fc898514bf9696facbaff65251b62c362d214e were we still only have a fixed-size `std::array` with the ~asserted~ fixed size of 8. Seems sufficient with the assert in the `BlockManager`-ctor.",
      "created_at": "2024-10-31T13:20:28Z",
      "updated_at": "2024-10-31T14:53:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824444165",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824444165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824457332",
      "pull_request_review_id": 2407902826,
      "id": 1824457332,
      "node_id": "PRRC_kwDOABII585svwJ0",
      "diff_hunk": "@@ -235,7 +262,7 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Single character key",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "850214ffd9f56e887a18d0428d5881e6c1ee8652",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 850214ffd9f56e887a18d0428d5881e6c1ee8652:\r\nSingle/Multi character key comments don't make sense inside of this commit.",
      "created_at": "2024-10-31T13:29:08Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824457332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824457332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824518058",
      "pull_request_review_id": 2408055001,
      "id": 1824518058,
      "node_id": "PRRC_kwDOABII585sv--q",
      "diff_hunk": "@@ -3,22 +3,1283 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <cmath>\n+#include <cstddef>\n+#include <map>",
      "path": "src/bench/xor.cpp",
      "position": 1,
      "original_position": 6,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824438854,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[Done](https://github.com/bitcoin/bitcoin/compare/8696184c2fd183483fa843348323ffbc62c2de3c..33625e9d5327263c273583d7b3fe2f3114ebf12e), anything else?",
      "created_at": "2024-10-31T13:55:56Z",
      "updated_at": "2024-10-31T13:55:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824518058",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824518058"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 7,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824553664",
      "pull_request_review_id": 2407902826,
      "id": 1824553664,
      "node_id": "PRRC_kwDOABII585swHrA",
      "diff_hunk": "@@ -11,6 +11,7 @@\n AutoFile::AutoFile(std::FILE* file, std::vector<std::byte> data_xor)\n     : m_file{file}, m_xor{std::move(data_xor)}\n {\n+    assert(m_xor.size() == 8);",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Guess the point of adding this assert is to prove that it doesn't break anything before switching to uint64?",
      "created_at": "2024-10-31T14:15:21Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824553664",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824553664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824574701",
      "pull_request_review_id": 2407902826,
      "id": 1824574701,
      "node_id": "PRRC_kwDOABII585swMzt",
      "diff_hunk": "@@ -393,7 +405,7 @@ class AutoFile\n     std::optional<int64_t> m_position;\n \n public:\n-    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor={});\n+    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor = {std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}});",
      "path": "src/streams.h",
      "position": null,
      "original_position": 73,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 4437d4379c42a7b87bd01ad5ea6c450a732f4f95:\r\nLess verbose:\r\n`{std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}}`\r\n=>\r\n`{8, std::byte{0x00}}`",
      "created_at": "2024-10-31T14:27:45Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824574701",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824574701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 408,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824605285",
      "pull_request_review_id": 2407902826,
      "id": 1824605285,
      "node_id": "PRRC_kwDOABII585swURl",
      "diff_hunk": "@@ -179,13 +182,16 @@ bool DumpMempool(const CTxMemPool& pool, const fs::path& dump_path, FopenFn mock\n         file << version;\n \n         if (!pool.m_opts.persist_v1_dat) {\n-            std::vector<std::byte> xor_key(8);\n-            FastRandomContext{}.fillrand(xor_key);\n-            file << xor_key;\n-            file.SetXor(xor_key);\n+            std::vector<std::byte> xor_key_vector(8);\n+            FastRandomContext{}.fillrand(xor_key_vector);\n+            file << xor_key_vector;\n+\n+            uint64_t m_xor;",
      "path": "src/node/mempool_persist.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "33625e9d5327263c273583d7b3fe2f3114ebf12e",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should not use `m_`-prefix for non-member variables.",
      "created_at": "2024-10-31T14:46:41Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824605285",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824605285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824625015",
      "pull_request_review_id": 2408217524,
      "id": 1824625015,
      "node_id": "PRRC_kwDOABII585swZF3",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This pattern has been [used before](https://github.com/bitcoin/bitcoin/blob/master/src/coins.cpp#L64), I meant to narrow the scope of the var here.\r\nIf you feel strongly about it, I'll separate them.",
      "created_at": "2024-10-31T14:57:47Z",
      "updated_at": "2024-10-31T14:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824625015",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824625015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824627942",
      "pull_request_review_id": 2408222422,
      "id": 1824627942,
      "node_id": "PRRC_kwDOABII585swZzm",
      "diff_hunk": "@@ -1174,7 +1174,11 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    assert(xor_key.size() == 8);\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), 8);\n+    xor_key.fill(std::byte{0});",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824438833,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've added the fills to make sure we're not using them after conversion anymore.\r\nWhat would be the advantage of the static asserts?\r\nI don't mind removing these failsafes if you think they're redundant or noisy.",
      "created_at": "2024-10-31T14:59:36Z",
      "updated_at": "2024-10-31T14:59:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824627942",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824627942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1180,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824630954",
      "pull_request_review_id": 2408226883,
      "id": 1824630954,
      "node_id": "PRRC_kwDOABII585swaiq",
      "diff_hunk": "@@ -11,6 +11,7 @@\n AutoFile::AutoFile(std::FILE* file, std::vector<std::byte> data_xor)\n     : m_file{file}, m_xor{std::move(data_xor)}\n {\n+    assert(m_xor.size() == 8);",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": 1824553664,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yes",
      "created_at": "2024-10-31T15:01:28Z",
      "updated_at": "2024-10-31T15:01:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824630954",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824630954"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824631355",
      "pull_request_review_id": 2408228026,
      "id": 1824631355,
      "node_id": "PRRC_kwDOABII585swao7",
      "diff_hunk": "@@ -393,7 +405,7 @@ class AutoFile\n     std::optional<int64_t> m_position;\n \n public:\n-    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor={});\n+    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor = {std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}});",
      "path": "src/streams.h",
      "position": null,
      "original_position": 73,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": 1824574701,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "it's removed in the next commit",
      "created_at": "2024-10-31T15:01:44Z",
      "updated_at": "2024-10-31T15:01:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824631355",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824631355"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 408,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824645305",
      "pull_request_review_id": 2408250113,
      "id": 1824645305,
      "node_id": "PRRC_kwDOABII585sweC5",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> This pattern has been [used before](https://github.com/bitcoin/bitcoin/blob/master/src/coins.cpp#L64)\r\n\r\nIn the example you give, the variable is used in a more \"positive\" sense. Here we test the negated value, which is part of what makes it jarring.\r\n\r\nOne could maybe improve readability by moving the negation and renaming:\r\n```suggestion\r\n    if (bool missing_key = !Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); missing_key && params.obfuscate && IsEmpty()) {\r\n```\r\n\r\n> I meant to narrow the scope of the var here.\r\n\r\nThat's why I was referring to the `if`-block.\r\n\r\n> If you feel strongly about it, I'll separate them.\r\n\r\nYes please, either that or my negation move+rename suggestion.",
      "created_at": "2024-10-31T15:09:25Z",
      "updated_at": "2024-10-31T15:11:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824645305",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824645305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824651933",
      "pull_request_review_id": 2408260429,
      "id": 1824651933,
      "node_id": "PRRC_kwDOABII585swfqd",
      "diff_hunk": "@@ -179,13 +182,16 @@ bool DumpMempool(const CTxMemPool& pool, const fs::path& dump_path, FopenFn mock\n         file << version;\n \n         if (!pool.m_opts.persist_v1_dat) {\n-            std::vector<std::byte> xor_key(8);\n-            FastRandomContext{}.fillrand(xor_key);\n-            file << xor_key;\n-            file.SetXor(xor_key);\n+            std::vector<std::byte> xor_key_vector(8);\n+            FastRandomContext{}.fillrand(xor_key_vector);\n+            file << xor_key_vector;\n+\n+            uint64_t m_xor;",
      "path": "src/node/mempool_persist.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "33625e9d5327263c273583d7b3fe2f3114ebf12e",
      "in_reply_to_id": 1824605285,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You're right, I've used `xor_key` in the same case before",
      "created_at": "2024-10-31T15:13:17Z",
      "updated_at": "2024-10-31T15:13:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824651933",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824651933"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652007",
      "pull_request_review_id": 2408260546,
      "id": 1824652007,
      "node_id": "PRRC_kwDOABII585swfrn",
      "diff_hunk": "@@ -393,7 +405,7 @@ class AutoFile\n     std::optional<int64_t> m_position;\n \n public:\n-    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor={});\n+    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor = {std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}});",
      "path": "src/streams.h",
      "position": null,
      "original_position": 73,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": 1824574701,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "But done anyway",
      "created_at": "2024-10-31T15:13:19Z",
      "updated_at": "2024-10-31T15:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824652007",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 408,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652156",
      "pull_request_review_id": 2408260771,
      "id": 1824652156,
      "node_id": "PRRC_kwDOABII585swft8",
      "diff_hunk": "@@ -235,7 +262,7 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Single character key",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "850214ffd9f56e887a18d0428d5881e6c1ee8652",
      "in_reply_to_id": 1824457332,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed, thanks",
      "created_at": "2024-10-31T15:13:23Z",
      "updated_at": "2024-10-31T15:13:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824652156",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652156"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652216",
      "pull_request_review_id": 2408260861,
      "id": 1824652216,
      "node_id": "PRRC_kwDOABII585swfu4",
      "diff_hunk": "@@ -1174,6 +1174,7 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n+    assert(xor_key.size() == 8);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "23fc898514bf9696facbaff65251b62c362d214e",
      "in_reply_to_id": 1824444165,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Simplified, thanks",
      "created_at": "2024-10-31T15:13:25Z",
      "updated_at": "2024-10-31T15:13:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824652216",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652442",
      "pull_request_review_id": 2408261251,
      "id": 1824652442,
      "node_id": "PRRC_kwDOABII585swfya",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[Done](https://github.com/bitcoin/bitcoin/compare/33625e9d5327263c273583d7b3fe2f3114ebf12e..a5cad729c76cafa047a2b1897595669ae9b2b0d5) both, thanks, good observation about the negation",
      "created_at": "2024-10-31T15:13:34Z",
      "updated_at": "2024-10-31T15:16:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824652442",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824655597",
      "pull_request_review_id": 2408266168,
      "id": 1824655597,
      "node_id": "PRRC_kwDOABII585swgjt",
      "diff_hunk": "@@ -1174,7 +1174,11 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    assert(xor_key.size() == 8);\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), 8);\n+    xor_key.fill(std::byte{0});",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824438833,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed in the end, not that important",
      "created_at": "2024-10-31T15:15:21Z",
      "updated_at": "2024-10-31T15:15:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824655597",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824655597"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1180,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824697175",
      "pull_request_review_id": 2408330350,
      "id": 1824697175,
      "node_id": "PRRC_kwDOABII585swqtX",
      "diff_hunk": "@@ -235,7 +262,7 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Single character key",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "850214ffd9f56e887a18d0428d5881e6c1ee8652",
      "in_reply_to_id": 1824457332,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(Should be done in the initial commit which invalidates the comments IMO).",
      "created_at": "2024-10-31T15:39:42Z",
      "updated_at": "2024-10-31T16:00:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824697175",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824697175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824712214",
      "pull_request_review_id": 2408330350,
      "id": 1824712214,
      "node_id": "PRRC_kwDOABII585swuYW",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "My point about moving the negation and changing the name made more sense in the context of keeping it inside the `if`-block. If you are open to moving it out, I'd say it's better to keep the original `key_exists` name and original negation to avoid the churn and make it easier to review.\r\n\r\n(Realized another reason for not having it inside the `if`-block is that we are mutating `obfuscate_key_vector`, which is used after the block).",
      "created_at": "2024-10-31T15:48:14Z",
      "updated_at": "2024-10-31T16:00:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824712214",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824712214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824904589",
      "pull_request_review_id": 2408667619,
      "id": 1824904589,
      "node_id": "PRRC_kwDOABII585sxdWN",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I prefer the new `key_missing` part, it did confuse me once during development as well",
      "created_at": "2024-10-31T17:43:55Z",
      "updated_at": "2024-10-31T17:43:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824904589",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824904589"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837156020",
      "pull_request_review_id": 2428114068,
      "id": 1837156020,
      "node_id": "PRRC_kwDOABII585tgMa0",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": 135,
      "original_position": 135,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Let's not add bloat for this case.\r\n```suggestion\r\n        ds.Xor(0xffffffffffffffff);\r\n```",
      "created_at": "2024-11-11T20:26:07Z",
      "updated_at": "2024-11-11T21:49:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837156020",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837156020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 301,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837161349",
      "pull_request_review_id": 2428114068,
      "id": 1837161349,
      "node_id": "PRRC_kwDOABII585tgNuF",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);\n         BOOST_CHECK_EQUAL(\"\\xf0\\x0f\"s, ds.str());\n     }\n \n-    // Multi character key\n-\n     in.clear();\n     in.push_back(std::byte{0xf0});\n     in.push_back(std::byte{0x0f});\n \n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff, 0x0f});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": 152,
      "original_position": 152,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should work regardless of endianness.\r\n```suggestion\r\n        ds.Xor(0xff0fff0fff0fff0f);\r\n```",
      "created_at": "2024-11-11T20:32:36Z",
      "updated_at": "2024-11-11T21:49:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837161349",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837161349"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 315,
      "original_line": 315,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837163332",
      "pull_request_review_id": 2428114068,
      "id": 1837163332,
      "node_id": "PRRC_kwDOABII585tgONE",
      "diff_hunk": "@@ -14,16 +14,76 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[](std::span<std::byte> write, const uint64_t key, FastRandomContext& rng) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + rng.randrange(write.size() - offset)};\n+            util::Xor(write.subspan(offset, chunk_size), key, offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const std::vector original{rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), 8);\n+\n+        apply_random_xor_chunks(roundtrip, key, rng);\n+\n+        const bool all_zero = (key == 0) || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);\n+        BOOST_CHECK_EQUAL(original != roundtrip, !all_zero);\n+\n+        apply_random_xor_chunks(roundtrip, key, rng);\n+        BOOST_CHECK(original == roundtrip);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(xor_bytes_reference)\n+{\n+    auto expected_xor{[](std::span<std::byte> write, const std::span<const std::byte> key, size_t key_offset) {\n+        for (auto& b : write) {\n+            b ^= key[key_offset++ % key.size()];\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const size_t key_offset{rng.randrange(3 * 8U)}; // Should wrap around\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), 8);\n+\n+        std::vector expected{rng.randbytes<std::byte>(write_size)};\n+        std::vector actual{expected};\n+\n+        expected_xor(expected, key_bytes, key_offset);\n+        util::Xor(actual, key, key_offset);\n+\n+        BOOST_CHECK_EQUAL_COLLECTIONS(expected.begin(), expected.end(), actual.begin(), actual.end());\n+    }\n+}\n+\n BOOST_AUTO_TEST_CASE(xor_file)\n {\n     fs::path xor_path{m_args.GetDataDirBase() / \"test_xor.bin\"};\n     auto raw_file{[&](const auto& mode) { return fsbridge::fopen(xor_path, mode); }};\n     const std::vector<uint8_t> test1{1, 2, 3};\n     const std::vector<uint8_t> test2{4, 5};\n-    const std::vector<std::byte> xor_pat{std::byte{0xff}, std::byte{0x00}};\n+    const std::vector xor_pat{std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}};\n+    uint64_t xor_key;\n+    std::memcpy(&xor_key, xor_pat.data(), 8);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    const uint64_t xor_pat{0xff00ff00ff00ff00};\r\n```",
      "created_at": "2024-11-11T20:35:09Z",
      "updated_at": "2024-11-11T21:49:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837163332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837163332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 80,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837215954",
      "pull_request_review_id": 2428114068,
      "id": 1837215954,
      "node_id": "PRRC_kwDOABII585tgbDS",
      "diff_hunk": "@@ -254,24 +254,22 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    obfuscate_key = 0; // Needed for unobfuscated Read\r\n```",
      "created_at": "2024-11-11T21:19:05Z",
      "updated_at": "2024-11-11T21:49:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837215954",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837215954"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837227061",
      "pull_request_review_id": 2428114068,
      "id": 1837227061,
      "node_id": "PRRC_kwDOABII585tgdw1",
      "diff_hunk": "@@ -58,15 +58,19 @@ bool LoadMempool(CTxMemPool& pool, const fs::path& load_path, Chainstate& active\n     try {\n         uint64_t version;\n         file >> version;\n-        std::vector<std::byte> xor_key;\n         if (version == MEMPOOL_DUMP_VERSION_NO_XOR_KEY) {\n-            // Leave XOR-key empty\n+            file.SetXor(0);\n         } else if (version == MEMPOOL_DUMP_VERSION) {\n-            file >> xor_key;\n+            std::vector<std::byte> xor_key_vector(8);",
      "path": "src/node/mempool_persist.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Here and on line 185:\r\n```suggestion\r\n            std::vector<std::byte> xor_key_vector{8};\r\n```",
      "created_at": "2024-11-11T21:27:41Z",
      "updated_at": "2024-11-11T21:49:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837227061",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837227061"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837235546",
      "pull_request_review_id": 2428114068,
      "id": 1837235546,
      "node_id": "PRRC_kwDOABII585tgf1a",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (; write.size() >= 8; write = write.subspan(8)) {\n+        XorInt(write, key, 8);\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n-\n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    switch (write.size()) { // Specify the optimization categories\n+    case 0: break;\n+    case 1: XorInt(write, key, 1); break;\n+    case 2: XorInt(write, key, 2); break;\n+    case 4: XorInt(write, key, 4); break;\n+    default: XorInt(write, key, write.size());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 52,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Care to elaborate why we don't just have the `default` statement?",
      "created_at": "2024-11-11T21:36:52Z",
      "updated_at": "2024-11-11T21:49:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837235546",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837235546"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837249531",
      "pull_request_review_id": 2428237656,
      "id": 1837249531,
      "node_id": "PRRC_kwDOABII585tgjP7",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);\n         BOOST_CHECK_EQUAL(\"\\xf0\\x0f\"s, ds.str());\n     }\n \n-    // Multi character key\n-\n     in.clear();\n     in.push_back(std::byte{0xf0});\n     in.push_back(std::byte{0x0f});\n \n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff, 0x0f});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": 152,
      "original_position": 152,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837161349,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It doesn't (at least not for all test cases), I'm deliberately testing generating vectors and converting them instead of generating 64 bit values since that's what happens in production code (this should address multiple of your comments)",
      "created_at": "2024-11-11T21:56:27Z",
      "updated_at": "2024-11-11T21:56:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837249531",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837249531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 315,
      "original_line": 315,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837249755",
      "pull_request_review_id": 2428238002,
      "id": 1837249755,
      "node_id": "PRRC_kwDOABII585tgjTb",
      "diff_hunk": "@@ -14,16 +14,76 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[](std::span<std::byte> write, const uint64_t key, FastRandomContext& rng) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + rng.randrange(write.size() - offset)};\n+            util::Xor(write.subspan(offset, chunk_size), key, offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const std::vector original{rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), 8);\n+\n+        apply_random_xor_chunks(roundtrip, key, rng);\n+\n+        const bool all_zero = (key == 0) || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);\n+        BOOST_CHECK_EQUAL(original != roundtrip, !all_zero);\n+\n+        apply_random_xor_chunks(roundtrip, key, rng);\n+        BOOST_CHECK(original == roundtrip);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(xor_bytes_reference)\n+{\n+    auto expected_xor{[](std::span<std::byte> write, const std::span<const std::byte> key, size_t key_offset) {\n+        for (auto& b : write) {\n+            b ^= key[key_offset++ % key.size()];\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const size_t key_offset{rng.randrange(3 * 8U)}; // Should wrap around\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), 8);\n+\n+        std::vector expected{rng.randbytes<std::byte>(write_size)};\n+        std::vector actual{expected};\n+\n+        expected_xor(expected, key_bytes, key_offset);\n+        util::Xor(actual, key, key_offset);\n+\n+        BOOST_CHECK_EQUAL_COLLECTIONS(expected.begin(), expected.end(), actual.begin(), actual.end());\n+    }\n+}\n+\n BOOST_AUTO_TEST_CASE(xor_file)\n {\n     fs::path xor_path{m_args.GetDataDirBase() / \"test_xor.bin\"};\n     auto raw_file{[&](const auto& mode) { return fsbridge::fopen(xor_path, mode); }};\n     const std::vector<uint8_t> test1{1, 2, 3};\n     const std::vector<uint8_t> test2{4, 5};\n-    const std::vector<std::byte> xor_pat{std::byte{0xff}, std::byte{0x00}};\n+    const std::vector xor_pat{std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}};\n+    uint64_t xor_key;\n+    std::memcpy(&xor_key, xor_pat.data(), 8);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837163332,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Please see: https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837249531",
      "created_at": "2024-11-11T21:56:46Z",
      "updated_at": "2024-11-11T21:56:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837249755",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837249755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 80,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837251362",
      "pull_request_review_id": 2428240455,
      "id": 1837251362,
      "node_id": "PRRC_kwDOABII585tgjsi",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (; write.size() >= 8; write = write.subspan(8)) {\n+        XorInt(write, key, 8);\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n-\n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    switch (write.size()) { // Specify the optimization categories\n+    case 0: break;\n+    case 1: XorInt(write, key, 1); break;\n+    case 2: XorInt(write, key, 2); break;\n+    case 4: XorInt(write, key, 4); break;\n+    default: XorInt(write, key, write.size());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 52,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837235546,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "\"Specify the optimization categories\" means that the compiler will be able to optimize the cases where one of the parameters (the size) is a constant separately from each other. The default statement would work, but would be very slow, since the 1, 2 and 4 byte versions won't be specialized.",
      "created_at": "2024-11-11T21:59:04Z",
      "updated_at": "2024-11-11T21:59:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837251362",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837251362"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837251698",
      "pull_request_review_id": 2428240918,
      "id": 1837251698,
      "node_id": "PRRC_kwDOABII585tgjxy",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": 135,
      "original_position": 135,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837156020,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Please see: https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837249531",
      "created_at": "2024-11-11T21:59:29Z",
      "updated_at": "2024-11-11T21:59:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837251698",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837251698"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 301,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837269742",
      "pull_request_review_id": 2428267372,
      "id": 1837269742,
      "node_id": "PRRC_kwDOABII585tgoLu",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": 135,
      "original_position": 135,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837156020,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "All ones (binary) is not endian-sensitive. IMO it's okay for the tests to look slightly different to reduce this kind of noise.",
      "created_at": "2024-11-11T22:26:59Z",
      "updated_at": "2024-11-11T22:26:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837269742",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837269742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 301,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837270655",
      "pull_request_review_id": 2428270255,
      "id": 1837270655,
      "node_id": "PRRC_kwDOABII585tgoZ_",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": 135,
      "original_position": 135,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837156020,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I want to test the setup we have in production, these tests were very useful in revealing endianness problems.",
      "created_at": "2024-11-11T22:28:27Z",
      "updated_at": "2024-11-11T22:28:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837270655",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837270655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 301,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837275100",
      "pull_request_review_id": 2428276817,
      "id": 1837275100,
      "node_id": "PRRC_kwDOABII585tgpfc",
      "diff_hunk": "@@ -14,16 +14,76 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[](std::span<std::byte> write, const uint64_t key, FastRandomContext& rng) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + rng.randrange(write.size() - offset)};\n+            util::Xor(write.subspan(offset, chunk_size), key, offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const std::vector original{rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), 8);\n+\n+        apply_random_xor_chunks(roundtrip, key, rng);\n+\n+        const bool all_zero = (key == 0) || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);\n+        BOOST_CHECK_EQUAL(original != roundtrip, !all_zero);\n+\n+        apply_random_xor_chunks(roundtrip, key, rng);\n+        BOOST_CHECK(original == roundtrip);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(xor_bytes_reference)\n+{\n+    auto expected_xor{[](std::span<std::byte> write, const std::span<const std::byte> key, size_t key_offset) {\n+        for (auto& b : write) {\n+            b ^= key[key_offset++ % key.size()];\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const size_t key_offset{rng.randrange(3 * 8U)}; // Should wrap around\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), 8);\n+\n+        std::vector expected{rng.randbytes<std::byte>(write_size)};\n+        std::vector actual{expected};\n+\n+        expected_xor(expected, key_bytes, key_offset);\n+        util::Xor(actual, key, key_offset);\n+\n+        BOOST_CHECK_EQUAL_COLLECTIONS(expected.begin(), expected.end(), actual.begin(), actual.end());\n+    }\n+}\n+\n BOOST_AUTO_TEST_CASE(xor_file)\n {\n     fs::path xor_path{m_args.GetDataDirBase() / \"test_xor.bin\"};\n     auto raw_file{[&](const auto& mode) { return fsbridge::fopen(xor_path, mode); }};\n     const std::vector<uint8_t> test1{1, 2, 3};\n     const std::vector<uint8_t> test2{4, 5};\n-    const std::vector<std::byte> xor_pat{std::byte{0xff}, std::byte{0x00}};\n+    const std::vector xor_pat{std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}};\n+    uint64_t xor_key;\n+    std::memcpy(&xor_key, xor_pat.data(), 8);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837163332,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Feel like I'm imitating ChatGPT:\r\nAh, yes, I get now how the `memcpy()` interaction with endianness preserves the functioning of this specific test.",
      "created_at": "2024-11-11T22:35:30Z",
      "updated_at": "2024-11-11T22:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837275100",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837275100"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 80,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837279112",
      "pull_request_review_id": 2428282646,
      "id": 1837279112,
      "node_id": "PRRC_kwDOABII585tgqeI",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (; write.size() >= 8; write = write.subspan(8)) {\n+        XorInt(write, key, 8);\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n-\n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    switch (write.size()) { // Specify the optimization categories\n+    case 0: break;\n+    case 1: XorInt(write, key, 1); break;\n+    case 2: XorInt(write, key, 2); break;\n+    case 4: XorInt(write, key, 4); break;\n+    default: XorInt(write, key, write.size());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 52,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837235546,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "How about\r\n```suggestion\r\n    // Help optimizers along by sending constant parameter values into the inlined function,\r\n    // resulting in more efficient substitutions of memcpy() -> native pow-2 copy instructions.\r\n    switch (write.size()) {\r\n    case 0: break;\r\n    case 1: XorInt(write, key, 1); break;\r\n    case 2: XorInt(write, key, 2); break;\r\n    case 4: XorInt(write, key, 4); break;\r\n    default: XorInt(write, key, write.size());\r\n```",
      "created_at": "2024-11-11T22:42:01Z",
      "updated_at": "2024-11-11T22:42:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837279112",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837279112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837281249",
      "pull_request_review_id": 2428285919,
      "id": 1837281249,
      "node_id": "PRRC_kwDOABII585tgq_h",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);\n         BOOST_CHECK_EQUAL(\"\\xf0\\x0f\"s, ds.str());\n     }\n \n-    // Multi character key\n-\n     in.clear();\n     in.push_back(std::byte{0xf0});\n     in.push_back(std::byte{0x0f});\n \n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff, 0x0f});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": 152,
      "original_position": 152,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837161349,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[My bad](https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837275100).",
      "created_at": "2024-11-11T22:45:45Z",
      "updated_at": "2024-11-11T22:45:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837281249",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837281249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 315,
      "original_line": 315,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837293159",
      "pull_request_review_id": 2428303835,
      "id": 1837293159,
      "node_id": "PRRC_kwDOABII585tgt5n",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (; write.size() >= 8; write = write.subspan(8)) {\n+        XorInt(write, key, 8);\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n-\n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    switch (write.size()) { // Specify the optimization categories\n+    case 0: break;\n+    case 1: XorInt(write, key, 1); break;\n+    case 2: XorInt(write, key, 2); break;\n+    case 4: XorInt(write, key, 4); break;\n+    default: XorInt(write, key, write.size());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 52,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837235546,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I ended up with only `// Help the compiler specialize 1, 2 and 4 byte cases`, since the rest was just speculation",
      "created_at": "2024-11-11T23:07:23Z",
      "updated_at": "2024-11-11T23:07:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837293159",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837293159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837293203",
      "pull_request_review_id": 2428303904,
      "id": 1837293203,
      "node_id": "PRRC_kwDOABII585tgt6T",
      "diff_hunk": "@@ -58,15 +58,19 @@ bool LoadMempool(CTxMemPool& pool, const fs::path& load_path, Chainstate& active\n     try {\n         uint64_t version;\n         file >> version;\n-        std::vector<std::byte> xor_key;\n         if (version == MEMPOOL_DUMP_VERSION_NO_XOR_KEY) {\n-            // Leave XOR-key empty\n+            file.SetXor(0);\n         } else if (version == MEMPOOL_DUMP_VERSION) {\n-            file >> xor_key;\n+            std::vector<std::byte> xor_key_vector(8);",
      "path": "src/node/mempool_persist.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837227061,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Now I had to rename the PR :D",
      "created_at": "2024-11-11T23:07:28Z",
      "updated_at": "2024-11-11T23:11:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837293203",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837293203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837293258",
      "pull_request_review_id": 2428304003,
      "id": 1837293258,
      "node_id": "PRRC_kwDOABII585tgt7K",
      "diff_hunk": "@@ -254,24 +254,22 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837215954,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-11-11T23:07:34Z",
      "updated_at": "2024-11-11T23:07:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837293258",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837293258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867876958",
      "pull_request_review_id": 2475934654,
      "id": 1867876958,
      "node_id": "PRRC_kwDOABII585vVYpe",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (constexpr auto size = sizeof(uint64_t); write.size() >= size; write = write.subspan(size)) {\n+        XorInt(write, key, size);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Clearer name and source of `sizeof` expression.\r\n```suggestion\r\n    for (constexpr auto chunk_size = sizeof(key); write.size() >= chunk_size; write = write.subspan(chunk_size)) {\r\n        XorInt(write, key, chunk_size);\r\n```",
      "created_at": "2024-12-03T14:51:44Z",
      "updated_at": "2024-12-03T16:04:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1867876958",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867876958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 41,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867892424",
      "pull_request_review_id": 2475934654,
      "id": 1867892424,
      "node_id": "PRRC_kwDOABII585vVcbI",
      "diff_hunk": "@@ -3,22 +3,105 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <bench/data/xor_histogram.raw.h>\n #include <random.h>\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+std::pair<int32_t, int64_t> read_deltas(const std::byte* p)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    const uint64_t packed = ReadLE64(reinterpret_cast<const unsigned char*>(p));\n \n+    // Extract size (24 bits) and sign extend if negative\n+    int32_t size = packed & 0xFFFFFF;\n+    if (size & 0x800000) size |= 0xFF000000;\n+\n+    // Extract count (40 bits) and sign extend if negative\n+    int64_t count = packed >> 24;\n+    if (count & 0x8000000000) count |= 0xFFFFFF0000000000;\n+\n+    return {size, count};\n+}\n+\n+static void XorHistogram(benchmark::Bench& bench)\n+{\n+    // The histogram represents util::Xor method's write.size() histograms for the first 860k blocks\n+    // aggregated and encoded with https://gist.github.com/l0rinc/a44da845ad32ec89c30525507cdd28ee\n+    std::vector<std::pair<uint64_t, uint64_t>> histogram;\n+\n+    int64_t prev_size{0};\n+    int64_t prev_count{0};\n+    int64_t max_count{0};\n+\n+    // Read 8-byte chunks containing both deltas\n+    using namespace benchmark::data;\n+    for (size_t i{0}; i < xor_histogram.size(); i += 8) {\n+        const auto [size_delta, count_delta] = read_deltas(xor_histogram.data() + i);\n+        prev_size += size_delta;\n+        prev_count += count_delta;\n+\n+        histogram.emplace_back(prev_size, prev_count);\n+        max_count = std::max(max_count, prev_count);\n+    }\n+    assert(max_count == 47'584'838'861); // 1 byte vectors are most frequent\n+    constexpr auto scaling_factor{1'000'000U}; // Scale to this many occurrences of 1 byte vectors\n+\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    const uint64_t max_pattern_size{histogram.back().first};\n+    assert(max_pattern_size == 3'992'470); // Largest vector in histogram\n+    const auto pattern{rng.randbytes<std::byte>(max_pattern_size)}; // Reuse random pattern since randbytes is slow\n+\n+    std::vector<std::vector<std::byte>> test_data;\n+    test_data.reserve(2'036'522);\n+    uint64_t total_bytes{0};\n+\n+    for (const auto& [size, count] : histogram) {\n+        const size_t scaled_count{static_cast<size_t>(std::ceil(static_cast<double>(count) / max_count * scaling_factor))};\n+\n+        total_bytes += scaled_count * size;\n+        for (size_t j{0}; j < scaled_count; ++j) {\n+            test_data.emplace_back(pattern.begin(), pattern.begin() + size);\n+        }\n+    }\n+    assert(total_bytes == 8'129'394'848); // ~8 GB of data\n+    std::ranges::shuffle(test_data, rng); // Make it more realistic & less predictable\n+\n+    std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+    uint64_t key;\n+    std::memcpy(&key, key_bytes.data(), 8);\n+\n+    size_t offset{0};\n+    bench.batch(total_bytes).unit(\"byte\").run([&] {\n+        for (auto& data : test_data) {\n+            util::Xor(data, key, offset++);\n+        }\n+        ankerl::nanobench::doNotOptimizeAway(test_data);\n+    });\n+}\n+\n+static void AutoFileXor(benchmark::Bench& bench)\n+{\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    const auto data{rng.randbytes<std::byte>(1'000'000)};\n+\n+    std::vector<std::byte> empty_key_bytes(8, std::byte{0}); // Test disabled xor\n+    uint64_t empty_key;\n+    std::memcpy(&empty_key, empty_key_bytes.data(), 8);\n+\n+    const fs::path test_path = fs::temp_directory_path() / \"xor_benchmark.dat\";\n+    AutoFile f{fsbridge::fopen(test_path, \"wb+\"), empty_key};\n     bench.batch(data.size()).unit(\"byte\").run([&] {\n-        util::Xor(data, key);\n+        f.Truncate(0);\n+        f << data;\n     });\n+    try { fs::remove(test_path); } catch (const fs::filesystem_error&) {\n+    }\n }\n \n-BENCHMARK(Xor, benchmark::PriorityLevel::HIGH);\n+BENCHMARK(XorHistogram, benchmark::PriorityLevel::LOW);\n+BENCHMARK(AutoFileXor, benchmark::PriorityLevel::LOW);",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 111,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Missing newline at EOF in latest version.",
      "created_at": "2024-12-03T15:00:38Z",
      "updated_at": "2024-12-03T16:04:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1867892424",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867892424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1075,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867942188",
      "pull_request_review_id": 2475934654,
      "id": 1867942188,
      "node_id": "PRRC_kwDOABII585vVoks",
      "diff_hunk": "@@ -3,22 +3,105 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <bench/data/xor_histogram.raw.h>\n #include <random.h>\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+std::pair<int32_t, int64_t> read_deltas(const std::byte* p)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    const uint64_t packed = ReadLE64(reinterpret_cast<const unsigned char*>(p));\n \n+    // Extract size (24 bits) and sign extend if negative\n+    int32_t size = packed & 0xFFFFFF;\n+    if (size & 0x800000) size |= 0xFF000000;\n+\n+    // Extract count (40 bits) and sign extend if negative\n+    int64_t count = packed >> 24;\n+    if (count & 0x8000000000) count |= 0xFFFFFF0000000000;\n+\n+    return {size, count};\n+}\n+\n+static void XorHistogram(benchmark::Bench& bench)\n+{\n+    // The histogram represents util::Xor method's write.size() histograms for the first 860k blocks\n+    // aggregated and encoded with https://gist.github.com/l0rinc/a44da845ad32ec89c30525507cdd28ee",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nits:\r\nAlthough there is precedent for adding references to gists, I'm not sure we should encourage it. Would have preferred a file in this repo's *contrib/* directory.\r\n\r\nWould also have preferred that it did the full calculation of the .tgz file instead of having a hard-coded array, computing it by looking at linearalized blocks on disk.",
      "created_at": "2024-12-03T15:28:11Z",
      "updated_at": "2024-12-03T16:04:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1867942188",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867942188"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873754498",
      "pull_request_review_id": 2485490826,
      "id": 1873754498,
      "node_id": "PRRC_kwDOABII585vrzmC",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (constexpr auto size = sizeof(uint64_t); write.size() >= size; write = write.subspan(size)) {\n+        XorInt(write, key, size);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": 1867876958,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not convinced `chunk_size` is better - but will use `sizeof(key)` on next push",
      "created_at": "2024-12-06T17:31:16Z",
      "updated_at": "2024-12-06T17:31:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1873754498",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873754498"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 41,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873755480",
      "pull_request_review_id": 2485492458,
      "id": 1873755480,
      "node_id": "PRRC_kwDOABII585vrz1Y",
      "diff_hunk": "@@ -3,22 +3,105 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <bench/data/xor_histogram.raw.h>\n #include <random.h>\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+std::pair<int32_t, int64_t> read_deltas(const std::byte* p)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    const uint64_t packed = ReadLE64(reinterpret_cast<const unsigned char*>(p));\n \n+    // Extract size (24 bits) and sign extend if negative\n+    int32_t size = packed & 0xFFFFFF;\n+    if (size & 0x800000) size |= 0xFF000000;\n+\n+    // Extract count (40 bits) and sign extend if negative\n+    int64_t count = packed >> 24;\n+    if (count & 0x8000000000) count |= 0xFFFFFF0000000000;\n+\n+    return {size, count};\n+}\n+\n+static void XorHistogram(benchmark::Bench& bench)\n+{\n+    // The histogram represents util::Xor method's write.size() histograms for the first 860k blocks\n+    // aggregated and encoded with https://gist.github.com/l0rinc/a44da845ad32ec89c30525507cdd28ee\n+    std::vector<std::pair<uint64_t, uint64_t>> histogram;\n+\n+    int64_t prev_size{0};\n+    int64_t prev_count{0};\n+    int64_t max_count{0};\n+\n+    // Read 8-byte chunks containing both deltas\n+    using namespace benchmark::data;\n+    for (size_t i{0}; i < xor_histogram.size(); i += 8) {\n+        const auto [size_delta, count_delta] = read_deltas(xor_histogram.data() + i);\n+        prev_size += size_delta;\n+        prev_count += count_delta;\n+\n+        histogram.emplace_back(prev_size, prev_count);\n+        max_count = std::max(max_count, prev_count);\n+    }\n+    assert(max_count == 47'584'838'861); // 1 byte vectors are most frequent\n+    constexpr auto scaling_factor{1'000'000U}; // Scale to this many occurrences of 1 byte vectors\n+\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    const uint64_t max_pattern_size{histogram.back().first};\n+    assert(max_pattern_size == 3'992'470); // Largest vector in histogram\n+    const auto pattern{rng.randbytes<std::byte>(max_pattern_size)}; // Reuse random pattern since randbytes is slow\n+\n+    std::vector<std::vector<std::byte>> test_data;\n+    test_data.reserve(2'036'522);\n+    uint64_t total_bytes{0};\n+\n+    for (const auto& [size, count] : histogram) {\n+        const size_t scaled_count{static_cast<size_t>(std::ceil(static_cast<double>(count) / max_count * scaling_factor))};\n+\n+        total_bytes += scaled_count * size;\n+        for (size_t j{0}; j < scaled_count; ++j) {\n+            test_data.emplace_back(pattern.begin(), pattern.begin() + size);\n+        }\n+    }\n+    assert(total_bytes == 8'129'394'848); // ~8 GB of data\n+    std::ranges::shuffle(test_data, rng); // Make it more realistic & less predictable\n+\n+    std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+    uint64_t key;\n+    std::memcpy(&key, key_bytes.data(), 8);\n+\n+    size_t offset{0};\n+    bench.batch(total_bytes).unit(\"byte\").run([&] {\n+        for (auto& data : test_data) {\n+            util::Xor(data, key, offset++);\n+        }\n+        ankerl::nanobench::doNotOptimizeAway(test_data);\n+    });\n+}\n+\n+static void AutoFileXor(benchmark::Bench& bench)\n+{\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    const auto data{rng.randbytes<std::byte>(1'000'000)};\n+\n+    std::vector<std::byte> empty_key_bytes(8, std::byte{0}); // Test disabled xor\n+    uint64_t empty_key;\n+    std::memcpy(&empty_key, empty_key_bytes.data(), 8);\n+\n+    const fs::path test_path = fs::temp_directory_path() / \"xor_benchmark.dat\";\n+    AutoFile f{fsbridge::fopen(test_path, \"wb+\"), empty_key};\n     bench.batch(data.size()).unit(\"byte\").run([&] {\n-        util::Xor(data, key);\n+        f.Truncate(0);\n+        f << data;\n     });\n+    try { fs::remove(test_path); } catch (const fs::filesystem_error&) {\n+    }\n }\n \n-BENCHMARK(Xor, benchmark::PriorityLevel::HIGH);\n+BENCHMARK(XorHistogram, benchmark::PriorityLevel::LOW);\n+BENCHMARK(AutoFileXor, benchmark::PriorityLevel::LOW);",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 111,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": 1867892424,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I still don't see the reason for keeping them, but I'll add it back on next push if it's important",
      "created_at": "2024-12-06T17:31:53Z",
      "updated_at": "2024-12-06T17:31:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1873755480",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873755480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1075,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873755804",
      "pull_request_review_id": 2485492840,
      "id": 1873755804,
      "node_id": "PRRC_kwDOABII585vrz6c",
      "diff_hunk": "@@ -3,22 +3,105 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <bench/data/xor_histogram.raw.h>\n #include <random.h>\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+std::pair<int32_t, int64_t> read_deltas(const std::byte* p)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    const uint64_t packed = ReadLE64(reinterpret_cast<const unsigned char*>(p));\n \n+    // Extract size (24 bits) and sign extend if negative\n+    int32_t size = packed & 0xFFFFFF;\n+    if (size & 0x800000) size |= 0xFF000000;\n+\n+    // Extract count (40 bits) and sign extend if negative\n+    int64_t count = packed >> 24;\n+    if (count & 0x8000000000) count |= 0xFFFFFF0000000000;\n+\n+    return {size, count};\n+}\n+\n+static void XorHistogram(benchmark::Bench& bench)\n+{\n+    // The histogram represents util::Xor method's write.size() histograms for the first 860k blocks\n+    // aggregated and encoded with https://gist.github.com/l0rinc/a44da845ad32ec89c30525507cdd28ee",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": 1867942188,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed",
      "created_at": "2024-12-06T17:32:02Z",
      "updated_at": "2024-12-06T17:32:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1873755804",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873755804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873760826",
      "pull_request_review_id": 2485501213,
      "id": 1873760826,
      "node_id": "PRRC_kwDOABII585vr1I6",
      "diff_hunk": "@@ -3,22 +3,105 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <bench/data/xor_histogram.raw.h>\n #include <random.h>\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+std::pair<int32_t, int64_t> read_deltas(const std::byte* p)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    const uint64_t packed = ReadLE64(reinterpret_cast<const unsigned char*>(p));\n \n+    // Extract size (24 bits) and sign extend if negative\n+    int32_t size = packed & 0xFFFFFF;\n+    if (size & 0x800000) size |= 0xFF000000;\n+\n+    // Extract count (40 bits) and sign extend if negative\n+    int64_t count = packed >> 24;\n+    if (count & 0x8000000000) count |= 0xFFFFFF0000000000;\n+\n+    return {size, count};\n+}\n+\n+static void XorHistogram(benchmark::Bench& bench)\n+{\n+    // The histogram represents util::Xor method's write.size() histograms for the first 860k blocks\n+    // aggregated and encoded with https://gist.github.com/l0rinc/a44da845ad32ec89c30525507cdd28ee\n+    std::vector<std::pair<uint64_t, uint64_t>> histogram;\n+\n+    int64_t prev_size{0};\n+    int64_t prev_count{0};\n+    int64_t max_count{0};\n+\n+    // Read 8-byte chunks containing both deltas\n+    using namespace benchmark::data;\n+    for (size_t i{0}; i < xor_histogram.size(); i += 8) {\n+        const auto [size_delta, count_delta] = read_deltas(xor_histogram.data() + i);\n+        prev_size += size_delta;\n+        prev_count += count_delta;\n+\n+        histogram.emplace_back(prev_size, prev_count);\n+        max_count = std::max(max_count, prev_count);\n+    }\n+    assert(max_count == 47'584'838'861); // 1 byte vectors are most frequent\n+    constexpr auto scaling_factor{1'000'000U}; // Scale to this many occurrences of 1 byte vectors\n+\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    const uint64_t max_pattern_size{histogram.back().first};\n+    assert(max_pattern_size == 3'992'470); // Largest vector in histogram\n+    const auto pattern{rng.randbytes<std::byte>(max_pattern_size)}; // Reuse random pattern since randbytes is slow\n+\n+    std::vector<std::vector<std::byte>> test_data;\n+    test_data.reserve(2'036'522);\n+    uint64_t total_bytes{0};\n+\n+    for (const auto& [size, count] : histogram) {\n+        const size_t scaled_count{static_cast<size_t>(std::ceil(static_cast<double>(count) / max_count * scaling_factor))};\n+\n+        total_bytes += scaled_count * size;\n+        for (size_t j{0}; j < scaled_count; ++j) {\n+            test_data.emplace_back(pattern.begin(), pattern.begin() + size);\n+        }\n+    }\n+    assert(total_bytes == 8'129'394'848); // ~8 GB of data\n+    std::ranges::shuffle(test_data, rng); // Make it more realistic & less predictable\n+\n+    std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+    uint64_t key;\n+    std::memcpy(&key, key_bytes.data(), 8);\n+\n+    size_t offset{0};\n+    bench.batch(total_bytes).unit(\"byte\").run([&] {\n+        for (auto& data : test_data) {\n+            util::Xor(data, key, offset++);\n+        }\n+        ankerl::nanobench::doNotOptimizeAway(test_data);\n+    });\n+}\n+\n+static void AutoFileXor(benchmark::Bench& bench)\n+{\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    const auto data{rng.randbytes<std::byte>(1'000'000)};\n+\n+    std::vector<std::byte> empty_key_bytes(8, std::byte{0}); // Test disabled xor\n+    uint64_t empty_key;\n+    std::memcpy(&empty_key, empty_key_bytes.data(), 8);\n+\n+    const fs::path test_path = fs::temp_directory_path() / \"xor_benchmark.dat\";\n+    AutoFile f{fsbridge::fopen(test_path, \"wb+\"), empty_key};\n     bench.batch(data.size()).unit(\"byte\").run([&] {\n-        util::Xor(data, key);\n+        f.Truncate(0);\n+        f << data;\n     });\n+    try { fs::remove(test_path); } catch (const fs::filesystem_error&) {\n+    }\n }\n \n-BENCHMARK(Xor, benchmark::PriorityLevel::HIGH);\n+BENCHMARK(XorHistogram, benchmark::PriorityLevel::LOW);\n+BENCHMARK(AutoFileXor, benchmark::PriorityLevel::LOW);",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 111,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": 1867892424,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-12-06T17:36:48Z",
      "updated_at": "2024-12-06T17:36:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1873760826",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873760826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1075,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873761004",
      "pull_request_review_id": 2485501480,
      "id": 1873761004,
      "node_id": "PRRC_kwDOABII585vr1Ls",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (constexpr auto size = sizeof(uint64_t); write.size() >= size; write = write.subspan(size)) {\n+        XorInt(write, key, size);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": 1867876958,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, kept the name",
      "created_at": "2024-12-06T17:36:57Z",
      "updated_at": "2024-12-06T17:36:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1873761004",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873761004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 41,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874417623",
      "pull_request_review_id": 2486500175,
      "id": 1874417623,
      "node_id": "PRRC_kwDOABII585vuVfX",
      "diff_hunk": "@@ -13,36 +13,56 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n+#include <util/check.h>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    Assume(key);\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    Assume(key);\n+    for (constexpr auto size{sizeof(key)}; write.size() >= size; write = write.subspan(size)) {\n+        XorInt(write, key, size);\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n-\n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    switch (write.size()) { // Help the compiler specialize 1, 2 and 4 byte cases\n+    case 0:  break;\n+    case 1:  XorInt(write, key, 1); break;\n+    case 2:  XorInt(write, key, 2); break;\n+    case 4:  XorInt(write, key, 4); break;\n+    default: XorInt(write, key, write.size());\n     }\n }\n+\n+inline uint64_t RotateKey(const uint64_t key, const size_t key_offset)\n+{\n+    Assume(key);\n+    size_t key_rotation{8 * key_offset};\n+    if (key_rotation % 64 == 0) return key;",
      "path": "src/streams.h",
      "position": 61,
      "original_position": 61,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`std::rotr` can handle it fine, so this can be removed. Also the codegen is better without this for some reason?",
      "created_at": "2024-12-07T13:37:30Z",
      "updated_at": "2024-12-10T13:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1874417623",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874417623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 58,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878083641",
      "pull_request_review_id": 2486500175,
      "id": 1878083641,
      "node_id": "PRRC_kwDOABII585v8Ug5",
      "diff_hunk": "@@ -1174,7 +1174,9 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), sizeof key);",
      "path": "src/node/blockstorage.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "original_commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I wonder if it wouldn't be better to have a class take care of construction, so that the memcpy is limited to one place. Something like:\r\n\r\n\r\n```cpp\r\nclass XorKey{\r\n uint64_t m_data;\r\n XorKey(std::span<std::byte, 8> sp);\r\n}\r\n```\r\n\r\nIIUC the compilers should still be able to treat this as an integral in codegen.",
      "created_at": "2024-12-10T13:20:27Z",
      "updated_at": "2024-12-10T13:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1878083641",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878083641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": 1177,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": 1178,
      "original_line": 1178,
      "side": "RIGHT"
    }
  ]
}