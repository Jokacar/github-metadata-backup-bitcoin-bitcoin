{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472",
    "id": 446470238,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDcwMjM4",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19472",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/19472.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/19472.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19472",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19472/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/655b1957470c39bcab64917747c9f467444bd809",
    "number": 19472,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "[net processing] Reduce cs_main scope in MaybeDiscourageAndDisconnect()",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The motivation for this PR is to reduce the scope of cs_main locking in misbehavior logic. It is the first set of commits from a larger branch to move the misbehavior data out of CNodeState and into a new struct that doesn't take cs_main.\r\n\r\nThere are some very minor behavior changes in this branch, such as:\r\n\r\n- Not checking for discouragement/disconnect in `ProcessMessages()` (and instead relying on the following check in `SendMessages()`)\r\n- Checking for discouragement/disconnect as the first action in `SendMessages()` (and not doing ping message sending first)\r\n- Continuing through `SendMessages()` if `MaybeDiscourageAndDisconnect()` doesn't disconnect the peer (rather than dropping out of `SendMessages()`",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-07-08T20:34:28Z",
    "updated_at": "2022-02-15T10:34:11Z",
    "closed_at": "2020-07-24T15:21:28Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-07-24T15:21:28Z",
    "merge_commit_sha": "40a04814d130dfc9131af3f568eb44533e2bcbfc",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jnewbery:2020-07-tidyup-maybediscourage",
      "ref": "2020-07-tidyup-maybediscourage",
      "sha": "655b1957470c39bcab64917747c9f467444bd809",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 68248485,
        "node_id": "MDEwOlJlcG9zaXRvcnk2ODI0ODQ4NQ==",
        "name": "bitcoin",
        "full_name": "jnewbery/bitcoin",
        "owner": {
          "login": "jnewbery",
          "id": 1063656,
          "node_id": "MDQ6VXNlcjEwNjM2NTY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jnewbery",
          "html_url": "https://github.com/jnewbery",
          "followers_url": "https://api.github.com/users/jnewbery/followers",
          "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
          "organizations_url": "https://api.github.com/users/jnewbery/orgs",
          "repos_url": "https://api.github.com/users/jnewbery/repos",
          "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jnewbery/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jnewbery/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jnewbery/bitcoin",
        "archive_url": "https://api.github.com/repos/jnewbery/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jnewbery/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jnewbery/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jnewbery/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jnewbery/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jnewbery/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jnewbery/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jnewbery/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jnewbery/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jnewbery/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jnewbery/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jnewbery/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jnewbery/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jnewbery/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jnewbery/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jnewbery/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jnewbery/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jnewbery/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jnewbery/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jnewbery/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jnewbery/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jnewbery/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jnewbery/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jnewbery/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jnewbery/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jnewbery/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jnewbery/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jnewbery/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jnewbery/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jnewbery/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jnewbery/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jnewbery/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jnewbery/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jnewbery/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jnewbery/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jnewbery/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jnewbery/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jnewbery/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jnewbery/bitcoin/hooks",
        "svn_url": "https://github.com/jnewbery/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 219109,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-04-21T11:07:55Z",
        "created_at": "2016-09-14T22:29:05Z",
        "updated_at": "2021-07-06T16:23:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "505b4eda55a6f1592500ec9c2b9dad9e4adf92a2",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35476,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T20:20:41Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T18:21:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 78,
    "deletions": 63,
    "changed_files": 2,
    "commits": 4,
    "review_comments": 39,
    "comments": 12
  },
  "events": [
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-08T20:37:24Z",
      "updated_at": "2020-07-08T20:37:24Z",
      "source": {
        "issue": {
          "id": 646725848,
          "node_id": "MDU6SXNzdWU2NDY3MjU4NDg=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19398",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19398/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19398/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19398/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/19398",
          "number": 19398,
          "state": "closed",
          "state_reason": "completed",
          "title": "Move remaining application layer data to net processing",
          "body": "The application layer is any data that is transmitted within P2P message payloads, and the processing of that data. Examples are tx inventory, addr gossiping, ping/pong processing.\r\n\r\n`CNode` currently contains many data and function members that are concerned with the application layer. These should be moved into net processing, so that `CNode` is only concerned with the network layer (sending/receiving bytes, keeping statistics, eviction logic, etc).\r\n\r\nOne blocker to moving these is that the existing peer data structure in net processing is `CNodeState`, which is guarded by cs_main. Moving all application layer data into `CNodeState` would expand where we need to take and hold cs_main locks. Instead, we should create a new data structure in net processing called `Peer` which doesn't require a cs_main lock, and move the application layer data there.\r\n\r\nhttps://github.com/jnewbery/bitcoin/tree/2020-06-cnode-comments is a move/comment only branch that re-orders the `CNode` data members into logical groups and adds comments for each member, including TODOs for members that should be moved to net processing. The branch isn't intended for merging, but is a guide for what I think needs to change in `CNode`.\r\n\r\nhttps://github.com/jnewbery/bitcoin/tree/2020-06-cs-main-split is a branch that implements `Peer` and starts moving application layer data into that structure. I intend to peel off commits from that branch into separate PRs. That branch also starts moving data that doesn't require the cs_main lock from `CNodeState` into `Peer`. Longer term, I believe almost all `CNodeState` data can be moved into `Peer`, greatly reducing the scope that cs_main locks are held in net processing.\r\n\r\nAny help reviewing or implementing these changes would be very much appreciated!\r\n\r\nPRs:\r\n\r\n- [x] #19219 Replace automatic bans with discouragement filter\r\n- [x] #19472 Reduce cs_main scope in MaybeDiscourageAndDisconnect()\r\n- [x] #19583 clean up Misbehaving()\r\n- [x] #19607 Add Peer struct for per-peer data in net processing\r\n- [x] #19910 Move peer_map to PeerManager\r\n- [x] #20624 Remove nStartingHeight check from block relay\r\n- [x] #19829 Move block inventory state to net_processing\r\n- [x] #20651 Make p2p recv buffer timeout 20 minutes for all peers\r\n- [x] #20811 Move net_processing implementation details out of header\r\n- [x] #20927 Clean up InactivityCheck()\r\n- [x] #20721 Move ping data to net_processing\r\n- [x] #21187 Only call PushAddress() from net_processing\r\n- [x] #21236 Extract `addr` send functionality into MaybeSendAddr()\r\n- [x] #21186 Move addr data into net_processing\r\n- [x] #21162 Move RelayTransaction() into PeerManager\r\n- [x] #21160 Move tx data into net_processing\r\n\r\n<details><summary><code>CNode</code> with comments. See TODO comments.</summary>\r\n\r\n```c++\r\n/** Information about a peer */\r\nclass CNode\r\n{\r\n    friend class CConnman;\r\n    friend struct ConnmanTestMsg;\r\n\r\npublic:\r\n    /** A semaphore limits the number of outbound and manual peers. This\r\n     *  CNode holds the grant until the connection is closed, at which point\r\n     *  it's released to allow another connection. */\r\n    CSemaphoreGrant grantOutbound;\r\n    /** Reference count to prevent the CNode from being deleted while there\r\n     *  are still references to it being held.\r\n     *  TODO: replace with std::shared_ptr */\r\n    std::atomic<int> nRefCount{0};\r\n\r\n    /** Socket mutex */\r\n    RecursiveMutex cs_hSocket;\r\n    /** Socket */\r\n    SOCKET hSocket GUARDED_BY(cs_hSocket);\r\n\r\n    /** Send buffer mutex */\r\n    RecursiveMutex cs_vSend;\r\n    /** Send buffer */\r\n    std::deque<std::vector<unsigned char>> vSendMsg GUARDED_BY(cs_vSend);\r\n    /** Total size of all vSendMsg entries */\r\n    size_t nSendSize{0};\r\n    /** Offset inside the first vSendMsg already sent */\r\n    size_t nSendOffset{0};\r\n    /** Total bytes sent to this peer */\r\n    uint64_t nSendBytes GUARDED_BY(cs_vSend){0};\r\n    /** Whether the send buffer is full and we should pause sending\r\n     *  data to this peer. */\r\n    std::atomic_bool fPauseSend{false};\r\n\r\n    /** Send processing mutex. Ensures that we don't enter SendMessages()\r\n     *  for this peer on multiple threads */\r\n    RecursiveMutex cs_sendProcessing;\r\n\r\n    /** Receive buffer mutex */\r\n    RecursiveMutex cs_vProcessMsg;\r\n    /** Buffer of deserialized net messages */\r\n    std::list<CNetMessage> vProcessMsg GUARDED_BY(cs_vProcessMsg);\r\n    /** Total size of receive buffer mutex */\r\n    size_t nProcessQueueSize{0} GUARDED_BY(cs_vProcessMsg);\r\n    /** Whether the receive buffer is full and we should pause receiving\r\n     *  data from this peer. */\r\n    std::atomic_bool fPauseRecv{false};\r\n\r\n    /** Receive buffer statistics mutex */\r\n    RecursiveMutex cs_vRecv;\r\n    /** Total bytes received from this peer */\r\n    uint64_t nRecvBytes GUARDED_BY(cs_vRecv){0};\r\n\r\n    /** Address of this peer */\r\n    const CAddress addr;\r\n    /** Bind address of our side of the connection */\r\n    const CAddress addrBind;\r\n    /** Mutex guarding the cleanSubVer field.\r\n     *  TODO: replace with atomic */\r\n    RecursiveMutex cs_SubVer;\r\n    /** Sanitized string of the user agent byte array we read from the wire.\r\n     *  This cleaned string can safely be logged or displayed.  */\r\n    std::string cleanSubVer GUARDED_BY(cs_SubVer){};\r\n    /** Unusued in actual processing, only present for backward compatibility at RPC/QT level */\r\n    bool m_legacyWhitelisted{false};\r\n\r\n    /** If this peer is being used as a short lived feeler. */\r\n    bool fFeeler{false}; \r\n    /** If this peer is being used to fetch addresses and then disconnect */\r\n    bool fOneShot{false};\r\n    /** If this peer is a manual connection added by command-line argument or RPC */\r\n    bool m_manual_connection{false};\r\n    /** If the connection with this peer was initiated by the peer */\r\n    const bool fInbound;\r\n\r\n    /** If the version-verack handshake has successfully completed. */\r\n    std::atomic_bool fSuccessfullyConnected{false};\r\n    /** Setting fDisconnect to true will cause the node to be disconnected the\r\n    / * next time DisconnectNodes() runs */\r\n    std::atomic_bool fDisconnect{false};\r\n\r\n    /** If this peer is a light client (doesn't serve blocks).\r\n     *  TODO: move this application layer data to net processing. */\r\n    bool fClient{false};\r\n    /** If this peer is 'limited' (can only serve recent blocks).\r\n     *  TODO: move this application layer data to net processing. */\r\n    bool m_limited_node{false};\r\n\r\n    /** Whether this peer is preferred for eviction */\r\n    bool m_prefer_evict{false};\r\n    /** The time of the last message sent to this peer. Used in inactivity checks */\r\n    std::atomic<int64_t> nLastSend{0};\r\n    /** The time of the last message received from this peer. Used in inactivity checks */\r\n    std::atomic<int64_t> nLastRecv{0};\r\n    /** Which netgroup this peer is in. Used in eviction logic */\r\n    const uint64_t nKeyedNetGroup;\r\n    /** Last time we accepted a block from this peer. Used in eviction logic */\r\n    std::atomic<int64_t> nLastBlockTime{0};\r\n    /** Last time we accepted a transaction from this peer. Used in eviction logic */\r\n    std::atomic<int64_t> nLastTXTime{0};\r\n    /** Best measured round-trip time for this peer. Used in eviction logic */\r\n    std::atomic<int64_t> nMinPingUsecTime{std::numeric_limits<int64_t>::max()};\r\n\r\n    /** The time that the connection with this node was established. Used in eviction logic */\r\n    const int64_t nTimeConnected;\r\n    /** The difference between the peer's clock and our own. Only used in logging */\r\n    std::atomic<int64_t> nTimeOffset{0};\r\n\r\n    /** The P2P version announced by the peer in its version message.\r\n     *  TODO: this is only used in the application layer. Move to net processing */\r\n    std::atomic<int> nRecvVersion{INIT_PROTO_VERSION};\r\n    /** The P2P version announced by the peer in its version message.\r\n     *  TODO: This seems to largely a duplicate of nRecvVersion. Remove. */\r\n    std::atomic<int> nVersion{0};\r\n    /** The supported services announced by the peer in its version message.\r\n     *  TODO: Move this application layer data to net processing. */\r\n    std::atomic<ServiceFlags> nServices{NODE_NONE};\r\n\r\n    /** Addresses to send to this peer.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::vector<CAddress> vAddrToSend;\r\n    /** Probabilistic filter of addresses that this peer already knows.\r\n     *  TODO: move this application layer data to net processing. */\r\n    const std::unique_ptr<CRollingBloomFilter> m_addr_known;\r\n    /** Whether a GETADDR request is pending from this node.\r\n     *  TODO: move this application layer data to net processing. */\r\n    bool fGetAddr{false};\r\n    /** Timestamp after which we should send the next addr message to this peer.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\r\n    /** Timestamp after which we should advertise our local address to this peer.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\r\n    /** If we've sent an initial ADDR message to this peer.\r\n     *  TODO: move this application layer data to net processing. */\r\n    bool fSentAddr{false};\r\n\r\n    /** Address relay mutex.\r\n     *  TODO: move this application layer data to net processing. */\r\n    RecursiveMutex cs_inventory;\r\n    /** List of block ids we still have announce.\r\n    / * There is no final sorting before sending, as they are always sent immediately\r\n    / * and in the order requested.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::vector<uint256> vInventoryBlockToSend GUARDED_BY(cs_inventory);\r\n    /** List of block hashes to relay in headers messages.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::vector<uint256> vBlockHashesToAnnounce GUARDED_BY(cs_inventory);\r\n    /** When the peer requests this block, we send an inv that\r\n      * triggers the peer to send a getblocks to fetch the next batch of\r\n      * inventory. Only used for peers that don't do headers-first syncing.\r\n      *  TODO: move this application layer data to net processing. */\r\n    uint256 hashContinue;\r\n    /** This peer's height, as announced in its version message.\r\n      *  TODO: move this application layer data to net processing. */\r\n    std::atomic<int> nStartingHeight{-1};\r\n\r\n    struct TxRelay {\r\n        /** bloom filter mutex */\r\n        mutable RecursiveMutex cs_filter;\r\n        /** We use fRelayTxes for two purposes -\r\n         *  a) it allows us to not relay tx invs before receiving the peer's version message\r\n         *  b) the peer may tell us in its version message that we should not relay tx invs\r\n         *     unless it loads a bloom filter. */\r\n        bool fRelayTxes GUARDED_BY(cs_filter){false};\r\n        /** BIP 31 bloom filter */\r\n        std::unique_ptr<CBloomFilter> pfilter PT_GUARDED_BY(cs_filter) GUARDED_BY(cs_filter){nullptr};\r\n\r\n        /** Transaction relay mutex */\r\n        mutable RecursiveMutex cs_tx_inventory;\r\n        /** Probabilistic filter of txids that the peer already knows */\r\n        CRollingBloomFilter filterInventoryKnown GUARDED_BY(cs_tx_inventory){50000, 0.000001};\r\n        /** Set of transaction ids we still have to announce.\r\n         * They are sorted by the mempool before relay, so the order is not important. */\r\n        std::set<uint256> setInventoryTxToSend;\r\n        /** Timestamp after which we should send the next transaction INV message to this peer */\r\n        std::chrono::microseconds nNextInvSend{0};\r\n\r\n        /** If the peer has a pending BIP 35 MEMPOOL request to us */\r\n        bool fSendMempool GUARDED_BY(cs_tx_inventory){false};\r\n        /** Last time a MEMPOOL request was serviced. */\r\n        std::atomic<std::chrono::seconds> m_last_mempool_req{std::chrono::seconds{0}};\r\n\r\n        /** Feefilter mutex */\r\n        RecursiveMutex cs_feeFilter;\r\n        /** Minimum fee rate with which to filter inv's to this node */\r\n        CAmount minFeeFilter GUARDED_BY(cs_feeFilter){0};\r\n        /** Last feefilter value we sent to the peer */\r\n        CAmount lastSentFeeFilter{0};\r\n        /** Timestamp after which we should send the next FEEFILTER message to this peer */\r\n        int64_t nextSendTimeFeeFilter{0};\r\n    };\r\n\r\n    /** Transaction relay data for this peer. If m_tx_relay == nullptr then we don't\r\n     *  relay transactions with this peer.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::unique_ptr<TxRelay> m_tx_relay;\r\n\r\n    /** List of inv items requested by this peer in a getdata message.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::deque<CInv> vRecvGetData;\r\n\r\n    /** The pong reply we're expecting, or 0 if no pong expected.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::atomic<uint64_t> nPingNonceSent{0};\r\n    /** Time (in usec) the last ping was sent, or 0 if no ping was ever sent.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::atomic<int64_t> nPingUsecStart{0};\r\n    /** Last measured ping round-trip time.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::atomic<int64_t> nPingUsecTime{0};\r\n    /** Whether a ping request is pending to this peer.\r\n     *  TODO: move this application layer data to net processing. */\r\n    std::atomic<bool> fPingQueued{false};\r\n\r\n    /** Orphan transactions to reconsider after the parent was accepted.\r\n     *  TODO: move this application layer data to a global in net processing. */\r\n    std::set<uint256> orphan_work_set;\r\n\r\nprivate:\r\n    /** Unique numeric identifier for this node */\r\n    const NodeId id;\r\n    /** Node name mutex\r\n     *  TODO: replace with atomic */\r\n    mutable RecursiveMutex cs_addrName;\r\n    /** Node name */\r\n    std::string addrName GUARDED_BY(cs_addrName);\r\n    /** This node's permission flags. */\r\n    NetPermissionFlags m_permissionFlags{ PF_NONE };\r\n    /** addrLocal mutex\r\n     *  TODO: replace with atomic */\r\n    mutable RecursiveMutex cs_addrLocal;\r\n    /** Our address, as reported by the peer */\r\n    CService addrLocal GUARDED_BY(cs_addrLocal);\r\n\r\n    /** Random nonce sent in our VERSION message to detect connecting to ourselves.\r\n     *  TODO: move this application layer data to net processing */\r\n    const uint64_t nLocalHostNonce;\r\n    /** Services offered to this peer.\r\n     *\r\n     * This is supplied by the parent CConnman during peer connection\r\n     * (CConnman::ConnectNode()) from its attribute of the same name.\r\n     *\r\n     * This is const because there is no protocol defined for renegotiating\r\n     * services initially offered to a peer. The set of local services we\r\n     * offer should not change after initialization.\r\n     *\r\n     * An interesting example of this is NODE_NETWORK and initial block\r\n     * download: a node which starts up from scratch doesn't have any blocks\r\n     * to serve, but still advertises NODE_NETWORK because it will eventually\r\n     * fulfill this role after IBD completes. P2P code is written in such a\r\n     * way that it can gracefully handle peers who don't make good on their\r\n     * service advertisements.\r\n     *\r\n     * TODO: move this application layer data to net processing. */\r\n    const ServiceFlags nLocalServices;\r\n    /** Our starting height that we advertised to this node in our VERSION message.\r\n     * TODO: this value is not used after sending the version message. We can remove this field. */\r\n    const int nMyStartingHeight;\r\n    /** The version that we advertised to the peer in our VERSION message.\r\n     *  TODO: move this application layer data to net processing */\r\n    int nSendVersion{0};\r\n\r\n    /** Deserializer for messages received over the network. This is a derived\r\n     * class of TransportDeserializer based on the P2P version used with this\r\n     * peer. */\r\n    std::unique_ptr<TransportDeserializer> m_deserializer;\r\n    /** Serializer for messages sent over the network. This is a derived\r\n     * class of TransportDeserializer based on the P2P version used with this\r\n     * peer. */\r\n    std::unique_ptr<TransportSerializer> m_serializer;\r\n\r\n    /** Temporary buffer used by the SocketHandler thread for received messages,\r\n     *  before they're pushed onto the vProcessMsg buffer. */\r\n    std::list<CNetMessage> vRecvMsg;\r\n\r\n    /** Statistics of bytes sent to this peer, broken out by message type */\r\n    mapMsgCmdSize mapSendBytesPerMsgCmd GUARDED_BY(cs_vSend);\r\n    /** Statistics of bytes received from this peer, broken out by message type */\r\n    mapMsgCmdSize mapRecvBytesPerMsgCmd GUARDED_BY(cs_vRecv);\r\n\r\npublic:\r\n    CNode(NodeId id, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn, SOCKET hSocketIn,\r\n          const CAddress &addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn,\r\n          const CAddress &addrBindIn, const std::string &addrNameIn = \"\",\r\n          bool fInboundIn = false, bool block_relay_only = false);\r\n    ~CNode();\r\n    CNode(const CNode&) = delete;\r\n    CNode& operator=(const CNode&) = delete;\r\n\r\n    NodeId GetId() const {\r\n        return id;\r\n    }\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    uint64_t GetLocalNonce() const {return nLocalHostNonce;}\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    int GetMyStartingHeight() const {return nMyStartingHeight;}\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    ServiceFlags GetLocalServices() const { return nLocalServices; }\r\n\r\n    /** TODO: move these application layer functions to net processing */\r\n    void SetRecvVersion(int nVersionIn) { nRecvVersion = nVersionIn; }\r\n    int GetRecvVersion() const { return nRecvVersion; }\r\n    void SetSendVersion(int nVersionIn);\r\n    int GetSendVersion() const;\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    bool IsAddrRelayPeer() const { return m_addr_known != nullptr; }\r\n\r\n    /** TODO: Replace with std::shared_ptr refcounts */\r\n    int GetRefCount() const\r\n    {\r\n        assert(nRefCount >= 0);\r\n        return nRefCount;\r\n    }\r\n\r\n    CNode* AddRef()\r\n    {\r\n        nRefCount++;\r\n        return this;\r\n    }\r\n\r\n    void Release()\r\n    {\r\n        nRefCount--;\r\n    }\r\n\r\n    bool ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete);\r\n\r\n    CService GetAddrLocal() const;\r\n    //! May not be called more than once\r\n    void SetAddrLocal(const CService& addrLocalIn);\r\n\r\n    std::string GetAddrName() const;\r\n    //! Sets the addrName only if it was not previously set\r\n    void MaybeSetAddrName(const std::string& addrNameIn);\r\n\r\n    bool HasPermission(NetPermissionFlags permission) const {\r\n        return NetPermissions::HasFlag(m_permissionFlags, permission);\r\n    }\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    void AddAddressKnown(const CAddress& _addr)\r\n    {\r\n        assert(m_addr_known);\r\n        m_addr_known->insert(_addr.GetKey());\r\n    }\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    void PushAddress(const CAddress& _addr, FastRandomContext &insecure_rand)\r\n    {\r\n        // Known checking here is only to save space from duplicates.\r\n        // SendMessages will filter it again for knowns that were added\r\n        // after addresses were pushed.\r\n        assert(m_addr_known);\r\n        if (_addr.IsValid() && !m_addr_known->contains(_addr.GetKey())) {\r\n            if (vAddrToSend.size() >= MAX_ADDR_TO_SEND) {\r\n                vAddrToSend[insecure_rand.randrange(vAddrToSend.size())] = _addr;\r\n            } else {\r\n                vAddrToSend.push_back(_addr);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    void AddInventoryKnown(const CInv& inv)\r\n    {\r\n        if (m_tx_relay != nullptr) {\r\n            LOCK(m_tx_relay->cs_tx_inventory);\r\n            m_tx_relay->filterInventoryKnown.insert(inv.hash);\r\n        }\r\n    }\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    void PushTxInventory(const uint256& hash)\r\n    {\r\n        if (m_tx_relay == nullptr) return;\r\n        LOCK(m_tx_relay->cs_tx_inventory);\r\n        if (!m_tx_relay->filterInventoryKnown.contains(hash)) {\r\n            m_tx_relay->setInventoryTxToSend.insert(hash);\r\n        }\r\n    }\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    void PushBlockInventory(const uint256& hash)\r\n    {\r\n        LOCK(cs_inventory);\r\n        vInventoryBlockToSend.push_back(hash);\r\n    }\r\n\r\n    /** TODO: move this application layer function to net processing */\r\n    void PushBlockHash(const uint256 &hash)\r\n    {\r\n        LOCK(cs_inventory);\r\n        vBlockHashesToAnnounce.push_back(hash);\r\n    }\r\n\r\n    void CloseSocketDisconnect();\r\n\r\n    void copyStats(CNodeStats &stats, const std::vector<bool> &m_asmap);\r\n};\r\n```\r\n</details>",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 24,
          "closed_at": "2022-06-20T11:15:48Z",
          "created_at": "2020-06-27T17:58:34Z",
          "updated_at": "2023-06-20T10:07:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "renamed",
      "id": 3526937387,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzUyNjkzNzM4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3526937387",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-08T20:38:08Z",
      "rename": {
        "from": "[net processing] Reduce cs_main scope MaybeDiscourageAndDisconnect()",
        "to": "[net processing] Reduce cs_main scope in MaybeDiscourageAndDisconnect()"
      }
    },
    {
      "event": "labeled",
      "id": 3527133801,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM1MjcxMzM4MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3527133801",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-08T21:39:31Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 655810542,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTgxMDU0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/655810542",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-08T23:32:06Z",
      "updated_at": "2020-07-23T07:02:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19316 ([net] Cleanup logic around connection types by amitiuttarwar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-655810542",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19472"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3528065415,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUyODA2NTQxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3528065415",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T05:46:40Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T08:59:56Z",
      "updated_at": "2020-07-09T08:59:56Z",
      "source": {
        "issue": {
          "id": 599797298,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDAzMzY0MDY0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18638",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18638/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18638/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18638/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18638",
          "number": 18638,
          "state": "closed",
          "state_reason": null,
          "title": "net: Use mockable time for ping/pong, add tests",
          "body": "Switch `CNode::m_ping_start` and `CNetMessage::m_time` to mockable time, so that tests can be added.\r\n\r\nMockable time is also type-safe, since it uses `std::chrono`",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18638",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18638",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18638.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18638.patch"
          },
          "closed_at": "2020-07-10T14:09:42Z",
          "created_at": "2020-04-14T19:11:37Z",
          "updated_at": "2022-02-15T10:59:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T09:51:29Z",
      "updated_at": "2020-07-09T09:51:29Z",
      "source": {
        "issue": {
          "id": 541144232,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzU1ODU1OTc2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17785",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17785/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17785/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17785/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17785",
          "number": 17785,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Unify Send and Receive protocol versions",
          "body": "On master (6fef85bfa3cd7f76e83b8b57f9e4acd63eb664ec) `CNode` has two members to keep protocol version:\r\n- `nRecvVersion` for received messages\r\n- `nSendVersion` for messages to send\r\n\r\nAfter exchanging with `VERSION` and `VERACK` messages via protocol version `INIT_PROTO_VERSION`, both nodes set `nRecvVersion` _and_ `nSendVersion` to _the same_ value which is the greatest common protocol version.\r\n\r\nThis PR:\r\n- replaces two `CNode` members, `nRecvVersion` `nSendVersion`, with `m_greatest_common_version`\r\n- removes duplicated getter and setter\r\n\r\nThere is no change in behavior on the P2P network.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 31,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17785",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17785",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17785.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17785.patch"
          },
          "closed_at": "2020-09-21T22:16:18Z",
          "created_at": "2019-12-20T18:43:48Z",
          "updated_at": "2022-02-15T10:36:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 445463146,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NDYzMTQ2",
      "url": null,
      "actor": null,
      "commit_id": "5722b338d02be8de49b9e53664485c8cab4c526c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#pullrequestreview-445463146",
      "submitted_at": "2020-07-09T09:53:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3529089191,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUyOTA4OTE5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3529089191",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T10:38:30Z"
    },
    {
      "event": "reviewed",
      "id": 445524800,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NTI0ODAw",
      "url": null,
      "actor": null,
      "commit_id": "edd1a8a5c76a15174985fe0a1a876eba9e7ee33c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code LGTM 37e7265796102df35ec83b53fe9114e07d214910, some comments though.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#pullrequestreview-445524800",
      "submitted_at": "2020-07-09T11:35:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
    },
    {
      "event": "commented",
      "id": 656161599,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjE2MTU5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656161599",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T14:28:50Z",
      "updated_at": "2020-07-09T14:28:50Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @promag . I've addressed your comments.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-656161599",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19472"
    },
    {
      "event": "mentioned",
      "id": 3529980150,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzUyOTk4MDE1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3529980150",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T14:28:50Z"
    },
    {
      "event": "subscribed",
      "id": 3529980153,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1Mjk5ODAxNTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3529980153",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T14:28:50Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3529980295,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUyOTk4MDI5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3529980295",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T14:28:52Z"
    },
    {
      "event": "reviewed",
      "id": 445781296,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NzgxMjk2",
      "url": null,
      "actor": null,
      "commit_id": "c3dde2b52a641a8351a969c058d438f59edfeff0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#pullrequestreview-445781296",
      "submitted_at": "2020-07-09T16:29:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3530591625,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUzMDU5MTYyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3530591625",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T16:48:43Z"
    },
    {
      "event": "reviewed",
      "id": 445929332,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1OTI5MzMy",
      "url": null,
      "actor": null,
      "commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code Review ACK f54af5e58649d527d53990259f77892ad07f7ffa! Happy to see [`2020-06-cs-main-split`](https://github.com/jnewbery/bitcoin/commits/2020-06-cs-main-split) starting to be PR'd :relaxed:\r\n\r\n-----\r\n\r\nFor a minute, I was wondering if it'd be appropriate to move the `MaybeDiscourageAndDisconnect` up to `ThreadMessageHandler`, then realized that would involve changing `NetEventsInterface` so nope. ",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#pullrequestreview-445929332",
      "submitted_at": "2020-07-09T20:03:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
    },
    {
      "event": "reviewed",
      "id": 446317419,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MzE3NDE5",
      "url": null,
      "actor": null,
      "commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK f54af5e58649 with a few comments below.\r\n\r\n- Commit message in f54af5e58649: *If we don't disconnect a peer in MaybeDiscourageAndDisconnect because it has NOBAN permissions or it's a manual connection, continue SendMessages processing rather than exiting early* -> Was this a bit of a bug?  EDIT: the former behavior does not seem to have been an anti-DoS optimisation.\r\n\r\n- Commit message 38c96ef *Misbehaving()... is only called in ProcessMessages()* -> as it's called from MaybePunishNodeForBlock, MaybePunishNodeForTx, SendBlockTransactions, ProcessHeadersMessage, perhaps write \"Misbehaving() calls  originate from callers in ProcessMessages()...\"\r\n \r\nFeel free to ignore the suggestions below. ",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#pullrequestreview-446317419",
      "submitted_at": "2020-07-10T11:58:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3533749486,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUzMzc0OTQ4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3533749486",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T12:48:43Z"
    },
    {
      "event": "commented",
      "id": 656659501,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjY1OTUwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656659501",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T12:50:46Z",
      "updated_at": "2020-07-10T12:50:46Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @jonatack. I've addressed your inline comments. For your commit log comments:\r\n\r\n> Commit message in f54af5e: If we don't disconnect a peer in MaybeDiscourageAndDisconnect because it has NOBAN permissions or it's a manual connection, continue SendMessages processing rather than exiting early -> Was this a bit of a bug?\r\n\r\nNot a bug, but inefficient and confusing. I've updated the commit log to include that.\r\n\r\n> Commit message 38c96ef Misbehaving()... is only called in ProcessMessages() -> as it's called from MaybePunishNodeForBlock, MaybePunishNodeForTx, SendBlockTransactions, ProcessHeadersMessage, perhaps write \"Misbehaving() calls originate from callers in ProcessMessages()...\"\r\n\r\nI've now realized that this commit log was incorrect (see https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452819554). I've updated the log to be more accurate. Let me know what you think",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-656659501",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19472"
    },
    {
      "event": "mentioned",
      "id": 3533756803,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzUzMzc1NjgwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3533756803",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T12:50:46Z"
    },
    {
      "event": "subscribed",
      "id": 3533756805,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1MzM3NTY4MDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3533756805",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T12:50:46Z"
    },
    {
      "event": "labeled",
      "id": 3534397111,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM1MzQzOTcxMTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3534397111",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T15:35:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3534595914,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUzNDU5NTkxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3534595914",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T16:29:57Z"
    },
    {
      "event": "commented",
      "id": 656766880,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1Njc2Njg4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656766880",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T16:30:07Z",
      "updated_at": "2020-07-10T16:30:07Z",
      "author_association": "MEMBER",
      "body": "rebased",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-656766880",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19472"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYTFjMjNmOGQ0MDExNjc0MWYwZTI2Y2RmMjI2ODhmZDkxYzkyM2Zj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a1c23f8d40116741f0e26cdf22688fd91c923fc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1a1c23f8d40116741f0e26cdf22688fd91c923fc",
      "tree": {
        "sha": "4af484dc616b21654a000f9938e2554406c3af1c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4af484dc616b21654a000f9938e2554406c3af1c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c0b0b0240f986b88a31336db2e6906de0edc0816",
          "sha": "c0b0b0240f986b88a31336db2e6906de0edc0816",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c0b0b0240f986b88a31336db2e6906de0edc0816"
        }
      ],
      "message": "[net processing] Change cs_main TRY_LOCK to LOCK in SendMessages()\n\nThis was changed to TRY_LOCK in #1117 to fix a potential deadlock\nbetween cs_main and cs_vSend. cs_vSend was split into cs_vSend and\ncs_sendProcessing in #9535 (and cs_sendProcessing was changed from a\nTRY_LOCK to a LOCK in the same PR).\n\nSince cs_vSend can no longer be taken before cs_main, revert this to a\nLOCK().\n\nThis commit leaves part of the code with bad indentation. That is fixed\nby the next (whitespace change only) commit.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-07-10T17:20:07Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-15T14:15:08Z"
      },
      "sha": "1a1c23f8d40116741f0e26cdf22688fd91c923fc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMWQ1YTQyOGEyNGFmZTRmNjAwYmUyOWU5ZDBkM2JiNGM3MjBlODE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a1d5a428a24afe4f600be29e9d0d3bb4c720e816",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a1d5a428a24afe4f600be29e9d0d3bb4c720e816",
      "tree": {
        "sha": "0e200927bf28e57f5047c9c0a291ea0dd4cd984a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e200927bf28e57f5047c9c0a291ea0dd4cd984a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a1c23f8d40116741f0e26cdf22688fd91c923fc",
          "sha": "1a1c23f8d40116741f0e26cdf22688fd91c923fc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1a1c23f8d40116741f0e26cdf22688fd91c923fc"
        }
      ],
      "message": "[net processing] Fix bad indentation in SendMessages()\n\nHint for reviewers: review ignoring whitespace changes.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-07-10T17:20:07Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-15T14:19:56Z"
      },
      "sha": "a1d5a428a24afe4f600be29e9d0d3bb4c720e816"
    },
    {
      "event": "unlabeled",
      "id": 3534834765,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzUzNDgzNDc2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3534834765",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T17:45:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 446679764,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2Njc5NzY0",
      "url": null,
      "actor": null,
      "commit_id": "e874c6dd10e39a3d32a684e24d0400a2e5f5891a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#pullrequestreview-446679764",
      "submitted_at": "2020-07-10T20:22:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3536006359,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUzNjAwNjM1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3536006359",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T05:46:06Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDk3ODFlNTZkMmJkNmE2MWVjMDI3YTA5YzFkYjllZTFhNGFiZjJl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a49781e56d2bd6a61ec027a09c1db9ee1a4abf2e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a49781e56d2bd6a61ec027a09c1db9ee1a4abf2e",
      "tree": {
        "sha": "292214604d5f804e38c0cc17858f06f79d4dff5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/292214604d5f804e38c0cc17858f06f79d4dff5f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a1d5a428a24afe4f600be29e9d0d3bb4c720e816",
          "sha": "a1d5a428a24afe4f600be29e9d0d3bb4c720e816",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a1d5a428a24afe4f600be29e9d0d3bb4c720e816"
        }
      ],
      "message": "[net processing] Only call MaybeDiscourageAndDisconnect from SendMessages\n\n`nMisbehavior` is a tally in `CNodeState` that can be incremented from\nanywhere. That almost always happens inside a `ProcessMessages()` call\n(because we increment the misbehavior score when receiving a bad\nmessages from a peer), but not always. See, for example, the call to\n`MaybePunishNodeForBlock()` inside `BlockChecked()`, which is an\nasynchronous callback from the validation interface, executed on the\nscheduler thread.\n\nAs long as `MaybeDiscourageAndDisconnect()` is called regularly for the\nnode, then the misbehavior score exceeding the 100 threshold will\neventually result in the peer being punished. It doesn't really matter\nwhere that `MaybeDiscourageAndDisconnect()` happens, but it makes most\nsense in `SendMessages()` which is where we do general peer\nhousekeeping/maintenance.\n\nTherefore, remove the `MaybeDiscourageAndDisconnect()` call in\n`ProcessMessages()` and move the `MaybeDiscourageAndDisconnect()` call\nin `SendMessages()` to the top of the function. This moves it out of the\ncs_main lock scope, so take that lock directly inside\n`MaybeDiscourageAndDisconnect()`.\n\nHistoric note: `MaybeDiscourageAndDisconnect()` was previously\n`SendRejectsAndCheckIfBanned()`, and before that was just sending\nrejects.  All of those things required cs_main, which is why\n`MaybeDiscourageAndDisconnect()` was called after the ping logic.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-07-11T06:06:20Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-15T13:28:56Z"
      },
      "sha": "a49781e56d2bd6a61ec027a09c1db9ee1a4abf2e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3536017210,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUzNjAxNzIxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3536017210",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T06:06:31Z"
    },
    {
      "event": "commented",
      "id": 656998334,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1Njk5ODMzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656998334",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T06:10:38Z",
      "updated_at": "2020-07-11T06:10:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK a37331f per `git range-diff 505b4ed f54af5e a37331f`",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-656998334",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19472"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NTViMTk1NzQ3MGMzOWJjYWI2NDkxNzc0N2M5ZjQ2NzQ0NGJkODA5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/655b1957470c39bcab64917747c9f467444bd809",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/655b1957470c39bcab64917747c9f467444bd809",
      "tree": {
        "sha": "4147eb276e4789b5938ba89a325fe9e037bd046e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4147eb276e4789b5938ba89a325fe9e037bd046e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a49781e56d2bd6a61ec027a09c1db9ee1a4abf2e",
          "sha": "a49781e56d2bd6a61ec027a09c1db9ee1a4abf2e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a49781e56d2bd6a61ec027a09c1db9ee1a4abf2e"
        }
      ],
      "message": "[net processing] Continue SendMessages processing if not disconnecting peer\n\nIf we don't disconnect a peer in MaybeDiscourageAndDisconnect because it\nhas NOBAN permissions or it's a manual connection, continue SendMessages\nprocessing rather than exiting early.\n\nThe previous behaviour was that we'd miss the SendMessages processing on\nthis iteration of the MessageHandler loop. That's not a problem since\nSendMessages() would just be called again on the next iteration, but it\nwas slightly inefficient and confusing.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-07-11T06:13:05Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-15T15:33:14Z"
      },
      "sha": "655b1957470c39bcab64917747c9f467444bd809"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3536021188,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUzNjAyMTE4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3536021188",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T06:13:19Z"
    },
    {
      "event": "commented",
      "id": 657003084,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzAwMzA4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657003084",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T06:45:47Z",
      "updated_at": "2020-07-11T06:45:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK 655b195 per `git range-diff 505b4ed f54af5e 655b195`, code/commit messages review, a bit of code history, and debug build.\r\n\r\nMaybe (only if you have to retouch again):\r\n```diff\r\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\r\n {\r\n-    NodeId peer_id{pnode.GetId()};\r\n+    const NodeId peer_id{pnode.GetId()};\r\n```\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-657003084",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19472"
    },
    {
      "event": "reviewed",
      "id": 446790170,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NzkwMTcw",
      "url": null,
      "actor": null,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 655b195747 only some style-nits 🚁\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK 655b195747 only some style-nits 🚁\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUhTIwv/U4oykZ05nHVcYquBiztxhgGyKa9f8uaOypMsTYR6eEWe6L5jcOi7wDYc\r\n0YHHVelm/057+8BOihx6BtYoiStnOzewawMsh2CNXYZPxs9fEJyP5lbTRVLpRN2S\r\nGSwEnXTlrg6N8cZtncmfZRG6XSR9YwwLvS3FXwReTBr9DCE5SPeFz/kUzXin0z2Z\r\nmRG58cYJW4FiYSfRqvd34c3gI8bbJJC9Fz55tc8ZdgXVM9evVeUGQCr1F/cOTbYi\r\ncd0gAkMNbaUuEk3KzO0rK+1iK5oFNo+FCNcU8XG1i1au6tnd+fEBqWOxGJ/TA8VB\r\nm4eI3GHoC4chH4jaOskIYPgSkC5v4ubMV6lImvK3rvud67+5gi/2ZILLxLwjpdCN\r\nKAAKqJTQDGduGgcdt6Tezk1XGmwoJ+CV/sl2dH9INWrEWTsqy9ZQ2sr9uPRPSFva\r\nznujKqFX9MhNkm+tS7XCsRNuJRr3zJN5x4jq9K/tjcCUnfOcCYOJUCmQ2wMpWyBo\r\n2pMOadPJ\r\n=ZRAY\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `cedbe81897bd1c68d1b2c18d961a7b55b239097a710335927096fe5482ada3fd  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108cedbe81897bd1c68d1b2c18d961a7b55b239097a710335927096fe5482ada3fdf0102f2c7d05f5c7e50d0c91f6d81de0452b08fff010963ffa5604fdef26bcf4e47d8f51948108f1045f0983a6f0089e946396178991ec0083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010a349ab075c50e1f4f54b57ed450a4e5508f1045f0983a7f00883837a0dcd2c814a0083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010c2d8510c091664c4eaf706d61271d0f908f1045f0983a6f0089c01abffb30b7eda0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6df010fb145ee7128212185c12f53c3c89498108f1045f0983a6f008149d94caeaba678b0083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6d)\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#pullrequestreview-446790170",
      "submitted_at": "2020-07-11T09:18:24Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
    },
    {
      "event": "reviewed",
      "id": 446913397,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2OTEzMzk3",
      "url": null,
      "actor": null,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 655b1957470c39bcab64917747c9f467444bd809.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#pullrequestreview-446913397",
      "submitted_at": "2020-07-12T22:06:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-23T07:42:18Z",
      "updated_at": "2020-07-23T07:42:18Z",
      "source": {
        "issue": {
          "id": 640759547,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDM2MTEwNTIy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19316",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19316/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19316/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19316/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19316",
          "number": 19316,
          "state": "closed",
          "state_reason": null,
          "title": "[net] Cleanup logic around connection types",
          "body": "**This is part 1 of #19315, which enables the ability to test `outbound` and `block-relay-only` connections from the functional tests.** Please see that PR for more information of overall functionality.\r\n\r\n**This PR simplifies how we manage different connection types.** It introduces an enum with the various types of connections so we can explicitly define the connection type. The existing system relies on a series of independent flags, then has asserts scattered around to ensure that conflicting flags are not enabled at the same time. I find this approach to be both brittle and confusing. While making these changes, I found a small bug due to the silent assumptions. \r\n\r\nThis PR also proposes a rename from `OneShot` to `AddrFetch`. I find the name `OneShot` to be very confusing, especially when we also have `onetry` manual connections. Everyone I've talked to offline has agreed that the name is confusing, so I propose a potential alternative. I think this is a good opportunity for a rename since I'm creating an enum to explicitly define the connection types. \r\n(some context for the unfamiliar: `oneshot` or `addrfetch` connections are short-lived connections created on startup. They connect to the seed peers, send a `getaddr` to solicit addresses, then close the connection.)\r\n\r\nOverview of this PR: \r\n* rename `oneshot` to `addrfetch`\r\n* introduce `ConnectionType` enum \r\n* one by one, add different connection types to the enum \r\n* expose the `conn_type` on CNode, and use this to reduce reliance on flags (& asserts) \r\n* fix the bug in counting different type of connections \r\n* some additional cleanup to simplify logic and make expectations explicit/inclusive rather than implicit/exclusive. \r\n",
          "user": {
            "login": "amitiuttarwar",
            "id": 1500952,
            "node_id": "MDQ6VXNlcjE1MDA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitiuttarwar",
            "html_url": "https://github.com/amitiuttarwar",
            "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
            "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
            "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
            "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
            "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19316",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19316",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19316.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19316.patch"
          },
          "closed_at": "2020-08-12T02:02:35Z",
          "created_at": "2020-06-17T21:40:23Z",
          "updated_at": "2022-02-15T10:34:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "added_to_project",
      "id": 3581351317,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQzNTgxMzUxMzE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3581351317",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-23T19:10:18Z",
      "project_card": {
        "id": 42432140,
        "url": "https://api.github.com/projects/columns/cards/42432140",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "commented",
      "id": 663381734,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzM4MTczNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663381734",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T07:16:49Z",
      "updated_at": "2020-07-24T07:17:05Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @MarcoFalke . Rather than invalidate the three ACKs on this branch, I've added a commit to the next branch that addresses your comments: https://github.com/jnewbery/bitcoin/tree/2020-07-tidy-misbehavior.\r\n\r\nI think this PR may be ready for merge soon.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-663381734",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19472"
    },
    {
      "event": "mentioned",
      "id": 3582827520,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzU4MjgyNzUyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3582827520",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T07:16:49Z"
    },
    {
      "event": "subscribed",
      "id": 3582827528,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1ODI4Mjc1Mjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3582827528",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T07:16:49Z"
    },
    {
      "event": "commented",
      "id": 663383199,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzM4MzE5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663383199",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T07:21:18Z",
      "updated_at": "2020-07-24T07:21:18Z",
      "author_association": "MEMBER",
      "body": "@jonatack \r\n\r\n> Maybe (only if you have to retouch again):\r\n> \r\n> bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\r\n> ...\r\n\r\nDone in follow-up: https://github.com/jnewbery/bitcoin/commits/2020-07-tidy-misbehavior",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-663383199",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19472"
    },
    {
      "event": "mentioned",
      "id": 3582840002,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzU4Mjg0MDAwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3582840002",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T07:21:18Z"
    },
    {
      "event": "subscribed",
      "id": 3582840005,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1ODI4NDAwMDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3582840005",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T07:21:18Z"
    },
    {
      "event": "reviewed",
      "id": 454939498,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0OTM5NDk4",
      "url": null,
      "actor": null,
      "commit_id": "1a1c23f8d40116741f0e26cdf22688fd91c923fc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code Review ACK 655b195",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#pullrequestreview-454939498",
      "submitted_at": "2020-07-24T14:36:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
    },
    {
      "event": "merged",
      "id": 3584390851,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzU4NDM5MDg1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3584390851",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "40a04814d130dfc9131af3f568eb44533e2bcbfc",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40a04814d130dfc9131af3f568eb44533e2bcbfc",
      "created_at": "2020-07-24T15:21:28Z"
    },
    {
      "event": "closed",
      "id": 3584390866,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzU4NDM5MDg2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3584390866",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T15:21:29Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 3584421340,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQzNTg0NDIxMzQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3584421340",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T15:29:33Z"
    },
    {
      "event": "commented",
      "id": 663604540,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzYwNDU0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663604540",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T15:48:11Z",
      "updated_at": "2020-07-24T15:48:11Z",
      "author_association": "MEMBER",
      "body": "Thanks for review everyone. The next PR is #19583 (including the suggested fixups by @jonatack and @MarcoFalke)",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-663604540",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19472"
    },
    {
      "event": "mentioned",
      "id": 3584489826,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzU4NDQ4OTgyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3584489826",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T15:48:11Z"
    },
    {
      "event": "subscribed",
      "id": 3584489828,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1ODQ0ODk4Mjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3584489828",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T15:48:11Z"
    },
    {
      "event": "mentioned",
      "id": 3584489835,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzU4NDQ4OTgzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3584489835",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T15:48:11Z"
    },
    {
      "event": "subscribed",
      "id": 3584489839,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1ODQ0ODk4Mzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3584489839",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T15:48:11Z"
    },
    {
      "event": "referenced",
      "id": 3584581475,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1ODQ1ODE0NzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3584581475",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1188a57dd5811c5892c3ba818bab65c2de13efce",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/1188a57dd5811c5892c3ba818bab65c2de13efce",
      "created_at": "2020-07-24T16:12:55Z"
    },
    {
      "event": "removed_from_project",
      "id": 3584811755,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MzU4NDgxMTc1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3584811755",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T17:21:15Z",
      "project_card": {
        "id": 42432140,
        "url": "https://api.github.com/projects/columns/cards/42432140",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "commented",
      "id": 663666625,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzY2NjYyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663666625",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T18:10:57Z",
      "updated_at": "2020-07-24T18:10:57Z",
      "author_association": "MEMBER",
      "body": "I'm worried that we may end up spending a more significant amount of time in SendMessages now, whereas before it was opportunistic. Do you have any idea what the TRY_LOCK hit/miss ratio looked like for a busy node over a few days?\r\n\r\nI'd also be curious to know what the cpu usage/profile of a busy node looks like before/after this change.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-663666625",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19472"
    },
    {
      "event": "commented",
      "id": 663680030,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzY4MDAzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663680030",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T18:44:25Z",
      "updated_at": "2020-07-24T18:44:25Z",
      "author_association": "MEMBER",
      "body": "Thanks for looking at this @theuni!\r\n\r\n> Do you have any idea what the TRY_LOCK hit/miss ratio looked like for a busy node over a few days?\r\n\r\nI don't know exactly but I'd expect it to be very high (ie we almost always take the lock). What other threads are you expecting to be holding cs_main on a regular basis?",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-663680030",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19472"
    },
    {
      "event": "mentioned",
      "id": 3585072765,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzU4NTA3Mjc2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3585072765",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T18:44:25Z"
    },
    {
      "event": "subscribed",
      "id": 3585072767,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1ODUwNzI3Njc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3585072767",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-24T18:44:25Z"
    },
    {
      "event": "commented",
      "id": 663824176,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzgyNDE3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663824176",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-25T07:44:54Z",
      "updated_at": "2020-07-25T07:44:54Z",
      "author_association": "MEMBER",
      "body": "I guess this depends on the use case and what other modules are used that might aggressively poll cs_main. (GUI, wallet, indices, RPC, ...)",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-663824176",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19472"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-26T13:33:31Z",
      "updated_at": "2020-07-26T13:33:31Z",
      "source": {
        "issue": {
          "id": 665255837,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDU2MzU5MjM4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19583",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19583/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19583/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19583/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19583",
          "number": 19583,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: clean up Misbehaving()",
          "body": "This PR makes a few minor clean-ups to `Misbehaving()` in preparation to move it out of the cs_main lock.\r\n\r\nThere are very minor logging changes but otherwise no functional changes.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19583",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19583",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19583.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19583.patch"
          },
          "closed_at": "2020-07-28T07:15:51Z",
          "created_at": "2020-07-24T15:45:38Z",
          "updated_at": "2022-02-15T10:34:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-29T08:10:20Z",
      "updated_at": "2020-07-29T08:10:20Z",
      "source": {
        "issue": {
          "id": 666913502,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDU3Njc2ODI0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19607",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19607/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19607/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19607/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19607",
          "number": 19607,
          "state": "closed",
          "state_reason": null,
          "title": "[p2p] Add Peer struct for per-peer data in net processing",
          "body": "We currently have two structures for per-peer data:\r\n\r\n- `CNode` in net, which should just contain connection layer data (eg socket, send/recv buffers, etc), but currently also contains some application layer data (eg tx/block inventory).\r\n- `CNodeState` in net processing, which contains p2p application layer data, but requires cs_main to be locked for access.\r\n\r\nThis PR adds a third struct `Peer`, which is for p2p application layer data, and doesn't require cs_main. Eventually all application layer data from `CNode` should be moved to `Peer`, and any data that doesn't strictly require cs_main should be moved from `CNodeState` to `Peer` (probably all of `CNodeState` eventually).\r\n\r\n`Peer` objects are stored as shared pointers in a net processing global map `g_peer_map`, which is protected by `g_peer_mutex`. To use a `Peer` object, `g_peer_mutex` is locked, a copy of the shared pointer is taken, and the lock is released. Individual members of `Peer` are protected by different mutexes that guard related data. The lifetime of the `Peer` object is managed by the shared_ptr refcount.\r\n\r\nThis PR adds the `Peer` object and moves the misbehaving data from `CNodeState` to `Peer`. This allows us to immediately remove 15 `LOCK(cs_main)` instances.\r\n\r\nFor more motivation see #19398",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19607",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19607",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19607.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19607.patch"
          },
          "closed_at": "2020-08-28T18:29:45Z",
          "created_at": "2020-07-28T09:16:57Z",
          "updated_at": "2022-08-16T17:11:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 4174686002,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxNzQ2ODYwMDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4174686002",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7749e8d4b3f2ee7e039056f9d15ba373891c20c5",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/7749e8d4b3f2ee7e039056f9d15ba373891c20c5",
      "created_at": "2021-01-06T10:50:08Z"
    },
    {
      "event": "locked",
      "id": 6073809986,
      "node_id": "LOE_lADOABII584m9NJHzwAAAAFqBvxC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073809986",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:34:11Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452101343",
      "pull_request_review_id": 445463146,
      "id": 452101343,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEwMTM0Mw==",
      "diff_hunk": "@@ -3563,32 +3563,44 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 15,
      "original_position": 14,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "5722b338d02be8de49b9e53664485c8cab4c526c",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\nnet_processing.cpp:3574:9: error: acquiring mutex 'cs_main' that is already held [-Werror,-Wthread-safety-analysis]\r\n\r\n        LOCK(cs_main);\r\n\r\n        ^",
      "created_at": "2020-07-09T09:53:10Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452101343",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452101343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3569,
      "original_line": 3569,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452102686",
      "pull_request_review_id": 445464953,
      "id": 452102686,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEwMjY4Ng==",
      "diff_hunk": "@@ -3563,32 +3563,44 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 15,
      "original_position": 14,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "5722b338d02be8de49b9e53664485c8cab4c526c",
      "in_reply_to_id": 452101343,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You might have to use clang++ to reproduce locally",
      "created_at": "2020-07-09T09:55:34Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452102686",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452102686"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3569,
      "original_line": 3569,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452125782",
      "pull_request_review_id": 445496753,
      "id": 452125782,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyNTc4Mg==",
      "diff_hunk": "@@ -3563,32 +3563,44 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 15,
      "original_position": 14,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "5722b338d02be8de49b9e53664485c8cab4c526c",
      "in_reply_to_id": 452101343,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah. I didn't remove the lock annotation from the function declaration. Fixed.",
      "created_at": "2020-07-09T10:38:50Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452125782",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452125782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3569,
      "original_line": 3569,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452147247",
      "pull_request_review_id": 445524800,
      "id": 452147247,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0NzI0Nw==",
      "diff_hunk": "@@ -3881,8 +3883,6 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n     {\n         LOCK(cs_main);\n \n-        if (MaybeDiscourageAndDisconnect(*pto)) return true;",
      "path": "src/net_processing.cpp",
      "position": 133,
      "original_position": 22,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "edd1a8a5c76a15174985fe0a1a876eba9e7ee33c",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "edd1a8a5c76a15174985fe0a1a876eba9e7ee33c\r\n\r\nDo you have an idea why this wasn't in the top?",
      "created_at": "2020-07-09T11:23:44Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452147247",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452147247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3882,
      "original_line": 3882,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452149662",
      "pull_request_review_id": 445524800,
      "id": 452149662,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0OTY2Mg==",
      "diff_hunk": "@@ -3563,32 +3563,44 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    LOCK(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Log but don't disconnect\n+        LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n+        return false;\n+    } else if (pnode.m_manual_connection) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "37e7265796102df35ec83b53fe9114e07d214910",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "37e7265796102df35ec83b53fe9114e07d214910\r\n\r\nMaybe drop these `else` since you early return on each block.",
      "created_at": "2020-07-09T11:28:28Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452149662",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452149662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3588,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452150787",
      "pull_request_review_id": 445524800,
      "id": 452150787,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE1MDc4Nw==",
      "diff_hunk": "@@ -3563,32 +3563,44 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    LOCK(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main",
      "path": "src/net_processing.cpp",
      "position": 40,
      "original_position": 39,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "37e7265796102df35ec83b53fe9114e07d214910",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "37e7265796102df35ec83b53fe9114e07d214910\r\n\r\nnit, I only find this comment useful when the block is big enough.",
      "created_at": "2020-07-09T11:30:50Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452150787",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452150787"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3577,
      "original_line": 3577,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452151279",
      "pull_request_review_id": 445524800,
      "id": 452151279,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE1MTI3OQ==",
      "diff_hunk": "@@ -3563,32 +3563,44 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    LOCK(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Log but don't disconnect\n+        LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n+        return false;",
      "path": "src/net_processing.cpp",
      "position": 45,
      "original_position": 44,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "37e7265796102df35ec83b53fe9114e07d214910",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "37e7265796102df35ec83b53fe9114e07d214910\r\n\r\nNo test for this right?",
      "created_at": "2020-07-09T11:31:54Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452151279",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452151279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3582,
      "original_line": 3582,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452166851",
      "pull_request_review_id": 445550030,
      "id": 452166851,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE2Njg1MQ==",
      "diff_hunk": "@@ -3563,32 +3563,44 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 15,
      "original_position": 14,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "5722b338d02be8de49b9e53664485c8cab4c526c",
      "in_reply_to_id": 452101343,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Saw this warning as well @ 5722b338d. Now building at 37e726579.",
      "created_at": "2020-07-09T12:03:47Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452166851",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452166851"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3569,
      "original_line": 3569,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452238852",
      "pull_request_review_id": 445643932,
      "id": 452238852,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzODg1Mg==",
      "diff_hunk": "@@ -3881,8 +3883,6 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n     {\n         LOCK(cs_main);\n \n-        if (MaybeDiscourageAndDisconnect(*pto)) return true;",
      "path": "src/net_processing.cpp",
      "position": 133,
      "original_position": 22,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "edd1a8a5c76a15174985fe0a1a876eba9e7ee33c",
      "in_reply_to_id": 452147247,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Because it used to be `SendRejectsAndCheckIfBanned()`, and before that it was just sending rejects. Those required cs_main, which is taken after the ping processing at the top.\r\n\r\nI've added that explanation to the commit log.",
      "created_at": "2020-07-09T13:59:25Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452238852",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452238852"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3882,
      "original_line": 3882,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452258091",
      "pull_request_review_id": 445669667,
      "id": 452258091,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI1ODA5MQ==",
      "diff_hunk": "@@ -3563,32 +3563,44 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    LOCK(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Log but don't disconnect\n+        LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n+        return false;\n+    } else if (pnode.m_manual_connection) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "37e7265796102df35ec83b53fe9114e07d214910",
      "in_reply_to_id": 452149662,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree. That's much clearer.",
      "created_at": "2020-07-09T14:26:18Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452258091",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452258091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3588,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452258263",
      "pull_request_review_id": 445669902,
      "id": 452258263,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI1ODI2Mw==",
      "diff_hunk": "@@ -3563,32 +3563,44 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    LOCK(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main",
      "path": "src/net_processing.cpp",
      "position": 40,
      "original_position": 39,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "37e7265796102df35ec83b53fe9114e07d214910",
      "in_reply_to_id": 452150787,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's fair, but I don't think it does any harm.",
      "created_at": "2020-07-09T14:26:32Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452258263",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452258263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3577,
      "original_line": 3577,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452259600",
      "pull_request_review_id": 445671743,
      "id": 452259600,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI1OTYwMA==",
      "diff_hunk": "@@ -3563,32 +3563,44 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    LOCK(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Log but don't disconnect\n+        LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n+        return false;",
      "path": "src/net_processing.cpp",
      "position": 45,
      "original_position": 44,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "37e7265796102df35ec83b53fe9114e07d214910",
      "in_reply_to_id": 452151279,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems that feature_maxuploadtarget.py tests the `-noban` permission (by verifying that a peer stays connected after exceeding the banscore.",
      "created_at": "2020-07-09T14:28:28Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452259600",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452259600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3582,
      "original_line": 3582,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452343368",
      "pull_request_review_id": 445781296,
      "id": 452343368,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM0MzM2OA==",
      "diff_hunk": "@@ -3563,32 +3563,48 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Peer has the NOBAN permission flag - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n+        return false;\n+    }\n+    \n+    if (pnode.m_manual_connection) {\n+        // Peer is a manual connection - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n+        return false;\n+    }\n+    ",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "c3dde2b52a641a8351a969c058d438f59edfeff0",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The whitespace linter needs appeasing, looks like extra whitespace in lines 3589 and 3595.\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\n\r\n@@ -3573,16 +3582,18 @@ bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\r\n\r\n+\r\n\r\n+\r\n\r\n^---- failure generated from test/lint/lint-whitespace.sh\r\n```\r\n(which won't prevent me from reviewing tomorrow am, so no rush)",
      "created_at": "2020-07-09T16:29:56Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452343368",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452343368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3595,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452458981",
      "pull_request_review_id": 445929332,
      "id": 452458981,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ1ODk4MQ==",
      "diff_hunk": "@@ -3563,32 +3563,48 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "in_reply_to_id": null,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What about something along the lines of \"True if the peer was marked for disconnection in this function\"?",
      "created_at": "2020-07-09T20:03:25Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452458981",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452458981"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3569,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452467029",
      "pull_request_review_id": 445939726,
      "id": 452467029,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ2NzAyOQ==",
      "diff_hunk": "@@ -3563,32 +3563,48 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "in_reply_to_id": 452458981,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure. Happy to make that change if I need to retouch this PR.",
      "created_at": "2020-07-09T20:20:02Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452467029",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452467029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3569,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452778563",
      "pull_request_review_id": 446317419,
      "id": 452778563,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc3ODU2Mw==",
      "diff_hunk": "@@ -3563,32 +3563,48 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Peer has the NOBAN permission flag - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n+        return false;\n+    }\n+\n+    if (pnode.m_manual_connection) {\n+        // Peer is a manual connection - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n+        return false;\n+    }\n+\n+    if (pnode.addr.IsLocal()) {\n+        // Peer is on a local address. Disconnect this peer, but don't discourage the local address\n+        LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n+        pnode.fDisconnect = true;\n         return true;\n     }\n-    return false;\n+\n+    // Normal case: Disconnect the peer and discourage all nodes sharing the address\n+    LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "f54af5e nit suggestion while refactoring this function\r\n\r\n```diff\r\n@@ -3581,27 +3581,29 @@ bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\r\n         state.m_should_discourage = false;\r\n     } // cs_main\r\n \r\n+    std::string peer{pnode.addr.ToString()};\r\n\r\n-        LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\r\n+        LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", peer);\r\n \r\n-        LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\r\n+        LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", peer);\r\n \r\nlocal address\r\n-        LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\r\n+        LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", peer);\r\n \r\n-    LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\r\n+    LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", peer);\r\n```\r\n",
      "created_at": "2020-07-10T11:08:57Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452778563",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452778563"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3604,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452779171",
      "pull_request_review_id": 446317419,
      "id": 452779171,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc3OTE3MQ==",
      "diff_hunk": "@@ -3563,32 +3563,48 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Peer has the NOBAN permission flag - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "f54af5e58649d527d53990259f77892ad07f7ffa maybe log \"NOBAN|noban permission (flag)\"\r\n```suggestion\r\n        LogPrintf(\"Warning: not punishing peer with NOBAN permission %s!\\n\", pnode.addr.ToString());\r\n```",
      "created_at": "2020-07-10T11:10:22Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452779171",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452779171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3586,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452783772",
      "pull_request_review_id": 446317419,
      "id": 452783772,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc4Mzc3Mg==",
      "diff_hunk": "@@ -3563,32 +3563,48 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Peer has the NOBAN permission flag - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n+        return false;\n+    }\n+\n+    if (pnode.m_manual_connection) {\n+        // Peer is a manual connection - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "f54af5e58649d527d nit while touching this code, perhaps fix up the logging output: s/manually-connected/manually connected/",
      "created_at": "2020-07-10T11:21:42Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452783772",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452783772"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3592,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452786397",
      "pull_request_review_id": 446317419,
      "id": 452786397,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc4NjM5Nw==",
      "diff_hunk": "@@ -3563,32 +3563,48 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "in_reply_to_id": 452458981,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree with @dongcarl. Maybe \"True if the peer is marked for disconnection in this function.\"",
      "created_at": "2020-07-10T11:28:09Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452786397",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452786397"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3569,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452793191",
      "pull_request_review_id": 446317419,
      "id": 452793191,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc5MzE5MQ==",
      "diff_hunk": "@@ -3844,48 +3857,47 @@ class CompareInvMempoolOrder\n bool PeerLogicValidation::SendMessages(CNode* pto)\n {\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n-    {\n-        // Don't send anything until the version handshake is complete\n-        if (!pto->fSuccessfullyConnected || pto->fDisconnect)\n-            return true;\n \n-        // If we get here, the outgoing message serialization version is set and can't change.\n-        const CNetMsgMaker msgMaker(pto->GetSendVersion());\n+    if (MaybeDiscourageAndDisconnect(*pto)) return true;",
      "path": "src/net_processing.cpp",
      "position": 93,
      "original_position": 90,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "38c96ef in this commit that removes `MaybeDiscourageAndDisconnect()` from `ProcessMessages()`, future reviewers may appreciate a comment here in the remaining call to make the order dependency explicit.\r\n\r\ne.g. that `MaybeDiscourageAndDisconnect()` here depends on all misbehavior calls (currently `Misbehaving`) occurring in ProcessMessages which needs to remain called before SendMessages in `CConnman::ThreadMessageHandler`... if I am not confused.",
      "created_at": "2020-07-10T11:45:13Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452793191",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452793191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3858,
      "original_line": 3858,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452811594",
      "pull_request_review_id": 446360055,
      "id": 452811594,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxMTU5NA==",
      "diff_hunk": "@@ -3563,32 +3563,48 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Peer has the NOBAN permission flag - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n+        return false;\n+    }\n+\n+    if (pnode.m_manual_connection) {\n+        // Peer is a manual connection - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n+        return false;\n+    }\n+\n+    if (pnode.addr.IsLocal()) {\n+        // Peer is on a local address. Disconnect this peer, but don't discourage the local address\n+        LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n+        pnode.fDisconnect = true;\n         return true;\n     }\n-    return false;\n+\n+    // Normal case: Disconnect the peer and discourage all nodes sharing the address\n+    LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "in_reply_to_id": 452778563,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done (but called the variable `peer_name` since a future commit adds a `Peer` object to this function.",
      "created_at": "2020-07-10T12:28:09Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452811594",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452811594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3604,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452811745",
      "pull_request_review_id": 446360261,
      "id": 452811745,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxMTc0NQ==",
      "diff_hunk": "@@ -3563,32 +3563,48 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Peer has the NOBAN permission flag - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "in_reply_to_id": 452779171,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I expect this PR will need to be rebased on #19474, so I've copied the log text from there.",
      "created_at": "2020-07-10T12:28:29Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452811745",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452811745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3586,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452811981",
      "pull_request_review_id": 446360620,
      "id": 452811981,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxMTk4MQ==",
      "diff_hunk": "@@ -3563,32 +3563,48 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Peer has the NOBAN permission flag - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n+        return false;\n+    }\n+\n+    if (pnode.m_manual_connection) {\n+        // Peer is a manual connection - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "in_reply_to_id": 452783772,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2020-07-10T12:29:08Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452811981",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452811981"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3592,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452812137",
      "pull_request_review_id": 446360809,
      "id": 452812137,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxMjEzNw==",
      "diff_hunk": "@@ -3563,32 +3563,48 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode           The node to check.\n+ * @return                      True if the peer will be disconnected.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "in_reply_to_id": 452458981,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2020-07-10T12:29:27Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452812137",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452812137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3569,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452819554",
      "pull_request_review_id": 446370369,
      "id": 452819554,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxOTU1NA==",
      "diff_hunk": "@@ -3844,48 +3857,47 @@ class CompareInvMempoolOrder\n bool PeerLogicValidation::SendMessages(CNode* pto)\n {\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n-    {\n-        // Don't send anything until the version handshake is complete\n-        if (!pto->fSuccessfullyConnected || pto->fDisconnect)\n-            return true;\n \n-        // If we get here, the outgoing message serialization version is set and can't change.\n-        const CNetMsgMaker msgMaker(pto->GetSendVersion());\n+    if (MaybeDiscourageAndDisconnect(*pto)) return true;",
      "path": "src/net_processing.cpp",
      "position": 93,
      "original_position": 90,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "in_reply_to_id": 452793191,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`nMisbehavior` is a tally in `CNodeState` that can be incremented from anywhere. That almost always happens inside a `ProcessMessages()` call (because we increment the misbehavior score when receiving a bad messages from a peer), but not always. See, for example, the call to `MaybePunishNodeForBlock()` inside `BlockChecked()`, which is an asynchronous callback from the validation interface, executed on the scheduler thread.\r\n\r\nAs long as `MaybeDiscourageAndDisconnect()` is called regularly for the node, then the misbehavior score exceeding the 100 threshold will eventually result in the peer being punished. It doesn't really matter where that `MaybeDiscourageAndDisconnect()` happens, but it makes most sense in `SendMessages()` which is where we do general peer housekeeping/maintenance.",
      "created_at": "2020-07-10T12:44:53Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452819554",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452819554"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3858,
      "original_line": 3858,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453060447",
      "pull_request_review_id": 446679764,
      "id": 453060447,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA2MDQ0Nw==",
      "diff_hunk": "@@ -3563,32 +3563,50 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode     The node to check.\n+ * @return                True if the peer was marked for disconnection in this function\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    std::string peer_name{pnode.addr.ToString()};  // for logging\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Peer has the NOBAN permission flag - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing noban peer %s!\\n\", peer_name);\n+        return false;\n+    }\n+\n+    if (pnode.m_manual_connection) {\n+        // Peer is a manual connection - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing manually connected peer %s!\\n\", peer_name);\n+        return false;\n+    }\n+\n+    if (pnode.addr.IsLocal()) {\n+        // Peer is on a local address. Disconnect this peer, but don't discourage the local address\n+        LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", peer_name);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "e874c6dd10e39a3d32a684e24d0400a2e5f5891a",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I know this is unrelated, but is there any reason to not log the peer id? All other peer-related messages log the id, so logging the address+port makes it harder to relate this log to all other logs.",
      "created_at": "2020-07-10T20:22:47Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453060447",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453060447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3594,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453081460",
      "pull_request_review_id": 446706121,
      "id": 453081460,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA4MTQ2MA==",
      "diff_hunk": "@@ -3563,32 +3563,50 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode     The node to check.\n+ * @return                True if the peer was marked for disconnection in this function\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    std::string peer_name{pnode.addr.ToString()};  // for logging\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Peer has the NOBAN permission flag - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing noban peer %s!\\n\", peer_name);\n+        return false;\n+    }\n+\n+    if (pnode.m_manual_connection) {\n+        // Peer is a manual connection - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing manually connected peer %s!\\n\", peer_name);\n+        return false;\n+    }\n+\n+    if (pnode.addr.IsLocal()) {\n+        // Peer is on a local address. Disconnect this peer, but don't discourage the local address\n+        LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", peer_name);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "e874c6dd10e39a3d32a684e24d0400a2e5f5891a",
      "in_reply_to_id": 453060447,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also, isn't the general policy that we should try to avoid logging IP addresses (at least when the user is not opting in to detailed `-debug=net` logging)?\r\n\r\nFWIW: IP addresses are considered personal data in some jurisdictions (EU via GDPR?) IIRC.",
      "created_at": "2020-07-10T21:18:00Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453081460",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453081460"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3594,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453161595",
      "pull_request_review_id": 446781786,
      "id": 453161595,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE2MTU5NQ==",
      "diff_hunk": "@@ -3563,32 +3563,50 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode     The node to check.\n+ * @return                True if the peer was marked for disconnection in this function\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    std::string peer_name{pnode.addr.ToString()};  // for logging\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Peer has the NOBAN permission flag - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing noban peer %s!\\n\", peer_name);\n+        return false;\n+    }\n+\n+    if (pnode.m_manual_connection) {\n+        // Peer is a manual connection - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing manually connected peer %s!\\n\", peer_name);\n+        return false;\n+    }\n+\n+    if (pnode.addr.IsLocal()) {\n+        // Peer is on a local address. Disconnect this peer, but don't discourage the local address\n+        LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", peer_name);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "e874c6dd10e39a3d32a684e24d0400a2e5f5891a",
      "in_reply_to_id": 453060447,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We've been logging the peer address for node misbehavior since banning was introduced: https://github.com/bitcoin/bitcoin/commit/15f3ad4dbdf0d245b936e68c51a7ecb9f472d2cd#diff-9a82240fe7dfe86564178691cc57f2f1R757 , and these logs have probably just persisted all that time.\r\n\r\nI've changed this to log the peer id instead of the address.",
      "created_at": "2020-07-11T06:09:55Z",
      "updated_at": "2020-07-11T06:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453161595",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453161595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3594,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453162915",
      "pull_request_review_id": 446782619,
      "id": 453162915,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE2MjkxNQ==",
      "diff_hunk": "@@ -3844,48 +3857,47 @@ class CompareInvMempoolOrder\n bool PeerLogicValidation::SendMessages(CNode* pto)\n {\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n-    {\n-        // Don't send anything until the version handshake is complete\n-        if (!pto->fSuccessfullyConnected || pto->fDisconnect)\n-            return true;\n \n-        // If we get here, the outgoing message serialization version is set and can't change.\n-        const CNetMsgMaker msgMaker(pto->GetSendVersion());\n+    if (MaybeDiscourageAndDisconnect(*pto)) return true;",
      "path": "src/net_processing.cpp",
      "position": 93,
      "original_position": 90,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "f54af5e58649d527d53990259f77892ad07f7ffa",
      "in_reply_to_id": 452793191,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, @jnewbery, makes sense.\r\n\r\nThe previous behavior before this PR had me wondering if there were particular optimisation reasons for it, but I don't see any.",
      "created_at": "2020-07-11T06:28:13Z",
      "updated_at": "2020-07-11T06:28:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453162915",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453162915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3858,
      "original_line": 3858,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453164461",
      "pull_request_review_id": 446783552,
      "id": 453164461,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE2NDQ2MQ==",
      "diff_hunk": "@@ -3563,32 +3563,50 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode     The node to check.\n+ * @return                True if the peer was marked for disconnection in this function\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    std::string peer_name{pnode.addr.ToString()};  // for logging\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Peer has the NOBAN permission flag - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing noban peer %s!\\n\", peer_name);\n+        return false;\n+    }\n+\n+    if (pnode.m_manual_connection) {\n+        // Peer is a manual connection - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing manually connected peer %s!\\n\", peer_name);\n+        return false;\n+    }\n+\n+    if (pnode.addr.IsLocal()) {\n+        // Peer is on a local address. Disconnect this peer, but don't discourage the local address\n+        LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", peer_name);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "e874c6dd10e39a3d32a684e24d0400a2e5f5891a",
      "in_reply_to_id": 453060447,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wow! -- banscore goes way back, TIL",
      "created_at": "2020-07-11T06:49:13Z",
      "updated_at": "2020-07-11T06:49:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453164461",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453164461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3594,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453172039",
      "pull_request_review_id": 446788238,
      "id": 453172039,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3MjAzOQ==",
      "diff_hunk": "@@ -3563,32 +3563,50 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode     The node to check.\n+ * @return                True if the peer was marked for disconnection in this function\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    AssertLockHeld(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(pnode.GetId());\n+\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n \n-    if (state.m_should_discourage) {\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    std::string peer_name{pnode.addr.ToString()};  // for logging\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Peer has the NOBAN permission flag - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing noban peer %s!\\n\", peer_name);\n+        return false;\n+    }\n+\n+    if (pnode.m_manual_connection) {\n+        // Peer is a manual connection - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing manually connected peer %s!\\n\", peer_name);\n+        return false;\n+    }\n+\n+    if (pnode.addr.IsLocal()) {\n+        // Peer is on a local address. Disconnect this peer, but don't discourage the local address\n+        LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", peer_name);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "e874c6dd10e39a3d32a684e24d0400a2e5f5891a",
      "in_reply_to_id": 453060447,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for fixing!",
      "created_at": "2020-07-11T08:29:17Z",
      "updated_at": "2020-07-11T08:29:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453172039",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453172039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3594,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453174970",
      "pull_request_review_id": 446790170,
      "id": 453174970,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NDk3MA==",
      "diff_hunk": "@@ -3557,32 +3557,49 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode     The node to check.\n+ * @return                True if the peer was marked for disconnection in this function\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    LOCK(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    NodeId peer_id{pnode.GetId()};\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(peer_id);\n \n-    if (state.m_should_discourage) {\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n+\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Peer has the NOBAN permission flag - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing noban peer %d!\\n\", peer_id);\n+        return false;\n+    }\n+\n+    if (pnode.m_manual_connection) {\n+        // Peer is a manual connection - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing manually connected peer %d!\\n\", peer_id);\n+        return false;\n+    }\n+\n+    if (pnode.addr.IsLocal()) {\n+        // Peer is on a local address. Disconnect this peer, but don't discourage the local address",
      "path": "src/net_processing.cpp",
      "position": 55,
      "original_position": 55,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style-nit in commit 655b195747:\r\n\r\nI don't like comments that repeat the source code like `pnode.addr.IsLocal() // Peer is on a local address`. Ideally source code should be self-documenting and in this case simply reading the condition and the logged format string should be sufficient to understand *what* is being done.\r\n\r\nHowever, a comment could make sense to explain *why* something is done. I presume local addresses are not discouraged because all tor-proxy nodes run on the same local address?\r\n\r\n(Same for other comments in this function)\r\n\r\nI know that this comment has been there before, but since you refactor this function, the comments could be fixed as well.",
      "created_at": "2020-07-11T09:08:25Z",
      "updated_at": "2020-07-11T09:18:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453174970",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453174970"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3592,
      "original_line": 3592,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453175093",
      "pull_request_review_id": 446790170,
      "id": 453175093,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NTA5Mw==",
      "diff_hunk": "@@ -3557,32 +3557,49 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode     The node to check.\n+ * @return                True if the peer was marked for disconnection in this function\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    LOCK(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    NodeId peer_id{pnode.GetId()};\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(peer_id);",
      "path": "src/net_processing.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "clang-format style-nit in commit 655b1957470c39bcab64917747c9f467444bd809\r\n\r\n```suggestion\r\n        CNodeState& state = *State(peer_id);\r\n```",
      "created_at": "2020-07-11T09:10:12Z",
      "updated_at": "2020-07-11T09:18:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453175093",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453175093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3570,
      "original_line": 3570,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453175610",
      "pull_request_review_id": 446790170,
      "id": 453175610,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NTYxMA==",
      "diff_hunk": "@@ -3838,7 +3838,7 @@ class CompareInvMempoolOrder\n bool PeerLogicValidation::SendMessages(CNode* pto)",
      "path": "src/net_processing.cpp",
      "position": 81,
      "original_position": 1,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "1a1c23f8d40116741f0e26cdf22688fd91c923fc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Style-nit in commit body of c581cc16bb5e490c0960ccf440de2d1e5f23c417:\r\n\r\nInstead of a GitHub-branded `#1117`, which either needs online-access to GitHub or two local commands to show the referenced commit (`git log --grep='#1117 ' --merges`), what about simply saying `commit c581cc16bb`.\r\n\r\nSame for the other one, but since it has two commits, maybe the merge commit can be mentioned `commit 82274c0`",
      "created_at": "2020-07-11T09:16:16Z",
      "updated_at": "2020-07-11T09:18:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453175610",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453175610"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3852,
      "original_line": 3838,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459888669",
      "pull_request_review_id": 454677082,
      "id": 459888669,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg4ODY2OQ==",
      "diff_hunk": "@@ -3557,32 +3557,49 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode     The node to check.\n+ * @return                True if the peer was marked for disconnection in this function\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    LOCK(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    NodeId peer_id{pnode.GetId()};\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(peer_id);\n \n-    if (state.m_should_discourage) {\n+        // There's nothing to do if the m_should_discourage flag isn't set\n+        if (!state.m_should_discourage) return false;\n+\n+        // Reset m_should_discourage\n         state.m_should_discourage = false;\n-        if (pnode.HasPermission(PF_NOBAN)) {\n-            LogPrintf(\"Warning: not punishing whitelisted peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.m_manual_connection) {\n-            LogPrintf(\"Warning: not punishing manually-connected peer %s!\\n\", pnode.addr.ToString());\n-        } else if (pnode.addr.IsLocal()) {\n-            // Disconnect but don't discourage this local node\n-            LogPrintf(\"Warning: disconnecting but not discouraging local peer %s!\\n\", pnode.addr.ToString());\n-            pnode.fDisconnect = true;\n-        } else {\n-            // Disconnect and discourage all nodes sharing the address\n-            LogPrintf(\"Disconnecting and discouraging peer %s!\\n\", pnode.addr.ToString());\n-            if (m_banman) {\n-                m_banman->Discourage(pnode.addr);\n-            }\n-            connman->DisconnectNode(pnode.addr);\n-        }\n+    } // cs_main\n+\n+    if (pnode.HasPermission(PF_NOBAN)) {\n+        // Peer has the NOBAN permission flag - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing noban peer %d!\\n\", peer_id);\n+        return false;\n+    }\n+\n+    if (pnode.m_manual_connection) {\n+        // Peer is a manual connection - log but don't disconnect\n+        LogPrintf(\"Warning: not punishing manually connected peer %d!\\n\", peer_id);\n+        return false;\n+    }\n+\n+    if (pnode.addr.IsLocal()) {\n+        // Peer is on a local address. Disconnect this peer, but don't discourage the local address",
      "path": "src/net_processing.cpp",
      "position": 55,
      "original_position": 55,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "in_reply_to_id": 453174970,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in a follow-up: https://github.com/jnewbery/bitcoin/commits/2020-07-tidy-misbehavior",
      "created_at": "2020-07-24T07:17:33Z",
      "updated_at": "2020-07-24T07:20:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r459888669",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459888669"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3592,
      "original_line": 3592,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459888731",
      "pull_request_review_id": 454677149,
      "id": 459888731,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg4ODczMQ==",
      "diff_hunk": "@@ -3557,32 +3557,49 @@ void ProcessMessage(\n     return;\n }\n \n+/** Maybe disconnect a peer and discourage future connections from its address.\n+ *\n+ * @param[in]   pnode     The node to check.\n+ * @return                True if the peer was marked for disconnection in this function\n+ */\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    LOCK(cs_main);\n-    CNodeState &state = *State(pnode.GetId());\n+    NodeId peer_id{pnode.GetId()};\n+    {\n+        LOCK(cs_main);\n+        CNodeState &state = *State(peer_id);",
      "path": "src/net_processing.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "in_reply_to_id": 453175093,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in a follow-up: https://github.com/jnewbery/bitcoin/commits/2020-07-tidy-misbehavior",
      "created_at": "2020-07-24T07:17:43Z",
      "updated_at": "2020-07-24T07:20:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r459888731",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459888731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3570,
      "original_line": 3570,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459888862",
      "pull_request_review_id": 454677308,
      "id": 459888862,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg4ODg2Mg==",
      "diff_hunk": "@@ -3838,7 +3838,7 @@ class CompareInvMempoolOrder\n bool PeerLogicValidation::SendMessages(CNode* pto)",
      "path": "src/net_processing.cpp",
      "position": 81,
      "original_position": 1,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "1a1c23f8d40116741f0e26cdf22688fd91c923fc",
      "in_reply_to_id": 453175610,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks. Will refer directly to commit hashes in future.",
      "created_at": "2020-07-24T07:18:01Z",
      "updated_at": "2020-07-24T07:18:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r459888862",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459888862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3852,
      "original_line": 3838,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/460092944",
      "pull_request_review_id": 454939498,
      "id": 460092944,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA5Mjk0NA==",
      "diff_hunk": "@@ -3838,7 +3838,7 @@ class CompareInvMempoolOrder\n bool PeerLogicValidation::SendMessages(CNode* pto)\n {\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n-    {\n+",
      "path": "src/net_processing.cpp",
      "position": 88,
      "original_position": 5,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "1a1c23f8d40116741f0e26cdf22688fd91c923fc",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For future work, do we still need `cs_sendProcessing` ? It only guards `m_next_addr_send/m_next_local_addr_send`, both of them only RW in `SendMessages`, inside `ThreadMessageHandler`. \r\n\r\nIs this a relic from the past or do you see another reason ?",
      "created_at": "2020-07-24T14:36:08Z",
      "updated_at": "2020-07-24T14:36:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r460092944",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/460092944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3855,
      "original_line": 3841,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/460103462",
      "pull_request_review_id": 454953218,
      "id": 460103462,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEwMzQ2Mg==",
      "diff_hunk": "@@ -3838,7 +3838,7 @@ class CompareInvMempoolOrder\n bool PeerLogicValidation::SendMessages(CNode* pto)\n {\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n-    {\n+",
      "path": "src/net_processing.cpp",
      "position": 88,
      "original_position": 5,
      "commit_id": "655b1957470c39bcab64917747c9f467444bd809",
      "original_commit_id": "1a1c23f8d40116741f0e26cdf22688fd91c923fc",
      "in_reply_to_id": 460092944,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've removed it from `m_next_addr_send` and `m_next_local_addr_send` in https://github.com/jnewbery/bitcoin/commits/2020-06-cs-main-split. It could theoretically also be removed from guarding `SendMessages()` since we only ever call that from the message handler thread.",
      "created_at": "2020-07-24T14:53:00Z",
      "updated_at": "2020-07-24T14:53:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19472#discussion_r460103462",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/460103462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19472"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3855,
      "original_line": 3841,
      "side": "RIGHT"
    }
  ]
}