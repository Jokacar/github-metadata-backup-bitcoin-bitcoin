{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
    "id": 1274950700,
    "node_id": "PR_kwDOABII585L_jQs",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27255",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27255.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27255.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/422a9f30746b4fb6ea321ad1b41a63a704aff839",
    "number": 27255,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "MiniTapscript: port Miniscript to Tapscript",
    "user": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Miniscript was targeting P2WSH, and as such can currently only be used in `wsh()` descriptors. This pull request introduces support for Tapscript in Miniscript and makes Miniscript available inside `tr()` descriptors. It adds support for both watching *and* signing TapMiniscript descriptors.\r\n\r\nThe main changes to Miniscript for Tapscript are the following:\r\n- A new `multi_a` fragment is introduced with the same semantics as `multi`. Like in other descriptors `multi` and `multi_a` can exclusively be used in respectively P2WSH and Tapscript.\r\n- The `d:` fragment has the `u` property under Tapscript, since the `MINIMALIF` rule is now consensus. See also https://github.com/bitcoin/bitcoin/pull/24906.\r\n- Keys are now serialized as 32 bytes. (Note this affects the key hashes.)\r\n- The resource consumption checks and calculation changed. Some limits were lifted in Tapscript, and signatures are now 64 bytes long.\r\n\r\nThe largest amount of complexity probably lies in the last item. Scripts under Taproot can now run into the maximum stack size while executing a fragment. For instance if you've got a stack size of `999` due to the initial witness plus some execution that happened before and try to execute a `hash256` it would `DUP` (increasing the stack size `1000`), `HASH160` and then push the hash on the stack making the script fail.\r\nTo make sure this does not happen on any of the spending paths of a sane Miniscript, we introduce a tracking of the maximum stack size during execution of a fragment. See the commits messages for details. Those commits were separated from the resource consumption change, and the fuzz target was tweaked to sometimes pad the witness so the script runs on the brink of the stack size limit to make sure the stack size was not underestimated.\r\n\r\nExisting Miniscript unit, functional and fuzz tests are extended with Tapscript logic and test cases. Care was taken for seed stability in the fuzz targets where we cared more about them.\r\n\r\nThe design of Miniscript for Tapscript is the result of discussions between various people over the past year(s). To the extent of my knowledge at least Pieter Wuille, Sanket Kanjalkar, Andrew Poelstra and Andrew Chow contributed thoughts and ideas.",
    "labels": [
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-03-14T12:24:34Z",
    "updated_at": "2023-08-30T13:09:43Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "7124f6d0da5bebbec8c5ff083d1474127eab5c3f",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "darosior:tapminiscript",
      "ref": "tapminiscript",
      "sha": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 168868367,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjg4NjgzNjc=",
        "name": "bitcoin",
        "full_name": "darosior/bitcoin",
        "owner": {
          "login": "darosior",
          "id": 22457751,
          "node_id": "MDQ6VXNlcjIyNDU3NzUx",
          "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/darosior",
          "html_url": "https://github.com/darosior",
          "followers_url": "https://api.github.com/users/darosior/followers",
          "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
          "organizations_url": "https://api.github.com/users/darosior/orgs",
          "repos_url": "https://api.github.com/users/darosior/repos",
          "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/darosior/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/darosior/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/darosior/bitcoin",
        "archive_url": "https://api.github.com/repos/darosior/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/darosior/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/darosior/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/darosior/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/darosior/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/darosior/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/darosior/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/darosior/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/darosior/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/darosior/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/darosior/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/darosior/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/darosior/bitcoin/events",
        "forks_url": "https://api.github.com/repos/darosior/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/darosior/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/darosior/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/darosior/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/darosior/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/darosior/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/darosior/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/darosior/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/darosior/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/darosior/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/darosior/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/darosior/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/darosior/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/darosior/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/darosior/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/darosior/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:darosior/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/darosior/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/darosior/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/darosior/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/darosior/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/darosior/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/darosior/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/darosior/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/darosior/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/darosior/bitcoin/hooks",
        "svn_url": "https://github.com/darosior/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 220609,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-30T13:09:38Z",
        "created_at": "2019-02-02T19:20:27Z",
        "updated_at": "2023-05-05T11:25:14Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ab42b2ebdbf61225e636e4c00068fd29b2790d41",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35593,
        "stargazers_count": 71161,
        "watchers_count": 71161,
        "size": 238082,
        "default_branch": "master",
        "open_issues_count": 677,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-30T13:51:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-30T13:11:33Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 1380,
    "deletions": 576,
    "changed_files": 12,
    "commits": 22,
    "review_comments": 36,
    "comments": 15
  },
  "events": [
    {
      "event": "commented",
      "id": 1468010901,
      "node_id": "IC_kwDOABII585XgBGV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468010901",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T12:24:37Z",
      "updated_at": "2023-08-19T14:12:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [michaelfolkson](https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468032095), [josibake](https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1485343142) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26573](https://github.com/bitcoin/bitcoin/pull/26573) (Wallet: don't underestimate the fees when spending a Taproot output by darosior)\n* [#26567](https://github.com/bitcoin/bitcoin/pull/26567) (Wallet: estimate the size of signed inputs using descriptors by darosior)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468010901",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "commented",
      "id": 1468032095,
      "node_id": "IC_kwDOABII585XgGRf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468032095",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T12:40:02Z",
      "updated_at": "2023-03-14T12:40:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, an important piece in opening up Taproot scripting.\r\n\r\n> The design of Miniscript for Tapscript is the result of discussions between various people over the past year(s).\r\n\r\nYour PR description is great but perhaps you can link to a few of those discussions for extra background reading for those that are interested? e.g. https://gist.github.com/sipa/06c5c844df155d4e5044c2c8cac9c05e\r\n\r\nAlso just checking if this PR should be in Draft or not? Are there ongoing open discussions on anything important or is this ready for extensive review?\r\n\r\n",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468032095",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8743273348,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIJI8OE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8743273348",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T12:53:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8744158901,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIJMUa1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8744158901",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T14:09:46Z"
    },
    {
      "event": "commented",
      "id": 1468209943,
      "node_id": "IC_kwDOABII585XgxsX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468209943",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T14:31:10Z",
      "updated_at": "2023-03-14T14:31:10Z",
      "author_association": "MEMBER",
      "body": "Yeah, thanks for the suggestion. Reviewers may be interested in https://github.com/sipa/miniscript/pull/134 as well.\r\n\r\n> Also just checking if this PR should be in Draft or not? Are there ongoing open discussions on anything important or is this ready for extensive review?\r\n\r\nIt is ready for (extensive or not) review. Otherwise i'd have opened it as a draft. But please tell me clearly if you disagree.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468209943",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "commented",
      "id": 1468263557,
      "node_id": "IC_kwDOABII585Xg-yF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468263557",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T14:58:54Z",
      "updated_at": "2023-03-16T11:25:48Z",
      "author_association": "MEMBER",
      "body": "As it stands in this PR it would be possible to import a `tr()` descriptor unspendable by standardness: in addition to the script itself, we also need to check if the whole witness (including the control block, which is outside Miniscript..) isn't larger than the maximum standard transaction size.\r\n\r\nEDIT: Actually since we are still bounded by the `MAX_STACK_SIZE` of `1000` and no element is larger than `65` bytes, i think we can do something more elegant than having to compute the maximum witness size of a script. Just have the following conservative bound: refuse any script whose size is larger than `MAX_STANDARD_TX_WEIGHT - (1 + 65) * MAX_STACK_SIZE - TAPROOT_CONTROL_MAX_SIZE` (i.e. `329871` bytes). This is still plenty, and should there ever be a usecase for a larger script we can always relax this check by having an accurate max witness size calculation.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468263557",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T23:58:28Z",
      "updated_at": "2023-03-14T23:58:28Z",
      "source": {
        "issue": {
          "id": 983140832,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzIyNzY4MTc5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22838",
          "number": 22838,
          "state": "open",
          "state_reason": null,
          "title": "descriptors: Be able to specify change and receiving in a single descriptor string",
          "body": "It is convenient to have a descriptor which specifies both receiving and change addresses in a single string. However, as discussed in https://github.com/bitcoin/bitcoin/issues/17190#issuecomment-895515768, it is not feasible to use a generic multipath specification like BIP 88 due to combinatorial blow up and that it would result in unexpected descriptors.\r\n\r\nTo resolve that problem, this PR proposes a targeted solution which allows only a single pair of 2 derivation indexes to be inserted in the place of a single derivation index. So instead of two descriptor `wpkh(xpub.../0/0/*)` and `wpkh(xpub.../0/1/*)` to represent receive and change addresses, this could be written as `wpkh(xpub.../0/<0;1>/*)`. The multipath specifier is of the form `<NUM;NUM>`. Each `NUM` can have its own hardened specifier, e.g. `<0;1h>` is valid. The multipath specifier can also only appear in one path index in the derivation path.\r\n\r\nThis results in the parser returning two descriptors. The first descriptor uses the first `NUM` in all pairs present, and the second uses the second `NUM`. In our implementation, if a multipath descriptor is not provided, a pair is still returned, but the second element is just `nullptr`.\r\n\r\nThe wallet will not output the multipath descriptors (yet). Furthermore, when a multipath descriptor is imported, it is expanded to the two descriptors and each imported on its own, with the second descriptor being implicitly for internal (change) addresses. There is no change to how the wallet stores or outputs descriptors (yet).\r\n\r\nNote that the path specifier is different from what was proposed. It uses angle brackets and the semicolon because these are unused characters available in the character set and I wanted to avoid conflicts with characters already in use in descriptors.\r\n\r\nCloses #17190 ",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 1482182044,
              "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
              "name": "Descriptors",
              "description": "",
              "color": "e9f76c",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 32,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22838",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22838",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22838.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22838.patch"
          },
          "created_at": "2021-08-30T19:46:34Z",
          "updated_at": "2023-08-29T15:52:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1340932665,
      "node_id": "PRR_kwDOABII585P7QI5",
      "url": null,
      "actor": null,
      "commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1340932665",
      "submitted_at": "2023-03-15T08:57:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341664972,
      "node_id": "PRR_kwDOABII585P-C7M",
      "url": null,
      "actor": null,
      "commit_id": "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341664972",
      "submitted_at": "2023-03-15T14:42:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341720788,
      "node_id": "PRR_kwDOABII585P-QjU",
      "url": null,
      "actor": null,
      "commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341720788",
      "submitted_at": "2023-03-15T15:08:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341735215,
      "node_id": "PRR_kwDOABII585P-UEv",
      "url": null,
      "actor": null,
      "commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341735215",
      "submitted_at": "2023-03-15T15:14:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341762826,
      "node_id": "PRR_kwDOABII585P-a0K",
      "url": null,
      "actor": null,
      "commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341762826",
      "submitted_at": "2023-03-15T15:20:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341784989,
      "node_id": "PRR_kwDOABII585P-gOd",
      "url": null,
      "actor": null,
      "commit_id": "157c4a047b573dfac775f25c970e1f1762fe8f7b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341784989",
      "submitted_at": "2023-03-15T15:25:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8768884947,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIKqpDT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8768884947",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T15:33:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8769910509,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIKujbt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8769910509",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T16:59:29Z"
    },
    {
      "event": "commented",
      "id": 1472365761,
      "node_id": "IC_kwDOABII585XwoTB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1472365761",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T17:04:31Z",
      "updated_at": "2023-03-16T17:04:31Z",
      "author_association": "MEMBER",
      "body": "In the last push i've:\r\n- Added a commit to avoid a stack overflow during the destruction of a too large `Node`, due to recursive calls in `shared_ptr`'s destructor. (The reason the CI was failing under MSVC.)\r\n- Lowered the maximum size of a TapMiniscript to make sure a spending witness would never hit the maximum standard transaction size limit. (It's still pretty high.)\r\n- Addressed all comments from @bigspider.\r\n\r\nThis PR is now ready for another round of review.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1472365761",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "mentioned",
      "id": 8769965302,
      "node_id": "MEE_lADOABII585gwrw2zwAAAAIKuwz2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8769965302",
      "actor": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T17:04:31Z"
    },
    {
      "event": "subscribed",
      "id": 8769965326,
      "node_id": "SE_lADOABII585gwrw2zwAAAAIKuw0O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8769965326",
      "actor": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T17:04:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8776733426,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAILIlLy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8776733426",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T10:30:07Z"
    },
    {
      "event": "commented",
      "id": 1473626748,
      "node_id": "IC_kwDOABII585X1cJ8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473626748",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T10:31:02Z",
      "updated_at": "2023-03-17T10:31:02Z",
      "author_association": "MEMBER",
      "body": "Pushed to try to wake the CI up. Looks like it worked!",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1473626748",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "commented",
      "id": 1473771519,
      "node_id": "IC_kwDOABII585X1_f_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473771519",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T12:40:32Z",
      "updated_at": "2023-03-17T12:45:04Z",
      "author_association": "MEMBER",
      "body": "Very cool. I also noticed [bitcoin.sipa.be/miniscript](https://bitcoin.sipa.be/miniscript/) has been updated.\r\n\r\nHas there been any thought into how MuSig2 (and threshold friends) would fit into this in the future? I guess that's only a problem for the compiler, since for the purpose of script it doesn't matter if e.g. public key C is an aggregate of A + B. But it does change the meaning of something like `tr(C,multi_a(2,A,B))` (i.e. regular tapscript multisig fallback if MuSig2 coordination fails - maybe not a good example, since this already works).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1473771519",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "commented",
      "id": 1473777054,
      "node_id": "IC_kwDOABII585X2A2e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473777054",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T12:45:35Z",
      "updated_at": "2023-03-17T12:45:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Has there been any thought into how MuSig2 (and threshold friends) would fit into this in the future?\r\n\r\nDiscussed in sipa's [gist](https://gist.github.com/sipa/06c5c844df155d4e5044c2c8cac9c05e#musig-descriptors). Can comment on that gist @Sjors \r\n",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1473777054",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "mentioned",
      "id": 8777928017,
      "node_id": "MEE_lADOABII585gwrw2zwAAAAILNI1R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8777928017",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T12:45:35Z"
    },
    {
      "event": "subscribed",
      "id": 8777928043,
      "node_id": "SE_lADOABII585gwrw2zwAAAAILNI1r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8777928043",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T12:45:35Z"
    },
    {
      "event": "reviewed",
      "id": 1357917424,
      "node_id": "PRR_kwDOABII585Q8Czw",
      "url": null,
      "actor": null,
      "commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "Ayaan7211",
        "id": 128941225,
        "node_id": "U_kgDOB698qQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/128941225?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Ayaan7211",
        "html_url": "https://github.com/Ayaan7211",
        "followers_url": "https://api.github.com/users/Ayaan7211/followers",
        "following_url": "https://api.github.com/users/Ayaan7211/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Ayaan7211/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Ayaan7211/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Ayaan7211/subscriptions",
        "organizations_url": "https://api.github.com/users/Ayaan7211/orgs",
        "repos_url": "https://api.github.com/users/Ayaan7211/repos",
        "events_url": "https://api.github.com/users/Ayaan7211/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Ayaan7211/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1357917424",
      "submitted_at": "2023-03-25T23:49:41Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "commented",
      "id": 1485343142,
      "node_id": "IC_kwDOABII585YiImm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1485343142",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-27T15:30:34Z",
      "updated_at": "2023-03-27T15:30:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1485343142",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-31T12:30:12Z",
      "updated_at": "2023-03-31T12:30:12Z",
      "source": {
        "issue": {
          "id": 1649266684,
          "node_id": "I_kwDOABII585iTc_8",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27381",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27381/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27381/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27381/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27381",
          "number": 27381,
          "state": "closed",
          "state_reason": "completed",
          "title": "miniscript: comparison of integers of different signs",
          "body": "This is being emitted with [GCC 10.2.1](https://packages.debian.org/bullseye/g++-arm-linux-gnueabihf), in some CI jobs: i.e https://github.com/bitcoin/bitcoin/pull/25972/checks?check_run_id=12423693655, or https://github.com/bitcoin/bitcoin/pull/25972/checks?check_run_id=12423693651 (where we actually turn on all our warning flags with depends builds).\r\n```bash\r\nIn file included from test/miniscript_tests.cpp:19:\r\n./script/miniscript.h:1197:71: error: comparison of integers of different signs: 'typename iterator_traits<int *>::difference_type' (aka 'int') and 'const uint32_t' (aka 'const unsigned int') [-Werror,-Wsign-compare]\r\n                    return std::count(subs.begin(), subs.end(), true) >= node.k;\r\n                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~\r\ntest/miniscript_tests.cpp:346:34: note: in instantiation of function template specialization 'miniscript::Node<CPubKey>::IsSatisfiable<(lambda at test/miniscript_tests.cpp:346:48)>' requested here\r\n        bool satisfiable = node->IsSatisfiable([](const Node&) { return true; });\r\n                                 ^\r\n1 error generated.\r\n```\r\n\r\ncc @darosior ",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "closed_at": "2023-04-02T12:06:19Z",
          "created_at": "2023-03-31T12:24:02Z",
          "updated_at": "2023-04-02T12:06:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "stepansnigirev",
        "id": 1706012,
        "node_id": "MDQ6VXNlcjE3MDYwMTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1706012?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stepansnigirev",
        "html_url": "https://github.com/stepansnigirev",
        "followers_url": "https://api.github.com/users/stepansnigirev/followers",
        "following_url": "https://api.github.com/users/stepansnigirev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stepansnigirev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stepansnigirev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stepansnigirev/subscriptions",
        "organizations_url": "https://api.github.com/users/stepansnigirev/orgs",
        "repos_url": "https://api.github.com/users/stepansnigirev/repos",
        "events_url": "https://api.github.com/users/stepansnigirev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stepansnigirev/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-02T17:24:43Z",
      "updated_at": "2023-04-02T17:24:43Z",
      "source": {
        "issue": {
          "id": 1651027767,
          "node_id": "I_kwDODg4IYs5iaK83",
          "url": "https://api.github.com/repos/diybitcoinhardware/embit/issues/44",
          "repository_url": "https://api.github.com/repos/diybitcoinhardware/embit",
          "labels_url": "https://api.github.com/repos/diybitcoinhardware/embit/issues/44/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/diybitcoinhardware/embit/issues/44/comments",
          "events_url": "https://api.github.com/repos/diybitcoinhardware/embit/issues/44/events",
          "html_url": "https://github.com/diybitcoinhardware/embit/issues/44",
          "number": 44,
          "state": "closed",
          "state_reason": "completed",
          "title": "taproot miniscript",
          "body": "relevant:\r\ntest vectors: https://github.com/bitcoin/bitcoin/pull/27255\r\nspecs: https://bitcoin.sipa.be/miniscript/\r\nspecs diff: https://github.com/sipa/miniscript/pull/134",
          "user": {
            "login": "stepansnigirev",
            "id": 1706012,
            "node_id": "MDQ6VXNlcjE3MDYwMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1706012?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stepansnigirev",
            "html_url": "https://github.com/stepansnigirev",
            "followers_url": "https://api.github.com/users/stepansnigirev/followers",
            "following_url": "https://api.github.com/users/stepansnigirev/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stepansnigirev/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stepansnigirev/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stepansnigirev/subscriptions",
            "organizations_url": "https://api.github.com/users/stepansnigirev/orgs",
            "repos_url": "https://api.github.com/users/stepansnigirev/repos",
            "events_url": "https://api.github.com/users/stepansnigirev/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stepansnigirev/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 1,
          "closed_at": "2023-08-05T22:00:35Z",
          "created_at": "2023-04-02T17:24:43Z",
          "updated_at": "2023-08-05T22:00:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 8935769395,
      "node_id": "LE_lADOABII585gwrw2zwAAAAIUnQUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8935769395",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-05T14:18:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1376054310,
      "node_id": "PRR_kwDOABII585SBOwm",
      "url": null,
      "actor": null,
      "commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Left some style nits, nothing important. Might want to run `clang-tidy`, as it ended up reformatting a lot of the new code. Also got a few warnings, not quite sure about the `FromPKBytes` warning\r\n\r\nStill trying to wrap my head around the logic; I'll follow up with a (hopefully) more helpful review",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1376054310",
      "submitted_at": "2023-04-07T10:54:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-12T10:39:15Z",
      "updated_at": "2023-04-12T10:39:15Z",
      "source": {
        "issue": {
          "id": 1401352357,
          "node_id": "I_kwDOHsGWPs5ThvCl",
          "url": "https://api.github.com/repos/wizardsardine/liana/issues/55",
          "repository_url": "https://api.github.com/repos/wizardsardine/liana",
          "labels_url": "https://api.github.com/repos/wizardsardine/liana/issues/55/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/wizardsardine/liana/issues/55/comments",
          "events_url": "https://api.github.com/repos/wizardsardine/liana/issues/55/events",
          "html_url": "https://github.com/wizardsardine/liana/issues/55",
          "number": 55,
          "state": "open",
          "state_reason": null,
          "title": "Taproot support",
          "body": "As Miniscript for Tapscript isn't formally specified yet, we are going to start without Taproot support. We need to have Taproot support as soon as possible, and for this i need to make progress on the C++ implementation of Tap-Miniscript.\r\n\r\nHopefully we'll have it in Bitcoin Core 25.0, in approximately 6 months from now. Alternately, maybe we can carve out something similar to what we used to do in revaultd before we had Miniscript support in bitcoind (watch by address)... But that's ugly :sob: ",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignee": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "darosior",
              "id": 22457751,
              "node_id": "MDQ6VXNlcjIyNDU3NzUx",
              "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/darosior",
              "html_url": "https://github.com/darosior",
              "followers_url": "https://api.github.com/users/darosior/followers",
              "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
              "organizations_url": "https://api.github.com/users/darosior/orgs",
              "repos_url": "https://api.github.com/users/darosior/repos",
              "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/darosior/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 1,
          "created_at": "2022-10-07T15:23:44Z",
          "updated_at": "2023-04-12T10:39:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1396864124,
      "node_id": "PRR_kwDOABII585TQnR8",
      "url": null,
      "actor": null,
      "commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1396864124",
      "submitted_at": "2023-04-23T08:21:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "commented",
      "id": 1525910357,
      "node_id": "IC_kwDOABII585a84tV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525910357",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T15:33:23Z",
      "updated_at": "2023-04-27T15:33:23Z",
      "author_association": "MEMBER",
      "body": "Reviewers, i've seen the comments i'm going to address them soon and rebase this.\r\n\r\nI have discussed this with @sipa in person today. A couple notes from my recollection:\r\n- I introduce the `diff` (net difference in stack size before and after executing a fragment) and `exec` (maximum stack size reached during execution) here to account for the maximum stack size at all time. Pieter noticed we may be able to express the size in function of the diff. Or vice versa.\r\n- We tried to assert this property in the fuzz test.\r\n- We noticed `or_i` is the only fragment with two possible canonical dissatisfactions. If both dissatisfactions are available (only if both fragments are `d`) we choose the one with the largest stack size. But it seems unnecessary, the satisfier would always choose the smallest one. But the satisfier chooses in function of the actual witness size (not stack size) so it could be checking the dissatisfaction with the largest stack size.\r\n\r\nWe'll see if we can introduce some of this to the existing code and rebase this on top.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1525910357",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "mentioned",
      "id": 9116053227,
      "node_id": "MEE_lADOABII585gwrw2zwAAAAIfW-7r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9116053227",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T15:33:23Z"
    },
    {
      "event": "subscribed",
      "id": 9116053236,
      "node_id": "SE_lADOABII585gwrw2zwAAAAIfW-70",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9116053236",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T15:33:23Z"
    },
    {
      "event": "reviewed",
      "id": 1406271728,
      "node_id": "PRR_kwDOABII585T0gDw",
      "url": null,
      "actor": null,
      "commit_id": "02a5fa633f9f44b378f7c015275eacd54939e980",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1406271728",
      "submitted_at": "2023-04-28T16:32:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9261020645,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIn__Xl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9261020645",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T18:02:52Z"
    },
    {
      "event": "commented",
      "id": 1550158814,
      "node_id": "IC_kwDOABII585cZYve",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550158814",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T18:25:53Z",
      "updated_at": "2023-05-16T18:25:53Z",
      "author_association": "MEMBER",
      "body": "Rebased and updated.\r\n- I addressed @josibake's comments. (thanks for the review!)\r\n- I fixed the `multi_a` satisfaction to use an algorithm similar to `multi`'s.\r\n- Modified the maximum script size to account for some breathing room for the spending transaction size.\r\n- Made the execution size accounting easier by not tracking the size of the stack after execution of a fragment, instead assuming the maximum amount of stack elements the fragment can consume were consumed. The number of items pushed is an invariant on the type (1 for `B` `K` and `W`, 0 for `V`). See the code comments for more details.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1550158814",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "mentioned",
      "id": 9261228253,
      "node_id": "MEE_lADOABII585gwrw2zwAAAAIoAyDd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9261228253",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T18:25:53Z"
    },
    {
      "event": "subscribed",
      "id": 9261228268,
      "node_id": "SE_lADOABII585gwrw2zwAAAAIoAyDs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9261228268",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T18:25:53Z"
    },
    {
      "event": "unlabeled",
      "id": 9262091452,
      "node_id": "UNLE_lADOABII585gwrw2zwAAAAIoEEy8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9262091452",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T20:06:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T03:10:28Z",
      "updated_at": "2023-05-17T03:10:28Z",
      "source": {
        "issue": {
          "id": 1692313385,
          "node_id": "PR_kwDOABII585PlMAV",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27552",
          "number": 27552,
          "state": "open",
          "state_reason": null,
          "title": "Add support for \"partial\" fuzzers that indicate usefulness",
          "body": "This adds supports for fuzz targets that return a boolean: `true` is the normal case, while `false` indicates the input was uninteresting and should not under any circumstances be added to the corpus. This is intended for fuzz targets that have some early bail-out criteria, so that the fuzzer doesn't continue to iterate on them.\r\n\r\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27552",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27552.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27552.patch"
          },
          "created_at": "2023-05-02T12:13:48Z",
          "updated_at": "2023-08-24T13:25:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 9337578306,
      "node_id": "REFE_lADOABII585gwrw2zwAAAAIskCNC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9337578306",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6052b0856d7ccaafbc68d2a78470e01e6608a6a9",
      "commit_url": "https://api.github.com/repos/benma/btcd/commits/6052b0856d7ccaafbc68d2a78470e01e6608a6a9",
      "created_at": "2023-05-25T09:17:38Z"
    },
    {
      "event": "referenced",
      "id": 9337672005,
      "node_id": "REFE_lADOABII585gwrw2zwAAAAIskZFF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9337672005",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d214d14a2402b084f6568a24a1cd78428c96926f",
      "commit_url": "https://api.github.com/repos/benma/btcd/commits/d214d14a2402b084f6568a24a1cd78428c96926f",
      "created_at": "2023-05-25T09:24:42Z"
    },
    {
      "event": "referenced",
      "id": 9337685987,
      "node_id": "REFE_lADOABII585gwrw2zwAAAAIskcfj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9337685987",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "19fa823d94c16fd116cab20ac9a6c8686a53e45d",
      "commit_url": "https://api.github.com/repos/benma/btcd/commits/19fa823d94c16fd116cab20ac9a6c8686a53e45d",
      "created_at": "2023-05-25T09:25:29Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T13:13:09Z",
      "updated_at": "2023-06-14T13:13:09Z",
      "source": {
        "issue": {
          "id": 1756881239,
          "node_id": "PR_kwDOABII585S_kk0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27888",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27888/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27888/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27888/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27888",
          "number": 27888,
          "state": "closed",
          "state_reason": null,
          "title": "Fuzz: a more efficient descriptor parsing target",
          "body": "The current descriptor parsing fuzz target requires valid public or private keys to be provided. This is unnecessary as we are only interested in fuzzing the descriptor parsing logic here (other targets are focused on fuzzing keys serializations). And it's pretty inefficient, especially for formats that need a checksum (`xpub`, `xprv`, WIF).\r\n\r\nThis introduces a new target that mocks the keys as an index in a list of precomputed keys. Keys are represented as 2 hex characters in the descriptor. The key type (private, public, extended, ..) is deterministically based on this one-byte value. Keys are deterministically generated at target initialization. This is much more efficient and also largely reduces the size of the seeds.\r\nTL;DR: for instance instead of requiring the fuzzer to generate a `pk(xpub6DdBu7pBoyf7RjnUVhg8y6LFCfca2QAGJ39FcsgXM52Pg7eejUHLBJn4gNMey5dacyt4AjvKzdTQiuLfRdK8rSzyqZPJmNAcYZ9kVVEz4kj)` to parse a valid descriptor, it just needs to generate a `pk(03)`.\r\n\r\nNote we only mock the keys themselves, not the entire descriptor key expression. As we want to fuzz the real code that parses the rest of the key expression (origin, derivation paths, ..).\r\n\r\nThis is a target i used for reviewing #17190 and #27255, and figured it was worth PR'ing on its own since the added complexity for mocking the keys is minimal and it could help prevent introducing bugs to the descriptor parsing logic much more efficiently.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27888",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27888",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27888.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27888.patch"
          },
          "closed_at": "2023-07-27T17:48:39Z",
          "created_at": "2023-06-14T13:13:09Z",
          "updated_at": "2023-07-28T11:41:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-16T15:54:53Z",
      "updated_at": "2023-06-16T15:54:53Z",
      "source": {
        "issue": {
          "id": 1463636841,
          "node_id": "PR_kwDOABII585DqW4U",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26567",
          "number": 26567,
          "state": "open",
          "state_reason": null,
          "title": "Wallet: estimate the size of signed inputs using descriptors",
          "body": "The wallet currently estimates the size of a signed input by doing a dry run of the signing logic. This is unnecessary since all outputs we can sign for can be represented by a descriptor, and we can derive the size of a satisfaction (\"signature\") directly from the descriptor itself.\r\nIn addition, the current approach does not generalize well: dry runs of the signing logic are only possible for the most basic scripts. See for instance the discussion in #24149 around that.\r\n\r\nThis introduces a method to get the maximum size of a satisfaction from a descriptor, and makes the wallet use that instead of the dry-run.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/60",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60/labels",
            "id": 9286970,
            "node_id": "MI_kwDOABII584AjbU6",
            "number": 60,
            "state": "open",
            "title": "26.0",
            "description": "",
            "creator": {
              "login": "fanquake",
              "id": 863730,
              "node_id": "MDQ6VXNlcjg2MzczMA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/fanquake",
              "html_url": "https://github.com/fanquake",
              "followers_url": "https://api.github.com/users/fanquake/followers",
              "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
              "organizations_url": "https://api.github.com/users/fanquake/orgs",
              "repos_url": "https://api.github.com/users/fanquake/repos",
              "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/fanquake/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 9,
            "closed_issues": 32,
            "created_at": "2023-04-15T11:36:05Z",
            "updated_at": "2023-08-28T15:15:54Z"
          },
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26567",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26567",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26567.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26567.patch"
          },
          "created_at": "2022-11-24T17:15:50Z",
          "updated_at": "2023-08-28T15:15:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1486593529,
      "node_id": "PRR_kwDOABII585Ym535",
      "url": null,
      "actor": null,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "I have tried to run this branch and have 1Q: What is the reason to populate both `PSBT_IN_BIP32_DERIVATION` and `PSBT_IN_TAP_BIP32_DERIVATION`. Imo `PSBT_IN_BIP32_DERIVATION` should be empty/not included for taproot spends.",
      "user": {
        "login": "scgbckbone",
        "id": 25349625,
        "node_id": "MDQ6VXNlcjI1MzQ5NjI1",
        "avatar_url": "https://avatars.githubusercontent.com/u/25349625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scgbckbone",
        "html_url": "https://github.com/scgbckbone",
        "followers_url": "https://api.github.com/users/scgbckbone/followers",
        "following_url": "https://api.github.com/users/scgbckbone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/scgbckbone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/scgbckbone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/scgbckbone/subscriptions",
        "organizations_url": "https://api.github.com/users/scgbckbone/orgs",
        "repos_url": "https://api.github.com/users/scgbckbone/repos",
        "events_url": "https://api.github.com/users/scgbckbone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/scgbckbone/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1486593529",
      "submitted_at": "2023-06-19T17:07:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9578013399,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAI65OLX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9578013399",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T10:43:39Z"
    },
    {
      "event": "commented",
      "id": 1598564442,
      "node_id": "IC_kwDOABII585fSCha",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1598564442",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T11:01:04Z",
      "updated_at": "2023-06-20T11:01:04Z",
      "author_association": "MEMBER",
      "body": "Thanks @scgbckbone, good catch.\r\n\r\nWhen populating `SignatureData` from a PSBT input, i (ab)used the `misc_pubkeys` member to find pubkey hash preimages also when signing for Tapscript. As a consequence, Tapscript public keys would be serialized back into the PSBT input as `PSBT_IN_BIP32_DERIVATION`.\r\n\r\nThis is unnecessary. Instead i pushed a modification that simply adds a new field to `SignatureData` so we have a separate mapping for Tapscript keys in the signing logic that is not serialized back into the PSBT input.\r\n\r\n<details>\r\n\r\n<summary>Expand to see the diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/psbt.cpp b/src/psbt.cpp\r\nindex a06f89cb3d..7d50402324 100644\r\n--- a/src/psbt.cpp\r\n+++ b/src/psbt.cpp\r\n@@ -131,7 +131,7 @@ void PSBTInput::FillSignatureData(SignatureData& sigdata) const\r\n     }\r\n     for (const auto& [pubkey, leaf_origin] : m_tap_bip32_paths) {\r\n         sigdata.taproot_misc_pubkeys.emplace(pubkey, leaf_origin);\r\n-        sigdata.misc_pubkeys.emplace(Hash160(pubkey), std::make_pair(pubkey.GetCPubKey(), leaf_origin.second));\r\n+        sigdata.tap_pubkeys.emplace(Hash160(pubkey), pubkey);\r\n     }\r\n     for (const auto& [hash, preimage] : ripemd160_preimages) {\r\n         sigdata.ripemd160_preimages.emplace(std::vector<unsigned char>(hash.begin(), hash.end()), preimage);\r\n@@ -246,7 +246,7 @@ void PSBTOutput::FillSignatureData(SignatureData& sigdata) const\r\n     }\r\n     for (const auto& [pubkey, leaf_origin] : m_tap_bip32_paths) {\r\n         sigdata.taproot_misc_pubkeys.emplace(pubkey, leaf_origin);\r\n-        sigdata.misc_pubkeys.emplace(Hash160(pubkey), std::make_pair(pubkey.GetCPubKey(), leaf_origin.second));\r\n+        sigdata.tap_pubkeys.emplace(Hash160(pubkey), pubkey);\r\n     }\r\n }\r\n \r\ndiff --git a/src/script/sign.cpp b/src/script/sign.cpp\r\nindex 515a296d60..b4af979f85 100644\r\n--- a/src/script/sign.cpp\r\n+++ b/src/script/sign.cpp\r\n@@ -113,12 +113,17 @@ static bool GetPubKey(const SigningProvider& provider, const SignatureData& sigd\r\n         pubkey = it->second.first;\r\n         return true;\r\n     }\r\n-    // Look for pubkey in pubkey list\r\n+    // Look for pubkey in pubkey lists\r\n     const auto& pk_it = sigdata.misc_pubkeys.find(address);\r\n     if (pk_it != sigdata.misc_pubkeys.end()) {\r\n         pubkey = pk_it->second.first;\r\n         return true;\r\n     }\r\n+    const auto& tap_pk_it = sigdata.tap_pubkeys.find(address);\r\n+    if (tap_pk_it != sigdata.tap_pubkeys.end()) {\r\n+        pubkey = tap_pk_it->second.GetCPubKey();\r\n+        return true;\r\n+    }\r\n     // Query the underlying provider\r\n     return provider.GetPubKey(address, pubkey);\r\n }\r\ndiff --git a/src/script/sign.h b/src/script/sign.h\r\nindex f46bc55992..1cd82a7764 100644\r\n--- a/src/script/sign.h\r\n+++ b/src/script/sign.h\r\n@@ -79,6 +79,7 @@ struct SignatureData {\r\n     std::vector<unsigned char> taproot_key_path_sig; /// Schnorr signature for key path spending\r\n     std::map<std::pair<XOnlyPubKey, uint256>, std::vector<unsigned char>> taproot_script_sigs; ///< (Partial) schnorr signatures, indexed by XOnlyPubKey and leaf_hash.\r\n     std::map<XOnlyPubKey, std::pair<std::set<uint256>, KeyOriginInfo>> taproot_misc_pubkeys; ///< Miscellaneous Taproot pubkeys involved in this input along with their leaf script hashes and key origin data. Also includes the Taproot internal key (may have no leaf script hashes).\r\n+    std::map<CKeyID, XOnlyPubKey> tap_pubkeys; ///< Misc Taproot pubkeys involved in this input, by hash. (Equivalent of misc_pubkeys but for Taproot.)\r\n     std::vector<CKeyID> missing_pubkeys; ///< KeyIDs of pubkeys which could not be found\r\n     std::vector<CKeyID> missing_sigs; ///< KeyIDs of pubkeys for signatures which could not be found\r\n     uint160 missing_redeem_script; ///< ScriptID of the missing redeemScript (if any)\r\n```\r\n\r\n</details>\r\n\r\nAlso took the opportunity to rebase on master.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1598564442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "mentioned",
      "id": 9578171144,
      "node_id": "MEE_lADOABII585gwrw2zwAAAAI650sI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9578171144",
      "actor": {
        "login": "scgbckbone",
        "id": 25349625,
        "node_id": "MDQ6VXNlcjI1MzQ5NjI1",
        "avatar_url": "https://avatars.githubusercontent.com/u/25349625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scgbckbone",
        "html_url": "https://github.com/scgbckbone",
        "followers_url": "https://api.github.com/users/scgbckbone/followers",
        "following_url": "https://api.github.com/users/scgbckbone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/scgbckbone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/scgbckbone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/scgbckbone/subscriptions",
        "organizations_url": "https://api.github.com/users/scgbckbone/orgs",
        "repos_url": "https://api.github.com/users/scgbckbone/repos",
        "events_url": "https://api.github.com/users/scgbckbone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/scgbckbone/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T11:01:04Z"
    },
    {
      "event": "subscribed",
      "id": 9578171170,
      "node_id": "SE_lADOABII585gwrw2zwAAAAI650si",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9578171170",
      "actor": {
        "login": "scgbckbone",
        "id": 25349625,
        "node_id": "MDQ6VXNlcjI1MzQ5NjI1",
        "avatar_url": "https://avatars.githubusercontent.com/u/25349625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scgbckbone",
        "html_url": "https://github.com/scgbckbone",
        "followers_url": "https://api.github.com/users/scgbckbone/followers",
        "following_url": "https://api.github.com/users/scgbckbone/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/scgbckbone/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/scgbckbone/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/scgbckbone/subscriptions",
        "organizations_url": "https://api.github.com/users/scgbckbone/orgs",
        "repos_url": "https://api.github.com/users/scgbckbone/repos",
        "events_url": "https://api.github.com/users/scgbckbone/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/scgbckbone/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T11:01:04Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-23T18:55:58Z",
      "updated_at": "2023-06-23T18:55:58Z",
      "source": {
        "issue": {
          "id": 1765689902,
          "node_id": "PR_kwDOABII585TdCPe",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27920",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27920/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27920/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27920/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27920",
          "number": 27920,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: bugfix, always use apostrophe for spkm descriptor ID",
          "body": "Aiming to fix #27915.\r\n\r\nAs we re-write the descriptor's db record every time that\r\nthe wallet is loaded (at `TopUp` time), if the spkm ID differs\r\nfrom the one in db, the wallet will enter in an unrecoverable\r\ncorruption state (due to the storage of a descriptor with an ID\r\nthat is not linked to any other descriptor record in DB), and\r\nno soft version will be able to open it anymore.\r\n\r\nBecause we cannot change the past, to stay compatible between\r\nreleases, we need to always use the apostrophe version for the\r\nspkm IDs.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27920",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27920",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27920.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27920.patch"
          },
          "closed_at": "2023-07-04T01:42:27Z",
          "created_at": "2023-06-20T15:51:01Z",
          "updated_at": "2023-07-04T18:04:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-29T22:04:55Z",
      "updated_at": "2023-06-29T22:04:55Z",
      "source": {
        "issue": {
          "id": 1780553015,
          "node_id": "PR_kwDOABII585UOjie",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27997",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27997/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27997/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27997/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27997",
          "number": 27997,
          "state": "closed",
          "state_reason": null,
          "title": "Descriptors: rule out unspendable miniscript descriptors",
          "body": "`IsSane()` in Miniscript does not ensure a Script is actually spendable. This is an issue as we would accept any sane Miniscript when parsing a descriptor. Fix this by explicitly checking a Miniscript descriptor is both sane and spendable when parsing it.\r\n\r\nThis bug was exposed due to a check added in #22838 (https://github.com/bitcoin/bitcoin/pull/22838#discussion_r1226859880) that triggered a fuzz crash (https://github.com/bitcoin/bitcoin/pull/22838#issuecomment-1612510057).",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 1482182044,
              "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
              "name": "Descriptors",
              "description": "",
              "color": "e9f76c",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27997",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27997",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27997.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27997.patch"
          },
          "closed_at": "2023-07-17T23:16:21Z",
          "created_at": "2023-06-29T10:36:30Z",
          "updated_at": "2023-07-20T13:28:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-03T13:58:28Z",
      "updated_at": "2023-07-03T13:58:28Z",
      "source": {
        "issue": {
          "id": 1683416664,
          "node_id": "PR_kwDOF72rbM5PHdWx",
          "url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new/issues/155",
          "repository_url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new",
          "labels_url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new/issues/155/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new/issues/155/comments",
          "events_url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new/issues/155/events",
          "html_url": "https://github.com/LedgerHQ/app-bitcoin-new/pull/155",
          "number": 155,
          "state": "open",
          "state_reason": null,
          "title": "Tapminiscript",
          "body": "Adds support for descriptors containing miniscript on taproot trees.\r\n\r\nSee https://github.com/bitcoin/bitcoin/pull/27255 for details on the necessary changes.\r\n\r\nUnlike the PR in bitcoin-core, this keeps the stricter limits used for miniscripts in P2WSH even for tapscripts. This is unlikely to matter in practice, as scripts of that size are not feasible today on Nanos. If use cases for such extremely large tapscripts arise, this additional work can be done in the future − but that doesn't seem likely at this time.\r\n\r\nCloses: #154 ",
          "user": {
            "login": "bigspider",
            "id": 6681844,
            "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bigspider",
            "html_url": "https://github.com/bigspider",
            "followers_url": "https://api.github.com/users/bigspider/followers",
            "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
            "organizations_url": "https://api.github.com/users/bigspider/orgs",
            "repos_url": "https://api.github.com/users/bigspider/repos",
            "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/bigspider/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "COLLABORATOR",
          "milestone": {
            "url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new/milestones/1",
            "html_url": "https://github.com/LedgerHQ/app-bitcoin-new/milestone/1",
            "labels_url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new/milestones/1/labels",
            "id": 8965089,
            "node_id": "MI_kwDOF72rbM4AiMvh",
            "number": 1,
            "state": "open",
            "title": "2.2.0",
            "description": "The first release with tapscript support",
            "creator": {
              "login": "bigspider",
              "id": 6681844,
              "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/bigspider",
              "html_url": "https://github.com/bigspider",
              "followers_url": "https://api.github.com/users/bigspider/followers",
              "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
              "organizations_url": "https://api.github.com/users/bigspider/orgs",
              "repos_url": "https://api.github.com/users/bigspider/repos",
              "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/bigspider/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 3,
            "created_at": "2023-01-25T12:50:44Z",
            "updated_at": "2023-07-18T13:39:01Z"
          },
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/LedgerHQ/app-bitcoin-new/pulls/155",
            "html_url": "https://github.com/LedgerHQ/app-bitcoin-new/pull/155",
            "diff_url": "https://github.com/LedgerHQ/app-bitcoin-new/pull/155.diff",
            "patch_url": "https://github.com/LedgerHQ/app-bitcoin-new/pull/155.patch"
          },
          "created_at": "2023-04-25T15:37:40Z",
          "updated_at": "2023-07-05T12:03:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 9716180982,
      "node_id": "LE_lADOABII585gwrw2zwAAAAJDISf2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9716180982",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-04T03:06:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9875438137,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAJMnzo5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9875438137",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T14:37:22Z"
    },
    {
      "event": "unlabeled",
      "id": 9875896390,
      "node_id": "UNLE_lADOABII585gwrw2zwAAAAJMpjhG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9875896390",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T15:13:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1644136991,
      "node_id": "IC_kwDOABII585h_4of",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1644136991",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T15:28:04Z",
      "updated_at": "2023-07-20T15:28:04Z",
      "author_association": "MEMBER",
      "body": "Rebased (and corrected a comment in the fuzz test witness padding commit).",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1644136991",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T09:00:41Z",
      "updated_at": "2023-07-21T09:00:41Z",
      "source": {
        "issue": {
          "id": 1464474508,
          "node_id": "PR_kwDOABII585DtIR7",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26573",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26573/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26573/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26573/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26573",
          "number": 26573,
          "state": "open",
          "state_reason": null,
          "title": "Wallet: don't underestimate the fees when spending a Taproot output",
          "body": "Based on #26567. Alternative to #23502.\r\n\r\nCurrently, when estimating the size an input spending a Taproot output will have once signed, we always assume the key path will be used. Even if there are script paths. This can lead to pretty severe fee underestimation if the script path turns out to be used in the end. So instead assume the most expensive between all script paths and the key path will be used.\r\n\r\nThis is still not ideal, as there may be a huge gap between the size of a script path spend and a key path spend. Still, this is less bad than undershooting the fees.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26573",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26573",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26573.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26573.patch"
          },
          "created_at": "2022-11-25T12:21:59Z",
          "updated_at": "2023-08-27T02:49:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9886986029,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAJNT28t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9886986029",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T16:18:10Z"
    },
    {
      "event": "commented",
      "id": 1646270585,
      "node_id": "IC_kwDOABII585iIBh5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646270585",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T21:48:54Z",
      "updated_at": "2023-07-21T21:48:54Z",
      "author_association": "MEMBER",
      "body": "Added a missing check in the fuzz target since `GetExecStackSize()` now returns an optional.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1646270585",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "referenced",
      "id": 9938930397,
      "node_id": "REFE_lADOABII585gwrw2zwAAAAJQaArd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9938930397",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cbf385058bd68e3be98edab2637a42d988e70ffe",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbf385058bd68e3be98edab2637a42d988e70ffe",
      "created_at": "2023-07-27T17:48:37Z"
    },
    {
      "event": "referenced",
      "id": 10051176559,
      "node_id": "REFE_lADOABII585gwrw2zwAAAAJXGMhv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10051176559",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b11d694c100cad0018502810b5ff7659027ff98a",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/b11d694c100cad0018502810b5ff7659027ff98a",
      "created_at": "2023-08-09T19:02:07Z"
    },
    {
      "event": "labeled",
      "id": 10213738635,
      "node_id": "LE_lADOABII585gwrw2zwAAAAJgyUiL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10213738635",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-28T20:44:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1696873989,
      "node_id": "IC_kwDOABII585lJD4F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1696873989",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T06:55:31Z",
      "updated_at": "2023-08-29T06:55:31Z",
      "author_association": "MEMBER",
      "body": "Needs rebase if still relevant",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1696873989",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1MWJhODY5MTQ4NGNhNzY5OTFhY2IyNDY3ZGFiNWE3NDg0OGM3MmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/951ba8691484ca76991acb2467dab5a74848c72d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/951ba8691484ca76991acb2467dab5a74848c72d",
      "tree": {
        "sha": "fbea8ce0bbf620ce2b52cd370f2ee8b24c6b3517",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbea8ce0bbf620ce2b52cd370f2ee8b24c6b3517"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree fbea8ce0bbf620ce2b52cd370f2ee8b24c6b3517\nparent ab42b2ebdbf61225e636e4c00068fd29b2790d41\nauthor Antoine Poinsot <darosior@protonmail.com> 1674304995 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693387421 +0200\n\nminiscript: introduce a MsContext() helper to contexts\n\nWe are going to introduce Tapscript support in Miniscript, for which\nsome of Miniscript rules and properties change (new or modified\nfragments, different typing rules, different resources consumption, ..).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvCp0ACgkQ4T/BRc0/\nQwTHnQwA1+VT/D4qQ6XUq/KlOhrFhSDiK4d2mc5xJRjdLDAlmVpThn3kM/+Q1SDA\n5ExZuACx+yljtlg2ypgTxCu4isJPkZhS8zq0ORWle6eqquO+624ZJVplLeUg+RqG\nf4riw9xvHf1wkoLKp9e7R6vVQcVOVeNtd6ThqsXTiUCQdoKZ24xw22jnW+BYlrjR\nKt8VloE8i968fCOFDYgTWrI+ob/mk2MB241pxKQQT7RnN6B61Fw81wfQS6hlk6JK\nsfpOyRb4QWbI2gWjmVJ6Xk3I9pTUCuXC4KDtfMMH2yrpbK5scl08rQ5wnQaxSSsG\nniuMkzjk77dU2Gt+Ik1B1/WzLkpIZBoGbS/AN61LBwWAI2dVAVHhdVsTMOTEu6ER\n2aMttWzQFz3DEJ45+4srXc5ix0Fb0p9+hOIcrlBoFteZPbmATRs0FngRhxBJmB9V\nVogZjqMavuiPzC/AOBB12oSrX+t2vj0DNJhhlTHQ7ADweEKubZGf1gIyS9CY1F8B\nA/znEmev\n=q9ML\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab42b2ebdbf61225e636e4c00068fd29b2790d41",
          "sha": "ab42b2ebdbf61225e636e4c00068fd29b2790d41",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ab42b2ebdbf61225e636e4c00068fd29b2790d41"
        }
      ],
      "message": "miniscript: introduce a MsContext() helper to contexts\n\nWe are going to introduce Tapscript support in Miniscript, for which\nsome of Miniscript rules and properties change (new or modified\nfragments, different typing rules, different resources consumption, ..).",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T09:23:41Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T12:43:15Z"
      },
      "sha": "951ba8691484ca76991acb2467dab5a74848c72d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgyODgwOTEwMzFiNDgxZDU5Y2MyYjU4OTRmYTc5MGE3MDY1NDQ5NmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8288091031b481d59cc2b5894fa790a70654496a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8288091031b481d59cc2b5894fa790a70654496a",
      "tree": {
        "sha": "81bad23fb2a50650acd0a6afe76d468ccf9f454d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/81bad23fb2a50650acd0a6afe76d468ccf9f454d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 81bad23fb2a50650acd0a6afe76d468ccf9f454d\nparent 951ba8691484ca76991acb2467dab5a74848c72d\nauthor Antoine Poinsot <darosior@protonmail.com> 1683042909 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693387421 +0200\n\nminiscript: don't anticipate signature presence in CalcStackSize()\n\nIt's true that for any public key there'll be a signature check in a\nvalid Miniscript. The code would previously, when computing the size of\na satisfaction, account for the signature when it sees a public key\npush. Instead, account for it when it is required (ie when encountering\nthe `c:` wrapper). This has two benefits:\n- Allows to accurately compute the net effect of a fragment on the stack\n  size. This is necessary to track the size of the stack during the\n  execution of a Script.\n- It also just makes more sense, making the code more accessible to\n  future contributors.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvCp0ACgkQ4T/BRc0/\nQwRiCwv8Dt6lRfGm5/xtVt7sAPM+NB9TRjDrX2tFVHxIASXJe4xbSN0djFpLdEMI\nUJoxRO5H6kpeIJj8gUT+E8N4lz25i3kRknjpKPoLceuTXcmcxD1QyzOrbFzEz+Pc\nJlYHiX33sd5VoPULoqL+UciwQclf/n+MCo9d5jL2J3sa21jncU2oCS310Cyz06YB\nJ/Ndu75j4elhc4dQGTUdEgKDQoTjk6edDEVXnR17bAUAoCNMEUmhYFY+cS+lONie\nKm4WhHMapH2vn/tCAiNr2lhfkR44LzSTUyuU7WO5jIfRvnwKBnQ9NuOP6tKvtKY0\nOvGovVMWwOlpjtZ8s9FRpwgZCuGB/4dsXIBjgf88wkH+Vp7XWdKNuAHjWElC7Fn/\nAIo87tPISd4Y7MIQcoZbhngL5tNeOBC114P3VbcEF6KQN+4WQFF57L+8syDLp+OB\nV6IR+hczI/rsNu2i+saeRnnCOGM4Zw8tOyZI4TdpQHBVVm4oaJmKsMoLq20svvQi\nHgfFuZnf\n=Zq+5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/951ba8691484ca76991acb2467dab5a74848c72d",
          "sha": "951ba8691484ca76991acb2467dab5a74848c72d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/951ba8691484ca76991acb2467dab5a74848c72d"
        }
      ],
      "message": "miniscript: don't anticipate signature presence in CalcStackSize()\n\nIt's true that for any public key there'll be a signature check in a\nvalid Miniscript. The code would previously, when computing the size of\na satisfaction, account for the signature when it sees a public key\npush. Instead, account for it when it is required (ie when encountering\nthe `c:` wrapper). This has two benefits:\n- Allows to accurately compute the net effect of a fragment on the stack\n  size. This is necessary to track the size of the stack during the\n  execution of a Script.\n- It also just makes more sense, making the code more accessible to\n  future contributors.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T09:23:41Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-02T15:55:09Z"
      },
      "sha": "8288091031b481d59cc2b5894fa790a70654496a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDczNTJjNDA3MjEzZTc0NDBlZmQzNzM2ODk3YmVhZjg0MDllOWQ0NjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7352c407213e7440efd3736897beaf8409e9d462",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7352c407213e7440efd3736897beaf8409e9d462",
      "tree": {
        "sha": "6130cf90337254635cf48f86d51e032b63d1788c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6130cf90337254635cf48f86d51e032b63d1788c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6130cf90337254635cf48f86d51e032b63d1788c\nparent 8288091031b481d59cc2b5894fa790a70654496a\nauthor Antoine Poinsot <darosior@protonmail.com> 1674305399 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693387422 +0200\n\nminiscript: restrict multi() usage to P2WSH context\n\nCHECKMULTISIG is disabled for Tapscript. Instead, we'll introduce\na multi_a() fragment with the same semantic as multi().\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvCp4ACgkQ4T/BRc0/\nQwRlswwAmib+shGX/+J02NqbqGOrBMb5fwiGER8bs5KkMMOQ7+iXPgLs1Pk8ian8\nKVvOlh3G3sH7SphZ6VvDSTYq5dxUb8IB5jxSpjd+Fzn7SJqaz9VAWSpVKHGPvoFO\nMe2SjcWKw0i1dg+Ti//8TOiPi4oGz+xkbyuJKOeqCw7OWzLpxDELoh8gNMM/INPx\nHrGdD3Oe0PNKXyUrnkvz+fytJKhpMg6hi9T3AM29UXdwkW1OiZAMVPnwotNniolH\n2kj/SroR7BTFmWFnI/l1L7Xci3clz/itIIYQty6UcBao99N+lgZuXDeKc2cH7GR6\nVTPiNmd3H7+DyUZ6YELLlDFJk04SVyUA+Kigd4OjuWoQjUa2xJwgg2IjE3XjDVgd\nA2IPdHkhIMWOZAykUIKnQhu4/jWoeljtqtnS4+eMo9LcKwzZ6IPnd75TKYT/6BsT\nyI+WGeOoF/jKdFC8sdMNuH3SQqPhg76vGzCKfu2l966bC2vNI/yc2QF2JrV/sJLO\nL7eAC+12\n=QRfM\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8288091031b481d59cc2b5894fa790a70654496a",
          "sha": "8288091031b481d59cc2b5894fa790a70654496a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8288091031b481d59cc2b5894fa790a70654496a"
        }
      ],
      "message": "miniscript: restrict multi() usage to P2WSH context\n\nCHECKMULTISIG is disabled for Tapscript. Instead, we'll introduce\na multi_a() fragment with the same semantic as multi().",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T09:23:42Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T12:49:59Z"
      },
      "sha": "7352c407213e7440efd3736897beaf8409e9d462"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQxYzMxOWRjNWI4M2JmNzk0ZTI3MGU0MTM2NTdlZGYyMWI1ODAwZTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1c319dc5b83bf794e270e413657edf21b5800e2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d1c319dc5b83bf794e270e413657edf21b5800e2",
      "tree": {
        "sha": "1031ff10aca16c6b50a265ef38ab088ebd4c03d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1031ff10aca16c6b50a265ef38ab088ebd4c03d8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1031ff10aca16c6b50a265ef38ab088ebd4c03d8\nparent 7352c407213e7440efd3736897beaf8409e9d462\nauthor Antoine Poinsot <darosior@protonmail.com> 1674305543 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693387422 +0200\n\nminiscript: introduce a multi_a fragment\n\nIt is the equivalent of multi() but for Tapscript, using CHECKSIGADD\ninstead of CHECKMULTISIG.\n\nIt shares the same properties as multi() but for 'n', since a threshold\nmulti_a() may have an empty vector as the top element of its\nsatisfaction. It could also have the 'o' property when it only has a\nsingle key, but in this case a 'pk()' is always preferable anyways.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvCp4ACgkQ4T/BRc0/\nQwSW+gv8CV0tcYq+3zh8dUz+vPcFmdNUuiBpOlV+WyXSvyIj8aH+wwBsy883LVeq\nwRjSaTjtwCm+dbxXZ3Y/p92cFTvfqR1akQw3oGC3Nw25kiZs/g9rOE2QimYp48Jb\nbWLXSyOaCp/sJb4I8mK/KnQbMVQC75GtUdkMKl2hFV4iq4capo+y+6uK+01BQFbe\nE7Gk3HaPtl1YAkrjxuVHX56V+/HDfg+A0zMick9rDcAczVaHOZS3wU/48Rs+kkod\nlkWoxd9fyLBpDuKjQtDYJK81mx7Jq0W2RWaooO8NqebvfI1xZnudjTAto4NVG1a2\ng0WWlyNqrsQCJF0jh8Bqg+pgNk3eu5NM8XyGNM8ARPzmA5Obo2gIAjCJP3z750nP\nq6snBFpnwUIAhpzcIqWfVpv/CJVFzfWyfUWcYSxJnQTTLYXojp1L04XUcdHOIJaQ\nrAyZ3T3mg+Q+8sdElNSrYrVIzjN53kDu9ah6vqux76SwNWyLDVsWrqv0i5S+yN12\nj5cwTzHf\n=8Txt\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7352c407213e7440efd3736897beaf8409e9d462",
          "sha": "7352c407213e7440efd3736897beaf8409e9d462",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7352c407213e7440efd3736897beaf8409e9d462"
        }
      ],
      "message": "miniscript: introduce a multi_a fragment\n\nIt is the equivalent of multi() but for Tapscript, using CHECKSIGADD\ninstead of CHECKMULTISIG.\n\nIt shares the same properties as multi() but for 'n', since a threshold\nmulti_a() may have an empty vector as the top element of its\nsatisfaction. It could also have the 'o' property when it only has a\nsingle key, but in this case a 'pk()' is always preferable anyways.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T09:23:42Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T12:52:23Z"
      },
      "sha": "d1c319dc5b83bf794e270e413657edf21b5800e2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUxNDE5OTIwZTQ2ZDY3NDI4OGExMjg5N2RlNDlhM2NhMzIyOWQ3MmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1419920e46d674288a12897de49a3ca3229d72e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e1419920e46d674288a12897de49a3ca3229d72e",
      "tree": {
        "sha": "24668d775f35fd7b39273467507373731e463735",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/24668d775f35fd7b39273467507373731e463735"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 24668d775f35fd7b39273467507373731e463735\nparent d1c319dc5b83bf794e270e413657edf21b5800e2\nauthor Antoine Poinsot <darosior@protonmail.com> 1674388184 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693387423 +0200\n\nminiscript: make 'd:' have the 'u' property under Tapscript context\n\nIn Tapscript MINIMALIF is a consensus rule, so we can rely on the fact\nthat the `DUP IF [X] ENDIF` will always put an exact 1 on the stack upon\nsatisfaction.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvCp8ACgkQ4T/BRc0/\nQwTeYQv/R8aCMMCmcZAv38EkI7EPxxXGJGP0n0mS4FUmQq0a6RK56bHxEzRW/JDS\nofZiXiDd4kp3YD9xwVwnkDzZJ2ZXqq3wK6k60eQzfGfFqsbtD5eTqWKPlEtT0/m/\nH9G7OAbhjtbL7mIqZzItY4MasuqckNnuZxsK8YqYkQzmBZ7nYlEm2knTEfNZXDRZ\n4Jd1XFrqZhdeceoPbh7CJ0yo9c/uJMazvc94B4CUGNo2AW4N7keQ6ZloBt7tf8EB\nhnd8va8xYXon3yQB0Y1OdrqlWHHQRBTfItEWnXp/y1XhLnGVNtG492VlpVrBOXiz\nZKAzi98OXMg5Cny3E0UEgc+thm9aX8Z0knUGQiuM0B6Q534u5Wu0V68S6Nwpp0n2\nFpHhUZVHLYi4/n9ws0uJ+UxsEx0dfzGhOG+eOAzSeFPzYmCtE9yxj42wPm/uJ/Hj\neBbDAlGeFE3HgUH5NuXNBm4oUsdQ/U+98dNHg3BAXqNDTpVg88/zTUNcH/ExLSC0\nmOS7l2oo\n=vh72\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1c319dc5b83bf794e270e413657edf21b5800e2",
          "sha": "d1c319dc5b83bf794e270e413657edf21b5800e2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d1c319dc5b83bf794e270e413657edf21b5800e2"
        }
      ],
      "message": "miniscript: make 'd:' have the 'u' property under Tapscript context\n\nIn Tapscript MINIMALIF is a consensus rule, so we can rely on the fact\nthat the `DUP IF [X] ENDIF` will always put an exact 1 on the stack upon\nsatisfaction.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T09:23:43Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-22T11:49:44Z"
      },
      "sha": "e1419920e46d674288a12897de49a3ca3229d72e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVlOWUwMmNiZGJhZjJmY2Q3YmYzYWRmZmIwYmQ3Yzk4MTU4MTg0NDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee9e02cbdbaf2fcd7bf3adffb0bd7c9815818448",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ee9e02cbdbaf2fcd7bf3adffb0bd7c9815818448",
      "tree": {
        "sha": "2b6d72295cf05fb27e8fb99f3b56fcb847754851",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b6d72295cf05fb27e8fb99f3b56fcb847754851"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2b6d72295cf05fb27e8fb99f3b56fcb847754851\nparent e1419920e46d674288a12897de49a3ca3229d72e\nauthor Antoine Poinsot <darosior@protonmail.com> 1674474349 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693387424 +0200\n\nminiscript: make GetStackSize independent of P2WSH context\n\nIt was taking into account the P2WSH script push in the number of stack\nelements.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvCqAACgkQ4T/BRc0/\nQwT/0QwAu5iB7A9rHIic/xdeF/vFdP9zWim7GznXn8qk37NmP7u2hh9kIK93nSbF\nAZAeyIndJD36auH9X1ORS/mbkfJ7MXd/ex045d1+0KxYdSWucmo/YLGa86X66jLK\ngOVg/WNgfP/LU8jVVyVUW3a5OzS8PU+2m3ri/enprW94xIPjMvpCAsrBkDplvotz\ndWtIHD4zgopaYULvuFdo3HVTWa7mJKogSrlyywnbE159PaXo3u0Z5l8h18kWblUr\nIQ27nvOc0oMPftpGtNqwg2PoL+T7fqiRAMPXXdW0fEVr5UjaAtJOeu4UjD5ofiM/\nzqcD7hYU/JFmltoeTXYLBPG3xeJ8sJa7Tbm80cJTsbUBHC6c9IWI6i44ItOMYNar\nIoQhSQci0CpJhIyYBF4unQS1JUZXca8LufP5gzjEi0w2efMuVGGyFvLN6SlqKNoL\nsw7Gd9o9wu2a75XK3rymwi34pCRWg74LsoEQwCqlCpZapIm5Pq3sYy8WoiD53ewb\nQ/Qj8Qq2\n=z7zE\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1419920e46d674288a12897de49a3ca3229d72e",
          "sha": "e1419920e46d674288a12897de49a3ca3229d72e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e1419920e46d674288a12897de49a3ca3229d72e"
        }
      ],
      "message": "miniscript: make GetStackSize independent of P2WSH context\n\nIt was taking into account the P2WSH script push in the number of stack\nelements.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T09:23:44Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-23T11:45:49Z"
      },
      "sha": "ee9e02cbdbaf2fcd7bf3adffb0bd7c9815818448"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZiMGU3MzIyYTMxM2MzZjI0ODEyMjRkNDdjZTYzY2I4NTNiMGIxMWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb0e7322a313c3f2481224d47ce63cb853b0b11f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fb0e7322a313c3f2481224d47ce63cb853b0b11f",
      "tree": {
        "sha": "b9525f9e56415ef078e016db72036ca9f5bd5d5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b9525f9e56415ef078e016db72036ca9f5bd5d5d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b9525f9e56415ef078e016db72036ca9f5bd5d5d\nparent ee9e02cbdbaf2fcd7bf3adffb0bd7c9815818448\nauthor Antoine Poinsot <darosior@protonmail.com> 1674653465 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693387424 +0200\n\nminiscript: adapt resources checks depending on context\n\nUnder Tapscript, there is:\n- No limit on the number of OPs\n- No limit on the script size, it's implicitly limited by the maximum\n  (standard) transaction size.\n- No standardness limit on the number of stack items, it's limited by\n  the consensus MAX_STACK_SIZE. This requires tracking the maximum stack\n  size at all times during script execution, which will be tackled in\n  its own commit.\n\nIn order to avoid any Miniscript that would not be spendable by a\nstandard transaction because of the size of the witness, we limit the\nscript size under Tapscript to the maximum standard transaction size\nminus the maximum possible witness and Taproot control block sizes. Note\nthis is a conservative limit but it still allows for scripts almost a\nhundred times larger than under P2WSH (329871 vs 3600 bytes).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvCqAACgkQ4T/BRc0/\nQwSvKAwAkbejbXx4gO/MPlxV0zZtoLwI9RfH2Vw6b+3EaOEduLUVBeYGuaGxa+vL\nW/nWaRH4ect8nH83qyZgivE+j6UCUXpcJxc1YsYkd4RBTOJYcM1ykul1ZXMNbivu\nNzGlOTPDzk6VEQ2KsuWSK78Emvn7VbbuhIWJxxFU9SyVxXlu4fQLBW21fjp6BHr8\n6P4pm62S7+kMaA6uSAx3xqFs9XxvIXcj5ceoWc5AUlvmfG84hIUWbGTH8s9DHNXE\nNgVZjKAhuvUPuTmvwTFMi4ZcScwMCMMFm6V7sodbl7tWX6EWZtA8rQQqlIRfM7mg\ny0CTAUdolA3kxzTyDmM+cFL+pwDh486QII8y4ps7GmmhiKntB0TsNZ/UWA9f1+kK\nMlbEBRNJkLL6LAHbKIHlDhWbCWRocwFyuNU8luD7WNdx1SISegFscxBfewqLfc/0\nD5biCU9NbHxrVTBKABGnkaUo5hTWzYI0s/kvexacI2l3Nj9iGTnGgwTV2MxJ3kwf\ns83Ov1Xk\n=Vf+b\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee9e02cbdbaf2fcd7bf3adffb0bd7c9815818448",
          "sha": "ee9e02cbdbaf2fcd7bf3adffb0bd7c9815818448",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ee9e02cbdbaf2fcd7bf3adffb0bd7c9815818448"
        }
      ],
      "message": "miniscript: adapt resources checks depending on context\n\nUnder Tapscript, there is:\n- No limit on the number of OPs\n- No limit on the script size, it's implicitly limited by the maximum\n  (standard) transaction size.\n- No standardness limit on the number of stack items, it's limited by\n  the consensus MAX_STACK_SIZE. This requires tracking the maximum stack\n  size at all times during script execution, which will be tackled in\n  its own commit.\n\nIn order to avoid any Miniscript that would not be spendable by a\nstandard transaction because of the size of the witness, we limit the\nscript size under Tapscript to the maximum standard transaction size\nminus the maximum possible witness and Taproot control block sizes. Note\nthis is a conservative limit but it still allows for scripts almost a\nhundred times larger than under P2WSH (329871 vs 3600 bytes).",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T09:23:44Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-25T13:31:05Z"
      },
      "sha": "fb0e7322a313c3f2481224d47ce63cb853b0b11f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhkNDNhYTQxY2YyYjI3NGU4MTIxZGNjMjcxYzU1YTU4ZTc3N2VkNjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d43aa41cf2b274e8121dcc271c55a58e777ed64",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8d43aa41cf2b274e8121dcc271c55a58e777ed64",
      "tree": {
        "sha": "f648357bea6a3f98ca1c6fb923ec0b03958b9d3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f648357bea6a3f98ca1c6fb923ec0b03958b9d3a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f648357bea6a3f98ca1c6fb923ec0b03958b9d3a\nparent fb0e7322a313c3f2481224d47ce63cb853b0b11f\nauthor Antoine Poinsot <darosior@protonmail.com> 1675795203 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693387425 +0200\n\nminiscript: account for keys as being 32 bytes under Taproot context\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvCqEACgkQ4T/BRc0/\nQwSaWQv6A0aW9Z4z3MuJ9hENUvx9MKEfp1wf5MEcaeqRWOV+qPx04oya/r5W3rqy\np0qCi3qOm+mywLvHa+JbuIuH5i565WkO77b9LJUxqn7G4bvfZ0nRoyh697+NMvcA\n03wa75jXyInhP1Wavn2ZTo3ub9ySC38wBFah7FHR2+syTCrXCip1fWu9ZN1Gk26M\nMqEaCB8bn+LFLNEx45WJQVUrdGLvaeIE7itjBkAbl7PEbbXml0PEvDP7SnhxzPNG\n1TYieh13OrIa2powDacfxsJBNL31ryfbkoI4PuUxivxRMwmh7Xcd5iR5eExqkqPj\nkmQlT8MOI2Rz0FNCxGumLmSnriNR3WoI5dcVD+/QIpRKfXP3IKL3+ubBSyl5fivr\n1RtJF6n+YsC3t8esHqjFDiQ3pYKSjKZWOFjR6j2FZaEbBVjtRrRCpXfjDDW6ITNb\nhYt2uUlHKL6ECqturoDySB0QbJ2m3Y7+dnSBhzmd1gj8kekoSeHQgOl59ZmmqJYR\nVMGUctJB\n=PGkF\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb0e7322a313c3f2481224d47ce63cb853b0b11f",
          "sha": "fb0e7322a313c3f2481224d47ce63cb853b0b11f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fb0e7322a313c3f2481224d47ce63cb853b0b11f"
        }
      ],
      "message": "miniscript: account for keys as being 32 bytes under Taproot context",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T09:23:45Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-07T18:40:03Z"
      },
      "sha": "8d43aa41cf2b274e8121dcc271c55a58e777ed64"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgwNzRjMjRlMDU3MGNhMTc0NmM1YTk2NGE0ZTU1MjE5OTBhODYwOTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8074c24e0570ca1746c5a964a4e5521990a86091",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8074c24e0570ca1746c5a964a4e5521990a86091",
      "tree": {
        "sha": "c0682ccea908236bb288d2f179d5b2d3e88c48db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0682ccea908236bb288d2f179d5b2d3e88c48db"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c0682ccea908236bb288d2f179d5b2d3e88c48db\nparent 8d43aa41cf2b274e8121dcc271c55a58e777ed64\nauthor Antoine Poinsot <darosior@protonmail.com> 1676367092 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693387425 +0200\n\npubkey: introduce a GetCPubKey helper\n\nWe'll need to get a compressed key out of an x-only one in other places.\nAvoid duplicating the code.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvCqEACgkQ4T/BRc0/\nQwT2ugv+LM6l6Ln00QWKGz35/p81uRWheEdJwGI2rBIvxC6n0uA5YVCHQTnNWha+\noF6TH05egDrCAf7FruXOf/Caksodi1NU0R3UP2eEm+4VVqelOma2wVjFFdt7nwCF\nL5CLDG0HV4/Lt8RrNaOQIuU/hOC5ENZUxFggrj2Ig8WLyVcmshUVs7yYN3J0QSDH\nrWylO6mbbAoHVGZWbVEwfYLbD8ScC8Hhu1HVnws8jUTzSCyVtSSGJZuqxcMeqHRR\nxh7d3LN/3NdgzayQe0bD0gu4RzPcY5h2v2VIwDTK0ElKoP+GjTopQDWFD33rRiFH\nyOFZ4v+5oKP46io7G6Hc2sjNBQxkqH+gJ996yBXrpybVf9c5bDbxZ010/zvl6n0M\nvqbZiQHJSLmJLD7a4v6h+XuAWjNaq/8f8mn3RgPXsUndHK4OafzIByLdR3EMguZY\niU2y+644EB74EF1dxRZNSzdJx0szCy3uieg1wvkwFo9DaZrDSrdTQlLaD9Mii/Sw\nSY2rlKSN\n=cfhk\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d43aa41cf2b274e8121dcc271c55a58e777ed64",
          "sha": "8d43aa41cf2b274e8121dcc271c55a58e777ed64",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8d43aa41cf2b274e8121dcc271c55a58e777ed64"
        }
      ],
      "message": "pubkey: introduce a GetCPubKey helper\n\nWe'll need to get a compressed key out of an x-only one in other places.\nAvoid duplicating the code.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T09:23:45Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-14T09:31:32Z"
      },
      "sha": "8074c24e0570ca1746c5a964a4e5521990a86091"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMxMzc0ZmQ3OWZmM2JlMTJiMGUyNzFhZjcyMThmYTQ0MjQ1MWQzYzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1374fd79ff3be12b0e271af7218fa442451d3c8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c1374fd79ff3be12b0e271af7218fa442451d3c8",
      "tree": {
        "sha": "43a1df2e87315fac975038327d628b4526db2f8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43a1df2e87315fac975038327d628b4526db2f8d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 43a1df2e87315fac975038327d628b4526db2f8d\nparent 8074c24e0570ca1746c5a964a4e5521990a86091\nauthor Antoine Poinsot <darosior@protonmail.com> 1676363431 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693400963 +0200\n\nqa: Tapscript-Miniscript unit tests\n\nAdapt the test data and the parsing context to support x-only keys.\nAdapt the Test() helper to test existing cases under both Tapscript and\nP2WSH context, asserting what needs to be valid or not in each.\nFinally, add more cases that exercise the logic that was added in the\nprevious commits (multi_a, different resource checks and keys\nserialization under Tapscript, different properties for 'd:' fragment,\n..).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvP4MACgkQ4T/BRc0/\nQwRwmwv/RQShul7LrmU5tSUM9IaO6e83NcSakJx8U1FHXRku5Z+vjKJzz1UgQ43S\npEmsIe2NmAgVOpZpcxHhDtjgR5GZPIl9Pl48i5haxbkF5fU0WohcuJevGQtLLC3W\n1qjY75I88z0ain3wyWEth+LycdxokXmTX+lxjYJ0qzKkDdz/ECtAtaPc4030D013\nD9Elu7JzDvu/z+3wnniS3idltxU4us33Fsg/NeQc1JcgFEx8EGTl5ofHANUZMxxj\nuyogRcyzasBNH3Yt4kM17HKrF3R/f5PJtyWk2yvbIfA/mu7g4sFCFbJIzIQzBUr2\nuknSAhN0B8RCei/IIGuekW8A5fCQE2f1P5dylx3trogZQcEBP4ZqJ3R579hdHdur\nYulYScjndSK7lnuhnxjQUS4R6DvfxzZQzVygF5eK1YOiEb8tfww3Bnj2iNFl/Vcl\nM2aBRds5FXfrnQpXRZ43uG5VEFaUxF7kx10x8H4Q424RWjTTeO6DmBOqGQPSH4xo\nVE69or77\n=HovO\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8074c24e0570ca1746c5a964a4e5521990a86091",
          "sha": "8074c24e0570ca1746c5a964a4e5521990a86091",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8074c24e0570ca1746c5a964a4e5521990a86091"
        }
      ],
      "message": "qa: Tapscript-Miniscript unit tests\n\nAdapt the test data and the parsing context to support x-only keys.\nAdapt the Test() helper to test existing cases under both Tapscript and\nP2WSH context, asserting what needs to be valid or not in each.\nFinally, add more cases that exercise the logic that was added in the\nprevious commits (multi_a, different resource checks and keys\nserialization under Tapscript, different properties for 'd:' fragment,\n..).",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T13:09:23Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-14T08:30:31Z"
      },
      "sha": "c1374fd79ff3be12b0e271af7218fa442451d3c8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYxNmM1YjMwOTdiMWRjMDNiMWQ5MzFmYTE2ZDNkYmMwNjNmNWE0MzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f16c5b3097b1dc03b1d931fa16d3dbc063f5a434",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f16c5b3097b1dc03b1d931fa16d3dbc063f5a434",
      "tree": {
        "sha": "ed3d38a5294789a5977e589e191d2804aed18bf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed3d38a5294789a5977e589e191d2804aed18bf2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ed3d38a5294789a5977e589e191d2804aed18bf2\nparent c1374fd79ff3be12b0e271af7218fa442451d3c8\nauthor Antoine Poinsot <darosior@protonmail.com> 1677079738 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693400964 +0200\n\nfuzz: adapt Miniscript targets to Tapscript\n\nWe introduce another global that dictates the script context under which\nto operate when running the target.\n\nFor miniscript_script, just consume another byte to set the context.\nThis should only affect existing seeds to the extent they contain a\nCHECKMULTISIG. However it would not invalidate them entirely as they may\ncontain a NUMEQUAL or a CHECKSIGADD, and this still exercises a bit of\nthe parser.\n\nFor miniscript_string, reduce the string size by one byte and use the\nlast byte to determine the context. This is the change that i think\nwould invalidate the lowest number of existing seeds.\n\nFor miniscript_stable, we don't want to invalidate any seed. Instead of\ncreating a new miniscript_stable_tapscript, simply run the target once\nfor P2WSH and once for Tapscript (with the same seed).\n\nFor miniscript_smart, consume one byte before generating a pseudo-random\nnode to set the context. We have less regard for seed stability for this\ntarget anyways.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvP4QACgkQ4T/BRc0/\nQwQBfwv/UDgXWz9iFKwAjMY7+IANoW/zxqYtJ5MQUtECqlSs2AvAq6m6Fy3wrGDh\n4xhIpryI4sRH0VsWrqFcxz5V3wurZV7GLJHc6UkyCTZSgt1lIiiakYnK2wMNbFYM\nN7aDDzKX6SNDs1299L54AD83s5Mv/s3YNkZFG/ThYOlIa6lVB+Jcf9LKIVj77e3Q\nAoRsk8RZbTR72zl0jG1eCnwfTUs7OZwUOW1vcjwx+N1oPCgZw0BU9xUOMeAnWlSw\nMcV6g00fLieiFQKuNJIWfHGricAsmSy06GnhnbF0KD+WmhTINU1j2uFBcAaksDyM\nto8AVt5tRORg93U3TvGM9/Cw6WJFdTtNvwPkyqVRMb4hZIjsofc5TCNBtYjuLojw\nSPE3rJILBbMWYNRVQW1UZkXfPD8lf4Hv1CzqYwWx9LVjwdHh3vVqlBVWmEeN7wHZ\nqngDNiXakMJBN8XZgT3zvtUzYfhAoNeYBGr3wBJq0iJQG3WNrp6PF4EzxCd/3m8/\negKWtUeR\n=2pkx\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1374fd79ff3be12b0e271af7218fa442451d3c8",
          "sha": "c1374fd79ff3be12b0e271af7218fa442451d3c8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c1374fd79ff3be12b0e271af7218fa442451d3c8"
        }
      ],
      "message": "fuzz: adapt Miniscript targets to Tapscript\n\nWe introduce another global that dictates the script context under which\nto operate when running the target.\n\nFor miniscript_script, just consume another byte to set the context.\nThis should only affect existing seeds to the extent they contain a\nCHECKMULTISIG. However it would not invalidate them entirely as they may\ncontain a NUMEQUAL or a CHECKSIGADD, and this still exercises a bit of\nthe parser.\n\nFor miniscript_string, reduce the string size by one byte and use the\nlast byte to determine the context. This is the change that i think\nwould invalidate the lowest number of existing seeds.\n\nFor miniscript_stable, we don't want to invalidate any seed. Instead of\ncreating a new miniscript_stable_tapscript, simply run the target once\nfor P2WSH and once for Tapscript (with the same seed).\n\nFor miniscript_smart, consume one byte before generating a pseudo-random\nnode to set the context. We have less regard for seed stability for this\ntarget anyways.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T13:09:24Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-22T15:28:58Z"
      },
      "sha": "f16c5b3097b1dc03b1d931fa16d3dbc063f5a434"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdlNjQ3MGQ1NTNkMWVmNmZkZDkzN2ZhMmFiYjg3ZWRkMGE3NjIwYjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e6470d553d1ef6fdd937fa2abb87edd0a7620b2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7e6470d553d1ef6fdd937fa2abb87edd0a7620b2",
      "tree": {
        "sha": "dce46608b0bd9c7021bd0e17f36d7102a1993e47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dce46608b0bd9c7021bd0e17f36d7102a1993e47"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree dce46608b0bd9c7021bd0e17f36d7102a1993e47\nparent f16c5b3097b1dc03b1d931fa16d3dbc063f5a434\nauthor Antoine Poinsot <darosior@protonmail.com> 1678361920 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693400965 +0200\n\nminiscript: check maximum stack size during execution\n\nUnder Tapscript, due to the lifting of some standardness and consensus\nlimits, scripts can now run into the maximum stack size during\nexecution. Any Miniscript that may hit the limit on any of its spending\npaths must be marked as unsafe.\n\nTo do so we track the maximum stack size at all time during the\nexecution of a fragment. This is accomplished by:\n1. Tracking how the stack is affected *after* execution of a fragment (how\n   many items it pushed or popped).\n2. Tracking the maximum number of items that may be pushed on the stack\n   *during* the execution of a fragment.\n\nWe then check the maximum number of items pushed during the execution of\nthe root fragment with the maximum initial witness size for satisfying\nthis fragment against the stack size limit. Note this is a conservative\ncheck, since the path that may have the maximum number of items added\nduring execution may be different than the path that requires the\nlargest witness. But it should be a pretty close approximation in most\n(and non-pathological) cases.\n\nFor instance, let's consider an `and_b(X, Y)` fragment (corresponding to\n`[X] [Y] BOOLAND`). Let's say the `X` fragment may make the stack bigger\nby one item during its execution, but after its executed the stack size\nis at most -2 larger.  Let's say the `Y` fragment may grow the stack by\n4 elements during its execution and leave the stack with two items less.\n\nIn this example the `and_b(X, Y)` fragment will grow the stack size by\nat most 2 during its execution (executing `X` then executing `Y`) and\nthe largest size of the stack after its execution is the initial size\nminus 5 items (2 for `X`, 2 for `Y` and 1 for `BOOLAND`).\nIn absolutes, if the maximum satisfaction size for this fragment is 6,\nthen the stack size will never grow beyond 8 during its execution.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvP4UACgkQ4T/BRc0/\nQwRdtwwAg0MB0ytJ+bbqeBn33EIWTrVBRrn6CH1Ga4vFwexj0iuKyoVjUGFj3eAB\nk0niPfo+M3Rz6J3SItbNYb/Rc/MILrmkx2mQFkrX1XxfIYWcOCEpzzIsYeGhCed1\nPRw4z6p+qgqGltV4HezX3bswjDmAc4SW8UX6UZAGuzt+G2Aun0K+nLSPSCqT9K5V\nVjFO1ZKFbm5COQzcuOqBSXRkb187chWglvhSBxaojQ8f38TCKNMGJTCwAmJa/Px+\nWgrqkusA4aBF9HzPxDc3+KwOdwZyNcCn/IEAr5qEJUz3OAomw+DtivEP+ND2VQ6B\nGEdbofrzx7v4hRAJb3DsxwuvUFwyfc4pmWwPEaXKkdMLSG/0zdBb6LAwtKJpUHvA\nNqXk+MuAHDynZ8l3vShnuuFDDUeUOIKPHCkdDJhRz4GhH5BGdzXjEptdN89Rv+L0\nGOJ2+LjVibAcLKzqJZnlnaOjASuWrJ3RbwjlY/bJ2Kqyjp+U0i4/74LsnkgfCmBn\n5HmxvCjR\n=UNuv\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f16c5b3097b1dc03b1d931fa16d3dbc063f5a434",
          "sha": "f16c5b3097b1dc03b1d931fa16d3dbc063f5a434",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f16c5b3097b1dc03b1d931fa16d3dbc063f5a434"
        }
      ],
      "message": "miniscript: check maximum stack size during execution\n\nUnder Tapscript, due to the lifting of some standardness and consensus\nlimits, scripts can now run into the maximum stack size during\nexecution. Any Miniscript that may hit the limit on any of its spending\npaths must be marked as unsafe.\n\nTo do so we track the maximum stack size at all time during the\nexecution of a fragment. This is accomplished by:\n1. Tracking how the stack is affected *after* execution of a fragment (how\n   many items it pushed or popped).\n2. Tracking the maximum number of items that may be pushed on the stack\n   *during* the execution of a fragment.\n\nWe then check the maximum number of items pushed during the execution of\nthe root fragment with the maximum initial witness size for satisfying\nthis fragment against the stack size limit. Note this is a conservative\ncheck, since the path that may have the maximum number of items added\nduring execution may be different than the path that requires the\nlargest witness. But it should be a pretty close approximation in most\n(and non-pathological) cases.\n\nFor instance, let's consider an `and_b(X, Y)` fragment (corresponding to\n`[X] [Y] BOOLAND`). Let's say the `X` fragment may make the stack bigger\nby one item during its execution, but after its executed the stack size\nis at most -2 larger.  Let's say the `Y` fragment may grow the stack by\n4 elements during its execution and leave the stack with two items less.\n\nIn this example the `and_b(X, Y)` fragment will grow the stack size by\nat most 2 during its execution (executing `X` then executing `Y`) and\nthe largest size of the stack after its execution is the initial size\nminus 5 items (2 for `X`, 2 for `Y` and 1 for `BOOLAND`).\nIn absolutes, if the maximum satisfaction size for this fragment is 6,\nthen the stack size will never grow beyond 8 during its execution.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T13:09:25Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-09T11:38:40Z"
      },
      "sha": "7e6470d553d1ef6fdd937fa2abb87edd0a7620b2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUxOTExMDYyNTFkNGVhZGIwY2Q3MjNhOGU3NzIzODJlODg3ZDgwNjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5191106251d4eadb0cd723a8e772382e887d8062",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5191106251d4eadb0cd723a8e772382e887d8062",
      "tree": {
        "sha": "c8f70cd8bd8e6606363a5fc4ced9f621fac6a286",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c8f70cd8bd8e6606363a5fc4ced9f621fac6a286"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c8f70cd8bd8e6606363a5fc4ced9f621fac6a286\nparent 7e6470d553d1ef6fdd937fa2abb87edd0a7620b2\nauthor Antoine Poinsot <darosior@protonmail.com> 1678361985 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693400966 +0200\n\nqa: test Miniscript max stack size tracking\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvP4YACgkQ4T/BRc0/\nQwQ8xQv+P+sZp+7OgwOapDqe9UBnOhcLAmxdRvUcW+OYuNSikaMmj2OmkXkfNx15\nRSL/Bg2jLilTVbgRCJBmBoOGk77RooXwk5Bsub1nF/bvIGN3BQsYAU7VtZ8Y5UQD\nzLHH3cy44OGC+Z/6wwGkgofr7wm70LE09+RGj4cPkNIwfafMDl5XX/70XNux7jeL\nn/3KXSY4+p5uVqRuX7eQuUXie9Tz3P4tjEeWGuvR1yT7UYqzlDiYNja8/JAYJqBq\nd0BukAqgJzcZXQT2kISItwAlZsdQTd3CjyeTw0sLX0tLKUVA1rwmklOJ7AxvyGqH\nc5M+9YEyMaul1nDu4NVHUhpmhyRIqUTrQmWUdEtl2TVhMVgBewuSxy/D54A7L7nU\n1O04QzX+lsfzlprpbg8wijeZWo/7o319fXdGhmv6a2wccij9qUwtpgGowFxWzRn3\ntQwuWINzHHdMgYSK57KEPhhE59Wow+jUbOV2i9DK9ZP2+xDQHEW9MR4gPJcI9n3d\nEMjkSwfO\n=JfBr\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e6470d553d1ef6fdd937fa2abb87edd0a7620b2",
          "sha": "7e6470d553d1ef6fdd937fa2abb87edd0a7620b2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7e6470d553d1ef6fdd937fa2abb87edd0a7620b2"
        }
      ],
      "message": "qa: test Miniscript max stack size tracking",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T13:09:26Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-09T11:39:45Z"
      },
      "sha": "5191106251d4eadb0cd723a8e772382e887d8062"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1NjEyZDAyMDA3YmNmZTAxNDhlODU5NmMwYjMxNzcxYzQzZWJhMmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95612d02007bcfe0148e8596c0b31771c43eba2a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/95612d02007bcfe0148e8596c0b31771c43eba2a",
      "tree": {
        "sha": "5b9a3f60343dae573acb0f10cadf3d9687684f8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b9a3f60343dae573acb0f10cadf3d9687684f8a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5b9a3f60343dae573acb0f10cadf3d9687684f8a\nparent 5191106251d4eadb0cd723a8e772382e887d8062\nauthor Antoine Poinsot <darosior@protonmail.com> 1678049586 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693400966 +0200\n\nfuzz: miniscript: higher sensitivity for max stack size limit under Tapscript\n\nIn order to exacerbate a mistake in the stack size tracking logic,\nsometimes pad the witness to make the script execute at the brink of the\nstack size limit. This way if the stack size is underestimated for a\nscript it would immediately fail `VerifyScript`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvP4YACgkQ4T/BRc0/\nQwRHUwwAwzRgbXSjXURBqJbwTPFQNrWSS43u1P3+zE9+aLV9cQd/SsCf4S76q0S5\nSBXyn4u33ySCBsvbhDxGQTiF0pI01BE8AkCUXBtnzcYfNqOm0GgI9kcMNvgsthzn\n3OXy9scHJUodFnfwzSOrG5jzk/Hy2BIQWJLKZUm/o8U1LxRyuIj4Ky6JE4qieuFl\nVqMx4dBSa8LfuwX+S1AabjR+6pLBeVw0/u8Yb9dnMIYL9Wm7dCLCboVZd3WIfECz\nFh82sc6EYb0nOvR9FjES/281gn5DeuoqvSDGFVTtaWHsaC31J3tMu1BXwsjiSgoz\nXptqPjJafB3KXdpGdy5Caiy4jOkdfUh6L69lHH2o4zBFNrbuCNski+r4TUaHw0OY\nvXChq/Qo1Vg7QeoTdiHUPikLryhus6gGxnvplA81QuGsZKUf2C4j2avMqvorWNNj\n4BeE5SPBDvxweRxCt9/WHnH47DOd4mXuuCU6cqlYfKov6vxc+flZGix/fTvTGddk\nilrDGyt7\n=l9WN\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5191106251d4eadb0cd723a8e772382e887d8062",
          "sha": "5191106251d4eadb0cd723a8e772382e887d8062",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5191106251d4eadb0cd723a8e772382e887d8062"
        }
      ],
      "message": "fuzz: miniscript: higher sensitivity for max stack size limit under Tapscript\n\nIn order to exacerbate a mistake in the stack size tracking logic,\nsometimes pad the witness to make the script execute at the brink of the\nstack size limit. This way if the stack size is underestimated for a\nscript it would immediately fail `VerifyScript`.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T13:09:26Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-05T20:53:06Z"
      },
      "sha": "95612d02007bcfe0148e8596c0b31771c43eba2a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZkNTliYzNmOTcyYTYyMTA4NzNiY2Q0MTA4NzUzODMzMzcwMTJiMDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd59bc3f972a6210873bcd410875383337012b03",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fd59bc3f972a6210873bcd410875383337012b03",
      "tree": {
        "sha": "b707e733164397fd84f4e516951be6e8396f5afb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b707e733164397fd84f4e516951be6e8396f5afb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b707e733164397fd84f4e516951be6e8396f5afb\nparent 95612d02007bcfe0148e8596c0b31771c43eba2a\nauthor Antoine Poinsot <darosior@protonmail.com> 1674325625 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693400967 +0200\n\ndescriptor: Tapscript-specific Miniscript key serialization / parsing\n\n64-hex-characters public keys are valid in Miniscript key expressions\nwithin a Tapscript context.\n\nKeys under a Tapscript context always serialize as 32-bytes x-only\npublic keys (and that's what get hashed by OP_HASH160 on the stack too).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvP4cACgkQ4T/BRc0/\nQwTAawwAuQHcpJiLCRKhkFxHBt25UcrWK8NsYbB6c7BzdhC6gxO2J0twQ7zT3cBp\nbc4LNoIzuxDWMide+xImq547Es7DNEReNhZM5pp61aKvCbpX82qBUwBCeQG7lI5Y\nzr9/LuossDR4CWFuQ+lRgx9xAgC7dO/5CSj+uFgAoMOBM5xyi90DuXrtM+5nhrQz\n/8AlzYAw7dvSKGcy9W1MRDrhN98TepUyyFaZMfoFppFjSbRnG9SfDYIwlN9QOVyx\nG4caYPsGJeR2y2NOwcwO3e3m2mfSKQFcD2msWf9202tuWxzreE7mBqMi5oer0HcS\niteOWgpdzyLBf6cRzplcI42xAELPjOTIHUthl/deKYmLffVTCBaSXM+OnZ4QkqBF\nrLNfc7vzL3L1FtUC4NfepOi9jVLzsqLpZQFIFf0HxJTrscLu0u+Fx3R5EKoscywR\nQtMQ9m3xsYIZ527Pn61tVaIwI0MHwYybhOVT826YZ4tk5lyfZIAVef1JIOE4Z9CW\n0wLjOkSe\n=dnUR\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95612d02007bcfe0148e8596c0b31771c43eba2a",
          "sha": "95612d02007bcfe0148e8596c0b31771c43eba2a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/95612d02007bcfe0148e8596c0b31771c43eba2a"
        }
      ],
      "message": "descriptor: Tapscript-specific Miniscript key serialization / parsing\n\n64-hex-characters public keys are valid in Miniscript key expressions\nwithin a Tapscript context.\n\nKeys under a Tapscript context always serialize as 32-bytes x-only\npublic keys (and that's what get hashed by OP_HASH160 on the stack too).",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T13:09:27Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T18:27:05Z"
      },
      "sha": "fd59bc3f972a6210873bcd410875383337012b03"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNjOGQxOWE0ZThkZWEzYzA2YzIzMDNhYzcwN2E1YTEzZDZkMWEyYmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc8d19a4e8dea3c06c2303ac707a5a13d6d1a2bc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cc8d19a4e8dea3c06c2303ac707a5a13d6d1a2bc",
      "tree": {
        "sha": "e8beecac0b251282f415cb21ba4ef4f5d84b314d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8beecac0b251282f415cb21ba4ef4f5d84b314d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e8beecac0b251282f415cb21ba4ef4f5d84b314d\nparent fd59bc3f972a6210873bcd410875383337012b03\nauthor Antoine Poinsot <darosior@protonmail.com> 1674308269 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693400967 +0200\n\ndescriptor: parse Miniscript expressions within Taproot descriptors\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvP4cACgkQ4T/BRc0/\nQwRoyQwAlJYeXSdFYIW2PS7LVukE9v20PdYE+4ERVF9B01wkdf6osmC2eDQ9+PEZ\nkrizNY4oTSSR1QqddbNgUpYOmzEz3OTUyGltj9b8YxRF5L3ZtVp8lsuyyM8vXaPG\nWJqNEh8/2eBj9ghowkvIgitQDqYKy22qsveOzAOOJ1qgd2EImztxX3MVje5HTIEy\nQf0LZF/WRdROU3/474nEhuQaOdrPeZpVU/bbXJ7ED7F1bHFXXqqy9oBW2l4KbzNS\nEd02QDrIsSfgTnO48MSRxmorF4UT2koDd9u6ywQW07rC2gqwadEz252Zzm+fNYkt\nZNyZga/nawQ4pZ9SB7DheT3wiDbW0rpx9RpKIjSqMMLoCie7BslX4QtRG+mCeuMH\nOJugP4dX7prBP//xTQgjhv9iZ8uQlz0Wxvwwkzwbip6h5ts6WcOH5mCCZpuY4dY5\nXR0FA78Po257j1GGZZGWqZwGYFaKSXTQL1rClqplrPYSaDG09stm67eUaRgDLCxK\n5ouAA11G\n=Llpj\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd59bc3f972a6210873bcd410875383337012b03",
          "sha": "fd59bc3f972a6210873bcd410875383337012b03",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fd59bc3f972a6210873bcd410875383337012b03"
        }
      ],
      "message": "descriptor: parse Miniscript expressions within Taproot descriptors",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T13:09:27Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T13:37:49Z"
      },
      "sha": "cc8d19a4e8dea3c06c2303ac707a5a13d6d1a2bc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFmOWE1NjM3Njk4NWU3NzcxMDNkOGRiNzYxNGViMTI3YmU0M2NmMjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af9a56376985e777103d8db7614eb127be43cf29",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/af9a56376985e777103d8db7614eb127be43cf29",
      "tree": {
        "sha": "5fc4889f8853613201c00dbde84539fae86b98c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5fc4889f8853613201c00dbde84539fae86b98c0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5fc4889f8853613201c00dbde84539fae86b98c0\nparent cc8d19a4e8dea3c06c2303ac707a5a13d6d1a2bc\nauthor Antoine Poinsot <darosior@protonmail.com> 1676458561 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693400968 +0200\n\nqa: functional test Miniscript inside Taproot descriptors\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvP4gACgkQ4T/BRc0/\nQwQ5dgwAxikPSqNrN1oAPRtsZ0HnU5OsZctkMTCsRvZv7S3HO8sUb/BTUoDkyeax\no7QClF+rEFwwxURTpiWo8dJCyPjm6BhS9oCk4daIqL0PF62V5sOIRtG8gpYIpSkJ\nl2fPhukW++E9sjg9oBgLbcDKSU83uCAjqao1i0apPsZUiwJ7r2a/ZEagVwKRlMOF\ns+6SOtGKx2P7hzfWo70Av2Oo/bncRRTPSJBDOepgRqMu6XpQ7DaB4n4SH7XUGE+n\nsnxJLY2IdqVyAFYuSKDjKO2xOKIn65cwSu58Y4EMbYYZFbGkjNj/xWYqcxUmy3W1\n2XZaPmScaTE1VETEkSDptY3kttvJVxfT9GxJSh50XXBlT/eTLh67ZQWrVrSkC5Y3\ndp41/i4Djd5zTEQvtWF9+5J93Q9wB7xvOHZAMDeq8yAS/bUY2Qp1sK0lplPxSHex\nRnSRzTweKcpDw0F753f/TtQpuJN81giWimBBKJeFn8OsCMcuCUlHB7bOqxnUR/yv\nwuZgNOoc\n=hvQS\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc8d19a4e8dea3c06c2303ac707a5a13d6d1a2bc",
          "sha": "cc8d19a4e8dea3c06c2303ac707a5a13d6d1a2bc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cc8d19a4e8dea3c06c2303ac707a5a13d6d1a2bc"
        }
      ],
      "message": "qa: functional test Miniscript inside Taproot descriptors",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T13:09:28Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-15T10:56:01Z"
      },
      "sha": "af9a56376985e777103d8db7614eb127be43cf29"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYxYjc0YTM1MGNhY2I0NzNjODI1MjdkYzRlMGI5MmU0ODI3NmI4NWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/61b74a350cacb473c82527dc4e0b92e48276b85c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/61b74a350cacb473c82527dc4e0b92e48276b85c",
      "tree": {
        "sha": "3365ef448cada7867cf0da27aae7bdb636012197",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3365ef448cada7867cf0da27aae7bdb636012197"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3365ef448cada7867cf0da27aae7bdb636012197\nparent af9a56376985e777103d8db7614eb127be43cf29\nauthor Antoine Poinsot <darosior@protonmail.com> 1677248283 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693400969 +0200\n\nMOVEONLY: script/sign: move Satisfier declaration above Tapscript signing\n\nWe'll need the Miniscript satisfier for Tapscript too.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvP4kACgkQ4T/BRc0/\nQwRClgwAlAB9dH73i9QkAGTiANTNdWy2REnRPTZh2g+Khtb+AInVkaBivPmNnY6L\n+Id2b021zWG5kPnJJ5CeLHt2A2JyoL5yURYgoewpnTJBXENi7pTiwpoVQi6d4UNa\nVMyg3z8SZUvMGcQ+n8vY8E6vUjCQIGLG7E5UG8f3ZHh4+51QHGURP0Htn6nkRQQ3\nAXMy8SxCPOe5WPASP84vJEUlVlhPOjJ+iSWMwiYbGhI/q3PEa2z6UjUKO2ed6QcB\nOyuoiNA2+c/vz8LBYjl45KykUD6S9mzxND2HPnC9coB0zaneUPGOJtmX0sY9ZG9m\neIZDmFUyAlcbvXUy7YG8mk/VQrfOa+HWQ/B1EKAJZLnHVt9vHHtLQfzPPv5C1Q7b\njrjrxjTTQ04Sj84dkDmx5rZ5c/l60lkMGOcwJcXmkq9gUHXGUnfRW4fdlKdtzhvR\n8Vl6obpCSSDjDwF+Nx/UoQQOh1ERaPjlU6/+ka3F0Km+Hwese3uX9behuh7o7RmR\ngZGkOsNx\n=E7e3\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af9a56376985e777103d8db7614eb127be43cf29",
          "sha": "af9a56376985e777103d8db7614eb127be43cf29",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/af9a56376985e777103d8db7614eb127be43cf29"
        }
      ],
      "message": "MOVEONLY: script/sign: move Satisfier declaration above Tapscript signing\n\nWe'll need the Miniscript satisfier for Tapscript too.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T13:09:29Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-24T14:18:03Z"
      },
      "sha": "61b74a350cacb473c82527dc4e0b92e48276b85c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU0OGViOGM2NWRjZDM4ZjE2NWNhNTk5MDdkYzFmNDUxNDNhODNmOGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/548eb8c65dcd38f165ca59907dc1f45143a83f8c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/548eb8c65dcd38f165ca59907dc1f45143a83f8c",
      "tree": {
        "sha": "930b5132ca54f753344051a264b0cecd4e332de0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/930b5132ca54f753344051a264b0cecd4e332de0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 930b5132ca54f753344051a264b0cecd4e332de0\nparent 61b74a350cacb473c82527dc4e0b92e48276b85c\nauthor Antoine Poinsot <darosior@protonmail.com> 1677252852 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693400969 +0200\n\nscript/sign: Miniscript support in Tapscript\n\nWe make the Satisfier a base in which to store the common methods\nbetween the Tapscript and P2WSH satisfier, and from which they both\ninherit.\n\nA field is added to SignatureData to be able to satisfy pkh() under\nTapscript context (to get the pubkey hash preimage) without wallet data.\nFor instance in `finalizepsbt` RPC. See also the next commits for a\nfunctional test that exercises this.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvP4kACgkQ4T/BRc0/\nQwRWKwv/UqoR3tfDfvIsnTE76nx8Er21WVo3MNiBPUqbdpILT3h0qZXw/hy8d53H\nm8d3ybPymTC8qhe7LvHLrI1ntyWTYGeY96wFHkHWJp+J+gr5D711u9YggtkGITZ1\nZhSfDi3q+7UUkssghRdV8hkIWIj0yBb+02S0/hM1/1EZarXsYQVdaMzkUQymjFKa\ncgo9Ktdt0xVz8QjJ2uCF7pi1ZSrNk6xFAwmc2bVIrVzenacdmz6BQb4arXqufqAt\ndLGb32XB7s1nAOuWgSsknd+f2y6meouCIeicNkrqxBPI0LFxN3VWRZ9ZO/UYpCrU\nfYJRSMq2zuBKo0qJtClEelvj/NNrDDZeZD14FRrI1JFxasgDZ3iPZAwWeLKPnfoO\nkN9w0R5RacxGYxEkY8VmXC7zg7n+uIosh1y9XpYiGzeJI354GRWJOjFw4t7i1jAz\nF4fw3H3z04vKRuCFyy5mxEWxf5bM6H2wMmqASdLkx6Pcqn5JhkxPBNEkUdGmg3LH\ncuIZ9oPn\n=9aUH\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/61b74a350cacb473c82527dc4e0b92e48276b85c",
          "sha": "61b74a350cacb473c82527dc4e0b92e48276b85c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/61b74a350cacb473c82527dc4e0b92e48276b85c"
        }
      ],
      "message": "script/sign: Miniscript support in Tapscript\n\nWe make the Satisfier a base in which to store the common methods\nbetween the Tapscript and P2WSH satisfier, and from which they both\ninherit.\n\nA field is added to SignatureData to be able to satisfy pkh() under\nTapscript context (to get the pubkey hash preimage) without wallet data.\nFor instance in `finalizepsbt` RPC. See also the next commits for a\nfunctional test that exercises this.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T13:09:29Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-24T15:34:12Z"
      },
      "sha": "548eb8c65dcd38f165ca59907dc1f45143a83f8c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA3ZmM5MGE3MDY0MGM0MGFlZmVjMzFmNzY3Mzg3OGI1YzYwZDRlZjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07fc90a70640c40aefec31f7673878b5c60d4ef8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/07fc90a70640c40aefec31f7673878b5c60d4ef8",
      "tree": {
        "sha": "d1a8856a7890f89750f46b129c5029263bcf1e5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d1a8856a7890f89750f46b129c5029263bcf1e5f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d1a8856a7890f89750f46b129c5029263bcf1e5f\nparent 548eb8c65dcd38f165ca59907dc1f45143a83f8c\nauthor Antoine Poinsot <darosior@protonmail.com> 1677860777 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693400970 +0200\n\nqa: list descriptors in Miniscript signing functional tests\n\nThis makes it more generalistic than just having the miniscripts since\nwe are going to have Taproot descriptors with (multiple) miniscripts in\nthem too.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvP4oACgkQ4T/BRc0/\nQwSPjwwAkE9VZ+1cMdkw0hMbxyVKUaKLDtiliDImHnJY1PXotaAWeP09JLu/vraT\nk3uFJO0aVLh7IhOG8kb7dSuE9qIt2Fnlrn1AmIBNOTCUF7R8r/YrY3bBzU6Atlc4\nAgv+Ta6lth57b+XMWlcBeCgd7z7xnGKOo8EMR9YWAjj65254CG5fP2zv4ge7yJan\nJVlNbxTo30xfkYETjEbB8FAmdfKTjtLO1VACSe1BfjRtuRQRepO2ZhnwNB8rSef4\n0eVFXbvxBxVGbXLkxHle4x/bUNiGcemSdaVRRyP1H0nixKxA/C1VtitSSixj/czJ\niprSvk4gQEBCwdZ2Me4QD3ZvZXTS0cXB0htrY0InPNLlk55iW45rKAy189ULSKKl\nUe+NTm3AjxAA975VwuNcWtyD0wu4t6idLhua20o63oYJtb0q4Fd/8GHoH+AdKPyn\nefguQVnjQ+dSrTRqJ5LROOVZvcLi/hjO3nakmFdaUKQKidhBWKUM4eOYR068QEh8\nz8GTwB6B\n=BfV6\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/548eb8c65dcd38f165ca59907dc1f45143a83f8c",
          "sha": "548eb8c65dcd38f165ca59907dc1f45143a83f8c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/548eb8c65dcd38f165ca59907dc1f45143a83f8c"
        }
      ],
      "message": "qa: list descriptors in Miniscript signing functional tests\n\nThis makes it more generalistic than just having the miniscripts since\nwe are going to have Taproot descriptors with (multiple) miniscripts in\nthem too.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T13:09:30Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-03T16:26:17Z"
      },
      "sha": "07fc90a70640c40aefec31f7673878b5c60d4ef8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ1OWE1YzIxZWU4NDNjODMzMTAwNzJjYTQ2NjEyZGE5YWQwMTljYWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/459a5c21ee843c83310072ca46612da9ad019cad",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/459a5c21ee843c83310072ca46612da9ad019cad",
      "tree": {
        "sha": "1ba65a1840c534457ff944afd392a6e4a76245fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ba65a1840c534457ff944afd392a6e4a76245fb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1ba65a1840c534457ff944afd392a6e4a76245fb\nparent 07fc90a70640c40aefec31f7673878b5c60d4ef8\nauthor Antoine Poinsot <darosior@protonmail.com> 1677863925 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693400970 +0200\n\nqa: Tapscript Miniscript signing functional tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvP4oACgkQ4T/BRc0/\nQwRAXQwAlOfwJ6V3IkXwSYIiDac2ZtM/4TLQlOSKj0/dauDADQPPUE0ujY2GumiE\nOVirWivBh5UV+11FEmVFfduiS7jfLszFhnw2WERkmdfkv8uOs7+HaiidJtDQMtJZ\n91H9EEvXaZ+7AYa2EGSuM4Jfm13clQnvekJIN886y5COnVS65Tk7BkaSCSRkFsGT\nXywEg1GRywSp5rjAHVAqBC1EpGi7fiRVyLXtUVRy6zNolq3+nKQLG2NOx9nP0/r6\nqqkyJwx1G8iMNHkdcmzOjj5GUyrj791bIthxj0PWuD6qUKMJeIzkEnVnMHw6dRTi\nDTMETtwS6bzC8a1iwrAR3lQdoArsAfCEkq6M7n6L3+vKNd0s+R7521+IVZgaf2i3\n6ouqh1rN1c0O8bxsQ8ZUnkwtXQSnNp7eS9znP1JS1YHxIYw7W+3MLxlQ7BrM9AyZ\njrYB5P0IbPvjGJ3AjRZkKQDgYIcyPr5zi1H6ZLFj0hXmEzoRxfFW0qQWenp43PEu\nCSkZUst5\n=z9bK\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07fc90a70640c40aefec31f7673878b5c60d4ef8",
          "sha": "07fc90a70640c40aefec31f7673878b5c60d4ef8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/07fc90a70640c40aefec31f7673878b5c60d4ef8"
        }
      ],
      "message": "qa: Tapscript Miniscript signing functional tests",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T13:09:30Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-03T17:18:45Z"
      },
      "sha": "459a5c21ee843c83310072ca46612da9ad019cad"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQyMmE5ZjMwNzQ2YjRmYjZlYTMyMWFkMWI0MWE2M2E3MDRhZmY4Mzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "tree": {
        "sha": "41e3aa1df159b32ad42c5caf7e8d15789baede4d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41e3aa1df159b32ad42c5caf7e8d15789baede4d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 41e3aa1df159b32ad42c5caf7e8d15789baede4d\nparent 459a5c21ee843c83310072ca46612da9ad019cad\nauthor Antoine Poinsot <darosior@protonmail.com> 1678957425 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1693400971 +0200\n\nminiscript: have a custom Node destructor\n\nTo avoid recursive calls in shared_ptr's destructor that could lead to a\nstack overflow.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTvP4sACgkQ4T/BRc0/\nQwRYkgwA0GzH4v0wkz1Z6ZK8qeTmUkWDUQ+8z+iPQL2xK9XmddHYxes5HYWGlqkJ\nMglp5WBDVYjyRocBD9OxvIXwnnW95wCFhwUDkDVOwS9zGZyCkH12RtenIta/6UAX\nOeDv5tVI5nKyj+TiQpZ4mbzEJy8jGLawT1TCxjItaX4if9UVzazIAsHHJqxUYYvF\nkFouuBa2v7OO/k5SvLosVGUlaKrgX588p86X1ezXK3bPUrmhRfPgUJSTOYcgd80y\nJdHBBz2q0LL6hHTjuPfOv5K2KdxfbI0V3l567g8z1gshu8C6o3nK73Aeaes82xr0\nKa1BPDaqHqlX8OjTQTsE1xkGjaTAhoUgNs1DNaR9AAjyG3MGjVIYR+P25n+ZD87m\nrVuM0Tnvj/7bGjdQHFnyGE+C7ufPznKrWL1U94kMOfEZALjb8hHfvX/bZS3sNPDb\nPMBbD2T1n/Wthi3WLWgfuqT+4SYEpZoyveIrbG3/daLUbuHC1o61U4XzzAXT5ow1\nif7zKh2u\n=Ef1D\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/459a5c21ee843c83310072ca46612da9ad019cad",
          "sha": "459a5c21ee843c83310072ca46612da9ad019cad",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/459a5c21ee843c83310072ca46612da9ad019cad"
        }
      ],
      "message": "miniscript: have a custom Node destructor\n\nTo avoid recursive calls in shared_ptr's destructor that could lead to a\nstack overflow.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-30T13:09:31Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-16T09:03:45Z"
      },
      "sha": "422a9f30746b4fb6ea321ad1b41a63a704aff839"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10232923664,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAJh7gYQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10232923664",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T13:09:43Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136724397",
      "pull_request_review_id": 1340932665,
      "id": 1136724397,
      "node_id": "PRRC_kwDOABII585DwQmt",
      "diff_hunk": "@@ -1901,7 +2136,38 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n                 if (!k || *k < 1 || *k > *n) return {};\n                 in += 3 + *n;\n                 std::reverse(keys.begin(), keys.end());\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::MULTI, std::move(keys), *k));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::MULTI, std::move(keys), *k));\n+                break;\n+            }\n+            // Tapscript's multi",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 965,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps `multi_a` for consistency, since `multi` is a valid fragment elsewhere?\r\nOr `Tapscript multisig` if you want to explicitly _not_ refer to the fragment.",
      "created_at": "2023-03-15T08:57:45Z",
      "updated_at": "2023-03-15T08:57:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1136724397",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136724397"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137201661",
      "pull_request_review_id": 1341664972,
      "id": 1137201661,
      "node_id": "PRRC_kwDOABII585DyFH9",
      "diff_hunk": "@@ -1188,23 +1188,28 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }",
      "path": "src/script/miniscript.h",
      "position": 458,
      "original_position": 9,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It might be worth explicitly enumerating both the known contexts, and have a defensive final  `assert(false);`.\r\nSimilarly for other places where the context is accessed).",
      "created_at": "2023-03-15T14:42:41Z",
      "updated_at": "2023-03-15T14:42:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137201661",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137201661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1364,
      "original_line": 1364,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137224005",
      "pull_request_review_id": 1341692112,
      "id": 1137224005,
      "node_id": "PRRC_kwDOABII585DyKlF",
      "diff_hunk": "@@ -1188,23 +1188,28 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }",
      "path": "src/script/miniscript.h",
      "position": 458,
      "original_position": 9,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "in_reply_to_id": 1137201661,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I could have a `IsTapscript(ctx)` helper that does that next to the `MiniscriptContext` enum. It could then be used in all those places to not have to duplicate the verbose `switch () ... assert(false)`.",
      "created_at": "2023-03-15T14:55:02Z",
      "updated_at": "2023-03-15T14:55:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137224005",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137224005"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1364,
      "original_line": 1364,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137247463",
      "pull_request_review_id": 1341720788,
      "id": 1137247463,
      "node_id": "PRRC_kwDOABII585DyQTn",
      "diff_hunk": "@@ -1139,24 +1314,37 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }\n+\n+    //! Return the maximum number of stack elements needed to satisfy this script non-malleably.\n+    uint32_t GetStackSize() const { return ss.sat.size.value; }\n \n-    /** Return the maximum number of stack elements needed to satisfy this script non-malleably, including\n-     * the script push. */\n-    uint32_t GetStackSize() const { return ss.sat.value + 1; }\n+    //! Return the maximum size of the stack during execution of this script.\n+    uint32_t GetExecStackSize() const {\n+        return ss.sat.size.value + (uint32_t)std::max(ss.sat.exec.value, 0);\n+    }\n \n-    //! Check the maximum stack size for this script against the policy limit.\n-    bool CheckStackSize() const { return GetStackSize() - 1 <= MAX_STANDARD_P2WSH_STACK_ITEMS; }\n+    //! Check the maximum stack size for this script against the limits.\n+    template <typename Ctx> bool CheckStackSize(const Ctx& ctx) const {\n+        if (ctx.MsContext() == MiniscriptContext::P2WSH && GetStackSize() > MAX_STANDARD_P2WSH_STACK_ITEMS) {\n+            return false;\n+        }",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 426,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why not this?\r\n```C++\r\n        if (ctx.MsContext() == MiniscriptContext::P2WSH) {\r\n            return GetStackSize() <= MAX_STANDARD_P2WSH_STACK_ITEMS;\r\n        }\r\n```\r\nOtherwise, it seems to add the other condition for the `P2WSH` context as well.",
      "created_at": "2023-03-15T15:08:07Z",
      "updated_at": "2023-03-15T15:08:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137247463",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137247463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1334,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137259200",
      "pull_request_review_id": 1341735215,
      "id": 1137259200,
      "node_id": "PRRC_kwDOABII585DyTLA",
      "diff_hunk": "@@ -536,10 +537,10 @@ BOOST_AUTO_TEST_CASE(descriptor_test)\n \n     // Invalid checksum\n     CheckUnparsable(\"wsh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))#abcdef12\", \"wsh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))#abcdef12\", \"Provided checksum 'abcdef12' does not match computed checksum 'tyzp6a7p'\");\n-    // Only p2wsh context is valid\n-    CheckUnparsable(\"sh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))\", \"sh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))\", \"Miniscript expressions can only be used in wsh\");\n+    // Only p2wsh or tr context are valid",
      "path": "src/test/descriptor_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo: \"contexts\"",
      "created_at": "2023-03-15T15:14:54Z",
      "updated_at": "2023-03-15T15:14:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137259200",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137259200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 540,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137280634",
      "pull_request_review_id": 1341762826,
      "id": 1137280634,
      "node_id": "PRRC_kwDOABII585DyYZ6",
      "diff_hunk": "@@ -1017,7 +1148,7 @@ void TestNode(const NodeRef& node, FuzzedDataProvider& provider)\n             assert(it != TEST_DATA.dummy_sigs.end());\n             return it->second.second;\n         }\n-        case Fragment::MULTI: {\n+        case Fragment::MULTI: case Fragment::MULTI_A: {",
      "path": "src/test/fuzz/miniscript.cpp",
      "position": null,
      "original_position": 480,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: missing a newline",
      "created_at": "2023-03-15T15:20:51Z",
      "updated_at": "2023-03-15T15:20:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137280634",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137280634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137296790",
      "pull_request_review_id": 1341784989,
      "id": 1137296790,
      "node_id": "PRRC_kwDOABII585DycWW",
      "diff_hunk": "@@ -316,11 +316,22 @@ struct MaxInt {\n         return a.value + b.value;\n     }\n \n+    friend MaxInt<I> operator-(const MaxInt<I>& a, const I& b) {\n+        if (!a.valid) return {};\n+        return a.value - b;",
      "path": "src/script/miniscript.h",
      "position": 65,
      "original_position": 6,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "157c4a047b573dfac775f25c970e1f1762fe8f7b",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I suppose it never happens, but worth checking that `a.value >= b`?\r\nEspecially since it could be used with unsigned types.",
      "created_at": "2023-03-15T15:25:05Z",
      "updated_at": "2023-03-15T15:25:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137296790",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137296790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 331,
      "original_line": 331,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138537375",
      "pull_request_review_id": 1343600247,
      "id": 1138537375,
      "node_id": "PRRC_kwDOABII585D3LOf",
      "diff_hunk": "@@ -1139,24 +1314,37 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }\n+\n+    //! Return the maximum number of stack elements needed to satisfy this script non-malleably.\n+    uint32_t GetStackSize() const { return ss.sat.size.value; }\n \n-    /** Return the maximum number of stack elements needed to satisfy this script non-malleably, including\n-     * the script push. */\n-    uint32_t GetStackSize() const { return ss.sat.value + 1; }\n+    //! Return the maximum size of the stack during execution of this script.\n+    uint32_t GetExecStackSize() const {\n+        return ss.sat.size.value + (uint32_t)std::max(ss.sat.exec.value, 0);\n+    }\n \n-    //! Check the maximum stack size for this script against the policy limit.\n-    bool CheckStackSize() const { return GetStackSize() - 1 <= MAX_STANDARD_P2WSH_STACK_ITEMS; }\n+    //! Check the maximum stack size for this script against the limits.\n+    template <typename Ctx> bool CheckStackSize(const Ctx& ctx) const {\n+        if (ctx.MsContext() == MiniscriptContext::P2WSH && GetStackSize() > MAX_STANDARD_P2WSH_STACK_ITEMS) {\n+            return false;\n+        }",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 426,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": 1137247463,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, it didn't matter since the computation is trivial and the bounds more loose for Tapscript anyways. But your suggestion is clearer indeed, taken, thanks.",
      "created_at": "2023-03-16T11:57:43Z",
      "updated_at": "2023-03-16T11:57:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138537375",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138537375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1334,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138538592",
      "pull_request_review_id": 1343601973,
      "id": 1138538592,
      "node_id": "PRRC_kwDOABII585D3Lhg",
      "diff_hunk": "@@ -536,10 +537,10 @@ BOOST_AUTO_TEST_CASE(descriptor_test)\n \n     // Invalid checksum\n     CheckUnparsable(\"wsh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))#abcdef12\", \"wsh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))#abcdef12\", \"Provided checksum 'abcdef12' does not match computed checksum 'tyzp6a7p'\");\n-    // Only p2wsh context is valid\n-    CheckUnparsable(\"sh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))\", \"sh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))\", \"Miniscript expressions can only be used in wsh\");\n+    // Only p2wsh or tr context are valid",
      "path": "src/test/descriptor_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": 1137259200,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Meh. Done.",
      "created_at": "2023-03-16T11:58:49Z",
      "updated_at": "2023-03-16T11:58:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138538592",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138538592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 540,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138541531",
      "pull_request_review_id": 1343605518,
      "id": 1138541531,
      "node_id": "PRRC_kwDOABII585D3MPb",
      "diff_hunk": "@@ -1017,7 +1148,7 @@ void TestNode(const NodeRef& node, FuzzedDataProvider& provider)\n             assert(it != TEST_DATA.dummy_sigs.end());\n             return it->second.second;\n         }\n-        case Fragment::MULTI: {\n+        case Fragment::MULTI: case Fragment::MULTI_A: {",
      "path": "src/test/fuzz/miniscript.cpp",
      "position": null,
      "original_position": 480,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": 1137280634,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm i thought i was following the style used elsewhere, but i must have dreamed it. Done.",
      "created_at": "2023-03-16T12:01:05Z",
      "updated_at": "2023-03-16T12:01:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138541531",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138541531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138548620",
      "pull_request_review_id": 1343614719,
      "id": 1138548620,
      "node_id": "PRRC_kwDOABII585D3N-M",
      "diff_hunk": "@@ -316,11 +316,22 @@ struct MaxInt {\n         return a.value + b.value;\n     }\n \n+    friend MaxInt<I> operator-(const MaxInt<I>& a, const I& b) {\n+        if (!a.valid) return {};\n+        return a.value - b;",
      "path": "src/script/miniscript.h",
      "position": 65,
      "original_position": 6,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "157c4a047b573dfac775f25c970e1f1762fe8f7b",
      "in_reply_to_id": 1137296790,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm that's a good point re unsigned type, but it needs to be able to return negative values. So i guess it's up to the caller to make sure they don't call this with `b > a` if `a` is unsigned, as with regular substractions?",
      "created_at": "2023-03-16T12:06:40Z",
      "updated_at": "2023-03-16T12:06:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138548620",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138548620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 331,
      "original_line": 331,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138892649",
      "pull_request_review_id": 1344105798,
      "id": 1138892649,
      "node_id": "PRRC_kwDOABII585D4h9p",
      "diff_hunk": "@@ -1188,23 +1188,28 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }",
      "path": "src/script/miniscript.h",
      "position": 458,
      "original_position": 9,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "in_reply_to_id": 1137201661,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Alright, finally applied the change to the many occurrences in each commit. It should also be more readable now.",
      "created_at": "2023-03-16T15:33:33Z",
      "updated_at": "2023-03-16T15:33:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138892649",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138892649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1364,
      "original_line": 1364,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160599451",
      "pull_request_review_id": 1376054310,
      "id": 1160599451,
      "node_id": "PRRC_kwDOABII585FLVeb",
      "diff_hunk": "@@ -1502,7 +1524,7 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n     }\n     // Process miniscript expressions.\n     {\n-        KeyParser parser(&out, nullptr);\n+        KeyParser parser(/*out = */&out, /* in = */nullptr, /* ctx = */miniscript::MiniscriptContext::P2WSH);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "ef0eb7f87d19bd8a3ebff4f095d321964808df73",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        KeyParser parser(/*out =*/&out, /*in=*/nullptr, /*ctx=*/miniscript::MiniscriptContext::P2WSH);\r\n```",
      "created_at": "2023-04-07T10:04:12Z",
      "updated_at": "2023-04-07T10:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160599451",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160599451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160600034",
      "pull_request_review_id": 1376054310,
      "id": 1160600034,
      "node_id": "PRRC_kwDOABII585FLVni",
      "diff_hunk": "@@ -1670,7 +1692,7 @@ std::unique_ptr<DescriptorImpl> InferScript(const CScript& script, ParseScriptCo\n     }\n \n     if (ctx == ParseScriptContext::P2WSH) {\n-        KeyParser parser(nullptr, &provider);\n+        KeyParser parser(/* out = */nullptr, /* in = */&provider, /* ctx = */miniscript::MiniscriptContext::P2WSH);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 109,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "ef0eb7f87d19bd8a3ebff4f095d321964808df73",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        KeyParser parser(/*out=*/nullptr, /*in=*/&provider, /*ctx=*/miniscript::MiniscriptContext::P2WSH);",
      "created_at": "2023-04-07T10:05:19Z",
      "updated_at": "2023-04-07T10:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160600034",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160600034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1695,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606636",
      "pull_request_review_id": 1376054310,
      "id": 1160606636,
      "node_id": "PRRC_kwDOABII585FLXOs",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;\n+        case MiniscriptContext::TAPSCRIPT: return true;\n+    }\n+    assert(false);",
      "path": "src/script/miniscript.cpp",
      "position": 11,
      "original_position": 11,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "iirc, `assert` crashes the node. wouldn't it be better to use the `Assume` macro?",
      "created_at": "2023-04-07T10:17:46Z",
      "updated_at": "2023-04-07T10:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606636",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606743",
      "pull_request_review_id": 1376054310,
      "id": 1160606743,
      "node_id": "PRRC_kwDOABII585FLXQX",
      "diff_hunk": "@@ -605,6 +608,7 @@ struct Node {\n                 case Fragment::OR_I: return BuildScript(OP_IF, subs[0], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::ANDOR: return BuildScript(std::move(subs[0]), OP_NOTIF, subs[2], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::MULTI: {\n+                    assert(!IsTapscript(ctx.MsContext()));",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 14,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same comment as above re: `assert`",
      "created_at": "2023-04-07T10:17:59Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606743",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 611,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606878",
      "pull_request_review_id": 1376054310,
      "id": 1160606878,
      "node_id": "PRRC_kwDOABII585FLXSe",
      "diff_hunk": "@@ -704,6 +708,7 @@ struct Node {\n                     if (node.subs[2]->fragment == Fragment::JUST_0) return std::move(ret) + \"and_n(\" + std::move(subs[0]) + \",\" + std::move(subs[1]) + \")\";\n                     return std::move(ret) + \"andor(\" + std::move(subs[0]) + \",\" + std::move(subs[1]) + \",\" + std::move(subs[2]) + \")\";\n                 case Fragment::MULTI: {\n+                    assert(!IsTapscript(ctx.MsContext()));",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 22,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same comment as above re: `assert`",
      "created_at": "2023-04-07T10:18:15Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606878",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 711,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160608237",
      "pull_request_review_id": 1376054310,
      "id": 1160608237,
      "node_id": "PRRC_kwDOABII585FLXnt",
      "diff_hunk": "@@ -1534,6 +1539,7 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n+                if (IsTapscript(ctx.MsContext())) return {};",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 30,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "probably out of scope for this PR, but it would be nice to have the parser tell you why it wasn't able to parse the script, rather than just return empty",
      "created_at": "2023-04-07T10:20:52Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160608237",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160608237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160609483",
      "pull_request_review_id": 1376054310,
      "id": 1160609483,
      "node_id": "PRRC_kwDOABII585FLX7L",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n ",
      "path": "src/script/miniscript.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "not a big deal, but I think it's more correct to say \"CHECKMULTISIG is disabled in Tapscript\" in the commit message",
      "created_at": "2023-04-07T10:23:16Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160609483",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160609483"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 11,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160611768",
      "pull_request_review_id": 1376054310,
      "id": 1160611768,
      "node_id": "PRRC_kwDOABII585FLYe4",
      "diff_hunk": "@@ -1539,27 +1617,9 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n-                if (IsTapscript(ctx.MsContext())) return {};\n-                // Get threshold\n-                int next_comma = FindNextChar(in, ',');\n-                if (next_comma < 1) return {};\n-                if (!ParseInt64(std::string(in.begin(), in.begin() + next_comma), &k)) return {};\n-                in = in.subspan(next_comma + 1);\n-                // Get keys\n-                std::vector<Key> keys;\n-                while (next_comma != -1) {\n-                    next_comma = FindNextChar(in, ',');\n-                    int key_length = (next_comma == -1) ? FindNextChar(in, ')') : next_comma;\n-                    if (key_length < 1) return {};\n-                    auto key = ctx.FromString(in.begin(), in.begin() + key_length);\n-                    if (!key) return {};\n-                    keys.push_back(std::move(*key));\n-                    in = in.subspan(key_length + 1);\n-                }\n-                if (keys.size() < 1 || keys.size() > 20) return {};\n-                if (k < 1 || k > (int64_t)keys.size()) return {};\n-                script_size += 2 + (keys.size() > 16) + (k > 16) + 34 * keys.size();\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::MULTI, std::move(keys), k));\n+                if (!parse_multi_exp(in, /* is_multi_a = */false)) return {};",
      "path": "src/script/miniscript.h",
      "position": 803,
      "original_position": 172,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "c0ba8ebbf6369b37b645165bb5cd638fc7eee67f",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                if (!parse_multi_exp(in, /*is_multi_a=*/false)) return {};\r\n```",
      "created_at": "2023-04-07T10:27:31Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160611768",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160611768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1834,
      "original_line": 1834,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160612094",
      "pull_request_review_id": 1376054310,
      "id": 1160612094,
      "node_id": "PRRC_kwDOABII585FLYj-",
      "diff_hunk": "@@ -1539,27 +1617,9 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n-                if (IsTapscript(ctx.MsContext())) return {};\n-                // Get threshold\n-                int next_comma = FindNextChar(in, ',');\n-                if (next_comma < 1) return {};\n-                if (!ParseInt64(std::string(in.begin(), in.begin() + next_comma), &k)) return {};\n-                in = in.subspan(next_comma + 1);\n-                // Get keys\n-                std::vector<Key> keys;\n-                while (next_comma != -1) {\n-                    next_comma = FindNextChar(in, ',');\n-                    int key_length = (next_comma == -1) ? FindNextChar(in, ')') : next_comma;\n-                    if (key_length < 1) return {};\n-                    auto key = ctx.FromString(in.begin(), in.begin() + key_length);\n-                    if (!key) return {};\n-                    keys.push_back(std::move(*key));\n-                    in = in.subspan(key_length + 1);\n-                }\n-                if (keys.size() < 1 || keys.size() > 20) return {};\n-                if (k < 1 || k > (int64_t)keys.size()) return {};\n-                script_size += 2 + (keys.size() > 16) + (k > 16) + 34 * keys.size();\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::MULTI, std::move(keys), k));\n+                if (!parse_multi_exp(in, /* is_multi_a = */false)) return {};\n+            } else if (Const(\"multi_a(\", in)) {\n+                if (!parse_multi_exp(in, /* is_multi_a = */true)) return {};",
      "path": "src/script/miniscript.h",
      "position": 805,
      "original_position": 174,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "c0ba8ebbf6369b37b645165bb5cd638fc7eee67f",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                if (!parse_multi_exp(in, /*is_multi_a=*/true)) return {};\r\n```",
      "created_at": "2023-04-07T10:28:16Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160612094",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160612094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1836,
      "original_line": 1836,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160615879",
      "pull_request_review_id": 1376054310,
      "id": 1160615879,
      "node_id": "PRRC_kwDOABII585FLZfH",
      "diff_hunk": "@@ -833,51 +858,152 @@ struct Node {\n     }\n \n     internal::StackSize CalcStackSize() const {\n+        // Among non-malleable satisfactions and dissatisfactions, this computes for each fragment:\n+        // - The maximum witness stack size of this (dis)satisfaction;\n+        // - The maximum number of elements added or removed on the stack after executing it;\n+        // - The maximum number of elements added to the stack while executing it.\n         switch (fragment) {\n-            case Fragment::JUST_0: return {{}, 0};\n+            case Fragment::JUST_0: return {{}, {0, 1}};\n             case Fragment::JUST_1:\n             case Fragment::OLDER:\n-            case Fragment::AFTER: return {0, {}};\n-            case Fragment::PK_K: return {1, 1};\n-            case Fragment::PK_H: return {2, 2};\n+            case Fragment::AFTER: return {{0, 1}, {}};\n+            case Fragment::PK_K: return {{1, 1}, {1, 1}};\n+            case Fragment::PK_H: return {{2, 0, 2}, {2, 0, 2}};\n             case Fragment::SHA256:\n             case Fragment::RIPEMD160:\n             case Fragment::HASH256:\n-            case Fragment::HASH160: return {1, {}};\n+            case Fragment::HASH160: return {{1, 0, 2}, {}};\n             case Fragment::ANDOR: {\n-                const auto sat{(subs[0]->ss.sat + subs[1]->ss.sat) | (subs[0]->ss.dsat + subs[2]->ss.sat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[2]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto& z{subs[2]->ss};\n+                const auto sat_size{(x.sat.size + y.sat.size) | (x.dsat.size + z.sat.size)};\n+                const auto dsat_size{x.dsat.size + z.dsat.size};\n+                const auto sat_diff{((x.sat.diff + y.sat.diff) | (x.dsat.diff + z.sat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff - 1 + z.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff - 1 + y.sat.exec) | (x.dsat.diff - 1 + z.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + z.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::AND_V: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::AND_B: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::AND_V: return {subs[0]->ss.sat + subs[1]->ss.sat, {}};\n-            case Fragment::AND_B: return {subs[0]->ss.sat + subs[1]->ss.sat, subs[0]->ss.dsat + subs[1]->ss.dsat};\n             case Fragment::OR_B: {\n-                const auto sat{(subs[0]->ss.dsat + subs[1]->ss.sat) | (subs[0]->ss.sat + subs[1]->ss.dsat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[1]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.dsat.size + y.sat.size) | (x.sat.size + y.dsat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{((x.dsat.diff + y.sat.diff) | (x.sat.diff + y.dsat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff + y.sat.exec) | (x.sat.diff + y.dsat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_C: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto sat_diff{(x.sat.diff | (x.dsat.diff + y.sat.diff)) - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff - 1 + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::OR_D: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff | (x.dsat.diff - 1 + y.sat.diff)};\n+                const auto dsat_diff{x.dsat.diff - 1 + y.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff + 1) | (x.dsat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_I: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.sat.size + 1) | (y.sat.size + 1)};\n+                const auto dsat_size{(x.dsat.size + 1) | (y.dsat.size + 1)};\n+                const auto sat_diff{(x.sat.diff | y.sat.diff) - 1};\n+                const auto dsat_diff{(x.dsat.diff | y.dsat.diff) - 1};\n+                const auto sat_exec{(x.sat.exec | y.sat.exec) - 1};\n+                const auto dsat_exec{(x.dsat.exec | y.dsat.exec) - 1};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::OR_C: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), {}};\n-            case Fragment::OR_D: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), subs[0]->ss.dsat + subs[1]->ss.dsat};\n-            case Fragment::OR_I: return {(subs[0]->ss.sat + 1) | (subs[1]->ss.sat + 1), (subs[0]->ss.dsat + 1) | (subs[1]->ss.dsat + 1)};\n-            case Fragment::MULTI: return {k + 1, k + 1};\n-            case Fragment::MULTI_A: return {keys.size(), keys.size()};\n+            case Fragment::MULTI: return {{(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}, {(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}};\n+            case Fragment::MULTI_A: return {{(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}, {(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}};\n             case Fragment::WRAP_A:\n             case Fragment::WRAP_N:\n-            case Fragment::WRAP_S:\n-            case Fragment::WRAP_C: return subs[0]->ss;\n-            case Fragment::WRAP_D: return {1 + subs[0]->ss.sat, 1};\n-            case Fragment::WRAP_V: return {subs[0]->ss.sat, {}};\n-            case Fragment::WRAP_J: return {subs[0]->ss.sat, 1};\n+            case Fragment::WRAP_S: return subs[0]->ss;\n+            case Fragment::WRAP_C: {\n+                const auto& sub_sat{subs[0]->ss.sat};\n+                const auto& sub_dsat{subs[0]->ss.dsat};\n+                return {{sub_sat.size, sub_sat.diff - 1, sub_sat.exec}, {sub_dsat.size, sub_dsat.diff - 1, sub_dsat.exec}};\n+            }\n+            case Fragment::WRAP_D: return {{1 + subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, 1}};\n+            case Fragment::WRAP_V: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff - 1, subs[0]->ss.sat.exec}, {}};\n+            case Fragment::WRAP_J: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, subs[0]->ss.dsat.exec | 1}};\n             case Fragment::THRESH: {\n-                auto sats = Vector(internal::MaxInt<uint32_t>(0));\n-                for (const auto& sub : subs) {\n-                    auto next_sats = Vector(sats[0] + sub->ss.dsat);\n-                    for (size_t j = 1; j < sats.size(); ++j) next_sats.push_back((sats[j] + sub->ss.dsat) | (sats[j - 1] + sub->ss.sat));\n-                    next_sats.push_back(sats[sats.size() - 1] + sub->ss.sat);\n-                    sats = std::move(next_sats);\n+                // The maximum satisfaction witness stack size for this fragment, indexed by threshold.\n+                auto sats_size = Vector(internal::MaxInt<uint32_t>(0));\n+                // Same for the stack size differential after executing this fragment.\n+                auto sats_diff = Vector(internal::MaxInt<int32_t>(0));\n+                // The maximum stack size at any point during execution of this fragment (or any sub\n+                // fragment thereoff), indexed by threshold.\n+                auto sats_exec = Vector(internal::MaxInt<int32_t>(0));\n+                for (size_t i = 0; i < subs.size(); ++i) {\n+                    // Start with the (non-malleable) dissatisfaction size.\n+                    auto next_sats_size = Vector(sats_size[0] + subs[i]->ss.dsat.size);\n+                    // Whether to account for OP_ADD that drops one element from the stack (-2 + 1).\n+                    auto add_diff = (i > 0 && i < subs.size() - 1) ? -1 : 0;\n+                    // The total difference in stack size after dissatisfying the first i first fragments.\n+                    auto next_sats_diff = Vector(sats_diff[0] + subs[i]->ss.dsat.diff + add_diff);\n+                    // Does the stack size gets bigger when dissatifying this fragment than the previous ones?\n+                    auto next_sats_exec = Vector(sats_exec[0] | (sats_diff[0] + subs[i]->ss.dsat.exec));\n+                    // Update what combination of sat/dsat is the largest per threshold.\n+                    for (size_t j = 1; j < sats_size.size(); ++j) {\n+                        // Which is larger, k-1 satisfaction and satifying this sub, or k satisfaction and dissatisfying\n+                        // this one?\n+                        next_sats_size.push_back((sats_size[j] + subs[i]->ss.dsat.size) | (sats_size[j - 1] + subs[i]->ss.sat.size));\n+                        // Same for size of the stack after satisfying k of the past i fragments.\n+                        next_sats_diff.push_back((sats_diff[j] + subs[i]->ss.dsat.diff) | (sats_diff[j - 1] + subs[i]->ss.sat.diff) + add_diff);",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 212,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "efdd1543597aff49c56a1abaa75b574be3b330db",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"warning: suggest parentheses around arithmetic in operand of ‘|’ [-Wparentheses]\"\r\n\r\n```suggestion\r\n                        next_sats_diff.push_back((sats_diff[j] + subs[i]->ss.dsat.diff) | ((sats_diff[j - 1] + subs[i]->ss.sat.diff) + add_diff));",
      "created_at": "2023-04-07T10:36:06Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160615879",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160615879"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160622303",
      "pull_request_review_id": 1376054310,
      "id": 1160622303,
      "node_id": "PRRC_kwDOABII585FLbDf",
      "diff_hunk": "@@ -1828,65 +2081,66 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n             // Constants\n             if (in[0].first == OP_1) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_1));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_1));\n                 break;\n             }\n             if (in[0].first == OP_0) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_0));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_0));\n                 break;\n             }\n             // Public keys\n-            if (in[0].second.size() == 33) {\n+            if (in[0].second.size() == 33 || in[0].second.size() == 32) {\n                 auto key = ctx.FromPKBytes(in[0].second.begin(), in[0].second.end());\n                 if (!key) return {};\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::PK_K, Vector(std::move(*key))));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::PK_K, Vector(std::move(*key))));\n                 break;\n             }\n             if (last - in >= 5 && in[0].first == OP_VERIFY && in[1].first == OP_EQUAL && in[3].first == OP_HASH160 && in[4].first == OP_DUP && in[2].second.size() == 20) {\n                 auto key = ctx.FromPKHBytes(in[2].second.begin(), in[2].second.end());",
      "path": "src/script/miniscript.h",
      "position": 959,
      "original_position": 932,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"warning: ‘void* __builtin_memcpy(void*, const void*, long unsigned int)’ writing 33 bytes into a region of size 32 overflows the destination [-Wstringop-overflow=]\"\r\n\r\ngetting this warning but it doesn't make sense to me why, because it should be calling the right function based on `ctx`? there is a definition for `FromPKBytes` in `src/script/descriptor.cpp` and another one in `src/script/sign.cpp` and the warning is coming from the `src/sign.cpp` one. ",
      "created_at": "2023-04-07T10:49:18Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160622303",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160622303"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2133,
      "original_line": 2133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174534364",
      "pull_request_review_id": 1396864124,
      "id": 1174534364,
      "node_id": "PRRC_kwDOABII585GAfjc",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;",
      "path": "src/script/miniscript.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a reason why the only two options are P2WSH and P2TR? Should there be a case statement for P2SH (`sh`) too?",
      "created_at": "2023-04-23T08:21:55Z",
      "updated_at": "2023-04-23T08:21:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1174534364",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174534364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 17,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1180610019",
      "pull_request_review_id": 1406271728,
      "id": 1180610019,
      "node_id": "PRRC_kwDOABII585GXq3j",
      "diff_hunk": "@@ -811,11 +856,15 @@ NodeRef GenNode(F ConsumeNode, Type root_type, bool strict_valid = false) {\n             // Fragment/children have not been decided yet. Decide them.\n             auto node_info = ConsumeNode(type_needed);\n             if (!node_info) return {};\n+            if ((!miniscript::IsTapscript(SCRIPT_CTX) && node_info->fragment == Fragment::MULTI_A)",
      "path": "src/test/fuzz/miniscript.cpp",
      "position": 294,
      "original_position": 223,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "02a5fa633f9f44b378f7c015275eacd54939e980",
      "in_reply_to_id": null,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note to self: i should relax the ops and script size limits below under Tapscript context.",
      "created_at": "2023-04-28T16:32:58Z",
      "updated_at": "2023-04-28T16:32:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1180610019",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1180610019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 860,
      "original_line": 860,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183400073",
      "pull_request_review_id": 1410428611,
      "id": 1183400073,
      "node_id": "PRRC_kwDOABII585GiUCJ",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;",
      "path": "src/script/miniscript.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1174534364,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Because the current codebase only support P2WSH, there is no support for legacy P2SH.",
      "created_at": "2023-05-03T08:42:48Z",
      "updated_at": "2023-05-03T08:42:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183400073",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183400073"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 17,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183405185",
      "pull_request_review_id": 1410436660,
      "id": 1183405185,
      "node_id": "PRRC_kwDOABII585GiVSB",
      "diff_hunk": "@@ -1502,7 +1524,7 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n     }\n     // Process miniscript expressions.\n     {\n-        KeyParser parser(&out, nullptr);\n+        KeyParser parser(/*out = */&out, /* in = */nullptr, /* ctx = */miniscript::MiniscriptContext::P2WSH);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "ef0eb7f87d19bd8a3ebff4f095d321964808df73",
      "in_reply_to_id": 1160599451,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What's the rationale for changing this? Do whitespaces prevent the analysis? Happy to do this (and the other similar comments) but i'd rather not go through the hassle of applying it on every single of the 21 commits and solve the rebase conflicts if it's just a style nit. Let me know!",
      "created_at": "2023-05-03T08:48:06Z",
      "updated_at": "2023-05-03T08:48:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183405185",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183405185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183410413",
      "pull_request_review_id": 1410444252,
      "id": 1183410413,
      "node_id": "PRRC_kwDOABII585GiWjt",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;\n+        case MiniscriptContext::TAPSCRIPT: return true;\n+    }\n+    assert(false);",
      "path": "src/script/miniscript.cpp",
      "position": 11,
      "original_position": 11,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1160606636,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This specific case is the very common match-all-variants-and-assert pattern so i think it's good like that. It's also documented this way in our style guidelines: https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#c-data-structures.",
      "created_at": "2023-05-03T08:53:03Z",
      "updated_at": "2023-05-03T08:53:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183410413",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183410413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183419232",
      "pull_request_review_id": 1410457197,
      "id": 1183419232,
      "node_id": "PRRC_kwDOABII585GiYtg",
      "diff_hunk": "@@ -605,6 +608,7 @@ struct Node {\n                 case Fragment::OR_I: return BuildScript(OP_IF, subs[0], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::ANDOR: return BuildScript(std::move(subs[0]), OP_NOTIF, subs[2], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::MULTI: {\n+                    assert(!IsTapscript(ctx.MsContext()));",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 14,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1160606743,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For this and the other assertions of the context: if we get in such an inconsistent state as having a `multi_a` in a `wsh()` descriptor or a `multi` in a `tr()` descriptor, it's probably better to crash than to return inconsistent (and potentially harmful, like an unspendable address) data to the user. Though it could raise an exception instead of crashing the node. I'll see if i can use `CHECK_NONFATAL` instead.\r\n\r\nEDIT: used `CHECK_NONFATAL` instead here and for `MULTI_A` too.",
      "created_at": "2023-05-03T09:00:48Z",
      "updated_at": "2023-05-03T09:22:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183419232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183419232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 611,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183444783",
      "pull_request_review_id": 1410501997,
      "id": 1183444783,
      "node_id": "PRRC_kwDOABII585Gie8v",
      "diff_hunk": "@@ -1534,6 +1539,7 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n+                if (IsTapscript(ctx.MsContext())) return {};",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 30,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1160608237,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes generally it would be nice to have better error reporting for descriptors. And i think there are lower hanging fruits when it comes to unclear descriptor errors that confuse users, for instance https://bitcoin.stackexchange.com/q/118022/101498.\r\n\r\nBut yeah definitely not going to bring that into this PR. :)",
      "created_at": "2023-05-03T09:24:05Z",
      "updated_at": "2023-05-03T09:24:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183444783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183444783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183446113",
      "pull_request_review_id": 1410504054,
      "id": 1183446113,
      "node_id": "PRRC_kwDOABII585GifRh",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n ",
      "path": "src/script/miniscript.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1160609483,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2023-05-03T09:25:25Z",
      "updated_at": "2023-05-03T09:25:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183446113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183446113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 11,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183487461",
      "pull_request_review_id": 1410572054,
      "id": 1183487461,
      "node_id": "PRRC_kwDOABII585GipXl",
      "diff_hunk": "@@ -833,51 +858,152 @@ struct Node {\n     }\n \n     internal::StackSize CalcStackSize() const {\n+        // Among non-malleable satisfactions and dissatisfactions, this computes for each fragment:\n+        // - The maximum witness stack size of this (dis)satisfaction;\n+        // - The maximum number of elements added or removed on the stack after executing it;\n+        // - The maximum number of elements added to the stack while executing it.\n         switch (fragment) {\n-            case Fragment::JUST_0: return {{}, 0};\n+            case Fragment::JUST_0: return {{}, {0, 1}};\n             case Fragment::JUST_1:\n             case Fragment::OLDER:\n-            case Fragment::AFTER: return {0, {}};\n-            case Fragment::PK_K: return {1, 1};\n-            case Fragment::PK_H: return {2, 2};\n+            case Fragment::AFTER: return {{0, 1}, {}};\n+            case Fragment::PK_K: return {{1, 1}, {1, 1}};\n+            case Fragment::PK_H: return {{2, 0, 2}, {2, 0, 2}};\n             case Fragment::SHA256:\n             case Fragment::RIPEMD160:\n             case Fragment::HASH256:\n-            case Fragment::HASH160: return {1, {}};\n+            case Fragment::HASH160: return {{1, 0, 2}, {}};\n             case Fragment::ANDOR: {\n-                const auto sat{(subs[0]->ss.sat + subs[1]->ss.sat) | (subs[0]->ss.dsat + subs[2]->ss.sat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[2]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto& z{subs[2]->ss};\n+                const auto sat_size{(x.sat.size + y.sat.size) | (x.dsat.size + z.sat.size)};\n+                const auto dsat_size{x.dsat.size + z.dsat.size};\n+                const auto sat_diff{((x.sat.diff + y.sat.diff) | (x.dsat.diff + z.sat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff - 1 + z.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff - 1 + y.sat.exec) | (x.dsat.diff - 1 + z.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + z.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::AND_V: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::AND_B: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::AND_V: return {subs[0]->ss.sat + subs[1]->ss.sat, {}};\n-            case Fragment::AND_B: return {subs[0]->ss.sat + subs[1]->ss.sat, subs[0]->ss.dsat + subs[1]->ss.dsat};\n             case Fragment::OR_B: {\n-                const auto sat{(subs[0]->ss.dsat + subs[1]->ss.sat) | (subs[0]->ss.sat + subs[1]->ss.dsat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[1]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.dsat.size + y.sat.size) | (x.sat.size + y.dsat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{((x.dsat.diff + y.sat.diff) | (x.sat.diff + y.dsat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff + y.sat.exec) | (x.sat.diff + y.dsat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_C: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto sat_diff{(x.sat.diff | (x.dsat.diff + y.sat.diff)) - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff - 1 + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::OR_D: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff | (x.dsat.diff - 1 + y.sat.diff)};\n+                const auto dsat_diff{x.dsat.diff - 1 + y.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff + 1) | (x.dsat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_I: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.sat.size + 1) | (y.sat.size + 1)};\n+                const auto dsat_size{(x.dsat.size + 1) | (y.dsat.size + 1)};\n+                const auto sat_diff{(x.sat.diff | y.sat.diff) - 1};\n+                const auto dsat_diff{(x.dsat.diff | y.dsat.diff) - 1};\n+                const auto sat_exec{(x.sat.exec | y.sat.exec) - 1};\n+                const auto dsat_exec{(x.dsat.exec | y.dsat.exec) - 1};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::OR_C: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), {}};\n-            case Fragment::OR_D: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), subs[0]->ss.dsat + subs[1]->ss.dsat};\n-            case Fragment::OR_I: return {(subs[0]->ss.sat + 1) | (subs[1]->ss.sat + 1), (subs[0]->ss.dsat + 1) | (subs[1]->ss.dsat + 1)};\n-            case Fragment::MULTI: return {k + 1, k + 1};\n-            case Fragment::MULTI_A: return {keys.size(), keys.size()};\n+            case Fragment::MULTI: return {{(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}, {(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}};\n+            case Fragment::MULTI_A: return {{(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}, {(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}};\n             case Fragment::WRAP_A:\n             case Fragment::WRAP_N:\n-            case Fragment::WRAP_S:\n-            case Fragment::WRAP_C: return subs[0]->ss;\n-            case Fragment::WRAP_D: return {1 + subs[0]->ss.sat, 1};\n-            case Fragment::WRAP_V: return {subs[0]->ss.sat, {}};\n-            case Fragment::WRAP_J: return {subs[0]->ss.sat, 1};\n+            case Fragment::WRAP_S: return subs[0]->ss;\n+            case Fragment::WRAP_C: {\n+                const auto& sub_sat{subs[0]->ss.sat};\n+                const auto& sub_dsat{subs[0]->ss.dsat};\n+                return {{sub_sat.size, sub_sat.diff - 1, sub_sat.exec}, {sub_dsat.size, sub_dsat.diff - 1, sub_dsat.exec}};\n+            }\n+            case Fragment::WRAP_D: return {{1 + subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, 1}};\n+            case Fragment::WRAP_V: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff - 1, subs[0]->ss.sat.exec}, {}};\n+            case Fragment::WRAP_J: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, subs[0]->ss.dsat.exec | 1}};\n             case Fragment::THRESH: {\n-                auto sats = Vector(internal::MaxInt<uint32_t>(0));\n-                for (const auto& sub : subs) {\n-                    auto next_sats = Vector(sats[0] + sub->ss.dsat);\n-                    for (size_t j = 1; j < sats.size(); ++j) next_sats.push_back((sats[j] + sub->ss.dsat) | (sats[j - 1] + sub->ss.sat));\n-                    next_sats.push_back(sats[sats.size() - 1] + sub->ss.sat);\n-                    sats = std::move(next_sats);\n+                // The maximum satisfaction witness stack size for this fragment, indexed by threshold.\n+                auto sats_size = Vector(internal::MaxInt<uint32_t>(0));\n+                // Same for the stack size differential after executing this fragment.\n+                auto sats_diff = Vector(internal::MaxInt<int32_t>(0));\n+                // The maximum stack size at any point during execution of this fragment (or any sub\n+                // fragment thereoff), indexed by threshold.\n+                auto sats_exec = Vector(internal::MaxInt<int32_t>(0));\n+                for (size_t i = 0; i < subs.size(); ++i) {\n+                    // Start with the (non-malleable) dissatisfaction size.\n+                    auto next_sats_size = Vector(sats_size[0] + subs[i]->ss.dsat.size);\n+                    // Whether to account for OP_ADD that drops one element from the stack (-2 + 1).\n+                    auto add_diff = (i > 0 && i < subs.size() - 1) ? -1 : 0;\n+                    // The total difference in stack size after dissatisfying the first i first fragments.\n+                    auto next_sats_diff = Vector(sats_diff[0] + subs[i]->ss.dsat.diff + add_diff);\n+                    // Does the stack size gets bigger when dissatifying this fragment than the previous ones?\n+                    auto next_sats_exec = Vector(sats_exec[0] | (sats_diff[0] + subs[i]->ss.dsat.exec));\n+                    // Update what combination of sat/dsat is the largest per threshold.\n+                    for (size_t j = 1; j < sats_size.size(); ++j) {\n+                        // Which is larger, k-1 satisfaction and satifying this sub, or k satisfaction and dissatisfying\n+                        // this one?\n+                        next_sats_size.push_back((sats_size[j] + subs[i]->ss.dsat.size) | (sats_size[j - 1] + subs[i]->ss.sat.size));\n+                        // Same for size of the stack after satisfying k of the past i fragments.\n+                        next_sats_diff.push_back((sats_diff[j] + subs[i]->ss.dsat.diff) | (sats_diff[j - 1] + subs[i]->ss.sat.diff) + add_diff);",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 212,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "efdd1543597aff49c56a1abaa75b574be3b330db",
      "in_reply_to_id": 1160615879,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, good suggestion that i add those for clarity because your suggestion is incorrect: `add_diff` should always be added. The current (and intended) semantic is:\r\n```diff\r\ndiff --git a/src/script/miniscript.h b/src/script/miniscript.h\r\nindex 011c7ac6d6..35797153da 100644\r\n--- a/src/script/miniscript.h\r\n+++ b/src/script/miniscript.h\r\n@@ -1002,7 +1002,7 @@ private:\r\n                         // this one?\r\n                         next_sats_size.push_back((sats_size[j] + subs[i]->ss.dsat.size) | (sats_size[j - 1] + subs[i]->ss.sat.size));\r\n                         // Same for size of the stack after satisfying k of the past i fragments.\r\n-                        next_sats_diff.push_back((sats_diff[j] + sub_diff.dsat) | (sats_diff[j - 1] + sub_diff.sat) + add_diff);\r\n+                        next_sats_diff.push_back(((sats_diff[j] + sub_diff.dsat) | (sats_diff[j - 1] + sub_diff.sat)) + add_diff);\r\n                         // Update the maximum stack size for satisfying k subs with the largest of the maximum cost of\r\n                         // satisfying k-1 subs (implying we satisfy this one), the cost of dissatisfying this sub\r\n                         // after the satisfaction of j subs beforehand, and the cost of satisfying this sub after the\r\n```\r\n\r\nDid you get this warning with GCC?",
      "created_at": "2023-05-03T10:05:50Z",
      "updated_at": "2023-05-03T10:05:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183487461",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183487461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183502224",
      "pull_request_review_id": 1410595992,
      "id": 1183502224,
      "node_id": "PRRC_kwDOABII585Gis-Q",
      "diff_hunk": "@@ -1828,65 +2081,66 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n             // Constants\n             if (in[0].first == OP_1) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_1));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_1));\n                 break;\n             }\n             if (in[0].first == OP_0) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_0));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_0));\n                 break;\n             }\n             // Public keys\n-            if (in[0].second.size() == 33) {\n+            if (in[0].second.size() == 33 || in[0].second.size() == 32) {\n                 auto key = ctx.FromPKBytes(in[0].second.begin(), in[0].second.end());\n                 if (!key) return {};\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::PK_K, Vector(std::move(*key))));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::PK_K, Vector(std::move(*key))));\n                 break;\n             }\n             if (last - in >= 5 && in[0].first == OP_VERIFY && in[1].first == OP_EQUAL && in[3].first == OP_HASH160 && in[4].first == OP_DUP && in[2].second.size() == 20) {\n                 auto key = ctx.FromPKHBytes(in[2].second.begin(), in[2].second.end());",
      "path": "src/script/miniscript.h",
      "position": 959,
      "original_position": 932,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "in_reply_to_id": 1160622303,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm trying to reproduce the warning. What version of which compiler do you use? And what flags have you enabled?",
      "created_at": "2023-05-03T10:21:47Z",
      "updated_at": "2023-05-03T10:21:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183502224",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183502224"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2133,
      "original_line": 2133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195519598",
      "pull_request_review_id": 1429125748,
      "id": 1195519598,
      "node_id": "PRRC_kwDOABII585HQi5u",
      "diff_hunk": "@@ -1828,65 +2081,66 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n             // Constants\n             if (in[0].first == OP_1) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_1));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_1));\n                 break;\n             }\n             if (in[0].first == OP_0) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_0));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_0));\n                 break;\n             }\n             // Public keys\n-            if (in[0].second.size() == 33) {\n+            if (in[0].second.size() == 33 || in[0].second.size() == 32) {\n                 auto key = ctx.FromPKBytes(in[0].second.begin(), in[0].second.end());\n                 if (!key) return {};\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::PK_K, Vector(std::move(*key))));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::PK_K, Vector(std::move(*key))));\n                 break;\n             }\n             if (last - in >= 5 && in[0].first == OP_VERIFY && in[1].first == OP_EQUAL && in[3].first == OP_HASH160 && in[4].first == OP_DUP && in[2].second.size() == 20) {\n                 auto key = ctx.FromPKHBytes(in[2].second.begin(), in[2].second.end());",
      "path": "src/script/miniscript.h",
      "position": 959,
      "original_position": 932,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "in_reply_to_id": 1160622303,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reproduced and fixed!",
      "created_at": "2023-05-16T18:02:15Z",
      "updated_at": "2023-05-16T18:02:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1195519598",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195519598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2133,
      "original_line": 2133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257381343",
      "pull_request_review_id": 1520821386,
      "id": 1257381343,
      "node_id": "PRRC_kwDOABII585K8h3f",
      "diff_hunk": "@@ -1502,7 +1524,7 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n     }\n     // Process miniscript expressions.\n     {\n-        KeyParser parser(&out, nullptr);\n+        KeyParser parser(/*out = */&out, /* in = */nullptr, /* ctx = */miniscript::MiniscriptContext::P2WSH);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "422a9f30746b4fb6ea321ad1b41a63a704aff839",
      "original_commit_id": "ef0eb7f87d19bd8a3ebff4f095d321964808df73",
      "in_reply_to_id": 1160599451,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`clang-tidy --checks=bugprone-argument-comment` catches if the names in such comments mismatch the formal parameter names of the called function, but (I just tested) it works both with and without the spaces.",
      "created_at": "2023-07-08T22:28:29Z",
      "updated_at": "2023-07-08T22:28:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1257381343",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257381343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1527,
      "side": "RIGHT"
    }
  ]
}