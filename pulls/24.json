{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24",
    "id": 51889,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTE4ODk=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/24",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/24.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/24.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/80be6e69a92130175da623fbb75552a04d3ff4f8",
    "number": 24,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Gettransaction",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Adds a \"details\" array to gettransaction output.  e.g.\n\n{\n    \"amount\" : 0.00000000,\n    \"fee\" : 0.00000000,\n    \"confirmations\" : 609,\n    \"txid\" : \"b593920033b905c0e7c1d82d5b3e15a114841fa916719e968add3212e07c73a0\",\n    \"time\" : 1294342907,\n    \"details\" : [\n        {\n            \"account\" : \"Test2\",\n            \"address\" : \"mtQArCTnZHGsPf89jus6khxriYsJbU673P\",\n            \"category\" : \"send\",\n            \"amount\" : -11.00000000,\n            \"fee\" : 0.00000000\n        },\n        {\n            \"account\" : \"Test1\",\n            \"address\" : \"mtQArCTnZHGsPf89jus6khxriYsJbU673P\",\n            \"category\" : \"receive\",\n            \"amount\" : 11.00000000\n        }\n    ]\n}\n",
    "labels": [
      {
        "id": 64583,
        "node_id": "MDU6TGFiZWw2NDU4Mw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
        "name": "Feature",
        "color": "7cf575",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2011-01-07T19:11:34Z",
    "updated_at": "2021-09-08T09:54:08Z",
    "closed_at": "2011-01-19T03:36:06Z",
    "mergeable_state": "unknown",
    "merged_at": "2011-01-18T19:36:06Z",
    "merge_commit_sha": "",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "gavinandresen:gettransaction",
      "ref": "gettransaction",
      "sha": "80be6e69a92130175da623fbb75552a04d3ff4f8",
      "user": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 774842,
        "node_id": "MDEwOlJlcG9zaXRvcnk3NzQ4NDI=",
        "name": "bitcoin-git",
        "full_name": "gavinandresen/bitcoin-git",
        "owner": {
          "login": "gavinandresen",
          "id": 331997,
          "node_id": "MDQ6VXNlcjMzMTk5Nw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gavinandresen",
          "html_url": "https://github.com/gavinandresen",
          "followers_url": "https://api.github.com/users/gavinandresen/followers",
          "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
          "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
          "repos_url": "https://api.github.com/users/gavinandresen/repos",
          "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/gavinandresen/bitcoin-git",
        "description": "Feature branches that aren't yet, or never will be, ready for mainline bitcoin",
        "fork": true,
        "url": "https://api.github.com/repos/gavinandresen/bitcoin-git",
        "archive_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/contributors",
        "deployments_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/deployments",
        "downloads_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/downloads",
        "events_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/events",
        "forks_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/forks",
        "git_commits_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/tags%7B/sha%7D",
        "git_url": "git://github.com/gavinandresen/bitcoin-git.git",
        "issue_comment_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/languages",
        "merges_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/merges",
        "milestones_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/releases%7B/id%7D",
        "ssh_url": "git@github.com:gavinandresen/bitcoin-git.git",
        "stargazers_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/stargazers",
        "statuses_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/subscribers",
        "subscription_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/subscription",
        "tags_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/tags",
        "teams_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/teams",
        "trees_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/gavinandresen/bitcoin-git.git",
        "hooks_url": "https://api.github.com/repos/gavinandresen/bitcoin-git/hooks",
        "svn_url": "https://github.com/gavinandresen/bitcoin-git",
        "homepage": "https://github.com/bitcoin",
        "language": "C++",
        "forks_count": 24,
        "stargazers_count": 117,
        "watchers_count": 117,
        "size": 66221,
        "default_branch": "master",
        "open_issues_count": 5,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-07-15T09:13:07Z",
        "created_at": "2010-07-14T15:41:31Z",
        "updated_at": "2023-07-28T06:56:04Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "009d5fb41f3aa39baeeb3f72454cdc14459fc67e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35472,
        "stargazers_count": 70603,
        "watchers_count": 70603,
        "size": 236220,
        "default_branch": "master",
        "open_issues_count": 670,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T09:16:11Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T09:38:40Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 14,
    "deletions": 6,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 0,
    "comments": 6
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MGJlNmU2OWE5MjEzMDE3NWRhNjIzZmJiNzU1NTJhMDRkM2ZmNGY4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/80be6e69a92130175da623fbb75552a04d3ff4f8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/80be6e69a92130175da623fbb75552a04d3ff4f8",
      "tree": {
        "sha": "5c51e2a83f44cfc06c2f6da372af9c32a8488b54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c51e2a83f44cfc06c2f6da372af9c32a8488b54"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/009d5fb41f3aa39baeeb3f72454cdc14459fc67e",
          "sha": "009d5fb41f3aa39baeeb3f72454cdc14459fc67e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/009d5fb41f3aa39baeeb3f72454cdc14459fc67e"
        }
      ],
      "message": "Add account/address details to gettransaction output",
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-01-07T19:10:08Z"
      },
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-01-07T19:10:08Z"
      },
      "sha": "80be6e69a92130175da623fbb75552a04d3ff4f8"
    },
    {
      "event": "commented",
      "id": 662307,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjMwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662307",
      "actor": {
        "login": "mikegogulski",
        "id": 118625,
        "node_id": "MDQ6VXNlcjExODYyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikegogulski",
        "html_url": "https://github.com/mikegogulski",
        "followers_url": "https://api.github.com/users/mikegogulski/followers",
        "following_url": "https://api.github.com/users/mikegogulski/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mikegogulski/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mikegogulski/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
        "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
        "repos_url": "https://api.github.com/users/mikegogulski/repos",
        "events_url": "https://api.github.com/users/mikegogulski/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2011-01-08T09:43:55Z",
      "updated_at": "2011-01-08T09:43:55Z",
      "author_association": "NONE",
      "body": "Hooray!\n",
      "user": {
        "login": "mikegogulski",
        "id": 118625,
        "node_id": "MDQ6VXNlcjExODYyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikegogulski",
        "html_url": "https://github.com/mikegogulski",
        "followers_url": "https://api.github.com/users/mikegogulski/followers",
        "following_url": "https://api.github.com/users/mikegogulski/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mikegogulski/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mikegogulski/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
        "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
        "repos_url": "https://api.github.com/users/mikegogulski/repos",
        "events_url": "https://api.github.com/users/mikegogulski/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24#issuecomment-662307",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24"
    },
    {
      "event": "referenced",
      "id": 3700897,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM3MDA4OTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3700897",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b8afa21fad0e5d3e61deca9678d852efe8afc499",
      "commit_url": "https://api.github.com/repos/laanwj/bitcoin/commits/b8afa21fad0e5d3e61deca9678d852efe8afc499",
      "created_at": "2011-09-28T20:04:16Z"
    },
    {
      "event": "subscribed",
      "id": 3700898,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3MDA4OTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3700898",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2011-09-28T20:04:16Z"
    },
    {
      "event": "referenced",
      "id": 20436634,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIwNDM2NjM0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20436634",
      "actor": {
        "login": "coblee",
        "id": 999927,
        "node_id": "MDQ6VXNlcjk5OTkyNw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/999927?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coblee",
        "html_url": "https://github.com/coblee",
        "followers_url": "https://api.github.com/users/coblee/followers",
        "following_url": "https://api.github.com/users/coblee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/coblee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/coblee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/coblee/subscriptions",
        "organizations_url": "https://api.github.com/users/coblee/orgs",
        "repos_url": "https://api.github.com/users/coblee/repos",
        "events_url": "https://api.github.com/users/coblee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/coblee/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c8ada487d758a196a78f511b0669b481dcd702bd",
      "commit_url": "https://api.github.com/repos/litecoin-project/litecoin/commits/c8ada487d758a196a78f511b0669b481dcd702bd",
      "created_at": "2012-07-17T22:26:54Z"
    },
    {
      "event": "subscribed",
      "id": 20436635,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIwNDM2NjM1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20436635",
      "actor": {
        "login": "coblee",
        "id": 999927,
        "node_id": "MDQ6VXNlcjk5OTkyNw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/999927?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coblee",
        "html_url": "https://github.com/coblee",
        "followers_url": "https://api.github.com/users/coblee/followers",
        "following_url": "https://api.github.com/users/coblee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/coblee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/coblee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/coblee/subscriptions",
        "organizations_url": "https://api.github.com/users/coblee/orgs",
        "repos_url": "https://api.github.com/users/coblee/repos",
        "events_url": "https://api.github.com/users/coblee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/coblee/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-07-17T22:26:54Z"
    },
    {
      "event": "commented",
      "id": 31729552,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzI5NTUy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/31729552",
      "actor": {
        "login": "orweinberger",
        "id": 1876045,
        "node_id": "MDQ6VXNlcjE4NzYwNDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1876045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/orweinberger",
        "html_url": "https://github.com/orweinberger",
        "followers_url": "https://api.github.com/users/orweinberger/followers",
        "following_url": "https://api.github.com/users/orweinberger/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/orweinberger/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/orweinberger/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/orweinberger/subscriptions",
        "organizations_url": "https://api.github.com/users/orweinberger/orgs",
        "repos_url": "https://api.github.com/users/orweinberger/repos",
        "events_url": "https://api.github.com/users/orweinberger/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/orweinberger/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-01-07T11:12:04Z",
      "updated_at": "2014-01-07T11:12:04Z",
      "author_association": "NONE",
      "body": "@gavinandresen @laanwj The gettransaction call does not return the 'fee' attribute for some reason.\n\nI'm using version `0.8.6-1.el6` and I'm getting the following output for a transaction that was sent with a fee:\n\n```\n{\n    \"amount\" : 0.00100000,\n    \"confirmations\" : 92,\n    \"blockhash\" : \"0000000000000000977e56d6c0997d54b1b83c4e5bde4b5fccbe2098b4db4e00\",\n    \"blockindex\" : 307,\n    \"blocktime\" : 1389053730,\n    \"txid\" : \"883e4841ef28d32f26129a9cdad3d2e13e0147707f3aa8b751b8351a38511705\",\n    \"time\" : 1389051738,\n    \"timereceived\" : 1389051738,\n    \"details\" : [\n        {\n            \"account\" : \"52cb3f4469a80\",\n            \"address\" : \"1KF6CMVjkS2bdkpx8HCHCTUpkensU6dybj\",\n            \"category\" : \"receive\",\n            \"amount\" : 0.00100000\n        }\n    ]\n}\n```\n",
      "user": {
        "login": "orweinberger",
        "id": 1876045,
        "node_id": "MDQ6VXNlcjE4NzYwNDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1876045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/orweinberger",
        "html_url": "https://github.com/orweinberger",
        "followers_url": "https://api.github.com/users/orweinberger/followers",
        "following_url": "https://api.github.com/users/orweinberger/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/orweinberger/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/orweinberger/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/orweinberger/subscriptions",
        "organizations_url": "https://api.github.com/users/orweinberger/orgs",
        "repos_url": "https://api.github.com/users/orweinberger/repos",
        "events_url": "https://api.github.com/users/orweinberger/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/orweinberger/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24#issuecomment-31729552",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24"
    },
    {
      "event": "mentioned",
      "id": 84618960,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODQ2MTg5NjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/84618960",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-01-07T11:12:04Z"
    },
    {
      "event": "subscribed",
      "id": 84618961,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDg0NjE4OTYx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/84618961",
      "actor": {
        "login": "gavinandresen",
        "id": 331997,
        "node_id": "MDQ6VXNlcjMzMTk5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gavinandresen",
        "html_url": "https://github.com/gavinandresen",
        "followers_url": "https://api.github.com/users/gavinandresen/followers",
        "following_url": "https://api.github.com/users/gavinandresen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gavinandresen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gavinandresen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
        "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
        "repos_url": "https://api.github.com/users/gavinandresen/repos",
        "events_url": "https://api.github.com/users/gavinandresen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-01-07T11:12:04Z"
    },
    {
      "event": "mentioned",
      "id": 84618962,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODQ2MTg5NjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/84618962",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-01-07T11:12:04Z"
    },
    {
      "event": "subscribed",
      "id": 84618963,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDg0NjE4OTYz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/84618963",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-01-07T11:12:04Z"
    },
    {
      "event": "commented",
      "id": 31761850,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzYxODUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/31761850",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-01-07T18:01:43Z",
      "updated_at": "2014-01-07T18:01:43Z",
      "author_association": "MEMBER",
      "body": "@orweinberger it only adds a `fee` attribute if the transaction is from you (sent)\nsee https://github.com/bitcoin/bitcoin/blob/master/src/rpcwallet.cpp#L1471 \n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24#issuecomment-31761850",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24"
    },
    {
      "event": "mentioned",
      "id": 84705107,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODQ3MDUxMDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/84705107",
      "actor": {
        "login": "orweinberger",
        "id": 1876045,
        "node_id": "MDQ6VXNlcjE4NzYwNDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1876045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/orweinberger",
        "html_url": "https://github.com/orweinberger",
        "followers_url": "https://api.github.com/users/orweinberger/followers",
        "following_url": "https://api.github.com/users/orweinberger/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/orweinberger/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/orweinberger/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/orweinberger/subscriptions",
        "organizations_url": "https://api.github.com/users/orweinberger/orgs",
        "repos_url": "https://api.github.com/users/orweinberger/repos",
        "events_url": "https://api.github.com/users/orweinberger/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/orweinberger/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-01-07T18:01:43Z"
    },
    {
      "event": "subscribed",
      "id": 84705108,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDg0NzA1MTA4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/84705108",
      "actor": {
        "login": "orweinberger",
        "id": 1876045,
        "node_id": "MDQ6VXNlcjE4NzYwNDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1876045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/orweinberger",
        "html_url": "https://github.com/orweinberger",
        "followers_url": "https://api.github.com/users/orweinberger/followers",
        "following_url": "https://api.github.com/users/orweinberger/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/orweinberger/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/orweinberger/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/orweinberger/subscriptions",
        "organizations_url": "https://api.github.com/users/orweinberger/orgs",
        "repos_url": "https://api.github.com/users/orweinberger/repos",
        "events_url": "https://api.github.com/users/orweinberger/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/orweinberger/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-01-07T18:01:43Z"
    },
    {
      "event": "commented",
      "id": 31763663,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzYzNjYz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/31763663",
      "actor": {
        "login": "orweinberger",
        "id": 1876045,
        "node_id": "MDQ6VXNlcjE4NzYwNDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1876045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/orweinberger",
        "html_url": "https://github.com/orweinberger",
        "followers_url": "https://api.github.com/users/orweinberger/followers",
        "following_url": "https://api.github.com/users/orweinberger/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/orweinberger/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/orweinberger/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/orweinberger/subscriptions",
        "organizations_url": "https://api.github.com/users/orweinberger/orgs",
        "repos_url": "https://api.github.com/users/orweinberger/repos",
        "events_url": "https://api.github.com/users/orweinberger/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/orweinberger/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-01-07T18:20:18Z",
      "updated_at": "2014-01-07T18:20:18Z",
      "author_association": "NONE",
      "body": "@laanwj Thanks for clarifying that. Is there any way for me to see if a transaction that was sent to me had a fee included in it?\n",
      "user": {
        "login": "orweinberger",
        "id": 1876045,
        "node_id": "MDQ6VXNlcjE4NzYwNDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1876045?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/orweinberger",
        "html_url": "https://github.com/orweinberger",
        "followers_url": "https://api.github.com/users/orweinberger/followers",
        "following_url": "https://api.github.com/users/orweinberger/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/orweinberger/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/orweinberger/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/orweinberger/subscriptions",
        "organizations_url": "https://api.github.com/users/orweinberger/orgs",
        "repos_url": "https://api.github.com/users/orweinberger/repos",
        "events_url": "https://api.github.com/users/orweinberger/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/orweinberger/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24#issuecomment-31763663",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24"
    },
    {
      "event": "mentioned",
      "id": 84709508,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODQ3MDk1MDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/84709508",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-01-07T18:20:18Z"
    },
    {
      "event": "subscribed",
      "id": 84709509,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDg0NzA5NTA5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/84709509",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-01-07T18:20:18Z"
    },
    {
      "event": "commented",
      "id": 31770596,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzcwNTk2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/31770596",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-01-07T19:31:56Z",
      "updated_at": "2014-01-07T19:31:56Z",
      "author_association": "MEMBER",
      "body": "No idea... maybe you can remove the check and it will work for received transactions too, I'm not sure.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24#issuecomment-31770596",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24"
    },
    {
      "event": "commented",
      "id": 31785936,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzg1OTM2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/31785936",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-01-07T22:17:40Z",
      "updated_at": "2014-01-07T22:17:40Z",
      "author_association": "MEMBER",
      "body": "You can only compute the fee if you know the values of all inputs. This is only the case if all inputs are from yourself.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24#issuecomment-31785936",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24"
    },
    {
      "event": "referenced",
      "id": 109118915,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEwOTExODkxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/109118915",
      "actor": {
        "login": "justmoon",
        "id": 53233,
        "node_id": "MDQ6VXNlcjUzMjMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/53233?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/justmoon",
        "html_url": "https://github.com/justmoon",
        "followers_url": "https://api.github.com/users/justmoon/followers",
        "following_url": "https://api.github.com/users/justmoon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/justmoon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/justmoon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/justmoon/subscriptions",
        "organizations_url": "https://api.github.com/users/justmoon/orgs",
        "repos_url": "https://api.github.com/users/justmoon/repos",
        "events_url": "https://api.github.com/users/justmoon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/justmoon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "eb0a3330047203d6081a50407b155bc9a9eefd8e",
      "commit_url": "https://api.github.com/repos/justmoon/bitcoin/commits/eb0a3330047203d6081a50407b155bc9a9eefd8e",
      "created_at": "2014-04-07T00:31:50Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2014-09-11T05:04:53Z",
      "updated_at": "2014-09-11T05:04:53Z",
      "source": {
        "issue": {
          "id": 42489100,
          "node_id": "MDU6SXNzdWU0MjQ4OTEwMA==",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4895",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4895/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4895/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/4895/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/4895",
          "number": 4895,
          "state": "closed",
          "state_reason": "completed",
          "title": ".",
          "body": "\r\n",
          "user": {
            "login": "rebroad",
            "id": 1530283,
            "node_id": "MDQ6VXNlcjE1MzAyODM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rebroad",
            "html_url": "https://github.com/rebroad",
            "followers_url": "https://api.github.com/users/rebroad/followers",
            "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
            "organizations_url": "https://api.github.com/users/rebroad/orgs",
            "repos_url": "https://api.github.com/users/rebroad/repos",
            "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/rebroad/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 0,
          "closed_at": "2014-09-11T05:06:10Z",
          "created_at": "2014-09-11T05:02:15Z",
          "updated_at": "2021-09-08T12:48:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 199126610,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5OTEyNjYxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/199126610",
      "actor": {
        "login": "rdponticelli",
        "id": 1192483,
        "node_id": "MDQ6VXNlcjExOTI0ODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1192483?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rdponticelli",
        "html_url": "https://github.com/rdponticelli",
        "followers_url": "https://api.github.com/users/rdponticelli/followers",
        "following_url": "https://api.github.com/users/rdponticelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rdponticelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rdponticelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rdponticelli/subscriptions",
        "organizations_url": "https://api.github.com/users/rdponticelli/orgs",
        "repos_url": "https://api.github.com/users/rdponticelli/repos",
        "events_url": "https://api.github.com/users/rdponticelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rdponticelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b110f84bbb7db577f63f97b51c5ac2531076ec85",
      "commit_url": "https://api.github.com/repos/Criptomonedas/bitcoin/commits/b110f84bbb7db577f63f97b51c5ac2531076ec85",
      "created_at": "2014-11-26T18:04:20Z"
    },
    {
      "event": "referenced",
      "id": 255870489,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI1NTg3MDQ4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/255870489",
      "actor": {
        "login": "rubensayshi",
        "id": 649160,
        "node_id": "MDQ6VXNlcjY0OTE2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rubensayshi",
        "html_url": "https://github.com/rubensayshi",
        "followers_url": "https://api.github.com/users/rubensayshi/followers",
        "following_url": "https://api.github.com/users/rubensayshi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rubensayshi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rubensayshi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rubensayshi/subscriptions",
        "organizations_url": "https://api.github.com/users/rubensayshi/orgs",
        "repos_url": "https://api.github.com/users/rubensayshi/repos",
        "events_url": "https://api.github.com/users/rubensayshi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rubensayshi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f33b4a7d8f1ca3da9ed0353110889ecc6776efa4",
      "commit_url": "https://api.github.com/repos/blocktrail/bitcoin/commits/f33b4a7d8f1ca3da9ed0353110889ecc6776efa4",
      "created_at": "2015-03-16T17:56:08Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "rustyrussell",
        "id": 775844,
        "node_id": "MDQ6VXNlcjc3NTg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rustyrussell",
        "html_url": "https://github.com/rustyrussell",
        "followers_url": "https://api.github.com/users/rustyrussell/followers",
        "following_url": "https://api.github.com/users/rustyrussell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rustyrussell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rustyrussell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
        "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
        "repos_url": "https://api.github.com/users/rustyrussell/repos",
        "events_url": "https://api.github.com/users/rustyrussell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-03-26T10:04:39Z",
      "updated_at": "2015-03-26T10:04:39Z",
      "source": {
        "issue": {
          "id": 60169492,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzA2ODYyMzg=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5863",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5863/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5863/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5863/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/5863",
          "number": 5863,
          "state": "closed",
          "state_reason": null,
          "title": "Add autoprune functionality",
          "body": "Continuing the work of @rdponticelli, this is an implementation of the autoprune functionality (see #4701).  Thanks to @rdponticelli for doing a lot of prior work on this topic; we used his work and the discussion of it as our starting point (though we found it easier to base this pull off of master).  @mrbandrews, @morcos, @ajweiss, and @sdaftuar collaborated on this pull.  \n\nTo summarize autoprune: this adds a -prune=N option to bitcoind, which if set to N>0 will enable autoprune.  When autopruning is enabled, block and undo files will be deleted to try to keep total space used by those files to below the prune target (N, in MB) specified by the user, subject to some constraints:\n- The last 288 blocks on the main chain are always kept (MIN_BLOCKS_TO_KEEP),\n- N must be at least 550MB (chosen as a value for the target that could reasonably be met, with some assumptions about block sizes, orphan rates, etc; see comment in main.h),\n- No blocks are pruned until chainActive is at least 100,000 blocks long (on mainnet; defined separately for mainnet, testnet, and regtest in chainparams as nAutopruneAfterHeight).\n\nWe’ve attempted to address the comments raised in the prior conversations; here are a few things worth noting:\n1.  Handling reorgs greater than the data stored on disk is not yet implemented.  Currently, bitcoind will exit with a message indicating that it failed to read the block on disk -- suggestions for a better error message are welcome.\n2.  We’ve disabled block relay (with a check to see if we’re NODE_NETWORK or not).  In the future when we have worked out the service bit to use for an autopruned node and the behavior for block requests, we can re-enable this appropriately.  (This differs from the behavior of #4701 .)\n3.  PruneOneBlockFile currently iterates mapBlockIndex each time to determine which entries to update; we can optimize this by maintaining a reverse lookup table so that the blocks in each blockfile are known.  \n4.  One open question is what to do if we’ve pruned before, and then are running a -reindex: what do we do with the leftover files?  In this case, the first N files will have been deleted by the pruning code, which won’t be processed in the reindex loop, but later we may try overwriting the remaining files in place.  Would it be better to, say, delete the files preemptively to prevent potential file corruption? \n5.  RPC/REST interfaces currently do not distinguish between unknown blocks/tx and pruned blocks/tx.  It's unclear if a specific error should be returned, or perhaps the block/tx query interfaces be disabled for pruned nodes.\n6. Tests and a test plan will be forthcoming.\n\n(Though this pull still needs more work to address some of the above items, we thought we'd open it now to keep review momentum on this feature moving...)\n",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/18",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/18",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/18/labels",
            "id": 818033,
            "node_id": "MDk6TWlsZXN0b25lODE4MDMz",
            "number": 18,
            "state": "closed",
            "title": "0.11.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 21,
            "created_at": "2014-10-08T08:27:24Z",
            "updated_at": "2015-12-03T11:57:57Z",
            "closed_at": "2015-12-03T11:57:57Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 56,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5863",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/5863",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/5863.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/5863.patch"
          },
          "closed_at": "2015-04-24T08:37:00Z",
          "created_at": "2015-03-06T22:40:58Z",
          "updated_at": "2021-09-08T10:46:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 290113353,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MDExMzM1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/290113353",
      "actor": {
        "login": "dexX7",
        "id": 5836089,
        "node_id": "MDQ6VXNlcjU4MzYwODk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dexX7",
        "html_url": "https://github.com/dexX7",
        "followers_url": "https://api.github.com/users/dexX7/followers",
        "following_url": "https://api.github.com/users/dexX7/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dexX7/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dexX7/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
        "organizations_url": "https://api.github.com/users/dexX7/orgs",
        "repos_url": "https://api.github.com/users/dexX7/repos",
        "events_url": "https://api.github.com/users/dexX7/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dexX7/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "829eabef81acf87a9cd7c3967c632b6ccd737c30",
      "commit_url": "https://api.github.com/repos/dexX7/bitcoin/commits/829eabef81acf87a9cd7c3967c632b6ccd737c30",
      "created_at": "2015-04-26T01:29:45Z"
    },
    {
      "event": "referenced",
      "id": 305181491,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMwNTE4MTQ5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/305181491",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "83995278648a51f525406679fcf4f750cd2cd5a9",
      "commit_url": "https://api.github.com/repos/sdaftuar/bitcoin/commits/83995278648a51f525406679fcf4f750cd2cd5a9",
      "created_at": "2015-05-14T19:21:40Z"
    },
    {
      "event": "referenced",
      "id": 338011524,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMzODAxMTUyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/338011524",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b4e420a24c94b383d8d3701f30948fe9620b05ef",
      "commit_url": "https://api.github.com/repos/jtimon/bitcoin/commits/b4e420a24c94b383d8d3701f30948fe9620b05ef",
      "created_at": "2015-06-23T16:30:17Z"
    },
    {
      "event": "referenced",
      "id": 439789198,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzOTc4OTE5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/439789198",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "835757c1444d39fc15ae4beb947db6ac5debada5",
      "commit_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/commits/835757c1444d39fc15ae4beb947db6ac5debada5",
      "created_at": "2015-10-20T00:40:23Z"
    },
    {
      "event": "referenced",
      "id": 585866472,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDU4NTg2NjQ3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/585866472",
      "actor": {
        "login": "ptschip",
        "id": 12862928,
        "node_id": "MDQ6VXNlcjEyODYyOTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/12862928?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ptschip",
        "html_url": "https://github.com/ptschip",
        "followers_url": "https://api.github.com/users/ptschip/followers",
        "following_url": "https://api.github.com/users/ptschip/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ptschip/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ptschip/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ptschip/subscriptions",
        "organizations_url": "https://api.github.com/users/ptschip/orgs",
        "repos_url": "https://api.github.com/users/ptschip/repos",
        "events_url": "https://api.github.com/users/ptschip/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ptschip/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5704a58d08044757eac436f5de7b3a562d56564f",
      "commit_url": "https://api.github.com/repos/ptschip/bitcoin/commits/5704a58d08044757eac436f5de7b3a562d56564f",
      "created_at": "2016-03-11T03:34:39Z"
    },
    {
      "event": "referenced",
      "id": 733750668,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDczMzc1MDY2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/733750668",
      "actor": {
        "login": "danjurious",
        "id": 9713170,
        "node_id": "MDQ6VXNlcjk3MTMxNzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9713170?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danjurious",
        "html_url": "https://github.com/danjurious",
        "followers_url": "https://api.github.com/users/danjurious/followers",
        "following_url": "https://api.github.com/users/danjurious/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danjurious/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danjurious/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danjurious/subscriptions",
        "organizations_url": "https://api.github.com/users/danjurious/orgs",
        "repos_url": "https://api.github.com/users/danjurious/repos",
        "events_url": "https://api.github.com/users/danjurious/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danjurious/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0c15767527249b036326f854fb25d7284b69f6c9",
      "commit_url": "https://api.github.com/repos/danjurious/bitcoin/commits/0c15767527249b036326f854fb25d7284b69f6c9",
      "created_at": "2016-07-25T16:09:37Z"
    },
    {
      "event": "referenced",
      "id": 801502878,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDgwMTUwMjg3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/801502878",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3650668cdbbf369dd8f30c8e8eb5bb883325942d",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/3650668cdbbf369dd8f30c8e8eb5bb883325942d",
      "created_at": "2016-09-25T13:20:25Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-15T05:45:37Z",
      "updated_at": "2017-03-15T05:45:37Z",
      "source": {
        "issue": {
          "id": 214288915,
          "node_id": "MDU6SXNzdWUyMTQyODg5MTU=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9997",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9997/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9997/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9997/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/9997",
          "number": 9997,
          "state": "closed",
          "state_reason": "completed",
          "title": "Running out of disk space during GUI init results in hang and non-drawing windows",
          "body": "2017-03-15 05:37:56 init message: Rewinding blocks...\r\n2017-03-15 05:38:09 *** Disk space is low!\r\n2017-03-15 05:38:10 Aborted block database rebuild. Exiting.\r\n2017-03-15 05:38:10 GUI: requestShutdown : Requesting shutdown\r\n2017-03-15 05:38:10 GUI: shutdown : Running Shutdown in thread\r\n2017-03-15 05:38:10 Interrupting HTTP server\r\n2017-03-15 05:38:10 Interrupting HTTP RPC server\r\n2017-03-15 05:38:10 GUI: initializeResult : Initialization result:  false\r\n2017-03-15 05:38:10 Interrupting RPC\r\n2017-03-15 05:38:10 scheduler thread interrupt\r\n2017-03-15 05:38:10 GUI: ~BitcoinApplication : Stopping thread\r\n2017-03-15 05:38:10 Shutdown: In progress...\r\n2017-03-15 05:38:10 Stopping HTTP RPC server\r\n2017-03-15 05:38:10 Stopping RPC\r\n2017-03-15 05:38:10 Stopping HTTP server\r\n2017-03-15 05:38:10 Stopped HTTP server\r\n2017-03-15 05:38:10 *** Disk space is low!\r\n\r\n\r\n(gdb) thread apply all bt\r\n```\r\nThread 4 (Thread 0x7f43c3c40700 (LWP 14166)):\r\n#0  0x00007f43cab1e93d in poll () at ../sysdeps/unix/syscall-template.S:84\r\n#1  0x00007f43c6b7ec6a in poll (__timeout=-1, __nfds=1, __fds=0x7f43c3c3fd10) at /usr/include/bits/poll2.h:46\r\n#2  _xcb_conn_wait (c=c@entry=0x55e96db728c0, cond=cond@entry=0x55e96db72900, vector=vector@entry=0x0, count=count@entry=0x0)\r\n    at /var/tmp/portage/x11-libs/libxcb-1.11.1/work/libxcb-1.11.1/src/xcb_conn.c:459\r\n#3  0x00007f43c6b810df in xcb_wait_for_event (c=0x55e96db728c0)\r\n    at /var/tmp/portage/x11-libs/libxcb-1.11.1/work/libxcb-1.11.1/src/xcb_in.c:693\r\n#4  0x00007f43ced124b9 in QXcbEventReader::run (this=0x55e96db7cf90) at qxcbconnection.cpp:1105\r\n#5  0x00007f43ccd2f3e9 in QThreadPrivate::start (arg=0x55e96db7cf90) at thread/qthread_unix.cpp:337\r\n#6  0x00007f43cc18560c in start_thread (arg=0x7f43c3c40700) at pthread_create.c:334\r\n#7  0x00007f43cab2889d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 3 (Thread 0x7f43c15e7700 (LWP 14167)):\r\n#0  pthread_cond_wait () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f43ccd2fbf3 in QWaitConditionPrivate::wait (time=18446744073709551615, this=0x7f43b4105930)\r\n    at thread/qwaitcondition_unix.cpp:136\r\n#2  QWaitCondition::wait (this=this@entry=0x7f43b4f76888, mutex=mutex@entry=0x7f43b4f76880, time=time@entry=18446744073709551615)\r\n    at thread/qwaitcondition_unix.cpp:208\r\n#3  0x00007f43ccd280e3 in QSemaphore::acquire (this=this@entry=0x7f43c15e57b0, n=n@entry=1) at thread/qsemaphore.cpp:137\r\n#4  0x00007f43ccf1ddb8 in QMetaMethod::invoke (this=this@entry=0x7f43c15e5a90, object=object@entry=0x55e96e1a9ff0, \r\n    connectionType=connectionType@entry=Qt::BlockingQueuedConnection, returnValue=..., val0=..., val1=..., val2=..., val3=..., val4=..., \r\n    val5=..., val6=..., val7=..., val8=..., val9=...) at kernel/qmetaobject.cpp:2240\r\n#5  0x00007f43ccf22bd3 in QMetaObject::invokeMethod (obj=obj@entry=0x55e96e1a9ff0, member=member@entry=0x55e96c50477f \"message\", \r\n---Type <return> to continue, or q <return> to quit---\r\n    type=Qt::BlockingQueuedConnection, ret=..., val0=..., val1=..., val2=..., val3=..., val4=..., val5=..., val6=..., val7=..., val8=..., \r\n    val9=...) at kernel/qmetaobject.cpp:1478\r\n#6  0x000055e96bd040fa in QMetaObject::invokeMethod (val9=..., val8=..., val7=..., val6=..., val5=..., val4=..., val3=..., val2=..., \r\n    val1=..., val0=..., type=<optimized out>, member=0x55e96c50477f \"message\", obj=0x55e96e1a9ff0)\r\n    at /usr/include/qt5/QtCore/qobjectdefs.h:391\r\n#7  ThreadSafeMessageBox (gui=0x55e96e1a9ff0, message=..., caption=..., style=<optimized out>) at qt/bitcoingui.cpp:1172\r\n#8  0x000055e96be24b7a in boost::function3<bool, std::string const&, std::string const&, unsigned int>::operator() (a2=<optimized out>, \r\n    a1=..., a0=..., this=<optimized out>) at /usr/include/boost/function/function_template.hpp:767\r\n#9  boost::signals2::detail::call_with_tuple_args<bool>::m_invoke<bool, boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)>, 0u, 1u, 2u, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&> (args=..., func=..., this=<optimized out>)\r\n    at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:92\r\n#10 boost::signals2::detail::call_with_tuple_args<bool>::operator()<boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)>, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int&, 3ul> (args=..., func=..., this=<optimized out>)\r\n    at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:86\r\n#11 boost::signals2::detail::variadic_slot_invoker<bool, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>::m_invoke<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int), boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)> >, boost::signals2::mutex> > > (connectionBody=..., this=<optimized out>)\r\n    at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:127\r\n#12 boost::signals2::detail::variadic_slot_invoker<bool, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>::operator()<boost::shared_ptr<boost::signals2::deta---Type <return> to continue, or q <return> to quit---\r\nil::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int), boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)> >, boost::signals2::mutex> > > (connectionBody=..., this=<optimized out>)\r\n    at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:115\r\n#13 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::string const&, std::string const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::string const&, std::string const&, unsigned int), boost::function<bool (std::string const&, std::string const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::string const&, std::string const&, unsigned int), boost::function<bool (std::string const&, std::string const&, unsigned int)> >, boost::signals2::mutex> >::dereference() const (\r\n    this=0x7f43c15e5f50) at /usr/include/boost/signals2/detail/slot_call_iterator.hpp:82\r\n#14 boost::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int), boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int), boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)> >, boost::signals2::mutex> > > (f=...)\r\n    at /usr/include/boost/iterator/iterator_facade.hpp:514\r\n#15 boost::iterator_facade<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::string const&, std::string const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::string const&, std::string const&, unsigned int), boost::function<bool (std::string const&, std::string const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connect---Type <return> to continue, or q <return> to quit---\r\nion_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::string const&, std::string const&, unsigned int), boost::function<bool (std::string const&, std::string const&, unsigned int)> >, boost::signals2::mutex> >, bool, boost::single_pass_traversal_tag, bool const&, long>::operator*() const (this=0x7f43c15e5f50)\r\n    at /usr/include/boost/iterator/iterator_facade.hpp:639\r\n#16 boost::signals2::last_value<bool>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int), boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int), boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)> >, boost::signals2::mutex> > > (last=..., first=..., this=<optimized out>)\r\n    at /usr/include/boost/signals2/last_value.hpp:47\r\n#17 boost::signals2::detail::combiner_invoker<bool>::operator()<boost::signals2::last_value<bool>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int), boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int), boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)> >, boost::signals2::mutex> > > (\r\n    last=..., first=..., combiner=..., this=<optimized out>) at /usr/include/boost/signals2/detail/result_type_wrapper.hpp:53\r\n#18 boost::signals2::detail::signal_impl<bool (std::string const&, std::string const&, unsigned int), boost::signals2::last_value<bool>, int, std::less<int>, boost::function<bool (std::string const&, std::string const&, unsigned int)>, boost::function<bool (boost::signals2::conne---Type <return> to continue, or q <return> to quit---\r\nction const&, std::string const&, std::string const&, unsigned int)>, boost::signals2::mutex>::operator()(std::string const&, std::string const&, unsigned int) (this=<optimized out>, args#0=..., args#1=..., args#2=268436482)\r\n    at /usr/include/boost/signals2/detail/signal_template.hpp:246\r\n#19 0x000055e96bf2c242 in boost::signals2::signal<bool (std::string const&, std::string const&, unsigned int), boost::signals2::last_value<bool>, int, std::less<int>, boost::function<bool (std::string const&, std::string const&, unsigned int)>, boost::function<bool (boost::signals2::connection const&, std::string const&, std::string const&, unsigned int)>, boost::signals2::mutex>::operator()(std::string const&, std::string const&, unsigned int) (args#2=268436482, args#1=\"\", args#0=\"Error: Disk space is low!\", this=<optimized out>)\r\n    at /usr/include/boost/signals2/detail/signal_template.hpp:718\r\n#20 (anonymous namespace)::AbortNode (strMessage=\"Disk space is low!\", userMessage=\"Error: Disk space is low!\") at validation.cpp:1539\r\n#21 0x000055e96bf2c4a9 in CheckDiskSpace (nAdditionalBytes=nAdditionalBytes@entry=0) at validation.cpp:3427\r\n#22 0x000055e96bf2c7de in FlushStateToDisk (state=..., mode=mode@entry=FLUSH_STATE_ALWAYS, nManualPruneHeight=nManualPruneHeight@entry=0)\r\n    at validation.cpp:2045\r\n#23 0x000055e96bf2d3c8 in FlushStateToDisk () at validation.cpp:2099\r\n#24 0x000055e96bdfbea4 in Shutdown () at init.cpp:226\r\n#25 0x000055e96bcf6cee in BitcoinCore::shutdown (this=0x55e96e4db790) at qt/bitcoin.cpp:303\r\n#26 0x00007f43ccf4723a in QObject::event (this=0x55e96e4db790, e=<optimized out>) at kernel/qobject.cpp:1245\r\n#27 0x00007f43cd83b4ec in QApplicationPrivate::notify_helper (this=this@entry=0x55e96db656f0, receiver=receiver@entry=0x55e96e4db790, \r\n    e=e@entry=0x55e96e4b88b0) at kernel/qapplication.cpp:3720\r\n#28 0x00007f43cd840f52 in QApplication::notify (this=0x7ffd5a86f330, receiver=0x55e96e4db790, e=0x55e96e4b88b0)\r\n    at kernel/qapplication.cpp:3503\r\n#29 0x00007f43ccf123ed in QCoreApplication::notifyInternal (this=0x7ffd5a86f330, receiver=0x55e96e4db790, event=event@entry=0x55e96e4b88b0)\r\n    at kernel/qcoreapplication.cpp:935\r\n#30 0x00007f43ccf15883 in QCoreApplication::sendEvent (event=0x55e96e4b88b0, receiver=<optimized out>) at kernel/qcoreapplication.h:228\r\n#31 QCoreApplicationPrivate::sendPostedEvents (receiver=receiver@entry=0x0, event_type=event_type@entry=0, data=0x55e96e4db4f0)\r\n---Type <return> to continue, or q <return> to quit---\r\n    at kernel/qcoreapplication.cpp:1552\r\n#32 0x00007f43ccf15ebe in QCoreApplication::sendPostedEvents (receiver=receiver@entry=0x0, event_type=event_type@entry=0)\r\n    at kernel/qcoreapplication.cpp:1410\r\n#33 0x00007f43ccf704b9 in postEventSourceDispatch (s=0x7f43b40012d0) at kernel/qeventdispatcher_glib.cpp:271\r\n#34 0x00007f43c95164bc in g_main_dispatch (context=0x7f43b4000990)\r\n    at /var/tmp/portage/dev-libs/glib-2.46.2-r3/work/glib-2.46.2/glib/gmain.c:3154\r\n#35 g_main_context_dispatch (context=context@entry=0x7f43b4000990)\r\n    at /var/tmp/portage/dev-libs/glib-2.46.2-r3/work/glib-2.46.2/glib/gmain.c:3769\r\n#36 0x00007f43c95167c8 in g_main_context_iterate (context=context@entry=0x7f43b4000990, block=block@entry=1, dispatch=dispatch@entry=1, \r\n    self=<optimized out>) at /var/tmp/portage/dev-libs/glib-2.46.2-r3/work/glib-2.46.2/glib/gmain.c:3840\r\n#37 0x00007f43c95168d1 in g_main_context_iteration (context=0x7f43b4000990, may_block=1)\r\n    at /var/tmp/portage/dev-libs/glib-2.46.2-r3/work/glib-2.46.2/glib/gmain.c:3901\r\n#38 0x00007f43ccf70584 in QEventDispatcherGlib::processEvents (this=0x7f43b40008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:418\r\n#39 0x00007f43ccf10aeb in QEventLoop::exec (this=this@entry=0x7f43c15e6e20, flags=..., flags@entry=...) at kernel/qeventloop.cpp:204\r\n#40 0x00007f43ccd299ad in QThread::exec (this=<optimized out>) at thread/qthread.cpp:503\r\n#41 0x00007f43ccd2f3e9 in QThreadPrivate::start (arg=0x55e96e4da8e0) at thread/qthread_unix.cpp:337\r\n#42 0x00007f43cc18560c in start_thread (arg=0x7f43c15e7700) at pthread_create.c:334\r\n#43 0x00007f43cab2889d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 2 (Thread 0x7f43a5861700 (LWP 14171)):\r\n#0  pthread_cond_wait () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x000055e96c0f6ecb in leveldb::(anonymous namespace)::PosixEnv::BGThread (this=0x7f43b4de3240) at leveldb/util/env_posix.cc:574\r\n#2  leveldb::(anonymous namespace)::PosixEnv::BGThreadWrapper (arg=0x7f43b4de3240) at leveldb/util/env_posix.cc:521\r\n#3  0x00007f43cc18560c in start_thread (arg=0x7f43a5861700) at pthread_create.c:334\r\n---Type <return> to continue, or q <return> to quit---\r\n#4  0x00007f43cab2889d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 1 (Thread 0x7f43ced76780 (LWP 14165)):\r\n#0  pthread_cond_wait () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f43ccd2fbf3 in QWaitConditionPrivate::wait (time=18446744073709551615, this=0x55e96e4db640)\r\n    at thread/qwaitcondition_unix.cpp:136\r\n#2  QWaitCondition::wait (this=this@entry=0x55e96e4db4a8, mutex=mutex@entry=0x55e96e4db480, time=time@entry=18446744073709551615)\r\n    at thread/qwaitcondition_unix.cpp:208\r\n#3  0x00007f43ccd2efe6 in QThread::wait (this=<optimized out>, time=18446744073709551615) at thread/qthread_unix.cpp:668\r\n#4  0x000055e96bcf4ff7 in BitcoinApplication::~BitcoinApplication (this=0x7ffd5a86f330, __in_chrg=<optimized out>) at qt/bitcoin.cpp:345\r\n#5  0x000055e96bce2e81 in main (argc=2, argv=<optimized out>) at qt/bitcoin.cpp:701\r\n(gdb)\r\n```",
          "user": {
            "login": "gmaxwell",
            "id": 858454,
            "node_id": "MDQ6VXNlcjg1ODQ1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmaxwell",
            "html_url": "https://github.com/gmaxwell",
            "followers_url": "https://api.github.com/users/gmaxwell/followers",
            "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
            "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
            "repos_url": "https://api.github.com/users/gmaxwell/repos",
            "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 9,
          "closed_at": "2020-05-08T19:29:17Z",
          "created_at": "2017-03-15T05:45:36Z",
          "updated_at": "2022-02-15T11:03:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 1069107812,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEwNjkxMDc4MTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1069107812",
      "actor": {
        "login": "ptschip",
        "id": 12862928,
        "node_id": "MDQ6VXNlcjEyODYyOTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/12862928?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ptschip",
        "html_url": "https://github.com/ptschip",
        "followers_url": "https://api.github.com/users/ptschip/followers",
        "following_url": "https://api.github.com/users/ptschip/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ptschip/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ptschip/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ptschip/subscriptions",
        "organizations_url": "https://api.github.com/users/ptschip/orgs",
        "repos_url": "https://api.github.com/users/ptschip/repos",
        "events_url": "https://api.github.com/users/ptschip/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ptschip/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b0e16fb981182d4ec14389f40baab853d152323a",
      "commit_url": "https://api.github.com/repos/ptschip/bitcoin/commits/b0e16fb981182d4ec14389f40baab853d152323a",
      "created_at": "2017-05-04T15:08:07Z"
    },
    {
      "event": "referenced",
      "id": 1137614626,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDExMzc2MTQ2MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1137614626",
      "actor": {
        "login": "jameshilliard",
        "id": 3298484,
        "node_id": "MDQ6VXNlcjMyOTg0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3298484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jameshilliard",
        "html_url": "https://github.com/jameshilliard",
        "followers_url": "https://api.github.com/users/jameshilliard/followers",
        "following_url": "https://api.github.com/users/jameshilliard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jameshilliard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jameshilliard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jameshilliard/subscriptions",
        "organizations_url": "https://api.github.com/users/jameshilliard/orgs",
        "repos_url": "https://api.github.com/users/jameshilliard/repos",
        "events_url": "https://api.github.com/users/jameshilliard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jameshilliard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6b0ef27b85c2093dca40a264382c336eb5727316",
      "commit_url": "https://api.github.com/repos/jameshilliard/bitcoin/commits/6b0ef27b85c2093dca40a264382c336eb5727316",
      "created_at": "2017-06-25T02:00:37Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-25T19:33:28Z",
      "updated_at": "2017-08-25T19:33:28Z",
      "source": {
        "issue": {
          "id": 205311204,
          "node_id": "MDU6SXNzdWUyMDUzMTEyMDQ=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9683",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9683/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9683/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9683/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/9683",
          "number": 9683,
          "state": "closed",
          "state_reason": "completed",
          "title": "gui, wallet: random abort (segmentation fault) running master/HEAD",
          "body": "I'm running the current master branch version (1c2edd9f). I recently saw it crash shortly after starting up.\r\n\r\n    $ ./bitcoin-qt\r\n        *** Error in `./bitcoin-qt': free(): invalid next size (fast): 0x00007f6fabfb5f90 ***\r\n        Aborted\r\n    $ \r\n\r\nUnfortunately I don't have a stack trace available.\r\n\r\nHere's the full debug.log file contents:\r\n\r\n    2017-02-03 23:28:28 \r\n\r\n    [...]\r\n\r\n    2017-02-03 23:28:28 Bitcoin version v0.13.99.0-1c2edd9\r\n    2017-02-03 23:28:28 InitParameterInteraction: parameter interaction: -listen=0 -> setting -discover=0\r\n    2017-02-03 23:28:28 InitParameterInteraction: parameter interaction: -listen=0 -> setting -listenonion=0\r\n    2017-02-03 23:28:28 InitParameterInteraction: parameter interaction: -whitelistforcerelay=1 -> setting -whitelistrelay=1\r\n    2017-02-03 23:28:29 Assuming ancestors of block 0000000000000000030abc968e1bd635736e880b946085c93152969b9a81a6e2 have valid signatures.\r\n    2017-02-03 23:28:29 Default data directory /home/chris/.bitcoin\r\n    2017-02-03 23:28:29 Using data directory /home/chris/.bitcoin\r\n    2017-02-03 23:28:29 Using config file /home/chris/.bitcoin/bitcoin.conf\r\n    2017-02-03 23:28:29 Using at most 32 automatic connections (65536 file descriptors available)\r\n    2017-02-03 23:28:29 Using 32 MiB out of 32 requested for signature cache, able to store 1048576 elements\r\n    2017-02-03 23:28:29 Using 4 threads for script verification\r\n    2017-02-03 23:28:29 scheduler thread start\r\n    2017-02-03 23:28:29 HTTP: creating work queue of depth 16\r\n    2017-02-03 23:28:29 Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcuser for rpcauth auth generation.\r\n    2017-02-03 23:28:29 HTTP: starting 4 worker threads\r\n    2017-02-03 23:28:29 Using BerkeleyDB version Berkeley DB 5.3.28: (September  9, 2013)\r\n    2017-02-03 23:28:29 Using wallet wallet.dat\r\n    2017-02-03 23:28:29 init message: Verifying wallet...\r\n    2017-02-03 23:28:29 CDBEnv::Open: LogDir=/home/chris/.bitcoin/database ErrorFile=/home/chris/.bitcoin/db.log\r\n    2017-02-03 23:28:30 Cache configuration:\r\n    2017-02-03 23:28:30 * Using 37.5MiB for block index database\r\n    2017-02-03 23:28:30 * Using 8.0MiB for chain state database\r\n    2017-02-03 23:28:30 * Using 254.5MiB for in-memory UTXO set (plus up to 286.1MiB of unused mempool space)\r\n    2017-02-03 23:28:30 init message: Loading block index...\r\n    2017-02-03 23:28:30 Opening LevelDB in /home/chris/.bitcoin/blocks/index\r\n    2017-02-03 23:28:31 Opened LevelDB successfully\r\n    2017-02-03 23:28:31 Using obfuscation key for /home/chris/.bitcoin/blocks/index: 0000000000000000\r\n    2017-02-03 23:28:31 Opening LevelDB in /home/chris/.bitcoin/chainstate\r\n    2017-02-03 23:28:32 Opened LevelDB successfully\r\n    2017-02-03 23:28:32 Using obfuscation key for /home/chris/.bitcoin/chainstate: 0000000000000000\r\n    2017-02-03 23:28:36 LoadBlockIndexDB: last block file = 724\r\n    2017-02-03 23:28:36 LoadBlockIndexDB: last block file info: CBlockFileInfo(blocks=55, size=52580365, heights=451383...451437, time=2017-02-03...2017-02-03)\r\n    2017-02-03 23:28:36 Checking all blk files are present...\r\n    2017-02-03 23:28:36 LoadBlockIndexDB: transaction index enabled\r\n    2017-02-03 23:28:36 LoadBlockIndexDB: hashBestChain=00000000000000000214c910b71f60e755bec4c09905a3d25da1073fd6bfb1c5 height=451437 date=2017-02-03 23:25:50 progress=0.999997\r\n    2017-02-03 23:28:36 init message: Rewinding blocks...\r\n    2017-02-03 23:28:38 init message: Verifying blocks...\r\n    2017-02-03 23:28:38 Verifying last 1 blocks at level 3\r\n    2017-02-03 23:28:38 [0%]...[99%]...[DONE].\r\n    2017-02-03 23:28:39 No coin database inconsistencies in last 2 blocks (4519 transactions)\r\n    2017-02-03 23:28:39  block index            8807ms\r\n    2017-02-03 23:28:39 init message: Loading wallet...\r\n    2017-02-03 23:28:39 nFileVersion = 139900\r\n    2017-02-03 23:28:39 Keys: 0 plaintext, 2613 encrypted, 259 w/ metadata, 2613 total\r\n    2017-02-03 23:28:39  wallet                  609ms\r\n    2017-02-03 23:28:39 init message: Rescanning...\r\n    2017-02-03 23:28:39 Rescanning last 32 blocks (from block 451405)...\r\n    2017-02-03 23:28:42  rescan                 2454ms\r\n    2017-02-03 23:28:42 setKeyPool.size() = 79\r\n    2017-02-03 23:28:42 mapWallet.size() = 6538\r\n    2017-02-03 23:28:42 mapAddressBook.size() = 11963\r\n    2017-02-03 23:28:42 mapBlockIndex.size() = 452118\r\n    2017-02-03 23:28:42 nBestHeight = 451437\r\n    2017-02-03 23:28:42 init message: Loading addresses...\r\n    2017-02-03 23:28:42 Loaded 63143 addresses from peers.dat  209ms\r\n    2017-02-03 23:28:42 init message: Loading banlist...\r\n    2017-02-03 23:28:42 init message: Starting network threads...\r\n    2017-02-03 23:28:42 net thread start\r\n    2017-02-03 23:28:42 init message: Done loading\r\n    2017-02-03 23:28:42 dnsseed thread start\r\n    2017-02-03 23:28:42 opencon thread start\r\n    2017-02-03 23:28:42 msghand thread start\r\n    2017-02-03 23:28:42 addcon thread start\r\n    2017-02-03 23:28:42 GUI: Platform customization: \"other\"\r\n    2017-02-03 23:28:43 connect() to [2003:7a:4917:e400:108e:b3ea:5d0c:8ae4]:8333 failed: Network is unreachable (101)\r\n    2017-02-03 23:28:43 GUI: PaymentServer::LoadRootCAs: Loaded  169  root certificates\r\n    2017-02-03 23:28:43 receive version message: /Satoshi:0.12.0/: version 70012, blocks=451437, us=x.x.x.x:x, peer=0, peeraddr=89.184.65.85:8333\r\n",
          "user": {
            "login": "dooglus",
            "id": 573356,
            "node_id": "MDQ6VXNlcjU3MzM1Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dooglus",
            "html_url": "https://github.com/dooglus",
            "followers_url": "https://api.github.com/users/dooglus/followers",
            "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
            "organizations_url": "https://api.github.com/users/dooglus/orgs",
            "repos_url": "https://api.github.com/users/dooglus/repos",
            "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dooglus/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 79,
          "closed_at": "2019-02-05T22:10:12Z",
          "created_at": "2017-02-04T01:22:25Z",
          "updated_at": "2021-12-16T14:05:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 1271541251,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyNzE1NDEyNTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1271541251",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d9e62d3e19f546f72ee070c23995bc3fa3914a17",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/d9e62d3e19f546f72ee070c23995bc3fa3914a17",
      "created_at": "2017-09-29T12:22:24Z"
    },
    {
      "event": "referenced",
      "id": 1365135719,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzNjUxMzU3MTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1365135719",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "22a6c1fd8f28a87a2133f4b716744c592ff456d2",
      "commit_url": "https://api.github.com/repos/laanwj/bitcoin/commits/22a6c1fd8f28a87a2133f4b716744c592ff456d2",
      "created_at": "2017-11-30T08:29:25Z"
    },
    {
      "event": "referenced",
      "id": 1365137044,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzNjUxMzcwNDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1365137044",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9b80fc1498d517b67657c4765f889364efabe683",
      "commit_url": "https://api.github.com/repos/laanwj/bitcoin/commits/9b80fc1498d517b67657c4765f889364efabe683",
      "created_at": "2017-11-30T08:30:22Z"
    },
    {
      "event": "referenced",
      "id": 1365481140,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzNjU0ODExNDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1365481140",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dd49862a703b69cd4b678977c87c559ddeead139",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd49862a703b69cd4b678977c87c559ddeead139",
      "created_at": "2017-11-30T11:57:46Z"
    },
    {
      "event": "referenced",
      "id": 1406892573,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MDY4OTI1NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1406892573",
      "actor": {
        "login": "classesjack",
        "id": 34173563,
        "node_id": "MDQ6VXNlcjM0MTczNTYz",
        "avatar_url": "https://avatars.githubusercontent.com/u/34173563?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/classesjack",
        "html_url": "https://github.com/classesjack",
        "followers_url": "https://api.github.com/users/classesjack/followers",
        "following_url": "https://api.github.com/users/classesjack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/classesjack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/classesjack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/classesjack/subscriptions",
        "organizations_url": "https://api.github.com/users/classesjack/orgs",
        "repos_url": "https://api.github.com/users/classesjack/repos",
        "events_url": "https://api.github.com/users/classesjack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/classesjack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ea51c467e2139f5c8d3eb54463f09acb5f15f04b",
      "commit_url": "https://api.github.com/repos/classesjack/bitcoin/commits/ea51c467e2139f5c8d3eb54463f09acb5f15f04b",
      "created_at": "2018-01-02T20:45:32Z"
    },
    {
      "event": "referenced",
      "id": 1407469862,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MDc0Njk4NjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1407469862",
      "actor": {
        "login": "nining",
        "id": 935115,
        "node_id": "MDQ6VXNlcjkzNTExNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/935115?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nining",
        "html_url": "https://github.com/nining",
        "followers_url": "https://api.github.com/users/nining/followers",
        "following_url": "https://api.github.com/users/nining/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nining/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nining/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nining/subscriptions",
        "organizations_url": "https://api.github.com/users/nining/orgs",
        "repos_url": "https://api.github.com/users/nining/repos",
        "events_url": "https://api.github.com/users/nining/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nining/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4f33ac1055b9338ad326b4d3a12aa9ef6856e13b",
      "commit_url": "https://api.github.com/repos/nining/bitcoin/commits/4f33ac1055b9338ad326b4d3a12aa9ef6856e13b",
      "created_at": "2018-01-03T09:23:50Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "SachaSchlegel",
        "id": 9555,
        "node_id": "MDQ6VXNlcjk1NTU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9555?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SachaSchlegel",
        "html_url": "https://github.com/SachaSchlegel",
        "followers_url": "https://api.github.com/users/SachaSchlegel/followers",
        "following_url": "https://api.github.com/users/SachaSchlegel/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/SachaSchlegel/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/SachaSchlegel/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/SachaSchlegel/subscriptions",
        "organizations_url": "https://api.github.com/users/SachaSchlegel/orgs",
        "repos_url": "https://api.github.com/users/SachaSchlegel/repos",
        "events_url": "https://api.github.com/users/SachaSchlegel/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/SachaSchlegel/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-08T23:12:50Z",
      "updated_at": "2018-01-08T23:12:50Z",
      "source": {
        "issue": {
          "id": 286919495,
          "node_id": "MDU6SXNzdWUyODY5MTk0OTU=",
          "url": "https://api.github.com/repos/faircoin/faircoin/issues/20",
          "repository_url": "https://api.github.com/repos/faircoin/faircoin",
          "labels_url": "https://api.github.com/repos/faircoin/faircoin/issues/20/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/faircoin/faircoin/issues/20/comments",
          "events_url": "https://api.github.com/repos/faircoin/faircoin/issues/20/events",
          "html_url": "https://github.com/faircoin/faircoin/issues/20",
          "number": 20,
          "state": "open",
          "state_reason": null,
          "title": "compilation failure in src/test/alert_tests.cpp",
          "body": "Running on commit: https://github.com/faircoin/faircoin/commit/2ba090b1f2b380297b5ebbe76df2ce590a415d70\r\nLinux Ubuntu\r\nuname -a: Linux MorgenLandBrain 4.13.0-21-generic #24-Ubuntu SMP Mon Dec 18 17:29:16 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\nnach git ckeckout ...\r\n\r\n```\r\n\r\n[Makefile.txt](https://github.com/faircoin/faircoin/files/1613379/Makefile.txt)\r\n[Makefile.txt](https://github.com/faircoin/faircoin/files/1613381/Makefile.txt)\r\n[config.log](https://github.com/faircoin/faircoin/files/1613382/config.log)\r\nmake clean\r\n./autogen.sh\r\n./configure\r\nmake\r\n\r\n...\r\ntest/alert_tests.cpp: In member function ‘void Alert_tests::PartitionAlert::test_method()’:\r\ntest/alert_tests.cpp:203:55: error: ‘const struct Consensus::Params’ has no member named ‘nPowTargetSpacing’\r\n     int64_t nPowTargetSpacing = params.GetConsensus().nPowTargetSpacing;\r\n                                                       ^~~~~~~~~~~~~~~~~\r\ntest/alert_tests.cpp:224:5: error: ‘PartitionCheck’ was not declared in this scope\r\n     PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\r\n     ^~~~~~~~~~~~~~\r\ntest/alert_tests.cpp:224:5: note: suggested alternative: ‘PartitionAlert’\r\n     PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\r\n     ^~~~~~~~~~~~~~\r\n     PartitionAlert\r\n\r\n\r\n```",
          "user": {
            "login": "SachaSchlegel",
            "id": 9555,
            "node_id": "MDQ6VXNlcjk1NTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SachaSchlegel",
            "html_url": "https://github.com/SachaSchlegel",
            "followers_url": "https://api.github.com/users/SachaSchlegel/followers",
            "following_url": "https://api.github.com/users/SachaSchlegel/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/SachaSchlegel/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/SachaSchlegel/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/SachaSchlegel/subscriptions",
            "organizations_url": "https://api.github.com/users/SachaSchlegel/orgs",
            "repos_url": "https://api.github.com/users/SachaSchlegel/repos",
            "events_url": "https://api.github.com/users/SachaSchlegel/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/SachaSchlegel/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 3,
          "created_at": "2018-01-08T23:12:50Z",
          "updated_at": "2018-12-09T17:39:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 1520548924,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1MjA1NDg5MjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1520548924",
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2340d25dbb91740194b129755e9db4fa1bb0cbac",
      "commit_url": "https://api.github.com/repos/chaincoin/chaincoin/commits/2340d25dbb91740194b129755e9db4fa1bb0cbac",
      "created_at": "2018-03-14T10:06:20Z"
    },
    {
      "event": "referenced",
      "id": 1545172945,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1NDUxNzI5NDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1545172945",
      "actor": {
        "login": "KrzysiekJ",
        "id": 1598188,
        "node_id": "MDQ6VXNlcjE1OTgxODg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1598188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KrzysiekJ",
        "html_url": "https://github.com/KrzysiekJ",
        "followers_url": "https://api.github.com/users/KrzysiekJ/followers",
        "following_url": "https://api.github.com/users/KrzysiekJ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/KrzysiekJ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/KrzysiekJ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/KrzysiekJ/subscriptions",
        "organizations_url": "https://api.github.com/users/KrzysiekJ/orgs",
        "repos_url": "https://api.github.com/users/KrzysiekJ/repos",
        "events_url": "https://api.github.com/users/KrzysiekJ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/KrzysiekJ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cf9eb9f3e8cc8fbf7cec1a948f1d326bca214b97",
      "commit_url": "https://api.github.com/repos/KrzysiekJ/bitcoin/commits/cf9eb9f3e8cc8fbf7cec1a948f1d326bca214b97",
      "created_at": "2018-03-28T09:45:42Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "kayront",
        "id": 46160648,
        "node_id": "MDQ6VXNlcjQ2MTYwNjQ4",
        "avatar_url": "https://avatars.githubusercontent.com/u/46160648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kayront",
        "html_url": "https://github.com/kayront",
        "followers_url": "https://api.github.com/users/kayront/followers",
        "following_url": "https://api.github.com/users/kayront/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kayront/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kayront/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kayront/subscriptions",
        "organizations_url": "https://api.github.com/users/kayront/orgs",
        "repos_url": "https://api.github.com/users/kayront/repos",
        "events_url": "https://api.github.com/users/kayront/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kayront/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-18T06:09:49Z",
      "updated_at": "2019-04-18T06:09:49Z",
      "source": {
        "issue": {
          "id": 427367499,
          "node_id": "MDU6SXNzdWU0MjczNjc0OTk=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15708",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15708/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15708/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15708/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/15708",
          "number": 15708,
          "state": "closed",
          "state_reason": "completed",
          "title": "bitcoin core does not compile on Solaris",
          "body": "<!-- This issue tracker is only for technical issues related to Bitcoin Core.\r\n\r\nGeneral bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\r\n\r\nFor reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\r\n\r\nIf the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\r\n\r\n<!-- Describe the issue -->\r\n<!--- What behavior did you expect? -->\r\n\r\nA freshly minted bitcoind.\r\n\r\n<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\r\n\r\nconfigure error.\r\n\r\n<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\r\n\r\nVery reliably.\r\n\r\n<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\r\n\r\n0.16\r\n\r\n<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\r\n\r\nSmartOS (Illumos, Solaris)\r\n\r\n<!-- For the GUI-related issue on Linux provide names and versions of a distro, a desktop environment and a graphical shell (if relevant). -->\r\n\r\n<!-- Any extra information that might be useful in the debugging process. -->\r\n<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->\r\n\r\nhttps://us-east.manta.joyent.com/pkgsrc/public/reports/trunk/x86_64/20190327.1924/bitcoin-0.16.3nb1/configure.log\r\n\r\nThe issue is that there is no hexdump in solaris. I am told that xxd is a viable alternative to hexdump.\r\n\r\nCheers!",
          "user": {
            "login": "kayront",
            "id": 46160648,
            "node_id": "MDQ6VXNlcjQ2MTYwNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/46160648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kayront",
            "html_url": "https://github.com/kayront",
            "followers_url": "https://api.github.com/users/kayront/followers",
            "following_url": "https://api.github.com/users/kayront/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kayront/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kayront/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kayront/subscriptions",
            "organizations_url": "https://api.github.com/users/kayront/orgs",
            "repos_url": "https://api.github.com/users/kayront/repos",
            "events_url": "https://api.github.com/users/kayront/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kayront/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 234878,
              "node_id": "MDU6TGFiZWwyMzQ4Nzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Linux/Unix",
              "name": "Linux/Unix",
              "color": "770000",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 25,
          "closed_at": "2020-04-26T15:50:09Z",
          "created_at": "2019-03-31T07:28:42Z",
          "updated_at": "2022-02-15T11:19:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 2312844702,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIzMTI4NDQ3MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2312844702",
      "actor": {
        "login": "uhliksk",
        "id": 37454226,
        "node_id": "MDQ6VXNlcjM3NDU0MjI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/37454226?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/uhliksk",
        "html_url": "https://github.com/uhliksk",
        "followers_url": "https://api.github.com/users/uhliksk/followers",
        "following_url": "https://api.github.com/users/uhliksk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/uhliksk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/uhliksk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/uhliksk/subscriptions",
        "organizations_url": "https://api.github.com/users/uhliksk/orgs",
        "repos_url": "https://api.github.com/users/uhliksk/repos",
        "events_url": "https://api.github.com/users/uhliksk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/uhliksk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3393d47288c65c98680194a4063425fa73d0f662",
      "commit_url": "https://api.github.com/repos/FxTC-Bata-development/Bataoshi/commits/3393d47288c65c98680194a4063425fa73d0f662",
      "created_at": "2019-05-01T20:50:29Z"
    },
    {
      "event": "referenced",
      "id": 2444536043,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI0NDQ1MzYwNDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2444536043",
      "actor": {
        "login": "uhliksk",
        "id": 37454226,
        "node_id": "MDQ6VXNlcjM3NDU0MjI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/37454226?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/uhliksk",
        "html_url": "https://github.com/uhliksk",
        "followers_url": "https://api.github.com/users/uhliksk/followers",
        "following_url": "https://api.github.com/users/uhliksk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/uhliksk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/uhliksk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/uhliksk/subscriptions",
        "organizations_url": "https://api.github.com/users/uhliksk/orgs",
        "repos_url": "https://api.github.com/users/uhliksk/repos",
        "events_url": "https://api.github.com/users/uhliksk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/uhliksk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "191551b3acb13f6f8c15de65f7d671c9050ee32c",
      "commit_url": "https://api.github.com/repos/fxtc/fxtc/commits/191551b3acb13f6f8c15de65f7d671c9050ee32c",
      "created_at": "2019-06-27T14:44:44Z"
    },
    {
      "event": "referenced",
      "id": 2445402314,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI0NDU0MDIzMTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2445402314",
      "actor": {
        "login": "uhliksk",
        "id": 37454226,
        "node_id": "MDQ6VXNlcjM3NDU0MjI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/37454226?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/uhliksk",
        "html_url": "https://github.com/uhliksk",
        "followers_url": "https://api.github.com/users/uhliksk/followers",
        "following_url": "https://api.github.com/users/uhliksk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/uhliksk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/uhliksk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/uhliksk/subscriptions",
        "organizations_url": "https://api.github.com/users/uhliksk/orgs",
        "repos_url": "https://api.github.com/users/uhliksk/repos",
        "events_url": "https://api.github.com/users/uhliksk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/uhliksk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0eb6589033723d179a6d0f54a823251be40c0af8",
      "commit_url": "https://api.github.com/repos/fxtc/fxtc/commits/0eb6589033723d179a6d0f54a823251be40c0af8",
      "created_at": "2019-06-27T19:55:54Z"
    },
    {
      "event": "referenced",
      "id": 2445491125,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI0NDU0OTExMjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2445491125",
      "actor": {
        "login": "uhliksk",
        "id": 37454226,
        "node_id": "MDQ6VXNlcjM3NDU0MjI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/37454226?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/uhliksk",
        "html_url": "https://github.com/uhliksk",
        "followers_url": "https://api.github.com/users/uhliksk/followers",
        "following_url": "https://api.github.com/users/uhliksk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/uhliksk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/uhliksk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/uhliksk/subscriptions",
        "organizations_url": "https://api.github.com/users/uhliksk/orgs",
        "repos_url": "https://api.github.com/users/uhliksk/repos",
        "events_url": "https://api.github.com/users/uhliksk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/uhliksk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4ebbd2e98338502f401a8561a3c559c91e3b1d2e",
      "commit_url": "https://api.github.com/repos/fxtc/fxtc/commits/4ebbd2e98338502f401a8561a3c559c91e3b1d2e",
      "created_at": "2019-06-27T20:30:57Z"
    },
    {
      "event": "referenced",
      "id": 2445859846,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI0NDU4NTk4NDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2445859846",
      "actor": {
        "login": "uhliksk",
        "id": 37454226,
        "node_id": "MDQ6VXNlcjM3NDU0MjI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/37454226?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/uhliksk",
        "html_url": "https://github.com/uhliksk",
        "followers_url": "https://api.github.com/users/uhliksk/followers",
        "following_url": "https://api.github.com/users/uhliksk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/uhliksk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/uhliksk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/uhliksk/subscriptions",
        "organizations_url": "https://api.github.com/users/uhliksk/orgs",
        "repos_url": "https://api.github.com/users/uhliksk/repos",
        "events_url": "https://api.github.com/users/uhliksk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/uhliksk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dc48d679e26edbd9d669e813f740fd17ae45a602",
      "commit_url": "https://api.github.com/repos/fxtc/fxtc/commits/dc48d679e26edbd9d669e813f740fd17ae45a602",
      "created_at": "2019-06-27T23:43:17Z"
    },
    {
      "event": "referenced",
      "id": 2445989981,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI0NDU5ODk5ODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2445989981",
      "actor": {
        "login": "uhliksk",
        "id": 37454226,
        "node_id": "MDQ6VXNlcjM3NDU0MjI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/37454226?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/uhliksk",
        "html_url": "https://github.com/uhliksk",
        "followers_url": "https://api.github.com/users/uhliksk/followers",
        "following_url": "https://api.github.com/users/uhliksk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/uhliksk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/uhliksk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/uhliksk/subscriptions",
        "organizations_url": "https://api.github.com/users/uhliksk/orgs",
        "repos_url": "https://api.github.com/users/uhliksk/repos",
        "events_url": "https://api.github.com/users/uhliksk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/uhliksk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1509f99281f8e37bf1268ac52732922ad07ea359",
      "commit_url": "https://api.github.com/repos/fxtc/fxtc/commits/1509f99281f8e37bf1268ac52732922ad07ea359",
      "created_at": "2019-06-28T01:32:38Z"
    },
    {
      "event": "referenced",
      "id": 2446173839,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI0NDYxNzM4Mzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2446173839",
      "actor": {
        "login": "uhliksk",
        "id": 37454226,
        "node_id": "MDQ6VXNlcjM3NDU0MjI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/37454226?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/uhliksk",
        "html_url": "https://github.com/uhliksk",
        "followers_url": "https://api.github.com/users/uhliksk/followers",
        "following_url": "https://api.github.com/users/uhliksk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/uhliksk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/uhliksk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/uhliksk/subscriptions",
        "organizations_url": "https://api.github.com/users/uhliksk/orgs",
        "repos_url": "https://api.github.com/users/uhliksk/repos",
        "events_url": "https://api.github.com/users/uhliksk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/uhliksk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0645118268e92dc3b8896c658c5b18147e401674",
      "commit_url": "https://api.github.com/repos/fxtc/fxtc/commits/0645118268e92dc3b8896c658c5b18147e401674",
      "created_at": "2019-06-28T04:17:11Z"
    },
    {
      "event": "referenced",
      "id": 2537305051,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI1MzczMDUwNTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2537305051",
      "actor": {
        "login": "fxtc",
        "id": 39305205,
        "node_id": "MDQ6VXNlcjM5MzA1MjA1",
        "avatar_url": "https://avatars.githubusercontent.com/u/39305205?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fxtc",
        "html_url": "https://github.com/fxtc",
        "followers_url": "https://api.github.com/users/fxtc/followers",
        "following_url": "https://api.github.com/users/fxtc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fxtc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fxtc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fxtc/subscriptions",
        "organizations_url": "https://api.github.com/users/fxtc/orgs",
        "repos_url": "https://api.github.com/users/fxtc/repos",
        "events_url": "https://api.github.com/users/fxtc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fxtc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3856c1aafd350a798642463af1a483fe60a552aa",
      "commit_url": "https://api.github.com/repos/fxtc/fxtc/commits/3856c1aafd350a798642463af1a483fe60a552aa",
      "created_at": "2019-08-06T16:01:45Z"
    },
    {
      "event": "referenced",
      "id": 2537324936,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI1MzczMjQ5MzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2537324936",
      "actor": {
        "login": "uhliksk",
        "id": 37454226,
        "node_id": "MDQ6VXNlcjM3NDU0MjI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/37454226?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/uhliksk",
        "html_url": "https://github.com/uhliksk",
        "followers_url": "https://api.github.com/users/uhliksk/followers",
        "following_url": "https://api.github.com/users/uhliksk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/uhliksk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/uhliksk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/uhliksk/subscriptions",
        "organizations_url": "https://api.github.com/users/uhliksk/orgs",
        "repos_url": "https://api.github.com/users/uhliksk/repos",
        "events_url": "https://api.github.com/users/uhliksk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/uhliksk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "375cf4e12a040510198594f72b0bff4ea7833976",
      "commit_url": "https://api.github.com/repos/fxtc/fxtc/commits/375cf4e12a040510198594f72b0bff4ea7833976",
      "created_at": "2019-08-06T16:08:42Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "udovdh",
        "id": 5012213,
        "node_id": "MDQ6VXNlcjUwMTIyMTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5012213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/udovdh",
        "html_url": "https://github.com/udovdh",
        "followers_url": "https://api.github.com/users/udovdh/followers",
        "following_url": "https://api.github.com/users/udovdh/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/udovdh/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/udovdh/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/udovdh/subscriptions",
        "organizations_url": "https://api.github.com/users/udovdh/orgs",
        "repos_url": "https://api.github.com/users/udovdh/repos",
        "events_url": "https://api.github.com/users/udovdh/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/udovdh/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-10-04T05:17:39Z",
      "updated_at": "2019-10-04T05:17:39Z",
      "source": {
        "issue": {
          "id": 258254951,
          "node_id": "MDU6SXNzdWUyNTgyNTQ5NTE=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/11355",
          "number": 11355,
          "state": "closed",
          "state_reason": "completed",
          "title": "LevelDB read failure: Corruption: block checksum mismatch",
          "body": "Build against commit f197a4c515757262eda0accbe762e311335be11b, a small change from master branch 09627b1dd41d1151a709d5ead82a924bf59e3d38 - bitcoin-qt had been running for 12 hours or so without a problem, was fully synced, then suddenly I saw an error frame pop up with no content. Here's a screenshot:\r\n\r\n![screenshot](https://user-images.githubusercontent.com/573356/30515480-47028746-9add-11e7-8970-2b9602dfd291.png)\r\n\r\nThe debug.log shows block 485584 was received, then 36 seconds later db corruption was found:\r\n\r\n    2017-09-16 15:21:03 UpdateTip: new best=000000000000000000f9dec71fb25bda22ba734ad133c24c8553fb66fee2f98e height=485584 version=0x20000000 log2_work=87.116783 tx=254942322 date='2017-09-16 15:20:14' progress=0.999999 cache=65.6MiB(504658txo) warning='5 of last 100 blocks have unexpected version'\r\n    2017-09-16 15:21:39 LevelDB read failure: Corruption: block checksum mismatch\r\n    2017-09-16 15:21:39 Corruption: block checksum mismatch\r\n    2017-09-16 15:22:02 connect() to [2001:0:9d38:90d7:1097:91ba:f1ff:5782]:8333 failed: Network is unreachable (101)\r\n    2017-09-16 15:41:38 socket sending timeout: 1201s\r\n    2017-09-16 15:41:38 socket sending timeout: 1201s\r\n    2017-09-16 15:41:38 socket sending timeout: 1201s\r\n    2017-09-16 15:41:39 socket sending timeout: 1201s\r\n    2017-09-16 15:41:39 socket sending timeout: 1201s\r\n    2017-09-16 15:41:39 socket sending timeout: 1201s\r\n    2017-09-16 15:41:39 socket sending timeout: 1201s\r\n    2017-09-16 15:41:40 socket sending timeout: 1201s\r\n\r\nNothing has been written to the log since then, and neither the main Bitcoin window nor the error popup has been painted since.\r\n\r\nA few weeks ago I saw a similar error, but at that point I was attempting to track down a race condition on startup and so wasn't surprised when I saw some database corruption. But I fixed it by doing a `-reindex-chainstate` and hadn't had a problem since, until now.\r\n\r\nI attached gdb to the frozen bitcoin-qt process to get the stack traces:\r\n\r\n    12:51:18 chris@chris:~/Programs/bitcoin.git/src$ ps -ef | grep bitcoin\r\n    chris    17648 31052  0 Sep15 pts/5    00:03:57 /home/chris/Programs/bitcoin.git/src/qt/bitcoin-qt -datadir=/home/chris/.bitcoin\r\n    chris    23785 31653  0 08:22 pts/7    00:00:00 tail -f /home/chris/.bitcoin/debug.log\r\n    chris    28346 14411  0 12:51 pts/0    00:00:00 grep bitcoin\r\n    12:51:53 chris@chris:~/Programs/bitcoin.git/src$ gdb /home/chris/Programs/bitcoin.git/src/qt/bitcoin-qt 17648\r\n    GNU gdb (Debian 7.12-6) 7.12.0.20161007-git\r\n    Copyright (C) 2016 Free Software Foundation, Inc.\r\n    License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\n    This is free software: you are free to change and redistribute it.\r\n    There is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\r\n    and \"show warranty\" for details.\r\n    This GDB was configured as \"x86_64-linux-gnu\".\r\n    Type \"show configuration\" for configuration details.\r\n    For bug reporting instructions, please see:\r\n    <http://www.gnu.org/software/gdb/bugs/>.\r\n    Find the GDB manual and other documentation resources online at:\r\n    <http://www.gnu.org/software/gdb/documentation/>.\r\n    For help, type \"help\".\r\n    Type \"apropos word\" to search for commands related to \"word\"...\r\n    Reading symbols from /home/chris/Programs/bitcoin.git/src/qt/bitcoin-qt...done.\r\n    Attaching to program: /home/chris/Programs/bitcoin.git/src/qt/bitcoin-qt, process 17648\r\n    [New LWP 17649]\r\n    [New LWP 17650]\r\n    [New LWP 17651]\r\n    [New LWP 17652]\r\n    [New LWP 17653]\r\n    [New LWP 17654]\r\n    [New LWP 17655]\r\n    [New LWP 17656]\r\n    [New LWP 17657]\r\n    [New LWP 17658]\r\n    [New LWP 17659]\r\n    [New LWP 17660]\r\n    [New LWP 17664]\r\n    [New LWP 17671]\r\n    [New LWP 17673]\r\n    [New LWP 17674]\r\n    [New LWP 17675]\r\n    [New LWP 17676]\r\n    [New LWP 17677]\r\n    [Thread debugging using libthread_db enabled]\r\n    Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n    __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n    135\t../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S: No such file or directory.\r\n    (gdb) thread apply all where\r\n\r\n    Thread 20 (Thread 0x7ff63debb700 (LWP 17677)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x7ff6240008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7ff63debacc0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007ff6950f70f3 in QThread::exec (this=<optimized out>) at thread/qthread.cpp:507\r\n    #6  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x56128c7f02a0) at thread/qthread_unix.cpp:368\r\n    #7  0x00007ff6947b9494 in start_thread (arg=0x7ff63debb700) at pthread_create.c:333\r\n    #8  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 19 (Thread 0x7ff63d245700 (LWP 17676)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x7ff6200008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7ff63d244cc0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007ff6950f70f3 in QThread::exec (this=<optimized out>) at thread/qthread.cpp:507\r\n    #6  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x56128b923d40) at thread/qthread_unix.cpp:368\r\n    #7  0x00007ff6947b9494 in start_thread (arg=0x7ff63d245700) at pthread_create.c:333\r\n    #8  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 18 (Thread 0x7ff63e70c700 (LWP 17675)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6950fcc6b in QWaitConditionPrivate::wait (time=18446744073709551615, this=0x7ff633dd4480) at thread/qwaitcondition_unix.cpp:143\r\n    #2  QWaitCondition::wait (this=this@entry=0x7ff6154c9468, mutex=mutex@entry=0x7ff6154c9460, time=time@entry=18446744073709551615)\r\n        at thread/qwaitcondition_unix.cpp:215\r\n    #3  0x00007ff6950f5b33 in QSemaphore::acquire (this=this@entry=0x7ff63e702890, n=n@entry=1) at thread/qsemaphore.cpp:143\r\n    #4  0x00007ff6952d68cd in QMetaMethod::invoke (this=this@entry=0x7ff63e702af8, object=object@entry=0x56128b9167c0, connectionType=Qt::BlockingQueuedConnection, \r\n        connectionType@entry=1047538560, returnValue=..., val0=..., val1=..., val2=..., val3=..., val4=..., val5=..., val6=..., val7=..., val8=..., val9=...)\r\n        at kernel/qmetaobject.cpp:2279\r\n    #5  0x00007ff6952dc58a in QMetaObject::invokeMethod (obj=0x56128b9167c0, member=0x56128a8e58de \"message\", type=1047538560, ret=..., val0=..., val1=..., val2=..., \r\n        val3=..., val4=..., val5=..., val6=..., val7=..., val8=..., val9=...) at kernel/qmetaobject.cpp:1489\r\n    #6  0x000056128a01880c in QMetaObject::invokeMethod (member=0x80 <error: Cannot access memory at address 0x80>, type=Qt::BlockingQueuedConnection, val0=..., \r\n        obj=<optimized out>, val1=..., val2=..., val3=..., val4=..., val5=..., val6=..., val7=..., val8=..., val9=...)\r\n        at /usr/include/x86_64-linux-gnu/qt5/QtCore/qobjectdefs.h:460\r\n    #7  ThreadSafeMessageBox (gui=0x56128b9167c0, message=\"Error reading from database, shutting down.\", caption=..., style=<optimized out>) at qt/bitcoingui.cpp:1167\r\n    #8  0x000056128a01ccb7 in boost::_bi::list4<boost::_bi::value<BitcoinGUI*>, boost::arg<1>, boost::arg<2>, boost::arg<3> >::operator()<bool, bool (*)(BitcoinGUI*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::_bi::rrlist3<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int> > (f=<error reading variable>, this=<optimized out>, a=...)\r\n        at /usr/include/boost/bind/bind.hpp:453\r\n    #9  boost::_bi::bind_t<bool, bool (*)(BitcoinGUI*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::_bi::list4<boost::_bi::value<BitcoinGUI*>, boost::arg<1>, boost::arg<2>, boost::arg<3> > >::operator()<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&&) (a1=<error reading variable: Cannot access memory at address 0x88>, \r\n        a2=<error reading variable: Cannot access memory at address 0x9>, this=<optimized out>, a3=<optimized out>) at /usr/include/boost/bind/bind.hpp:1330\r\n    #10 boost::detail::function::function_obj_invoker3<boost::_bi::bind_t<bool, bool (*)(BitcoinGUI*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::_bi::list4<boost::_bi::value<BitcoinGUI*>, boost::arg<1>, boost::arg<2>, boost::arg<3> > >, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>::invoke (function_obj_ptr=..., \r\n        a0=<error reading variable: Cannot access memory at address 0x88>, a1=<error reading variable: Cannot access memory at address 0x9>, a2=2491150687)\r\n        at /usr/include/boost/function/function_template.hpp:138\r\n    #11 0x000056128a17b81e in boost::function3<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>::operator() (a0=<error reading variable: Cannot access memory at address 0x88>, \r\n        a1=<error reading variable: Cannot access memory at address 0x9>, a2=2491150687, this=<optimized out>) at /usr/include/boost/function/function_template.hpp:770\r\n    #12 boost::signals2::detail::call_with_tuple_args<bool>::m_invoke<boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, 0u, 1u, 2u, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&>(boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>&, boost::signals2::detail::unsigned_meta_array<0u, 1u, 2u>, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&> const&, boost::disable_if<boost::is_void<boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>::result_type>, void>::type*) const (this=<optimized out>, func=..., args=...)\r\n        at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:98\r\n    #13 boost::signals2::detail::call_with_tuple_args<bool>::operator()<boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&, 3ul>(boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&> const&, mpl_::size_t<3ul>) const (this=<optimized out>, func=..., args=...)\r\n        at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:90\r\n    #14 boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > const&) const (\r\n        this=<optimized out>, connectionBody=...) at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:133\r\n    #15 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >::dereference() const (this=0x7ff63e703010) at /usr/include/boost/signals2/detail/slot_call_iterator.hpp:110\r\n    #16 0x000056128a17ac98 in boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > const&) (f=...) at /usr/include/boost/iterator/iterator_facade.hpp:549\r\n    #17 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >, bool, boost::iterators::single_pass_traversal_tag, bool&, long, false, false>::operator*() const (\r\n        this=<optimized out>) at /usr/include/boost/iterator/iterator_facade.hpp:655\r\n    #18 boost::signals2::last_value<bool>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >) const (this=<optimized out>, first=..., last=...) at /usr/include/boost/signals2/last_value.hpp:48\r\n    #19 0x000056128a17a930 in boost::signals2::detail::combiner_invoker<bool>::operator()<boost::signals2::last_value<bool>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::signals2::last_value<bool>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >) const (combiner=..., this=<optimized out>, first=..., last=...) at /usr/include/boost/signals2/detail/result_type_wrapper.hpp:53\r\n    #20 boost::signals2::detail::signal_impl<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::signals2::last_value<bool>, int, std::less<int>, boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::function<bool (boost::signals2::connection const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::signals2::mutex>::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) (\r\n        this=0x56128b705d20, args=<optimized out>, args=<optimized out>, args=<optimized out>) at /usr/include/boost/signals2/detail/signal_template.hpp:242\r\n    #21 0x000056128a17a13d in boost::signals2::signal<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::signals2::last_value<bool>, int, std::less<int>, boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::function<bool (boost::signals2::connection const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::signals2::mutex>::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) (args=..., args=..., this=<optimized out>, args=...) at /usr/include/boost/signals2/detail/signal_template.hpp:723\r\n    #22 CCoinsViewErrorCatcher::GetCoin (this=<optimized out>, outpoint=..., coin=...) at init.cpp:143\r\n    #23 0x000056128a46e462 in CCoinsViewCache::FetchCoin (this=0x7ff648ab9ee0, outpoint=...) at coins.cpp:48\r\n    #24 0x000056128a46e549 in CCoinsViewCache::GetCoin (this=0x7ff633dd44ac, outpoint=..., coin=...) at coins.cpp:61\r\n    #25 0x000056128a2c8414 in CCoinsViewMemPool::GetCoin (this=0x7ff63e7038a8, outpoint=..., coin=...) at txmempool.cpp:902\r\n    #26 0x000056128a46e462 in CCoinsViewCache::FetchCoin (this=0x7ff63e704530, outpoint=...) at coins.cpp:48\r\n    #27 0x000056128a46eb03 in CCoinsViewCache::HaveCoin (this=0x7ff633dd44ac, outpoint=...) at coins.cpp:129\r\n    #28 0x000056128a30c5cc in AcceptToMemoryPoolWorker (chainparams=..., pool=..., state=..., ptx=..., fLimitFree=<optimized out>, pfMissingInputs=<optimized out>, \r\n        nAcceptTime=140697029833055, plTxnReplaced=0x56128acc70f0 <pcoinsTip>, fOverrideMempoolLimit=false, nAbsurdFee=@0x7ff63e7044d0: -2962908112588391035, \r\n        coins_to_uncache=...) at validation.cpp:547\r\n    #29 0x000056128a2de858 in AcceptToMemoryPoolWithTime (chainparams=..., pool=..., state=..., \r\n        tx=<error reading variable: Cannot access memory at address 0x1be08247c8b50>, fLimitFree=<optimized out>, pfMissingInputs=0x0, nAcceptTime=1505575299, \r\n        plTxnReplaced=0x7ff63e7083a8, fOverrideMempoolLimit=<optimized out>, nAbsurdFee=0) at validation.cpp:886\r\n    #30 0x000056128a2de122 in AcceptToMemoryPool (pool=..., state=..., tx=<error reading variable: Cannot access memory at address 0x1be08247c8b50>, fLimitFree=true, \r\n        pfMissingInputs=0x0, plTxnReplaced=0x7ff63e7083a8, fOverrideMempoolLimit=<optimized out>, nAbsurdFee=<optimized out>) at validation.cpp:902\r\n    #31 0x000056128a1d7266 in ProcessMessage (pfrom=<optimized out>, strCommand=..., vRecv=..., nTimeReceived=<optimized out>, chainparams=..., \r\n        connman=<optimized out>, interruptMsgProc=...) at net_processing.cpp:1791\r\n    #32 0x000056128a1cbf12 in PeerLogicValidation::ProcessMessages (this=0x7ff664046440, pfrom=0x7ff62822f0f0, interruptMsgProc=...) at net_processing.cpp:2718\r\n    #33 0x000056128a1f8037 in non-virtual thunk to PeerLogicValidation::ProcessMessages(CNode*, std::atomic<bool>&) () at net_processing.cpp:2643\r\n    #34 0x000056128a1a767b in CConnman::ThreadMessageHandler (this=<optimized out>) at net.cpp:1995\r\n    #35 0x000056128a1c24ba in std::__invoke_impl<void, void (CConnman::* const&)(), CConnman*&> (__f=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #36 std::__invoke<void (CConnman::* const&)(), CConnman*&> (__fn=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #37 std::_Mem_fn_base<void (CConnman::*)(), true>::operator()<CConnman*&> (this=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #38 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=<optimized out>, \r\n        __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #39 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::operator()<, void>() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #40 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #41 0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff63e70bd00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #42 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #43 0x000056128a1c267d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #44 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #45 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #46 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #47 0x00007ff6947b9494 in start_thread (arg=0x7ff63e70c700) at pthread_create.c:333\r\n    #48 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 17 (Thread 0x7ff63ef5d700 (LWP 17674)):\r\n    #0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n    #1  0x00007ff6947bbc06 in __GI___pthread_mutex_lock (mutex=0x56128acc6b88 <cs_main>) at ../nptl/pthread_mutex_lock.c:115\r\n    #2  0x000056128a0259d5 in boost::recursive_mutex::lock (this=<optimized out>) at /usr/include/boost/thread/pthread/recursive_mutex.hpp:113\r\n    #3  AnnotatedMixin<boost::recursive_mutex>::lock (this=<optimized out>) at ./sync.h:59\r\n    #4  boost::unique_lock<CCriticalSection>::lock (this=0x7ff63ef5c250) at /usr/include/boost/thread/lock_types.hpp:346\r\n    #5  0x000056128a1c406a in CMutexLock<CCriticalSection>::Enter (this=0x56128acc6b88 <cs_main>, nLine=504, pszName=<optimized out>, pszFile=<optimized out>)\r\n        at ./sync.h:123\r\n    #6  CMutexLock<CCriticalSection>::CMutexLock (this=0x56128acc6b88 <cs_main>, nLine=504, fTry=false, mutexIn=..., pszName=<optimized out>, pszFile=<optimized out>)\r\n        at ./sync.h:144\r\n    #7  PeerLogicValidation::InitializeNode (this=0x7ff664046440, pnode=0x7ff6282bb0d0) at net_processing.cpp:504\r\n    #8  0x000056128a1c5657 in non-virtual thunk to PeerLogicValidation::InitializeNode(CNode*) () at net_processing.cpp:499\r\n    #9  0x000056128a1a4602 in CConnman::OpenNetworkConnection (this=0x7ff66456ad30, addrConnect=..., fCountFailure=<optimized out>, grantOutbound=<optimized out>, \r\n        pszDest=0x0, fOneShot=<optimized out>, fFeeler=<optimized out>, fAddnode=92) at net.cpp:1965\r\n    #10 0x000056128a1a5508 in CConnman::ThreadOpenConnections (this=<optimized out>, connect=...) at net.cpp:1840\r\n    #11 0x000056128a1c2887 in std::__invoke_impl<void, void (CConnman::* const&)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >), CConnman*&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&> (\r\n        __f=<optimized out>, __t=<optimized out>, __args=<error reading variable: Cannot access memory at address 0x8>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #12 0x000056128a1c270e in std::__invoke<void (CConnman::* const&)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >), CConnman*&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&> (__fn=\r\n        @0x56128acc6b88: (void (CConnman::*)(CConnman * const, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >)) 0x100000002, this adjustment 4294984971, __args=..., __args=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #13 std::_Mem_fn_base<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >), true>::operator()<CConnman*&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&> (__args=..., __args=..., \r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #14 std::_Bind<std::_Mem_fn<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> (CConnman*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (this=0x56128acc6b88 <cs_main>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #15 std::_Bind<std::_Mem_fn<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> (CConnman*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)>::operator()<, void>() (\r\n        this=0x56128acc6b88 <cs_main>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #16 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> (CConnman*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #17 0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff63ef5cd00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #18 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #19 0x000056128a1c267d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #20 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #21 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #22 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #23 0x00007ff6947b9494 in start_thread (arg=0x7ff63ef5d700) at pthread_create.c:333\r\n    #24 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 16 (Thread 0x7ff63f7ae700 (LWP 17673)):\r\n    #0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n    #1  0x000056128a49b56e in __gthread_cond_timedwait (__cond=<optimized out>, __mutex=<optimized out>, __abs_timeout=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/x86_64-linux-gnu/c++/6.3.0/bits/gthr-default.h:871\r\n    #2  std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (this=<optimized out>, __lock=..., __atime=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:166\r\n    #3  std::condition_variable::wait_until<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (this=<optimized out>, __lock=..., __atime=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:106\r\n    #4  std::condition_variable::wait_until<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0>(std::unique_lock<std::mutex>&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0) (this=<optimized out>, \r\n        __lock=..., __atime=..., __p=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:129\r\n    #5  std::condition_variable::wait_for<long, std::ratio<1l, 1000l>, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0>(std::unique_lock<std::mutex>&, std::chrono::duration<long, std::ratio<1l, 1000l> > const&, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0) (this=<optimized out>, __lock=..., __rtime=..., __p=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:145\r\n    #6  CThreadInterrupt::sleep_for (this=<optimized out>, rel_time=...) at threadinterrupt.cpp:30\r\n    #7  0x000056128a49b5fa in CThreadInterrupt::sleep_for (this=0x7ff6645bb1a4, rel_time=...) at threadinterrupt.cpp:35\r\n    #8  0x000056128a1a7316 in CConnman::ThreadOpenAddedConnections (this=<optimized out>) at net.cpp:1927\r\n    #9  0x000056128a1c24ba in std::__invoke_impl<void, void (CConnman::* const&)(), CConnman*&> (__f=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #10 std::__invoke<void (CConnman::* const&)(), CConnman*&> (__fn=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #11 std::_Mem_fn_base<void (CConnman::*)(), true>::operator()<CConnman*&> (this=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #12 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=<optimized out>, \r\n        __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #13 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::operator()<, void>() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #14 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #15 0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff63f7add00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #16 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #17 0x000056128a1c267d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #18 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #19 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #20 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #21 0x00007ff6947b9494 in start_thread (arg=0x7ff63f7ae700) at pthread_create.c:333\r\n    #22 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 15 (Thread 0x7ff645ec7700 (LWP 17671)):\r\n    #0  0x00007ff692d5a3f3 in select () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x000056128a19da64 in CConnman::ThreadSocketHandler (this=<optimized out>) at net.cpp:1251\r\n    #2  0x000056128a1c24ba in std::__invoke_impl<void, void (CConnman::* const&)(), CConnman*&> (__f=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #3  std::__invoke<void (CConnman::* const&)(), CConnman*&> (__fn=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #4  std::_Mem_fn_base<void (CConnman::*)(), true>::operator()<CConnman*&> (this=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #5  std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=<optimized out>, \r\n        __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #6  std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::operator()<, void>() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #7  std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #8  0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff645ec6d00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #9  TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #10 0x000056128a1c267d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #11 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #12 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #13 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #14 0x00007ff6947b9494 in start_thread (arg=0x7ff645ec7700) at pthread_create.c:333\r\n    #15 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 14 (Thread 0x7ff658cf7700 (LWP 17664)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x000056128a4f38ab in leveldb::(anonymous namespace)::PosixEnv::BGThread (this=<optimized out>) at leveldb/util/env_posix.cc:641\r\n    #2  leveldb::(anonymous namespace)::PosixEnv::BGThreadWrapper (arg=<optimized out>) at leveldb/util/env_posix.cc:556\r\n    #3  0x00007ff6947b9494 in start_thread (arg=0x7ff658cf7700) at pthread_create.c:333\r\n    #4  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 13 (Thread 0x7ff668e19700 (LWP 17660)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6935e750c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056128a381c2a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:127\r\n    #3  0x000056128a37baca in HTTPWorkQueueRun (queue=0x7ff664044c7c) at httpserver.cpp:351\r\n    #4  0x000056128a383508 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff668e19700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 12 (Thread 0x7ff66966a700 (LWP 17659)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6935e750c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056128a381c2a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:127\r\n    #3  0x000056128a37baca in HTTPWorkQueueRun (queue=0x7ff664044c7c) at httpserver.cpp:351\r\n    #4  0x000056128a383508 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff66966a700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 11 (Thread 0x7ff669ebb700 (LWP 17658)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6935e750c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056128a381c2a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:127\r\n    #3  0x000056128a37baca in HTTPWorkQueueRun (queue=0x7ff664044c7c) at httpserver.cpp:351\r\n    #4  0x000056128a383508 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff669ebb700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 10 (Thread 0x7ff66a70c700 (LWP 17657)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6935e750c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056128a381c2a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:127\r\n    #3  0x000056128a37baca in HTTPWorkQueueRun (queue=0x7ff664044c7c) at httpserver.cpp:351\r\n    #4  0x000056128a383508 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff66a70c700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 9 (Thread 0x7ff66af5d700 (LWP 17656)):\r\n    #0  0x00007ff692d620f3 in epoll_wait () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff6938d9d98 in ?? () from /usr/lib/x86_64-linux-gnu/libevent-2.0.so.5\r\n    #2  0x00007ff6938c407a in event_base_loop () from /usr/lib/x86_64-linux-gnu/libevent-2.0.so.5\r\n    #3  0x000056128a37b03f in ThreadHTTP (base=0x7ff6640443d0, http=<optimized out>) at httpserver.cpp:303\r\n    #4  0x000056128a382c4d in std::__invoke_impl<bool, bool (*&)(event_base*, evhttp*), event_base*, evhttp*>(std::__invoke_other, bool (*&)(event_base*, evhttp*), event_base*&&, evhttp*&&) (__f=<optimized out>, __args=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:210\r\n    #5  std::__invoke<bool (*&)(event_base*, evhttp*), event_base*, evhttp*>(bool (*&)(event_base*, evhttp*), event_base*&&, evhttp*&&) (__fn=<optimized out>, \r\n        __args=<optimized out>, __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #6  std::reference_wrapper<bool (*)(event_base*, evhttp*)>::operator()<event_base*, evhttp*>(event_base*&&, evhttp*&&) const (__args=<optimized out>, \r\n        this=<optimized out>, __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:465\r\n    #7  std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (\r\n        this=0x7ff692d620f3 <epoll_wait+51>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #8  std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>::operator()() (this=0x7ff692d620f3 <epoll_wait+51>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #9  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<bool>, std::__future_base::_Result_base::_Deleter>, std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>, bool>::operator()() const (this=0x7ff66af5ccd0)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:1325\r\n    #10 0x000056128a382b8f in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<bool>, std::__future_base::_Result_base::_Deleter>, std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>, bool> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1716\r\n    #11 0x000056128a382aba in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (\r\n        this=0x7ff664044660) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #12 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x7ff664044e80, __f=0x7ff664044660, __did_set=0x7ff66af5cc8f) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:533\r\n    #13 0x000056128a382b56 in std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=<optimized out>, __args=<optimized out>, __args=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #14 std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__fn=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #15 void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:602\r\n    #16 void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::operator()() const (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:607\r\n    #17 void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::__invoke() () at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:607\r\n    #18 0x00007ff6947c0739 in __pthread_once_slow (once_control=0x7ff664044e98, init_routine=0x7ff6935ec120 <__once_proxy>) at pthread_once.c:116\r\n    #19 0x000056128a382a39 in __gthread_once (__func=0x7ff664044660, __once=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/x86_64-linux-gnu/c++/6.3.0/bits/gthr-default.h:699\r\n    #20 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __once=..., __f=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:614\r\n    #21 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (this=0x7ff664044e80, __res=..., __ignore_failure=false) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:392\r\n    #22 0x000056128a382491 in std::__future_base::_Task_state<bool (*)(event_base*, evhttp*), std::allocator<int>, bool (event_base*, evhttp*)>::_M_run(event_base*&&, evhttp*&&) (this=0x17, __args=<optimized out>, __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:1409\r\n    #23 0x000056128a38348b in std::packaged_task<bool (event_base*, evhttp*)>::operator()(event_base*, evhttp*) (\r\n        __args=<error reading variable: Cannot access memory at address 0x20>, __args=<error reading variable: Cannot access memory at address 0x20>, \r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:1553\r\n    #24 std::_Bind_simple<std::packaged_task<bool (event_base*, evhttp*)> (event_base*, evhttp*)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #25 std::_Bind_simple<std::packaged_task<bool (event_base*, evhttp*)> (event_base*, evhttp*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #26 std::thread::_State_impl<std::_Bind_simple<std::packaged_task<bool (event_base*, evhttp*)> (event_base*, evhttp*)> >::_M_run() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #27 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #28 0x00007ff6947b9494 in start_thread (arg=0x7ff66af5d700) at pthread_create.c:333\r\n    #29 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 8 (Thread 0x7ff66b7ae700 (LWP 17655)):\r\n    #0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n    #1  0x000056128a257c82 in boost::condition_variable::do_wait_until (this=0x56128bfebea0, m=..., timeout=...)\r\n        at /usr/include/boost/thread/pthread/condition_variable.hpp:109\r\n    #2  0x000056128a489379 in boost::condition_variable::wait_until (this=<optimized out>, lk=..., tp=...)\r\n        at /usr/include/boost/thread/pthread/condition_variable_fwd.hpp:252\r\n    #3  boost::condition_variable::wait_until<boost::chrono::duration<long, boost::ratio<1l, 1000000000l> > > (this=<optimized out>, lock=..., t=...)\r\n        at /usr/include/boost/thread/pthread/condition_variable_fwd.hpp:209\r\n    #4  CScheduler::serviceQueue (this=<optimized out>) at scheduler.cpp:67\r\n    #5  0x000056128a18553a in boost::_mfi::mf0<void, CScheduler>::operator() (p=<optimized out>, this=<optimized out>) at /usr/include/boost/bind/mem_fn_template.hpp:49\r\n    #6  boost::_bi::list1<boost::_bi::value<CScheduler*> >::operator()<boost::_mfi::mf0<void, CScheduler>, boost::_bi::list0> (this=<optimized out>, f=..., a=...)\r\n        at /usr/include/boost/bind/bind.hpp:259\r\n    #7  boost::_bi::bind_t<void, boost::_mfi::mf0<void, CScheduler>, boost::_bi::list1<boost::_bi::value<CScheduler*> > >::operator() (this=<optimized out>)\r\n        at /usr/include/boost/bind/bind.hpp:1294\r\n    #8  std::_Function_handler<void (), boost::_bi::bind_t<void, boost::_mfi::mf0<void, CScheduler>, boost::_bi::list1<boost::_bi::value<CScheduler*> > > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #9  0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff66b7adcb8)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #10 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #11 0x000056128a185ab6 in boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<std::function<void ()> > >::operator()<void (*)(char const*, std::function<void ()>), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(char const*, std::function<void ()>), boost::_bi::list0&, int) (this=0x7ff664043100, \r\n        f=<optimized out>, a=...) at /usr/include/boost/bind/bind.hpp:319\r\n    #12 0x000056128a185a3f in boost::_bi::bind_t<void, void (*)(char const*, std::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<std::function<void ()> > > >::operator()() (this=<optimized out>) at /usr/include/boost/bind/bind.hpp:1294\r\n    #13 boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(char const*, std::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<std::function<void ()> > > > >::run() (this=<optimized out>) at /usr/include/boost/thread/detail/thread.hpp:116\r\n    #14 0x00007ff69635d116 in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.62.0\r\n    #15 0x00007ff6947b9494 in start_thread (arg=0x7ff66b7ae700) at pthread_create.c:333\r\n    #16 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 7 (Thread 0x7ff66bfff700 (LWP 17654)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x000056128a0017eb in boost::condition_variable::wait (this=<optimized out>, m=...) at /usr/include/boost/thread/pthread/condition_variable.hpp:77\r\n    #2  0x000056128a3212f2 in CCheckQueue<CScriptCheck>::Loop (this=<optimized out>, fMaster=<optimized out>) at ./checkqueue.h:102\r\n    #3  0x000056128a2e12c8 in CCheckQueue<CScriptCheck>::Thread (this=0x56128acc71ec <scriptcheckqueue+84>) at ./checkqueue.h:139\r\n    #4  ThreadScriptCheck () at validation.cpp:1540\r\n    #5  0x000056128a185114 in boost::detail::thread_data<void (*)()>::run (this=0x56128acc71ec <scriptcheckqueue+84>) at /usr/include/boost/thread/detail/thread.hpp:116\r\n    #6  0x00007ff69635d116 in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.62.0\r\n    #7  0x00007ff6947b9494 in start_thread (arg=0x7ff66bfff700) at pthread_create.c:333\r\n    #8  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 6 (Thread 0x7ff677398700 (LWP 17653)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x7ff6640008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7ff677397cc0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007ff6950f70f3 in QThread::exec (this=<optimized out>) at thread/qthread.cpp:507\r\n    #6  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x56128bfe7de0) at thread/qthread_unix.cpp:368\r\n    #7  0x00007ff6947b9494 in start_thread (arg=0x7ff677398700) at pthread_create.c:333\r\n    #8  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 5 (Thread 0x7ff677be9700 (LWP 17652)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x7ff66c0008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7ff677be8c90, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007ff6950f70f3 in QThread::exec (this=this@entry=0x7ff6955a6d60 <(anonymous namespace)::Q_QGS__q_manager::innerFunction()::holder>)\r\n        at thread/qthread.cpp:507\r\n    #6  0x00007ff6955316d5 in QDBusConnectionManager::run (this=0x7ff6955a6d60 <(anonymous namespace)::Q_QGS__q_manager::innerFunction()::holder>)\r\n        at qdbusconnection.cpp:178\r\n    #7  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x7ff6955a6d60 <(anonymous namespace)::Q_QGS__q_manager::innerFunction()::holder>)\r\n        at thread/qthread_unix.cpp:368\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff677be9700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 4 (Thread 0x7ff67df9e700 (LWP 17651)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fd82 in g_main_loop_run () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff68473e656 in ?? () from /usr/lib/x86_64-linux-gnu/libgio-2.0.so.0\r\n    #4  0x00007ff6906b73d5 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #5  0x00007ff6947b9494 in start_thread (arg=0x7ff67df9e700) at pthread_create.c:333\r\n    #6  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 3 (Thread 0x7ff67e7ef700 (LWP 17650)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69068fb51 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #4  0x00007ff6906b73d5 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #5  0x00007ff6947b9494 in start_thread (arg=0x7ff67e7ef700) at pthread_create.c:333\r\n    #6  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 2 (Thread 0x7ff688439700 (LWP 17649)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff68e55c150 in ?? () from /usr/lib/x86_64-linux-gnu/libxcb.so.1\r\n    #2  0x00007ff68e55dee9 in xcb_wait_for_event () from /usr/lib/x86_64-linux-gnu/libxcb.so.1\r\n    #3  0x00007ff68ab9ab69 in QXcbEventReader::run (this=0x56128b83c900) at qxcbconnection.cpp:1343\r\n    #4  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x56128b83c900) at thread/qthread_unix.cpp:368\r\n    #5  0x00007ff6947b9494 in start_thread (arg=0x7ff688439700) at pthread_create.c:333\r\n    #6  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 1 (Thread 0x7ff696f01900 (LWP 17648)):\r\n    #0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n    #1  0x00007ff6947bbc06 in __GI___pthread_mutex_lock (mutex=0x56128acc6df0 <mempool+56>) at ../nptl/pthread_mutex_lock.c:115\r\n    #2  0x000056128a0259d5 in boost::recursive_mutex::lock (this=<optimized out>) at /usr/include/boost/thread/pthread/recursive_mutex.hpp:113\r\n    #3  AnnotatedMixin<boost::recursive_mutex>::lock (this=<optimized out>) at ./sync.h:59\r\n    #4  boost::unique_lock<CCriticalSection>::lock (this=0x7fff8192c5e8) at /usr/include/boost/thread/lock_types.hpp:346\r\n    #5  0x000056128a02541e in CMutexLock<CCriticalSection>::Enter (this=0x56128acc6df0 <mempool+56>, nLine=602, pszName=<optimized out>, pszFile=<optimized out>)\r\n        at ./sync.h:123\r\n    #6  CMutexLock<CCriticalSection>::CMutexLock (this=0x56128acc6df0 <mempool+56>, mutexIn=..., nLine=602, fTry=false, pszName=<optimized out>, \r\n        pszFile=<optimized out>) at ./sync.h:144\r\n    #7  CTxMemPool::size (this=0x56128acc6db8 <mempool>) at ./txmempool.h:602\r\n    #8  0x000056128a0240b9 in ClientModel::getMempoolSize (this=<optimized out>) at qt/clientmodel.cpp:130\r\n    #9  ClientModel::updateTimer (this=0x56128b70d6e0) at qt/clientmodel.cpp:153\r\n    #10 0x000056128a0ba739 in ClientModel::qt_static_metacall (_o=0x56128acc6df0 <mempool+56>, _c=128, _id=<optimized out>, _a=0x7ff6947c1f5c <__lll_lock_wait+28>)\r\n        at qt/moc_clientmodel.cpp:140\r\n    #11 0x00007ff6952f75e9 in QMetaObject::activate (sender=sender@entry=0x56128b71a310, signalOffset=<optimized out>, local_signal_index=local_signal_index@entry=0, \r\n        argv=argv@entry=0x0) at kernel/qobject.cpp:3740\r\n    #12 0x00007ff6952f7f07 in QMetaObject::activate (sender=sender@entry=0x56128b71a310, m=m@entry=0x7ff695515760 <QTimer::staticMetaObject>, \r\n        local_signal_index=local_signal_index@entry=0, argv=argv@entry=0x0) at kernel/qobject.cpp:3602\r\n    #13 0x00007ff695371780 in QTimer::timeout (this=this@entry=0x56128b71a310) at .moc/moc_qtimer.cpp:198\r\n    #14 0x00007ff695303f78 in QTimer::timerEvent (this=0x56128b71a310, e=<optimized out>) at kernel/qtimer.cpp:254\r\n    #15 0x00007ff6952f8453 in QObject::event (this=0x56128b71a310, e=<optimized out>) at kernel/qobject.cpp:1285\r\n    #16 0x00007ff695c3ab8c in QApplicationPrivate::notify_helper (this=<optimized out>, receiver=0x56128b71a310, e=0x7fff8192ca80) at kernel/qapplication.cpp:3799\r\n    #17 0x00007ff695c42341 in QApplication::notify (this=0x7fff8192d6b0, receiver=0x56128b71a310, e=0x7fff8192ca80) at kernel/qapplication.cpp:3556\r\n    #18 0x00007ff6952cb9e0 in QCoreApplication::notifyInternal2 (receiver=0x56128b71a310, event=event@entry=0x7fff8192ca80) at kernel/qcoreapplication.cpp:988\r\n    #19 0x00007ff69531efee in QCoreApplication::sendEvent (event=0x7fff8192ca80, receiver=<optimized out>)\r\n        at ../../include/QtCore/../../src/corelib/kernel/qcoreapplication.h:231\r\n    #20 QTimerInfoList::activateTimers (this=0x56128b8c6940) at kernel/qtimerinfo_unix.cpp:644\r\n    #21 0x00007ff69531f511 in timerSourceDispatch (source=<optimized out>) at kernel/qeventdispatcher_glib.cpp:182\r\n    #22 0x00007ff69068f7f7 in g_main_context_dispatch () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #23 0x00007ff69068fa60 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #24 0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #25 0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x56128b8c6720, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #26 0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7fff8192ccd0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #27 0x00007ff695e290e7 in QDialog::exec (this=0x7fff8192cd58) at dialogs/qdialog.cpp:552\r\n    #28 0x000056128a016d55 in BitcoinGUI::message (this=0x56128b9167c0, title=..., message=..., style=<optimized out>, ret=0x7ff63e702e8b) at qt/bitcoingui.cpp:925\r\n    #29 0x000056128a0b9403 in BitcoinGUI::qt_static_metacall (_o=0x56128b9167c0, _c=<optimized out>, _id=<optimized out>, _a=0x7ff63e702920)\r\n        at qt/moc_bitcoingui.cpp:216\r\n    #30 0x00007ff6952f8499 in QObject::event (this=this@entry=0x56128b9167c0, e=e@entry=0x7ff614534610) at kernel/qobject.cpp:1263\r\n    #31 0x00007ff695c8246b in QWidget::event (this=this@entry=0x56128b9167c0, event=event@entry=0x7ff614534610) at kernel/qwidget.cpp:9225\r\n    #32 0x00007ff695d8192b in QMainWindow::event (this=0x56128b9167c0, event=0x7ff614534610) at widgets/qmainwindow.cpp:1543\r\n    #33 0x00007ff695c3ab8c in QApplicationPrivate::notify_helper (this=<optimized out>, receiver=0x56128b9167c0, e=0x7ff614534610) at kernel/qapplication.cpp:3799\r\n    #34 0x00007ff695c42341 in QApplication::notify (this=0x7fff8192d6b0, receiver=0x56128b9167c0, e=0x7ff614534610) at kernel/qapplication.cpp:3556\r\n    #35 0x00007ff6952cb9e0 in QCoreApplication::notifyInternal2 (receiver=0x56128b9167c0, event=event@entry=0x7ff614534610) at kernel/qcoreapplication.cpp:988\r\n    #36 0x00007ff6952ce16d in QCoreApplication::sendEvent (event=0x7ff614534610, receiver=<optimized out>)\r\n        at ../../include/QtCore/../../src/corelib/kernel/qcoreapplication.h:231\r\n    #37 QCoreApplicationPrivate::sendPostedEvents (receiver=receiver@entry=0x0, event_type=event_type@entry=0, data=0x56128b821ce0) at kernel/qcoreapplication.cpp:1649\r\n    #38 0x00007ff6952ce5d8 in QCoreApplication::sendPostedEvents (receiver=receiver@entry=0x0, event_type=event_type@entry=0) at kernel/qcoreapplication.cpp:1503\r\n    #39 0x00007ff69531fc43 in postEventSourceDispatch (s=0x56128b8c67f0) at kernel/qeventdispatcher_glib.cpp:276\r\n    #40 0x00007ff69068f7f7 in g_main_context_dispatch () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #41 0x00007ff69068fa60 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #42 0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #43 0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x56128b8c6720, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #44 0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7fff8192d4a0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #45 0x00007ff6952d213c in QCoreApplication::exec () at kernel/qcoreapplication.cpp:1261\r\n    #46 0x0000561289ffbb19 in main (argc=<optimized out>, argv=<optimized out>) at qt/bitcoin.cpp:714\r\n    (gdb) \r\n\r\nI suppose it's possible that this is corruption in something other than the chainstate db, that I only fixed the chainstate db by reindexing and still have old corruption in another db.\r\n\r\nEither way, bitcoin-qt shouldn't hang like this. It's not responding to requests to \"bitcoin-cli stop\" or any other RPC.",
          "user": {
            "login": "dooglus",
            "id": 573356,
            "node_id": "MDQ6VXNlcjU3MzM1Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dooglus",
            "html_url": "https://github.com/dooglus",
            "followers_url": "https://api.github.com/users/dooglus/followers",
            "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
            "organizations_url": "https://api.github.com/users/dooglus/orgs",
            "repos_url": "https://api.github.com/users/dooglus/repos",
            "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dooglus/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 323697996,
              "node_id": "MDU6TGFiZWwzMjM2OTc5OTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Data%20corruption",
              "name": "Data corruption",
              "color": "f7c6c7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 72,
          "closed_at": "2018-03-28T21:05:29Z",
          "created_at": "2017-09-16T19:59:33Z",
          "updated_at": "2021-12-16T14:55:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 2915698260,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MTU2OTgyNjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2915698260",
      "actor": {
        "login": "Warchant",
        "id": 1867551,
        "node_id": "MDQ6VXNlcjE4Njc1NTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1867551?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Warchant",
        "html_url": "https://github.com/Warchant",
        "followers_url": "https://api.github.com/users/Warchant/followers",
        "following_url": "https://api.github.com/users/Warchant/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Warchant/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Warchant/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Warchant/subscriptions",
        "organizations_url": "https://api.github.com/users/Warchant/orgs",
        "repos_url": "https://api.github.com/users/Warchant/repos",
        "events_url": "https://api.github.com/users/Warchant/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Warchant/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7958da26e88355aafd370e6fa6ac4e6c82863dd3",
      "commit_url": "https://api.github.com/repos/VeriBlock/vbk-ri-btc/commits/7958da26e88355aafd370e6fa6ac4e6c82863dd3",
      "created_at": "2019-12-31T14:21:08Z"
    },
    {
      "event": "referenced",
      "id": 2941476681,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NDE0NzY2ODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2941476681",
      "actor": {
        "login": "velesnetwork",
        "id": 42907171,
        "node_id": "MDQ6VXNlcjQyOTA3MTcx",
        "avatar_url": "https://avatars.githubusercontent.com/u/42907171?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/velesnetwork",
        "html_url": "https://github.com/velesnetwork",
        "followers_url": "https://api.github.com/users/velesnetwork/followers",
        "following_url": "https://api.github.com/users/velesnetwork/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/velesnetwork/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/velesnetwork/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/velesnetwork/subscriptions",
        "organizations_url": "https://api.github.com/users/velesnetwork/orgs",
        "repos_url": "https://api.github.com/users/velesnetwork/repos",
        "events_url": "https://api.github.com/users/velesnetwork/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/velesnetwork/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "13ce5c40d5e8ead054b69166a05c8cab2095be8c",
      "commit_url": "https://api.github.com/repos/velescore/veles/commits/13ce5c40d5e8ead054b69166a05c8cab2095be8c",
      "created_at": "2020-01-12T20:19:48Z"
    },
    {
      "event": "referenced",
      "id": 3011630944,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMwMTE2MzA5NDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3011630944",
      "actor": {
        "login": "mdfkbtc",
        "id": 43780846,
        "node_id": "MDQ6VXNlcjQzNzgwODQ2",
        "avatar_url": "https://avatars.githubusercontent.com/u/43780846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mdfkbtc",
        "html_url": "https://github.com/mdfkbtc",
        "followers_url": "https://api.github.com/users/mdfkbtc/followers",
        "following_url": "https://api.github.com/users/mdfkbtc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mdfkbtc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mdfkbtc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mdfkbtc/subscriptions",
        "organizations_url": "https://api.github.com/users/mdfkbtc/orgs",
        "repos_url": "https://api.github.com/users/mdfkbtc/repos",
        "events_url": "https://api.github.com/users/mdfkbtc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mdfkbtc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0ea71dc01af1da6c1d2a70bea2553c0da2c539c4",
      "commit_url": "https://api.github.com/repos/mdfkbtc/veles-mdfkbtc/commits/0ea71dc01af1da6c1d2a70bea2553c0da2c539c4",
      "created_at": "2020-02-05T21:15:10Z"
    },
    {
      "event": "referenced",
      "id": 3123127875,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMxMjMxMjc4NzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3123127875",
      "actor": {
        "login": "Losangelosgenetics",
        "id": 62075594,
        "node_id": "MDQ6VXNlcjYyMDc1NTk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/62075594?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Losangelosgenetics",
        "html_url": "https://github.com/Losangelosgenetics",
        "followers_url": "https://api.github.com/users/Losangelosgenetics/followers",
        "following_url": "https://api.github.com/users/Losangelosgenetics/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Losangelosgenetics/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Losangelosgenetics/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Losangelosgenetics/subscriptions",
        "organizations_url": "https://api.github.com/users/Losangelosgenetics/orgs",
        "repos_url": "https://api.github.com/users/Losangelosgenetics/repos",
        "events_url": "https://api.github.com/users/Losangelosgenetics/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Losangelosgenetics/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "94f1d8fc761302d88f848ce5e6a4a3292717fad9",
      "commit_url": "https://api.github.com/repos/Losangelosgenetics/bitcoin/commits/94f1d8fc761302d88f848ce5e6a4a3292717fad9",
      "created_at": "2020-03-12T14:41:16Z"
    },
    {
      "event": "referenced",
      "id": 3214893199,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMTQ4OTMxOTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3214893199",
      "actor": {
        "login": "Bushstar",
        "id": 5293433,
        "node_id": "MDQ6VXNlcjUyOTM0MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5293433?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Bushstar",
        "html_url": "https://github.com/Bushstar",
        "followers_url": "https://api.github.com/users/Bushstar/followers",
        "following_url": "https://api.github.com/users/Bushstar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Bushstar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Bushstar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Bushstar/subscriptions",
        "organizations_url": "https://api.github.com/users/Bushstar/orgs",
        "repos_url": "https://api.github.com/users/Bushstar/repos",
        "events_url": "https://api.github.com/users/Bushstar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Bushstar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "610b3e1b0600513d768249a2474b01c3893bd279",
      "commit_url": "https://api.github.com/repos/Bushstar/omnicore/commits/610b3e1b0600513d768249a2474b01c3893bd279",
      "created_at": "2020-04-08T16:29:43Z"
    },
    {
      "event": "referenced",
      "id": 3704559474,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM3MDQ1NTk0NzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3704559474",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ca30d34cf94b7797272ef1920ca4b48716e7f999",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca30d34cf94b7797272ef1920ca4b48716e7f999",
      "created_at": "2020-08-28T15:56:06Z"
    },
    {
      "event": "referenced",
      "id": 4020079750,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwMjAwNzk3NTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4020079750",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2a55a0ed3055a2ce0a33b58a3a7bbf6e30df3dfd",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a55a0ed3055a2ce0a33b58a3a7bbf6e30df3dfd",
      "created_at": "2020-11-20T09:54:29Z"
    },
    {
      "event": "referenced",
      "id": 4025709758,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwMjU3MDk3NTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4025709758",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8d6a87d1541e3668e58febeda6427c2e466c7500",
      "commit_url": "https://api.github.com/repos/fanquake/bitcoin/commits/8d6a87d1541e3668e58febeda6427c2e466c7500",
      "created_at": "2020-11-23T04:02:56Z"
    },
    {
      "event": "referenced",
      "id": 4061413611,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwNjE0MTM2MTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4061413611",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c33662a0eaff7811922a4635b80f165b4c31396b",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c33662a0eaff7811922a4635b80f165b4c31396b",
      "created_at": "2020-12-02T09:52:26Z"
    },
    {
      "event": "referenced",
      "id": 4494115107,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0OTQxMTUxMDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4494115107",
      "actor": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "61e1f78302fcebc0bbd314b4bb2b50d62c257a53",
      "commit_url": "https://api.github.com/repos/rajarshimaitra/bitcoin/commits/61e1f78302fcebc0bbd314b4bb2b50d62c257a53",
      "created_at": "2021-03-23T05:52:37Z"
    },
    {
      "event": "referenced",
      "id": 4654457107,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ2NTQ0NTcxMDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4654457107",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bce09da1228a34b924b25864a5c814da77d2b3d0",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bce09da1228a34b924b25864a5c814da77d2b3d0",
      "created_at": "2021-04-28T05:14:01Z"
    },
    {
      "event": "referenced",
      "id": 4749700831,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NDk3MDA4MzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4749700831",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c8571486364d6e9ca8c86bd1c81e230ca64f8904",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8571486364d6e9ca8c86bd1c81e230ca64f8904",
      "created_at": "2021-05-15T07:57:14Z"
    },
    {
      "event": "referenced",
      "id": 4923185938,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5MjMxODU5Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4923185938",
      "actor": {
        "login": "satindergrewal",
        "id": 12998093,
        "node_id": "MDQ6VXNlcjEyOTk4MDkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/12998093?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satindergrewal",
        "html_url": "https://github.com/satindergrewal",
        "followers_url": "https://api.github.com/users/satindergrewal/followers",
        "following_url": "https://api.github.com/users/satindergrewal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satindergrewal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satindergrewal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satindergrewal/subscriptions",
        "organizations_url": "https://api.github.com/users/satindergrewal/orgs",
        "repos_url": "https://api.github.com/users/satindergrewal/repos",
        "events_url": "https://api.github.com/users/satindergrewal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satindergrewal/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c45e1a47e28de9c4f1098bd74a2e58a564c401f0",
      "commit_url": "https://api.github.com/repos/chips-blockchain/chipschain/commits/c45e1a47e28de9c4f1098bd74a2e58a564c401f0",
      "created_at": "2021-06-22T14:33:31Z"
    },
    {
      "event": "referenced",
      "id": 5117997968,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMTc5OTc5Njg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5117997968",
      "actor": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c0b0a4cc85e5dc2a1569f9d07c8317fecb6fd4d8",
      "commit_url": "https://api.github.com/repos/rajarshimaitra/bitcoin/commits/c0b0a4cc85e5dc2a1569f9d07c8317fecb6fd4d8",
      "created_at": "2021-08-05T14:50:26Z"
    },
    {
      "event": "locked",
      "id": 5271147798,
      "node_id": "LOE_lADOABII584AB9PwzwAAAAE6L1UW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271147798",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T09:54:08Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": []
}