{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044",
    "id": 369668879,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY5NjY4ODc5",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18044",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/18044.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/18044.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
    "number": 18044,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Use wtxid for transaction relay",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Using txids (a transaction's hash, without witness) for transaction relay is problematic, post-segwit -- if a peer gives us a segwit transaction that fails policy checks, it could be because the txid associated with the transaction is definitely unacceptable to our node (regardless of the witness), or it could be that the transaction was malleated and with a different witness, the txid could be accepted to our mempool.\r\n\r\nWe have a bloom filter of recently rejected transactions, whose purpose is to help us avoid redownloading and revalidating transactions that fail to be accepted, but because of this potential for witness malleability to interfere with relay of valid transactions, we do not use the filter for segwit transactions.  This issue is discussed at some length in #8279.  The effect of this is that whenever a segwit transaction that fails policy checks is relayed, a node would download that transaction from every peer announcing it, because it has no way presently to cache failure.  Historically this hasn't been a big problem, but if/when policy for accepting segwit transactions were to change (eg taproot, or any other change), we could expect older nodes talking to newer nodes to be wasting bandwidth because of this.\r\n\r\nAs discussed in that issue, switching to wtxid-based relay solves this problem -- by using an identifier for a transaction that commits to all the data in our relay protocol, we can be certain if a transaction that a peer is announcing is one that we've already tried to process, or if it's something new.  This PR introduces support for wtxid-based relay with peers that support it (and remains backwards compatible with peers that use txids for relay, of course).\r\n\r\nApart from code correctness, one issue to be aware of is that by downloading from old and new peers alike, we should expect there to be some bandwidth wasted, because sometimes we might download the same transaction via txid-relay as well as wtxid-relay.  The last commit in this PR implements a heuristic I want to analyze, which is to just delay relay from txid-relay peers by 2 seconds, if we have at least 1 wtxid-based peer.  I've just started running a couple nodes with this heuristic so I can measure how well it works, but I'm open to other ideas for minimizing that issue.  In the long run, I think this will be essentially a non-issue, so I don't think it's too big a concern, we just need to bite the bullet and deal with it during upgrade.\r\n\r\nFinally, this proposal would need a simple BIP describing the changes, which I haven't yet drafted.  However, review and testing of this code in the interim would be welcome.\r\n\r\nTo do items:\r\n- [x] Write BIP explaining the spec here (1 new p2p message for negotiating wtxid-based relay, along with a new INV type)\r\n- [ ] Measure and evaluate a heuristic for minimizing how often a node downloads the same transaction twice, when connected to old and new nodes.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      },
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 1648013533,
        "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
        "name": "Review club",
        "description": "",
        "color": "0052cc",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-01-31T16:42:02Z",
    "updated_at": "2022-02-15T11:00:43Z",
    "closed_at": "2020-07-22T19:00:22Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-07-22T19:00:22Z",
    "merge_commit_sha": "ccef10261efc235c8fcc8aad54556615b0cc23be",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "sdaftuar:2020-01-wtxid-inv",
      "ref": "2020-01-wtxid-inv",
      "sha": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 28761781,
        "node_id": "MDEwOlJlcG9zaXRvcnkyODc2MTc4MQ==",
        "name": "bitcoin",
        "full_name": "sdaftuar/bitcoin",
        "owner": {
          "login": "sdaftuar",
          "id": 7463573,
          "node_id": "MDQ6VXNlcjc0NjM1NzM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sdaftuar",
          "html_url": "https://github.com/sdaftuar",
          "followers_url": "https://api.github.com/users/sdaftuar/followers",
          "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
          "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
          "repos_url": "https://api.github.com/users/sdaftuar/repos",
          "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sdaftuar/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sdaftuar/bitcoin",
        "archive_url": "https://api.github.com/repos/sdaftuar/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sdaftuar/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sdaftuar/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sdaftuar/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sdaftuar/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sdaftuar/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sdaftuar/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sdaftuar/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sdaftuar/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sdaftuar/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sdaftuar/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sdaftuar/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sdaftuar/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sdaftuar/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sdaftuar/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sdaftuar/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sdaftuar/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sdaftuar/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sdaftuar/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sdaftuar/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sdaftuar/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sdaftuar/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sdaftuar/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sdaftuar/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sdaftuar/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sdaftuar/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sdaftuar/bitcoin/hooks",
        "svn_url": "https://github.com/sdaftuar/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 247679,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-24T20:27:09Z",
        "created_at": "2015-01-04T02:52:13Z",
        "updated_at": "2023-08-01T03:17:33Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "090d87716074434bdc6c7656ec44d049197a793a",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35476,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T19:06:37Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T18:21:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 450,
    "deletions": 114,
    "changed_files": 18,
    "commits": 18,
    "review_comments": 178,
    "comments": 44
  },
  "events": [
    {
      "event": "labeled",
      "id": 2997904899,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI5OTc5MDQ4OTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2997904899",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-31T17:33:18Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "labeled",
      "id": 2997904901,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI5OTc5MDQ5MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2997904901",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-31T17:33:18Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 580840274,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDg0MDI3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580840274",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-31T17:55:39Z",
      "updated_at": "2020-07-21T08:03:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19556 (Remove mempool global by MarcoFalke)\n* #19498 (Tidy up ProcessOrphanTx by jnewbery)\n* #19488 (Refactor mempool.dat to be extensible, and store missing info by luke-jr)\n* #19478 (Remove CTxMempool::mapLinks data structure member by JeremyRubin)\n* #19306 (refactor: Replace RecursiveMutex with Mutex in CTxMemPool by hebasto)\n* #19184 (Overhaul transaction request logic by sipa)\n* #19134 (test: Replace global wait_until with BitcoinTestFramework.wait_until and mininode.wait_until by dboures)\n* #19031 (Implement ADDRv2 support (part of BIP155) by vasild)\n* #18086 (Accurately account for mempool index memory by sipa)\n* #12677 (RPC: Add ancestor{count,size,fees} to listunspent output by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-580840274",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2998419041,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjk5ODQxOTA0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2998419041",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-31T20:30:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2998586341,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mjk5ODU4NjM0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2998586341",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-31T21:34:16Z"
    },
    {
      "event": "reviewed",
      "id": 351841019,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODQxMDE5",
      "url": null,
      "actor": null,
      "commit_id": "310aafa76bc460f05ff061d24eb8ea6954a54fe4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-351841019",
      "submitted_at": "2020-02-01T00:02:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "reviewed",
      "id": 351880546,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODgwNTQ2",
      "url": null,
      "actor": null,
      "commit_id": "ee29e7debcb14fa335e8482888a5cc0294bb8dc8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-351880546",
      "submitted_at": "2020-02-01T11:39:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3003755314,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAwMzc1NTMxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3003755314",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-03T20:51:58Z"
    },
    {
      "event": "reviewed",
      "id": 352852514,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyODUyNTE0",
      "url": null,
      "actor": null,
      "commit_id": "fd2c3f257e416323dc6cc1351af65a4026057716",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-352852514",
      "submitted_at": "2020-02-04T10:04:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "commented",
      "id": 581932930,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTkzMjkzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/581932930",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-04T14:23:39Z",
      "updated_at": "2020-02-04T14:23:39Z",
      "author_association": "MEMBER",
      "body": "Wrote up a short BIP draft here: https://github.com/sdaftuar/bips/blob/2020-02-wtxid-relay/bip-wtxid-relay.mediawiki, which this PR implements. \r\n\r\nI'll wait for some concept ACKs here before I send to the mailing list.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-581932930",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "commented",
      "id": 581939690,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTkzOTY5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/581939690",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-04T14:38:06Z",
      "updated_at": "2020-02-10T08:14:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "Nice -- will add a link to the BIP draft in the review club notes at https://bitcoincore.reviews/18044. Currently reviewing. Can someone add a `Review club` label? It helps let people know that there is a review club resource they can use.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-581939690",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "commented",
      "id": 582049318,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjA0OTMxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582049318",
      "actor": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-04T18:27:39Z",
      "updated_at": "2020-02-04T18:27:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Cocnept ACK. Ran standard tests. All passing. Overall agreed with the idea of using wtxid for everything. Will try to try out the huristic and report some results.   ",
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-582049318",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "reviewed",
      "id": 353203516,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMjAzNTE2",
      "url": null,
      "actor": null,
      "commit_id": "fb1b69dba63ff9911a2520cdae8f5aab78f26ec0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-353203516",
      "submitted_at": "2020-02-04T18:29:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3010740659,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAxMDc0MDY1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3010740659",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-05T16:40:35Z"
    },
    {
      "event": "added_to_project",
      "id": 3015204549,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQzMDE1MjA0NTQ5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3015204549",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-06T19:34:35Z",
      "project_card": {
        "id": 32742485,
        "url": "https://api.github.com/projects/columns/cards/32742485",
        "project_id": 3826895,
        "project_url": "https://api.github.com/projects/3826895",
        "column_name": "Unrelated Refactors (Project Conflicts)"
      }
    },
    {
      "event": "commented",
      "id": 583078254,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzA3ODI1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583078254",
      "actor": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-06T19:47:38Z",
      "updated_at": "2020-02-06T19:47:38Z",
      "author_association": "MEMBER",
      "body": "Reference [IRC discussion](http://www.erisian.com.au/bitcoin-core-dev/log-2020-02-05.html#l-336) for further context around the VERSION/VERACK messages.",
      "user": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-583078254",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "moved_columns_in_project",
      "id": 3015276531,
      "node_id": "MDI2Ok1vdmVkQ29sdW1uc0luUHJvamVjdEV2ZW50MzAxNTI3NjUzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3015276531",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-06T19:57:32Z",
      "project_card": {
        "id": 32742485,
        "url": "https://api.github.com/projects/columns/cards/32742485",
        "project_id": 3826895,
        "project_url": "https://api.github.com/projects/3826895",
        "column_name": "Package Relay",
        "previous_column_name": "Unrelated Refactors (Project Conflicts)"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-07T02:23:43Z",
      "updated_at": "2020-02-07T02:23:43Z",
      "source": {
        "issue": {
          "id": 561381093,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzcyMjAyOTI0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18086",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18086/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18086/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18086/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18086",
          "number": 18086,
          "state": "closed",
          "state_reason": null,
          "title": "Accurately account for mempool index memory",
          "body": "This introduces a C++ allocator class (`memusage::AccountingAllocator`) which enables containers that accurately account for all their memory allocations in a tracker variable.\r\n\r\nThis is then used to replace the heuristics in the mempool to guess memory usage.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 326918230,
              "node_id": "MDU6TGFiZWwzMjY5MTgyMzA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Resource%20usage",
              "name": "Resource usage",
              "color": "981023",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18086",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18086",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18086.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18086.patch"
          },
          "closed_at": "2022-03-22T10:56:46Z",
          "created_at": "2020-02-07T02:21:54Z",
          "updated_at": "2022-12-01T08:51:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3017009189,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAxNzAwOTE4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3017009189",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-07T09:46:50Z"
    },
    {
      "event": "commented",
      "id": 583884102,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mzg4NDEwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583884102",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-09T19:36:59Z",
      "updated_at": "2020-02-09T19:36:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. First take: doing extra messages in between VERSION and VERACK sounds better to me than extending VERSION or potentially doing txid relay briefly in between VERACK and WTXIDRELAY, the code changes seem really nicely laid out, and the main thing that caught my eye looks like it's probably fixed by the WITNESS_STRIPPED addition.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-583884102",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T19:23:57Z",
      "updated_at": "2020-02-11T19:23:57Z",
      "source": {
        "issue": {
          "id": 557929655,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzY5NDIyNTY4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18038",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18038/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18038/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18038/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18038",
          "number": 18038,
          "state": "closed",
          "state_reason": null,
          "title": "P2P: Mempool tracks locally submitted transactions to improve wallet privacy",
          "body": "This PR introduces mempool tracking of unbroadcast transactions and periodic reattempts at initial broadcast. This is a part of the rebroadcast project, and a standalone privacy win. \r\n\r\nThe current rebroadcast logic is terrible for privacy because 1. only the source wallet rebroadcasts transactions and 2. it does so quite frequently. In the current system, if a user submits a transaction that does not immediately get broadcast to the network (eg. they are offline), this \"rebroadcast\" behavior is the safety net that can actually serve as the initial broadcast. So, keeping the attempts frequent is important for initial delivery within a reasonable timespan. \r\n\r\nThis PR aims to improve # 2 by reducing the wallet rebroadcast frequency to ~1/day from ~1/15 min. It achieves this by separating the notion of initial broadcast from rebroadcasts. With these changes, the mempool tracks locally submitted transactions & periodically reattempts initial broadcast. Transactions submitted via the wallet or RPC are added to an \"unbroadcast\" set & are removed when a peer sends a `getdata` request, or the transaction is removed from the mempool. Every 10-15 minutes, the node reattempts an initial broadcast. This enables reducing the wallet rebroadcast frequency while ensuring the transactions will be propagated to the network. \r\n\r\nFor privacy improvements around # 1, please see #16698. \r\nThank you to gmaxwell for the idea of how to break out this subset of functionality (https://github.com/bitcoin/bitcoin/pull/16698#issuecomment-571399346)",
          "user": {
            "login": "amitiuttarwar",
            "id": 1500952,
            "node_id": "MDQ6VXNlcjE1MDA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitiuttarwar",
            "html_url": "https://github.com/amitiuttarwar",
            "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
            "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
            "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
            "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
            "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 1648013533,
              "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
              "name": "Review club",
              "description": "",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/45",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
            "id": 4914019,
            "node_id": "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
            "number": 45,
            "state": "closed",
            "title": "0.21.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 132,
            "created_at": "2019-12-09T08:39:58Z",
            "updated_at": "2021-01-15T19:50:53Z",
            "closed_at": "2021-01-15T19:50:53Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18038",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18038",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18038.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18038.patch"
          },
          "closed_at": "2020-04-29T08:33:55Z",
          "created_at": "2020-01-31T05:52:30Z",
          "updated_at": "2022-02-15T10:34:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T19:36:50Z",
      "updated_at": "2020-02-11T19:36:50Z",
      "source": {
        "issue": {
          "id": 554906740,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzY2OTc2NjAx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17997",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17997/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17997/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17997/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17997",
          "number": 17997,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Remove mempool global from net",
          "body": "To increase modularisation and simplify testing, remove the mempool global from net in favour of a mempool member.\r\n\r\nThis is done in the same way it was done for the connection manager global.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17997",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17997",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17997.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17997.patch"
          },
          "closed_at": "2020-03-16T15:07:31Z",
          "created_at": "2020-01-24T19:14:33Z",
          "updated_at": "2022-02-15T10:28:11Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T20:43:26Z",
      "updated_at": "2020-02-11T20:43:26Z",
      "source": {
        "issue": {
          "id": 541144232,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzU1ODU1OTc2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17785",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17785/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17785/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17785/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17785",
          "number": 17785,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Unify Send and Receive protocol versions",
          "body": "On master (6fef85bfa3cd7f76e83b8b57f9e4acd63eb664ec) `CNode` has two members to keep protocol version:\r\n- `nRecvVersion` for received messages\r\n- `nSendVersion` for messages to send\r\n\r\nAfter exchanging with `VERSION` and `VERACK` messages via protocol version `INIT_PROTO_VERSION`, both nodes set `nRecvVersion` _and_ `nSendVersion` to _the same_ value which is the greatest common protocol version.\r\n\r\nThis PR:\r\n- replaces two `CNode` members, `nRecvVersion` `nSendVersion`, with `m_greatest_common_version`\r\n- removes duplicated getter and setter\r\n\r\nThere is no change in behavior on the P2P network.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 31,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17785",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17785",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17785.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17785.patch"
          },
          "closed_at": "2020-09-21T22:16:18Z",
          "created_at": "2019-12-20T18:43:48Z",
          "updated_at": "2022-02-15T10:36:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T21:43:24Z",
      "updated_at": "2020-02-11T21:43:24Z",
      "source": {
        "issue": {
          "id": 514144266,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzMzODA3MTE4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17303",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17303/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17303/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17303/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17303",
          "number": 17303,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Stop relaying non-mempool txs, improve tx privacy slightly",
          "body": "There is no reason to relay transactions that have been, but are no longer, in the mempool at the time of the getdata request for the transaction.\r\n\r\nPossible reasons for mempool removal, and my thinking why it is safe to not relay\r\n\r\nReason | | Rationale\r\n-- | -- | --\r\n`EXPIRY` | Expired from mempool | Mempool expiry is 2 weeks, so does not interfere with relay at all.\r\n`SIZELIMIT` | Removed in size limiting | A low fee transaction, which will be relayed by a different peer after `GETDATA_TX_INTERVAL`. Assuming it ever made it to another peer.\r\n`REORG` | Removed for reorganization | Block races are rare, so reorgs should be rarer. Also the tx will be reaccepted from the `disconnectpool` later on and then relayed (TODO), so this should never be observable in practise.\r\n`BLOCK` | Removed for block | The other peer will eventually receive the (filtered)block with the tx in it.\r\n`CONFLICT` | Removed for conflict with in-block transaction | The peer won't be able to add the tx to the mempool anyway. No need to waste bandwidth.\r\n`REPLACED` | Removed for replacement | Same as above, send them the higher fee tx instead.\r\n\r\n\r\nThis should also improve transaction relay privacy slightly. Previously any peer (even inbounds) could ask for transactions in `mapRelay`, even if they were never announced to them via an `inv` message. After my changes, the peer can only request transactions that were added to the mempool before the last `inv` message was sent to that peer.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17303",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17303",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17303.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17303.patch"
          },
          "closed_at": "2020-06-28T12:00:31Z",
          "created_at": "2019-10-29T18:49:04Z",
          "updated_at": "2022-02-15T10:32:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 357860151,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3ODYwMTUx",
      "url": null,
      "actor": null,
      "commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Didn't-get-a-chance-to-go-through-the-whole-thing-and-am-too-tired-to-be-reviewing-anyway Concept ACK\r\n\r\n(that's how we're supposed to ACK now, right, with lots of context?)",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-357860151",
      "submitted_at": "2020-02-13T00:27:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "commented",
      "id": 585487309,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTQ4NzMwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585487309",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-13T00:28:23Z",
      "updated_at": "2020-02-13T00:28:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "FWIW, travis error is \" node0 2020-02-12T14:39:48.835709Z [msghand] Error: Disk space is too low! \"",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-585487309",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "commented",
      "id": 586375495,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjM3NTQ5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586375495",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-14T16:58:04Z",
      "updated_at": "2020-02-14T16:58:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK on the BIP draft and the implementation of it\r\n\r\nI am not so sure about the 2-second delay, however, because it is not necessarily an improvement, it can also make matters worse afaict. Example: At least one of our `txid` peers is better connected than all of our `wtxid` peers. We get a `txid` inv first and wait for 2 seconds. Meanwhile, we receive the `wtxid` inv and request it, but before we get the response we also request the transaction from the  `txid` peer. I am not sure how realistic this is and it will certainly not happen frequently once large parts of the network have upgraded to `wtxid` invs. But I also think the PR is compelling enough without the 2-second delay optimization and it could be left as a follow-up so it can be discussed separately.\r\n\r\nDo you plan to add additional tests? Otherwise, I might be interested to look into that.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-586375495",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "closed",
      "id": 3048624498,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzA0ODYyNDQ5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3048624498",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T20:00:36Z"
    },
    {
      "event": "reopened",
      "id": 3048624662,
      "node_id": "MDEzOlJlb3BlbmVkRXZlbnQzMDQ4NjI0NjYy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3048624662",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T20:00:39Z"
    },
    {
      "event": "commented",
      "id": 587757896,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4Nzc1Nzg5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587757896",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T20:03:46Z",
      "updated_at": "2020-02-18T20:03:46Z",
      "author_association": "MEMBER",
      "body": "concept ACK",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-587757896",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "labeled",
      "id": 3063072614,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMwNjMwNzI2MTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3063072614",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-23T00:38:16Z",
      "label": {
        "name": "Review club",
        "color": "0052cc"
      }
    },
    {
      "event": "commented",
      "id": 591034818,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTAzNDgxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591034818",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T19:46:27Z",
      "updated_at": "2020-02-25T19:46:27Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-591034818",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T16:19:27Z",
      "updated_at": "2020-02-26T16:19:27Z",
      "source": {
        "issue": {
          "id": 567331959,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc2OTc2OTcx",
          "url": "https://api.github.com/repos/naumenkogs/bitcoin/issues/1",
          "repository_url": "https://api.github.com/repos/naumenkogs/bitcoin",
          "labels_url": "https://api.github.com/repos/naumenkogs/bitcoin/issues/1/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/naumenkogs/bitcoin/issues/1/comments",
          "events_url": "https://api.github.com/repos/naumenkogs/bitcoin/issues/1/events",
          "html_url": "https://github.com/naumenkogs/bitcoin/pull/1",
          "number": 1,
          "state": "closed",
          "state_reason": null,
          "title": "Erlay",
          "body": "This is a request for some internal review and help, before we open the PR for broader attention.\r\n\r\n*Rebased on #18044*\r\n\r\nCurrently need to clone minisketch under src manually.\r\n\r\nTODO:\r\n\r\n- ~~[ ] processing INVTX messages in an efficient/clean way (**need help**)~~\r\n- [x] minisketch as a submodule (**need help**)\r\n- [x] fix compilation of integrated minisketch. I tried to do something, but it’s still broken, see first commit. (**need help**)\r\n- [x] rebase on #18044 and use 256-bit wtxids instead of 128 (**gleb**)\r\n- [x] test that getdata will work on transactions announced after reconciliation (**gleb**)\r\n- [x] resolve couple minor TODO design questions in the codebase (**need help**)\r\n- [x] bound variables\r\n- ~~[ ] clear variables like trunc_id_to_wtxid cache (makes sense after invtx processing)~~\r\n- [ ] simulate shared timer response measure against first-spy (**gleb**)\r\n- ~~[ ] simulate to see that not flooding through recon links is fine, because code is easier this way (**gleb**)~~\r\n- [x] replace asserts with proper behaviour\r\n- [ ] make sure that non-erlay tests are fine  \r\n\r\n\r\nNice to have: \r\n\r\n- [ ] better logging\r\n- [ ] tests for misbehaviour (sending unexpected INVTX for non-existent/unannounced transactions)\r\n- [ ] make a big regtest test (real recon nodes talking to each other) \r\n- [ ] reproduce and figure out why current functional tests fail sometimes (beginning of test_outgoing_recon)\r\n\r\nFixes in BIP (gleb):\r\n\r\n- [x] update diagram\r\n- [x] account for partial bisection failure\r\n- [x] fix the advice to compute q\r\n- [x] fix trivial mistake in order of messages (???)\r\n- [x] q is uint16_t\r\n- [x] remove trunc ids\r\n\r\n\r\nP.S. \r\nOne important question is whether we want to keep bisection, or have incremental sketches instead.\r\nPros of incremental sketches:\r\n- easier to make logic account it more than 1 extra step\r\n- does not care about uniform distribution across low/high chunks (unlike bisection)\r\n- previous point also makes implementation probably cleaner\r\n\r\nCons: \r\n- slower to compute high order steps comparing to deep bisection",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "OWNER",
          "locked": false,
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/naumenkogs/bitcoin/pulls/1",
            "html_url": "https://github.com/naumenkogs/bitcoin/pull/1",
            "diff_url": "https://github.com/naumenkogs/bitcoin/pull/1.diff",
            "patch_url": "https://github.com/naumenkogs/bitcoin/pull/1.patch"
          },
          "closed_at": "2020-03-10T15:52:57Z",
          "created_at": "2020-02-19T05:46:36Z",
          "updated_at": "2020-03-10T15:52:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3074985192,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA3NDk4NTE5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3074985192",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T18:52:26Z"
    },
    {
      "event": "commented",
      "id": 591585772,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTU4NTc3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591585772",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T18:57:06Z",
      "updated_at": "2020-02-26T18:57:06Z",
      "author_association": "MEMBER",
      "body": "Updated to fix the comments left so far.  I also changed the 2 second delay heuristic to only delay initial request of a transaction from a txid-relay peer, and not subsequent requests -- @naumenkogs pointed out to me that the original behavior I proposed would have opened us up to an \"InvBlock\" attack if we get a bunch of inbound peers that have wtxid-relay turned on, but don't yet have any outbound peers.\r\n\r\n@fjahr Please feel free to write some tests, thank you!  As for your comment about delaying transaction relay, yes I think that is the tradeoff -- reduce bandwidth at the expense of latency. ",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-591585772",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "mentioned",
      "id": 3075001945,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA3NTAwMTk0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3075001945",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T18:57:06Z"
    },
    {
      "event": "subscribed",
      "id": 3075001949,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNzUwMDE5NDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3075001949",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T18:57:06Z"
    },
    {
      "event": "mentioned",
      "id": 3075001952,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA3NTAwMTk1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3075001952",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T18:57:07Z"
    },
    {
      "event": "subscribed",
      "id": 3075001955,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNzUwMDE5NTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3075001955",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T18:57:07Z"
    },
    {
      "event": "reviewed",
      "id": 365357115,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MzU3MTE1",
      "url": null,
      "actor": null,
      "commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK. Did some light testing making sure we don't break the existing behaviour.",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-365357115",
      "submitted_at": "2020-02-27T01:38:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "reviewed",
      "id": 365986399,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1OTg2Mzk5",
      "url": null,
      "actor": null,
      "commit_id": "1d1fddb9790cb3b9a70df5370a71ac245491b71c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept & light-code-review ACK\r\n\r\n>  Historically this hasn't been a big problem, but if/when policy for accepting segwit transactions were to change (eg taproot, or any other change), we could expect older nodes talking to newer nodes to be wasting bandwidth because of this.\r\n\r\nWhat taproot is making worst here than current tx-relay of segwit v0 txn ?\r\n\r\nWrt to IRC discussion on multi-party transactions & tx-relay interference, at least for Lightning I can't see this as an issue, worst-case your counterparty can resign to produce another valid witness and you redownload twice ? Or is the attack finding a wtxid-collision with an invalid tx to make propagation of a valid time-sensitive tx near impossible?",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-365986399",
      "submitted_at": "2020-02-28T00:24:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-02T02:34:12Z",
      "updated_at": "2020-03-02T02:34:12Z",
      "source": {
        "issue": {
          "id": 471808898,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzAwMzgzOTM1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16442",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16442/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16442/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16442/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/16442",
          "number": 16442,
          "state": "closed",
          "state_reason": null,
          "title": "Serve BIP 157 compact filters",
          "body": "This enables nodes to serve block filters compliant with [BIP 157](https://github.com/bitcoin/bips/blob/master/bip-0157.mediawiki). This is the last PR required for BIP 157/158 compatibility.\r\n\r\nIf the node has the block filter index enabled, once the index is in sync, the node will begin signaling the BIP 158 service bit and responding to BIP 157 requests. On invalid requests, the node disconnects the offending peer.\r\n\r\nThis is tested using functional tests. I have also synced an [lnd](https://github.com/lightningnetwork/lnd) testnet node using the neutrino backend connected to a Core node running this code.\r\n\r\nQuestions:\r\n- Should there be a separate CLI flag other than `-blockfilterindex` to enable serving of filters from the index?\r\n- Is the mechanism to only signal the service flag once the index is in sync OK?\r\n- Is the use of `boost::shared_lock` around the checkpoint cache acceptable?",
          "user": {
            "login": "jimpo",
            "id": 881253,
            "node_id": "MDQ6VXNlcjg4MTI1Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jimpo",
            "html_url": "https://github.com/jimpo",
            "followers_url": "https://api.github.com/users/jimpo/followers",
            "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
            "organizations_url": "https://api.github.com/users/jimpo/orgs",
            "repos_url": "https://api.github.com/users/jimpo/repos",
            "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jimpo/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 48,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16442",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/16442",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/16442.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/16442.patch"
          },
          "closed_at": "2020-05-05T03:08:47Z",
          "created_at": "2019-07-23T16:49:00Z",
          "updated_at": "2022-08-16T17:01:59Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-02T11:05:33Z",
      "updated_at": "2020-03-02T11:05:33Z",
      "source": {
        "issue": {
          "id": 573762043,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzgyMjEwOTE4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18238",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18238/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18238/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18238/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18238",
          "number": 18238,
          "state": "closed",
          "state_reason": null,
          "title": "net_processing: Retry notfounds with more urgency",
          "body": "Anytime we see a NOTFOUND in response to a request for a tx, look through\r\neach of our peers for anyone else who announced the tx, find one who\r\ndoesn't already have its inflight tx count maxed out, and of those,\r\nmake the one who'd look at it first, look at it asap.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18238",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18238.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18238.patch"
          },
          "closed_at": "2020-06-15T03:37:52Z",
          "created_at": "2020-03-02T07:04:50Z",
          "updated_at": "2022-02-15T11:03:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-02T16:41:09Z",
      "updated_at": "2020-03-02T16:41:09Z",
      "source": {
        "issue": {
          "id": 573962151,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzgyMzczOTM3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18242",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18242/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18242/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18242/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18242",
          "number": 18242,
          "state": "closed",
          "state_reason": null,
          "title": "Add BIP324 encrypted p2p transport de-/serializer (only used in tests)",
          "body": "BIP324 is [here](https://gist.github.com/jonasschnelli/c530ea8421b8d0e80c51486325587c52) (not submitted to the BIP repository since it's still under work).\r\n\r\nThis PR adds a message transport de-/serializer for encrypted message after BIP324.\r\n\r\n**Includes:**\r\n* correct AEAD handling\r\n* short command IDs\r\n\r\n**Excludes (to keep it reviewable):**\r\n* The handshake (pubkey exchange [subject to change due to downgrade attack prevention])\r\n* ECDH (enabling libsecp256k1 & `CKey` implementation)\r\n* service flag and a way to globally enable it\r\n\r\n**The code is exclusively used in the tests**\r\n\r\n**This is based on #20962 (please review first)**",
          "user": {
            "login": "jonasschnelli",
            "id": 178464,
            "node_id": "MDQ6VXNlcjE3ODQ2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasschnelli",
            "html_url": "https://github.com/jonasschnelli",
            "followers_url": "https://api.github.com/users/jonasschnelli/followers",
            "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
            "repos_url": "https://api.github.com/users/jonasschnelli/repos",
            "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignee": {
            "login": "jonasschnelli",
            "id": 178464,
            "node_id": "MDQ6VXNlcjE3ODQ2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasschnelli",
            "html_url": "https://github.com/jonasschnelli",
            "followers_url": "https://api.github.com/users/jonasschnelli/followers",
            "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
            "repos_url": "https://api.github.com/users/jonasschnelli/repos",
            "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "jonasschnelli",
              "id": 178464,
              "node_id": "MDQ6VXNlcjE3ODQ2NA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/jonasschnelli",
              "html_url": "https://github.com/jonasschnelli",
              "followers_url": "https://api.github.com/users/jonasschnelli/followers",
              "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
              "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
              "repos_url": "https://api.github.com/users/jonasschnelli/repos",
              "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 38,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18242",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18242",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18242.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18242.patch"
          },
          "closed_at": "2021-08-18T12:24:18Z",
          "created_at": "2020-03-02T13:07:43Z",
          "updated_at": "2022-10-30T19:10:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T20:01:32Z",
      "updated_at": "2020-03-04T20:01:32Z",
      "source": {
        "issue": {
          "id": 575726877,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzgzODM3MDY2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18261",
          "number": 18261,
          "state": "closed",
          "state_reason": null,
          "title": "Erlay: bandwidth-efficient transaction relay protocol",
          "body": "This is an implementation of [Erlay](https://arxiv.org/abs/1905.10518), using primitives in the BIP-330 (see the updated spec [here](https://github.com/naumenkogs/bips/blob/bip_0330_updates/bip-0330.mediawiki)). Please refer to these two to understand the design. My talk on the topic is [here](https://youtu.be/YxsjdIl0034?t=670).\r\n\r\nErlay uses both flooding (announcing using INV messages to all peers) and reconciliation to announce transactions. Flooding is expensive, so Erlay seeks to use it sparingly and in strategic locations - only well-connected publicly reachable nodes flood transactions to other publicly reachable nodes via outbound connections. Since every unreachable node is directly connected to several reachable nodes, this policy ensures that a transaction is quickly propagated to be within one hop from most of the nodes in the network.\r\n\r\nAll transactions not propagated through flooding are propagated through efficient set reconciliation. To do this, every node keeps a reconciliation set for each peer, in which transactions are placed which would have been announced using INV messages absent this protocol. Every 2 seconds every node chooses a peer from its outbound connections in a predetermined order to reconcile with, resulting in both sides learning the transactions known to the other side. After every reconciliation round, the corresponding reconciliation set is cleared.\r\n\r\nI think both paper and the BIP motives the changes, but I'll mention them briefly once again here:\r\n- save 40% of the bandwidth consumed by a node\r\n- increase network connectivity for almost no bandwidth or latency cost\r\n- improves privacy as a side-effect\r\n\r\nObviously looking for review, let's try to start with a high-level concerns, and keep nits for later.\r\n\r\nP.S.\r\nPlease don't be scared of 8,000 LOC added. 7,000 of them is minisketch added as a subtree.\r\n\r\nP.P.S.\r\nMy experiments of running this code live (slightly outdated) with a script to replicate the experiment: [here1](https://github.com/bitcoin/bitcoin/pull/18261#issuecomment-599241490) and [here2](https://github.com/bitcoin/bitcoin/pull/18261#issuecomment-600388543).\r\n",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 38,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18261",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18261",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18261.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18261.patch"
          },
          "closed_at": "2021-03-23T22:51:05Z",
          "created_at": "2020-03-04T20:01:31Z",
          "updated_at": "2022-08-16T17:22:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 595345973,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTM0NTk3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595345973",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T17:18:14Z",
      "updated_at": "2020-03-05T17:18:14Z",
      "author_association": "MEMBER",
      "body": "> What taproot is making worst here than current tx-relay of segwit v0 txn ?\r\n\r\nExplained this offline, but the issue is that in a normal, non-adversarial situation where new nodes are relaying segwit transactions that violate old nodes' policy, those old nodes will be wasting bandwidth repeatedly downloading such transactions, because we have no caching of acceptance failure for segwit transactions.\r\n\r\n> Wrt to IRC discussion on multi-party transactions & tx-relay interference, at least for Lightning I can't see this as an issue, worst-case your counterparty can resign to produce another valid witness and you redownload twice ? Or is the attack finding a wtxid-collision with an invalid tx to make propagation of a valid time-sensitive tx near impossible?\r\n\r\nI think you're referencing an IRC conversation about a proposal to change wtxid-based relay to use some shorter, truncated hash instead (128 bits instead of 256 bits), which one version of the Erlay proposal called for.  I've opted not to pursue that, because the bandwidth savings seem small after Erlay.  If someone is going to advocate for truncated hashes, we can revisit the concerns from that conversation.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-595345973",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "commented",
      "id": 595402094,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTQwMjA5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595402094",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T19:23:01Z",
      "updated_at": "2020-03-05T19:23:01Z",
      "author_association": "MEMBER",
      "body": "> Explained this offline, but the issue is that in a normal, non-adversarial situation where new nodes are relaying segwit transactions that violate old nodes' policy, those old nodes will be wasting bandwidth repeatedly downloading such transactions, because we have no caching of acceptance failure for segwit transactions.\r\n\r\nYes thanks for explanation, what I didn't get was with a segwit upgrade deployment, transaction download waste wasn't encumbered only in case of _adversarial_ but also just for _normal_ situation (without change any segwit v1 would be redownload at every announcement by non-upgrades nodes).\r\n\r\n> I think you're referencing an IRC conversation about a proposal to change wtxid-based relay to use some shorter, truncated hash instead (128 bits instead of 256 bits), which one version of the Erlay proposal called for. I've opted not to pursue that, because the bandwidth savings seem small after Erlay. If someone is going to advocate for truncated hashes, we can revisit the concerns from that conversation.\r\n\r\nAttack scenario is knowing a wtxid, a counterparty may find transaction identifier _collision_ for an _invalid_ transaction to stuck a time-sensitive tx in the reject filter, and keep broadcasting such malicious transaction at every block tip until timelock expires. That's not a concern for LN today (because your counterparty doesn't know your witness for your local commitment tx) but that would change with something like Eltoo (because symmetric transaction). So Eltoo-style offchain contracts + short-bit transaction identifier is a security concern, something we should document somewhere (maybe add comment around `recentRejects`)",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-595402094",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "mentioned",
      "id": 3105700162,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzEwNTcwMDE2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3105700162",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-06T15:04:34Z"
    },
    {
      "event": "subscribed",
      "id": 3105700164,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxMDU3MDAxNjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3105700164",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-06T15:04:34Z"
    },
    {
      "event": "commented",
      "id": 595931094,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTkzMTA5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595931094",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-06T19:46:11Z",
      "updated_at": "2020-03-06T19:46:11Z",
      "author_association": "MEMBER",
      "body": ">  So Eltoo-style offchain contracts + short-bit transaction identifier is a security concern, something we should document somewhere (maybe add comment around recentRejects)\r\n\r\n@ariard This PR does not include a \"short-bit transaction identifier\" so I don't think any additional documentation is needed.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-595931094",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "mentioned",
      "id": 3106637216,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzEwNjYzNzIxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3106637216",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-06T19:46:11Z"
    },
    {
      "event": "subscribed",
      "id": 3106637218,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxMDY2MzcyMTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3106637218",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-06T19:46:11Z"
    },
    {
      "event": "commented",
      "id": 596049687,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjA0OTY4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596049687",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-07T05:35:09Z",
      "updated_at": "2020-03-07T05:35:09Z",
      "author_association": "MEMBER",
      "body": "> @ariard This PR does not include a \"short-bit transaction identifier\" so I don't think any additional documentation is needed.\r\n\r\nYeah I know it's more a safeguard against someone proposing the idea in the future and this issue not being remembered.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-596049687",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "mentioned",
      "id": 3107482858,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzEwNzQ4Mjg1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3107482858",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-07T05:35:09Z"
    },
    {
      "event": "subscribed",
      "id": 3107482859,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxMDc0ODI4NTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3107482859",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-07T05:35:09Z"
    },
    {
      "event": "reviewed",
      "id": 353013332,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMDEzMzMy",
      "url": null,
      "actor": null,
      "commit_id": "fd2c3f257e416323dc6cc1351af65a4026057716",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 1cdf178\r\n\r\nI reviewed the code extensively and built/ran tests cleanly for each commit. Have also been running two nodes (one Debian, one macOS) with these changes since 1-2 weeks. Thanks for the well-structured, hygienic changes. I'm still thinking about what I might have overlooked, and test coverage and updated logging seem needed as follow-ups... supposing (optimistically, to be sure) this could be merged after the 0.20 branch-off with half a year of testing and progress in master for 0.21. Some comments follow but none worth losing review for unless you need to retouch.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-353013332",
      "submitted_at": "2020-03-10T12:07:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "commented",
      "id": 597129322,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzEyOTMyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597129322",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-10T14:52:27Z",
      "updated_at": "2020-03-10T14:52:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Also, I believe #18261 (the current implementation of Erlay) depends on these changes.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-597129322",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "reviewed",
      "id": 374616026,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NjE2MDI2",
      "url": null,
      "actor": null,
      "commit_id": "1d1fddb9790cb3b9a70df5370a71ac245491b71c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, and rough code review ACK (left a number of comments though none are serious blockers). This certainly needs a functional p2p test, though.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-374616026",
      "submitted_at": "2020-03-13T23:09:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "labeled",
      "id": 3133674182,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxMzM2NzQxODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3133674182",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-16T15:16:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3138972276,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEzODk3MjI3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3138972276",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-17T20:38:22Z"
    },
    {
      "event": "commented",
      "id": 600288874,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDI4ODg3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/600288874",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-17T20:46:48Z",
      "updated_at": "2020-03-17T20:46:48Z",
      "author_association": "MEMBER",
      "body": "There are a couple review notes about comments that I still need to go back and look at but this is now rebased to get rid of the conflicts with master after the refactor done in #17997, and most of the non-comment review feedback has been incorporated.  \r\n\r\nI also still need to measure the memory usage of mapTx to see if the estimate I'm using is correct.  \r\n\r\nIf anyone feels like contributing a test, I think that might help get this merged.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-600288874",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "unlabeled",
      "id": 3139298768,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzEzOTI5ODc2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3139298768",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-17T22:34:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-27T01:18:22Z",
      "updated_at": "2020-03-27T01:18:22Z",
      "source": {
        "issue": {
          "id": 588821736,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk0NTAwMDg2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18446",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18446/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18446/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18446/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18446",
          "number": 18446,
          "state": "closed",
          "state_reason": null,
          "title": "test: Add test for wtxid transaction relay",
          "body": "Based on #18044 \r\n\r\nThis updates the functional testing framework to the p2p protocol version including wtxid transaction relay (70016) and adds a basic test for wtxid based relay.",
          "user": {
            "login": "fjahr",
            "id": 1322187,
            "node_id": "MDQ6VXNlcjEzMjIxODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjahr",
            "html_url": "https://github.com/fjahr",
            "followers_url": "https://api.github.com/users/fjahr/followers",
            "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
            "organizations_url": "https://api.github.com/users/fjahr/orgs",
            "repos_url": "https://api.github.com/users/fjahr/repos",
            "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fjahr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18446",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18446",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18446.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18446.patch"
          },
          "closed_at": "2020-06-28T11:19:56Z",
          "created_at": "2020-03-27T01:18:22Z",
          "updated_at": "2022-02-15T10:32:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 383336881,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMzM2ODgx",
      "url": null,
      "actor": null,
      "commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. I've had a quick look through the commits and have one question about orphan tx relay a few minor comments.\r\n\r\n- commit _Rename AddInventoryKnown() to AddKnownTx()_ (782a0b04496738030e3e51a6bf44aa5b426870b9) should be squashed into _Just pass a hash to AddInventoryKnown_ (ed5eebb4739d347bb5de783aa92ebac8eecf87a4)\r\n- Commit log for _Add p2p message \"wtxidrelay\"_ should s/wtxid's/wtxids/\r\n- #18446 should be added to this PR.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-383336881",
      "submitted_at": "2020-03-28T19:53:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "commented",
      "id": 606208367,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjIwODM2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606208367",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T19:48:27Z",
      "updated_at": "2020-03-30T19:48:27Z",
      "author_association": "MEMBER",
      "body": "@fjahr Thanks for starting work on a test in #18446!  Once things converge in the review there I'd be happy to include those commits here as well.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-606208367",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "mentioned",
      "id": 3180215800,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE4MDIxNTgwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3180215800",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T19:48:27Z"
    },
    {
      "event": "subscribed",
      "id": 3180215804,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxODAyMTU4MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3180215804",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T19:48:27Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-27T17:12:00Z",
      "updated_at": "2020-04-27T17:12:00Z",
      "source": {
        "issue": {
          "id": 606569533,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDA4NzU0NDE3",
          "url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/394",
          "repository_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io",
          "labels_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/394/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/394/comments",
          "events_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/394/events",
          "html_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/394",
          "number": 394,
          "state": "closed",
          "state_reason": null,
          "title": "Newsletter 95 (2020-04-29)",
          "body": "- [x] Action items, news, release, and any additional commits @harding \r\n- [x] Add author info to Suredbits post and perhaps make some small edits to be reviewed by them @harding \r\n- [x] StackExchange section @bitschmidty \r\n- [x] `Bitcoin Core #15761` @adamjonas \r\n- [x] `Bitcoin Core #17509` @dongcarl ",
          "user": {
            "login": "harding",
            "id": 61096,
            "node_id": "MDQ6VXNlcjYxMDk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harding",
            "html_url": "https://github.com/harding",
            "followers_url": "https://api.github.com/users/harding/followers",
            "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
            "organizations_url": "https://api.github.com/users/harding/orgs",
            "repos_url": "https://api.github.com/users/harding/repos",
            "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/harding/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/pulls/394",
            "html_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/394",
            "diff_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/394.diff",
            "patch_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/394.patch"
          },
          "closed_at": "2020-04-29T10:23:12Z",
          "created_at": "2020-04-24T20:37:43Z",
          "updated_at": "2020-04-29T10:45:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T02:40:50Z",
      "updated_at": "2020-04-29T02:40:50Z",
      "source": {
        "issue": {
          "id": 608701771,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDEwNDMwMjg5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18808",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18808/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18808/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18808/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18808",
          "number": 18808,
          "state": "closed",
          "state_reason": null,
          "title": "[net processing] Drop unknown types in getdata",
          "body": "Currently we'll stall peers that send us an unknown INV type in a GETDATA message. Be a bit more friendly and just drop the invalid request.\r\n\r\nDitto for blocks-relay-only peers that send us a GETDATA for a transaction.\r\n\r\nThere's a test for the first part. The second is difficult to test in the functional test framework since we aren't able to make blocks-relay-only connections.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18808",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18808",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18808.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18808.patch"
          },
          "closed_at": "2020-05-12T01:14:16Z",
          "created_at": "2020-04-29T00:40:38Z",
          "updated_at": "2022-02-15T10:31:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T02:42:12Z",
      "updated_at": "2020-04-29T02:42:12Z",
      "source": {
        "issue": {
          "id": 608632263,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDEwMzc0NzQy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18807",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18807/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18807/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18807/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18807",
          "number": 18807,
          "state": "closed",
          "state_reason": null,
          "title": "[doc / test / mempool] unbroadcast follow-ups",
          "body": "This PR is a follow up to #18038 which introduced the idea of an unbroadcast set & focuses mostly on documentation updates and test fixes. One small functionality update to not throw an expected error in `LoadMempool` when you upgrade software versions.\r\n\r\n#18895 is another follow up to that addresses other functionality updates.\r\n\r\nBackground context: \r\nThe unbroadcast set is a mechanism for the mempool to track locally submitted transactions (via wallet or RPC). The node does a best-effort of delivering the transactions to the network via retries every 10-15 minutes until either a `GETDATA` is received or the transaction is removed from the mempool.",
          "user": {
            "login": "amitiuttarwar",
            "id": 1500952,
            "node_id": "MDQ6VXNlcjE1MDA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitiuttarwar",
            "html_url": "https://github.com/amitiuttarwar",
            "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
            "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
            "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
            "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
            "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18807",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18807",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18807.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18807.patch"
          },
          "closed_at": "2020-05-30T16:23:37Z",
          "created_at": "2020-04-28T21:36:37Z",
          "updated_at": "2022-02-15T10:34:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3283601251,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMyODM2MDEyNTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3283601251",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T08:46:13Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 621639288,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTYzOTI4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621639288",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T06:28:01Z",
      "updated_at": "2020-04-30T06:28:01Z",
      "author_association": "MEMBER",
      "body": "@amitiuttarwar follow-up on this https://github.com/bitcoin/bitcoin/pull/18038#discussion_r400569145, now 18038 has been merged it would be really kind to have a patch for mempool intial-broadcast reattempt support and avoid wtxid taking too much delay :)",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-621639288",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "mentioned",
      "id": 3287746056,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI4Nzc0NjA1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3287746056",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T06:28:02Z"
    },
    {
      "event": "subscribed",
      "id": 3287746062,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyODc3NDYwNjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3287746062",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T06:28:02Z"
    },
    {
      "event": "commented",
      "id": 621949476,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTk0OTQ3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621949476",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T16:06:47Z",
      "updated_at": "2020-04-30T16:06:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "@ariard yup! thanks for flagging. already working on the patch & will post it here once its ready for review ",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-621949476",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "mentioned",
      "id": 3290237668,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI5MDIzNzY2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3290237668",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T16:06:48Z"
    },
    {
      "event": "subscribed",
      "id": 3290237673,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyOTAyMzc2NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3290237673",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T16:06:48Z"
    },
    {
      "event": "commented",
      "id": 622595865,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjU5NTg2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622595865",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-01T22:37:05Z",
      "updated_at": "2020-05-01T22:37:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "initial attempt here: https://github.com/amitiuttarwar/bitcoin/commits/pr18044\r\n- rebased this branch on master, turned unbroadcast set into a map of txid -> wtxid, updated logic to play nice with changes to RelayTransaction. existing tests pass\r\n- can revisit and add tests as #18807 and #18446 make progress",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-622595865",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-07T18:48:38Z",
      "updated_at": "2020-06-07T18:48:38Z",
      "source": {
        "issue": {
          "id": 632144498,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDI4OTI2MjA4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19184",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19184/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19184/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19184/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19184",
          "number": 19184,
          "state": "closed",
          "state_reason": null,
          "title": "Overhaul transaction request logic",
          "body": "This replaces the transaction request logic with an encapsulated class that maintains all the state surrounding it. By keeping it stand alone, it can be easily tested (using included unit tests and fuzz tests).\r\n\r\nThe new logic is close in spirit to the current one, but much easier to specify I think:\r\n* Always prefer outbound peers over inbound peers, as long as any are available.\r\n* Don't download from inbound peers during the first 2 s after announcement, to give time for announcements from outbound peers to come in.\r\n* The peer who is the very first to announce a txid is preferred (compared to other inbounds or other outbounds), so that chains of dependent transactions announced by one peer will generally not be split out to other peers.\r\n* After the peer that announces a txid first, requests go to uniformly selected peers (outbounds first; inbounds that are past their 2 s delay afterwards), to minimize the impact an attacker can have (as attackers can easily race the network and be first).\r\n* A txid is never requested twice from the same peer, as long as other candidates remain (even when reannounced).\r\n* Transactions are requested from new candidates as soon as old requests expire, or NOTFOUND is received, or invalid-witness transactions are received (i.e. this includes the functionality added by, and replaces, #18238).\r\n\r\nOne significant change is the removal of the in-flight limit of 100 txids. I think this limit is not exactly desirable (e.g. when a txid is only announced by one peer, we should request it, regardless of how many other txids we're already waiting for), and with the changes to handle NOTFOUND immediately, there is less problems with high limits. This implementation's performance is also only determined by the number of total transaction/peer pairs tracked (O(log n)), not by the number in-flight, removing another reason for having that limit.\r\n\r\nA few further improvements could be investigated and relatively easily added if desirable:\r\n* Biasing away from peers with lots of in-flight requests (but not outright limiting like now).\r\n* Making the 2s inbound delay Poisson-distributed.\r\n* Adding a wtxid flag to entries to make it compatible with #18044.\r\n* Adding a time limit for the time between announcement and request.\r\n\r\nWhile the implementation is non-trivial due to performance and resource usage considerations, it has a significantly simpler exact specification. This specification is documented in src/txrequest.h, and reimplemented naively in the src/test/fuzz/txrequest.cpp fuzz test. It may be a good idea to review those first to understand the desired semantics before digging into the optimized implementation.\r\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19184",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19184",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19184.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19184.patch"
          },
          "closed_at": "2020-09-21T07:17:37Z",
          "created_at": "2020-06-06T02:27:22Z",
          "updated_at": "2022-02-15T11:00:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 646568265,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjU2ODI2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646568265",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-19T10:44:43Z",
      "updated_at": "2020-06-19T10:44:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "> initial attempt here: [amitiuttarwar/bitcoin@`pr18044` (commits)](https://github.com/amitiuttarwar/bitcoin/commits/pr18044)\r\n> \r\n> * rebased this branch on master, turned unbroadcast set into a map of txid -> wtxid, updated logic to play nice with changes to RelayTransaction. existing tests pass\r\n> * can revisit and add tests as #18807 and #18446 make progress\r\n\r\nWhich progress are you looking for in #18446?",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-646568265",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "commented",
      "id": 646595546,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjU5NTU0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646595546",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-19T11:56:29Z",
      "updated_at": "2020-06-19T11:56:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sdaftuar Sorry, I may be missing context but is this work blocked somehow? How can people help bring this closer to the finish line?",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-646595546",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "mentioned",
      "id": 3462156096,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ2MjE1NjA5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3462156096",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-19T11:56:29Z"
    },
    {
      "event": "subscribed",
      "id": 3462156098,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NjIxNTYwOTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3462156098",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-19T11:56:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3463601363,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ2MzYwMTM2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3463601363",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-19T19:05:28Z"
    },
    {
      "event": "commented",
      "id": 646821659,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjgyMTY1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646821659",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-19T19:08:57Z",
      "updated_at": "2020-06-19T19:08:57Z",
      "author_association": "MEMBER",
      "body": "@fjahr Thanks for the reminder, I've gone ahead and rebased this.  There were quite a few merge conflicts, so I hope reviewers will try to review these changes from scratch!",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-646821659",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "mentioned",
      "id": 3463609963,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ2MzYwOTk2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3463609963",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-19T19:08:57Z"
    },
    {
      "event": "subscribed",
      "id": 3463609966,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NjM2MDk5NjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3463609966",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-19T19:08:57Z"
    },
    {
      "event": "unlabeled",
      "id": 3463861705,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQ2Mzg2MTcwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3463861705",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-19T20:54:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-19T21:22:40Z",
      "updated_at": "2020-06-19T21:22:40Z",
      "source": {
        "issue": {
          "id": 627474205,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1MjczMDky",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19109",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19109/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19109/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19109/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19109",
          "number": 19109,
          "state": "closed",
          "state_reason": null,
          "title": "Only allow getdata of recently announced invs",
          "body": "This implements the follow-up suggested here: https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-627630111 . Instead of checking `setInventoryTxToSend`, maintain an explicit bloom filter with the 3500 most recently announced invs, and permit fetching any of these as long as they're in the relay pool or the mempool. In addition, permit relay from the mempool after just 2 minutes instead of 15.\r\n\r\nThis:\r\n\r\n* Fixes the brief opportunity an attacker has to request unannounced invs just after the connection is established (pointed out by naumenkogs, see https://github.com/bitcoin/bitcoin/pull/18861#issuecomment-627627010).\r\n* Guarantees that locally resubmitted invs after `filterInventoryKnown` rolls over can still be requested (pointed out by luke-jr, see https://github.com/bitcoin/bitcoin/pull/18861#discussion_r419695831).\r\n\r\nIt adds 37 KiB of filter per peer.\r\n\r\nThis is also a step towards dropping the relay pool entirely and always relaying from the mempool directly (see #17303), but that is still blocked by dealing properly with NOTFOUNDs (see #18238).",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 1648013533,
              "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
              "name": "Review club",
              "description": "",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19109",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19109",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19109.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19109.patch"
          },
          "closed_at": "2020-07-14T00:41:26Z",
          "created_at": "2020-05-29T19:01:02Z",
          "updated_at": "2023-05-02T10:39:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 646917516,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjkxNzUxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646917516",
      "actor": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-20T01:39:20Z",
      "updated_at": "2020-06-20T16:13:37Z",
      "author_association": "MEMBER",
      "body": "I'm seeing a few post-rebase build warnings that weren't on 9eb584e1ffefdcbf7db0c3ca592f914c9ff46f68 (macOS clang v10):\r\n\r\n```\r\nvalidation.cpp:5102:49: warning: loop variable 'elem' has type 'const std::pair<uint256, uint256> &' but is initialized with type 'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<uint256, uint256>, std::__1::__tree_node<std::__1::__value_type<uint256, uint256>, void *> *, long> >::value_type' (aka 'pair<const uint256, uint256>') resulting in a copy [-Wrange-loop-analysis]\r\n        for (const std::pair<uint256, uint256>& elem : unbroadcast_txids) {\r\n                                                ^\r\nvalidation.cpp:5102:14: note: use non-reference type 'std::pair<uint256, uint256>' to keep the copy or type 'const std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<uint256, uint256>, std::__1::__tree_node<std::__1::__value_type<uint256, uint256>, void *> *, long> >::value_type &' (aka 'const pair<const uint256, uint256> &') to prevent copying\r\n        for (const std::pair<uint256, uint256>& elem : unbroadcast_txids) {\r\n             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n1 warning generated.\r\n```\r\n```\r\nnet_processing.cpp:835:45: warning: loop variable 'elem' has type 'const std::pair<uint256, uint256> &' but is initialized with type 'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<uint256, uint256>, std::__1::__tree_node<std::__1::__value_type<uint256, uint256>, void *> *, long> >::value_type' (aka 'pair<const uint256, uint256>') resulting in a copy [-Wrange-loop-analysis]\r\n    for (const std::pair<uint256, uint256>& elem : unbroadcast_txids) {\r\n                                            ^\r\nnet_processing.cpp:835:10: note: use non-reference type 'std::pair<uint256, uint256>' to keep the copy or type 'const std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<uint256, uint256>, std::__1::__tree_node<std::__1::__value_type<uint256, uint256>, void *> *, long> >::value_type &' (aka 'const pair<const uint256, uint256> &') to prevent copying\r\n    for (const std::pair<uint256, uint256>& elem : unbroadcast_txids) {\r\n         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nnet_processing.cpp:838:13: warning: calling function 'RelayTransaction' requires holding mutex 'cs_main' exclusively [-Wthread-safety-analysis]\r\n            RelayTransaction(elem.first, elem.second, *connman);\r\n            ^\r\n2 warnings generated.\r\n```\r\nThese two were first seen on 9f2dfa674aa54315f5c51a37463974019d091eb2.\r\n```\r\nnode/transaction.cpp:85:9: warning: calling function 'RelayTransaction' requires holding mutex 'cs_main' exclusively [-Wthread-safety-analysis]\r\n        RelayTransaction(hashTx, tx->GetWitnessHash(), *node.connman);\r\n        ^\r\n1 warning generated.\r\n```\r\nThis one seems to be introduced in 40825853e.",
      "user": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-646917516",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "commented",
      "id": 646968108,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0Njk2ODEwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646968108",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-20T09:24:33Z",
      "updated_at": "2020-06-20T09:25:20Z",
      "author_association": "MEMBER",
      "body": "Code review ACK a7844da61d3f9eaca9d9d35337d463c64ac541a4, I think everything looks correct.\r\n\r\n- I confirm the build warnings [above](https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-646917516), would be nice to resolve them.\r\n- Also would be nice to address [these two issues](https://github.com/bitcoin/bitcoin/pull/18044#discussion_r392511089) regarding outdated comments.\r\n- The code should be updated with BIP number once that's merged (this PR has a couple \"BIP XXX\").",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-646968108",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "mentioned",
      "id": 3464535008,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ2NDUzNTAwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3464535008",
      "actor": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-20T09:24:34Z"
    },
    {
      "event": "subscribed",
      "id": 3464535009,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NjQ1MzUwMDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3464535009",
      "actor": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-20T09:24:34Z"
    },
    {
      "event": "reviewed",
      "id": 434449561,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NDQ5NTYx",
      "url": null,
      "actor": null,
      "commit_id": "a7844da61d3f9eaca9d9d35337d463c64ac541a4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-434449561",
      "submitted_at": "2020-06-20T19:41:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-20T19:54:25Z",
      "updated_at": "2020-06-20T19:54:25Z",
      "source": {
        "issue": {
          "id": 642433248,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDM3NDUxNjkw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19339",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19339/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19339/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19339/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19339",
          "number": 19339,
          "state": "closed",
          "state_reason": null,
          "title": "validation: re-delegate absurd fee checking from mempool to clients",
          "body": "Picked up from #15810. Add separate fee-checking logic for clients that need to enforce max fee rates, then remove the `absurdFee` logic from ATMP.\r\n\r\nATMP's `nAbsurdFee` argument is used to enforce user-specific behavior (it is not policy since it isn't applied consistently: it is only ever used in RPC and wallet, and set to 0 everywhere else internally). It should be removed from `AcceptToMemoryPool` because (1) validation results/mempool behavior should not be user-specific and (2) enforcing a max fee rate should be the responsibility of the client instead of the mempool.\r\n\r\nNote: this PR does not intend to _remove_ protection from high fees, just re-delegate the responsibility to clients.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 1648013533,
              "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
              "name": "Review club",
              "description": "",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 54,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19339",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19339",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19339.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19339.patch"
          },
          "closed_at": "2020-10-07T02:59:42Z",
          "created_at": "2020-06-20T19:34:27Z",
          "updated_at": "2022-08-14T13:09:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 434702778,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NzAyNzc4",
      "url": null,
      "actor": null,
      "commit_id": "40825853e2be441ef2a52ecd330f1db08b939621",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I think this [point](https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443419034) is concerning and should be documented, others are far more loose.\r\n\r\nWith regards to BIP lack of specification around wtxid-relay peers who may have to fetch through `MSG_TX` for getting orphan parents, I think that's okay to remove this feature for wtxid tx-relay, I can't envision any application relying on it for their correctness/security (like no one is doing reverse-topological transaction announcements with CPFP-first as we still evaluate transaction 1-by-1).\r\n\r\nAs other blockers I see:\r\n* bandwidth measure to assess https://github.com/bitcoin/bitcoin/pull/18044/commits/9f0f4809e516b7c2393b667cb039701684e1c7b6 worthiness\r\n* publishing to the mailing list the BIP\r\n* addressing naming : https://github.com/bitcoin/bitcoin/pull/18044#discussion_r378574214 (it has been judged confusing by at least few people)\r\n* testing coverage : https://github.com/bitcoin/bitcoin/pull/18446\r\n* integrating mempool initial-broadcast reattempt wtxid-support : https://github.com/amitiuttarwar/bitcoin/commits/pr18044 ?\r\n\r\nWhat else ?\r\n\r\nAs follow-ups, this implementation duplicate some index on our data structures (orphan, mempool, ...) we may clean then by encapsulating behavior : https://github.com/bitcoin/bitcoin/pull/18044#discussion_r378581882 (I think it's okay to add a bit of technical debt here, implementation is already complex enough).",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-434702778",
      "submitted_at": "2020-06-22T09:23:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "reviewed",
      "id": 434774091,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0Nzc0MDkx",
      "url": null,
      "actor": null,
      "commit_id": "40825853e2be441ef2a52ecd330f1db08b939621",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-434774091",
      "submitted_at": "2020-06-22T09:55:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3468726793,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ2ODcyNjc5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3468726793",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-22T14:45:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3468746333,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ2ODc0NjMzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3468746333",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-22T14:49:59Z"
    },
    {
      "event": "commented",
      "id": 647592408,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzU5MjQwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647592408",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-22T15:28:50Z",
      "updated_at": "2020-06-22T18:42:09Z",
      "author_association": "MEMBER",
      "body": "Thanks all for flagging the build warnings and the missing `LOCK(cs_main)` calls (at least 1 was lost inadvertently in the rebase).  Those should all be fixed now.\r\n\r\n@naumenkogs With regards to the outdated comments you referenced, I believe those were already addressed -- is there something else you wanted to see?\r\n\r\n@ariard \r\n\r\n> bandwidth measure to assess 9f0f480 worthiness\r\n\r\nFYI -- I did some testing with an older version of this PR, with one node connected to another using this patch (both running locally on the same machine), and each was also connected out to the network.  I was measuring how many times I downloaded the same transaction twice, and the number I saw over the last few months is about 0.5%.  My setup of having two nodes on the same (fast) machine is certainly not representative, so I would encourage others to do their own tests of this.\r\n\r\n> * publishing to the mailing list the BIP\r\n\r\nThe BIP was already posted to the mailing list in February (https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-February/017648.html).  I suppose I should get a BIP number...\r\n\r\n> * addressing naming : [#18044 (comment)](https://github.com/bitcoin/bitcoin/pull/18044#discussion_r378574214) (it has been judged confusing by at least few people)\r\n\r\nThere doesn't seem to be any clear agreement on what better names would look like, so I'd be inclined to let someone try to address this as a follow-up PR, if the enum I introduced really bothers anyone.\r\n\r\n> * testing coverage : #18446\r\n\r\nI'll try to cherry-pick those testing commits later today.\r\n\r\n> * integrating mempool initial-broadcast reattempt wtxid-support : https://github.com/amitiuttarwar/bitcoin/commits/pr18044 ?\r\n\r\nCan you explain what is missing here?",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-647592408",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "mentioned",
      "id": 3468934570,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ2ODkzNDU3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3468934570",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-22T15:28:50Z"
    },
    {
      "event": "subscribed",
      "id": 3468934574,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0Njg5MzQ1NzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3468934574",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-22T15:28:50Z"
    },
    {
      "event": "mentioned",
      "id": 3468934577,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ2ODkzNDU3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3468934577",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-22T15:28:50Z"
    },
    {
      "event": "subscribed",
      "id": 3468934580,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0Njg5MzQ1ODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3468934580",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-22T15:28:50Z"
    },
    {
      "event": "reviewed",
      "id": 435059563,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MDU5NTYz",
      "url": null,
      "actor": null,
      "commit_id": "d5d55edb1f295711574190bf310f88171451b5cf",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-435059563",
      "submitted_at": "2020-06-22T15:53:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3469245894,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ2OTI0NTg5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3469245894",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-22T16:33:17Z"
    },
    {
      "event": "commented",
      "id": 647790378,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0Nzc5MDM3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647790378",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-22T21:59:22Z",
      "updated_at": "2020-06-22T21:59:22Z",
      "author_association": "MEMBER",
      "body": "> The BIP was already posted to the mailing list in February (https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-February/017648.html). I suppose I should get a BIP number...\r\n\r\nRight, I forgot about that. Reading about the mail again it doesn't mention the issue with wtixd-relay which may have to GETDATA(INV(MSG_TX) in case of `TX_MISSING_INPUTS` but as we agree to drop this behavior for wtixd-relay (note: not done as of tip commit da72e51 ?) I think BIP doesn't have to change. Maybe a release note if the really-unlikely-case some application was relying on it ? Is BIP number attribution considered as needed before merging this ?\r\n\r\n> Can you explain what is missing here?\r\n\r\nAFAICT, it sounds to be exhaustive with mempool initial-rebroadcast support, just wasn't pick up on main branch.\r\n\r\nI think it's just pending on removal of orphan parents fetching through txid announcement before another round of Code Review ?",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-647790378",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "commented",
      "id": 648097491,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODA5NzQ5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648097491",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-23T11:54:12Z",
      "updated_at": "2020-06-23T11:54:12Z",
      "author_association": "MEMBER",
      "body": "> Reading about the mail again it doesn't mention the issue with wtixd-relay which may have to GETDATA(INV(MSG_TX) in case of TX_MISSING_INPUTS but as we agree to drop this behavior for wtixd-relay (note: not done as of tip commit da72e51 ?)\r\n\r\nThis should have already been fixed here: https://github.com/bitcoin/bitcoin/pull/18044/commits/af8e570be4a059d254492b304f60bb0039052094#diff-eff7adeaec73a769788bb78858815c91R2902",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-648097491",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-23T19:34:49Z",
      "updated_at": "2020-06-23T19:34:49Z",
      "source": {
        "issue": {
          "id": 644043449,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDM4NzM1ODA4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19364/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19364",
          "number": 19364,
          "state": "closed",
          "state_reason": null,
          "title": "net processing: Move orphan reprocessing to a global",
          "body": "Currently we keep a per-peer list of orphans to reconsider after one of their parents is accepted. There's no reason this list should be connected to the peer that provided the parent, so instead make it a global. Process that list in a separate call into net processing that does general work rather than in the context of a specific peer.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19364",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19364",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19364.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19364.patch"
          },
          "closed_at": "2020-07-07T19:20:08Z",
          "created_at": "2020-06-23T18:09:02Z",
          "updated_at": "2022-02-15T11:08:45Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-23T20:05:12Z",
      "updated_at": "2020-06-23T20:05:12Z",
      "source": {
        "issue": {
          "id": 640570342,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDM1OTU2NDUx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19306",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19306/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19306/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19306/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19306",
          "number": 19306,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Replace RecursiveMutex with Mutex in CTxMemPool",
          "body": "This PR replaces `RecursiveMutex CTxMemPool::cs` with `Mutex CTxMemPool:cs`.\r\n\r\nAll of the related code branches are covered by appropriate lock assertions to insure that the mutex locking policy has not been changed by accident\r\n\r\nRelated to #19303.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19306",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19306",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19306.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19306.patch"
          },
          "closed_at": "2021-08-24T15:37:39Z",
          "created_at": "2020-06-17T16:15:04Z",
          "updated_at": "2022-08-24T17:35:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-23T21:33:08Z",
      "updated_at": "2020-06-23T21:33:08Z",
      "source": {
        "issue": {
          "id": 621891785,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDIwODU2NDcz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19031",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19031/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19031/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19031/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19031",
          "number": 19031,
          "state": "closed",
          "state_reason": null,
          "title": "Implement ADDRv2 support (part of BIP155)",
          "body": "An implementation of [BIP155](https://github.com/bitcoin/bips/blob/master/bip-0155.mediawiki) `addrv2` messages. To ease review it is split in a few logical changes and submitted as separate, smaller, PRs.\r\n\r\nThe current one for review is: https://github.com/bitcoin/bitcoin/pull/19954\r\n\r\nPreparation changes\r\n---\r\nCommits:\r\n* [x] `test: add an edge case test for CSubNet` (merged via https://github.com/bitcoin/bitcoin/pull/19351)\r\n* [x] `net: improve encapsulation of CNetAddr` (merged via https://github.com/bitcoin/bitcoin/pull/19360)\r\n* [x] `net: document enum Network` (merged via https://github.com/bitcoin/bitcoin/pull/19534)\r\n* [x] `net: save the network type explicitly in CNetAddr` (merged via https://github.com/bitcoin/bitcoin/pull/19534)\r\n\r\nChange `CNetAddr::ip` to have flexible size\r\n---\r\nCommits:\r\n* [x] `net: change CNetAddr::ip to have flexible size` (merged via https://github.com/bitcoin/bitcoin/pull/19628)\r\n\r\nImplement `addrv2` (un)serializing\r\n---\r\nAdd support to serialize `CNetAddr` and `CAddress` in [ADDRv2](https://github.com/bitcoin/bips/blob/master/bip-0155.mediawiki#specification) format. Invoke that from `CAddrMan` serialization methods. Commits:\r\n* [x] `net: move HasPrefix() so it can be reused` (merged via https://github.com/bitcoin/bitcoin/pull/19845)\r\n* [x] `test: move HasReason() so it can be reused` (merged via https://github.com/bitcoin/bitcoin/pull/19845)\r\n* [x] `net: CNetAddr: add support to (un)serialize as ADDRv2` (merged via https://github.com/bitcoin/bitcoin/pull/19845)\r\n* [x] `net: recognize TORv3/I2P/CJDNS networks` (merged via https://github.com/bitcoin/bitcoin/pull/19845)\r\n* [x] `net: CAddress & CAddrMan: (un)serialize as ADDRv2` (merged via https://github.com/bitcoin/bitcoin/pull/19954)\r\n\r\nAdvertise support\r\n---\r\nAdvertise `ADDRv2` support to peers, handle incoming `ADDRv2` messages and send to peers in that format if they have advertised support. Commits:\r\n* [x] `net: advertise support for ADDRv2 via new message` (merged via https://github.com/bitcoin/bitcoin/pull/19954)\r\n\r\nAll the steps to get Tor v3 support are outlined in [issue#18884 Tor v3 support](https://github.com/bitcoin/bitcoin/issues/18884), this PR is one of them.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 1648013533,
              "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
              "name": "Review club",
              "description": "",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 42,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19031",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19031",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19031.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19031.patch"
          },
          "closed_at": "2020-09-29T08:53:28Z",
          "created_at": "2020-05-20T16:16:33Z",
          "updated_at": "2022-02-15T10:36:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T20:30:26Z",
      "updated_at": "2020-06-24T20:30:26Z",
      "source": {
        "issue": {
          "id": 640759547,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDM2MTEwNTIy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19316",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19316/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19316/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19316/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19316",
          "number": 19316,
          "state": "closed",
          "state_reason": null,
          "title": "[net] Cleanup logic around connection types",
          "body": "**This is part 1 of #19315, which enables the ability to test `outbound` and `block-relay-only` connections from the functional tests.** Please see that PR for more information of overall functionality.\r\n\r\n**This PR simplifies how we manage different connection types.** It introduces an enum with the various types of connections so we can explicitly define the connection type. The existing system relies on a series of independent flags, then has asserts scattered around to ensure that conflicting flags are not enabled at the same time. I find this approach to be both brittle and confusing. While making these changes, I found a small bug due to the silent assumptions. \r\n\r\nThis PR also proposes a rename from `OneShot` to `AddrFetch`. I find the name `OneShot` to be very confusing, especially when we also have `onetry` manual connections. Everyone I've talked to offline has agreed that the name is confusing, so I propose a potential alternative. I think this is a good opportunity for a rename since I'm creating an enum to explicitly define the connection types. \r\n(some context for the unfamiliar: `oneshot` or `addrfetch` connections are short-lived connections created on startup. They connect to the seed peers, send a `getaddr` to solicit addresses, then close the connection.)\r\n\r\nOverview of this PR: \r\n* rename `oneshot` to `addrfetch`\r\n* introduce `ConnectionType` enum \r\n* one by one, add different connection types to the enum \r\n* expose the `conn_type` on CNode, and use this to reduce reliance on flags (& asserts) \r\n* fix the bug in counting different type of connections \r\n* some additional cleanup to simplify logic and make expectations explicit/inclusive rather than implicit/exclusive. \r\n",
          "user": {
            "login": "amitiuttarwar",
            "id": 1500952,
            "node_id": "MDQ6VXNlcjE1MDA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitiuttarwar",
            "html_url": "https://github.com/amitiuttarwar",
            "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
            "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
            "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
            "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
            "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19316",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19316",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19316.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19316.patch"
          },
          "closed_at": "2020-08-12T02:02:35Z",
          "created_at": "2020-06-17T21:40:23Z",
          "updated_at": "2022-02-15T10:34:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-24T23:51:00Z",
      "updated_at": "2020-06-24T23:51:00Z",
      "source": {
        "issue": {
          "id": 644772668,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDM5MzM2Mzk0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19374",
          "number": 19374,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Drop g_orphan_list global",
          "body": "This PR partially reverts changes from 7257353b93e9f45e67071b0b86a0313e7a70aaaa, but does not change the uniformly eviction behavior introduced in #14626.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19374",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19374.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19374.patch"
          },
          "closed_at": "2020-07-03T05:11:37Z",
          "created_at": "2020-06-24T17:07:37Z",
          "updated_at": "2022-02-15T10:46:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 438652214,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NjUyMjE0",
      "url": null,
      "actor": null,
      "commit_id": "af8e570be4a059d254492b304f60bb0039052094",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> This should have already been fixed here: af8e570#diff-eff7adeaec73a769788bb78858815c91R2902\r\n\r\nOkay, I thought you would drop behavior even for txid-relay peers. It maybe cleaner to remove it completely to avoid some types of peers intentionally not-signaling wtxid-relay to leverage this behavior. ",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-438652214",
      "submitted_at": "2020-06-27T00:28:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3489604161,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ4OTYwNDE2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3489604161",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T00:09:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3489637993,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ4OTYzNzk5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3489637993",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T00:46:13Z"
    },
    {
      "event": "commented",
      "id": 650742012,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDc0MjAxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650742012",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T12:02:15Z",
      "updated_at": "2020-06-28T12:02:15Z",
      "author_association": "MEMBER",
      "body": "This PR has been updated to include the tests from #18446 (thank you @fjahr and @ajtowns!), and to reflect the bip number assignment.  I've also included logic from @ajtowns to ignore MSG_TX invs from wtxid-relay peers, and vice versa, to address concerns about (1) intentional misbehavior from wtxid-relay peers to interfere with relay, and (2) making the logic around what kind of data we process from each peer simpler to understand.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-650742012",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "mentioned",
      "id": 3490166159,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ5MDE2NjE1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3490166159",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T12:02:15Z"
    },
    {
      "event": "subscribed",
      "id": 3490166160,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0OTAxNjYxNjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3490166160",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T12:02:15Z"
    },
    {
      "event": "mentioned",
      "id": 3490166161,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ5MDE2NjE2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3490166161",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T12:02:15Z"
    },
    {
      "event": "subscribed",
      "id": 3490166162,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0OTAxNjYxNjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3490166162",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-28T12:02:15Z"
    },
    {
      "event": "commented",
      "id": 650844702,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDg0NDcwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650844702",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-29T00:28:09Z",
      "updated_at": "2020-06-29T00:28:09Z",
      "author_association": "MEMBER",
      "body": "Code Review ACK 00cd6e3. Enforce inv-compliance and integrate BIP number since last review.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-650844702",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-29T05:25:07Z",
      "updated_at": "2020-06-29T05:25:07Z",
      "source": {
        "issue": {
          "id": 640752006,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDM2MTA0MjAz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19315/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19315/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19315/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19315",
          "number": 19315,
          "state": "closed",
          "state_reason": null,
          "title": "[tests] Allow outbound & block-relay-only connections in functional tests. ",
          "body": "The existing functional test framework uses the `addnode` RPC to spin up manual connections between bitcoind nodes. This limits our ability to add integration tests for our networking code, which often executes different code paths for different connection types. \r\n\r\n**This PR enables creating `outbound` & `block-relay-only` P2P connections in the functional tests.** This allows us to increase our p2p test coverage, since we can now verify expectations around these connection types.\r\n\r\nThis builds out the [prototype](https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-527421978) proposed by ajtowns in #14210. 🙌🏽\r\n\r\nAn overview of this branch:\r\n- introduces a new test-only RPC function `addconnection` which initiates opening an `outbound` or `block-relay-only` connection. (conceptually similar to `addnode` but for different connection types & restricted to regtest)\r\n- adds `test_framework` support so a mininode can open an `outbound`/`block-relay-only` connection to a `P2PInterface`/`P2PConnection`.\r\n- updates `p2p_blocksonly` tests to create a `block-relay-only` connection & verify expectations around transaction relay. \r\n- introduces `p2p_add_connections` test that checks the behaviors of the newly introduced `add_outbound_p2p_connection` test framework function. \r\n\r\nWith these changes, there are many more behaviors that we can add integration tests for. The blocksonly updates is just one example. \r\n\r\nHuge props to ajtowns for conceiving the approach & providing me feedback as I've built out this branch. Also thank you to jnewbery for lots of thoughtful input along the way. ",
          "user": {
            "login": "amitiuttarwar",
            "id": 1500952,
            "node_id": "MDQ6VXNlcjE1MDA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitiuttarwar",
            "html_url": "https://github.com/amitiuttarwar",
            "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
            "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
            "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
            "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
            "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 1648013533,
              "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
              "name": "Review club",
              "description": "",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 34,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19315",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19315.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19315.patch"
          },
          "closed_at": "2021-01-11T20:08:15Z",
          "created_at": "2020-06-17T21:25:12Z",
          "updated_at": "2022-08-16T17:11:32Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-29T06:15:47Z",
      "updated_at": "2020-06-29T06:15:47Z",
      "source": {
        "issue": {
          "id": 628495726,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2MDI3MDAx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19134",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19134/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19134/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19134/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19134",
          "number": 19134,
          "state": "closed",
          "state_reason": null,
          "title": "test: Replace global wait_until with BitcoinTestFramework.wait_until and mininode.wait_until",
          "body": "Closes: #19080 \r\n\r\nThis PR creates a `wait_until` method for the `BitcoinTestFramework` class, and replaces all uses of the global `wait_until` with the class method. If applicable, the mininode `wait_until` is used instead.\r\n",
          "user": {
            "login": "dboures",
            "id": 24765307,
            "node_id": "MDQ6VXNlcjI0NzY1MzA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24765307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dboures",
            "html_url": "https://github.com/dboures",
            "followers_url": "https://api.github.com/users/dboures/followers",
            "following_url": "https://api.github.com/users/dboures/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dboures/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dboures/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dboures/subscriptions",
            "organizations_url": "https://api.github.com/users/dboures/orgs",
            "repos_url": "https://api.github.com/users/dboures/repos",
            "events_url": "https://api.github.com/users/dboures/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dboures/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19134",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19134",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19134.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19134.patch"
          },
          "closed_at": "2020-08-15T12:04:32Z",
          "created_at": "2020-06-01T14:50:37Z",
          "updated_at": "2022-02-15T10:35:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 438846098,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4ODQ2MDk4",
      "url": null,
      "actor": null,
      "commit_id": "fec2cba022afba0da16ef4a029e4a2cd0c00153f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "894c35aa4fc22c2b048ebfec6503164b3aadf592 looks pretty good, but I think the unbroadcast stuff has a minor bug? ",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-438846098",
      "submitted_at": "2020-06-29T06:27:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-29T13:43:06Z",
      "updated_at": "2020-06-29T13:43:06Z",
      "source": {
        "issue": {
          "id": 647292459,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQxMzQzOTQz",
          "url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/427",
          "repository_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io",
          "labels_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/427/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/427/comments",
          "events_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/427/events",
          "html_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/427",
          "number": 427,
          "state": "closed",
          "state_reason": null,
          "title": "Newsletters: add 104 (2020-07-01)",
          "body": "- [x] `Bitcoin Core #19305` @dongcarl \r\n- [x] `Eclair #1466` @jnewbery \r\n\r\n@michaelfolkson I made edits to your transcripts section; please let me know if you see any problems and I'll revert the changes or make further edits.  Thanks for writing and transcribing!",
          "user": {
            "login": "harding",
            "id": 61096,
            "node_id": "MDQ6VXNlcjYxMDk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harding",
            "html_url": "https://github.com/harding",
            "followers_url": "https://api.github.com/users/harding/followers",
            "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
            "organizations_url": "https://api.github.com/users/harding/orgs",
            "repos_url": "https://api.github.com/users/harding/repos",
            "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/harding/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/pulls/427",
            "html_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/427",
            "diff_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/427.diff",
            "patch_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/427.patch"
          },
          "closed_at": "2020-07-01T12:39:22Z",
          "created_at": "2020-06-29T11:36:00Z",
          "updated_at": "2020-07-01T12:39:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 439174665,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTc0NjY1",
      "url": null,
      "actor": null,
      "commit_id": "7d742ab91120f7a6c214903a3d43642f44e75227",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-439174665",
      "submitted_at": "2020-06-29T14:01:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-29T16:51:20Z",
      "updated_at": "2020-06-29T16:51:20Z",
      "source": {
        "issue": {
          "id": 304479763,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTc0NDQ5MjAx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12677",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12677/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12677/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12677/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/12677",
          "number": 12677,
          "state": "closed",
          "state_reason": null,
          "title": "RPC: Add ancestor{count,size,fees} to listunspent output",
          "body": "Requested by a user",
          "user": {
            "login": "luke-jr",
            "id": 1095675,
            "node_id": "MDQ6VXNlcjEwOTU2NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke-jr",
            "html_url": "https://github.com/luke-jr",
            "followers_url": "https://api.github.com/users/luke-jr/followers",
            "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
            "organizations_url": "https://api.github.com/users/luke-jr/orgs",
            "repos_url": "https://api.github.com/users/luke-jr/repos",
            "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/luke-jr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 31,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12677",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/12677",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/12677.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/12677.patch"
          },
          "closed_at": "2021-09-20T17:26:14Z",
          "created_at": "2018-03-12T18:01:35Z",
          "updated_at": "2022-10-30T19:10:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3494600322,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ5NDYwMDMyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3494600322",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-29T21:16:23Z"
    },
    {
      "event": "commented",
      "id": 651375317,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTM3NTMxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651375317",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-29T21:23:23Z",
      "updated_at": "2020-06-29T21:23:23Z",
      "author_association": "MEMBER",
      "body": "Addressed @ajtowns' comments.  Note the behavior change: we now disconnect a peer if they send a wtxidrelay message after VERACK.\r\n\r\nAlso fixed the bug I introduced in the mempool unbroadcast stuff, gave in to dropping the `wtxid_exists` function, and made yet another attempt to improve the comments explaining how we use `recentRejects`.\r\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-651375317",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "mentioned",
      "id": 3494628436,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ5NDYyODQzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3494628436",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-29T21:23:23Z"
    },
    {
      "event": "subscribed",
      "id": 3494628437,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0OTQ2Mjg0Mzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3494628437",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-29T21:23:23Z"
    },
    {
      "event": "reviewed",
      "id": 440033831,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMDMzODMx",
      "url": null,
      "actor": null,
      "commit_id": "6787a3dc2abb04f0b75aa2f8996e4bbd6c468ddd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-440033831",
      "submitted_at": "2020-06-30T13:49:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "commented",
      "id": 651890399,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTg5MDM5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651890399",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-30T16:03:20Z",
      "updated_at": "2020-06-30T16:03:20Z",
      "author_association": "MEMBER",
      "body": "utACK 6787a3dc2abb04f0b75aa2f8996e4bbd6c468ddd",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-651890399",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "reviewed",
      "id": 440161436,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTYxNDM2",
      "url": null,
      "actor": null,
      "commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK https://github.com/bitcoin/bitcoin/pull/18044/commits/6787a3dc2abb04f0b75aa2f8996e4bbd6c468ddd",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-440161436",
      "submitted_at": "2020-06-30T16:06:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "reviewed",
      "id": 443467912,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNDY3OTEy",
      "url": null,
      "actor": null,
      "commit_id": "95d729ad020dac39f93542e5366c15eba38d6c99",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-443467912",
      "submitted_at": "2020-07-07T02:51:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "commented",
      "id": 654632344,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDYzMjM0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/654632344",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-07T06:33:11Z",
      "updated_at": "2020-07-07T06:33:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK 6787a3dc2abb04f0b75aa2f8996e4bbd6c468ddd ; checked changes since previous review",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-654632344",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "reviewed",
      "id": 444375877,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0Mzc1ODc3",
      "url": null,
      "actor": null,
      "commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept and code review ACK. I found one issue that should be fixed; the rest are nits.\r\n\r\nI think it would be good to introduce a {bool use_wtxid, uint256 hash} type in a follow-up, as it looks like a lot of code could be made cleaner using that. It seems that could also be a relatively easy way to re-enable orphan fetching of unconfirmed parents from wtxid peers (see https://github.com/bitcoin/bitcoin/pull/18044/files#r450687076), which I'd like to see in the same release as wtxid relay.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-444375877",
      "submitted_at": "2020-07-08T08:06:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3525518592,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUyNTUxODU5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3525518592",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-08T14:30:34Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T02:21:16Z",
      "updated_at": "2020-07-10T02:21:16Z",
      "source": {
        "issue": {
          "id": 654341795,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3MDg4ODUx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19478",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19478/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19478/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19478/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19478",
          "number": 19478,
          "state": "closed",
          "state_reason": null,
          "title": "Remove CTxMempool::mapLinks data structure member",
          "body": "Currently we have a peculiar data structure in the mempool called maplinks. Maplinks job is to track the in-pool children and parents of each transaction. This PR can be primarily understood and reviewed as a simple refactoring to remove this extra data structure, although it comes with a nice memory and performance improvement for free.\r\n\r\nMaplinks is particularly peculiar because removing it is not as simple as just moving it's inner structure to the owning CTxMempoolEntry. Because TxLinks (the class storing the setEntries for parents and children) store txiters to each entry in the mempool corresponding to the parent or child, it means that the TxLinks type is \"aware\" of the boost multiindex (mapTx) it's coming from, which is in turn, aware of the entry type stored in mapTx. Thus we used maplinks to store this entry associated data we in an entirely separate data structure just to avoid a circular type reference caused by storing a txiter inside a CTxMempoolEntry.\r\n\r\nIt turns out, we can kill this circular reference by making use of iterator_to multiindex function and std::reference_wrapper. This allows us to get rid of the maplinks data structure and move the ownership of the parents/child sets to the entries themselves.\r\n\r\nThe benefit of this good all around, for any of the reasons given below the change would be acceptable, and it doesn't make the code harder to reason about or worse in any respect (as far as I can tell, there's no tradeoff).\r\n\r\n### Simpler ownership model \r\nNo longer having to consistency check that mapLinks did have records for our CTxMempoolEntry, impossible to have a mapLinks entry outlive or incorrectly die before a CTxMempoolEntry.\r\n\r\n### Memory Usage\r\nWe get rid of a O(Transactions) sized map in the mempool, which is a long lived data structure. \r\n\r\n### Performance\r\nIf you have a CTxMemPoolEntry, you immediately know the address of it's children/parents, rather than having to do a O(log(Transactions)) lookup via maplinks (which we do very often). We do it in *so many* places that a true benchmark has to look at a full running node, but it is easy enough to show an improvement in this case.\r\n\r\nThe ComplexMemPool shows a good coherence check that we see the expected result of it being 12.5% faster / 1.14x faster.\r\n```\r\nBefore:\r\n# Benchmark, evals, iterations, total, min, max, median\r\nComplexMemPool, 5, 1, 1.40462, 0.277222, 0.285339, 0.279793\r\n\r\nAfter:\r\n# Benchmark, evals, iterations, total, min, max, median\r\nComplexMemPool, 5, 1, 1.22586, 0.243831, 0.247076, 0.244596\r\n```\r\nThe ComplexMemPool benchmark only checks doing addUnchecked and TrimToSize for 800 transactions. While this bench does a good job of hammering the relevant types of function, it doesn't test everything. \r\n\r\nSubbing in 5000 transactions shows a that the advantage isn't completely wiped out by other asymptotic factors (this isn't the only bottleneck in growing the mempool), but it's only a bit proportionally slower (10.8%, 1.12x), which adds evidence that this will be a good change for performance minded users.\r\n\r\n```\r\n# Benchmark, evals, iterations, total, min, max, median\r\nComplexMemPool, 5, 1, 59.1321, 11.5919, 12.235, 11.7068\r\n\r\n# Benchmark, evals, iterations, total, min, max, median\r\nComplexMemPool, 5, 1, 52.1307, 10.2641, 10.5206, 10.4306\r\n```\r\nI don't think it's possible to come up with an example of where a maplinks based design would have better performance, but it's something for reviewers to consider.\r\n\r\n# Discussion\r\n## Why maplinks in the first place?\r\n\r\nI spoke with the author of mapLinks (sdaftuar) a while back, and my recollection from our conversation was that it was implemented because he did not know how to resolve the circular dependency at the time, and there was no other reason for making it a separate map.\r\n\r\n## Is iterator_to weird?\r\n\r\niterator_to is expressly for this purpose, see https://www.boost.org/doc/libs/1_51_0/libs/multi_index/doc/tutorial/indices.html#iterator_to \r\n\r\n>  iterator_to provides a way to retrieve an iterator to an element from a pointer to the element, thus making iterators and pointers interchangeable for the purposes of element pointing (not so for traversal) in many situations. This notwithstanding, it is not the aim of iterator_to to promote the usage of pointers as substitutes for real iterators: the latter are specifically designed for handling the elements of a container, and not only benefit from the iterator orientation of container interfaces, but are also capable of exposing many more programming bugs than raw pointers, both at compile and run time. iterator_to is thus meant to be used in scenarios where access via iterators is not suitable or desireable:\r\n> \r\n>     - Interoperability with preexisting APIs based on pointers or references.\r\n>     - Publication of pointer-based interfaces (for instance, when designing a C-compatible library).\r\n>     - The exposure of pointers in place of iterators can act as a type erasure barrier effectively decoupling the user of the code from the implementation detail of which particular container is being used. Similar techniques, like the famous Pimpl idiom, are used in large projects to reduce dependencies and build times.\r\n>     - Self-referencing contexts where an element acts upon its owner container and no iterator to itself is available.\r\n\r\nIn other words, iterator_to is the perfect tool for the job by the last reason given. Under the hood it should just be a simple pointer cast and have no major runtime overhead (depending on if the function call is inlined).\r\n\r\nEdit by laanwj: removed at sign from the description",
          "user": {
            "login": "JeremyRubin",
            "id": 886523,
            "node_id": "MDQ6VXNlcjg4NjUyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeremyRubin",
            "html_url": "https://github.com/JeremyRubin",
            "followers_url": "https://api.github.com/users/JeremyRubin/followers",
            "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
            "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
            "repos_url": "https://api.github.com/users/JeremyRubin/repos",
            "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 326918230,
              "node_id": "MDU6TGFiZWwzMjY5MTgyMzA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Resource%20usage",
              "name": "Resource usage",
              "color": "981023",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19478",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19478",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19478.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19478.patch"
          },
          "closed_at": "2020-09-07T10:10:26Z",
          "created_at": "2020-07-09T20:54:36Z",
          "updated_at": "2022-10-08T19:59:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T14:54:56Z",
      "updated_at": "2020-07-10T14:54:56Z",
      "source": {
        "issue": {
          "id": 654168124,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2OTQ3NDIx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19474",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19474/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19474/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19474/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19474",
          "number": 19474,
          "state": "closed",
          "state_reason": null,
          "title": "doc: Use precise permission flags where possible",
          "body": "Instead of mentioning the all-encompassing `-whitelist*` settings, change the docs to mention the exact permission flag that will influence the behaviour.\r\n\r\nThis is needed because in the future, the too-broad `-whitelist*` settings (they either include *all* permission flags or apply to *all* peers) might be deprecated to require the permission flags to be enumerated.\r\n\r\nAlternatively, in the future there could be an RPC to set the net permission flags on an existing connection, in which case the `-whitelist*` terminology is of no help.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19474",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19474",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19474.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19474.patch"
          },
          "closed_at": "2020-07-11T08:24:59Z",
          "created_at": "2020-07-09T15:50:41Z",
          "updated_at": "2022-02-15T10:59:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3536106044,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM1MzYxMDYwNDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3536106044",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T08:35:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 657895276,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1Nzg5NTI3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657895276",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T00:20:06Z",
      "updated_at": "2020-07-14T00:20:06Z",
      "author_association": "MEMBER",
      "body": "I've been running this branch on a number of nodes, in various configurations (including one with only wtxid peers, and mixed reachable/unreachable ones).\r\n\r\nThe primary thing I wanted to know is if there was any noticable impact on the number of compact block reconstructions that need transaction requests (as this PR impacts orphan processing). At first glance everything looks fine - nearly all blocks are reconstructed without requesting anything else.\r\n\r\nSomething that did surprise me, is that there doesn't seem to be a strong bias towards wtxid peers in terms of downloaded transactions. I have one wtxid peer that is connected to both a wtxid and a normal peer, but around 60% of tx bandwidth is from the txid one. This may be due to the wtxid node just being slower, or having worse latency, or just being further away from common tx sources in the transaction graph - but I was expecting a strong effect.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-657895276",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "added_to_project",
      "id": 3554841636,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQzNTU0ODQxNjM2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3554841636",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-16T19:40:50Z",
      "project_card": {
        "id": 42014914,
        "url": "https://api.github.com/projects/columns/cards/42014914",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "commented",
      "id": 660377717,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MDM3NzcxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/660377717",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-17T23:20:46Z",
      "updated_at": "2020-07-18T05:08:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Something that did surprise me, is that there doesn't seem to be a strong bias towards wtxid peers in terms of downloaded transactions. I have one wtxid peer that is connected to both a wtxid and a normal peer, but around 60% of tx bandwidth is from the txid one. This may be due to the wtxid node just being slower, or having worse latency, or just being further away from common tx sources in the transaction graph - but I was expecting a strong effect.\r\n\r\nI think this is behaving something like:\r\n\r\n* node A and B do wtxid relay and are peered to each other, but no other wtxid relay peers\r\n* node A receives INV of tx t from node C, delays requesting it for 1+2s\r\n* node B receives INV of tx t from node D, delays requesting it for 1+2s\r\n* node A requests t from C, receives it\r\n* node B receives INV of tx t from node A, delays requesting it for 1s\r\n* node B requests t from D, receives it\r\n\r\nthat is, B's willingness to wait to receive from A is exhausted in the same time as A spend hoping to receive from B.\r\n\r\nSo I think this will likely remain a small effect for transactions that are initially broadcast to/via non-wtxid-relay nodes? Might be something to reconsider with #19184 which I think would allow prioritising from wtxid-relay peers more directly. (EDIT: on second thoughts, the approach I was thinking of would only help if you could prioritise relay-by-wtxid over relay-by-txid of the same txn, which you obviously can't do. Some sort of random delay triggered on node-secret/txid so each wtxid node has a small chance of introducing the tx to the wtxid-relay-network early could work, but probably not until there's a decent number of wtxid relay nodes out there)",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-660377717",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3561742026,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU2MTc0MjAyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3561742026",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-18T22:57:28Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjRiOTBhYThmMDQ0MGRlYWNlZmI1OTk3ZDdiZDFmOWY1YzU5MWIz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b4b90aa8f0440deacefb5997d7bd1f9f5c591b3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2b4b90aa8f0440deacefb5997d7bd1f9f5c591b3",
      "tree": {
        "sha": "c21d349e911b4724a9e62bbc5222ab02a73c854d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c21d349e911b4724a9e62bbc5222ab02a73c854d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/090d87716074434bdc6c7656ec44d049197a793a",
          "sha": "090d87716074434bdc6c7656ec44d049197a793a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/090d87716074434bdc6c7656ec44d049197a793a"
        }
      ],
      "message": "Add a wtxid-index to the mempool",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-18T23:00:01Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-01-29T15:36:23Z"
      },
      "sha": "2b4b90aa8f0440deacefb5997d7bd1f9f5c591b3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjN2ViNmI0ZjFmZTViZDc2Mzg4YTAyMzUyOTk3NzY3NDUzNDMzNGE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7eb6b4f1fe5bd76388a023529977674534334a7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c7eb6b4f1fe5bd76388a023529977674534334a7",
      "tree": {
        "sha": "af43adf8cbb691da6e6b330c2b14926985cb0775",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af43adf8cbb691da6e6b330c2b14926985cb0775"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b4b90aa8f0440deacefb5997d7bd1f9f5c591b3",
          "sha": "2b4b90aa8f0440deacefb5997d7bd1f9f5c591b3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2b4b90aa8f0440deacefb5997d7bd1f9f5c591b3"
        }
      ],
      "message": "Add wtxid to mempool unbroadcast tracking",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-18T23:00:01Z"
      },
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-05-01T01:20:01Z"
      },
      "sha": "c7eb6b4f1fe5bd76388a023529977674534334a7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGYwYWNkYTcxM2U3YjlkYzE4OGFlZjU0ZWY5Mzk4MWE5M2Y0ZTQ0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60f0acda713e7b9dc188aef54ef93981a93f4e44",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/60f0acda713e7b9dc188aef54ef93981a93f4e44",
      "tree": {
        "sha": "aa7fd2cc1703748ff2dacdbc1d9b4ac642022b19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa7fd2cc1703748ff2dacdbc1d9b4ac642022b19"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7eb6b4f1fe5bd76388a023529977674534334a7",
          "sha": "c7eb6b4f1fe5bd76388a023529977674534334a7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c7eb6b4f1fe5bd76388a023529977674534334a7"
        }
      ],
      "message": "Just pass a hash to AddInventoryKnown\n\nSince it's only used for transactions, there's no need to pass in an inv type.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-18T23:00:01Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-01-30T16:12:56Z"
      },
      "sha": "60f0acda713e7b9dc188aef54ef93981a93f4e44"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOGIzOTk1NWVjN2Y4NGU4MzVhYjBiMTM2NmYwZGQyOGRmZDZjZTAz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08b39955ec7f84e835ab0b1366f0dd28dfd6ce03",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/08b39955ec7f84e835ab0b1366f0dd28dfd6ce03",
      "tree": {
        "sha": "6750addfaa29efb66df8e5a5ca05c8942363fbb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6750addfaa29efb66df8e5a5ca05c8942363fbb0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60f0acda713e7b9dc188aef54ef93981a93f4e44",
          "sha": "60f0acda713e7b9dc188aef54ef93981a93f4e44",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/60f0acda713e7b9dc188aef54ef93981a93f4e44"
        }
      ],
      "message": "Add a wtxid-index to mapRelay",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-18T23:00:02Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-01-29T15:40:54Z"
      },
      "sha": "08b39955ec7f84e835ab0b1366f0dd28dfd6ce03"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NWM3OGQ1NGFmNDYyOTk2YTBiY2E2Y2Y5N2Y5MWUxYWE4Nzc4YWU4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85c78d54af462996a0bca6cf97f91e1aa8778ae8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/85c78d54af462996a0bca6cf97f91e1aa8778ae8",
      "tree": {
        "sha": "7cb4e8eefaf9d959caaff3a81769ddbfa1e98882",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7cb4e8eefaf9d959caaff3a81769ddbfa1e98882"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08b39955ec7f84e835ab0b1366f0dd28dfd6ce03",
          "sha": "08b39955ec7f84e835ab0b1366f0dd28dfd6ce03",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/08b39955ec7f84e835ab0b1366f0dd28dfd6ce03"
        }
      ],
      "message": "Add wtxid-index to orphan map",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-18T23:00:02Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-01-29T15:51:45Z"
      },
      "sha": "85c78d54af462996a0bca6cf97f91e1aa8778ae8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDRjMzg1ODIwNDJjM2I5ZWM1M2JiOTdiYTA2NDRmYzAxMTRmOGZi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/144c38582042c3b9ec53bb97ba0644fc0114f8fb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/144c38582042c3b9ec53bb97ba0644fc0114f8fb",
      "tree": {
        "sha": "6626e52258adda8c7f9607c04c28517661a0b4bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6626e52258adda8c7f9607c04c28517661a0b4bf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85c78d54af462996a0bca6cf97f91e1aa8778ae8",
          "sha": "85c78d54af462996a0bca6cf97f91e1aa8778ae8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/85c78d54af462996a0bca6cf97f91e1aa8778ae8"
        }
      ],
      "message": "Add wtxids of confirmed transactions to bloom filter\n\nThis is in preparation for wtxid-based invs (we need to be able to tell whether\nwe AlreadyHave() a transaction based on either txid or wtxid).\n\nThis also double the size of the bloom filter, which is overkill, but still\nuses a manageable amount of memory.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-18T23:00:02Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-01-29T15:57:08Z"
      },
      "sha": "144c38582042c3b9ec53bb97ba0644fc0114f8fb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZTY4ZmMyNDZkMDlmMWU2YzZkZmE4YzY3Njk2OWQ5N2MyZWI0MzM0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e68fc246d09f1e6c6dfa8c676969d97c2eb4334",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8e68fc246d09f1e6c6dfa8c676969d97c2eb4334",
      "tree": {
        "sha": "799b4136a68960f75dc50ffce6c3ea6da908f273",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/799b4136a68960f75dc50ffce6c3ea6da908f273"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/144c38582042c3b9ec53bb97ba0644fc0114f8fb",
          "sha": "144c38582042c3b9ec53bb97ba0644fc0114f8fb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/144c38582042c3b9ec53bb97ba0644fc0114f8fb"
        }
      ],
      "message": "Add wtxids to recentRejects instead of txids\n\nPreviously, we only added txids to recentRejects if we were sure that the\ntransaction couldn't have had the wrong witness (either because the witness was\nmalleated or stripped).\n\nIn preparation for wtxid-based relay, we can observe that txid == wtxid for\ntransactions that have no witness, and add the wtxid of rejected transactions,\nprovided the transaction wasn't a witness-stripped one. This means that we now\nadd more data to the filter (as prior to this commit, any transaction with a\nwitness that failed to be accepted was being skipped for inclusion in the\nfilter) but witness malleation should still not interfere with relay of a valid\nsegwit transaction, because the txid of a segwit transaction would not be added\nto the filter after failing validation.\n\nIn the future, having wtxids in the recent rejects filter will allow us to\nskip downloading the same wtxid multiple times, once our peers use wtxids for\ntransaction relay.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-18T23:00:02Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-01-29T19:09:08Z"
      },
      "sha": "8e68fc246d09f1e6c6dfa8c676969d97c2eb4334"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzg4ZTJlYjYxOTgyMWFkN2FlMWQ0NWQ0YjQwYmU2OTA1MWQzOTk5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac88e2eb619821ad7ae1d45d4b40be69051d3999",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ac88e2eb619821ad7ae1d45d4b40be69051d3999",
      "tree": {
        "sha": "41670146c75c72c3923056642609093a15d8857a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41670146c75c72c3923056642609093a15d8857a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e68fc246d09f1e6c6dfa8c676969d97c2eb4334",
          "sha": "8e68fc246d09f1e6c6dfa8c676969d97c2eb4334",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8e68fc246d09f1e6c6dfa8c676969d97c2eb4334"
        }
      ],
      "message": "Add support for tx-relay via wtxid\n\nThis adds a field to CNodeState that tracks whether to relay transactions with\nthat peer via wtxid, instead of txid. As of this commit the field will always\nbe false, but in a later commit we will add a way to negotiate turning this on\nvia p2p messages exchanged with the peer.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-19T06:05:29Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-01-30T14:35:00Z"
      },
      "sha": "ac88e2eb619821ad7ae1d45d4b40be69051d3999"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZDI4MmUwY2JhOTc2MTU3NGI2YjQzZDEzNGNhOTVmMzA1MmQ3ZmQy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d282e0cba9761574b6b43d134ca95f3052d7fd2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2d282e0cba9761574b6b43d134ca95f3052d7fd2",
      "tree": {
        "sha": "7372513b1bba00e6f0499e85b63c21a537d316c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7372513b1bba00e6f0499e85b63c21a537d316c2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac88e2eb619821ad7ae1d45d4b40be69051d3999",
          "sha": "ac88e2eb619821ad7ae1d45d4b40be69051d3999",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ac88e2eb619821ad7ae1d45d4b40be69051d3999"
        }
      ],
      "message": "ignore non-wtxidrelay compliant invs",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-19T06:05:42Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-04-06T09:09:05Z"
      },
      "sha": "2d282e0cba9761574b6b43d134ca95f3052d7fd2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NmQ3OGQ0N2RlYTM0NTMyOWJhMDk0MzEwZWVjNTZhYjAwYTAyZGRj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46d78d47dea345329ba094310eec56ab00a02ddc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/46d78d47dea345329ba094310eec56ab00a02ddc",
      "tree": {
        "sha": "bb811d9a5512988a7824f6d11c12ed508677b796",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb811d9a5512988a7824f6d11c12ed508677b796"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d282e0cba9761574b6b43d134ca95f3052d7fd2",
          "sha": "2d282e0cba9761574b6b43d134ca95f3052d7fd2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2d282e0cba9761574b6b43d134ca95f3052d7fd2"
        }
      ],
      "message": "Add p2p message \"wtxidrelay\"\n\nWhen sent to and received from a given peer, enables using wtxid's for\nannouncing and fetching transactions with that peer.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-19T06:10:41Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-01-30T15:10:50Z"
      },
      "sha": "46d78d47dea345329ba094310eec56ab00a02ddc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NzE0MWNhNDQyZGFlYThmYzljMzA3Y2Y4MWEwMmIzOGRjYzI4ZmQ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97141ca442daea8fc9c307cf81a02b38dcc28fd8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/97141ca442daea8fc9c307cf81a02b38dcc28fd8",
      "tree": {
        "sha": "7c481ea6bb603fca398a083b16a04c89da007f3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c481ea6bb603fca398a083b16a04c89da007f3f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46d78d47dea345329ba094310eec56ab00a02ddc",
          "sha": "46d78d47dea345329ba094310eec56ab00a02ddc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/46d78d47dea345329ba094310eec56ab00a02ddc"
        }
      ],
      "message": "Delay getdata requests from peers using txid-based relay\n\nUsing both txid and wtxid-based relay with peers means that we could sometimes\ndownload the same transaction twice, if announced via two different hashes from\ndifferent peers.\n\nUse a heuristic of delaying txid-peer-getdata requests by 2 seconds, if we have\nat least one wtxid-based peer.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-19T06:10:42Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-01-31T16:23:27Z"
      },
      "sha": "97141ca442daea8fc9c307cf81a02b38dcc28fd8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWI1MTU1NzRlMTAxMmJjOGVhNWRhZmMzMDQyZGNkZjRjNzY2ZjI2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4eb515574e1012bc8ea5dafc3042dcdf4c766f26",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4eb515574e1012bc8ea5dafc3042dcdf4c766f26",
      "tree": {
        "sha": "831030efbac957e854bc017702ab50890025a79c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/831030efbac957e854bc017702ab50890025a79c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97141ca442daea8fc9c307cf81a02b38dcc28fd8",
          "sha": "97141ca442daea8fc9c307cf81a02b38dcc28fd8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/97141ca442daea8fc9c307cf81a02b38dcc28fd8"
        }
      ],
      "message": "Make TX_WITNESS_STRIPPED its own rejection reason\n\nPreviously, TX_WITNESS_MUTATED could be returned during transaction validation\nfor either transactions that had a witness that was non-standard, or for\ntransactions that had no witness but were invalid due to segwit validation\nrules.\n\nHowever, for txid/wtxid-relay considerations, net_processing distinguishes the\nwitness stripped case separately, because it affects whether a wtxid should be\nable to be added to the reject filter. It is safe to add the wtxid of a\nwitness-mutated transaction to the filter (as that wtxid shouldn't collide with\nthe txid, and hence it wouldn't interfere with transaction relay from\ntxid-relay peers), but it is not safe to add the wtxid (== txid) of a\nwitness-stripped transaction to the filter, because that would interfere with\nrelay of another transaction with the same txid (but different wtxid) when\nrelaying from txid-relay peers.\n\nAlso updates the comment explaining this logic, and explaining that we can get\nrid of this complexity once there's a sufficient deployment of wtxid-relaying\npeers on the network.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-19T06:10:42Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-02-07T09:30:41Z"
      },
      "sha": "4eb515574e1012bc8ea5dafc3042dcdf4c766f26"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDc4ZDFkNjQxMTc4YjQ3M2FiMTE1NmI3MWE4MzdiOWU2ODY3OTJi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd78d1d641178b473ab1156b71a837b9e686792b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dd78d1d641178b473ab1156b71a837b9e686792b",
      "tree": {
        "sha": "cfb5148d1ee5abc2bbf12e751c09f5dc27399426",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cfb5148d1ee5abc2bbf12e751c09f5dc27399426"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4eb515574e1012bc8ea5dafc3042dcdf4c766f26",
          "sha": "4eb515574e1012bc8ea5dafc3042dcdf4c766f26",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4eb515574e1012bc8ea5dafc3042dcdf4c766f26"
        }
      ],
      "message": "Rename AddInventoryKnown() to AddKnownTx()",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-19T06:10:42Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-02-26T18:36:35Z"
      },
      "sha": "dd78d1d641178b473ab1156b71a837b9e686792b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTUzOTJmZGY2N2YxYzVjOTBmNTJkM2NkYjNkZWE0ZjM1ZDE2MDlm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a5392fdf67f1c5c90f52d3cdb3dea4f35d1609f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9a5392fdf67f1c5c90f52d3cdb3dea4f35d1609f",
      "tree": {
        "sha": "2d1be5300a81f3b590d205c32128852725ecb21c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d1be5300a81f3b590d205c32128852725ecb21c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd78d1d641178b473ab1156b71a837b9e686792b",
          "sha": "dd78d1d641178b473ab1156b71a837b9e686792b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dd78d1d641178b473ab1156b71a837b9e686792b"
        }
      ],
      "message": "test: Update test framework p2p protocol version to 70016\n\nThis new p2p protocol version allows to use WTXIDs for tx relay.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-19T06:10:42Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-03-27T01:12:47Z"
      },
      "sha": "9a5392fdf67f1c5c90f52d3cdb3dea4f35d1609f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZDgwOTllOTdhYjhhZjIxMjZmNmZiZDIyM2ZiZDgyYzUyZjJlODVl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d8099e97ab8af2126f6fbd223fbd82c52f2e85e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8d8099e97ab8af2126f6fbd223fbd82c52f2e85e",
      "tree": {
        "sha": "c3a8225cbda0d2b1a28f30b3e952909cd000f1a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3a8225cbda0d2b1a28f30b3e952909cd000f1a2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a5392fdf67f1c5c90f52d3cdb3dea4f35d1609f",
          "sha": "9a5392fdf67f1c5c90f52d3cdb3dea4f35d1609f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9a5392fdf67f1c5c90f52d3cdb3dea4f35d1609f"
        }
      ],
      "message": "test: Add tests for wtxid tx relay in segwit test\n\nAlso cleans up some doublicate lines in the rest of the test.\n\nco-authored-by: Anthony Towns <aj@erisian.com.au>",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-19T06:10:42Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-03-27T01:13:32Z"
      },
      "sha": "8d8099e97ab8af2126f6fbd223fbd82c52f2e85e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYWNkODUyMDllMjBmYzBmZDA4Zjg2ZWVkMjNiNmVmOTM0ODRmZmNm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cacd85209e20fc0fd08f86eed23b6ef93484ffcf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cacd85209e20fc0fd08f86eed23b6ef93484ffcf",
      "tree": {
        "sha": "d4effd3ca0310024448814980c371e882e506584",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4effd3ca0310024448814980c371e882e506584"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d8099e97ab8af2126f6fbd223fbd82c52f2e85e",
          "sha": "8d8099e97ab8af2126f6fbd223fbd82c52f2e85e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8d8099e97ab8af2126f6fbd223fbd82c52f2e85e"
        }
      ],
      "message": "test: Use wtxid relay generally in functional tests",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-19T06:10:42Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-04-21T15:02:46Z"
      },
      "sha": "cacd85209e20fc0fd08f86eed23b6ef93484ffcf"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTIwY2ZlZGI3MDRjMWY3NmJiNzI3ZTIwMDk4NjdkM2Q1MDNhMDNk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e20cfedb704c1f76bb727e2009867d3d503a03d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0e20cfedb704c1f76bb727e2009867d3d503a03d",
      "tree": {
        "sha": "661ba75427210b2ff5367360bb53c07f15e9b5c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/661ba75427210b2ff5367360bb53c07f15e9b5c3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cacd85209e20fc0fd08f86eed23b6ef93484ffcf",
          "sha": "cacd85209e20fc0fd08f86eed23b6ef93484ffcf",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cacd85209e20fc0fd08f86eed23b6ef93484ffcf"
        }
      ],
      "message": "Disconnect peers sending wtxidrelay message after VERACK",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-19T06:10:42Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-06-29T18:59:55Z"
      },
      "sha": "0e20cfedb704c1f76bb727e2009867d3d503a03d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYTRmMTQyMmNkMWMyMGUxMmEwNWQ3ZmYxYTJlZjFkNWU3YzY1NGJi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "tree": {
        "sha": "92b741547b8b5875b769c45cb5c8a06bf8aca223",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/92b741547b8b5875b769c45cb5c8a06bf8aca223"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e20cfedb704c1f76bb727e2009867d3d503a03d",
          "sha": "0e20cfedb704c1f76bb727e2009867d3d503a03d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0e20cfedb704c1f76bb727e2009867d3d503a03d"
        }
      ],
      "message": "Further improve comments around recentRejects",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-07-19T06:10:42Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-06-29T21:14:40Z"
      },
      "sha": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3562154233,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU2MjE1NDIzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3562154233",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-19T06:50:42Z"
    },
    {
      "event": "unlabeled",
      "id": 3562268799,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzU2MjI2ODc5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3562268799",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-19T08:41:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-19T11:18:30Z",
      "updated_at": "2020-07-19T11:18:30Z",
      "source": {
        "issue": {
          "id": 659090627,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDUwOTc4NjA4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19542",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19542/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19542/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19542/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19542",
          "number": 19542,
          "state": "closed",
          "state_reason": null,
          "title": "Revert \"refactor: replace CConnman pointers by references in net_processing.cpp\"",
          "body": "This reverts commit 0c8461a88ed66a1f70559fc96646708949b17e4b.\r\n\r\nIn discussion in #19174 there was a concept NACK by the original author of the code. It was merged after this without any further discussion.\r\n",
          "user": {
            "login": "laanwj",
            "id": 126646,
            "node_id": "MDQ6VXNlcjEyNjY0Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laanwj",
            "html_url": "https://github.com/laanwj",
            "followers_url": "https://api.github.com/users/laanwj/followers",
            "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
            "organizations_url": "https://api.github.com/users/laanwj/orgs",
            "repos_url": "https://api.github.com/users/laanwj/repos",
            "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/laanwj/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19542",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19542",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19542.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19542.patch"
          },
          "closed_at": "2020-07-20T17:21:21Z",
          "created_at": "2020-07-17T09:53:29Z",
          "updated_at": "2022-02-15T10:46:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-19T12:00:47Z",
      "updated_at": "2020-07-19T12:00:47Z",
      "source": {
        "issue": {
          "id": 655373466,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3ODgxMTQ4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19498",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19498/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19498/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19498/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19498",
          "number": 19498,
          "state": "closed",
          "state_reason": null,
          "title": "Tidy up ProcessOrphanTx",
          "body": "Originally a follow-up to #19364, this simplifies the logic in ProcessOrphanTx() and removes unused variables.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 33,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19498",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19498",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19498.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19498.patch"
          },
          "closed_at": "2020-09-30T13:55:31Z",
          "created_at": "2020-07-12T10:30:29Z",
          "updated_at": "2022-02-15T10:47:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-19T12:06:05Z",
      "updated_at": "2020-07-19T12:06:05Z",
      "source": {
        "issue": {
          "id": 655127412,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3NzE0Mjgw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19488",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19488/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19488/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19488/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19488",
          "number": 19488,
          "state": "closed",
          "state_reason": null,
          "title": "Refactor mempool.dat to be extensible, and store missing info",
          "body": "Rebased #9422\r\n\r\nAt the time, we decided it wasn't worth the effort to just store the mempool min fee, but now we want to add unbroadcast txids (#18807) so it seems like a good time to upgrade the format to be extensible.\r\n\r\nTODO: Update or remove `test/functional/mempool_compatibility.py` (not clear how to handle this)",
          "user": {
            "login": "luke-jr",
            "id": 1095675,
            "node_id": "MDQ6VXNlcjEwOTU2NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke-jr",
            "html_url": "https://github.com/luke-jr",
            "followers_url": "https://api.github.com/users/luke-jr/followers",
            "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
            "organizations_url": "https://api.github.com/users/luke-jr/orgs",
            "repos_url": "https://api.github.com/users/luke-jr/repos",
            "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/luke-jr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19488",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19488",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19488.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19488.patch"
          },
          "closed_at": "2020-11-20T16:53:01Z",
          "created_at": "2020-07-11T03:52:57Z",
          "updated_at": "2022-02-15T10:38:13Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 660643514,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MDY0MzUxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/660643514",
      "actor": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-19T13:26:20Z",
      "updated_at": "2020-07-19T13:26:40Z",
      "author_association": "MEMBER",
      "body": "To summarize the state of review before rebase of #19109 and #19474:\r\n\r\nconcept ACK - jnewbery, TheBlueMatt, rajarshimaitra\r\ncode review ACK - sipa, ariard, jonatack\r\nutACK - ajtowns, naumenkogs, instagibbs",
      "user": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-660643514",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "commented",
      "id": 660712195,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MDcxMjE5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/660712195",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-19T21:24:54Z",
      "updated_at": "2020-07-19T21:24:54Z",
      "author_association": "MEMBER",
      "body": "When I rebased this, I had to think about the interaction between #19109 and wtxid-based relay.  One change I made to this PR is to add both the txid and wtxid of an announced transaction to the `filterInventoryKnown` for a peer; this prevents clogging the filter with txid entries for that were already announced via wtxid when child transactions are relayed.\r\n\r\nAlso I found a bug with insertions into mapRelay; the intention was to add lookups by txid and wtxid whenever a transaction is relayed, but I think for wtxid-relay peers we were attempting to insert a lookup by wtxid twice instead. \r\n\r\nI also took this opportunity to address a few outstanding nits.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-660712195",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-20T00:02:02Z",
      "updated_at": "2020-07-20T00:02:02Z",
      "source": {
        "issue": {
          "id": 660925962,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDUyNjQ0NzA4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19556",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19556/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19556/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19556/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19556",
          "number": 19556,
          "state": "closed",
          "state_reason": null,
          "title": "Remove mempool global",
          "body": "This refactor unlocks some nice potential features, such as, but not limited to:\r\n* Removing the fee estimates global (would avoid slightly fragile workarounds such as #18766)\r\n* Making the mempool optional for a \"blocksonly\" operation mode\r\n\r\nEven absent those features, the new code without the global should be easier to maintain, read and write tests for.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19556",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19556",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19556.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19556.patch"
          },
          "closed_at": "2020-09-07T07:52:23Z",
          "created_at": "2020-07-19T16:20:05Z",
          "updated_at": "2022-02-15T10:35:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 452049233,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMDQ5MjMz",
      "url": null,
      "actor": null,
      "commit_id": "8e68fc246d09f1e6c6dfa8c676969d97c2eb4334",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-452049233",
      "submitted_at": "2020-07-21T00:44:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "reviewed",
      "id": 452629440,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjI5NDQw",
      "url": null,
      "actor": null,
      "commit_id": "c7eb6b4f1fe5bd76388a023529977674534334a7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-452629440",
      "submitted_at": "2020-07-21T17:02:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "commented",
      "id": 662330772,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjMzMDc3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662330772",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T08:52:55Z",
      "updated_at": "2020-07-22T08:52:55Z",
      "author_association": "MEMBER",
      "body": "utACK 0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-662330772",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "commented",
      "id": 662628799,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjYyODc5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662628799",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T18:58:45Z",
      "updated_at": "2020-07-22T18:58:45Z",
      "author_association": "MEMBER",
      "body": "utACK 0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-662628799",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "merged",
      "id": 3577141332,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzU3NzE0MTMzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3577141332",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ccef10261efc235c8fcc8aad54556615b0cc23be",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccef10261efc235c8fcc8aad54556615b0cc23be",
      "created_at": "2020-07-22T19:00:22Z"
    },
    {
      "event": "closed",
      "id": 3577141341,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzU3NzE0MTM0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3577141341",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T19:00:22Z"
    },
    {
      "event": "commented",
      "id": 662635401,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjYzNTQwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662635401",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T19:09:18Z",
      "updated_at": "2020-07-22T19:16:14Z",
      "author_association": "MEMBER",
      "body": "Posthumous re-ACK 0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb\r\n\r\nSome follow-ups I'd like:\r\n* List BIP339 support in doc/bips.md\r\n* Re-enable fetching of orphans from wtxid peers (e.g. https://github.com/bitcoin/bitcoin/pull/18044/files#r450687076, see https://github.com/ajtowns/bitcoin/commits/202007-wtxid-orphans).\r\n* Possibly streamline things a bit by having an explicit pair type (bool is_wtxid, uint256 txid_or_wtxid) - possibly just for tx requesting like above, or for more places (finding in the mempool and lookups in various structures would be cleaner with this as well, I think).\r\n\r\nI'll work on that if nobody does it instead, as it'll be hard to rebase #19184 on top of this otherwise.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-662635401",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "commented",
      "id": 662676044,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjY3NjA0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662676044",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T20:21:37Z",
      "updated_at": "2020-07-22T20:21:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Can the hashes get a typed wrapper so that the unit256's are e.g. subclassed to WTXID and TXID?",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-662676044",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "commented",
      "id": 662676831,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjY3NjgzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662676831",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T20:23:14Z",
      "updated_at": "2020-07-22T20:23:14Z",
      "author_association": "MEMBER",
      "body": "@JeremyRubin I think that's hard, because a portion of the code relies on the fact that the wtxid of a non-witness tx is also its txid.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-662676831",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "mentioned",
      "id": 3577422089,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzU3NzQyMjA4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3577422089",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T20:23:14Z"
    },
    {
      "event": "subscribed",
      "id": 3577422094,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1Nzc0MjIwOTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3577422094",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T20:23:15Z"
    },
    {
      "event": "removed_from_project",
      "id": 3577486777,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MzU3NzQ4Njc3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3577486777",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T20:42:16Z",
      "project_card": {
        "id": 42014914,
        "url": "https://api.github.com/projects/columns/cards/42014914",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jrawsthorne",
        "id": 777143,
        "node_id": "MDQ6VXNlcjc3NzE0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/777143?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrawsthorne",
        "html_url": "https://github.com/jrawsthorne",
        "followers_url": "https://api.github.com/users/jrawsthorne/followers",
        "following_url": "https://api.github.com/users/jrawsthorne/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jrawsthorne/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jrawsthorne/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jrawsthorne/subscriptions",
        "organizations_url": "https://api.github.com/users/jrawsthorne/orgs",
        "repos_url": "https://api.github.com/users/jrawsthorne/repos",
        "events_url": "https://api.github.com/users/jrawsthorne/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jrawsthorne/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T22:05:58Z",
      "updated_at": "2020-07-22T22:05:58Z",
      "source": {
        "issue": {
          "id": 664078700,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDU1Mzc4OTMx",
          "url": "https://api.github.com/repos/rust-bitcoin/rust-bitcoin/issues/446",
          "repository_url": "https://api.github.com/repos/rust-bitcoin/rust-bitcoin",
          "labels_url": "https://api.github.com/repos/rust-bitcoin/rust-bitcoin/issues/446/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/rust-bitcoin/rust-bitcoin/issues/446/comments",
          "events_url": "https://api.github.com/repos/rust-bitcoin/rust-bitcoin/issues/446/events",
          "html_url": "https://github.com/rust-bitcoin/rust-bitcoin/pull/446",
          "number": 446,
          "state": "closed",
          "state_reason": null,
          "title": "BIP339: Add wtxidrelay message and WTx inv type",
          "body": "BIP339 support was just merged into core: https://github.com/bitcoin/bitcoin/pull/18044\r\n\r\nNot sure about changing the protocol version because I don't think every protocol is supported in rust-bitcoin yet\r\nNot sure about the name for the new inv type, we already have WitnessTransaction",
          "user": {
            "login": "jrawsthorne",
            "id": 777143,
            "node_id": "MDQ6VXNlcjc3NzE0Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/777143?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrawsthorne",
            "html_url": "https://github.com/jrawsthorne",
            "followers_url": "https://api.github.com/users/jrawsthorne/followers",
            "following_url": "https://api.github.com/users/jrawsthorne/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jrawsthorne/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jrawsthorne/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jrawsthorne/subscriptions",
            "organizations_url": "https://api.github.com/users/jrawsthorne/orgs",
            "repos_url": "https://api.github.com/users/jrawsthorne/repos",
            "events_url": "https://api.github.com/users/jrawsthorne/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jrawsthorne/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 1261742747,
              "node_id": "MDU6TGFiZWwxMjYxNzQyNzQ3",
              "url": "https://api.github.com/repos/rust-bitcoin/rust-bitcoin/labels/API%20break",
              "name": "API break",
              "description": "This PR requires a version bump for the next release",
              "color": "f79e67",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/rust-bitcoin/rust-bitcoin/pulls/446",
            "html_url": "https://github.com/rust-bitcoin/rust-bitcoin/pull/446",
            "diff_url": "https://github.com/rust-bitcoin/rust-bitcoin/pull/446.diff",
            "patch_url": "https://github.com/rust-bitcoin/rust-bitcoin/pull/446.patch"
          },
          "closed_at": "2020-10-26T20:03:36Z",
          "created_at": "2020-07-22T22:05:58Z",
          "updated_at": "2020-10-26T20:03:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-23T00:59:22Z",
      "updated_at": "2020-07-23T00:59:22Z",
      "source": {
        "issue": {
          "id": 664136201,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDU1NDI2ODMw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19569",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19569/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19569/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19569/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19569",
          "number": 19569,
          "state": "closed",
          "state_reason": null,
          "title": "Enable fetching of orphan parents from wtxid peers",
          "body": "This is based on https://github.com/bitcoin/bitcoin/pull/18044#discussion_r450687076.\r\n\r\nA new type `GenTxid` is added to protocol.h, which represents a tagged txid-or-wtxid. The tx request logic is updated to use these instead of uint256s, permitting per-announcement distinguishing of txid/wtxid (instead of assuming that everything we want to request from a wtxid peer is wtx). Then the restriction of orphan-parent requesting to non-wtxid peers is lifted.\r\n\r\nAlso document BIP339 in doc/bips.md.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19569",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19569",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19569.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19569.patch"
          },
          "closed_at": "2020-07-31T11:52:43Z",
          "created_at": "2020-07-23T00:59:22Z",
          "updated_at": "2022-08-16T17:03:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 662771484,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2Mjc3MTQ4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662771484",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-23T01:04:01Z",
      "updated_at": "2020-07-23T01:04:01Z",
      "author_association": "MEMBER",
      "body": "Posthumous Code Review ACK 0a4f142\r\n\r\nAnother follow-up:\r\n* update tracking of multiple transactions with same txid, especially `BroadcastTransaction`, see https://github.com/bitcoin/bitcoin/pull/18044#discussion_r458229569",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#issuecomment-662771484",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18044"
    },
    {
      "event": "referenced",
      "id": 3584495674,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1ODQ0OTU2NzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3584495674",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bdb259705d62c355381f803909e233cea36ee355",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/bdb259705d62c355381f803909e233cea36ee355",
      "created_at": "2020-07-24T15:49:42Z"
    },
    {
      "event": "reviewed",
      "id": 455342192,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzQyMTky",
      "url": null,
      "actor": null,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-455342192",
      "submitted_at": "2020-07-26T08:17:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-26T16:16:08Z",
      "updated_at": "2020-07-26T16:16:08Z",
      "source": {
        "issue": {
          "id": 665811338,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDU2NzcxMzgx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19590",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19590/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19590/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19590/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19590",
          "number": 19590,
          "state": "closed",
          "state_reason": null,
          "title": "p2p, refactor: add `CInv` transaction message helpers; use in net processing",
          "body": "Following the merge of wtxid relay in #18044, this is the first of three refactoring PRs (this one, #19610, and #19611) with no change in behavior, tightly scoped to ease review, to simplify the net processing code and improve encapsulation:\r\n\r\n- add `CInv` transaction message helper methods, defined in the class\r\n\r\n- use the new helpers in `net_processing.cpp` to simplify the code and improve encapsulation\r\n\r\nTest coverage is provided by the functional p2p tests, notably (from seeing which tests failed when breaking things to test coverage) `p2p_segwit`, `p2p_tx_download`, `p2p_feefilter`, and `p2p_permissions`.\r\n",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19590",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19590",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19590.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19590.patch"
          },
          "closed_at": "2020-07-30T14:18:34Z",
          "created_at": "2020-07-26T16:16:07Z",
          "updated_at": "2022-02-15T10:34:45Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-28T08:39:52Z",
      "updated_at": "2020-07-28T08:39:52Z",
      "source": {
        "issue": {
          "id": 666885979,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDU3NjUzODU3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19606",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19606/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19606/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19606/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19606",
          "number": 19606,
          "state": "closed",
          "state_reason": null,
          "title": "Backport wtxid relay to v0.20",
          "body": "We want wtxid relay to be widely deployed before taproot activation, so it should be backported to v0.20.\r\n\r\nThe main difference from #18044 is removing the changes to the unbroadcast set (which was only added post-v0.20). The rest is mostly minor rebase conflicts (eg connman changed from a pointer to a reference in master, etc).\r\n\r\nWe'll also want to backport #19569 after that's merged.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 390024790,
              "node_id": "MDU6TGFiZWwzOTAwMjQ3OTA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Backport",
              "name": "Backport",
              "description": "",
              "color": "dd7200",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/49",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/49",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/49/labels",
            "id": 5711976,
            "node_id": "MDk6TWlsZXN0b25lNTcxMTk3Ng==",
            "number": 49,
            "state": "closed",
            "title": "0.20.2",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 10,
            "created_at": "2020-07-29T15:00:22Z",
            "updated_at": "2021-07-22T17:54:01Z",
            "closed_at": "2021-07-22T17:54:01Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19606",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19606",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19606.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19606.patch"
          },
          "closed_at": "2020-11-05T14:10:54Z",
          "created_at": "2020-07-28T08:39:51Z",
          "updated_at": "2022-02-15T10:37:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-29T15:46:40Z",
      "updated_at": "2020-07-29T15:46:40Z",
      "source": {
        "issue": {
          "id": 667941548,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDU4NTIwMDQy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19620/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19620/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19620/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19620",
          "number": 19620,
          "state": "closed",
          "state_reason": null,
          "title": "Add txids with non-standard inputs to reject filter",
          "body": "Our policy checks for non-standard inputs depend only on the non-witness\r\nportion of a transaction: we look up the scriptPubKey of the input being\r\nspent from our UTXO set (which is covered by the input txid), and the p2sh\r\nchecks only rely on the scriptSig portion of the input.\r\n\r\nConsequently it's safe to add txids of transactions that fail these checks to\r\nthe reject filter, as the witness is irrelevant to the failure. This is helpful\r\nfor any situation where we might request the transaction again via txid (either\r\nfrom txid-relay peers, or if we might fetch the transaction via txid due to\r\nparent-fetching of orphans).\r\n\r\nFurther, in preparation for future witness versions being deployed on the\r\nnetwork, ensure that WITNESS_UNKNOWN transactions are rejected in\r\nAreInputsStandard(), so that transactions spending v1 (or greater) witness\r\noutputs will fall into this category of having their txid added to the reject\r\nfilter.",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19620",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19620.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19620.patch"
          },
          "closed_at": "2020-08-06T23:34:54Z",
          "created_at": "2020-07-29T15:37:55Z",
          "updated_at": "2022-02-15T10:34:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 3604092659,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2MDQwOTI2NTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3604092659",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "17de75b02814a8f746ad4c827c34d693f3477d40",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17de75b02814a8f746ad4c827c34d693f3477d40",
      "created_at": "2020-07-30T14:18:29Z"
    },
    {
      "event": "referenced",
      "id": 3606894984,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2MDY4OTQ5ODQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3606894984",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fc7030c8fe563f54101f339715863c8e19c23af9",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/fc7030c8fe563f54101f339715863c8e19c23af9",
      "created_at": "2020-07-31T05:10:53Z"
    },
    {
      "event": "reviewed",
      "id": 459073764,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MDczNzY0",
      "url": null,
      "actor": null,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-459073764",
      "submitted_at": "2020-07-31T10:27:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "referenced",
      "id": 3608174889,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2MDgxNzQ4ODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3608174889",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f7c73b03d975a72f609ded2bbe250c1c8a76a944",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7c73b03d975a72f609ded2bbe250c1c8a76a944",
      "created_at": "2020-07-31T11:52:35Z"
    },
    {
      "event": "referenced",
      "id": 3609583928,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2MDk1ODM5Mjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3609583928",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1c6711468dfa356474ffe0b36d7cf6519e5e0ddb",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/1c6711468dfa356474ffe0b36d7cf6519e5e0ddb",
      "created_at": "2020-07-31T17:43:39Z"
    },
    {
      "event": "reviewed",
      "id": 459450889,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NDUwODg5",
      "url": null,
      "actor": null,
      "commit_id": "c7eb6b4f1fe5bd76388a023529977674534334a7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Post merge review up to ac88e2eb619821ad7ae1d45d4b40be69051d3999\r\n\r\nCouple questions",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-459450889",
      "submitted_at": "2020-07-31T21:06:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "reviewed",
      "id": 459647729,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NjQ3NzI5",
      "url": null,
      "actor": null,
      "commit_id": "8d8099e97ab8af2126f6fbd223fbd82c52f2e85e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#pullrequestreview-459647729",
      "submitted_at": "2020-08-02T13:03:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-02T18:18:07Z",
      "updated_at": "2020-08-02T18:18:07Z",
      "source": {
        "issue": {
          "id": 671664437,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDYxODQxNTY4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19645/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19645/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19645/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19645",
          "number": 19645,
          "state": "closed",
          "state_reason": null,
          "title": "Allow updating mempool-txn with cheaper witnesses",
          "body": "Accepting a transaction to the mempool only succeeds if this transaction\r\nisn't already present. This check operating on txid, it prevents new\r\nsubmissions of the transaction with identical non-witness data but\r\nsmaller valid witnesses. Therefore, overall mempool feerate won't improve\r\neven if such higher-feerate mempool candidate is learnt through wtxid-relay.\r\n\r\nThis commit changes mempool and transaction broadcast already-present checks\r\nfrom transaction's txid to its wtxid.\r\n\r\nA new-wtxid submission may still fail due to replacement rules in\r\nfunction of local policy settings.\r\n\r\n\r\n@jnewbery RE: https://github.com/bitcoin/bitcoin/pull/18044#discussion_r460704950 I think we agree on the \"same txid, different txids\" nonsense, I didn't mean to track multiple witnesses for one txid rather to accept and rebroadcast \"the best mempool candidate known for a given txid\". A script may have alternatives solvable branches and witnesses to spend them might be different in weight thus creating wtxid with divergent feerates. A best known candidate with regards to a txid is defined as a higher-feerate witness (a smaller one) transaction than our current in mempool one, with identical non-witness data.\r\n\r\nYou might submit a txidA:wtxid1 to your local node, and schedule it for initial-broadcast reattempt. Few minutes, latter you announce to your node a higher-feerate txidA:wtxid2, which effectively replace wtxid1. At `ReattemptInitialBroadcast`, only wtxid2 will be rebroadcast if needed, as best known candidate for txidA. According to me, that's where unbroadcast semantic is unclear, to which wtxid the user should expect seeing \"broadcast-reattempt\" property guarantee ?\r\n\r\nGiven our current relay policy default, I concede this is rather a marginal case, beyond illustrating another limit of our mempool replacement rules. In the future, it's likely to worsen as taproot make it far easier to create witnesses with divergent feerates (e.g a 1-of-1 tapscript compared to a 15-of-15 one). In case of concurrent broadcast, the mempool won't necessary learn the best-feerate candidate. That said, IMO, it's worthy to fix because \"txn-already-in-mempool\" isn't accurate anymore in a wtxid-relay context.",
          "user": {
            "login": "ariard",
            "id": 23310655,
            "node_id": "MDQ6VXNlcjIzMzEwNjU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ariard",
            "html_url": "https://github.com/ariard",
            "followers_url": "https://api.github.com/users/ariard/followers",
            "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
            "organizations_url": "https://api.github.com/users/ariard/orgs",
            "repos_url": "https://api.github.com/users/ariard/repos",
            "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ariard/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19645",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19645",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19645.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19645.patch"
          },
          "closed_at": "2022-01-10T00:24:52Z",
          "created_at": "2020-08-02T18:18:06Z",
          "updated_at": "2023-01-10T10:07:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 3613854149,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2MTM4NTQxNDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3613854149",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bcf5d9156830cd13b9a5a2fb16c1c8eba22669ed",
      "commit_url": "https://api.github.com/repos/instagibbs/bitcoin/commits/bcf5d9156830cd13b9a5a2fb16c1c8eba22669ed",
      "created_at": "2020-08-03T00:59:55Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-27T15:11:25Z",
      "updated_at": "2020-08-27T15:11:25Z",
      "source": {
        "issue": {
          "id": 687323350,
          "node_id": "MDU6SXNzdWU2ODczMjMzNTA=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19820",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19820/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19820/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19820/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/19820",
          "number": 19820,
          "state": "closed",
          "state_reason": "completed",
          "title": "Transactions propagation design goals",
          "body": "During the last P2P meeting, @sdaftuar pointed the lack of a transactions propagation framework thus hindering progress in the tx-relay network area, devoid of clear goals to achieve.\r\n\r\nThis is a blocking issue in a spawn of subjects, like countering cheap RBF replacements, increasing mempool feerate of resources constraints nodes, better support of Bitcoin applications with more demanding fee/tx-relay requirements, scope of tx-rejection filter, etc\r\n\r\n## Core mechanisms of Tx-Relay\r\n\r\nI think one of the starter goal of the tx-relay network is obviously to let miners discover the best-feerate transactions candidate for inclusion in block.  As Bitcoin censorship-resistance lays on distribution of mining, bias in tx-relay topology privileging a subset of miners with an advantage in fee discovery may provoke disequilibrium beyond their hashrate contributions. Thus an unstructured p2p network, vetted of uniform tx-relay peers selection is likely the best option. A distributed network is also more-robust against infrastructure disruption or targeted transaction censorship.\r\n\r\nAn additional goal is preserving the pseudonymity of transactions original broadcaster which can be enforced with high guarantees only if tx-relay topology is non-observable by a protocol participants or a coalition of them. Introduction of randomized timers at propagation (e.g https://github.com/bitcoin/bitcoin/pull/14897) is an improvement towards this direction, even if [research](https://arxiv.org/pdf/1812.00942.pdf) has hinted that the number of tx-relay mechanisms potentially exploitable to learn about topology is likely wide. Future improvements like mempool rebroadcasts (https://github.com/bitcoin/bitcoin/pull/16698) or initial-broadcast-over-Tor-only may improve the situation.\r\n\r\nLastly, an other important goal to consider is bandwidth-savings, as underscored in the [Erlay](https://arxiv.org/pdf/1905.10518.pdf) paper, a too prohibitive tx-relay cost disincentives potential node operators, especially running full-relay public ones contributing the most to good health of the network. This goal might be in trade-offs with aforementioned ones, where tx-relay peering redundancy increases robustness and higher mempool rebroadcast frequencies add noise to the propagation graph at the price of higher bandwidth costs.\r\n\r\n## Tx-Relay & Node Policies\r\n\r\nIf the set of messages as inherited from first protocol versions or specified in peer services BIPs defines what bitcoin data structures are accepted by compliant peers, AFAIU it doesn't mandate a relay behavior, neither outlaw a superset of constraints on p2p messages, at the discretion of local node. This superset of constraints is I guess what people commonly called P2P network transaction policy, even in fact such _policies_ vary by full-node implementation, versions and local node settings.\r\n\r\nOn the Core side, such policies encompass some DoS/vulnerabilities counter-measures like `SCRIPT_VERIFY_MINIMALIF` at the script interpreter level or `MIN_STANDARD_TX_NONWITNESS_SIZE` at the mempool level, invariants which can't be disabled by local settings, so we can qualify them as implementation/version policy . Another range of policies checks are vetted with hopefully anti-DoS default values like `incrementalRelayFee` or `m_limit_descendant` but configurable by node operator to express a different pricing of resources offered to the network or increasing the chance to learn good feerate chain of transactions by accepting higher DoS risks. \r\n\r\nDue to this divergence of policies across the network and adding to the absence of events order in a distributed system, mempools convergence has never been considered as a goal. However, there is a p2p mechanism for peers to discover and adapt its peers policies, namely [`feefilter`](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki). This mechanism prevent bandwidth-waste by will-be-rejected low-feerate transactions. Further p2p mechanisms could be devised to improve peer policy negotiation, like `txfilter` announcing the local standardness applied or `utxofeerate` announcing the feerate of a package for a known utxo spend candidate. That said, communicating more information to opportunistically save more bandwidth is likely quickly bounded.\r\n\r\n## Fee/Relay Assumptions for Bitcoin Applications\r\n\r\nBitcoin applications aiming to confirm their transactions should ensure first to be connected to a high number of tx-relay peers, then ensure these transactions are formatted to pass at least `testmempoolaccept` of their local nodes. If a propagation failure is detected or suspected, a) a rotation should be triggered to probabilistically find a peer with an identical policy, at least for the subset of policy rules you share  or b) a warning can be triggered back to the user hinting to do something about likely a badly-formatted transaction.\r\n\r\nSuch model doesn't work great with regards to multi-party Bitcoin applications (e.g LN or vaults), where signing interactivity is costly or impossible. Further, if a transaction is time-sensitive with regards to advancing state of protocol forward, propagation failures are direct risks for fund safety. Even further such potential propagation failures could be exploited by a malicious counterparty, if applications participants are assumed to be distrusted. Such application can never be sure that transaction will confirm but should be able to express its best-feerate bid for this time-sensitive transaction, even if bid isn't won due to a better blockspace demand.\r\n\r\nAny such application/protocol developper will be confronted with the following questions:\r\n- how to decide the format of my transactions (size, scripts, witness, minimal fee, ...) ?\r\n- what should be the size/weight of chain of transactions ?\r\n- what should be my tx-relay strategy and should rebroadcast/peer rotation be triggered ?\r\n- what fee-bumping strategy are offered between RBF, CPFP, Parent-Pay-For-Child, etc ? how network mempools will evaluate each one ? how a malicious counterparty could leverage [them](https://github.com/t-bast/lightning-docs/blob/master/pinning-attacks.md) ?\r\n- what dev process will follow ecosystem/implementations in case of rules tightening/changes potentially hindering application/protocol security, e.g what are Core guarantees wrt to [carve-out](https://github.com/bitcoin/bitcoin/pulls?q=is%3Apr+author%3ATheBlueMatt+is%3Aclosed) backward-compatibility ?\r\n\r\nHistorically, we have an example of BIP 125, specifying out the mempool RBF policy, ready to be consumed as an interface by Bitcoin applications.  But otherwise, due to fear of silently breaking an obscure policy rule, some application are literally leaking them in their stack (see https://github.com/ElementsProject/lightning/blob/4302afd9a58f0c455bb812b63e9cdf377ebb74d4/bitcoin/signature.c#L214)\r\n\r\n\r\nOf course to avoid getting stuck in endless debates, here few questions we may evaluate as a guideline:\r\n- what have been historically propagation assumptions of Bitcoin applications ? how newer class of Bitcoin applications should conceive their operational and security models with regards to propagation ?\r\n- should we support requirements of newer classes of Bitcoin applications ? If so, what should be the scope and expressivity of an fee/tx-relay API rules ?\r\n- what set of constraints (DoS, bandwidth, privacy, deployment, ...) do we have to bind to ?\r\n",
          "user": {
            "login": "ariard",
            "id": 23310655,
            "node_id": "MDQ6VXNlcjIzMzEwNjU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ariard",
            "html_url": "https://github.com/ariard",
            "followers_url": "https://api.github.com/users/ariard/followers",
            "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
            "organizations_url": "https://api.github.com/users/ariard/orgs",
            "repos_url": "https://api.github.com/users/ariard/repos",
            "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ariard/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 7,
          "closed_at": "2021-04-20T21:06:27Z",
          "created_at": "2020-08-27T15:11:25Z",
          "updated_at": "2022-08-18T18:35:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-04T22:25:48Z",
      "updated_at": "2020-09-04T22:25:48Z",
      "source": {
        "issue": {
          "id": 693737747,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDgwMjA2MDI0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19879",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19879/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19879/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19879/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19879",
          "number": 19879,
          "state": "closed",
          "state_reason": null,
          "title": "[p2p] miscellaneous wtxid followups",
          "body": "Addresses some outstanding review comments from #18044 \r\n\r\n- reverts unbroadcast txids to a set instead of a map (simpler, communicates intent better, takes less space, no efficiency advantages of map) \r\n- adds safety around two touchpoints (check for nullptr before dereferencing pointer, remove an inaccurate std::move operator) \r\n- removes some dead code \r\n\r\nLinks to comments on wtxid PR: [1](https://github.com/bitcoin/bitcoin/pull/18044#discussion_r460495254) [2](https://github.com/bitcoin/bitcoin/pull/18044#discussion_r460496023) [3](https://github.com/bitcoin/bitcoin/pull/18044#discussion_r463532611)\r\n\r\nthanks to jnewbery & adamjonas for flagging these ! ! ",
          "user": {
            "login": "amitiuttarwar",
            "id": 1500952,
            "node_id": "MDQ6VXNlcjE1MDA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitiuttarwar",
            "html_url": "https://github.com/amitiuttarwar",
            "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
            "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
            "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
            "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
            "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19879",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19879",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19879.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19879.patch"
          },
          "closed_at": "2020-09-15T22:31:29Z",
          "created_at": "2020-09-04T22:25:47Z",
          "updated_at": "2022-02-15T10:47:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 3770567637,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM3NzA1Njc2Mzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3770567637",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1c4f59728c35dc61c213932ffa593826db10095a",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c4f59728c35dc61c213932ffa593826db10095a",
      "created_at": "2020-09-15T22:31:17Z"
    },
    {
      "event": "referenced",
      "id": 3774783247,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM3NzQ3ODMyNDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3774783247",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "aae58c49b82f9bfc2e4dde73d7916cb18c0bf5ff",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/aae58c49b82f9bfc2e4dde73d7916cb18c0bf5ff",
      "created_at": "2020-09-16T19:40:54Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-21T07:21:32Z",
      "updated_at": "2020-09-21T07:21:32Z",
      "source": {
        "issue": {
          "id": 705355883,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDkwMDk4NTgx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19988",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19988/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19988/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19988/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19988",
          "number": 19988,
          "state": "closed",
          "state_reason": null,
          "title": "Overhaul transaction request logic",
          "body": "This replaces the transaction request logic with an encapsulated class that maintains all the state surrounding it. By keeping it stand alone, it can be easily tested (using included unit tests and fuzz tests).\r\n\r\nThe major changes are:\r\n\r\n* Announcements from outbound (and whitelisted) peers are now always preferred over those from inbound peers. This used to be the case for the first request (by delaying the first request from inbound peers), and a bias afters. The 2s delay for requests from inbound peers still exists, but after that, if viable outbound peers remain for any given transaction, they will always be tried first.\r\n* No more hard cap of 100 in flight transactions per peer, as there is less need for it (memory usage is linear in the number of announcements, but independent from the number in flight, and CPU usage isn't affected by it). Furthermore, if only one peer announces a transaction, and it has over 100 in flight already, we still want to request it from them. The cap is replaced with a rule that announcements from such overloaded peers get an additional 2s delay (possibly combined with the existing 2s delays for inbound connections, and for txid peers when wtxid peers are available).\r\n* The limit of 100000 tracked announcements is reduced to 5000; this was excessive. This can be bypassed using the PF_RELAY permission (to accommodate locally dumping a batch of many transactions).\r\n\r\nThis replaces #19184, rebased on #18044 and with many small changes.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/45",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
            "id": 4914019,
            "node_id": "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
            "number": 45,
            "state": "closed",
            "title": "0.21.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 132,
            "created_at": "2019-12-09T08:39:58Z",
            "updated_at": "2021-01-15T19:50:53Z",
            "closed_at": "2021-01-15T19:50:53Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 28,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19988",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19988",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19988.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19988.patch"
          },
          "closed_at": "2020-10-14T16:37:52Z",
          "created_at": "2020-09-21T07:21:31Z",
          "updated_at": "2022-02-15T10:37:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 3877519719,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM4Nzc1MTk3MTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3877519719",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c2c4dbaebd955ad2829364f7fa5b8169ca1ba6b9",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2c4dbaebd955ad2829364f7fa5b8169ca1ba6b9",
      "created_at": "2020-10-14T16:37:37Z"
    },
    {
      "event": "referenced",
      "id": 3886744223,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM4ODY3NDQyMjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3886744223",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7c943670643b30c0771c60270c32921d0a458ca1",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/7c943670643b30c0771c60270c32921d0a458ca1",
      "created_at": "2020-10-16T14:40:20Z"
    },
    {
      "event": "referenced",
      "id": 3962582100,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5NjI1ODIxMDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3962582100",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a339289c2ef9caffa1195436695a13f6e48e1bbc",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a339289c2ef9caffa1195436695a13f6e48e1bbc",
      "created_at": "2020-11-05T14:10:53Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T15:38:52Z",
      "updated_at": "2020-11-05T15:38:52Z",
      "source": {
        "issue": {
          "id": 737041052,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTE2MTUyNjE0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20317",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20317/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20317/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20317/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20317",
          "number": 20317,
          "state": "closed",
          "state_reason": null,
          "title": "Backport wtxid orphan fetch to v0.20",
          "body": "wtxid relay (#18044) was backported to 0.20 in #19606. This PR backports the follow-up \"Enable fetching of orphan parents from wtxid peers\" #19569.\r\n\r\nAlso included is commit _p2p: ensure inv is GenMsgTx before ToGenTxid in inv processing_ from #19610 to prevent a possible remote crash bug.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 390024790,
              "node_id": "MDU6TGFiZWwzOTAwMjQ3OTA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Backport",
              "name": "Backport",
              "description": "",
              "color": "dd7200",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/49",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/49",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/49/labels",
            "id": 5711976,
            "node_id": "MDk6TWlsZXN0b25lNTcxMTk3Ng==",
            "number": 49,
            "state": "closed",
            "title": "0.20.2",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 10,
            "created_at": "2020-07-29T15:00:22Z",
            "updated_at": "2021-07-22T17:54:01Z",
            "closed_at": "2021-07-22T17:54:01Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20317",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20317",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20317.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20317.patch"
          },
          "closed_at": "2020-11-17T17:36:14Z",
          "created_at": "2020-11-05T15:38:52Z",
          "updated_at": "2022-02-15T10:38:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 4031809495,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwMzE4MDk0OTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4031809495",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "145650dc37f197b3aac950fd4b2c478a2a0ed3fb",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/145650dc37f197b3aac950fd4b2c478a2a0ed3fb",
      "created_at": "2020-11-24T09:50:09Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "str4d",
        "id": 4993799,
        "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/str4d",
        "html_url": "https://github.com/str4d",
        "followers_url": "https://api.github.com/users/str4d/followers",
        "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
        "organizations_url": "https://api.github.com/users/str4d/orgs",
        "repos_url": "https://api.github.com/users/str4d/repos",
        "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/str4d/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-28T17:16:21Z",
      "updated_at": "2021-05-28T17:16:21Z",
      "source": {
        "issue": {
          "id": 905769179,
          "node_id": "MDU6SXNzdWU5MDU3NjkxNzk=",
          "url": "https://api.github.com/repos/zcash/zcash/issues/5198",
          "repository_url": "https://api.github.com/repos/zcash/zcash",
          "labels_url": "https://api.github.com/repos/zcash/zcash/issues/5198/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/zcash/zcash/issues/5198/comments",
          "events_url": "https://api.github.com/repos/zcash/zcash/issues/5198/events",
          "html_url": "https://github.com/zcash/zcash/issues/5198",
          "number": 5198,
          "state": "open",
          "state_reason": null,
          "title": "Switch to a `(txid, auth_digest)` identifier in places where the node needs to commit to a specific instance of a transaction",
          "body": "ZIP 244 changes how txids are derived (for v5 txs onward), to enable committing to the _effects_ of a transaction separately from its specific contents (as auth data can be malleated, e.g. re-signing a transaction). The places where `zcashd` assumes a `txid` has this effect-committing property, don't need to be changed.\r\n\r\nHowever, `zcashd` _also_ assumes a `txid` has an instance-committing property in other places, such as for mempool DoS prevention, as well as potentially other places inherited from `bitcoind`. If these use txids for v5 transactions, there is a user DoS problem:\r\n\r\n- User submits a valid v5 transaction to the network.\r\n- An adversary manipulates the authorizing data for the in-flight transaction, making it invalid.\r\n- `zcashd` nodes reject the transaction as invalid, and add its `txid` to the recently-rejected list.\r\n- The user cannot resubmit their transaction because its txid is blocked.\r\n\r\nUpstream had a similar problem for SegWit transactions, which they addressed four years after deploying SegWit by adding P2P support for relaying transactions via `wtxid` ([BIP 339](https://github.com/bitcoin/bips/blob/master/bip-0339.mediawiki), [impl](https://github.com/bitcoin/bitcoin/pull/18044)). This works because `wtxid` is a commitment to a Bitcoin SegWit transaction _instance_, including effecting data.\r\n\r\nIn our case, we opted in ZIP 244 to instead have an `auth_digest` that commits to just the authorizing data of a transaction. The tuple `(txid, auth_digest)` is our equivalent of Bitcoin's `wtxid`. We should use this tuple wherever we need to reference a transaction instance.\r\n\r\n---\r\n\r\nFor the P2P changes, see #5199. This issue is for identifying and fixing code internal to `zcashd` that needs to be updated:\r\n\r\n- [ ] `CTxMempool::IsRecentlyEvicted`",
          "user": {
            "login": "str4d",
            "id": 4993799,
            "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/str4d",
            "html_url": "https://github.com/str4d",
            "followers_url": "https://api.github.com/users/str4d/followers",
            "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
            "organizations_url": "https://api.github.com/users/str4d/orgs",
            "repos_url": "https://api.github.com/users/str4d/repos",
            "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/str4d/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 437876506,
              "node_id": "MDU6TGFiZWw0Mzc4NzY1MDY=",
              "url": "https://api.github.com/repos/zcash/zcash/labels/I-dos",
              "name": "I-dos",
              "description": "Problems and improvements with respect to Denial-of-Service.",
              "color": "e10c02",
              "default": false
            },
            {
              "id": 2381035266,
              "node_id": "MDU6TGFiZWwyMzgxMDM1MjY2",
              "url": "https://api.github.com/repos/zcash/zcash/labels/NU5",
              "name": "NU5",
              "description": "Network upgrade: NU5-specific tasks",
              "color": "a0ed74",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "created_at": "2021-05-28T17:16:20Z",
          "updated_at": "2022-08-08T14:37:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "str4d",
        "id": 4993799,
        "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/str4d",
        "html_url": "https://github.com/str4d",
        "followers_url": "https://api.github.com/users/str4d/followers",
        "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
        "organizations_url": "https://api.github.com/users/str4d/orgs",
        "repos_url": "https://api.github.com/users/str4d/repos",
        "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/str4d/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-05-28T17:18:25Z",
      "updated_at": "2021-05-28T17:18:25Z",
      "source": {
        "issue": {
          "id": 905772131,
          "node_id": "MDU6SXNzdWU5MDU3NzIxMzE=",
          "url": "https://api.github.com/repos/zcash/zcash/issues/5199",
          "repository_url": "https://api.github.com/repos/zcash/zcash",
          "labels_url": "https://api.github.com/repos/zcash/zcash/issues/5199/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/zcash/zcash/issues/5199/comments",
          "events_url": "https://api.github.com/repos/zcash/zcash/issues/5199/events",
          "html_url": "https://github.com/zcash/zcash/issues/5199",
          "number": 5199,
          "state": "closed",
          "state_reason": "completed",
          "title": "[ZIP 239] Relay v5+ transactions with a (txid, auth_digest) tuple (or digest thereof)",
          "body": "ZIP 244 changes how txids are derived (for v5 txs onward), to enable committing to the _effects_ of a transaction separately from its specific contents (as auth data can be malleated, e.g. re-signing a transaction). The places where `zcashd` assumes a `txid` has this effect-committing property, don't need to be changed.\r\n\r\nHowever, `zcashd` _also_ assumes a `txid` has an instance-committing property in other places, such as for mempool DoS prevention, as well as potentially other places inherited from `bitcoind`. If these use txids for v5 transactions, there is a user DoS problem:\r\n\r\n- User submits a valid v5 transaction to the network.\r\n- An adversary manipulates the authorizing data for the in-flight transaction, making it invalid.\r\n- `zcashd` nodes reject the transaction as invalid, and add its `txid` to the recently-rejected list.\r\n- The user cannot resubmit their transaction because its txid is blocked.\r\n\r\nUpstream had a similar problem for SegWit transactions, which they addressed four years after deploying SegWit by adding P2P support for relaying transactions via `wtxid` ([BIP 339](https://github.com/bitcoin/bips/blob/master/bip-0339.mediawiki), [impl](https://github.com/bitcoin/bitcoin/pull/18044)). This works because `wtxid` is a commitment to a Bitcoin SegWit transaction _instance_, including effecting data.\r\n\r\nIn our case, we opted in ZIP 244 to instead have an `auth_digest` that commits to just the authorizing data of a transaction. The tuple `(txid, auth_digest)` is our equivalent of Bitcoin's `wtxid`. We should use this tuple wherever we need to reference a transaction instance.\r\n\r\n---\r\n\r\nFor the `zcashd`-internal changes, see #5198. This issue is for the changes to the P2P network, such as adapting BIP 339.",
          "user": {
            "login": "str4d",
            "id": 4993799,
            "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/str4d",
            "html_url": "https://github.com/str4d",
            "followers_url": "https://api.github.com/users/str4d/followers",
            "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
            "organizations_url": "https://api.github.com/users/str4d/orgs",
            "repos_url": "https://api.github.com/users/str4d/repos",
            "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/str4d/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 166754268,
              "node_id": "MDU6TGFiZWwxNjY3NTQyNjg=",
              "url": "https://api.github.com/repos/zcash/zcash/labels/C-upstream-port",
              "name": "C-upstream-port",
              "description": "Category: Changes that are ported from the Bitcoin Core codebase.",
              "color": "f5f1fd",
              "default": false
            },
            {
              "id": 415123979,
              "node_id": "MDU6TGFiZWw0MTUxMjM5Nzk=",
              "url": "https://api.github.com/repos/zcash/zcash/labels/A-networking",
              "name": "A-networking",
              "description": "Area: Networking code",
              "color": "f7e101",
              "default": false
            },
            {
              "id": 437876506,
              "node_id": "MDU6TGFiZWw0Mzc4NzY1MDY=",
              "url": "https://api.github.com/repos/zcash/zcash/labels/I-dos",
              "name": "I-dos",
              "description": "Problems and improvements with respect to Denial-of-Service.",
              "color": "e10c02",
              "default": false
            },
            {
              "id": 452089003,
              "node_id": "MDU6TGFiZWw0NTIwODkwMDM=",
              "url": "https://api.github.com/repos/zcash/zcash/labels/M-requires-zip",
              "name": "M-requires-zip",
              "description": "This change would need to be specified in a ZIP.",
              "color": "f799ea",
              "default": false
            },
            {
              "id": 1728707252,
              "node_id": "MDU6TGFiZWwxNzI4NzA3MjUy",
              "url": "https://api.github.com/repos/zcash/zcash/labels/S-committed",
              "name": "S-committed",
              "description": "Status: Planned work in a sprint",
              "color": "1d76db",
              "default": false
            },
            {
              "id": 2381035266,
              "node_id": "MDU6TGFiZWwyMzgxMDM1MjY2",
              "url": "https://api.github.com/repos/zcash/zcash/labels/NU5",
              "name": "NU5",
              "description": "Network upgrade: NU5-specific tasks",
              "color": "a0ed74",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/zcash/zcash/milestones/171",
            "html_url": "https://github.com/zcash/zcash/milestone/171",
            "labels_url": "https://api.github.com/repos/zcash/zcash/milestones/171/labels",
            "id": 7147715,
            "node_id": "MI_kwDOAZvKKc4AbRDD",
            "number": 171,
            "state": "closed",
            "title": "Core Sprint 2021-36",
            "description": "",
            "creator": {
              "login": "r3ld3v",
              "id": 57410303,
              "node_id": "MDQ6VXNlcjU3NDEwMzAz",
              "avatar_url": "https://avatars.githubusercontent.com/u/57410303?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/r3ld3v",
              "html_url": "https://github.com/r3ld3v",
              "followers_url": "https://api.github.com/users/r3ld3v/followers",
              "following_url": "https://api.github.com/users/r3ld3v/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/r3ld3v/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/r3ld3v/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/r3ld3v/subscriptions",
              "organizations_url": "https://api.github.com/users/r3ld3v/orgs",
              "repos_url": "https://api.github.com/users/r3ld3v/repos",
              "events_url": "https://api.github.com/users/r3ld3v/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/r3ld3v/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 19,
            "created_at": "2021-09-13T15:05:41Z",
            "updated_at": "2021-12-16T15:23:45Z",
            "closed_at": "2021-09-27T14:52:00Z",
            "due_on": "2021-09-22T07:00:00Z"
          },
          "locked": false,
          "comments": 2,
          "closed_at": "2021-09-16T13:08:12Z",
          "created_at": "2021-05-28T17:18:24Z",
          "updated_at": "2021-09-16T13:08:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "str4d",
        "id": 4993799,
        "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/str4d",
        "html_url": "https://github.com/str4d",
        "followers_url": "https://api.github.com/users/str4d/followers",
        "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
        "organizations_url": "https://api.github.com/users/str4d/orgs",
        "repos_url": "https://api.github.com/users/str4d/repos",
        "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/str4d/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-09T00:20:49Z",
      "updated_at": "2021-09-09T00:20:49Z",
      "source": {
        "issue": {
          "id": 991632217,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzMwMDY5OTMw",
          "url": "https://api.github.com/repos/zcash/zcash/issues/5291",
          "repository_url": "https://api.github.com/repos/zcash/zcash",
          "labels_url": "https://api.github.com/repos/zcash/zcash/issues/5291/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/zcash/zcash/issues/5291/comments",
          "events_url": "https://api.github.com/repos/zcash/zcash/issues/5291/events",
          "html_url": "https://github.com/zcash/zcash/pull/5291",
          "number": 5291,
          "state": "closed",
          "state_reason": null,
          "title": "ZIP 239 support",
          "body": "Adapted in part from bitcoin/bitcoin#18044.\r\n- Zcash wtxid is different in structure from Bitcoin but similar in intent.\r\n\r\nCloses zcash/zcash#5260.\r\nCloses zcash/zcash#5261.",
          "user": {
            "login": "str4d",
            "id": 4993799,
            "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/str4d",
            "html_url": "https://github.com/str4d",
            "followers_url": "https://api.github.com/users/str4d/followers",
            "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
            "organizations_url": "https://api.github.com/users/str4d/orgs",
            "repos_url": "https://api.github.com/users/str4d/repos",
            "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/str4d/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 415123979,
              "node_id": "MDU6TGFiZWw0MTUxMjM5Nzk=",
              "url": "https://api.github.com/repos/zcash/zcash/labels/A-networking",
              "name": "A-networking",
              "description": "Area: Networking code",
              "color": "f7e101",
              "default": false
            },
            {
              "id": 2381035266,
              "node_id": "MDU6TGFiZWwyMzgxMDM1MjY2",
              "url": "https://api.github.com/repos/zcash/zcash/labels/NU5",
              "name": "NU5",
              "description": "Network upgrade: NU5-specific tasks",
              "color": "a0ed74",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/zcash/zcash/milestones/171",
            "html_url": "https://github.com/zcash/zcash/milestone/171",
            "labels_url": "https://api.github.com/repos/zcash/zcash/milestones/171/labels",
            "id": 7147715,
            "node_id": "MI_kwDOAZvKKc4AbRDD",
            "number": 171,
            "state": "closed",
            "title": "Core Sprint 2021-36",
            "description": "",
            "creator": {
              "login": "r3ld3v",
              "id": 57410303,
              "node_id": "MDQ6VXNlcjU3NDEwMzAz",
              "avatar_url": "https://avatars.githubusercontent.com/u/57410303?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/r3ld3v",
              "html_url": "https://github.com/r3ld3v",
              "followers_url": "https://api.github.com/users/r3ld3v/followers",
              "following_url": "https://api.github.com/users/r3ld3v/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/r3ld3v/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/r3ld3v/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/r3ld3v/subscriptions",
              "organizations_url": "https://api.github.com/users/r3ld3v/orgs",
              "repos_url": "https://api.github.com/users/r3ld3v/repos",
              "events_url": "https://api.github.com/users/r3ld3v/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/r3ld3v/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 19,
            "created_at": "2021-09-13T15:05:41Z",
            "updated_at": "2021-12-16T15:23:45Z",
            "closed_at": "2021-09-27T14:52:00Z",
            "due_on": "2021-09-22T07:00:00Z"
          },
          "locked": false,
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/zcash/zcash/pulls/5291",
            "html_url": "https://github.com/zcash/zcash/pull/5291",
            "diff_url": "https://github.com/zcash/zcash/pull/5291.diff",
            "patch_url": "https://github.com/zcash/zcash/pull/5291.patch"
          },
          "closed_at": "2021-09-15T15:08:26Z",
          "created_at": "2021-09-09T00:20:03Z",
          "updated_at": "2021-09-15T15:08:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 5341386453,
      "node_id": "REFE_lADOABII584hRhVvzwAAAAE-XxbV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5341386453",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8ea2e27baa2484bd1d177e86c30fef406f1332c1",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/8ea2e27baa2484bd1d177e86c30fef406f1332c1",
      "created_at": "2021-09-22T08:20:05Z"
    },
    {
      "event": "locked",
      "id": 6073990071,
      "node_id": "LOE_lADOABII584hRhVvzwAAAAFqCbu3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073990071",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T11:00:43Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373735577",
      "pull_request_review_id": 351841019,
      "id": 373735577,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczNTU3Nw==",
      "diff_hunk": "@@ -1601,12 +1632,13 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             // Send stream from relay memory\n             bool push = false;\n             auto mi = mapRelay.find(inv.hash);\n+            // WTX and WITNESS_TX imply we serialize with witness\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             if (mi != mapRelay.end()) {\n                 connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second));\n                 push = true;\n             } else {\n-                auto txinfo = mempool.info(inv.hash);\n+                auto txinfo = mempool.info(inv.hash, it->type == MSG_WTX);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 197,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "310aafa76bc460f05ff061d24eb8ea6954a54fe4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're dereferencing `it` here after it has been incremented (see Travis failure). I think you want to use `inv.type` instead.",
      "created_at": "2020-02-01T00:02:11Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r373735577",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373735577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1641,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373775307",
      "pull_request_review_id": 351880462,
      "id": 373775307,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc3NTMwNw==",
      "diff_hunk": "@@ -1601,12 +1632,13 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             // Send stream from relay memory\n             bool push = false;\n             auto mi = mapRelay.find(inv.hash);\n+            // WTX and WITNESS_TX imply we serialize with witness\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             if (mi != mapRelay.end()) {\n                 connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second));\n                 push = true;\n             } else {\n-                auto txinfo = mempool.info(inv.hash);\n+                auto txinfo = mempool.info(inv.hash, it->type == MSG_WTX);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 197,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "310aafa76bc460f05ff061d24eb8ea6954a54fe4",
      "in_reply_to_id": 373735577,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, fixed.",
      "created_at": "2020-02-01T11:37:12Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r373775307",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373775307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1641,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373775416",
      "pull_request_review_id": 351880546,
      "id": 373775416,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc3NTQxNg==",
      "diff_hunk": "@@ -2175,6 +2175,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             nCMPCTBLOCKVersion = 1;\n             connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n         }\n+\n+        if (pfrom->nVersion >= WTXID_RELAY_VERSION) {\n+            connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::WTXIDRELAY));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "ee29e7debcb14fa335e8482888a5cc0294bb8dc8",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wonder if this should be sent immediately in response to a VERSION message, rather than in response to a VERACK.  It looks like the way I've done it here creates a race condition where a peer could send a txid-based inv to us before it gets this message, which I think would cause relay of that transaction to fail.\r\n\r\nhttps://travis-ci.org/bitcoin/bitcoin/jobs/644609638?utm_medium=notification&utm_source=github_status",
      "created_at": "2020-02-01T11:39:03Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r373775416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373775416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2180,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/374576703",
      "pull_request_review_id": 352852514,
      "id": 374576703,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU3NjcwMw==",
      "diff_hunk": "@@ -4057,7 +4132,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n             // Erase this entry from tx_process_time (it may be added back for\n             // processing at a later time, see below)\n             tx_process_time.erase(tx_process_time.begin());\n-            CInv inv(MSG_TX | GetFetchFlags(pto), txid);\n+            CInv inv(state.m_wtxid_relay ? MSG_WTX : (MSG_TX | GetFetchFlags(pto)), txid);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 449,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "fd2c3f257e416323dc6cc1351af65a4026057716",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seeing a build warning here:\r\n```\r\nnet_processing.cpp: In member function ‘virtual bool PeerLogicValidation::SendMessages(CNode*)’:\r\nnet_processing.cpp:4135:42: warning: enumeral and non-enumeral type in conditional expression [-Wextra]\r\n             CInv inv(state.m_wtxid_relay ? MSG_WTX : (MSG_TX | GetFetchFlags(pto)), txid);\r\n                      ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n```",
      "created_at": "2020-02-04T10:04:03Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r374576703",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/374576703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4139,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/374697402",
      "pull_request_review_id": 353010926,
      "id": 374697402,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY5NzQwMg==",
      "diff_hunk": "@@ -4057,7 +4132,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n             // Erase this entry from tx_process_time (it may be added back for\n             // processing at a later time, see below)\n             tx_process_time.erase(tx_process_time.begin());\n-            CInv inv(MSG_TX | GetFetchFlags(pto), txid);\n+            CInv inv(state.m_wtxid_relay ? MSG_WTX : (MSG_TX | GetFetchFlags(pto)), txid);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 449,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "fd2c3f257e416323dc6cc1351af65a4026057716",
      "in_reply_to_id": 374576703,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah I saw that too, but I think the code is correct?",
      "created_at": "2020-02-04T14:21:25Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r374697402",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/374697402"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4139,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/374699185",
      "pull_request_review_id": 353013332,
      "id": 374699185,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY5OTE4NQ==",
      "diff_hunk": "@@ -3927,6 +3997,11 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                             if (ret.second) {\n                                 vRelayExpiration.push_back(std::make_pair(nNow + std::chrono::microseconds{RELAY_TX_CACHE_TIME}.count(), ret.first));\n                             }\n+                            // Add wtxid-based lookup into mapRelay as well, so that peers can request by wtxid\n+                            auto ret2 = mapRelay.insert(std::make_pair(ret.first->second->GetWitnessHash(), ret.first->second));\n+                            if (ret2.second) {\n+                                vRelayExpiration.push_back(std::make_pair(nNow + std::chrono::microseconds{RELAY_TX_CACHE_TIME}.count(), ret2.first));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 439,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "fd2c3f257e416323dc6cc1351af65a4026057716",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it be a good idea to fetch `nNow + std::chrono::microseconds{RELAY_TX_CACHE_TIME}.count()` once and use the same value for both relay expirations?",
      "created_at": "2020-02-04T14:24:25Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r374699185",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/374699185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4020,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/374846097",
      "pull_request_review_id": 353203516,
      "id": 374846097,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg0NjA5Nw==",
      "diff_hunk": "@@ -2604,14 +2604,15 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // We will continue to reject this tx since it has rejected\n                 // parents so avoid re-requesting it from other peers.\n                 recentRejects->insert(tx.GetHash());\n+                recentRejects->insert(tx.GetWitnessHash());\n             }\n         } else {\n-            if (!tx.HasWitness() && state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n+            if (tx.HasWitness() || state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n                 // Do not use rejection cache for witness transactions or\n                 // witness-stripped transactions, as they can have been malleated.\n                 // See https://github.com/bitcoin/bitcoin/issues/8279 for details.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "fb1b69dba63ff9911a2520cdae8f5aab78f26ec0",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Doesn't this comment needs update in light of the changed condition? We are now accepting txs containg witness in recentRejects.  ",
      "created_at": "2020-02-04T18:29:58Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r374846097",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/374846097"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": 2611,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2613,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376195717",
      "pull_request_review_id": 354909544,
      "id": 376195717,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE5NTcxNw==",
      "diff_hunk": "@@ -4057,7 +4132,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n             // Erase this entry from tx_process_time (it may be added back for\n             // processing at a later time, see below)\n             tx_process_time.erase(tx_process_time.begin());\n-            CInv inv(MSG_TX | GetFetchFlags(pto), txid);\n+            CInv inv(state.m_wtxid_relay ? MSG_WTX : (MSG_TX | GetFetchFlags(pto)), txid);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 449,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "fd2c3f257e416323dc6cc1351af65a4026057716",
      "in_reply_to_id": 374576703,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it's treating `MSG_WTX` as `enum GetDataMsg` and `MSG_TX | GetFetchFlags()` as `uint32_t` (match `GetFetchFlags` return type). Changing `GetFetchFlags()` to return `GetDataMsg` (and casting its result correspondingly), and making it `enum GetDataMsg : uint32_t` makes the warning go away. Actually, just saying `enum GetDataMsg : uint32_t` makes the warning go away too by the looks.",
      "created_at": "2020-02-07T03:12:30Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r376195717",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376195717"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4139,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378570286",
      "pull_request_review_id": 357860151,
      "id": 378570286,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU3MDI4Ng==",
      "diff_hunk": "@@ -690,8 +713,19 @@ class CTxMemPool\n         return (mapTx.count(hash) != 0);\n     }\n \n+    bool wtxid_exists(const uint256& hash) const\n+    {\n+        LOCK(cs);\n+        return (mapTx.get<index_by_wtxid>().count(hash) != 0);\n+    }\n+\n     CTransactionRef get(const uint256& hash) const;\n-    TxMempoolInfo info(const uint256& hash) const;\n+    indexed_transaction_set::const_iterator get_iter_from_wtxid(const uint256& wtxid) const",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 65,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How is  indexed_transaction_set::const_iterator different than txindex?",
      "created_at": "2020-02-12T23:22:17Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r378570286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378570286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 723,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378572903",
      "pull_request_review_id": 357860151,
      "id": 378572903,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU3MjkwMw==",
      "diff_hunk": "@@ -954,11 +954,11 @@ class CNode\n     }\n \n \n-    void AddInventoryKnown(const CInv& inv)\n+    void AddInventoryKnown(const uint256& hash)",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "9377e308a7e236aa807461795cd2ccd08e6a6a8b",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can we rename the function, then?",
      "created_at": "2020-02-12T23:30:34Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r378572903",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378572903"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 957,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378574214",
      "pull_request_review_id": 357860151,
      "id": 378574214,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU3NDIxNA==",
      "diff_hunk": "@@ -363,7 +369,8 @@ enum GetDataMsg\n     UNDEFINED = 0,\n     MSG_TX = 1,\n     MSG_BLOCK = 2,\n-    // The following can only occur in getdata. Invs always use TX or BLOCK.\n+    MSG_WTX = 5, // Defined in BIP XXX",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 18,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "WITNESS_TX and WTX read a little bit too close for comfort. I don't think the extra characters to write a useful name cost us much :p.",
      "created_at": "2020-02-12T23:34:54Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r378574214",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378574214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 372,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378581343",
      "pull_request_review_id": 357860151,
      "id": 378581343,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4MTM0Mw==",
      "diff_hunk": "@@ -1184,6 +1204,7 @@ void PeerLogicValidation::BlockConnected(const std::shared_ptr<const CBlock>& pb\n         LOCK(g_cs_recent_confirmed_transactions);\n         for (const auto ptx : pblock->vtx) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 127,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not (this pr's) your bug, but clang complains that you're copying shared_ptrs on every iteration and you should add a &.",
      "created_at": "2020-02-12T23:58:43Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r378581343",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378581343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378581882",
      "pull_request_review_id": 357860151,
      "id": 378581882,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4MTg4Mg==",
      "diff_hunk": "@@ -92,6 +94,7 @@ struct COrphanTx {\n };\n RecursiveMutex g_cs_orphans;\n std::map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(g_cs_orphans);\n+std::map<uint256, std::map<uint256, COrphanTx>::iterator> g_orphans_by_wtxid GUARDED_BY(g_cs_orphans);",
      "path": "src/net_processing.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You should probably wipe this in ~CNetProcessingCleanup() like we do the other orphan fields, but, also, why the hell is that thing even there...",
      "created_at": "2020-02-13T00:00:31Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r378581882",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378581882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 156,
      "original_line": 156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378586250",
      "pull_request_review_id": 357860151,
      "id": 378586250,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4NjI1MA==",
      "diff_hunk": "@@ -1910,12 +1943,18 @@ void static ProcessOrphanTx(CConnman* connman, std::set<uint256>& orphan_work_se\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (!orphanTx.HasWitness() && orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (orphanTx.HasWitness() || orphan_state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 226,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would this be any different if it were *just* orphan_state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED?",
      "created_at": "2020-02-13T00:16:17Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r378586250",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378586250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1946,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378586654",
      "pull_request_review_id": 357860151,
      "id": 378586654,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4NjY1NA==",
      "diff_hunk": "@@ -1910,12 +1943,18 @@ void static ProcessOrphanTx(CConnman* connman, std::set<uint256>& orphan_work_se\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (!orphanTx.HasWitness() && orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (orphanTx.HasWitness() || orphan_state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped\n+                // transactions to the filter, as they can have been malleated;\n+                // adding such txids to the reject filter would potentially\n+                // interfere with relay of valid transactions from peers that\n+                // do not support wtxid-based relay. See\n+                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+                // We can remove this restriction (and always add wtxids to\n+                // the filter even for witness tripped transactions) once",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 234,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/tripped/stripped/, but, more importantly, can we? Wouldn't that allow an attacker to see an 0.19 client's inv, request the tx without delay (unlike its other peers), then spam the network with the witness-stripped version, preventing relay of that transaction. At least as long as we dont ban for TX_WITNESS_STRIPPED.",
      "created_at": "2020-02-13T00:17:42Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r378586654",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378586654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1954,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378851243",
      "pull_request_review_id": 358204455,
      "id": 378851243,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg1MTI0Mw==",
      "diff_hunk": "@@ -363,7 +369,8 @@ enum GetDataMsg\n     UNDEFINED = 0,\n     MSG_TX = 1,\n     MSG_BLOCK = 2,\n-    // The following can only occur in getdata. Invs always use TX or BLOCK.\n+    MSG_WTX = 5, // Defined in BIP XXX",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 18,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": 378574214,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Suggestions?",
      "created_at": "2020-02-13T13:14:34Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r378851243",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378851243"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 372,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378858979",
      "pull_request_review_id": 358214364,
      "id": 378858979,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg1ODk3OQ==",
      "diff_hunk": "@@ -1910,12 +1943,18 @@ void static ProcessOrphanTx(CConnman* connman, std::set<uint256>& orphan_work_se\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (!orphanTx.HasWitness() && orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (orphanTx.HasWitness() || orphan_state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped\n+                // transactions to the filter, as they can have been malleated;\n+                // adding such txids to the reject filter would potentially\n+                // interfere with relay of valid transactions from peers that\n+                // do not support wtxid-based relay. See\n+                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+                // We can remove this restriction (and always add wtxids to\n+                // the filter even for witness tripped transactions) once",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 234,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": 378586654,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "From a single node's perspective, as long as you have at least 1 honest wtxid-relay peer, such an attack would not work, because the wtxid for the honest version of the transaction would not be added to your filter (only the txid), and so you would eventually request the valid version of the transaction from your honest wtxid-relay peer.\r\n\r\nCurrently we preference outbound peers for transaction download, so once we believe that some sufficient majority of listening nodes support wtxid-relay, such that the chances of having 0 or just a few wtxid-relay-outbound-peers is pretty small, then I think we can just get rid of this.  \r\n\r\nI don't think our threat model has ever really been too concerned with every node getting every transaction, anyway -- we just don't want the network as a whole to not relay a transaction altogether because of something like this.  So exactly how long we should wait before dropping this logic is debatable IMO; anyway we should defer the debate to the future when someone thinks this is ready. ",
      "created_at": "2020-02-13T13:29:39Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r378858979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378858979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1954,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380426287",
      "pull_request_review_id": 360037046,
      "id": 380426287,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQyNjI4Nw==",
      "diff_hunk": "@@ -1184,6 +1204,7 @@ void PeerLogicValidation::BlockConnected(const std::shared_ptr<const CBlock>& pb\n         LOCK(g_cs_recent_confirmed_transactions);\n         for (const auto ptx : pblock->vtx) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 127,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": 378581343,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(this is already fixed on master, so a rebase would solve it)",
      "created_at": "2020-02-18T02:22:45Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r380426287",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380426287"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384694065",
      "pull_request_review_id": 365154543,
      "id": 384694065,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5NDA2NQ==",
      "diff_hunk": "@@ -4057,7 +4132,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n             // Erase this entry from tx_process_time (it may be added back for\n             // processing at a later time, see below)\n             tx_process_time.erase(tx_process_time.begin());\n-            CInv inv(MSG_TX | GetFetchFlags(pto), txid);\n+            CInv inv(state.m_wtxid_relay ? MSG_WTX : (MSG_TX | GetFetchFlags(pto)), txid);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 449,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "fd2c3f257e416323dc6cc1351af65a4026057716",
      "in_reply_to_id": 374576703,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated with the `enum GetDataMsg : uint32_t` fix, thanks.",
      "created_at": "2020-02-26T18:52:58Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r384694065",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384694065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4139,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384694231",
      "pull_request_review_id": 365154772,
      "id": 384694231,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5NDIzMQ==",
      "diff_hunk": "@@ -690,8 +713,19 @@ class CTxMemPool\n         return (mapTx.count(hash) != 0);\n     }\n \n+    bool wtxid_exists(const uint256& hash) const\n+    {\n+        LOCK(cs);\n+        return (mapTx.get<index_by_wtxid>().count(hash) != 0);\n+    }\n+\n     CTransactionRef get(const uint256& hash) const;\n-    TxMempoolInfo info(const uint256& hash) const;\n+    indexed_transaction_set::const_iterator get_iter_from_wtxid(const uint256& wtxid) const",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 65,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": 378570286,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2020-02-26T18:53:16Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r384694231",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384694231"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 723,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384694296",
      "pull_request_review_id": 365154867,
      "id": 384694296,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5NDI5Ng==",
      "diff_hunk": "@@ -954,11 +954,11 @@ class CNode\n     }\n \n \n-    void AddInventoryKnown(const CInv& inv)\n+    void AddInventoryKnown(const uint256& hash)",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "9377e308a7e236aa807461795cd2ccd08e6a6a8b",
      "in_reply_to_id": 378572903,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-02-26T18:53:24Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r384694296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384694296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 957,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384694706",
      "pull_request_review_id": 365155345,
      "id": 384694706,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5NDcwNg==",
      "diff_hunk": "@@ -92,6 +94,7 @@ struct COrphanTx {\n };\n RecursiveMutex g_cs_orphans;\n std::map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(g_cs_orphans);\n+std::map<uint256, std::map<uint256, COrphanTx>::iterator> g_orphans_by_wtxid GUARDED_BY(g_cs_orphans);",
      "path": "src/net_processing.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": 378581882,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks.\r\n\r\nNot sure exactly what you're asking but it seemed easier to add an additional map, rather than change the existing data structure to support wtxid-lookup.",
      "created_at": "2020-02-26T18:54:06Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r384694706",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384694706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 156,
      "original_line": 156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384694860",
      "pull_request_review_id": 365155554,
      "id": 384694860,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5NDg2MA==",
      "diff_hunk": "@@ -1910,12 +1943,18 @@ void static ProcessOrphanTx(CConnman* connman, std::set<uint256>& orphan_work_se\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (!orphanTx.HasWitness() && orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (orphanTx.HasWitness() || orphan_state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 226,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": 378586250,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nope, would not be different.  Fixed.",
      "created_at": "2020-02-26T18:54:23Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r384694860",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384694860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1946,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384862855",
      "pull_request_review_id": 365357115,
      "id": 384862855,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2Mjg1NQ==",
      "diff_hunk": "@@ -2154,10 +2197,24 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             nCMPCTBLOCKVersion = 1;\n             connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n         }\n+\n         pfrom->fSuccessfullyConnected = true;\n         return true;\n     }\n \n+    // Feature negotiation of wtxidrelay should happen between VERSION and\n+    // VERACK, to avoid relay problems from switching after a connection is up",
      "path": "src/net_processing.cpp",
      "position": 330,
      "original_position": 263,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment is slightly confusing to me. If you setting this expectation here, maybe you want to enforce the rule in the code? Track whether VERACK was not received or something.",
      "created_at": "2020-02-27T01:17:24Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r384862855",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384862855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2517,
      "original_line": 2517,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385362270",
      "pull_request_review_id": 365986399,
      "id": 385362270,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM2MjI3MA==",
      "diff_hunk": "@@ -912,8 +912,8 @@ bool CCoinsViewMemPool::GetCoin(const COutPoint &outpoint, Coin &coin) const {\n \n size_t CTxMemPool::DynamicMemoryUsage() const {\n     LOCK(cs);\n-    // Estimate the overhead of mapTx to be 12 pointers + an allocation, as no exact formula for boost::multi_index_contained is implemented.\n-    return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 12 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(mapLinks) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage;\n+    // Estimate the overhead of mapTx to be 15 pointers + an allocation, as no exact formula for boost::multi_index_contained is implemented.",
      "path": "src/txmempool.cpp",
      "position": 35,
      "original_position": 35,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1d1fddb9790cb3b9a70df5370a71ac245491b71c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "54d58e7\r\n\r\n3 new pointers for `boost::multi_index::tag<index_by_wtxid>, mempoolentry_wtxid, SaltedTxidHasher`, not one for new `boost::multi_index::hashed_unique` ? ",
      "created_at": "2020-02-27T20:47:40Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r385362270",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385362270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 920,
      "original_line": 920,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385428189",
      "pull_request_review_id": 365986399,
      "id": 385428189,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyODE4OQ==",
      "diff_hunk": "@@ -92,6 +94,7 @@ struct COrphanTx {\n };\n RecursiveMutex g_cs_orphans;\n std::map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(g_cs_orphans);\n+std::map<uint256, std::map<uint256, COrphanTx>::iterator> g_orphans_by_wtxid GUARDED_BY(g_cs_orphans);",
      "path": "src/net_processing.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": 378581882,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What would be the challenges to switch mapOrphanTransactions to wtxid-only? It's just an internal structure, do we use it to interact with our peers ? (and even you can  translate backward there)",
      "created_at": "2020-02-27T23:23:19Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r385428189",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385428189"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 156,
      "original_line": 156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385437587",
      "pull_request_review_id": 365986399,
      "id": 385437587,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzNzU4Nw==",
      "diff_hunk": "@@ -363,7 +369,8 @@ enum GetDataMsg\n     UNDEFINED = 0,\n     MSG_TX = 1,\n     MSG_BLOCK = 2,\n-    // The following can only occur in getdata. Invs always use TX or BLOCK.\n+    MSG_WTX = 5, // Defined in BIP XXX",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 18,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": 378574214,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would be okay with MSG_WTXID to mark we only deal with tx identifier not a specific new data structure, we already have a GetDataMsg for the transaction and its witness.",
      "created_at": "2020-02-27T23:54:03Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r385437587",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385437587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 372,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385439388",
      "pull_request_review_id": 365986399,
      "id": 385439388,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzOTM4OA==",
      "diff_hunk": "@@ -230,6 +230,12 @@ extern const char *GETBLOCKTXN;\n  * @since protocol version 70014 as described by BIP 152\n  */\n extern const char *BLOCKTXN;\n+/**\n+ * Indicates that a node prefers to relay transactions via wtxid, rather than\n+ * txid.",
      "path": "src/protocol.h",
      "position": 6,
      "original_position": 6,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "021c5d392b6469596ba8eaa18c9ea01dafd9fdf0",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "d0f03e9\r\n\r\nIs this rule a best-effort right now? At tx reception, we may have to request parent based only on the input. If so is the BIP clear enough on the 5) ? Precise also there is no current sanction of the rule by receiver as of today",
      "created_at": "2020-02-27T23:59:43Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r385439388",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385439388"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 266,
      "original_line": 266,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385441278",
      "pull_request_review_id": 365986399,
      "id": 385441278,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ0MTI3OA==",
      "diff_hunk": "@@ -1942,10 +1943,16 @@ void static ProcessOrphanTx(CConnman* connman, std::set<uint256>& orphan_work_se\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (orphanTx.HasWitness() || orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (orphan_state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped\n+                // transactions to the filter, as they can have been malleated;\n+                // adding such txids to the reject filter would potentially\n+                // interfere with relay of valid transactions from peers that\n+                // do not support wtxid-based relay. See\n+                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+                // We can remove this restriction (and always add wtxids to\n+                // the filter even for witness stripped transactions) once\n+                // wtxid-based relay is broadly deployed.",
      "path": "src/net_processing.cpp",
      "position": 304,
      "original_position": 25,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "6e7290f8f830fbbe49f8578f5f4f3d52613c7056",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "cf8c70f\r\n\r\nFor context-tracking, would be fine to even further comment, \"right now if we reject witness transactions based on their txids, relying on wtxid-based relay peers might lead to a stripped-witness tx starvation due to the low number of wtxid-relay peers at protocol deployment\"\r\n\r\nAlso, once we reach a deployment meaningful enough, should we merge together TX_WITNESS_MUTATED and TX_WITNESS_STRIPPED ?",
      "created_at": "2020-02-28T00:06:12Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r385441278",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385441278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2054,
      "original_line": 2054,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387858917",
      "pull_request_review_id": 369026275,
      "id": 387858917,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg1ODkxNw==",
      "diff_hunk": "@@ -2154,10 +2197,24 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             nCMPCTBLOCKVersion = 1;\n             connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n         }\n+\n         pfrom->fSuccessfullyConnected = true;\n         return true;\n     }\n \n+    // Feature negotiation of wtxidrelay should happen between VERSION and\n+    // VERACK, to avoid relay problems from switching after a connection is up",
      "path": "src/net_processing.cpp",
      "position": 330,
      "original_position": 263,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": 384862855,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What to do in that case?  We could disconnect the peer for violating the spec, or ignore the message and not switch to wtxid relay, but I thought trying to do wtxid-relay was the most practical, as it should mostly work (just things that were announced earlier might not be successfully requested).  Maybe it's better to not tolerate any kind of bugs though, so that implementations get all this stuff right?",
      "created_at": "2020-03-04T18:40:53Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r387858917",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387858917"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2517,
      "original_line": 2517,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388444497",
      "pull_request_review_id": 369765705,
      "id": 388444497,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ0NDQ5Nw==",
      "diff_hunk": "@@ -230,6 +230,12 @@ extern const char *GETBLOCKTXN;\n  * @since protocol version 70014 as described by BIP 152\n  */\n extern const char *BLOCKTXN;\n+/**\n+ * Indicates that a node prefers to relay transactions via wtxid, rather than\n+ * txid.",
      "path": "src/protocol.h",
      "position": 6,
      "original_position": 6,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "021c5d392b6469596ba8eaa18c9ea01dafd9fdf0",
      "in_reply_to_id": 385439388,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, you made a good observation -- our fetching of parents of orphan transactions must be by txid, rather than wtxid.  I did try to carefully word the BIP to avoid referencing this situation:\r\n\r\n> After a node has sent and received a \"wtxidrelay\" message to/from a given peer, the node is required to use the MSG_WTX inv-type when announcing transactions to that peer, or requesting announced transactions from that peer.\r\n\r\nSo the BIP says that newly announced transactions must be by wtxid.  And if your peer announces a transaction by wtxid, you must fetch it by wtxid (and not txid).  The BIP is silent on requests for transactions that are not announced -- we could make this explicit but this has never been documented behavior, and I'm not sure we should commit to a certain handling of this kind of thing anyway...  But open to suggestions.",
      "created_at": "2020-03-05T17:23:07Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r388444497",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388444497"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 266,
      "original_line": 266,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388445400",
      "pull_request_review_id": 369766876,
      "id": 388445400,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ0NTQwMA==",
      "diff_hunk": "@@ -1942,10 +1943,16 @@ void static ProcessOrphanTx(CConnman* connman, std::set<uint256>& orphan_work_se\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (orphanTx.HasWitness() || orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (orphan_state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped\n+                // transactions to the filter, as they can have been malleated;\n+                // adding such txids to the reject filter would potentially\n+                // interfere with relay of valid transactions from peers that\n+                // do not support wtxid-based relay. See\n+                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+                // We can remove this restriction (and always add wtxids to\n+                // the filter even for witness stripped transactions) once\n+                // wtxid-based relay is broadly deployed.",
      "path": "src/net_processing.cpp",
      "position": 304,
      "original_position": 25,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "6e7290f8f830fbbe49f8578f5f4f3d52613c7056",
      "in_reply_to_id": 385441278,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In the future, I think I'd like to eventually get rid of WITNESS_STRIPPED as a reason that validation returns, because we incur non-trivial CPU usage in order to make the determination of whether a transaction might be WITNESS_STRIPPED.\r\n\r\n",
      "created_at": "2020-03-05T17:24:42Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r388445400",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388445400"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2054,
      "original_line": 2054,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388481642",
      "pull_request_review_id": 369812647,
      "id": 388481642,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4MTY0Mg==",
      "diff_hunk": "@@ -2154,10 +2197,24 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             nCMPCTBLOCKVersion = 1;\n             connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n         }\n+\n         pfrom->fSuccessfullyConnected = true;\n         return true;\n     }\n \n+    // Feature negotiation of wtxidrelay should happen between VERSION and\n+    // VERACK, to avoid relay problems from switching after a connection is up",
      "path": "src/net_processing.cpp",
      "position": 330,
      "original_position": 263,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": 384862855,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Disconnecting is too much, but ignoring the wtxid_relay message may be reasonable.\r\n\r\nAlternatively (and probably better), we can just make the comment more clear. Something like \"currently this is not enforced, because at most we get slight inefficiency if not following this rule\".\r\n\r\nAnd then the responsibility would be on the future developer to introduce the disconnect/ignore behavior if they choose to fundamentally rely on this assumption.",
      "created_at": "2020-03-05T18:31:29Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r388481642",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388481642"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2517,
      "original_line": 2517,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388504010",
      "pull_request_review_id": 369840075,
      "id": 388504010,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUwNDAxMA==",
      "diff_hunk": "@@ -230,6 +230,12 @@ extern const char *GETBLOCKTXN;\n  * @since protocol version 70014 as described by BIP 152\n  */\n extern const char *BLOCKTXN;\n+/**\n+ * Indicates that a node prefers to relay transactions via wtxid, rather than\n+ * txid.",
      "path": "src/protocol.h",
      "position": 6,
      "original_position": 6,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "021c5d392b6469596ba8eaa18c9ea01dafd9fdf0",
      "in_reply_to_id": 385439388,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I would amend the BIP to make its scope explicitly restrained. Add to 5) \"Note: this rule doesn't cover cases where a peer needs to request transaction for validation purposes but don't know its wtxid yet (e.g missing parents of a wtxid-announced child)\" ? At least to avoid someone raising same concern in the future and saying we don't commit on anything wrt to this issue.",
      "created_at": "2020-03-05T19:12:18Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r388504010",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388504010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 266,
      "original_line": 266,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388504839",
      "pull_request_review_id": 369840988,
      "id": 388504839,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUwNDgzOQ==",
      "diff_hunk": "@@ -1942,10 +1943,16 @@ void static ProcessOrphanTx(CConnman* connman, std::set<uint256>& orphan_work_se\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (orphanTx.HasWitness() || orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (orphan_state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped\n+                // transactions to the filter, as they can have been malleated;\n+                // adding such txids to the reject filter would potentially\n+                // interfere with relay of valid transactions from peers that\n+                // do not support wtxid-based relay. See\n+                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+                // We can remove this restriction (and always add wtxids to\n+                // the filter even for witness stripped transactions) once\n+                // wtxid-based relay is broadly deployed.",
      "path": "src/net_processing.cpp",
      "position": 304,
      "original_position": 25,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "6e7290f8f830fbbe49f8578f5f4f3d52613c7056",
      "in_reply_to_id": 385441278,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes that what I understood, you're thinking about the 2 `CheckInputScripts` in what is currently `PolicyScriptChecks`?",
      "created_at": "2020-03-05T19:13:39Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r388504839",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388504839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2054,
      "original_line": 2054,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388927279",
      "pull_request_review_id": 353013332,
      "id": 388927279,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyNzI3OQ==",
      "diff_hunk": "@@ -1910,12 +1943,18 @@ void static ProcessOrphanTx(CConnman* connman, std::set<uint256>& orphan_work_se\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (!orphanTx.HasWitness() && orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (orphan_state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped\n+                // transactions to the filter, as they can have been malleated;",
      "path": "src/net_processing.cpp",
      "position": 297,
      "original_position": 228,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/the filter/the recentRejects filter/ in 6e7290f to aid git grepping (in which case can drop \"reject\" in the next line).\r\n\r\nIdem for the section in `ProcessMessage()`::L2684 containing the same paragraph.",
      "created_at": "2020-03-06T14:18:39Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r388927279",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388927279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2047,
      "original_line": 2047,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389109682",
      "pull_request_review_id": 370583227,
      "id": 389109682,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEwOTY4Mg==",
      "diff_hunk": "@@ -1942,10 +1943,16 @@ void static ProcessOrphanTx(CConnman* connman, std::set<uint256>& orphan_work_se\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (orphanTx.HasWitness() || orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (orphan_state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped\n+                // transactions to the filter, as they can have been malleated;\n+                // adding such txids to the reject filter would potentially\n+                // interfere with relay of valid transactions from peers that\n+                // do not support wtxid-based relay. See\n+                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+                // We can remove this restriction (and always add wtxids to\n+                // the filter even for witness stripped transactions) once\n+                // wtxid-based relay is broadly deployed.",
      "path": "src/net_processing.cpp",
      "position": 304,
      "original_position": 25,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "6e7290f8f830fbbe49f8578f5f4f3d52613c7056",
      "in_reply_to_id": 385441278,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes that's right.",
      "created_at": "2020-03-06T19:46:38Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r389109682",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389109682"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2054,
      "original_line": 2054,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389864907",
      "pull_request_review_id": 353013332,
      "id": 389864907,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NDkwNw==",
      "diff_hunk": "@@ -358,12 +364,13 @@ const uint32_t MSG_TYPE_MASK    = 0xffffffff >> 2;\n  * These numbers are defined by the protocol. When adding a new value, be sure\n  * to mention it in the respective BIP.\n  */\n-enum GetDataMsg\n+enum GetDataMsg : uint32_t",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 18,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Curious why the `uint32_t` enum type is being added; good practice?",
      "created_at": "2020-03-09T17:59:55Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r389864907",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389864907"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 367,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389956408",
      "pull_request_review_id": 353013332,
      "id": 389956408,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk1NjQwOA==",
      "diff_hunk": "@@ -69,6 +69,8 @@ static constexpr int HISTORICAL_BLOCK_AGE = 7 * 24 * 60 * 60;\n static constexpr int32_t MAX_PEER_TX_IN_FLIGHT = 100;\n /** Maximum number of announced transactions from a peer */\n static constexpr int32_t MAX_PEER_TX_ANNOUNCEMENTS = 2 * MAX_INV_SZ;\n+/** How many microseconds to delay requesting transactions via txids, if we have wtxid-relaying peers */",
      "path": "src/net_processing.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/microseconds/seconds/ in 068bf9f -- that said, there are several other static constexprs that are also described as `μs` but expressed in `s`.",
      "created_at": "2020-03-09T20:55:40Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r389956408",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389956408"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/390040001",
      "pull_request_review_id": 353013332,
      "id": 390040001,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA0MDAwMQ==",
      "diff_hunk": "@@ -467,6 +484,12 @@ class CTxMemPool\n         boost::multi_index::indexed_by<\n             // sorted by txid\n             boost::multi_index::hashed_unique<mempoolentry_txid, SaltedTxidHasher>,\n+            // sorted by wtxid",
      "path": "src/txmempool.h",
      "position": 47,
      "original_position": 35,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps update the documentation L403-404 above to mention sorting the mempool by both txid and wtxid transaction hashes (and 5 criteria rather than 4, depending on how you count it).",
      "created_at": "2020-03-10T00:56:40Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r390040001",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/390040001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 490,
      "original_line": 490,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/390362519",
      "pull_request_review_id": 372013913,
      "id": 390362519,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM2MjUxOQ==",
      "diff_hunk": "@@ -69,6 +69,8 @@ static constexpr int HISTORICAL_BLOCK_AGE = 7 * 24 * 60 * 60;\n static constexpr int32_t MAX_PEER_TX_IN_FLIGHT = 100;\n /** Maximum number of announced transactions from a peer */\n static constexpr int32_t MAX_PEER_TX_ANNOUNCEMENTS = 2 * MAX_INV_SZ;\n+/** How many microseconds to delay requesting transactions via txids, if we have wtxid-relaying peers */",
      "path": "src/net_processing.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": 389956408,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Because of this confusion I am generally not a fan of mentioning the type in the comment. I don't see why it's useful since ``std::chrono::microseconds`` definition is clear enough.",
      "created_at": "2020-03-10T14:38:57Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r390362519",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/390362519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/390368090",
      "pull_request_review_id": 372020907,
      "id": 390368090,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM2ODA5MA==",
      "diff_hunk": "@@ -363,7 +369,8 @@ enum GetDataMsg\n     UNDEFINED = 0,\n     MSG_TX = 1,\n     MSG_BLOCK = 2,\n-    // The following can only occur in getdata. Invs always use TX or BLOCK.\n+    MSG_WTX = 5, // Defined in BIP XXX",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 18,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": 378574214,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think MSG_WTXID is even more confusing than MSG_WTX. The suffix here represents an object being fetched. So TX or BLOCK with some type. MSG_WTXID would mean we are fetching an ID.\r\nThe only thing I can thing of is MSG_TX_BY_WTXID. But I'm also fine with MSG_WTX.",
      "created_at": "2020-03-10T14:46:01Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r390368090",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/390368090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 372,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/390383225",
      "pull_request_review_id": 372040091,
      "id": 390383225,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM4MzIyNQ==",
      "diff_hunk": "@@ -363,7 +369,8 @@ enum GetDataMsg\n     UNDEFINED = 0,\n     MSG_TX = 1,\n     MSG_BLOCK = 2,\n-    // The following can only occur in getdata. Invs always use TX or BLOCK.\n+    MSG_WTX = 5, // Defined in BIP XXX",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 18,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": 378574214,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe I've been staring at this for too long but I agree with @naumenkogs. I confused `MSG_TX` and `MSG_WTX` once during the first pass at reviewing a few weeks ago, but then I got used to it and I like its brevity. I think it's fine for now.",
      "created_at": "2020-03-10T15:05:06Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r390383225",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/390383225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 372,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392472822",
      "pull_request_review_id": 374616026,
      "id": 392472822,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ3MjgyMg==",
      "diff_hunk": "@@ -690,8 +713,19 @@ class CTxMemPool\n         return (mapTx.count(hash) != 0);\n     }\n \n+    bool wtxid_exists(const uint256& hash) const\n+    {\n+        LOCK(cs);\n+        return (mapTx.get<index_by_wtxid>().count(hash) != 0);\n+    }\n+\n     CTransactionRef get(const uint256& hash) const;\n-    TxMempoolInfo info(const uint256& hash) const;\n+    txiter get_iter_from_wtxid(const uint256& wtxid) const\n+    {\n+        LOCK(cs);",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 67,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1d1fddb9790cb3b9a70df5370a71ac245491b71c",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems that all call sites of `get_iter_from_wtxid` hold `cs` already. Perhaps it's better to have an `AssertLockHeld` / `EXCLUSIVE_LOCKS_REQUIRED` here instead?",
      "created_at": "2020-03-13T20:58:15Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r392472822",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392472822"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 725,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392505176",
      "pull_request_review_id": 374616026,
      "id": 392505176,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwNTE3Ng==",
      "diff_hunk": "@@ -3927,6 +3927,11 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                             if (ret.second) {\n                                 vRelayExpiration.push_back(std::make_pair(nNow + std::chrono::microseconds{RELAY_TX_CACHE_TIME}.count(), ret.first));\n                             }\n+                            // Add wtxid-based lookup into mapRelay as well, so that peers can request by wtxid\n+                            auto ret2 = mapRelay.insert(std::make_pair(ret.first->second->GetWitnessHash(), ret.first->second));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "b91a879d2c003dd7f7eef174aa59845137eae1a7",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Slightly more efficient and C++11ish:\r\n\r\n```suggestion\r\n                            auto ret2 = mapRelay.emplace(ret.first->second->GetWitnessHash(), ret.first->second);\r\n```",
      "created_at": "2020-03-13T21:59:00Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r392505176",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392505176"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3931,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392505319",
      "pull_request_review_id": 374616026,
      "id": 392505319,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwNTMxOQ==",
      "diff_hunk": "@@ -3927,6 +3927,11 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                             if (ret.second) {\n                                 vRelayExpiration.push_back(std::make_pair(nNow + std::chrono::microseconds{RELAY_TX_CACHE_TIME}.count(), ret.first));\n                             }\n+                            // Add wtxid-based lookup into mapRelay as well, so that peers can request by wtxid\n+                            auto ret2 = mapRelay.insert(std::make_pair(ret.first->second->GetWitnessHash(), ret.first->second));\n+                            if (ret2.second) {\n+                                vRelayExpiration.push_back(std::make_pair(nNow + std::chrono::microseconds{RELAY_TX_CACHE_TIME}.count(), ret2.first));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "b91a879d2c003dd7f7eef174aa59845137eae1a7",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                                vRelayExpiration.emplace_back(nNow + std::chrono::microseconds{RELAY_TX_CACHE_TIME}.count(), ret2.first);\r\n```",
      "created_at": "2020-03-13T21:59:31Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r392505319",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392505319"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3933,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392505963",
      "pull_request_review_id": 374616026,
      "id": 392505963,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwNTk2Mw==",
      "diff_hunk": "@@ -869,6 +870,8 @@ bool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRE\n     auto ret = mapOrphanTransactions.emplace(hash, COrphanTx{tx, peer, GetTime() + ORPHAN_TX_EXPIRE_TIME, g_orphan_list.size()});\n     assert(ret.second);\n     g_orphan_list.push_back(ret.first);\n+    // Allow for lookups in the orphan pool by wtxid, as well as txid\n+    g_orphans_by_wtxid.insert(std::make_pair(tx->GetWitnessHash(), ret.first));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "591931a2b0ea807f6f1392c4cde0f46e04b79696",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    g_orphans_by_wtxid.emplace(tx->GetWitnessHash(), ret.first);\r\n```",
      "created_at": "2020-03-13T22:01:41Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r392505963",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392505963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 874,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392511089",
      "pull_request_review_id": 374616026,
      "id": 392511089,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxMTA4OQ==",
      "diff_hunk": "@@ -1916,12 +1916,12 @@ void static ProcessOrphanTx(CConnman* connman, std::set<uint256>& orphan_work_se\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (!orphanTx.HasWitness() && orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n+            if (orphanTx.HasWitness() || orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0d3d656ab5334db15b91cc0708d7e12db32a5e0a",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The comment on the next line here is outdated now.",
      "created_at": "2020-03-13T22:19:59Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r392511089",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392511089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1919,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392512606",
      "pull_request_review_id": 374616026,
      "id": 392512606,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxMjYwNg==",
      "diff_hunk": "@@ -2604,14 +2604,15 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // We will continue to reject this tx since it has rejected\n                 // parents so avoid re-requesting it from other peers.\n                 recentRejects->insert(tx.GetHash());\n+                recentRejects->insert(tx.GetWitnessHash());\n             }\n         } else {\n-            if (!tx.HasWitness() && state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n+            if (tx.HasWitness() || state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0d3d656ab5334db15b91cc0708d7e12db32a5e0a",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Next line's comment is outdated here as well.",
      "created_at": "2020-03-13T22:25:30Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r392512606",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392512606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2610,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392513202",
      "pull_request_review_id": 374616026,
      "id": 392513202,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxMzIwMg==",
      "diff_hunk": "@@ -1356,7 +1360,8 @@ bool static AlreadyHave(const CInv& inv) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n \n             {\n                 LOCK(g_cs_orphans);\n-                if (mapOrphanTransactions.count(inv.hash)) return true;\n+                if (inv.type != MSG_WTX && mapOrphanTransactions.count(inv.hash)) return true;\n+                else if (inv.type == MSG_WTX && g_orphans_by_wtxid.count(inv.hash)) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "44ea27c61d6466a6626fd986f2942e76c09465d8",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you use braces and indentation here? Combination of a line ending with ';' followed by `else` on the next line may be confusing.",
      "created_at": "2020-03-13T22:27:43Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r392513202",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392513202"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1364,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392519821",
      "pull_request_review_id": 374616026,
      "id": 392519821,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxOTgyMQ==",
      "diff_hunk": "@@ -2175,10 +2179,23 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             nCMPCTBLOCKVersion = 1;\n             connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n         }\n+\n         pfrom->fSuccessfullyConnected = true;\n         return true;\n     }\n \n+    // Feature negotiation of wtxidrelay should happen between VERSION and\n+    // VERACK, to avoid relay problems from switching after a connection is up\n+    if (strCommand == NetMsgType::WTXIDRELAY) {\n+        if (pfrom->nVersion >= WTXID_RELAY_VERSION) {\n+            LOCK(cs_main);\n+            if (!State(pfrom->GetId())->m_wtxid_relay) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "021c5d392b6469596ba8eaa18c9ea01dafd9fdf0",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The conditional seems superfluous here.",
      "created_at": "2020-03-13T22:55:17Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r392519821",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392519821"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393948358",
      "pull_request_review_id": 376378857,
      "id": 393948358,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk0ODM1OA==",
      "diff_hunk": "@@ -2175,10 +2179,23 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             nCMPCTBLOCKVersion = 1;\n             connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n         }\n+\n         pfrom->fSuccessfullyConnected = true;\n         return true;\n     }\n \n+    // Feature negotiation of wtxidrelay should happen between VERSION and\n+    // VERACK, to avoid relay problems from switching after a connection is up\n+    if (strCommand == NetMsgType::WTXIDRELAY) {\n+        if (pfrom->nVersion >= WTXID_RELAY_VERSION) {\n+            LOCK(cs_main);\n+            if (!State(pfrom->GetId())->m_wtxid_relay) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "021c5d392b6469596ba8eaa18c9ea01dafd9fdf0",
      "in_reply_to_id": 392519821,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We use it to properly count the number of wtxid-relay peers.",
      "created_at": "2020-03-17T20:25:49Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r393948358",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393948358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393950006",
      "pull_request_review_id": 376380913,
      "id": 393950006,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1MDAwNg==",
      "diff_hunk": "@@ -69,6 +69,8 @@ static constexpr int HISTORICAL_BLOCK_AGE = 7 * 24 * 60 * 60;\n static constexpr int32_t MAX_PEER_TX_IN_FLIGHT = 100;\n /** Maximum number of announced transactions from a peer */\n static constexpr int32_t MAX_PEER_TX_ANNOUNCEMENTS = 2 * MAX_INV_SZ;\n+/** How many microseconds to delay requesting transactions via txids, if we have wtxid-relaying peers */",
      "path": "src/net_processing.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": 389956408,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I see @naumenkogs's point that this is redundant, but I don't understand why @jonatack is saying this is incorrect?  TXID_RELAY_DELAY is the number of microseconds that we wait before requesting a transaction, no?",
      "created_at": "2020-03-17T20:28:57Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r393950006",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393950006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393950777",
      "pull_request_review_id": 376381881,
      "id": 393950777,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1MDc3Nw==",
      "diff_hunk": "@@ -2175,10 +2179,23 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             nCMPCTBLOCKVersion = 1;\n             connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n         }\n+\n         pfrom->fSuccessfullyConnected = true;\n         return true;\n     }\n \n+    // Feature negotiation of wtxidrelay should happen between VERSION and\n+    // VERACK, to avoid relay problems from switching after a connection is up\n+    if (strCommand == NetMsgType::WTXIDRELAY) {\n+        if (pfrom->nVersion >= WTXID_RELAY_VERSION) {\n+            LOCK(cs_main);\n+            if (!State(pfrom->GetId())->m_wtxid_relay) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "021c5d392b6469596ba8eaa18c9ea01dafd9fdf0",
      "in_reply_to_id": 392519821,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, of course.",
      "created_at": "2020-03-17T20:30:26Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r393950777",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393950777"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393956494",
      "pull_request_review_id": 376388889,
      "id": 393956494,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1NjQ5NA==",
      "diff_hunk": "@@ -1356,7 +1360,8 @@ bool static AlreadyHave(const CInv& inv) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n \n             {\n                 LOCK(g_cs_orphans);\n-                if (mapOrphanTransactions.count(inv.hash)) return true;\n+                if (inv.type != MSG_WTX && mapOrphanTransactions.count(inv.hash)) return true;\n+                else if (inv.type == MSG_WTX && g_orphans_by_wtxid.count(inv.hash)) return true;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "44ea27c61d6466a6626fd986f2942e76c09465d8",
      "in_reply_to_id": 392513202,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-03-17T20:41:01Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r393956494",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393956494"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1364,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393956622",
      "pull_request_review_id": 376389050,
      "id": 393956622,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1NjYyMg==",
      "diff_hunk": "@@ -869,6 +870,8 @@ bool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRE\n     auto ret = mapOrphanTransactions.emplace(hash, COrphanTx{tx, peer, GetTime() + ORPHAN_TX_EXPIRE_TIME, g_orphan_list.size()});\n     assert(ret.second);\n     g_orphan_list.push_back(ret.first);\n+    // Allow for lookups in the orphan pool by wtxid, as well as txid\n+    g_orphans_by_wtxid.insert(std::make_pair(tx->GetWitnessHash(), ret.first));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "591931a2b0ea807f6f1392c4cde0f46e04b79696",
      "in_reply_to_id": 392505963,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, done.",
      "created_at": "2020-03-17T20:41:15Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r393956622",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393956622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 874,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393956704",
      "pull_request_review_id": 376389153,
      "id": 393956704,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1NjcwNA==",
      "diff_hunk": "@@ -3927,6 +3927,11 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                             if (ret.second) {\n                                 vRelayExpiration.push_back(std::make_pair(nNow + std::chrono::microseconds{RELAY_TX_CACHE_TIME}.count(), ret.first));\n                             }\n+                            // Add wtxid-based lookup into mapRelay as well, so that peers can request by wtxid\n+                            auto ret2 = mapRelay.insert(std::make_pair(ret.first->second->GetWitnessHash(), ret.first->second));\n+                            if (ret2.second) {\n+                                vRelayExpiration.push_back(std::make_pair(nNow + std::chrono::microseconds{RELAY_TX_CACHE_TIME}.count(), ret2.first));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "b91a879d2c003dd7f7eef174aa59845137eae1a7",
      "in_reply_to_id": 392505319,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-03-17T20:41:24Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r393956704",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393956704"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3933,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393957003",
      "pull_request_review_id": 376389516,
      "id": 393957003,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1NzAwMw==",
      "diff_hunk": "@@ -3927,6 +3927,11 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                             if (ret.second) {\n                                 vRelayExpiration.push_back(std::make_pair(nNow + std::chrono::microseconds{RELAY_TX_CACHE_TIME}.count(), ret.first));\n                             }\n+                            // Add wtxid-based lookup into mapRelay as well, so that peers can request by wtxid\n+                            auto ret2 = mapRelay.insert(std::make_pair(ret.first->second->GetWitnessHash(), ret.first->second));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "b91a879d2c003dd7f7eef174aa59845137eae1a7",
      "in_reply_to_id": 392505176,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-03-17T20:41:57Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r393957003",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393957003"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3931,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393957074",
      "pull_request_review_id": 376389609,
      "id": 393957074,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1NzA3NA==",
      "diff_hunk": "@@ -690,8 +713,19 @@ class CTxMemPool\n         return (mapTx.count(hash) != 0);\n     }\n \n+    bool wtxid_exists(const uint256& hash) const\n+    {\n+        LOCK(cs);\n+        return (mapTx.get<index_by_wtxid>().count(hash) != 0);\n+    }\n+\n     CTransactionRef get(const uint256& hash) const;\n-    TxMempoolInfo info(const uint256& hash) const;\n+    txiter get_iter_from_wtxid(const uint256& wtxid) const\n+    {\n+        LOCK(cs);",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 67,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1d1fddb9790cb3b9a70df5370a71ac245491b71c",
      "in_reply_to_id": 392472822,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-03-17T20:42:06Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r393957074",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393957074"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 725,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393957303",
      "pull_request_review_id": 376389931,
      "id": 393957303,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1NzMwMw==",
      "diff_hunk": "@@ -467,6 +484,12 @@ class CTxMemPool\n         boost::multi_index::indexed_by<\n             // sorted by txid\n             boost::multi_index::hashed_unique<mempoolentry_txid, SaltedTxidHasher>,\n+            // sorted by wtxid",
      "path": "src/txmempool.h",
      "position": 47,
      "original_position": 35,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": 390040001,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, fixed.",
      "created_at": "2020-03-17T20:42:32Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r393957303",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393957303"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 490,
      "original_line": 490,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393957941",
      "pull_request_review_id": 376390731,
      "id": 393957941,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1Nzk0MQ==",
      "diff_hunk": "@@ -358,12 +364,13 @@ const uint32_t MSG_TYPE_MASK    = 0xffffffff >> 2;\n  * These numbers are defined by the protocol. When adding a new value, be sure\n  * to mention it in the respective BIP.\n  */\n-enum GetDataMsg\n+enum GetDataMsg : uint32_t",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 18,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": 389864907,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This was aj's proposed fix to the build warning you reported before: https://github.com/bitcoin/bitcoin/pull/18044#discussion_r374576703",
      "created_at": "2020-03-17T20:43:44Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r393957941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393957941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 367,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393968535",
      "pull_request_review_id": 376402832,
      "id": 393968535,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk2ODUzNQ==",
      "diff_hunk": "@@ -69,6 +69,8 @@ static constexpr int HISTORICAL_BLOCK_AGE = 7 * 24 * 60 * 60;\n static constexpr int32_t MAX_PEER_TX_IN_FLIGHT = 100;\n /** Maximum number of announced transactions from a peer */\n static constexpr int32_t MAX_PEER_TX_ANNOUNCEMENTS = 2 * MAX_INV_SZ;\n+/** How many microseconds to delay requesting transactions via txids, if we have wtxid-relaying peers */",
      "path": "src/net_processing.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": 389956408,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The value in the definition is expressed in seconds (albeit with microsecond precision), e.g. a delay of 2 seconds and not 2 microseconds, unless I am confused. There are several similar cases; I think this can be ignored and addressed (or not) separately.",
      "created_at": "2020-03-17T21:02:19Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r393968535",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393968535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394060201",
      "pull_request_review_id": 376509593,
      "id": 394060201,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2MDIwMQ==",
      "diff_hunk": "@@ -69,6 +69,8 @@ static constexpr int HISTORICAL_BLOCK_AGE = 7 * 24 * 60 * 60;\n static constexpr int32_t MAX_PEER_TX_IN_FLIGHT = 100;\n /** Maximum number of announced transactions from a peer */\n static constexpr int32_t MAX_PEER_TX_ANNOUNCEMENTS = 2 * MAX_INV_SZ;\n+/** How many microseconds to delay requesting transactions via txids, if we have wtxid-relaying peers */",
      "path": "src/net_processing.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": 389956408,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The comment is technically correct because it's referring to the `TXID_RELAY_DELAY` constant, not how it is computed. Compare it with how before it might have been `static const int TXID_RELAY_DELAY = 2 * 1000000`, where 2 was still a value in seconds.\r\n\r\nIt's a silly semantics discussion though. With the std::chrono types everywhere the comment could just be \"Duration of delay ...\".",
      "created_at": "2020-03-18T01:34:44Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r394060201",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394060201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394200854",
      "pull_request_review_id": 376681058,
      "id": 394200854,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIwMDg1NA==",
      "diff_hunk": "@@ -69,6 +69,8 @@ static constexpr int HISTORICAL_BLOCK_AGE = 7 * 24 * 60 * 60;\n static constexpr int32_t MAX_PEER_TX_IN_FLIGHT = 100;\n /** Maximum number of announced transactions from a peer */\n static constexpr int32_t MAX_PEER_TX_ANNOUNCEMENTS = 2 * MAX_INV_SZ;\n+/** How many microseconds to delay requesting transactions via txids, if we have wtxid-relaying peers */",
      "path": "src/net_processing.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": 389956408,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> the comment could just be \"Duration of delay ...\".\r\n\r\nYes.\r\n",
      "created_at": "2020-03-18T09:15:51Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r394200854",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394200854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399693214",
      "pull_request_review_id": 383336881,
      "id": 399693214,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY5MzIxNA==",
      "diff_hunk": "@@ -693,8 +717,19 @@ class CTxMemPool\n         return (mapTx.count(hash) != 0);\n     }\n \n+    bool wtxid_exists(const uint256& hash) const",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 69,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a reason you've added a new function here, instead of extending `exists()` with a boolean `wtxid` parameter (in the same way that you've extended `CompareDepthAndScore()` and `info()`?",
      "created_at": "2020-03-28T18:22:37Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r399693214",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399693214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 725,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399693288",
      "pull_request_review_id": 383336881,
      "id": 399693288,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY5MzI4OA==",
      "diff_hunk": "@@ -693,8 +717,19 @@ class CTxMemPool\n         return (mapTx.count(hash) != 0);\n     }\n \n+    bool wtxid_exists(const uint256& hash) const\n+    {\n+        LOCK(cs);\n+        return (mapTx.get<index_by_wtxid>().count(hash) != 0);\n+    }\n+\n     CTransactionRef get(const uint256& hash) const;\n-    TxMempoolInfo info(const uint256& hash) const;\n+    txiter get_iter_from_wtxid(const uint256& wtxid) const EXCLUSIVE_LOCKS_REQUIRED(cs)",
      "path": "src/txmempool.h",
      "position": 95,
      "original_position": 77,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As above, I think it would be clearer if this was combined with `GetIter()`",
      "created_at": "2020-03-28T18:23:21Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r399693288",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399693288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 729,
      "original_line": 729,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399693555",
      "pull_request_review_id": 383336881,
      "id": 399693555,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY5MzU1NQ==",
      "diff_hunk": "@@ -2517,26 +2577,42 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n         vRecv >> ptx;\n         const CTransaction& tx = *ptx;\n \n-        CInv inv(MSG_TX, tx.GetHash());\n-        pfrom->AddInventoryKnown(inv);\n+        const uint256& txid = ptx->GetHash();\n+        const uint256& wtxid = ptx->GetWitnessHash();\n \n         LOCK2(cs_main, g_cs_orphans);\n \n+        CNodeState* nodestate = State(pfrom->GetId());\n+\n+        const uint256& hash = nodestate->m_wtxid_relay ? wtxid : txid;\n+        pfrom->AddKnownTx(hash);\n+\n         TxValidationState state;\n \n-        CNodeState* nodestate = State(pfrom->GetId());\n-        nodestate->m_tx_download.m_tx_announced.erase(inv.hash);\n-        nodestate->m_tx_download.m_tx_in_flight.erase(inv.hash);\n-        EraseTxRequest(inv.hash);\n+        nodestate->m_tx_download.m_tx_announced.erase(hash);\n+        nodestate->m_tx_download.m_tx_in_flight.erase(hash);\n+        EraseTxRequest(hash);\n \n         std::list<CTransactionRef> lRemovedTxn;\n \n-        if (!AlreadyHave(inv, mempool) &&\n+        // We do the AlreadyHave() check using wtxid, rather than txid - in the\n+        // absence of witness malleation, this is strictly better, because the\n+        // recent rejects filter may contain the wtxid but will never contain\n+        // the txid of a segwit transaction that has been rejected.\n+        // In the presence of witness malleation, it's possible that by only\n+        // doing the check with wtxid, we could overlook a transaction which\n+        // was confirmed with a different witness, or exists in our mempool\n+        // with a different witness, but this has limited downside:\n+        // mempool validation does its own lookup of whether we have the txid\n+        // already; and an adversary can already relay us old transactions\n+        // (older than our recency filter) if trying to DoS us, without any need\n+        // for witness malleation.\n+        if (!AlreadyHave(CInv(MSG_WTX, wtxid), mempool) &&\n             AcceptToMemoryPool(mempool, state, ptx, &lRemovedTxn, false /* bypass_limits */, 0 /* nAbsurdFee */)) {\n             mempool.check(&::ChainstateActive().CoinsTip());\n-            RelayTransaction(tx.GetHash(), *connman);\n+            RelayTransaction(tx.GetHash(), tx.GetWitnessHash(), *connman);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 335,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a good reason not to use `txid` and `wtxid` here instead of looking them up again?",
      "created_at": "2020-03-28T18:25:32Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r399693555",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399693555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2957,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399702162",
      "pull_request_review_id": 383336881,
      "id": 399702162,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcwMjE2Mg==",
      "diff_hunk": "@@ -2568,8 +2644,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n+                    // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 346,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand how this is supposed to work. You add the parent's txid to the node's `m_tx_process_time` via `RequestTx()` here, but when we process it in `SendMessages()` getdata logic, we always construct a `CInv` with type `MSG_WTX`. The receiving node will fail to find the tx because it searches in the mempool for a tx with that wtxid.",
      "created_at": "2020-03-28T19:50:14Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r399702162",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399702162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400167606",
      "pull_request_review_id": 383823095,
      "id": 400167606,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2NzYwNg==",
      "diff_hunk": "@@ -2568,8 +2644,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n+                    // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 346,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399702162,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This also happens if a buggy node sends `CInv` with `MSG_WTX` without having announced `wtxidrelay` first, or `MSG_TX` after having announced `wtxidrelay` I think.",
      "created_at": "2020-03-30T12:54:41Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r400167606",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400167606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400169765",
      "pull_request_review_id": 383825786,
      "id": 400169765,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2OTc2NQ==",
      "diff_hunk": "@@ -2517,26 +2577,42 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n         vRecv >> ptx;\n         const CTransaction& tx = *ptx;\n \n-        CInv inv(MSG_TX, tx.GetHash());\n-        pfrom->AddInventoryKnown(inv);\n+        const uint256& txid = ptx->GetHash();\n+        const uint256& wtxid = ptx->GetWitnessHash();\n \n         LOCK2(cs_main, g_cs_orphans);\n \n+        CNodeState* nodestate = State(pfrom->GetId());\n+\n+        const uint256& hash = nodestate->m_wtxid_relay ? wtxid : txid;\n+        pfrom->AddKnownTx(hash);\n+\n         TxValidationState state;\n \n-        CNodeState* nodestate = State(pfrom->GetId());\n-        nodestate->m_tx_download.m_tx_announced.erase(inv.hash);\n-        nodestate->m_tx_download.m_tx_in_flight.erase(inv.hash);\n-        EraseTxRequest(inv.hash);\n+        nodestate->m_tx_download.m_tx_announced.erase(hash);\n+        nodestate->m_tx_download.m_tx_in_flight.erase(hash);\n+        EraseTxRequest(hash);\n \n         std::list<CTransactionRef> lRemovedTxn;\n \n-        if (!AlreadyHave(inv, mempool) &&\n+        // We do the AlreadyHave() check using wtxid, rather than txid - in the\n+        // absence of witness malleation, this is strictly better, because the\n+        // recent rejects filter may contain the wtxid but will never contain\n+        // the txid of a segwit transaction that has been rejected.\n+        // In the presence of witness malleation, it's possible that by only\n+        // doing the check with wtxid, we could overlook a transaction which\n+        // was confirmed with a different witness, or exists in our mempool\n+        // with a different witness, but this has limited downside:\n+        // mempool validation does its own lookup of whether we have the txid\n+        // already; and an adversary can already relay us old transactions\n+        // (older than our recency filter) if trying to DoS us, without any need\n+        // for witness malleation.\n+        if (!AlreadyHave(CInv(MSG_WTX, wtxid), mempool) &&\n             AcceptToMemoryPool(mempool, state, ptx, &lRemovedTxn, false /* bypass_limits */, 0 /* nAbsurdFee */)) {\n             mempool.check(&::ChainstateActive().CoinsTip());\n-            RelayTransaction(tx.GetHash(), *connman);\n+            RelayTransaction(tx.GetHash(), tx.GetWitnessHash(), *connman);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 335,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399693555,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`GetHash()` and `GetWitnessHash()` are inline and just return pre-cached results anyway so it should make no practical difference. Probably clearer to use the shorter aliases though.",
      "created_at": "2020-03-30T12:58:03Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r400169765",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400169765"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2957,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400444597",
      "pull_request_review_id": 384168419,
      "id": 400444597,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0NDU5Nw==",
      "diff_hunk": "@@ -2568,8 +2644,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n+                    // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 346,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399702162,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This logic of requesting unconfirmed parent transactions when an orphan is received should eventually go away, in favor of some sort of package relay scheme, where orphan transactions trigger discovery of all unconfirmed ancestors -- so I think the question is what to do in the meantime.  I think wtxid-based relay is more important than optimizing this behavior when we encounter an orphan.\r\n\r\nNote that we only just recently (#16851, merged last October) fixed things so that these requests worked for transactions that are not in mapRelay.  Also note that for transactions that are still in mapRelay, or for non-segwit transactions where txid and wtxid are the same, these requests will still work.  However this is admittedly a regression in behavior, undoing the benefit of #16851.  However given how long that behavior was broken (and that the recent fix was largely at my urging, I believe), it's hard for me to think that anyone is really too concerned with this.\r\n\r\nAnyway it is possible to improve this by keeping extra bookkeeping so that requests generated this way go out as MSG_TX, but I don't think it's worth it -- it's a lot of additional complexity for very little benefit, and I think effort spent on improving orphan transaction relay should be devoted to a p2p protocol extension that supports it directly.",
      "created_at": "2020-03-30T19:35:43Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r400444597",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400444597"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400447324",
      "pull_request_review_id": 384171979,
      "id": 400447324,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0NzMyNA==",
      "diff_hunk": "@@ -693,8 +717,19 @@ class CTxMemPool\n         return (mapTx.count(hash) != 0);\n     }\n \n+    bool wtxid_exists(const uint256& hash) const",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 69,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399693214,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this is just a style choice, trying to balance different tradeoffs:\r\n- if you change a function's arguments, then you have to change all call sites, unless you use an optional argument\r\n- changing lots of call sites is not great as it adds noise to PR review\r\n- optional arguments are not great as they can make it harder to maintain code and do review in the future\r\n\r\nBut sometimes optional arguments are the easier way to go, to avoid having to embed hairy logic at a bunch of call sites to decide which function to call, which can also harm readability.  So I think it's just a balance, and I tried to strike the balance I thought made sense when I was writing all this which wasn't always the same for every example, but maybe I could have done better.  \r\n\r\nAnyway at this point I'd prefer not to make stylistic changes to this PR.",
      "created_at": "2020-03-30T19:40:57Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r400447324",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400447324"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 725,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400448519",
      "pull_request_review_id": 384173467,
      "id": 400448519,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0ODUxOQ==",
      "diff_hunk": "@@ -2517,26 +2577,42 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n         vRecv >> ptx;\n         const CTransaction& tx = *ptx;\n \n-        CInv inv(MSG_TX, tx.GetHash());\n-        pfrom->AddInventoryKnown(inv);\n+        const uint256& txid = ptx->GetHash();\n+        const uint256& wtxid = ptx->GetWitnessHash();\n \n         LOCK2(cs_main, g_cs_orphans);\n \n+        CNodeState* nodestate = State(pfrom->GetId());\n+\n+        const uint256& hash = nodestate->m_wtxid_relay ? wtxid : txid;\n+        pfrom->AddKnownTx(hash);\n+\n         TxValidationState state;\n \n-        CNodeState* nodestate = State(pfrom->GetId());\n-        nodestate->m_tx_download.m_tx_announced.erase(inv.hash);\n-        nodestate->m_tx_download.m_tx_in_flight.erase(inv.hash);\n-        EraseTxRequest(inv.hash);\n+        nodestate->m_tx_download.m_tx_announced.erase(hash);\n+        nodestate->m_tx_download.m_tx_in_flight.erase(hash);\n+        EraseTxRequest(hash);\n \n         std::list<CTransactionRef> lRemovedTxn;\n \n-        if (!AlreadyHave(inv, mempool) &&\n+        // We do the AlreadyHave() check using wtxid, rather than txid - in the\n+        // absence of witness malleation, this is strictly better, because the\n+        // recent rejects filter may contain the wtxid but will never contain\n+        // the txid of a segwit transaction that has been rejected.\n+        // In the presence of witness malleation, it's possible that by only\n+        // doing the check with wtxid, we could overlook a transaction which\n+        // was confirmed with a different witness, or exists in our mempool\n+        // with a different witness, but this has limited downside:\n+        // mempool validation does its own lookup of whether we have the txid\n+        // already; and an adversary can already relay us old transactions\n+        // (older than our recency filter) if trying to DoS us, without any need\n+        // for witness malleation.\n+        if (!AlreadyHave(CInv(MSG_WTX, wtxid), mempool) &&\n             AcceptToMemoryPool(mempool, state, ptx, &lRemovedTxn, false /* bypass_limits */, 0 /* nAbsurdFee */)) {\n             mempool.check(&::ChainstateActive().CoinsTip());\n-            RelayTransaction(tx.GetHash(), *connman);\n+            RelayTransaction(tx.GetHash(), tx.GetWitnessHash(), *connman);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 335,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399693555,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looking at the diff, I note that the code change I have here looks clearly correct if you believe the old code was correct.  Given the lack of performance sensitivity I'm not inclined to change this.",
      "created_at": "2020-03-30T19:43:10Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r400448519",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400448519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2957,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400535511",
      "pull_request_review_id": 384280841,
      "id": 400535511,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUzNTUxMQ==",
      "diff_hunk": "@@ -2568,8 +2644,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n+                    // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 346,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399702162,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I disagree with the argument \"this was broken for a long time and we only recently fixed it, so it's ok to break it again\"\r\n\r\n> it is possible to improve this by keeping extra bookkeeping ... it's a lot of additional complexity.\r\n\r\nThis doesn't seem like too much additional complexity. We store in `m_tx_process_time` whether the request should be for a txid or a wtxid, and set the GETDATA INV based on that. That's one additional bit of information, which could be a bool or a `enum GetDataMsg`.\r\n\r\n> for transactions that are still in mapRelay [...] these requests will still work\r\n\r\nOh, I hadn't realised that we'd respond to a MSG_WTX GETDATA request for a wtxid with a transaction that has that txid. The draft BIP doesn't specify that we should do that, and it seems extremely unintuitive. Could we have two `mapRelay`s - one based on txid and one based on wtxid so we don't do this?\r\n\r\n(I also think that we should remove mapRelay entirely (#17303), which depends on responding to NOTFOUNDs (#18238), which currently is broken and seems to be waiting for this PR (https://github.com/bitcoin/bitcoin/pull/18238#discussion_r398318859))",
      "created_at": "2020-03-30T22:35:29Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r400535511",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400535511"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400557458",
      "pull_request_review_id": 384306035,
      "id": 400557458,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU1NzQ1OA==",
      "diff_hunk": "@@ -2568,8 +2644,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n+                    // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 346,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399702162,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">I disagree with the argument \"this was broken for a long time and we only recently fixed it, so it's ok to break it again\"\r\n\r\nPlease, that is not the entirety of the argument; the substance of what is being \"broken\" -- and how significant it is -- is relevant too.  It's not like transaction relay was horribly broken until the last release.  \r\n\r\nFor context: fixing the behavior as we did was something that I suggested we do in order to make another improvement I wanted to make -- package relay -- something that we could introduce in two parts, first as a pure client-side behavior integrated with orphan handling, and then as a p2p protocol extension.  Since then, I concluded that splitting those two things up doesn't make sense, as getting the orphan handling part right is complicated enough that it isn't worth the review burden for something that would just be ripped out later (and so I think we just go straight to package relay with a p2p protocol extension).\r\n\r\nI think it'd be perfectly reasonable to just rip out this behavior of trying to request parents when we receive an orphan -- it is fundamentally unreliable and is already just an opportunistic way to improve relay in one edge case situation.  Adding complexity solely for the purpose of supporting something that flaky is something we should all be skeptical about; this part of the codebase is already very difficult for most people to understand.\r\n\r\n> Oh, I hadn't realised that we'd respond to a MSG_WTX GETDATA request for a wtxid with a transaction that has that txid. The draft BIP doesn't specify that we should do that, and it seems extremely unintuitive. Could we have two mapRelays - one based on txid and one based on wtxid so we don't do this?\r\n\r\nI don't see the downside -- the behavior I've implemented seems strictly better, though non-essential and not something I think we need to specify in a BIP as behavior we promise to maintain.",
      "created_at": "2020-03-30T23:37:02Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r400557458",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400557458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400567195",
      "pull_request_review_id": 384317300,
      "id": 400567195,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2NzE5NQ==",
      "diff_hunk": "@@ -2568,8 +2644,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n+                    // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 346,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399702162,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I don't see the downside\r\n\r\nJust my opinion, but: the p2p code is already really complicated and not really well understood, adding new behaviours and having the implementation and the spec differ in ways that matter in practice and aren't obvious seems like it makes that a fair bit worse. This makes the review burden for both this PR and future p2p changes much higher, since you can't just read the BIPs to understand how things should work, or the local bits of code to see how they do work to see if a change makes sense, but you have to deeply understand how many things interact to even get started.\r\n\r\nI was going to suggest adding code to explicitly ignore INVs that come in with the wrong TX/WTX marker for the peer sending them, and to not request orphan txs' parents when we're in WTX mode -- I do agree that behaviour's not too crucial to keep even without package relay; I just don't think mixing wtxid/txid values and having functionality relying on weird undocumented special cases like that working sometimes (only while the tx is in mapRelay but not after expiry?) is okay.\r\n\r\n(Not a nack, just my opinion; I'm open to being convinced otherwise. But I think I'll go back to poking at the notfound pr rather than holding off for this one getting merged for now)",
      "created_at": "2020-03-31T00:08:21Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r400567195",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400567195"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400958023",
      "pull_request_review_id": 384789380,
      "id": 400958023,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk1ODAyMw==",
      "diff_hunk": "@@ -2568,8 +2644,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n+                    // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 346,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399702162,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ajtowns My view on this is that what goes into a BIP are the essential behaviors that all implementations should abide by in order to make an idea work, but non-essential implementation details are left for projects to individually figure out.\r\n\r\nThis makes it easier for new protocol extensions to get adopted by the whole community (the fewer requirements, the better), and for our own software to stay compatible with the BIPs we claim to implement, as otherwise we'd have to constantly deprecate/redraft/repropose, as we make minor changes to our own implementation.\r\n\r\nI'd say that how we handle a getdata request for a value that we never announced is one of those non-essential behaviors -- ignoring it is certainly fair, and returning something useful is obviously better still.  No one should assume, or would assume, that this is something that *ought* to work, so I don't think any software would be relying on this.\r\n\r\nAlso, if we had a set of design docs for how our own project implements particular BIPs, I'd agree that those should reflect more exactly what our code does -- but that would be a new initiative for us.",
      "created_at": "2020-03-31T14:27:37Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r400958023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400958023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/401018724",
      "pull_request_review_id": 384865504,
      "id": 401018724,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxODcyNA==",
      "diff_hunk": "@@ -2568,8 +2644,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n+                    // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 346,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399702162,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I find this behavior very confusing. Can you help me understand if I'm getting any of this wrong:\r\n\r\n1. We have a peer that has negotiated wtxid relay\r\n2. That peer relays us a transaction whose parents we don't have\r\n3. We want to request the parent transaction, so we put the **txid** in the `m_tx_process_time` and `m_tx_announced` for this peer (https://github.com/bitcoin/bitcoin/pull/18044/files#diff-eff7adeaec73a769788bb78858815c91R2654). That **txid** will later be added to the global `g_already_asked_for` (https://github.com/bitcoin/bitcoin/pull/18044/files#diff-eff7adeaec73a769788bb78858815c91R4151)\r\n4. In `SendMessages()` we request that transaction with a MSG_WTX GETDATA, but with the hash set to the **txid** (https://github.com/bitcoin/bitcoin/pull/18044/files#diff-eff7adeaec73a769788bb78858815c91R3990). \r\n5. The peer responds to that GETDATA with a TX because it looks in its mapRelay for transactions with a txid OR wtxid that match (https://github.com/bitcoin/bitcoin/pull/18044/files#diff-eff7adeaec73a769788bb78858815c91R1628)\r\n6. When we receive the TX, we try to remove the **wtxid** from the peer's `m_tx_announced` and `m_tx_in_flight`, and the global `g_already_asked_for` (https://github.com/bitcoin/bitcoin/pull/18044/files#diff-eff7adeaec73a769788bb78858815c91R2587-R2594)\r\n\r\nThe thing I don't understand is that we seem to be adding the txid to these per-peer and global structures, and then trying to remove the wtxid from them. Will the txid ever be cleared? Do we end up in a request loop with the peer?",
      "created_at": "2020-03-31T15:44:37Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r401018724",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/401018724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/401205210",
      "pull_request_review_id": 385092425,
      "id": 401205210,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIwNTIxMA==",
      "diff_hunk": "@@ -2568,8 +2644,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n+                    // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 346,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399702162,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I also can't quite follow the logic here: https://github.com/bitcoin/bitcoin/pull/18044/files#diff-eff7adeaec73a769788bb78858815c91R4139-R4140\r\n\r\nIt looks to me like the **txid** has been added to `m_tx_process_time`, but when we call into `AlreadyHave(inv, m_mempool)`, the inv is a `MSG_WTX`, so we'll check in our mempool for a transaction with that **wtxid** (which we won't find). We'll then rerequest the transaction from our peer.",
      "created_at": "2020-03-31T20:47:44Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r401205210",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/401205210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402389444",
      "pull_request_review_id": 386522752,
      "id": 402389444,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM4OTQ0NA==",
      "diff_hunk": "@@ -2568,8 +2644,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n+                    // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 346,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399702162,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@sdaftuar \"No one should assume, or would assume, that this is something that ought to work\" -- but... aren't we assuming that it will work when we send a WTX request with a txid instead of a wtxid?\r\n\r\nAside from any bugs, I think this adds three lots of technical debt:\r\n\r\n * we're replying to `GETDATA WTX <txid>` and `GETDATA TX <wtxid>` if the tx is still in mapRelay -- this will go away if/when mapRelay goes away\r\n * we're asking for `WTX <txid>` when looking for parents of orphan transactions -- if we figure out how to replace orphan handling with package relay, this will go away too; but in the meantime it means mapRelay going away breaks orphan handling, and I think it breaks orphan handling when the parent's >15m old immediately\r\n * in the functional tests, as of #18446 at least, we're still sending TX INVs/GETDATAs etc despite claiming to be of a version that supports wtxid relay\r\n\r\nOne alternative might be to embrace the ambiguity: make the BIP be \"if you signal wtxidrelay, then we'll send `INV TX wtxid` instead of `INV TX txid`, and also allow you to request txs by either `GETDATA TX txid` or `GETDATA TX wtxid`\" ?",
      "created_at": "2020-04-02T15:08:52Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r402389444",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402389444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402545909",
      "pull_request_review_id": 386715362,
      "id": 402545909,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0NTkwOQ==",
      "diff_hunk": "@@ -2568,8 +2644,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n+                    // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 346,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399702162,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think I'm just going to eliminate the logic for requesting orphan parents from wtxid-relay peers, as you suggested above -- I think that is the simplest approach, and should eliminate the bugs reported by @jnewbery.",
      "created_at": "2020-04-02T19:04:50Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r402545909",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402545909"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403953004",
      "pull_request_review_id": 388080235,
      "id": 403953004,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk1MzAwNA==",
      "diff_hunk": "@@ -2568,8 +2644,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n+                    // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 346,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399702162,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems okay. I think it could make sense to explicitly skip INVs offering a TX/WTX that we'd incorrectly GETDATA as a WTX/TX (respectively) as well:\r\n\r\n```diff\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2323,6 +2323,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\r\n             if (interruptMsgProc)\r\n                 return true;\r\n \r\n+            // ignore INVs that don't match wtxidrelay setting\r\n+            if (State(pfrom->GetId())->m_wtxid_relay) {\r\n+                if (inv.type == MSG_TX) continue;\r\n+            } else {\r\n+                if (inv.type == MSG_WTX) continue;\r\n+            }\r\n+\r\n             bool fAlreadyHave = AlreadyHave(inv, mempool);\r\n             LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom->GetId());\r\n```\r\n\r\n[I had a go](https://github.com/bitcoin/bitcoin/pull/18446#pullrequestreview-386416835) at updating fjahr's tests, and it seems to make reasonable sense (either with or without the change I suggest here)\r\n\r\n(This still leaves us with the tech debt of our functional tests mostly testing tx relay when we'll be moving towards doing wtxid relay most of the time in the real world, but that's not really avoidable)",
      "created_at": "2020-04-06T09:31:24Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r403953004",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403953004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412306569",
      "pull_request_review_id": 397471139,
      "id": 412306569,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMwNjU2OQ==",
      "diff_hunk": "@@ -2568,8 +2644,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n+                    // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 346,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399702162,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> (This still leaves us with the tech debt of our functional tests mostly testing tx relay when we'll be moving towards doing wtxid relay most of the time in the real world, but that's not really avoidable)\r\n\r\nI think that should be addressed with this update: https://github.com/fjahr/bitcoin/commit/becdb68ab37fdcbc1dcf743b19ea8629f52677bb",
      "created_at": "2020-04-21T16:28:46Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r412306569",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412306569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412350247",
      "pull_request_review_id": 397520388,
      "id": 412350247,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM1MDI0Nw==",
      "diff_hunk": "@@ -2568,8 +2644,13 @@ bool ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vR\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n+                    // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 346,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399702162,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think it could make sense to explicitly skip INVs offering a TX/WTX that we'd incorrectly GETDATA as a WTX/TX (respectively) as well:\r\n\r\nAnd I agree with @ajtowns , this behavior makes intuitive sense to me and it matches my interpretation of the current description in the BIP: \"After a node has sent and received a \"wtxidrelay\" message to/from a given peer, the node is required to use the MSG_WTX inv-type when announcing transactions to that peer, or requesting announced transactions from that peer.\" \r\n\r\nI think it would even be reasonable to argue about banning peers for this behavior if there is an agreement that this behavior is wrong. The node is unnecessarily spamming the network and just silently dropping the message might let it take longer until an issue with this is discovered by the node user.",
      "created_at": "2020-04-21T17:28:16Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r412350247",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412350247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440251893",
      "pull_request_review_id": 430744865,
      "id": 440251893,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MTg5Mw==",
      "diff_hunk": "@@ -363,7 +369,8 @@ enum GetDataMsg\n     UNDEFINED = 0,\n     MSG_TX = 1,\n     MSG_BLOCK = 2,\n-    // The following can only occur in getdata. Invs always use TX or BLOCK.\n+    MSG_WTX = 5, // Defined in BIP XXX",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 18,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "cf8c70fac6df96e23c37afe1c27eaa3925996caf",
      "in_reply_to_id": 378574214,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`TX` (by txid, don't send witness), `WTX_TXID` (by txid, do send witness), `WTX_WTXID` (by wtxid, do send witness)` might be clearer?",
      "created_at": "2020-06-15T15:16:54Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r440251893",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440251893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 372,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443154957",
      "pull_request_review_id": 434449561,
      "id": 443154957,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE1NDk1Nw==",
      "diff_hunk": "@@ -818,14 +830,14 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n \n void PeerLogicValidation::ReattemptInitialBroadcast(CScheduler& scheduler) const\n {\n-    std::set<uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n+    std::map<uint256, uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n \n-    for (const uint256& txid : unbroadcast_txids) {\n+    for (const std::pair<uint256, uint256>& elem : unbroadcast_txids) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "a7844da61d3f9eaca9d9d35337d463c64ac541a4",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "from a quick look, seems like using `const` and reference declarator together on this `std::pair<uint256,uint256>` type is causing the build warnings. I don't yet understand why. \r\n\r\nleaving `&` but removing the `const` throws an error: \r\n```\r\nnet_processing.cpp:835:39: error: non-const lvalue reference to type 'pair<uint256, [...]>' cannot bind to a value of unrelated type 'pair<const uint256, [...]>'\r\n    for (std::pair<uint256, uint256>& elem : unbroadcast_txids) {\r\n```\r\n\r\nbut removing the reference declarator allows it to build with no errors / warnings. with or without the `const`. ",
      "created_at": "2020-06-20T19:41:41Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443154957",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443154957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 835,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443156052",
      "pull_request_review_id": 434450480,
      "id": 443156052,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE1NjA1Mg==",
      "diff_hunk": "@@ -818,14 +830,14 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n \n void PeerLogicValidation::ReattemptInitialBroadcast(CScheduler& scheduler) const\n {\n-    std::set<uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n+    std::map<uint256, uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n \n-    for (const uint256& txid : unbroadcast_txids) {\n+    for (const std::pair<uint256, uint256>& elem : unbroadcast_txids) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "a7844da61d3f9eaca9d9d35337d463c64ac541a4",
      "in_reply_to_id": 443154957,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The reason is that the element type of `unbroadcast_txids` is `std::pair<const uint256, uint256>` which can't be converted to `std::pair<uint256, uint256>`. If you want a const reference to such a thing, it will be copied, and you'll get a reference to the copy.\r\n\r\nThe correct solution is either (`const`) `std::pair<const uint256, uint256>&`, or just `const auto&`.",
      "created_at": "2020-06-20T20:00:23Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443156052",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443156052"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 835,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443392439",
      "pull_request_review_id": 434702778,
      "id": 443392439,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM5MjQzOQ==",
      "diff_hunk": "@@ -399,6 +399,9 @@ struct CNodeState {\n     //! Whether this peer is a manual connection\n     bool m_is_manual_connection;\n \n+    //! Whether this peer relays txs via wtxid\n+    bool m_wtxid_relay{false};",
      "path": "src/net_processing.cpp",
      "position": 48,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "40825853e2be441ef2a52ecd330f1db08b939621",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As a follow-up, I think we may scope this under a connection type, like https://github.com/bitcoin/bitcoin/pull/19316.\r\n\r\nSide-note, @amitiuttarwar, I had only a super-quick overview on connection type, it's a great move but IMO I would adopt a more fine-grained typology. Right now it sounds to confuse type of _traffic_ (block, addr, tx) and type of connection _selection_ (outbound/inbound,  normal/anchor, ...)",
      "created_at": "2020-06-22T08:21:39Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443392439",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443392439"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 428,
      "original_line": 428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443401103",
      "pull_request_review_id": 434702778,
      "id": 443401103,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQwMTEwMw==",
      "diff_hunk": "@@ -2817,23 +2833,39 @@ void ProcessMessage(\n         const CTransaction& tx = *ptx;\n \n         const uint256& txid = ptx->GetHash();\n-        pfrom.AddInventoryKnown(txid);\n+        const uint256& wtxid = ptx->GetWitnessHash();\n \n         LOCK2(cs_main, g_cs_orphans);\n \n+        CNodeState* nodestate = State(pfrom.GetId());\n+\n+        const uint256& hash = nodestate->m_wtxid_relay ? wtxid : txid;\n+        pfrom.AddInventoryKnown(hash);\n+\n         TxValidationState state;\n \n-        CNodeState* nodestate = State(pfrom.GetId());\n-        nodestate->m_tx_download.m_tx_announced.erase(txid);\n-        nodestate->m_tx_download.m_tx_in_flight.erase(txid);\n-        EraseTxRequest(txid);\n+        nodestate->m_tx_download.m_tx_announced.erase(hash);\n+        nodestate->m_tx_download.m_tx_in_flight.erase(hash);\n+        EraseTxRequest(hash);\n \n         std::list<CTransactionRef> lRemovedTxn;\n \n-        if (!AlreadyHave(CInv(MSG_TX, txid), mempool) &&\n+        // We do the AlreadyHave() check using wtxid, rather than txid - in the\n+        // absence of witness malleation, this is strictly better, because the\n+        // recent rejects filter may contain the wtxid but will never contain\n+        // the txid of a segwit transaction that has been rejected.\n+        // In the presence of witness malleation, it's possible that by only\n+        // doing the check with wtxid, we could overlook a transaction which\n+        // was confirmed with a different witness, or exists in our mempool\n+        // with a different witness, but this has limited downside:\n+        // mempool validation does its own lookup of whether we have the txid\n+        // already; and an adversary can already relay us old transactions\n+        // (older than our recency filter) if trying to DoS us, without any need\n+        // for witness malleation.\n+        if (!AlreadyHave(CInv(MSG_WTX, wtxid), mempool) &&",
      "path": "src/net_processing.cpp",
      "position": 423,
      "original_position": 168,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "40825853e2be441ef2a52ecd330f1db08b939621",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "AFAICT, if we have sighash_noinput+Eltoo channel design in the future, commitment transactions are going to be _symmetric_ but witness likely _asymmetric_ (one per-party). So you would observe wtxidA != wtxidB but txidA == txidB which means in case of concurrent broadcast by different parties you will spuriously re-download transactions and only gets one version in your mempool.\r\n\r\nAssuming such class of transactions traffic (multiple-parties, asymmetric witnesses, high-rate of concurrent broadcasts) get few digits of overall traffic it may be a serious bandwidth increase and may not be compatible with a wtxid-based tx-relay. Of course, as of today it's really hypothetical but you may find such pattern with vault protocols (multiple-parties, concurrent broadcast, asymmetric witnesses). ",
      "created_at": "2020-06-22T08:36:15Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443401103",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443401103"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2957,
      "original_line": 2957,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443409934",
      "pull_request_review_id": 434702778,
      "id": 443409934,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQwOTkzNA==",
      "diff_hunk": "@@ -768,6 +773,9 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     // We delay processing announcements from inbound peers\n     if (use_inbound_delay) process_time += INBOUND_PEER_TX_DELAY;\n \n+    // We delay processing announcements from peers that use txid-relay (instead of wtxid)",
      "path": "src/net_processing.cpp",
      "position": 66,
      "original_position": 32,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "9f0f4809e516b7c2393b667cb039701684e1c7b6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The trade-off bandwidth saving against tx-relay propagation latency may not be only the one. Investigating around transaction pinning (https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-April/017757.html), there is this idea that an attacker, by bypassing tx-relay delay timers will always win the propagation race and that way be first in _every_ miners full-node mempools and succeed the pin. I think against some malicious party willingly to override protocol rules at its advantage we can do nothing but I'm not yet confident on this.",
      "created_at": "2020-06-22T08:51:50Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443409934",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443409934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 797,
      "original_line": 797,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443419034",
      "pull_request_review_id": 434702778,
      "id": 443419034,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQxOTAzNA==",
      "diff_hunk": "@@ -2954,10 +2961,16 @@ void ProcessMessage(\n                 recentRejects->insert(tx.GetWitnessHash());\n             }\n         } else {\n-            if (tx.HasWitness() || state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped\n+                // transactions to the filter, as they can have been malleated;\n+                // adding such txids to the reject filter would potentially\n+                // interfere with relay of valid transactions from peers that\n+                // do not support wtxid-based relay. See\n+                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+                // We can remove this restriction (and always add wtxids to\n+                // the filter even for witness stripped transactions) once\n+                // wtxid-based relay is broadly deployed.",
      "path": "src/net_processing.cpp",
      "position": 482,
      "original_position": 46,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "247d67486a7ca8843579218f4397cdd790a67b07",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think we should be really careful about including `TX_WITNESS_STRIPPED` to the rejection filter. \r\n\r\nIn LN, your channel counterparty knows your own version of the commitment transaction as it has to build it to sign it. It means a malicious counterparty would be able to broadcast a witness _stripped_ version of it at any moment and that way get it added to the rejection filters of any p2p peers. If the full-node used by your LN-node is _non-upgraded_ it will announce broadcast of a witness transaction (the local commitment) and it won't be fetched by the lured peers thus effectively censoring your time-sensitive transactions.\r\n\r\nIs this understanding of wtxid tx-relay correct ? I don't think it changes anything that your topology is well-established with wtxid-relay peers, the issue is you not being upgraded and subject to intentional reject filters collisions.",
      "created_at": "2020-06-22T09:07:12Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443419034",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443419034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3035,
      "original_line": 3035,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443443661",
      "pull_request_review_id": 434770396,
      "id": 443443661,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ0MzY2MQ==",
      "diff_hunk": "@@ -2817,23 +2833,39 @@ void ProcessMessage(\n         const CTransaction& tx = *ptx;\n \n         const uint256& txid = ptx->GetHash();\n-        pfrom.AddInventoryKnown(txid);\n+        const uint256& wtxid = ptx->GetWitnessHash();\n \n         LOCK2(cs_main, g_cs_orphans);\n \n+        CNodeState* nodestate = State(pfrom.GetId());\n+\n+        const uint256& hash = nodestate->m_wtxid_relay ? wtxid : txid;\n+        pfrom.AddInventoryKnown(hash);\n+\n         TxValidationState state;\n \n-        CNodeState* nodestate = State(pfrom.GetId());\n-        nodestate->m_tx_download.m_tx_announced.erase(txid);\n-        nodestate->m_tx_download.m_tx_in_flight.erase(txid);\n-        EraseTxRequest(txid);\n+        nodestate->m_tx_download.m_tx_announced.erase(hash);\n+        nodestate->m_tx_download.m_tx_in_flight.erase(hash);\n+        EraseTxRequest(hash);\n \n         std::list<CTransactionRef> lRemovedTxn;\n \n-        if (!AlreadyHave(CInv(MSG_TX, txid), mempool) &&\n+        // We do the AlreadyHave() check using wtxid, rather than txid - in the\n+        // absence of witness malleation, this is strictly better, because the\n+        // recent rejects filter may contain the wtxid but will never contain\n+        // the txid of a segwit transaction that has been rejected.\n+        // In the presence of witness malleation, it's possible that by only\n+        // doing the check with wtxid, we could overlook a transaction which\n+        // was confirmed with a different witness, or exists in our mempool\n+        // with a different witness, but this has limited downside:\n+        // mempool validation does its own lookup of whether we have the txid\n+        // already; and an adversary can already relay us old transactions\n+        // (older than our recency filter) if trying to DoS us, without any need\n+        // for witness malleation.\n+        if (!AlreadyHave(CInv(MSG_WTX, wtxid), mempool) &&",
      "path": "src/net_processing.cpp",
      "position": 423,
      "original_position": 168,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "40825853e2be441ef2a52ecd330f1db08b939621",
      "in_reply_to_id": 443401103,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"spuriously re-download transactions and only gets one version in your mempool\" already happens with RBF; I don't think this is meaningfully different?\r\n\r\n(If you're just varying the witness you don't need SIGHASH_NOINPUT, though, so I think there's a good chance the txid would be different too for eltoo transactions if that comes into play)",
      "created_at": "2020-06-22T09:50:32Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443443661",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443443661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2957,
      "original_line": 2957,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443446534",
      "pull_request_review_id": 434774091,
      "id": 443446534,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ0NjUzNA==",
      "diff_hunk": "@@ -97,6 +97,6 @@ struct CNodeStateStats {\n bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats);\n \n /** Relay transaction to every node */\n-void RelayTransaction(const uint256&, const CConnman& connman);\n+void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman& connman) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "path": "src/net_processing.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "40825853e2be441ef2a52ecd330f1db08b939621",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like this means `cs_main` needs to be locked in `ReattemptInintialBroadcast()` (net_processing) and `BroadcastTransaction()` (node/transaction.cpp)",
      "created_at": "2020-06-22T09:55:28Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443446534",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443446534"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 103,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443619023",
      "pull_request_review_id": 435003769,
      "id": 443619023,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxOTAyMw==",
      "diff_hunk": "@@ -818,14 +830,14 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n \n void PeerLogicValidation::ReattemptInitialBroadcast(CScheduler& scheduler) const\n {\n-    std::set<uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n+    std::map<uint256, uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n \n-    for (const uint256& txid : unbroadcast_txids) {\n+    for (const std::pair<uint256, uint256>& elem : unbroadcast_txids) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "a7844da61d3f9eaca9d9d35337d463c64ac541a4",
      "in_reply_to_id": 443154957,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed with `const auto&`.",
      "created_at": "2020-06-22T14:53:36Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443619023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443619023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 835,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443627585",
      "pull_request_review_id": 435015412,
      "id": 443627585,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYyNzU4NQ==",
      "diff_hunk": "@@ -97,6 +97,6 @@ struct CNodeStateStats {\n bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats);\n \n /** Relay transaction to every node */\n-void RelayTransaction(const uint256&, const CConnman& connman);\n+void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman& connman) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "path": "src/net_processing.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "40825853e2be441ef2a52ecd330f1db08b939621",
      "in_reply_to_id": 443446534,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for catching those, fixed.",
      "created_at": "2020-06-22T15:05:17Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443627585",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443627585"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 103,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443631940",
      "pull_request_review_id": 435021489,
      "id": 443631940,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMTk0MA==",
      "diff_hunk": "@@ -2954,10 +2961,16 @@ void ProcessMessage(\n                 recentRejects->insert(tx.GetWitnessHash());\n             }\n         } else {\n-            if (tx.HasWitness() || state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped\n+                // transactions to the filter, as they can have been malleated;\n+                // adding such txids to the reject filter would potentially\n+                // interfere with relay of valid transactions from peers that\n+                // do not support wtxid-based relay. See\n+                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+                // We can remove this restriction (and always add wtxids to\n+                // the filter even for witness stripped transactions) once\n+                // wtxid-based relay is broadly deployed.",
      "path": "src/net_processing.cpp",
      "position": 482,
      "original_position": 46,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "247d67486a7ca8843579218f4397cdd790a67b07",
      "in_reply_to_id": 443419034,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you explain what you think needs to change in the code here?  \r\n\r\nI think the documentation is trying to explain a necessary (but not sufficient) condition for changing the code at some unspecified point in the future.  If you want to argue that we should never change this code because other ecosystem software might break, then that's something worthy of discussion, but I don't know that we need to have that discussion in this PR, given that we're not proposing actually doing that now (nor even proposing a timeline for it).",
      "created_at": "2020-06-22T15:11:28Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443631940",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443631940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3035,
      "original_line": 3035,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443635047",
      "pull_request_review_id": 435025740,
      "id": 443635047,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzNTA0Nw==",
      "diff_hunk": "@@ -2817,23 +2833,39 @@ void ProcessMessage(\n         const CTransaction& tx = *ptx;\n \n         const uint256& txid = ptx->GetHash();\n-        pfrom.AddInventoryKnown(txid);\n+        const uint256& wtxid = ptx->GetWitnessHash();\n \n         LOCK2(cs_main, g_cs_orphans);\n \n+        CNodeState* nodestate = State(pfrom.GetId());\n+\n+        const uint256& hash = nodestate->m_wtxid_relay ? wtxid : txid;\n+        pfrom.AddInventoryKnown(hash);\n+\n         TxValidationState state;\n \n-        CNodeState* nodestate = State(pfrom.GetId());\n-        nodestate->m_tx_download.m_tx_announced.erase(txid);\n-        nodestate->m_tx_download.m_tx_in_flight.erase(txid);\n-        EraseTxRequest(txid);\n+        nodestate->m_tx_download.m_tx_announced.erase(hash);\n+        nodestate->m_tx_download.m_tx_in_flight.erase(hash);\n+        EraseTxRequest(hash);\n \n         std::list<CTransactionRef> lRemovedTxn;\n \n-        if (!AlreadyHave(CInv(MSG_TX, txid), mempool) &&\n+        // We do the AlreadyHave() check using wtxid, rather than txid - in the\n+        // absence of witness malleation, this is strictly better, because the\n+        // recent rejects filter may contain the wtxid but will never contain\n+        // the txid of a segwit transaction that has been rejected.\n+        // In the presence of witness malleation, it's possible that by only\n+        // doing the check with wtxid, we could overlook a transaction which\n+        // was confirmed with a different witness, or exists in our mempool\n+        // with a different witness, but this has limited downside:\n+        // mempool validation does its own lookup of whether we have the txid\n+        // already; and an adversary can already relay us old transactions\n+        // (older than our recency filter) if trying to DoS us, without any need\n+        // for witness malleation.\n+        if (!AlreadyHave(CInv(MSG_WTX, wtxid), mempool) &&",
      "path": "src/net_processing.cpp",
      "position": 423,
      "original_position": 168,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "40825853e2be441ef2a52ecd330f1db08b939621",
      "in_reply_to_id": 443401103,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand the comment here -- are you saying wtxid-relay is somehow incompatible with a future change to the protocol?  It seems to me that (a) wtxid-relay is more likely to support the ability to relay transactions with same underlying txid but different wtxid than our existing relay protocol, and (b) whether we adopt changes to the mempool acceptance rules to allow for this is otherwise orthogonal to this PR.  \r\n\r\nIf you're asking for a change here, can you indicate what that is?",
      "created_at": "2020-06-22T15:16:05Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443635047",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443635047"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2957,
      "original_line": 2957,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443660713",
      "pull_request_review_id": 435059563,
      "id": 443660713,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY2MDcxMw==",
      "diff_hunk": "@@ -5091,19 +5091,22 @@ bool LoadMempool(CTxMemPool& pool)\n         }\n \n         // TODO: remove this try except in v0.22\n+        std::map<uint256, uint256> unbroadcast_txids;\n         try {\n-          std::set<uint256> unbroadcast_txids;\n           file >> unbroadcast_txids;\n           unbroadcast = unbroadcast_txids.size();\n-\n-          for (const auto& txid : unbroadcast_txids) {\n-            pool.AddUnbroadcastTx(txid);\n-          }\n         } catch (const std::exception&) {\n           // mempool.dat files created prior to v0.21 will not have an\n           // unbroadcast set. No need to log a failure if parsing fails here.\n         }\n-\n+        for (const std::pair<uint256, uint256>& elem : unbroadcast_txids) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "d5d55edb1f295711574190bf310f88171451b5cf",
      "in_reply_to_id": null,
      "user": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Believe the same use of `const auto&` is needed here as used in [net_processing](https://github.com/bitcoin/bitcoin/pull/18044/commits/d5d55edb1f295711574190bf310f88171451b5cf#diff-eff7adeaec73a769788bb78858815c91R823).\r\n```suggestion\r\n        for (const auto& elem : unbroadcast_txids) {\r\n```",
      "created_at": "2020-06-22T15:53:42Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443660713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443660713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443685918",
      "pull_request_review_id": 435092567,
      "id": 443685918,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY4NTkxOA==",
      "diff_hunk": "@@ -5091,19 +5091,22 @@ bool LoadMempool(CTxMemPool& pool)\n         }\n \n         // TODO: remove this try except in v0.22\n+        std::map<uint256, uint256> unbroadcast_txids;\n         try {\n-          std::set<uint256> unbroadcast_txids;\n           file >> unbroadcast_txids;\n           unbroadcast = unbroadcast_txids.size();\n-\n-          for (const auto& txid : unbroadcast_txids) {\n-            pool.AddUnbroadcastTx(txid);\n-          }\n         } catch (const std::exception&) {\n           // mempool.dat files created prior to v0.21 will not have an\n           // unbroadcast set. No need to log a failure if parsing fails here.\n         }\n-\n+        for (const std::pair<uint256, uint256>& elem : unbroadcast_txids) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "d5d55edb1f295711574190bf310f88171451b5cf",
      "in_reply_to_id": 443660713,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Doh, thanks! Fixed.",
      "created_at": "2020-06-22T16:33:17Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443685918",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443685918"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443775360",
      "pull_request_review_id": 435208453,
      "id": 443775360,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc3NTM2MA==",
      "diff_hunk": "@@ -2817,23 +2833,39 @@ void ProcessMessage(\n         const CTransaction& tx = *ptx;\n \n         const uint256& txid = ptx->GetHash();\n-        pfrom.AddInventoryKnown(txid);\n+        const uint256& wtxid = ptx->GetWitnessHash();\n \n         LOCK2(cs_main, g_cs_orphans);\n \n+        CNodeState* nodestate = State(pfrom.GetId());\n+\n+        const uint256& hash = nodestate->m_wtxid_relay ? wtxid : txid;\n+        pfrom.AddInventoryKnown(hash);\n+\n         TxValidationState state;\n \n-        CNodeState* nodestate = State(pfrom.GetId());\n-        nodestate->m_tx_download.m_tx_announced.erase(txid);\n-        nodestate->m_tx_download.m_tx_in_flight.erase(txid);\n-        EraseTxRequest(txid);\n+        nodestate->m_tx_download.m_tx_announced.erase(hash);\n+        nodestate->m_tx_download.m_tx_in_flight.erase(hash);\n+        EraseTxRequest(hash);\n \n         std::list<CTransactionRef> lRemovedTxn;\n \n-        if (!AlreadyHave(CInv(MSG_TX, txid), mempool) &&\n+        // We do the AlreadyHave() check using wtxid, rather than txid - in the\n+        // absence of witness malleation, this is strictly better, because the\n+        // recent rejects filter may contain the wtxid but will never contain\n+        // the txid of a segwit transaction that has been rejected.\n+        // In the presence of witness malleation, it's possible that by only\n+        // doing the check with wtxid, we could overlook a transaction which\n+        // was confirmed with a different witness, or exists in our mempool\n+        // with a different witness, but this has limited downside:\n+        // mempool validation does its own lookup of whether we have the txid\n+        // already; and an adversary can already relay us old transactions\n+        // (older than our recency filter) if trying to DoS us, without any need\n+        // for witness malleation.\n+        if (!AlreadyHave(CInv(MSG_WTX, wtxid), mempool) &&",
      "path": "src/net_processing.cpp",
      "position": 423,
      "original_position": 168,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "40825853e2be441ef2a52ecd330f1db08b939621",
      "in_reply_to_id": 443401103,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> \"spuriously re-download transactions and only gets one version in your mempool\" already happens with RBF; I don't think this is meaningfully different?\r\n\r\nI think you're right we do already have this kind of case due to single-party RBF. After thoughts, qualifying them of _spurious_ was a fallacy as a smaller valid witness may increase transaction feerate and such increase its probabilities of propagating and confirming. So we _have to_ download them anyway.\r\n\r\n(I agree SIGHASH_NOINPUT doesn't force you to vary witness, it's more likely we would do it, fyi another [generalized channel](https://eprint.iacr.org/2020/476.pdf) proposal leveraging per-party adaptor sigs to get symmetric states)\r\n\r\nI'm not advocating on any change here, I was more brooding on the fact that fancier on-top-of-Bitcoin protocols and automatic dynamic-fee bumping as currently gauged by LN implementations will have for side-effect to increase bandwidth demand in case of mempool congestion.\r\n\r\n> and (b) whether we adopt changes to the mempool acceptance rules to allow for this is otherwise orthogonal to this PR.\r\n\r\nYes, I was wrong that's orthogonal to tx-relay, it's more being sure that these potential bandwidth demand surges are priced \"correctly\" with regards to BIP 125 rule 4. Not a discussion to have in this PR.",
      "created_at": "2020-06-22T19:22:37Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443775360",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443775360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2957,
      "original_line": 2957,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443786487",
      "pull_request_review_id": 435222866,
      "id": 443786487,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc4NjQ4Nw==",
      "diff_hunk": "@@ -2954,10 +2961,16 @@ void ProcessMessage(\n                 recentRejects->insert(tx.GetWitnessHash());\n             }\n         } else {\n-            if (tx.HasWitness() || state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped\n+                // transactions to the filter, as they can have been malleated;\n+                // adding such txids to the reject filter would potentially\n+                // interfere with relay of valid transactions from peers that\n+                // do not support wtxid-based relay. See\n+                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+                // We can remove this restriction (and always add wtxids to\n+                // the filter even for witness stripped transactions) once\n+                // wtxid-based relay is broadly deployed.",
      "path": "src/net_processing.cpp",
      "position": 482,
      "original_position": 46,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "247d67486a7ca8843579218f4397cdd790a67b07",
      "in_reply_to_id": 443419034,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you reference this comment/issue directly around the code ?\r\n\r\nI think that's a bit different than Matt's previous comment [here](https://github.com/bitcoin/bitcoin/pull/18044#discussion_r378586654) where we only considered censorship of a wtixd-relay _requester_, which should be fine if you have at least 1 honest wtxid-relay peer as you pointed.\r\n\r\nThe scenario I'm describing is I think different, it's censorship of an non-upgraded wtxid-relay initial _sender_ being only connected to reject-witness-stripped wtxid-relay peers. This sender announcing through txid only won't have its transaction fetched and propagated due to an already existent collision in the rejection filter. Such topology configuration sounds realistic for private nodes.\r\n\r\nI don't want to argue that we should never change this but when we do it we give a clear warning and time buffer to the rest of the ecosystem to be sure they upgrade. Because by switching p2p policy rules you would effectively introduce a critical vulnerability for any higher-layer software pending on a non-upgraded full-node. LN security model fundamentally reverse the double-spend problem to a private matter, it's the duty of your _individual_ LN-node and full-node to ensure that your transactions propagate well and confirm quickly. \r\n\r\nAnd I don't think we have guidelines for this today, it sounds more like an illustration of the lack of a set of design docs for a) how we implement BIPs b) what assumptions ecosystem software can do on stability of such implemented rules that you're describing [here](https://github.com/bitcoin/bitcoin/pull/18044#discussion_r400958023).",
      "created_at": "2020-06-22T19:46:25Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443786487",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/443786487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3035,
      "original_line": 3035,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444170959",
      "pull_request_review_id": 435712513,
      "id": 444170959,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE3MDk1OQ==",
      "diff_hunk": "@@ -2954,10 +2961,16 @@ void ProcessMessage(\n                 recentRejects->insert(tx.GetWitnessHash());\n             }\n         } else {\n-            if (tx.HasWitness() || state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped\n+                // transactions to the filter, as they can have been malleated;\n+                // adding such txids to the reject filter would potentially\n+                // interfere with relay of valid transactions from peers that\n+                // do not support wtxid-based relay. See\n+                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+                // We can remove this restriction (and always add wtxids to\n+                // the filter even for witness stripped transactions) once\n+                // wtxid-based relay is broadly deployed.",
      "path": "src/net_processing.cpp",
      "position": 482,
      "original_position": 46,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "247d67486a7ca8843579218f4397cdd790a67b07",
      "in_reply_to_id": 443419034,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do you mean just add a link to your github comment, or something else?  \r\n\r\nHere's the current comment, which I think captures the issue you're describing (as far as I understand, what you're talking about is fundamentally the same as the issue we flagged years ago when we first deployed segwit, see #8279):\r\n```\r\n                // Do not add txids of witness transactions or witness-stripped\r\n                // transactions to the filter, as they can have been malleated;\r\n                // adding such txids to the reject filter would potentially\r\n                // interfere with relay of valid transactions from peers that\r\n                // do not support wtxid-based relay. See\r\n                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\r\n                // We can remove this restriction (and always add wtxids to\r\n                // the filter even for witness stripped transactions) once\r\n                // wtxid-based relay is broadly deployed.\r\n\r\n```\r\n\r\nBut if there's specific different language or a link you'd like to see in here, please just provide alternate text.",
      "created_at": "2020-06-23T12:04:13Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r444170959",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444170959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3035,
      "original_line": 3035,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444173164",
      "pull_request_review_id": 435715431,
      "id": 444173164,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE3MzE2NA==",
      "diff_hunk": "@@ -399,6 +399,9 @@ struct CNodeState {\n     //! Whether this peer is a manual connection\n     bool m_is_manual_connection;\n \n+    //! Whether this peer relays txs via wtxid\n+    bool m_wtxid_relay{false};",
      "path": "src/net_processing.cpp",
      "position": 48,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "40825853e2be441ef2a52ecd330f1db08b939621",
      "in_reply_to_id": 443392439,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Marking this as resolved -- nothing more to do here as far as I understand.",
      "created_at": "2020-06-23T12:08:34Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r444173164",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444173164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 428,
      "original_line": 428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444173382",
      "pull_request_review_id": 435715747,
      "id": 444173382,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE3MzM4Mg==",
      "diff_hunk": "@@ -768,6 +773,9 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     // We delay processing announcements from inbound peers\n     if (use_inbound_delay) process_time += INBOUND_PEER_TX_DELAY;\n \n+    // We delay processing announcements from peers that use txid-relay (instead of wtxid)",
      "path": "src/net_processing.cpp",
      "position": 66,
      "original_position": 32,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "9f0f4809e516b7c2393b667cb039701684e1c7b6",
      "in_reply_to_id": 443409934,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Marking this as resolved, as nothing more to do here as far as I understand.",
      "created_at": "2020-06-23T12:09:01Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r444173382",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444173382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 797,
      "original_line": 797,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445154911",
      "pull_request_review_id": 436985378,
      "id": 445154911,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE1NDkxMQ==",
      "diff_hunk": "@@ -399,6 +399,9 @@ struct CNodeState {\n     //! Whether this peer is a manual connection\n     bool m_is_manual_connection;\n \n+    //! Whether this peer relays txs via wtxid\n+    bool m_wtxid_relay{false};",
      "path": "src/net_processing.cpp",
      "position": 48,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "40825853e2be441ef2a52ecd330f1db08b939621",
      "in_reply_to_id": 443392439,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ariard lets continue the conversation here: https://github.com/bitcoin/bitcoin/pull/19316#issuecomment-649054328",
      "created_at": "2020-06-24T20:33:05Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r445154911",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445154911"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 428,
      "original_line": 428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446459839",
      "pull_request_review_id": 438652214,
      "id": 446459839,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1OTgzOQ==",
      "diff_hunk": "@@ -4440,7 +4452,15 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                     // up processing to happen after the download times out\n                     // (with a slight delay for inbound peers, to prefer\n                     // requests to outbound peers).\n-                    const auto next_process_time = CalculateTxGetDataTime(txid, current_time, !state.fPreferredDownload);\n+                    // Don't apply the txid-delay to re-requests of a\n+                    // transaction; the heuristic of delaying requests to\n+                    // txid-relay peers is to save bandwidth on initial\n+                    // announcement of a transaction, and doesn't make sense\n+                    // for a followup request if our first peer times out (and\n+                    // would open us up to an attacker using inbound\n+                    // wtxid-relay to prevent us from requesting transactions\n+                    // from outbound txid-relay peers).",
      "path": "src/net_processing.cpp",
      "position": 628,
      "original_position": 84,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "bc565ee3bd8232ec79540061d548488fa0681c68",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you may have a slight InvBlock until wtxid-relay is double-digit deployed, a wtxid-relay-signaling inbound peer can announce a MSG_TX and thus being processed with same time priority than txid-relay outbound peers. By holding the TX and assume your victim only have txid-relay peers you block transaction propagation \r\n\r\nMaybe `CalculateTxGetDataTime` should use the inv type instead of peer signaling to apply the delay ?",
      "created_at": "2020-06-27T00:24:18Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r446459839",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446459839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4552,
      "original_line": 4552,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446462569",
      "pull_request_review_id": 438656572,
      "id": 446462569,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ2MjU2OQ==",
      "diff_hunk": "@@ -2954,10 +2961,16 @@ void ProcessMessage(\n                 recentRejects->insert(tx.GetWitnessHash());\n             }\n         } else {\n-            if (tx.HasWitness() || state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped\n+                // transactions to the filter, as they can have been malleated;\n+                // adding such txids to the reject filter would potentially\n+                // interfere with relay of valid transactions from peers that\n+                // do not support wtxid-based relay. See\n+                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+                // We can remove this restriction (and always add wtxids to\n+                // the filter even for witness stripped transactions) once\n+                // wtxid-based relay is broadly deployed.",
      "path": "src/net_processing.cpp",
      "position": 482,
      "original_position": 46,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "247d67486a7ca8843579218f4397cdd790a67b07",
      "in_reply_to_id": 443419034,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right the scenario I'm describing is leveraging the same original issue from #8279, just concerning censorship of a non-upgraded initial sender.\r\n\r\n```\r\n               // Note, any on-top-of-base-layer software (eg LN-node) relying on a non-upgraded to wtxid-relay full-node \r\n              //  would be subject to censor of its time-sensitive transactions. See https://github.com/bitcoin/bitcoin/pull/18044#discussion_r443419034\r\n             //  Removing this restriction should be done considering ecosystem coordination.\r\n```\r\n\r\nI think \"broadly\" is to dim, ideally you want 99% of upgrade among LN-node's full-nodes.",
      "created_at": "2020-06-27T00:43:27Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r446462569",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446462569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3035,
      "original_line": 3035,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446572355",
      "pull_request_review_id": 438727692,
      "id": 446572355,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU3MjM1NQ==",
      "diff_hunk": "@@ -2954,10 +2961,16 @@ void ProcessMessage(\n                 recentRejects->insert(tx.GetWitnessHash());\n             }\n         } else {\n-            if (tx.HasWitness() || state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped\n+                // transactions to the filter, as they can have been malleated;\n+                // adding such txids to the reject filter would potentially\n+                // interfere with relay of valid transactions from peers that\n+                // do not support wtxid-based relay. See\n+                // https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+                // We can remove this restriction (and always add wtxids to\n+                // the filter even for witness stripped transactions) once\n+                // wtxid-based relay is broadly deployed.",
      "path": "src/net_processing.cpp",
      "position": 482,
      "original_position": 46,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "247d67486a7ca8843579218f4397cdd790a67b07",
      "in_reply_to_id": 443419034,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I will update the comment to incorporate your suggestion somewhat, including providing a link to the comments as you request, but I have a philosophical difference of opinion about the implications here of ecosystem software that is dependent on particular p2p behavior (specifically with regard to your \"ideally you want 99% of upgrade among LN-node's full nodes\" comment).\r\n\r\nWe have anti-CPU DoS reasons for wanting to get rid of the code that tries to determine whether a transaction is witness stripped (as well as generally simplifying the code that handles transactions that fail mempool acceptance).  Requiring that ecosystem software eventually update -- which can be as simple as putting txid-relay nodes behind wtxid-relay border nodes -- in order to be protected against an esoteric attack, with many years of notice, seems completely reasonable to me.\r\n\r\nIn particular, if we see that the vast majority of full nodes upgrade to wtxid-relay support over the next few years, but a handful of stubborn lightning implementations have not, I think at some point we could say, too bad, find your own workaround for transaction relay if you're worried about this kind of attack.  For these kinds of non-consensus security issues, I think it's reasonable for this project to provide software and solutions (including documenting our behavior and communicating that to our users) and expect that people worried about those kinds of problems will take care of it themselves.  At some point it should be okay for us to have shipped solutions and given people plenty of time to upgrade, and it's not our responsibility if there are people who have chosen not to follow our advice.",
      "created_at": "2020-06-27T22:09:05Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r446572355",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446572355"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3035,
      "original_line": 3035,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446583177",
      "pull_request_review_id": 438733156,
      "id": 446583177,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU4MzE3Nw==",
      "diff_hunk": "@@ -4440,7 +4452,15 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                     // up processing to happen after the download times out\n                     // (with a slight delay for inbound peers, to prefer\n                     // requests to outbound peers).\n-                    const auto next_process_time = CalculateTxGetDataTime(txid, current_time, !state.fPreferredDownload);\n+                    // Don't apply the txid-delay to re-requests of a\n+                    // transaction; the heuristic of delaying requests to\n+                    // txid-relay peers is to save bandwidth on initial\n+                    // announcement of a transaction, and doesn't make sense\n+                    // for a followup request if our first peer times out (and\n+                    // would open us up to an attacker using inbound\n+                    // wtxid-relay to prevent us from requesting transactions\n+                    // from outbound txid-relay peers).",
      "path": "src/net_processing.cpp",
      "position": 628,
      "original_position": 84,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "bc565ee3bd8232ec79540061d548488fa0681c68",
      "in_reply_to_id": 446459839,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this is very significant but perhaps we can include the suggestion that I believe aj (or others) made of ignoring MSG_TX inv's from wtxid-relay peers (and vice versa).",
      "created_at": "2020-06-28T00:31:29Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r446583177",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446583177"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4552,
      "original_line": 4552,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446735110",
      "pull_request_review_id": 438846098,
      "id": 446735110,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjczNTExMA==",
      "diff_hunk": "@@ -737,19 +740,19 @@ class CTxMemPool\n     size_t DynamicMemoryUsage() const;\n \n     /** Adds a transaction to the unbroadcast set */\n-    void AddUnbroadcastTx(const uint256& txid) {\n+    void AddUnbroadcastTx(const uint256& txid, const uint256& wtxid) {\n         LOCK(cs);\n         // Sanity Check: the transaction should also be in the mempool\n         if (exists(txid)) {\n-            m_unbroadcast_txids.insert(txid);\n+            m_unbroadcast_txids[txid] = wtxid;\n         }\n     }\n \n     /** Removes a transaction from the unbroadcast set */\n     void RemoveUnbroadcastTx(const uint256& txid, const bool unchecked = false);\n \n     /** Returns transactions in unbroadcast set */\n-    std::set<uint256> GetUnbroadcastTxs() const {\n+    const std::map<uint256, uint256>& GetUnbroadcastTxs() const {",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 33,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "fec2cba022afba0da16ef4a029e4a2cd0c00153f",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This was making a copy of the set, which could then be accessed without holding the `mempool.cs` lock; returning a const reference instead is unsafe, isn't it? (In particular, if I understand correctly, `map<uint256,uint256> x = mempool.GetUnbroadcastTxs();` will do the copy from `*(&mempool.m_unbroadcast_txids)` after releasing the lock with this code, where previously it would have either copied to a temporary first or done copy elision and copied directly to `x` while holding the lock)",
      "created_at": "2020-06-29T02:05:47Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r446735110",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446735110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 755,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446746185",
      "pull_request_review_id": 438846098,
      "id": 446746185,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0NjE4NQ==",
      "diff_hunk": "@@ -693,8 +717,19 @@ class CTxMemPool\n         return (mapTx.count(hash) != 0);\n     }\n \n+    bool wtxid_exists(const uint256& hash) const",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 69,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399693214,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "FWIW, I think `mempool.exists(hash, by_wtxid)` is more convenient/readable in AlreadyHave (the only place `wtxid_exists()` is used); it would let you say:\r\n\r\n```\r\n    const bool by_wtxid = (inv.type == MSG_WTX); \r\n    return mempool.exists(inv.hash, by_wtxid));\r\n```\r\n\r\ninstead of\r\n\r\n```\r\n    return (inv.type != MSG_WTX && mempool.exists(inv.hash)) ||\r\n           (inv.type == MSG_WTX && mempool.wtxid_exists(inv.hash));\r\n```",
      "created_at": "2020-06-29T02:58:11Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r446746185",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446746185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 725,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446750838",
      "pull_request_review_id": 438846098,
      "id": 446750838,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1MDgzOA==",
      "diff_hunk": "@@ -1625,24 +1641,24 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n }\n \n //! Determine whether or not a peer can request a transaction, and return it (or nullptr if not found or not allowed).\n-CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds longlived_mempool_time) LOCKS_EXCLUDED(cs_main)\n+CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid_or_wtxid, bool use_wtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds longlived_mempool_time) LOCKS_EXCLUDED(cs_main)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "b4779bbb0aa3527714fb06414774336b1799dea3",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might be clearer just to pass the CInv in instead of separating the hash and precomputing `inv.type==MSG_WTX` at the caller.",
      "created_at": "2020-06-29T03:20:20Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r446750838",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446750838"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1664,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446755938",
      "pull_request_review_id": 438846098,
      "id": 446755938,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1NTkzOA==",
      "diff_hunk": "@@ -2154,10 +2197,24 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             nCMPCTBLOCKVersion = 1;\n             connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n         }\n+\n         pfrom->fSuccessfullyConnected = true;\n         return true;\n     }\n \n+    // Feature negotiation of wtxidrelay should happen between VERSION and\n+    // VERACK, to avoid relay problems from switching after a connection is up",
      "path": "src/net_processing.cpp",
      "position": 330,
      "original_position": 263,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": 384862855,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Disconnecting seems fine to me -- it's not like there are old peers sending wtxidrelay messages around that we need to worry about supporting, and if we disconnect immediately, that should prevent anyone creating any new peers that behave weirdly? Mildly prefer ignoring the wtxidrelay if proposed post-verack, than just trying to do what they intend.",
      "created_at": "2020-06-29T03:45:39Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r446755938",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446755938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2517,
      "original_line": 2517,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446995091",
      "pull_request_review_id": 439174665,
      "id": 446995091,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5NTA5MQ==",
      "diff_hunk": "@@ -2007,10 +2008,19 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (orphanTx.HasWitness() || orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (orphan_state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped",
      "path": "src/net_processing.cpp",
      "position": 296,
      "original_position": 17,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "7d742ab91120f7a6c214903a3d43642f44e75227",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Isn't this block about tracking `witness txid` not `txid`?",
      "created_at": "2020-06-29T14:01:55Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r446995091",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446995091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2046,
      "original_line": 2046,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447259137",
      "pull_request_review_id": 439506860,
      "id": 447259137,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI1OTEzNw==",
      "diff_hunk": "@@ -737,19 +740,19 @@ class CTxMemPool\n     size_t DynamicMemoryUsage() const;\n \n     /** Adds a transaction to the unbroadcast set */\n-    void AddUnbroadcastTx(const uint256& txid) {\n+    void AddUnbroadcastTx(const uint256& txid, const uint256& wtxid) {\n         LOCK(cs);\n         // Sanity Check: the transaction should also be in the mempool\n         if (exists(txid)) {\n-            m_unbroadcast_txids.insert(txid);\n+            m_unbroadcast_txids[txid] = wtxid;\n         }\n     }\n \n     /** Removes a transaction from the unbroadcast set */\n     void RemoveUnbroadcastTx(const uint256& txid, const bool unchecked = false);\n \n     /** Returns transactions in unbroadcast set */\n-    std::set<uint256> GetUnbroadcastTxs() const {\n+    const std::map<uint256, uint256>& GetUnbroadcastTxs() const {",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 33,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "fec2cba022afba0da16ef4a029e4a2cd0c00153f",
      "in_reply_to_id": 446735110,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, fixed.",
      "created_at": "2020-06-29T21:16:48Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r447259137",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447259137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 755,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447259405",
      "pull_request_review_id": 439507211,
      "id": 447259405,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI1OTQwNQ==",
      "diff_hunk": "@@ -2007,10 +2008,19 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (orphanTx.HasWitness() || orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (orphan_state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped",
      "path": "src/net_processing.cpp",
      "position": 296,
      "original_position": 17,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "7d742ab91120f7a6c214903a3d43642f44e75227",
      "in_reply_to_id": 446995091,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok I guess recentRejects is pretty confusing.  Made one more attempt to add comments around how this works.",
      "created_at": "2020-06-29T21:17:26Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r447259405",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447259405"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2046,
      "original_line": 2046,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447260135",
      "pull_request_review_id": 439508203,
      "id": 447260135,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI2MDEzNQ==",
      "diff_hunk": "@@ -1625,24 +1641,24 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n }\n \n //! Determine whether or not a peer can request a transaction, and return it (or nullptr if not found or not allowed).\n-CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds longlived_mempool_time) LOCKS_EXCLUDED(cs_main)\n+CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid_or_wtxid, bool use_wtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds longlived_mempool_time) LOCKS_EXCLUDED(cs_main)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "b4779bbb0aa3527714fb06414774336b1799dea3",
      "in_reply_to_id": 446750838,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I kind of don't like passing the CInv around, as it makes more places in the code have to know about the different enums that we use in there (and more places to potentially change in the code if we add new enums in the future), so leaving this as-is.",
      "created_at": "2020-06-29T21:19:04Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r447260135",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447260135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1664,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447260595",
      "pull_request_review_id": 439508804,
      "id": 447260595,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI2MDU5NQ==",
      "diff_hunk": "@@ -2154,10 +2197,24 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             nCMPCTBLOCKVersion = 1;\n             connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n         }\n+\n         pfrom->fSuccessfullyConnected = true;\n         return true;\n     }\n \n+    // Feature negotiation of wtxidrelay should happen between VERSION and\n+    // VERACK, to avoid relay problems from switching after a connection is up",
      "path": "src/net_processing.cpp",
      "position": 330,
      "original_position": 263,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1cdf17837b26b8dfaf1aeec4c4a1a4b73810e4a5",
      "in_reply_to_id": 384862855,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok made it disconnect. Failing to make any connections at all is a good way for software to get fixed I guess...",
      "created_at": "2020-06-29T21:20:04Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r447260595",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447260595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2517,
      "original_line": 2517,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447677003",
      "pull_request_review_id": 440007086,
      "id": 447677003,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY3NzAwMw==",
      "diff_hunk": "@@ -1916,12 +1916,12 @@ void static ProcessOrphanTx(CConnman* connman, std::set<uint256>& orphan_work_se\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (!orphanTx.HasWitness() && orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n+            if (orphanTx.HasWitness() || orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0d3d656ab5334db15b91cc0708d7e12db32a5e0a",
      "in_reply_to_id": 392511089,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To other reviewers: this issue is addressed in one of the following commits.\r\nIt would make more sense to update it here, but it's probably fine.",
      "created_at": "2020-06-30T13:22:04Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r447677003",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447677003"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1919,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447697340",
      "pull_request_review_id": 440033831,
      "id": 447697340,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY5NzM0MA==",
      "diff_hunk": "@@ -2877,15 +2983,30 @@ void ProcessMessage(\n                 LogPrint(BCLog::MEMPOOL, \"not keeping orphan with rejected parents %s\\n\",tx.GetHash().ToString());\n                 // We will continue to reject this tx since it has rejected\n                 // parents so avoid re-requesting it from other peers.\n+                // Here we add both the txid and the wtxid, as we know that\n+                // regardless of what witness is provided, we will not accept\n+                // this, so we don't need to allow for redownload of this txid\n+                // from any of our non-wtxidrelay peers.\n                 recentRejects->insert(tx.GetHash());",
      "path": "src/net_processing.cpp",
      "position": 464,
      "original_position": 451,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "6787a3dc2abb04f0b75aa2f8996e4bbd6c468ddd",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not very familiar with alternative (deployed) SIGHASH flags, but I was wondering if this can possible screw us somehow... I don't have a particular attack scenario, just throwing this idea here.",
      "created_at": "2020-06-30T13:49:28Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r447697340",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447697340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3021,
      "original_line": 3021,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447710854",
      "pull_request_review_id": 440051510,
      "id": 447710854,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcxMDg1NA==",
      "diff_hunk": "@@ -2877,15 +2983,30 @@ void ProcessMessage(\n                 LogPrint(BCLog::MEMPOOL, \"not keeping orphan with rejected parents %s\\n\",tx.GetHash().ToString());\n                 // We will continue to reject this tx since it has rejected\n                 // parents so avoid re-requesting it from other peers.\n+                // Here we add both the txid and the wtxid, as we know that\n+                // regardless of what witness is provided, we will not accept\n+                // this, so we don't need to allow for redownload of this txid\n+                // from any of our non-wtxidrelay peers.\n                 recentRejects->insert(tx.GetHash());",
      "path": "src/net_processing.cpp",
      "position": 464,
      "original_position": 451,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "6787a3dc2abb04f0b75aa2f8996e4bbd6c468ddd",
      "in_reply_to_id": 447697340,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't know what SIGHASH flags has to do with this, can you elaborate on the scenario you have in mind?\r\n\r\nMy understanding of the logic here is that at this point in the code, we know that a parent of this orphan transaction will definitely not be accepted by our node (as it is already in our reject filter).  Since a txid is a commitment to the inputs of a transaction, this means that we can definitively know that we'll never accept any transaction with the same txid as this orphan, regardless of what witness it comes with.",
      "created_at": "2020-06-30T14:07:05Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r447710854",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447710854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3021,
      "original_line": 3021,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447715043",
      "pull_request_review_id": 440057196,
      "id": 447715043,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcxNTA0Mw==",
      "diff_hunk": "@@ -2007,10 +2008,19 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (orphanTx.HasWitness() || orphan_state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (orphan_state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+                // Do not add txids of witness transactions or witness-stripped",
      "path": "src/net_processing.cpp",
      "position": 296,
      "original_position": 17,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "7d742ab91120f7a6c214903a3d43642f44e75227",
      "in_reply_to_id": 446995091,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I understand how they work(in master), I didn't understand why it was talking about something it's not doing. With the added comment it's clearer, thanks.",
      "created_at": "2020-06-30T14:12:31Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r447715043",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447715043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2046,
      "original_line": 2046,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447795446",
      "pull_request_review_id": 440161436,
      "id": 447795446,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5NTQ0Ng==",
      "diff_hunk": "@@ -1296,9 +1296,9 @@ def test_tx_relay_after_segwit_activation(self):\n \n         # Node will not be blinded to the transaction\n         self.std_node.announce_tx_and_wait_for_getdata(tx3)\n-        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, True, False, 'tx-size')\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, True, False)",
      "path": "test/functional/p2p_segwit.py",
      "position": null,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why are these string checks removed? ",
      "created_at": "2020-06-30T15:57:06Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r447795446",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447795446"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447799731",
      "pull_request_review_id": 440167157,
      "id": 447799731,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5OTczMQ==",
      "diff_hunk": "@@ -2877,15 +2983,30 @@ void ProcessMessage(\n                 LogPrint(BCLog::MEMPOOL, \"not keeping orphan with rejected parents %s\\n\",tx.GetHash().ToString());\n                 // We will continue to reject this tx since it has rejected\n                 // parents so avoid re-requesting it from other peers.\n+                // Here we add both the txid and the wtxid, as we know that\n+                // regardless of what witness is provided, we will not accept\n+                // this, so we don't need to allow for redownload of this txid\n+                // from any of our non-wtxidrelay peers.\n                 recentRejects->insert(tx.GetHash());",
      "path": "src/net_processing.cpp",
      "position": 464,
      "original_position": 451,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "6787a3dc2abb04f0b75aa2f8996e4bbd6c468ddd",
      "in_reply_to_id": 447697340,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nevermind, I was worried that something would happen to xxx | ANYONECANPAY, but now I think there are no issues there.",
      "created_at": "2020-06-30T16:03:16Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r447799731",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447799731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3021,
      "original_line": 3021,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450527682",
      "pull_request_review_id": 443464983,
      "id": 450527682,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUyNzY4Mg==",
      "diff_hunk": "@@ -912,8 +912,8 @@ bool CCoinsViewMemPool::GetCoin(const COutPoint &outpoint, Coin &coin) const {\n \n size_t CTxMemPool::DynamicMemoryUsage() const {\n     LOCK(cs);\n-    // Estimate the overhead of mapTx to be 12 pointers + an allocation, as no exact formula for boost::multi_index_contained is implemented.\n-    return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 12 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(mapLinks) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage;\n+    // Estimate the overhead of mapTx to be 15 pointers + an allocation, as no exact formula for boost::multi_index_contained is implemented.",
      "path": "src/txmempool.cpp",
      "position": 35,
      "original_position": 35,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "1d1fddb9790cb3b9a70df5370a71ac245491b71c",
      "in_reply_to_id": 385362270,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ariard I don't understand this comment (https://github.com/bitcoin/bitcoin/pull/18044/commits/1c382b500b2b6025f9a4cf4cd37af678172c6ae1#r385362270).\r\n\r\nI think 3 pointers for an extra index is probably close to correct, but #18086 may make these kinds of heuristics unnecessary, so that's probably a better approach long term.",
      "created_at": "2020-07-06T23:20:28Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r450527682",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450527682"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 920,
      "original_line": 920,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450530214",
      "pull_request_review_id": 443467912,
      "id": 450530214,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUzMDIxNA==",
      "diff_hunk": "@@ -1236,6 +1237,7 @@ void PeerLogicValidation::BlockConnected(const std::shared_ptr<const CBlock>& pb\n         LOCK(g_cs_recent_confirmed_transactions);\n         for (const auto& ptx : pblock->vtx) {\n             g_recent_confirmed_transactions->insert(ptx->GetHash());\n+            g_recent_confirmed_transactions->insert(ptx->GetWitnessHash());",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "95d729ad020dac39f93542e5366c15eba38d6c99",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add wtxids of confirmed transactions to bloom filter\"\r\n\r\nIt may be worth doing this only in case the txid and wtxid differ (inserting the same thing twice still counts towards expiration of old entries). In the worst case it doesn't matter (it maintains the last 24000 inserted txid/wtxid pairs always), but in the average case, as long as there are non-witness transactions doing so would increase that to somewhere between 24000 and 48000.",
      "created_at": "2020-07-06T23:28:50Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r450530214",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450530214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1240,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450530868",
      "pull_request_review_id": 443467912,
      "id": 450530868,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUzMDg2OA==",
      "diff_hunk": "@@ -1625,24 +1641,24 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n }\n \n //! Determine whether or not a peer can request a transaction, and return it (or nullptr if not found or not allowed).\n-CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid, const std::chrono::seconds mempool_req, const std::chrono::seconds longlived_mempool_time) LOCKS_EXCLUDED(cs_main)\n+CTransactionRef static FindTxForGetData(CNode& peer, const uint256& txid_or_wtxid, bool use_wtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds longlived_mempool_time) LOCKS_EXCLUDED(cs_main)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "b4779bbb0aa3527714fb06414774336b1799dea3",
      "in_reply_to_id": 446750838,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree with @sdaftuar. It's annoying that it adds variables in many places, but the various CInv states really don't correspond to what we need here either.\r\n\r\nIt may be useful to have an encapsulated (use_wtxid, txid_or_wtxid) pair type, but let's keep that for later (I think it would make sense for combining with #19184 as well).",
      "created_at": "2020-07-06T23:31:01Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r450530868",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450530868"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1664,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450573992",
      "pull_request_review_id": 443467912,
      "id": 450573992,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3Mzk5Mg==",
      "diff_hunk": "@@ -2866,10 +2898,17 @@ void ProcessMessage(\n                 uint32_t nFetchFlags = GetFetchFlags(pfrom);\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n-                for (const CTxIn& txin : tx.vin) {\n-                    CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                    pfrom.AddInventoryKnown(txin.prevout.hash);\n-                    if (!AlreadyHave(_inv, mempool)) RequestTx(State(pfrom.GetId()), _inv.hash, current_time);\n+                if (!State(pfrom.GetId())->m_wtxid_relay) {\n+                    for (const CTxIn& txin : tx.vin) {\n+                        // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": 444,
      "original_position": 188,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This will only request parents of orphan transactions when received from non-wtxid peers? What if all peers support wtxid?\r\n\r\nCan't we still request them, but with MSG_TX instead of MSG_WTX? That'd require keeping track of wtxidness per request, unfortunately.",
      "created_at": "2020-07-07T02:15:26Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r450573992",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450573992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2995,
      "original_line": 2995,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450581797",
      "pull_request_review_id": 443467912,
      "id": 450581797,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4MTc5Nw==",
      "diff_hunk": "@@ -391,10 +391,11 @@ const uint32_t MSG_TYPE_MASK = 0xffffffff >> 2;\n  * These numbers are defined by the protocol. When adding a new value, be sure\n  * to mention it in the respective BIP.\n  */\n-enum GetDataMsg {\n+enum GetDataMsg : uint32_t {\n     UNDEFINED = 0,\n     MSG_TX = 1,\n     MSG_BLOCK = 2,\n+    MSG_WTX = 5,                                      //!< Defined in BIP 339\n     // The following can only occur in getdata. Invs always use TX or BLOCK.",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 10,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: this comment is out of date now.",
      "created_at": "2020-07-07T02:47:13Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r450581797",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450581797"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450604619",
      "pull_request_review_id": 443554365,
      "id": 450604619,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYwNDYxOQ==",
      "diff_hunk": "@@ -2866,10 +2898,17 @@ void ProcessMessage(\n                 uint32_t nFetchFlags = GetFetchFlags(pfrom);\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n-                for (const CTxIn& txin : tx.vin) {\n-                    CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                    pfrom.AddInventoryKnown(txin.prevout.hash);\n-                    if (!AlreadyHave(_inv, mempool)) RequestTx(State(pfrom.GetId()), _inv.hash, current_time);\n+                if (!State(pfrom.GetId())->m_wtxid_relay) {\n+                    for (const CTxIn& txin : tx.vin) {\n+                        // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": 444,
      "original_position": 188,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": 450573992,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Earlier discussion of this](https://github.com/bitcoin/bitcoin/pull/18044#discussion_r400444597) proposed handling this via package relay",
      "created_at": "2020-07-07T04:30:36Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r450604619",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450604619"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2995,
      "original_line": 2995,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450638708",
      "pull_request_review_id": 443596461,
      "id": 450638708,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzODcwOA==",
      "diff_hunk": "@@ -2866,10 +2898,17 @@ void ProcessMessage(\n                 uint32_t nFetchFlags = GetFetchFlags(pfrom);\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n-                for (const CTxIn& txin : tx.vin) {\n-                    CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                    pfrom.AddInventoryKnown(txin.prevout.hash);\n-                    if (!AlreadyHave(_inv, mempool)) RequestTx(State(pfrom.GetId()), _inv.hash, current_time);\n+                if (!State(pfrom.GetId())->m_wtxid_relay) {\n+                    for (const CTxIn& txin : tx.vin) {\n+                        // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": 444,
      "original_position": 188,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": 450573992,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this will be an issue even when there's only a small number of wtxid peers -- in that case we'll delay requesting transactions from non-wtxid peers, so most of the txs (and hence most of the orphans) we receive will be from wtxid peers. I guess I'd still rather see this merged now and fixed later than further delayed though?",
      "created_at": "2020-07-07T06:31:05Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r450638708",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450638708"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2995,
      "original_line": 2995,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450649223",
      "pull_request_review_id": 443610362,
      "id": 450649223,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY0OTIyMw==",
      "diff_hunk": "@@ -2866,10 +2898,17 @@ void ProcessMessage(\n                 uint32_t nFetchFlags = GetFetchFlags(pfrom);\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n-                for (const CTxIn& txin : tx.vin) {\n-                    CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                    pfrom.AddInventoryKnown(txin.prevout.hash);\n-                    if (!AlreadyHave(_inv, mempool)) RequestTx(State(pfrom.GetId()), _inv.hash, current_time);\n+                if (!State(pfrom.GetId())->m_wtxid_relay) {\n+                    for (const CTxIn& txin : tx.vin) {\n+                        // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": 444,
      "original_position": 188,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": 450573992,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, I read back some of the history there. I see the complexity it introduces, but I'm still really uncomfortable with just breaking orphan parent-fetching. I'll instrument my node to see how frequently that actually happens.",
      "created_at": "2020-07-07T06:58:00Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r450649223",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450649223"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2995,
      "original_line": 2995,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450687076",
      "pull_request_review_id": 443661909,
      "id": 450687076,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4NzA3Ng==",
      "diff_hunk": "@@ -2866,10 +2898,17 @@ void ProcessMessage(\n                 uint32_t nFetchFlags = GetFetchFlags(pfrom);\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n-                for (const CTxIn& txin : tx.vin) {\n-                    CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                    pfrom.AddInventoryKnown(txin.prevout.hash);\n-                    if (!AlreadyHave(_inv, mempool)) RequestTx(State(pfrom.GetId()), _inv.hash, current_time);\n+                if (!State(pfrom.GetId())->m_wtxid_relay) {\n+                    for (const CTxIn& txin : tx.vin) {\n+                        // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": 444,
      "original_position": 188,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": 450573992,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, it just doesn't seem like a big deal to me. I think https://github.com/ajtowns/bitcoin/commits/202007-wtxid-orphans should be all that's needed to fix it.",
      "created_at": "2020-07-07T08:14:15Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r450687076",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/450687076"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2995,
      "original_line": 2995,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451055578",
      "pull_request_review_id": 444138427,
      "id": 451055578,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1NTU3OA==",
      "diff_hunk": "@@ -2866,10 +2898,17 @@ void ProcessMessage(\n                 uint32_t nFetchFlags = GetFetchFlags(pfrom);\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n-                for (const CTxIn& txin : tx.vin) {\n-                    CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                    pfrom.AddInventoryKnown(txin.prevout.hash);\n-                    if (!AlreadyHave(_inv, mempool)) RequestTx(State(pfrom.GetId()), _inv.hash, current_time);\n+                if (!State(pfrom.GetId())->m_wtxid_relay) {\n+                    for (const CTxIn& txin : tx.vin) {\n+                        // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": 444,
      "original_position": 188,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": 450573992,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ajtowns That does not look bad at all, indeed. I guess we can move ahead with this and re-instate orphan fetching with a patch like that afterwards.",
      "created_at": "2020-07-07T18:16:33Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r451055578",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451055578"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2995,
      "original_line": 2995,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451228334",
      "pull_request_review_id": 444349785,
      "id": 451228334,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyODMzNA==",
      "diff_hunk": "@@ -2866,10 +2898,17 @@ void ProcessMessage(\n                 uint32_t nFetchFlags = GetFetchFlags(pfrom);\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n-                for (const CTxIn& txin : tx.vin) {\n-                    CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                    pfrom.AddInventoryKnown(txin.prevout.hash);\n-                    if (!AlreadyHave(_inv, mempool)) RequestTx(State(pfrom.GetId()), _inv.hash, current_time);\n+                if (!State(pfrom.GetId())->m_wtxid_relay) {\n+                    for (const CTxIn& txin : tx.vin) {\n+                        // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": 444,
      "original_position": 188,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": 450573992,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems like it would fit in well with the tx relay overhaul, if you stole another bit from m_sequence for the txid vs wtxid flag to me.",
      "created_at": "2020-07-08T01:18:17Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r451228334",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451228334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2995,
      "original_line": 2995,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451250911",
      "pull_request_review_id": 444375877,
      "id": 451250911,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1MDkxMQ==",
      "diff_hunk": "@@ -1685,8 +1700,9 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, inv.type == MSG_WTX, mempool_req, longlived_mempool_time);\n         if (tx) {\n+            // WTX and WITNESS_TX imply we serialize with witness\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add support for tx-relay via wtxid\"\r\n\r\nI think `RemoveUnbroadcastTx` will always take txids, not wtxids, so this should be changed to `tx->GetHash()`.",
      "created_at": "2020-07-08T02:47:05Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r451250911",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451250911"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1708,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451252043",
      "pull_request_review_id": 444375877,
      "id": 451252043,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1MjA0Mw==",
      "diff_hunk": "@@ -2866,10 +2898,17 @@ void ProcessMessage(\n                 uint32_t nFetchFlags = GetFetchFlags(pfrom);\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n-                for (const CTxIn& txin : tx.vin) {\n-                    CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                    pfrom.AddInventoryKnown(txin.prevout.hash);\n-                    if (!AlreadyHave(_inv, mempool)) RequestTx(State(pfrom.GetId()), _inv.hash, current_time);\n+                if (!State(pfrom.GetId())->m_wtxid_relay) {\n+                    for (const CTxIn& txin : tx.vin) {\n+                        // Here, we only have the txid (and not wtxid) of the",
      "path": "src/net_processing.cpp",
      "position": 444,
      "original_position": 188,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": 450573992,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ajtowns Exactly!",
      "created_at": "2020-07-08T02:51:36Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r451252043",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451252043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2995,
      "original_line": 2995,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451354525",
      "pull_request_review_id": 444375877,
      "id": 451354525,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM1NDUyNQ==",
      "diff_hunk": "@@ -693,8 +717,19 @@ class CTxMemPool\n         return (mapTx.count(hash) != 0);\n     }\n \n+    bool wtxid_exists(const uint256& hash) const\n+    {\n+        LOCK(cs);\n+        return (mapTx.get<index_by_wtxid>().count(hash) != 0);\n+    }\n+\n     CTransactionRef get(const uint256& hash) const;\n-    TxMempoolInfo info(const uint256& hash) const;\n+    txiter get_iter_from_wtxid(const uint256& wtxid) const EXCLUSIVE_LOCKS_REQUIRED(cs)",
      "path": "src/txmempool.h",
      "position": 95,
      "original_position": 77,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "782a0b04496738030e3e51a6bf44aa5b426870b9",
      "in_reply_to_id": 399693288,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add a wtxid-index to the mempool\"\r\n\r\nI think this would be a nice improvement.",
      "created_at": "2020-07-08T07:57:58Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r451354525",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451354525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 729,
      "original_line": 729,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451751532",
      "pull_request_review_id": 445034388,
      "id": 451751532,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1MTUzMg==",
      "diff_hunk": "@@ -1685,8 +1700,9 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, mempool_req, longlived_mempool_time);\n+        CTransactionRef tx = FindTxForGetData(pfrom, inv.hash, inv.type == MSG_WTX, mempool_req, longlived_mempool_time);\n         if (tx) {\n+            // WTX and WITNESS_TX imply we serialize with witness\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman->PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(inv.hash);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": 451250911,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks!",
      "created_at": "2020-07-08T18:40:50Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r451751532",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/451751532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1708,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456824787",
      "pull_request_review_id": 451080504,
      "id": 456824787,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgyNDc4Nw==",
      "diff_hunk": "@@ -1296,9 +1296,9 @@ def test_tx_relay_after_segwit_activation(self):\n \n         # Node will not be blinded to the transaction\n         self.std_node.announce_tx_and_wait_for_getdata(tx3)\n-        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, True, False, 'tx-size')\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, True, False)",
      "path": "test/functional/p2p_segwit.py",
      "position": null,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": 447795446,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Took me forever to remember the issue here -- the first string check can stay, but the second one has to be removed because now that we cache failure of wtxid's in the recentRejects filter, the reason for failure on the second validation attempt will be different.",
      "created_at": "2020-07-18T20:25:54Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r456824787",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456824787"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456836108",
      "pull_request_review_id": 451086888,
      "id": 456836108,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgzNjEwOA==",
      "diff_hunk": "@@ -1296,9 +1296,9 @@ def test_tx_relay_after_segwit_activation(self):\n \n         # Node will not be blinded to the transaction\n         self.std_node.announce_tx_and_wait_for_getdata(tx3)\n-        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, True, False, 'tx-size')\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, True, False)",
      "path": "test/functional/p2p_segwit.py",
      "position": null,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": 447795446,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reinstating this first string check (and the second line was removed in a later commit anyway).",
      "created_at": "2020-07-18T22:57:44Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r456836108",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456836108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456836126",
      "pull_request_review_id": 451086901,
      "id": 456836126,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgzNjEyNg==",
      "diff_hunk": "@@ -1236,6 +1237,7 @@ void PeerLogicValidation::BlockConnected(const std::shared_ptr<const CBlock>& pb\n         LOCK(g_cs_recent_confirmed_transactions);\n         for (const auto& ptx : pblock->vtx) {\n             g_recent_confirmed_transactions->insert(ptx->GetHash());\n+            g_recent_confirmed_transactions->insert(ptx->GetWitnessHash());",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "95d729ad020dac39f93542e5366c15eba38d6c99",
      "in_reply_to_id": 450530214,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-07-18T22:58:00Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r456836126",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456836126"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1240,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456836147",
      "pull_request_review_id": 451086915,
      "id": 456836147,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgzNjE0Nw==",
      "diff_hunk": "@@ -391,10 +391,11 @@ const uint32_t MSG_TYPE_MASK = 0xffffffff >> 2;\n  * These numbers are defined by the protocol. When adding a new value, be sure\n  * to mention it in the respective BIP.\n  */\n-enum GetDataMsg {\n+enum GetDataMsg : uint32_t {\n     UNDEFINED = 0,\n     MSG_TX = 1,\n     MSG_BLOCK = 2,\n+    MSG_WTX = 5,                                      //!< Defined in BIP 339\n     // The following can only occur in getdata. Invs always use TX or BLOCK.",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 10,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "5c7c3f44bdb932c96645d74da9284e73196036d0",
      "in_reply_to_id": 450581797,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2020-07-18T22:58:14Z",
      "updated_at": "2020-07-19T06:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r456836147",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456836147"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457768442",
      "pull_request_review_id": 452049233,
      "id": 457768442,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2ODQ0Mg==",
      "diff_hunk": "@@ -2908,14 +2908,15 @@ void ProcessMessage(\n                 // We will continue to reject this tx since it has rejected\n                 // parents so avoid re-requesting it from other peers.\n                 recentRejects->insert(tx.GetHash());\n+                recentRejects->insert(tx.GetWitnessHash());",
      "path": "src/net_processing.cpp",
      "position": 465,
      "original_position": 19,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "8e68fc246d09f1e6c6dfa8c676969d97c2eb4334",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We set `fRejectedParents` based on parent's _txid_ in `recentRejects`. If parent has been previously announced and rejected based on wtxid only we won't found it. So we won't add this orphan and may fetch it again. I don't see this case covered in new test ?\r\n",
      "created_at": "2020-07-21T00:38:49Z",
      "updated_at": "2020-07-21T00:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r457768442",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457768442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3022,
      "original_line": 2911,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457775247",
      "pull_request_review_id": 452056852,
      "id": 457775247,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc3NTI0Nw==",
      "diff_hunk": "@@ -2908,14 +2908,15 @@ void ProcessMessage(\n                 // We will continue to reject this tx since it has rejected\n                 // parents so avoid re-requesting it from other peers.\n                 recentRejects->insert(tx.GetHash());\n+                recentRejects->insert(tx.GetWitnessHash());",
      "path": "src/net_processing.cpp",
      "position": 465,
      "original_position": 19,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "8e68fc246d09f1e6c6dfa8c676969d97c2eb4334",
      "in_reply_to_id": 457768442,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also if we fix it, and parent txA is rejected due to a mutated witness, child txB with a _valid_ witness will be pinned in `recentRejects`. If parent txA is re-announced and accepted with a new witness, propagation of child txB will still fail until next block, assuming there is a unique valid witness known. So in multi-party, competing scenario, you introduce a _slight_ delay vector. I think that's okay if an attacker can't repeat this game at each block. ",
      "created_at": "2020-07-21T01:04:19Z",
      "updated_at": "2020-07-21T01:14:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r457775247",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/457775247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3022,
      "original_line": 2911,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458229569",
      "pull_request_review_id": 452629440,
      "id": 458229569,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyOTU2OQ==",
      "diff_hunk": "@@ -734,19 +737,19 @@ class CTxMemPool\n     size_t DynamicMemoryUsage() const;\n \n     /** Adds a transaction to the unbroadcast set */\n-    void AddUnbroadcastTx(const uint256& txid) {\n+    void AddUnbroadcastTx(const uint256& txid, const uint256& wtxid) {\n         LOCK(cs);\n         // Sanity Check: the transaction should also be in the mempool\n         if (exists(txid)) {\n-            m_unbroadcast_txids.insert(txid);\n+            m_unbroadcast_txids[txid] = wtxid;",
      "path": "src/txmempool.h",
      "position": 112,
      "original_position": 24,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "c7eb6b4f1fe5bd76388a023529977674534334a7",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `std::map::operator[]` returns a reference to the value if the key already exists ? You might broadcast a transaction with different witnesses and ideally you should track all of them. I don't know any application relying on this behavior though so maybe not worthy to fix.",
      "created_at": "2020-07-21T16:27:55Z",
      "updated_at": "2020-07-21T17:02:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r458229569",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458229569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 744,
      "original_line": 744,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458383811",
      "pull_request_review_id": 452824126,
      "id": 458383811,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM4MzgxMQ==",
      "diff_hunk": "@@ -734,19 +737,19 @@ class CTxMemPool\n     size_t DynamicMemoryUsage() const;\n \n     /** Adds a transaction to the unbroadcast set */\n-    void AddUnbroadcastTx(const uint256& txid) {\n+    void AddUnbroadcastTx(const uint256& txid, const uint256& wtxid) {\n         LOCK(cs);\n         // Sanity Check: the transaction should also be in the mempool\n         if (exists(txid)) {\n-            m_unbroadcast_txids.insert(txid);\n+            m_unbroadcast_txids[txid] = wtxid;",
      "path": "src/txmempool.h",
      "position": 112,
      "original_position": 24,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "c7eb6b4f1fe5bd76388a023529977674534334a7",
      "in_reply_to_id": 458229569,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Leaving this as-is.  There are a whole host of other places in our code that would need to change in order to support tracking of multiple transactions with the same txid (wallet, relay logic, etc).",
      "created_at": "2020-07-21T20:58:42Z",
      "updated_at": "2020-07-21T20:58:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r458383811",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458383811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 744,
      "original_line": 744,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458385588",
      "pull_request_review_id": 452826278,
      "id": 458385588,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM4NTU4OA==",
      "diff_hunk": "@@ -2908,14 +2908,15 @@ void ProcessMessage(\n                 // We will continue to reject this tx since it has rejected\n                 // parents so avoid re-requesting it from other peers.\n                 recentRejects->insert(tx.GetHash());\n+                recentRejects->insert(tx.GetWitnessHash());",
      "path": "src/net_processing.cpp",
      "position": 465,
      "original_position": 19,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "8e68fc246d09f1e6c6dfa8c676969d97c2eb4334",
      "in_reply_to_id": 457768442,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> We set `fRejectedParents` based on parent's _txid_ in `recentRejects`. If parent has been previously announced and rejected based on wtxid only we won't found it. So we won't add this orphan and may fetch it again. I don't see this case covered in new test ?\r\n\r\nYes, this is an unfortunate problem, but I don't see a way to fix the redownloading of transactions with failed parent without implementing a new p2p protocol to support efficiently communicating the unconfirmed ancestor wtxid's of a given transaction (in order to know whether to reprocess a given transaction).\r\n\r\nNote that before this PR, we have this same problem not just for child transactions of a reject parent, but for _all_ transactions that have witnesses which fail our policy checks.",
      "created_at": "2020-07-21T21:02:06Z",
      "updated_at": "2020-07-21T21:02:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r458385588",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458385588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3022,
      "original_line": 2911,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458442114",
      "pull_request_review_id": 452892369,
      "id": 458442114,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MjExNA==",
      "diff_hunk": "@@ -2908,14 +2908,15 @@ void ProcessMessage(\n                 // We will continue to reject this tx since it has rejected\n                 // parents so avoid re-requesting it from other peers.\n                 recentRejects->insert(tx.GetHash());\n+                recentRejects->insert(tx.GetWitnessHash());",
      "path": "src/net_processing.cpp",
      "position": 465,
      "original_position": 19,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "8e68fc246d09f1e6c6dfa8c676969d97c2eb4334",
      "in_reply_to_id": 457768442,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "~~In theory we could distinguish whether failure is due to a definitely-not-witness-related reason, and in that case, add both the txid and wtxid to the recentRejects filter. I don't think this accomplishes much, because it won't occur in non-adverserial scenarios, and in adverserial ones, the attacker can just use invalid witnesses if he wants to cause harm with invalid transactions.~~\r\n\r\nEdit: seems the code is already doing that for transactions spending rejected ones.",
      "created_at": "2020-07-21T23:15:09Z",
      "updated_at": "2020-07-22T01:23:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r458442114",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458442114"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3022,
      "original_line": 2911,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458484548",
      "pull_request_review_id": 452938851,
      "id": 458484548,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4NDU0OA==",
      "diff_hunk": "@@ -2908,14 +2908,15 @@ void ProcessMessage(\n                 // We will continue to reject this tx since it has rejected\n                 // parents so avoid re-requesting it from other peers.\n                 recentRejects->insert(tx.GetHash());\n+                recentRejects->insert(tx.GetWitnessHash());",
      "path": "src/net_processing.cpp",
      "position": 465,
      "original_position": 19,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "8e68fc246d09f1e6c6dfa8c676969d97c2eb4334",
      "in_reply_to_id": 457768442,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think we could try to special case the common scenario that we expect to happen at some point: some transaction spending a segwit version 1 output is rejected by (older) software as nonstandard, and then child transactions are relayed and redownloaded from each upgraded peer that announces it because the parent transaction's txid wouldn't be found in the reject filter.  We could improve this behavior by treating failures in `AreInputsStandard()` as indicative of the txid being definitely bad, and therefore add the txid to the reject filter (even though the transaction has a witness).\r\n\r\nI think my preference would be to defer this kind of somewhat-tricky-to-reason-about change to a future PR, since this PR seems ready to me and is already an improvement, but if others feel differently we should discuss.",
      "created_at": "2020-07-22T01:43:48Z",
      "updated_at": "2020-07-22T01:43:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r458484548",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458484548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3022,
      "original_line": 2911,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459164094",
      "pull_request_review_id": 453778896,
      "id": 459164094,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE2NDA5NA==",
      "diff_hunk": "@@ -2908,14 +2908,15 @@ void ProcessMessage(\n                 // We will continue to reject this tx since it has rejected\n                 // parents so avoid re-requesting it from other peers.\n                 recentRejects->insert(tx.GetHash());\n+                recentRejects->insert(tx.GetWitnessHash());",
      "path": "src/net_processing.cpp",
      "position": 465,
      "original_position": 19,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "8e68fc246d09f1e6c6dfa8c676969d97c2eb4334",
      "in_reply_to_id": 457768442,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This issue is only a bandwidth waste and this PR is already a huge improvement on this side, that's all good to defer this to future work, orphan parent handling is already an area known to be improved.",
      "created_at": "2020-07-23T00:59:22Z",
      "updated_at": "2020-07-23T00:59:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r459164094",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459164094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3022,
      "original_line": 2911,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/460495254",
      "pull_request_review_id": 455342192,
      "id": 460495254,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ5NTI1NA==",
      "diff_hunk": "@@ -549,8 +573,11 @@ class CTxMemPool\n \n     std::vector<indexed_transaction_set::const_iterator> GetSortedDepthAndScore() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n-    /** track locally submitted transactions to periodically retry initial broadcast */\n-    std::set<uint256> m_unbroadcast_txids GUARDED_BY(cs);\n+    /**\n+     * track locally submitted transactions to periodically retry initial broadcast\n+     * map of txid -> wtxid\n+     */\n+    std::map<uint256, uint256> m_unbroadcast_txids GUARDED_BY(cs);",
      "path": "src/txmempool.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this change is necessary (or desirable). I guess it was prompted by this comment: https://github.com/bitcoin/bitcoin/pull/18038#discussion_r393293074 , but storing this as a map from txid->wtxid is unnecessary and confusing, since it obfuscates the purpose of this data, which is a *set* of transactions that may need to be rebroadcast.\r\n\r\nThe only place that the wtxid is read from this map is in `ReattemptInitialBroadcast()`, at which point we can fetch the transaction from the mempool (we very nearly do that with `m_mempool.exists()`), and get the wtxid from there.\r\n\r\ncc @amitiuttarwar @ariard ",
      "created_at": "2020-07-26T08:07:36Z",
      "updated_at": "2020-07-26T08:17:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r460495254",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/460495254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 580,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/460496023",
      "pull_request_review_id": 455342192,
      "id": 460496023,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ5NjAyMw==",
      "diff_hunk": "@@ -1430,11 +1468,17 @@ bool static AlreadyHave(const CInv& inv, const CTxMemPool& mempool) EXCLUSIVE_LO\n     return true;\n }\n \n-void RelayTransaction(const uint256& txid, const CConnman& connman)\n+void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman& connman)\n {\n-    connman.ForEachNode([&txid](CNode* pnode)\n+    connman.ForEachNode([&txid, &wtxid](CNode* pnode)\n     {\n-        pnode->PushTxInventory(txid);\n+        AssertLockHeld(cs_main);\n+        CNodeState &state = *State(pnode->GetId());",
      "path": "src/net_processing.cpp",
      "position": 216,
      "original_position": 216,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We shouldn't be indiscriminately taking the address of a return value which may be `nullptr`. I know the same pattern exists in a few other places, but really we should check for existence here before dereferencing the pointer.",
      "created_at": "2020-07-26T08:15:35Z",
      "updated_at": "2020-07-26T08:17:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r460496023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/460496023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1476,
      "original_line": 1476,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/460546336",
      "pull_request_review_id": 455377646,
      "id": 460546336,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NjMzNg==",
      "diff_hunk": "@@ -549,8 +573,11 @@ class CTxMemPool\n \n     std::vector<indexed_transaction_set::const_iterator> GetSortedDepthAndScore() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n-    /** track locally submitted transactions to periodically retry initial broadcast */\n-    std::set<uint256> m_unbroadcast_txids GUARDED_BY(cs);\n+    /**\n+     * track locally submitted transactions to periodically retry initial broadcast\n+     * map of txid -> wtxid\n+     */\n+    std::map<uint256, uint256> m_unbroadcast_txids GUARDED_BY(cs);",
      "path": "src/txmempool.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "in_reply_to_id": 460495254,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My mistake here, effectively you need to announce transactions from the unbroadcast set by wtxid to upgraded peers but as you point out it doesn't mean we need to cache them as a solution.\r\n\r\nMaybe we should precise unbroadcast set semantic wrt same txid, different wtxids, we only guarantee reattempt to the best mempool candidate known for a given txid at the time we call `ReattemptInitialBroadcast`, not insertion (`AddUnbroadcastTx`). https://github.com/bitcoin/bitcoin/pull/18044#discussion_r458229569 isn't an issue.",
      "created_at": "2020-07-26T16:23:25Z",
      "updated_at": "2020-07-26T16:24:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r460546336",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/460546336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 580,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/460704950",
      "pull_request_review_id": 455547884,
      "id": 460704950,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwNDk1MA==",
      "diff_hunk": "@@ -549,8 +573,11 @@ class CTxMemPool\n \n     std::vector<indexed_transaction_set::const_iterator> GetSortedDepthAndScore() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n-    /** track locally submitted transactions to periodically retry initial broadcast */\n-    std::set<uint256> m_unbroadcast_txids GUARDED_BY(cs);\n+    /**\n+     * track locally submitted transactions to periodically retry initial broadcast\n+     * map of txid -> wtxid\n+     */\n+    std::map<uint256, uint256> m_unbroadcast_txids GUARDED_BY(cs);",
      "path": "src/txmempool.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "in_reply_to_id": 460495254,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I really think this \"same txid, different wtxid\" thing is a complete red herring. The mempool can only ever be aware of one witness for a transaction, so any attempt to announce the transaction via a different wtxid would fail anyway. As Suhas pointed out earlier (https://github.com/bitcoin/bitcoin/pull/18044#discussion_r458383811), to support tracking multiple witnesses we'd need to make significant changes many of our components. Besides, the unbroadcast set is transactions that we created ourselves, so we're not expecting the witnesses to change.",
      "created_at": "2020-07-27T07:45:49Z",
      "updated_at": "2020-07-27T07:45:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r460704950",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/460704950"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 580,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/460713629",
      "pull_request_review_id": 455558688,
      "id": 460713629,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxMzYyOQ==",
      "diff_hunk": "@@ -549,8 +573,11 @@ class CTxMemPool\n \n     std::vector<indexed_transaction_set::const_iterator> GetSortedDepthAndScore() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n-    /** track locally submitted transactions to periodically retry initial broadcast */\n-    std::set<uint256> m_unbroadcast_txids GUARDED_BY(cs);\n+    /**\n+     * track locally submitted transactions to periodically retry initial broadcast\n+     * map of txid -> wtxid\n+     */\n+    std::map<uint256, uint256> m_unbroadcast_txids GUARDED_BY(cs);",
      "path": "src/txmempool.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "in_reply_to_id": 460495254,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree with @jnewbery. There is no real way that we can reasonable start tracking multiple witnesses for the same transaction (either in the mempool or the wallet, ...), so unless this map's storing of wtxid is needed for efficiency, it seems just a set of txid should be sufficient here.",
      "created_at": "2020-07-27T08:02:18Z",
      "updated_at": "2020-07-27T08:02:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r460713629",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/460713629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 580,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/461325271",
      "pull_request_review_id": 456310334,
      "id": 461325271,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMyNTI3MQ==",
      "diff_hunk": "@@ -549,8 +573,11 @@ class CTxMemPool\n \n     std::vector<indexed_transaction_set::const_iterator> GetSortedDepthAndScore() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n-    /** track locally submitted transactions to periodically retry initial broadcast */\n-    std::set<uint256> m_unbroadcast_txids GUARDED_BY(cs);\n+    /**\n+     * track locally submitted transactions to periodically retry initial broadcast\n+     * map of txid -> wtxid\n+     */\n+    std::map<uint256, uint256> m_unbroadcast_txids GUARDED_BY(cs);",
      "path": "src/txmempool.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "in_reply_to_id": 460495254,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "😮   wow that's a great point @jnewbery. thank you!!\r\n\r\nI thought during implementation I ran into something that prevented me from exclusively having txids on the set, but that evaluation is simply wrong. I've taken a first pass at reverting unbroadcast to a set here: https://github.com/amitiuttarwar/bitcoin/commit/f51cccdd6c97d1b1e45163d56ebd6b7d29a2f587. I'll need to revisit with fresh eyes and then will PR. \r\n\r\nI agree set makes more sense than a map- its simpler, communicates the intent better, and there's no noticeable efficiency gain with the map. Since we check the transaction is the mempool, the difference between map vs set is the difference between calling `CTxMemPool::get` vs `CTxMemPool::exists`. This boils down to `mapTx.find(hash)` vs `mapTx.count(hash)`, which both have log(n) complexity (according to the boost docs I found).",
      "created_at": "2020-07-28T05:22:49Z",
      "updated_at": "2020-07-28T05:22:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r461325271",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/461325271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 580,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/461332635",
      "pull_request_review_id": 456318478,
      "id": 461332635,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMzMjYzNQ==",
      "diff_hunk": "@@ -549,8 +573,11 @@ class CTxMemPool\n \n     std::vector<indexed_transaction_set::const_iterator> GetSortedDepthAndScore() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n-    /** track locally submitted transactions to periodically retry initial broadcast */\n-    std::set<uint256> m_unbroadcast_txids GUARDED_BY(cs);\n+    /**\n+     * track locally submitted transactions to periodically retry initial broadcast\n+     * map of txid -> wtxid\n+     */\n+    std::map<uint256, uint256> m_unbroadcast_txids GUARDED_BY(cs);",
      "path": "src/txmempool.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "in_reply_to_id": 460495254,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@amitiuttarwar mapTX is a multiindex and we use a hashed index not a ordered index so it's O(1) lookup. Not sure exactly how mapTX relates to m_unboardcast_txids though...",
      "created_at": "2020-07-28T05:46:30Z",
      "updated_at": "2020-07-28T05:46:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r461332635",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/461332635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 580,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/461359274",
      "pull_request_review_id": 456350681,
      "id": 461359274,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1OTI3NA==",
      "diff_hunk": "@@ -549,8 +573,11 @@ class CTxMemPool\n \n     std::vector<indexed_transaction_set::const_iterator> GetSortedDepthAndScore() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n-    /** track locally submitted transactions to periodically retry initial broadcast */\n-    std::set<uint256> m_unbroadcast_txids GUARDED_BY(cs);\n+    /**\n+     * track locally submitted transactions to periodically retry initial broadcast\n+     * map of txid -> wtxid\n+     */\n+    std::map<uint256, uint256> m_unbroadcast_txids GUARDED_BY(cs);",
      "path": "src/txmempool.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "in_reply_to_id": 460495254,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@amitiuttarwar that patch looks correct from a quick skim. I'll review fully once you open a PR.\r\n\r\nAs @JeremyRubin points out, we're using a `boost::multi_index::hashed_unique` index for the wtxid index, which has constant time search/retrieval.",
      "created_at": "2020-07-28T06:56:42Z",
      "updated_at": "2020-07-28T06:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r461359274",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/461359274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 580,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463532611",
      "pull_request_review_id": 459073764,
      "id": 463532611,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzMjYxMQ==",
      "diff_hunk": "@@ -2899,15 +3014,30 @@ void ProcessMessage(\n                 LogPrint(BCLog::MEMPOOL, \"not keeping orphan with rejected parents %s\\n\",tx.GetHash().ToString());\n                 // We will continue to reject this tx since it has rejected\n                 // parents so avoid re-requesting it from other peers.\n+                // Here we add both the txid and the wtxid, as we know that\n+                // regardless of what witness is provided, we will not accept\n+                // this, so we don't need to allow for redownload of this txid\n+                // from any of our non-wtxidrelay peers.\n                 recentRejects->insert(tx.GetHash());\n+                recentRejects->insert(tx.GetWitnessHash());\n             }\n         } else {\n-            if (!tx.HasWitness() && state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {",
      "path": "src/net_processing.cpp",
      "position": 472,
      "original_position": 472,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The `else if (tx.HasWitness() && RecursiveDynamicUsage(*ptx) < 100000)` block below is now dead code and should be removed (anything that doesn't go in this if branch is `TX_WITNESS_STRIPPED` and therefore doesn't have a witness)",
      "created_at": "2020-07-31T10:27:24Z",
      "updated_at": "2020-07-31T10:27:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r463532611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463532611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3025,
      "original_line": 3025,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463820204",
      "pull_request_review_id": 459450889,
      "id": 463820204,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyMDIwNA==",
      "diff_hunk": "@@ -5083,19 +5083,22 @@ bool LoadMempool(CTxMemPool& pool)\n         }\n \n         // TODO: remove this try except in v0.22\n+        std::map<uint256, uint256> unbroadcast_txids;\n         try {\n-          std::set<uint256> unbroadcast_txids;\n           file >> unbroadcast_txids;\n           unbroadcast = unbroadcast_txids.size();\n-\n-          for (const auto& txid : unbroadcast_txids) {",
      "path": "src/validation.cpp",
      "position": 19,
      "original_position": 10,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "c7eb6b4f1fe5bd76388a023529977674534334a7",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Clarification: does moving this out of the try block have any behavior change? Is it possible that a semi-corrupt unbroadcast_txids would partially deserialize and then have only some entries?",
      "created_at": "2020-07-31T20:28:40Z",
      "updated_at": "2020-07-31T21:06:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r463820204",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463820204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5091,
      "original_line": 5091,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463820479",
      "pull_request_review_id": 459450889,
      "id": 463820479,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyMDQ3OQ==",
      "diff_hunk": "@@ -5083,19 +5083,22 @@ bool LoadMempool(CTxMemPool& pool)\n         }\n \n         // TODO: remove this try except in v0.22\n+        std::map<uint256, uint256> unbroadcast_txids;\n         try {\n-          std::set<uint256> unbroadcast_txids;\n           file >> unbroadcast_txids;\n           unbroadcast = unbroadcast_txids.size();\n-\n-          for (const auto& txid : unbroadcast_txids) {\n-            pool.AddUnbroadcastTx(txid);\n-          }\n         } catch (const std::exception&) {\n           // mempool.dat files created prior to v0.21 will not have an",
      "path": "src/validation.cpp",
      "position": 23,
      "original_position": 14,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "c7eb6b4f1fe5bd76388a023529977674534334a7",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Suggest: clearing unbroadcast_txids here in case has garbage data.",
      "created_at": "2020-07-31T20:29:22Z",
      "updated_at": "2020-07-31T21:06:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r463820479",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463820479"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5091,
      "original_line": 5091,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463821665",
      "pull_request_review_id": 459450889,
      "id": 463821665,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyMTY2NQ==",
      "diff_hunk": "@@ -5083,19 +5083,22 @@ bool LoadMempool(CTxMemPool& pool)\n         }\n \n         // TODO: remove this try except in v0.22\n+        std::map<uint256, uint256> unbroadcast_txids;\n         try {\n-          std::set<uint256> unbroadcast_txids;\n           file >> unbroadcast_txids;\n           unbroadcast = unbroadcast_txids.size();\n-\n-          for (const auto& txid : unbroadcast_txids) {\n-            pool.AddUnbroadcastTx(txid);\n-          }\n         } catch (const std::exception&) {\n           // mempool.dat files created prior to v0.21 will not have an\n           // unbroadcast set. No need to log a failure if parsing fails here.\n         }\n-\n+        for (const auto& elem : unbroadcast_txids) {\n+            // Don't add unbroadcast transactions that didn't get back into the\n+            // mempool.",
      "path": "src/validation.cpp",
      "position": 29,
      "original_position": 20,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "c7eb6b4f1fe5bd76388a023529977674534334a7",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this correct? Should this transaction get queued somewhere for rebroadcasting? Or is it a known precondition that because it failed to get into the mempool before this line it will fail again?",
      "created_at": "2020-07-31T20:32:09Z",
      "updated_at": "2020-07-31T21:06:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r463821665",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463821665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5096,
      "original_line": 5096,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463822371",
      "pull_request_review_id": 459450889,
      "id": 463822371,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyMjM3MQ==",
      "diff_hunk": "@@ -5083,19 +5083,22 @@ bool LoadMempool(CTxMemPool& pool)\n         }\n \n         // TODO: remove this try except in v0.22\n+        std::map<uint256, uint256> unbroadcast_txids;\n         try {\n-          std::set<uint256> unbroadcast_txids;\n           file >> unbroadcast_txids;\n           unbroadcast = unbroadcast_txids.size();\n-\n-          for (const auto& txid : unbroadcast_txids) {\n-            pool.AddUnbroadcastTx(txid);\n-          }\n         } catch (const std::exception&) {\n           // mempool.dat files created prior to v0.21 will not have an\n           // unbroadcast set. No need to log a failure if parsing fails here.\n         }\n-\n+        for (const auto& elem : unbroadcast_txids) {\n+            // Don't add unbroadcast transactions that didn't get back into the\n+            // mempool.",
      "path": "src/validation.cpp",
      "position": 29,
      "original_position": 20,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "c7eb6b4f1fe5bd76388a023529977674534334a7",
      "in_reply_to_id": 463821665,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I can't think of why we'd want it in the unbroadcast if it didn't make it back in the mempool, but just double checking.",
      "created_at": "2020-07-31T20:33:43Z",
      "updated_at": "2020-07-31T21:06:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r463822371",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463822371"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5096,
      "original_line": 5096,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463827102",
      "pull_request_review_id": 459450889,
      "id": 463827102,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyNzEwMg==",
      "diff_hunk": "@@ -4246,6 +4246,11 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                             if (ret.second) {\n                                 vRelayExpiration.push_back(std::make_pair(nNow + std::chrono::microseconds{RELAY_TX_CACHE_TIME}.count(), ret.first));\n                             }\n+                            // Add wtxid-based lookup into mapRelay as well, so that peers can request by wtxid\n+                            auto ret2 = mapRelay.emplace(ret.first->second->GetWitnessHash(), ret.first->second);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "08b39955ec7f84e835ab0b1366f0dd28dfd6ce03",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This line relies on the idea that it is cryptographically hard to find a TXID such that another WTXID (for a different txid) is the same. It's not clear to me that this is provably true because there may be serialization ambiguity.\r\n\r\nMy preference would be to have two different mapRelays which have a strongly typed key.\r\n\r\nIt's probably low risk, but maybe worth documenting or at least somehow guaranteeing there can never be ambiguity. I don't think there can be? Because \r\n\r\n```\r\nDefinition of txid remains unchanged: the double SHA256 of the traditional serialization format:\r\n\r\n  [nVersion][txins][txouts][nLockTime]\r\n  \r\n\r\nA new wtxid is defined: the double SHA256 of the new serialization with witness data:\r\n\r\n  [nVersion][marker][flag][txins][txouts][witness][nLockTime]\r\n```  \r\n\r\nbut it's not clear to me that with some setting of marker and flag you could cause an overlap.",
      "created_at": "2020-07-31T20:45:28Z",
      "updated_at": "2020-07-31T21:06:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r463827102",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463827102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4250,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463831088",
      "pull_request_review_id": 459450889,
      "id": 463831088,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzMTA4OA==",
      "diff_hunk": "@@ -151,6 +151,7 @@ struct COrphanTx {\n };\n RecursiveMutex g_cs_orphans;\n std::map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(g_cs_orphans);",
      "path": "src/net_processing.cpp",
      "position": 12,
      "original_position": 3,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "85c78d54af462996a0bca6cf97f91e1aa8778ae8",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Because presumably WTXID becomes the primary lookup method, someone may prefer to in the future switch the roles of mapOrphanTransactions and g_orphans_by_wtxid so that the g_orphans_by_wtxid is the owning map. This is a small performance win avoiding an extra iterator lookup.",
      "created_at": "2020-07-31T20:51:38Z",
      "updated_at": "2020-07-31T21:06:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r463831088",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463831088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 155,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463851414",
      "pull_request_review_id": 459483774,
      "id": 463851414,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1MTQxNA==",
      "diff_hunk": "@@ -4246,6 +4246,11 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                             if (ret.second) {\n                                 vRelayExpiration.push_back(std::make_pair(nNow + std::chrono::microseconds{RELAY_TX_CACHE_TIME}.count(), ret.first));\n                             }\n+                            // Add wtxid-based lookup into mapRelay as well, so that peers can request by wtxid\n+                            auto ret2 = mapRelay.emplace(ret.first->second->GetWitnessHash(), ret.first->second);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "08b39955ec7f84e835ab0b1366f0dd28dfd6ce03",
      "in_reply_to_id": 463827102,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "confirmed that  not exists tx tx2. txid(tx) == wtxid(tx2) && tx != tx2\r\n\r\n```\r\n[7/31/20 14:09] <jeremyrubin> sipa: is this proven: not exists tx tx2. txid(tx) == wtxid(tx2) && tx != tx2\r\n[7/31/20 14:10] <sipa> jeremyrubin: yes, assuming double-sha256 collision resistance that statement is equivalent to ser_without_witness(tx) == ser_with_witness(tx2)\r\n[7/31/20 14:11] <sipa> either both tx and tx2 don't have a witness, and the statement is obviously false\r\n[7/31/20 14:11] <sipa> or tx2 has a witness, in which case the serialization definitely differs, due to the flag byte\r\n[7/31/20 14:13] <jeremyrubin> but it's not possible in tx2 that the flag + marker can be read as the length field for the txins?\r\n[7/31/20 14:13] <jeremyrubin> because a leading 0 byte means it can't be a length right?\r\n[7/31/20 14:13] <jeremyrubin> in which case it would be marker and not flag that guarantees uniqueness?\r\n[7/31/20 14:15] <sipa> a valid transactions cannot have 0 inputs\r\n[7/31/20 14:15] <sipa> the witness serialization is intended to be unambiguously different from the old serialization\r\n[7/31/20 14:15] <sipa> (except that we later discovered that people do pass around transactions with 0 inputs, where things break... but that's not relevant for valid network transactions)(\r\n[7/31/20 14:17] <jeremyrubin> gotcha. and the unambiguity is because it's a compactsize field preceding the vIn\r\n[7/31/20 14:18] <jeremyrubin> so 0 is always read as a 1 byte number in any context\r\n[7/31/20 14:18] <-- proofofkeags (~proofofke@174-29-8-246.hlrn.qwest.net) has left this server (Remote host closed the connection).\r\n[7/31/20 14:19] <sipa> indeed\r\n```",
      "created_at": "2020-07-31T21:20:06Z",
      "updated_at": "2020-07-31T21:20:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r463851414",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463851414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4250,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464076378",
      "pull_request_review_id": 459647729,
      "id": 464076378,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA3NjM3OA==",
      "diff_hunk": "@@ -1297,8 +1321,6 @@ def test_tx_relay_after_segwit_activation(self):\n         # Node will not be blinded to the transaction\n         self.std_node.announce_tx_and_wait_for_getdata(tx3)\n         test_transaction_acceptance(self.nodes[1], self.std_node, tx3, True, False, 'tx-size')\n-        self.std_node.announce_tx_and_wait_for_getdata(tx3)",
      "path": "test/functional/p2p_segwit.py",
      "position": 96,
      "original_position": 95,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "8d8099e97ab8af2126f6fbd223fbd82c52f2e85e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I got really confused reviewing master's test. The surrounding test is dead, with incorrect comments asserting that we are checking for blinding. Seems this was deleted just to make the test pass :grimacing: ",
      "created_at": "2020-08-02T13:03:39Z",
      "updated_at": "2020-08-02T13:03:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r464076378",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464076378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1300,
      "original_line": 1300,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476002698",
      "pull_request_review_id": 474015507,
      "id": 476002698,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjAwMjY5OA==",
      "diff_hunk": "@@ -5083,19 +5083,22 @@ bool LoadMempool(CTxMemPool& pool)\n         }\n \n         // TODO: remove this try except in v0.22\n+        std::map<uint256, uint256> unbroadcast_txids;\n         try {\n-          std::set<uint256> unbroadcast_txids;\n           file >> unbroadcast_txids;\n           unbroadcast = unbroadcast_txids.size();\n-\n-          for (const auto& txid : unbroadcast_txids) {",
      "path": "src/validation.cpp",
      "position": 19,
      "original_position": 10,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "c7eb6b4f1fe5bd76388a023529977674534334a7",
      "in_reply_to_id": 463820204,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "the try block was introduced to specifically catch the error when upgrading around not having an unbroadcast set written to disk. so I think having the initialization & iteration separate actually captures that intent better. \r\n\r\nbut lmk if you think of any specific ways this logic could be problematic",
      "created_at": "2020-08-25T00:34:03Z",
      "updated_at": "2020-08-25T00:34:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r476002698",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476002698"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5091,
      "original_line": 5091,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476011194",
      "pull_request_review_id": 474019167,
      "id": 476011194,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjAxMTE5NA==",
      "diff_hunk": "@@ -5083,19 +5083,22 @@ bool LoadMempool(CTxMemPool& pool)\n         }\n \n         // TODO: remove this try except in v0.22\n+        std::map<uint256, uint256> unbroadcast_txids;\n         try {\n-          std::set<uint256> unbroadcast_txids;\n           file >> unbroadcast_txids;\n           unbroadcast = unbroadcast_txids.size();\n-\n-          for (const auto& txid : unbroadcast_txids) {\n-            pool.AddUnbroadcastTx(txid);\n-          }\n         } catch (const std::exception&) {\n           // mempool.dat files created prior to v0.21 will not have an\n           // unbroadcast set. No need to log a failure if parsing fails here.\n         }\n-\n+        for (const auto& elem : unbroadcast_txids) {\n+            // Don't add unbroadcast transactions that didn't get back into the\n+            // mempool.",
      "path": "src/validation.cpp",
      "position": 29,
      "original_position": 20,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "c7eb6b4f1fe5bd76388a023529977674534334a7",
      "in_reply_to_id": 463821665,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "the unbroadcast set should always be a subset of the mempool. it just maintains txids, so we don't have the capability to do much if its not found. \r\n\r\n> Should this transaction get queued somewhere for rebroadcasting?\r\n\r\ndo you mean re-attempt mempool submission? bc we def wouldn't want to broadcast or rebroadcast a transaction we don't have in our mempool!",
      "created_at": "2020-08-25T00:46:18Z",
      "updated_at": "2020-08-25T00:46:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r476011194",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476011194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5096,
      "original_line": 5096,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476015987",
      "pull_request_review_id": 474021320,
      "id": 476015987,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjAxNTk4Nw==",
      "diff_hunk": "@@ -5083,19 +5083,22 @@ bool LoadMempool(CTxMemPool& pool)\n         }\n \n         // TODO: remove this try except in v0.22\n+        std::map<uint256, uint256> unbroadcast_txids;\n         try {\n-          std::set<uint256> unbroadcast_txids;\n           file >> unbroadcast_txids;\n           unbroadcast = unbroadcast_txids.size();\n-\n-          for (const auto& txid : unbroadcast_txids) {\n-            pool.AddUnbroadcastTx(txid);\n-          }\n         } catch (const std::exception&) {\n           // mempool.dat files created prior to v0.21 will not have an",
      "path": "src/validation.cpp",
      "position": 23,
      "original_position": 14,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "c7eb6b4f1fe5bd76388a023529977674534334a7",
      "in_reply_to_id": 463820479,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "looking into this- is there really a way that the CAutoFile `>>` operator could cause a silent/partial failure? as I mentioned previously the idea of this try catch is just for a smooth upgrade. To elaborate further: so we don't print `Failed to deserialize mempool data on disk: %s. Continuing anyway.\"` when everything actually went fine. the current intention is to remove this in 0.22, so if there's a possibility for `unbroadcast_txids` to have garbage data written, I'd like to think this through more carefully to find a long term solution. ",
      "created_at": "2020-08-25T00:53:45Z",
      "updated_at": "2020-08-25T00:53:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r476015987",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476015987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5091,
      "original_line": 5091,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476028056",
      "pull_request_review_id": 474026936,
      "id": 476028056,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjAyODA1Ng==",
      "diff_hunk": "@@ -5083,19 +5083,22 @@ bool LoadMempool(CTxMemPool& pool)\n         }\n \n         // TODO: remove this try except in v0.22\n+        std::map<uint256, uint256> unbroadcast_txids;\n         try {\n-          std::set<uint256> unbroadcast_txids;\n           file >> unbroadcast_txids;\n           unbroadcast = unbroadcast_txids.size();\n-\n-          for (const auto& txid : unbroadcast_txids) {\n-            pool.AddUnbroadcastTx(txid);\n-          }\n         } catch (const std::exception&) {\n           // mempool.dat files created prior to v0.21 will not have an",
      "path": "src/validation.cpp",
      "position": 23,
      "original_position": 14,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "c7eb6b4f1fe5bd76388a023529977674534334a7",
      "in_reply_to_id": 463820479,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes I believe so? Fortunately for std::map we deserialize an element and then insert it into the map, but is a possibility that we say that there should be 10 elements and there are only 5 elements, or there are 5 elements and their are actually 10. In the event the file is corrupt, we should likely treat it as if the entire thing is corrupt, rather than continuing to process.\r\n\r\nPerhaps we should add an exception to throw from Unserialize if there are not the correct amount of entries?\r\n\r\n\r\n\r\nI'm not sure to the degree we need to worry about files on our own local being corrupt, and there are other forms of corruption that can occur. But because it is a behavior change, I'm noting it.",
      "created_at": "2020-08-25T01:12:02Z",
      "updated_at": "2020-08-25T01:12:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r476028056",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476028056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5091,
      "original_line": 5091,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476029910",
      "pull_request_review_id": 474027786,
      "id": 476029910,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjAyOTkxMA==",
      "diff_hunk": "@@ -5083,19 +5083,22 @@ bool LoadMempool(CTxMemPool& pool)\n         }\n \n         // TODO: remove this try except in v0.22\n+        std::map<uint256, uint256> unbroadcast_txids;\n         try {\n-          std::set<uint256> unbroadcast_txids;\n           file >> unbroadcast_txids;\n           unbroadcast = unbroadcast_txids.size();\n-\n-          for (const auto& txid : unbroadcast_txids) {\n-            pool.AddUnbroadcastTx(txid);\n-          }\n         } catch (const std::exception&) {\n           // mempool.dat files created prior to v0.21 will not have an",
      "path": "src/validation.cpp",
      "position": 23,
      "original_position": 14,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "c7eb6b4f1fe5bd76388a023529977674534334a7",
      "in_reply_to_id": 463820479,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "to be clear the issue only comes up when you don't have enough elements or when you have a half element presently.",
      "created_at": "2020-08-25T01:14:51Z",
      "updated_at": "2020-08-25T01:14:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r476029910",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476029910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5091,
      "original_line": 5091,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476033953",
      "pull_request_review_id": 474029757,
      "id": 476033953,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjAzMzk1Mw==",
      "diff_hunk": "@@ -5083,19 +5083,22 @@ bool LoadMempool(CTxMemPool& pool)\n         }\n \n         // TODO: remove this try except in v0.22\n+        std::map<uint256, uint256> unbroadcast_txids;\n         try {\n-          std::set<uint256> unbroadcast_txids;\n           file >> unbroadcast_txids;\n           unbroadcast = unbroadcast_txids.size();\n-\n-          for (const auto& txid : unbroadcast_txids) {\n-            pool.AddUnbroadcastTx(txid);\n-          }\n         } catch (const std::exception&) {\n           // mempool.dat files created prior to v0.21 will not have an\n           // unbroadcast set. No need to log a failure if parsing fails here.\n         }\n-\n+        for (const auto& elem : unbroadcast_txids) {\n+            // Don't add unbroadcast transactions that didn't get back into the\n+            // mempool.",
      "path": "src/validation.cpp",
      "position": 29,
      "original_position": 20,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "c7eb6b4f1fe5bd76388a023529977674534334a7",
      "in_reply_to_id": 463821665,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yes. it's possible that we may want to resubmit it to the mempool if it was previously in our mempool. What changed to cause it to no longer be accepted?",
      "created_at": "2020-08-25T01:21:01Z",
      "updated_at": "2020-08-25T01:21:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r476033953",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476033953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5096,
      "original_line": 5096,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483868162",
      "pull_request_review_id": 482994769,
      "id": 483868162,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2ODE2Mg==",
      "diff_hunk": "@@ -1430,11 +1468,17 @@ bool static AlreadyHave(const CInv& inv, const CTxMemPool& mempool) EXCLUSIVE_LO\n     return true;\n }\n \n-void RelayTransaction(const uint256& txid, const CConnman& connman)\n+void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman& connman)\n {\n-    connman.ForEachNode([&txid](CNode* pnode)\n+    connman.ForEachNode([&txid, &wtxid](CNode* pnode)\n     {\n-        pnode->PushTxInventory(txid);\n+        AssertLockHeld(cs_main);\n+        CNodeState &state = *State(pnode->GetId());",
      "path": "src/net_processing.cpp",
      "position": 216,
      "original_position": 216,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "in_reply_to_id": 460496023,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "addressed in https://github.com/bitcoin/bitcoin/pull/19879/commits/fc66d0a65cdc52a3b259effe0c29b5eafb1b5ff5, #19879 ",
      "created_at": "2020-09-04T22:28:25Z",
      "updated_at": "2020-09-04T22:28:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r483868162",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483868162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1476,
      "original_line": 1476,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483868419",
      "pull_request_review_id": 482995065,
      "id": 483868419,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2ODQxOQ==",
      "diff_hunk": "@@ -549,8 +573,11 @@ class CTxMemPool\n \n     std::vector<indexed_transaction_set::const_iterator> GetSortedDepthAndScore() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n-    /** track locally submitted transactions to periodically retry initial broadcast */\n-    std::set<uint256> m_unbroadcast_txids GUARDED_BY(cs);\n+    /**\n+     * track locally submitted transactions to periodically retry initial broadcast\n+     * map of txid -> wtxid\n+     */\n+    std::map<uint256, uint256> m_unbroadcast_txids GUARDED_BY(cs);",
      "path": "src/txmempool.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "in_reply_to_id": 460495254,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "reverted to set in https://github.com/bitcoin/bitcoin/pull/19879/commits/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4, #19879 ",
      "created_at": "2020-09-04T22:29:34Z",
      "updated_at": "2020-09-04T22:29:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r483868419",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483868419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 580,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483868519",
      "pull_request_review_id": 482995162,
      "id": 483868519,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2ODUxOQ==",
      "diff_hunk": "@@ -2899,15 +3014,30 @@ void ProcessMessage(\n                 LogPrint(BCLog::MEMPOOL, \"not keeping orphan with rejected parents %s\\n\",tx.GetHash().ToString());\n                 // We will continue to reject this tx since it has rejected\n                 // parents so avoid re-requesting it from other peers.\n+                // Here we add both the txid and the wtxid, as we know that\n+                // regardless of what witness is provided, we will not accept\n+                // this, so we don't need to allow for redownload of this txid\n+                // from any of our non-wtxidrelay peers.\n                 recentRejects->insert(tx.GetHash());\n+                recentRejects->insert(tx.GetWitnessHash());\n             }\n         } else {\n-            if (!tx.HasWitness() && state.GetResult() != TxValidationResult::TX_WITNESS_MUTATED) {\n-                // Do not use rejection cache for witness transactions or\n-                // witness-stripped transactions, as they can have been malleated.\n-                // See https://github.com/bitcoin/bitcoin/issues/8279 for details.\n+            if (state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {",
      "path": "src/net_processing.cpp",
      "position": 472,
      "original_position": 472,
      "commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "original_commit_id": "0a4f1422cd1c20e12a05d7ff1a2ef1d5e7c654bb",
      "in_reply_to_id": 463532611,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "addressed in: https://github.com/bitcoin/bitcoin/pull/19879/commits/125c0381266e0e05a408f8e1818501ab73d29110, #19879 ",
      "created_at": "2020-09-04T22:29:59Z",
      "updated_at": "2020-09-04T22:29:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18044#discussion_r483868519",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483868519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18044"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3025,
      "original_line": 3025,
      "side": "RIGHT"
    }
  ]
}