{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12659",
    "id": 174157428,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc0MTU3NDI4",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12659",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/12659.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/12659.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12659",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12659/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12659/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12659/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/f4b68b3f8f6bb8ad45a9c13c70be0e24404ecd54",
    "number": 12659,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Improve Fatal LevelDB Log Messages",
    "user": {
      "login": "eklitzke",
      "id": 2734,
      "node_id": "MDQ6VXNlcjI3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklitzke",
      "html_url": "https://github.com/eklitzke",
      "followers_url": "https://api.github.com/users/eklitzke/followers",
      "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
      "organizations_url": "https://api.github.com/users/eklitzke/orgs",
      "repos_url": "https://api.github.com/users/eklitzke/repos",
      "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/eklitzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The `leveldb::Status` class logs the filename of corrupted files, which might be useful when looking at error reports from usres. In theory this is already logged via the `LogPrintf()` statement in `HandleError()`, but that may not always be close to where the final error message is logged, e.g. see https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340340542 where the log trace provided by the user does not contain that information (and other user comments in the same issue).\r\n\r\nThis also adds a log message instructing the user to run the process with `-debug=leveldb`, which provides much more verbose error messages about LevelDB internals. This may not really help much, but improving the error messages here can't hurt.",
    "labels": [
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2018-03-10T06:54:39Z",
    "updated_at": "2021-09-08T11:51:59Z",
    "closed_at": "2018-03-13T16:19:10Z",
    "mergeable_state": "unknown",
    "merged_at": "2018-03-13T16:19:10Z",
    "merge_commit_sha": "f4b68b3f8f6bb8ad45a9c13c70be0e24404ecd54",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "eklitzke:leveldb_errmsg",
      "ref": "leveldb_errmsg",
      "sha": "f4b68b3f8f6bb8ad45a9c13c70be0e24404ecd54",
      "user": {
        "login": "eklitzke",
        "id": 2734,
        "node_id": "MDQ6VXNlcjI3MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eklitzke",
        "html_url": "https://github.com/eklitzke",
        "followers_url": "https://api.github.com/users/eklitzke/followers",
        "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
        "organizations_url": "https://api.github.com/users/eklitzke/orgs",
        "repos_url": "https://api.github.com/users/eklitzke/repos",
        "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eklitzke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 97648460,
        "node_id": "MDEwOlJlcG9zaXRvcnk5NzY0ODQ2MA==",
        "name": "bitcoin",
        "full_name": "eklitzke/bitcoin",
        "owner": {
          "login": "eklitzke",
          "id": 2734,
          "node_id": "MDQ6VXNlcjI3MzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/eklitzke",
          "html_url": "https://github.com/eklitzke",
          "followers_url": "https://api.github.com/users/eklitzke/followers",
          "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
          "organizations_url": "https://api.github.com/users/eklitzke/orgs",
          "repos_url": "https://api.github.com/users/eklitzke/repos",
          "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/eklitzke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/eklitzke/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/eklitzke/bitcoin",
        "archive_url": "https://api.github.com/repos/eklitzke/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/eklitzke/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/eklitzke/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/eklitzke/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/eklitzke/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/eklitzke/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/eklitzke/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/eklitzke/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/eklitzke/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/eklitzke/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/eklitzke/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/eklitzke/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/eklitzke/bitcoin/events",
        "forks_url": "https://api.github.com/repos/eklitzke/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/eklitzke/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/eklitzke/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/eklitzke/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/eklitzke/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/eklitzke/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/eklitzke/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/eklitzke/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/eklitzke/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/eklitzke/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/eklitzke/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/eklitzke/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/eklitzke/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/eklitzke/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/eklitzke/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/eklitzke/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:eklitzke/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/eklitzke/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/eklitzke/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/eklitzke/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/eklitzke/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/eklitzke/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/eklitzke/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/eklitzke/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/eklitzke/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/eklitzke/bitcoin/hooks",
        "svn_url": "https://github.com/eklitzke/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 103975,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2018-07-13T17:22:25Z",
        "created_at": "2017-07-18T22:13:42Z",
        "updated_at": "2019-04-13T16:59:04Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "29fad97c320c892ab6a480c81e2078ec22ab354b",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35475,
        "stargazers_count": 70607,
        "watchers_count": 70607,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 670,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T17:29:12Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T16:22:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12659"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 4,
    "deletions": 8,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 0,
    "comments": 5
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNGI2OGIzZjhmNmJiOGFkNDVhOWMxM2M3MGJlMGUyNDQwNGVjZDU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4b68b3f8f6bb8ad45a9c13c70be0e24404ecd54",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f4b68b3f8f6bb8ad45a9c13c70be0e24404ecd54",
      "tree": {
        "sha": "beccd7f93c18b696caef9b6cab8f5dd5858edd65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/beccd7f93c18b696caef9b6cab8f5dd5858edd65"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29fad97c320c892ab6a480c81e2078ec22ab354b",
          "sha": "29fad97c320c892ab6a480c81e2078ec22ab354b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/29fad97c320c892ab6a480c81e2078ec22ab354b"
        }
      ],
      "message": "Log fatal LevelDB errors more verbosely",
      "committer": {
        "name": "Evan Klitzke",
        "email": "evan@eklitzke.org",
        "date": "2018-03-10T06:51:10Z"
      },
      "author": {
        "name": "Evan Klitzke",
        "email": "evan@eklitzke.org",
        "date": "2018-03-10T06:39:04Z"
      },
      "sha": "f4b68b3f8f6bb8ad45a9c13c70be0e24404ecd54"
    },
    {
      "event": "labeled",
      "id": 1514527990,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE1MTQ1Mjc5OTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1514527990",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-10T07:15:51Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "commented",
      "id": 372027196,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjAyNzE5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372027196",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-10T12:46:59Z",
      "updated_at": "2018-03-10T12:46:59Z",
      "author_association": "MEMBER",
      "body": "utACK https://github.com/bitcoin/bitcoin/pull/12659/commits/f4b68b3f8f6bb8ad45a9c13c70be0e24404ecd54",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12659#issuecomment-372027196",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12659"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "dooglus",
        "id": 573356,
        "node_id": "MDQ6VXNlcjU3MzM1Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dooglus",
        "html_url": "https://github.com/dooglus",
        "followers_url": "https://api.github.com/users/dooglus/followers",
        "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
        "organizations_url": "https://api.github.com/users/dooglus/orgs",
        "repos_url": "https://api.github.com/users/dooglus/repos",
        "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dooglus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-10T14:05:14Z",
      "updated_at": "2018-03-10T14:05:14Z",
      "source": {
        "issue": {
          "id": 258254951,
          "node_id": "MDU6SXNzdWUyNTgyNTQ5NTE=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11355/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/11355",
          "number": 11355,
          "state": "closed",
          "state_reason": "completed",
          "title": "LevelDB read failure: Corruption: block checksum mismatch",
          "body": "Build against commit f197a4c515757262eda0accbe762e311335be11b, a small change from master branch 09627b1dd41d1151a709d5ead82a924bf59e3d38 - bitcoin-qt had been running for 12 hours or so without a problem, was fully synced, then suddenly I saw an error frame pop up with no content. Here's a screenshot:\r\n\r\n![screenshot](https://user-images.githubusercontent.com/573356/30515480-47028746-9add-11e7-8970-2b9602dfd291.png)\r\n\r\nThe debug.log shows block 485584 was received, then 36 seconds later db corruption was found:\r\n\r\n    2017-09-16 15:21:03 UpdateTip: new best=000000000000000000f9dec71fb25bda22ba734ad133c24c8553fb66fee2f98e height=485584 version=0x20000000 log2_work=87.116783 tx=254942322 date='2017-09-16 15:20:14' progress=0.999999 cache=65.6MiB(504658txo) warning='5 of last 100 blocks have unexpected version'\r\n    2017-09-16 15:21:39 LevelDB read failure: Corruption: block checksum mismatch\r\n    2017-09-16 15:21:39 Corruption: block checksum mismatch\r\n    2017-09-16 15:22:02 connect() to [2001:0:9d38:90d7:1097:91ba:f1ff:5782]:8333 failed: Network is unreachable (101)\r\n    2017-09-16 15:41:38 socket sending timeout: 1201s\r\n    2017-09-16 15:41:38 socket sending timeout: 1201s\r\n    2017-09-16 15:41:38 socket sending timeout: 1201s\r\n    2017-09-16 15:41:39 socket sending timeout: 1201s\r\n    2017-09-16 15:41:39 socket sending timeout: 1201s\r\n    2017-09-16 15:41:39 socket sending timeout: 1201s\r\n    2017-09-16 15:41:39 socket sending timeout: 1201s\r\n    2017-09-16 15:41:40 socket sending timeout: 1201s\r\n\r\nNothing has been written to the log since then, and neither the main Bitcoin window nor the error popup has been painted since.\r\n\r\nA few weeks ago I saw a similar error, but at that point I was attempting to track down a race condition on startup and so wasn't surprised when I saw some database corruption. But I fixed it by doing a `-reindex-chainstate` and hadn't had a problem since, until now.\r\n\r\nI attached gdb to the frozen bitcoin-qt process to get the stack traces:\r\n\r\n    12:51:18 chris@chris:~/Programs/bitcoin.git/src$ ps -ef | grep bitcoin\r\n    chris    17648 31052  0 Sep15 pts/5    00:03:57 /home/chris/Programs/bitcoin.git/src/qt/bitcoin-qt -datadir=/home/chris/.bitcoin\r\n    chris    23785 31653  0 08:22 pts/7    00:00:00 tail -f /home/chris/.bitcoin/debug.log\r\n    chris    28346 14411  0 12:51 pts/0    00:00:00 grep bitcoin\r\n    12:51:53 chris@chris:~/Programs/bitcoin.git/src$ gdb /home/chris/Programs/bitcoin.git/src/qt/bitcoin-qt 17648\r\n    GNU gdb (Debian 7.12-6) 7.12.0.20161007-git\r\n    Copyright (C) 2016 Free Software Foundation, Inc.\r\n    License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\n    This is free software: you are free to change and redistribute it.\r\n    There is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\r\n    and \"show warranty\" for details.\r\n    This GDB was configured as \"x86_64-linux-gnu\".\r\n    Type \"show configuration\" for configuration details.\r\n    For bug reporting instructions, please see:\r\n    <http://www.gnu.org/software/gdb/bugs/>.\r\n    Find the GDB manual and other documentation resources online at:\r\n    <http://www.gnu.org/software/gdb/documentation/>.\r\n    For help, type \"help\".\r\n    Type \"apropos word\" to search for commands related to \"word\"...\r\n    Reading symbols from /home/chris/Programs/bitcoin.git/src/qt/bitcoin-qt...done.\r\n    Attaching to program: /home/chris/Programs/bitcoin.git/src/qt/bitcoin-qt, process 17648\r\n    [New LWP 17649]\r\n    [New LWP 17650]\r\n    [New LWP 17651]\r\n    [New LWP 17652]\r\n    [New LWP 17653]\r\n    [New LWP 17654]\r\n    [New LWP 17655]\r\n    [New LWP 17656]\r\n    [New LWP 17657]\r\n    [New LWP 17658]\r\n    [New LWP 17659]\r\n    [New LWP 17660]\r\n    [New LWP 17664]\r\n    [New LWP 17671]\r\n    [New LWP 17673]\r\n    [New LWP 17674]\r\n    [New LWP 17675]\r\n    [New LWP 17676]\r\n    [New LWP 17677]\r\n    [Thread debugging using libthread_db enabled]\r\n    Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n    __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n    135\t../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S: No such file or directory.\r\n    (gdb) thread apply all where\r\n\r\n    Thread 20 (Thread 0x7ff63debb700 (LWP 17677)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x7ff6240008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7ff63debacc0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007ff6950f70f3 in QThread::exec (this=<optimized out>) at thread/qthread.cpp:507\r\n    #6  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x56128c7f02a0) at thread/qthread_unix.cpp:368\r\n    #7  0x00007ff6947b9494 in start_thread (arg=0x7ff63debb700) at pthread_create.c:333\r\n    #8  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 19 (Thread 0x7ff63d245700 (LWP 17676)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x7ff6200008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7ff63d244cc0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007ff6950f70f3 in QThread::exec (this=<optimized out>) at thread/qthread.cpp:507\r\n    #6  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x56128b923d40) at thread/qthread_unix.cpp:368\r\n    #7  0x00007ff6947b9494 in start_thread (arg=0x7ff63d245700) at pthread_create.c:333\r\n    #8  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 18 (Thread 0x7ff63e70c700 (LWP 17675)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6950fcc6b in QWaitConditionPrivate::wait (time=18446744073709551615, this=0x7ff633dd4480) at thread/qwaitcondition_unix.cpp:143\r\n    #2  QWaitCondition::wait (this=this@entry=0x7ff6154c9468, mutex=mutex@entry=0x7ff6154c9460, time=time@entry=18446744073709551615)\r\n        at thread/qwaitcondition_unix.cpp:215\r\n    #3  0x00007ff6950f5b33 in QSemaphore::acquire (this=this@entry=0x7ff63e702890, n=n@entry=1) at thread/qsemaphore.cpp:143\r\n    #4  0x00007ff6952d68cd in QMetaMethod::invoke (this=this@entry=0x7ff63e702af8, object=object@entry=0x56128b9167c0, connectionType=Qt::BlockingQueuedConnection, \r\n        connectionType@entry=1047538560, returnValue=..., val0=..., val1=..., val2=..., val3=..., val4=..., val5=..., val6=..., val7=..., val8=..., val9=...)\r\n        at kernel/qmetaobject.cpp:2279\r\n    #5  0x00007ff6952dc58a in QMetaObject::invokeMethod (obj=0x56128b9167c0, member=0x56128a8e58de \"message\", type=1047538560, ret=..., val0=..., val1=..., val2=..., \r\n        val3=..., val4=..., val5=..., val6=..., val7=..., val8=..., val9=...) at kernel/qmetaobject.cpp:1489\r\n    #6  0x000056128a01880c in QMetaObject::invokeMethod (member=0x80 <error: Cannot access memory at address 0x80>, type=Qt::BlockingQueuedConnection, val0=..., \r\n        obj=<optimized out>, val1=..., val2=..., val3=..., val4=..., val5=..., val6=..., val7=..., val8=..., val9=...)\r\n        at /usr/include/x86_64-linux-gnu/qt5/QtCore/qobjectdefs.h:460\r\n    #7  ThreadSafeMessageBox (gui=0x56128b9167c0, message=\"Error reading from database, shutting down.\", caption=..., style=<optimized out>) at qt/bitcoingui.cpp:1167\r\n    #8  0x000056128a01ccb7 in boost::_bi::list4<boost::_bi::value<BitcoinGUI*>, boost::arg<1>, boost::arg<2>, boost::arg<3> >::operator()<bool, bool (*)(BitcoinGUI*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::_bi::rrlist3<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int> > (f=<error reading variable>, this=<optimized out>, a=...)\r\n        at /usr/include/boost/bind/bind.hpp:453\r\n    #9  boost::_bi::bind_t<bool, bool (*)(BitcoinGUI*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::_bi::list4<boost::_bi::value<BitcoinGUI*>, boost::arg<1>, boost::arg<2>, boost::arg<3> > >::operator()<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&&) (a1=<error reading variable: Cannot access memory at address 0x88>, \r\n        a2=<error reading variable: Cannot access memory at address 0x9>, this=<optimized out>, a3=<optimized out>) at /usr/include/boost/bind/bind.hpp:1330\r\n    #10 boost::detail::function::function_obj_invoker3<boost::_bi::bind_t<bool, bool (*)(BitcoinGUI*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::_bi::list4<boost::_bi::value<BitcoinGUI*>, boost::arg<1>, boost::arg<2>, boost::arg<3> > >, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>::invoke (function_obj_ptr=..., \r\n        a0=<error reading variable: Cannot access memory at address 0x88>, a1=<error reading variable: Cannot access memory at address 0x9>, a2=2491150687)\r\n        at /usr/include/boost/function/function_template.hpp:138\r\n    #11 0x000056128a17b81e in boost::function3<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>::operator() (a0=<error reading variable: Cannot access memory at address 0x88>, \r\n        a1=<error reading variable: Cannot access memory at address 0x9>, a2=2491150687, this=<optimized out>) at /usr/include/boost/function/function_template.hpp:770\r\n    #12 boost::signals2::detail::call_with_tuple_args<bool>::m_invoke<boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, 0u, 1u, 2u, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&>(boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>&, boost::signals2::detail::unsigned_meta_array<0u, 1u, 2u>, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&> const&, boost::disable_if<boost::is_void<boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>::result_type>, void>::type*) const (this=<optimized out>, func=..., args=...)\r\n        at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:98\r\n    #13 boost::signals2::detail::call_with_tuple_args<bool>::operator()<boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&, 3ul>(boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int&> const&, mpl_::size_t<3ul>) const (this=<optimized out>, func=..., args=...)\r\n        at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:90\r\n    #14 boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > const&) const (\r\n        this=<optimized out>, connectionBody=...) at /usr/include/boost/signals2/detail/variadic_slot_invoker.hpp:133\r\n    #15 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >::dereference() const (this=0x7ff63e703010) at /usr/include/boost/signals2/detail/slot_call_iterator.hpp:110\r\n    #16 0x000056128a17ac98 in boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > const&) (f=...) at /usr/include/boost/iterator/iterator_facade.hpp:549\r\n    #17 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >, bool, boost::iterators::single_pass_traversal_tag, bool&, long, false, false>::operator*() const (\r\n        this=<optimized out>) at /usr/include/boost/iterator/iterator_facade.hpp:655\r\n    #18 boost::signals2::last_value<bool>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >) const (this=<optimized out>, first=..., last=...) at /usr/include/boost/signals2/last_value.hpp:48\r\n    #19 0x000056128a17a930 in boost::signals2::detail::combiner_invoker<bool>::operator()<boost::signals2::last_value<bool>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >(boost::signals2::last_value<bool>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)> >, boost::signals2::mutex> >) const (combiner=..., this=<optimized out>, first=..., last=...) at /usr/include/boost/signals2/detail/result_type_wrapper.hpp:53\r\n    #20 boost::signals2::detail::signal_impl<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::signals2::last_value<bool>, int, std::less<int>, boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::function<bool (boost::signals2::connection const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::signals2::mutex>::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) (\r\n        this=0x56128b705d20, args=<optimized out>, args=<optimized out>, args=<optimized out>) at /usr/include/boost/signals2/detail/signal_template.hpp:242\r\n    #21 0x000056128a17a13d in boost::signals2::signal<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int), boost::signals2::last_value<bool>, int, std::less<int>, boost::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::function<bool (boost::signals2::connection const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int)>, boost::signals2::mutex>::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) (args=..., args=..., this=<optimized out>, args=...) at /usr/include/boost/signals2/detail/signal_template.hpp:723\r\n    #22 CCoinsViewErrorCatcher::GetCoin (this=<optimized out>, outpoint=..., coin=...) at init.cpp:143\r\n    #23 0x000056128a46e462 in CCoinsViewCache::FetchCoin (this=0x7ff648ab9ee0, outpoint=...) at coins.cpp:48\r\n    #24 0x000056128a46e549 in CCoinsViewCache::GetCoin (this=0x7ff633dd44ac, outpoint=..., coin=...) at coins.cpp:61\r\n    #25 0x000056128a2c8414 in CCoinsViewMemPool::GetCoin (this=0x7ff63e7038a8, outpoint=..., coin=...) at txmempool.cpp:902\r\n    #26 0x000056128a46e462 in CCoinsViewCache::FetchCoin (this=0x7ff63e704530, outpoint=...) at coins.cpp:48\r\n    #27 0x000056128a46eb03 in CCoinsViewCache::HaveCoin (this=0x7ff633dd44ac, outpoint=...) at coins.cpp:129\r\n    #28 0x000056128a30c5cc in AcceptToMemoryPoolWorker (chainparams=..., pool=..., state=..., ptx=..., fLimitFree=<optimized out>, pfMissingInputs=<optimized out>, \r\n        nAcceptTime=140697029833055, plTxnReplaced=0x56128acc70f0 <pcoinsTip>, fOverrideMempoolLimit=false, nAbsurdFee=@0x7ff63e7044d0: -2962908112588391035, \r\n        coins_to_uncache=...) at validation.cpp:547\r\n    #29 0x000056128a2de858 in AcceptToMemoryPoolWithTime (chainparams=..., pool=..., state=..., \r\n        tx=<error reading variable: Cannot access memory at address 0x1be08247c8b50>, fLimitFree=<optimized out>, pfMissingInputs=0x0, nAcceptTime=1505575299, \r\n        plTxnReplaced=0x7ff63e7083a8, fOverrideMempoolLimit=<optimized out>, nAbsurdFee=0) at validation.cpp:886\r\n    #30 0x000056128a2de122 in AcceptToMemoryPool (pool=..., state=..., tx=<error reading variable: Cannot access memory at address 0x1be08247c8b50>, fLimitFree=true, \r\n        pfMissingInputs=0x0, plTxnReplaced=0x7ff63e7083a8, fOverrideMempoolLimit=<optimized out>, nAbsurdFee=<optimized out>) at validation.cpp:902\r\n    #31 0x000056128a1d7266 in ProcessMessage (pfrom=<optimized out>, strCommand=..., vRecv=..., nTimeReceived=<optimized out>, chainparams=..., \r\n        connman=<optimized out>, interruptMsgProc=...) at net_processing.cpp:1791\r\n    #32 0x000056128a1cbf12 in PeerLogicValidation::ProcessMessages (this=0x7ff664046440, pfrom=0x7ff62822f0f0, interruptMsgProc=...) at net_processing.cpp:2718\r\n    #33 0x000056128a1f8037 in non-virtual thunk to PeerLogicValidation::ProcessMessages(CNode*, std::atomic<bool>&) () at net_processing.cpp:2643\r\n    #34 0x000056128a1a767b in CConnman::ThreadMessageHandler (this=<optimized out>) at net.cpp:1995\r\n    #35 0x000056128a1c24ba in std::__invoke_impl<void, void (CConnman::* const&)(), CConnman*&> (__f=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #36 std::__invoke<void (CConnman::* const&)(), CConnman*&> (__fn=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #37 std::_Mem_fn_base<void (CConnman::*)(), true>::operator()<CConnman*&> (this=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #38 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=<optimized out>, \r\n        __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #39 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::operator()<, void>() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #40 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #41 0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff63e70bd00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #42 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #43 0x000056128a1c267d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #44 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #45 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #46 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #47 0x00007ff6947b9494 in start_thread (arg=0x7ff63e70c700) at pthread_create.c:333\r\n    #48 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 17 (Thread 0x7ff63ef5d700 (LWP 17674)):\r\n    #0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n    #1  0x00007ff6947bbc06 in __GI___pthread_mutex_lock (mutex=0x56128acc6b88 <cs_main>) at ../nptl/pthread_mutex_lock.c:115\r\n    #2  0x000056128a0259d5 in boost::recursive_mutex::lock (this=<optimized out>) at /usr/include/boost/thread/pthread/recursive_mutex.hpp:113\r\n    #3  AnnotatedMixin<boost::recursive_mutex>::lock (this=<optimized out>) at ./sync.h:59\r\n    #4  boost::unique_lock<CCriticalSection>::lock (this=0x7ff63ef5c250) at /usr/include/boost/thread/lock_types.hpp:346\r\n    #5  0x000056128a1c406a in CMutexLock<CCriticalSection>::Enter (this=0x56128acc6b88 <cs_main>, nLine=504, pszName=<optimized out>, pszFile=<optimized out>)\r\n        at ./sync.h:123\r\n    #6  CMutexLock<CCriticalSection>::CMutexLock (this=0x56128acc6b88 <cs_main>, nLine=504, fTry=false, mutexIn=..., pszName=<optimized out>, pszFile=<optimized out>)\r\n        at ./sync.h:144\r\n    #7  PeerLogicValidation::InitializeNode (this=0x7ff664046440, pnode=0x7ff6282bb0d0) at net_processing.cpp:504\r\n    #8  0x000056128a1c5657 in non-virtual thunk to PeerLogicValidation::InitializeNode(CNode*) () at net_processing.cpp:499\r\n    #9  0x000056128a1a4602 in CConnman::OpenNetworkConnection (this=0x7ff66456ad30, addrConnect=..., fCountFailure=<optimized out>, grantOutbound=<optimized out>, \r\n        pszDest=0x0, fOneShot=<optimized out>, fFeeler=<optimized out>, fAddnode=92) at net.cpp:1965\r\n    #10 0x000056128a1a5508 in CConnman::ThreadOpenConnections (this=<optimized out>, connect=...) at net.cpp:1840\r\n    #11 0x000056128a1c2887 in std::__invoke_impl<void, void (CConnman::* const&)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >), CConnman*&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&> (\r\n        __f=<optimized out>, __t=<optimized out>, __args=<error reading variable: Cannot access memory at address 0x8>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #12 0x000056128a1c270e in std::__invoke<void (CConnman::* const&)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >), CConnman*&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&> (__fn=\r\n        @0x56128acc6b88: (void (CConnman::*)(CConnman * const, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >)) 0x100000002, this adjustment 4294984971, __args=..., __args=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #13 std::_Mem_fn_base<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >), true>::operator()<CConnman*&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&> (__args=..., __args=..., \r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #14 std::_Bind<std::_Mem_fn<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> (CConnman*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (this=0x56128acc6b88 <cs_main>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #15 std::_Bind<std::_Mem_fn<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> (CConnman*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)>::operator()<, void>() (\r\n        this=0x56128acc6b88 <cs_main>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #16 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> (CConnman*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)> >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #17 0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff63ef5cd00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #18 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #19 0x000056128a1c267d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #20 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #21 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #22 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #23 0x00007ff6947b9494 in start_thread (arg=0x7ff63ef5d700) at pthread_create.c:333\r\n    #24 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 16 (Thread 0x7ff63f7ae700 (LWP 17673)):\r\n    #0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n    #1  0x000056128a49b56e in __gthread_cond_timedwait (__cond=<optimized out>, __mutex=<optimized out>, __abs_timeout=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/x86_64-linux-gnu/c++/6.3.0/bits/gthr-default.h:871\r\n    #2  std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (this=<optimized out>, __lock=..., __atime=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:166\r\n    #3  std::condition_variable::wait_until<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (this=<optimized out>, __lock=..., __atime=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:106\r\n    #4  std::condition_variable::wait_until<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0>(std::unique_lock<std::mutex>&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0) (this=<optimized out>, \r\n        __lock=..., __atime=..., __p=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:129\r\n    #5  std::condition_variable::wait_for<long, std::ratio<1l, 1000l>, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0>(std::unique_lock<std::mutex>&, std::chrono::duration<long, std::ratio<1l, 1000l> > const&, CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >)::$_0) (this=<optimized out>, __lock=..., __rtime=..., __p=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/condition_variable:145\r\n    #6  CThreadInterrupt::sleep_for (this=<optimized out>, rel_time=...) at threadinterrupt.cpp:30\r\n    #7  0x000056128a49b5fa in CThreadInterrupt::sleep_for (this=0x7ff6645bb1a4, rel_time=...) at threadinterrupt.cpp:35\r\n    #8  0x000056128a1a7316 in CConnman::ThreadOpenAddedConnections (this=<optimized out>) at net.cpp:1927\r\n    #9  0x000056128a1c24ba in std::__invoke_impl<void, void (CConnman::* const&)(), CConnman*&> (__f=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #10 std::__invoke<void (CConnman::* const&)(), CConnman*&> (__fn=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #11 std::_Mem_fn_base<void (CConnman::*)(), true>::operator()<CConnman*&> (this=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #12 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=<optimized out>, \r\n        __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #13 std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::operator()<, void>() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #14 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #15 0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff63f7add00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #16 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #17 0x000056128a1c267d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #18 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #19 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #20 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #21 0x00007ff6947b9494 in start_thread (arg=0x7ff63f7ae700) at pthread_create.c:333\r\n    #22 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 15 (Thread 0x7ff645ec7700 (LWP 17671)):\r\n    #0  0x00007ff692d5a3f3 in select () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x000056128a19da64 in CConnman::ThreadSocketHandler (this=<optimized out>) at net.cpp:1251\r\n    #2  0x000056128a1c24ba in std::__invoke_impl<void, void (CConnman::* const&)(), CConnman*&> (__f=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #3  std::__invoke<void (CConnman::* const&)(), CConnman*&> (__fn=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #4  std::_Mem_fn_base<void (CConnman::*)(), true>::operator()<CConnman*&> (this=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:604\r\n    #5  std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=<optimized out>, \r\n        __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:933\r\n    #6  std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::operator()<, void>() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:991\r\n    #7  std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #8  0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff645ec6d00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #9  TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #10 0x000056128a1c267d in std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #11 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #12 std::thread::_State_impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #13 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #14 0x00007ff6947b9494 in start_thread (arg=0x7ff645ec7700) at pthread_create.c:333\r\n    #15 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 14 (Thread 0x7ff658cf7700 (LWP 17664)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x000056128a4f38ab in leveldb::(anonymous namespace)::PosixEnv::BGThread (this=<optimized out>) at leveldb/util/env_posix.cc:641\r\n    #2  leveldb::(anonymous namespace)::PosixEnv::BGThreadWrapper (arg=<optimized out>) at leveldb/util/env_posix.cc:556\r\n    #3  0x00007ff6947b9494 in start_thread (arg=0x7ff658cf7700) at pthread_create.c:333\r\n    #4  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 13 (Thread 0x7ff668e19700 (LWP 17660)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6935e750c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056128a381c2a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:127\r\n    #3  0x000056128a37baca in HTTPWorkQueueRun (queue=0x7ff664044c7c) at httpserver.cpp:351\r\n    #4  0x000056128a383508 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff668e19700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 12 (Thread 0x7ff66966a700 (LWP 17659)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6935e750c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056128a381c2a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:127\r\n    #3  0x000056128a37baca in HTTPWorkQueueRun (queue=0x7ff664044c7c) at httpserver.cpp:351\r\n    #4  0x000056128a383508 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff66966a700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 11 (Thread 0x7ff669ebb700 (LWP 17658)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6935e750c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056128a381c2a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:127\r\n    #3  0x000056128a37baca in HTTPWorkQueueRun (queue=0x7ff664044c7c) at httpserver.cpp:351\r\n    #4  0x000056128a383508 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff669ebb700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 10 (Thread 0x7ff66a70c700 (LWP 17657)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x00007ff6935e750c in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #2  0x000056128a381c2a in WorkQueue<HTTPClosure>::Run (this=<optimized out>) at httpserver.cpp:127\r\n    #3  0x000056128a37baca in HTTPWorkQueueRun (queue=0x7ff664044c7c) at httpserver.cpp:351\r\n    #4  0x000056128a383508 in std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #5  std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #6  std::thread::_State_impl<std::_Bind_simple<void (*(WorkQueue<HTTPClosure>*))(WorkQueue<HTTPClosure>*)> >::_M_run() (this=0xfffffffffffffe00)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #7  0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff66a70c700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 9 (Thread 0x7ff66af5d700 (LWP 17656)):\r\n    #0  0x00007ff692d620f3 in epoll_wait () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff6938d9d98 in ?? () from /usr/lib/x86_64-linux-gnu/libevent-2.0.so.5\r\n    #2  0x00007ff6938c407a in event_base_loop () from /usr/lib/x86_64-linux-gnu/libevent-2.0.so.5\r\n    #3  0x000056128a37b03f in ThreadHTTP (base=0x7ff6640443d0, http=<optimized out>) at httpserver.cpp:303\r\n    #4  0x000056128a382c4d in std::__invoke_impl<bool, bool (*&)(event_base*, evhttp*), event_base*, evhttp*>(std::__invoke_other, bool (*&)(event_base*, evhttp*), event_base*&&, evhttp*&&) (__f=<optimized out>, __args=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:210\r\n    #5  std::__invoke<bool (*&)(event_base*, evhttp*), event_base*, evhttp*>(bool (*&)(event_base*, evhttp*), event_base*&&, evhttp*&&) (__fn=<optimized out>, \r\n        __args=<optimized out>, __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #6  std::reference_wrapper<bool (*)(event_base*, evhttp*)>::operator()<event_base*, evhttp*>(event_base*&&, evhttp*&&) const (__args=<optimized out>, \r\n        this=<optimized out>, __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:465\r\n    #7  std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (\r\n        this=0x7ff692d620f3 <epoll_wait+51>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #8  std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>::operator()() (this=0x7ff692d620f3 <epoll_wait+51>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #9  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<bool>, std::__future_base::_Result_base::_Deleter>, std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>, bool>::operator()() const (this=0x7ff66af5ccd0)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:1325\r\n    #10 0x000056128a382b8f in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<bool>, std::__future_base::_Result_base::_Deleter>, std::_Bind_simple<std::reference_wrapper<bool (*)(event_base*, evhttp*)> (event_base*, evhttp*)>, bool> >::_M_invoke(std::_Any_data const&) (__functor=...)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1716\r\n    #11 0x000056128a382aba in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (\r\n        this=0x7ff664044660) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #12 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x7ff664044e80, __f=0x7ff664044660, __did_set=0x7ff66af5cc8f) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:533\r\n    #13 0x000056128a382b56 in std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=<optimized out>, __args=<optimized out>, __args=<optimized out>, __t=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:227\r\n    #14 std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__fn=<optimized out>, __args=<optimized out>, __args=<optimized out>, __args=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:250\r\n    #15 void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:602\r\n    #16 void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::operator()() const (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:607\r\n    #17 void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::__invoke() () at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:607\r\n    #18 0x00007ff6947c0739 in __pthread_once_slow (once_control=0x7ff664044e98, init_routine=0x7ff6935ec120 <__once_proxy>) at pthread_once.c:116\r\n    #19 0x000056128a382a39 in __gthread_once (__func=0x7ff664044660, __once=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/x86_64-linux-gnu/c++/6.3.0/bits/gthr-default.h:699\r\n    #20 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__args=<optimized out>, __args=<optimized out>, __args=<optimized out>, __once=..., __f=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/mutex:614\r\n    #21 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (this=0x7ff664044e80, __res=..., __ignore_failure=false) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:392\r\n    #22 0x000056128a382491 in std::__future_base::_Task_state<bool (*)(event_base*, evhttp*), std::allocator<int>, bool (event_base*, evhttp*)>::_M_run(event_base*&&, evhttp*&&) (this=0x17, __args=<optimized out>, __args=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:1409\r\n    #23 0x000056128a38348b in std::packaged_task<bool (event_base*, evhttp*)>::operator()(event_base*, evhttp*) (\r\n        __args=<error reading variable: Cannot access memory at address 0x20>, __args=<error reading variable: Cannot access memory at address 0x20>, \r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/future:1553\r\n    #24 std::_Bind_simple<std::packaged_task<bool (event_base*, evhttp*)> (event_base*, evhttp*)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (\r\n        this=<optimized out>) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1390\r\n    #25 std::_Bind_simple<std::packaged_task<bool (event_base*, evhttp*)> (event_base*, evhttp*)>::operator()() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1380\r\n    #26 std::thread::_State_impl<std::_Bind_simple<std::packaged_task<bool (event_base*, evhttp*)> (event_base*, evhttp*)> >::_M_run() (this=<optimized out>)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/thread:197\r\n    #27 0x00007ff6935ece6f in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n    #28 0x00007ff6947b9494 in start_thread (arg=0x7ff66af5d700) at pthread_create.c:333\r\n    #29 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 8 (Thread 0x7ff66b7ae700 (LWP 17655)):\r\n    #0  pthread_cond_timedwait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:225\r\n    #1  0x000056128a257c82 in boost::condition_variable::do_wait_until (this=0x56128bfebea0, m=..., timeout=...)\r\n        at /usr/include/boost/thread/pthread/condition_variable.hpp:109\r\n    #2  0x000056128a489379 in boost::condition_variable::wait_until (this=<optimized out>, lk=..., tp=...)\r\n        at /usr/include/boost/thread/pthread/condition_variable_fwd.hpp:252\r\n    #3  boost::condition_variable::wait_until<boost::chrono::duration<long, boost::ratio<1l, 1000000000l> > > (this=<optimized out>, lock=..., t=...)\r\n        at /usr/include/boost/thread/pthread/condition_variable_fwd.hpp:209\r\n    #4  CScheduler::serviceQueue (this=<optimized out>) at scheduler.cpp:67\r\n    #5  0x000056128a18553a in boost::_mfi::mf0<void, CScheduler>::operator() (p=<optimized out>, this=<optimized out>) at /usr/include/boost/bind/mem_fn_template.hpp:49\r\n    #6  boost::_bi::list1<boost::_bi::value<CScheduler*> >::operator()<boost::_mfi::mf0<void, CScheduler>, boost::_bi::list0> (this=<optimized out>, f=..., a=...)\r\n        at /usr/include/boost/bind/bind.hpp:259\r\n    #7  boost::_bi::bind_t<void, boost::_mfi::mf0<void, CScheduler>, boost::_bi::list1<boost::_bi::value<CScheduler*> > >::operator() (this=<optimized out>)\r\n        at /usr/include/boost/bind/bind.hpp:1294\r\n    #8  std::_Function_handler<void (), boost::_bi::bind_t<void, boost::_mfi::mf0<void, CScheduler>, boost::_bi::list1<boost::_bi::value<CScheduler*> > > >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:1731\r\n    #9  0x000056128a176e3d in std::function<void ()>::operator()() const (this=0x7ff66b7adcb8)\r\n        at /usr/bin/../lib/gcc/x86_64-linux-gnu/6.3.0/../../../../include/c++/6.3.0/functional:2127\r\n    #10 TraceThread<std::function<void ()> >(char const*, std::function<void ()>) (name=<optimized out>, func=...) at ./util.h:309\r\n    #11 0x000056128a185ab6 in boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<std::function<void ()> > >::operator()<void (*)(char const*, std::function<void ()>), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(char const*, std::function<void ()>), boost::_bi::list0&, int) (this=0x7ff664043100, \r\n        f=<optimized out>, a=...) at /usr/include/boost/bind/bind.hpp:319\r\n    #12 0x000056128a185a3f in boost::_bi::bind_t<void, void (*)(char const*, std::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<std::function<void ()> > > >::operator()() (this=<optimized out>) at /usr/include/boost/bind/bind.hpp:1294\r\n    #13 boost::detail::thread_data<boost::_bi::bind_t<void, void (*)(char const*, std::function<void ()>), boost::_bi::list2<boost::_bi::value<char const*>, boost::_bi::value<std::function<void ()> > > > >::run() (this=<optimized out>) at /usr/include/boost/thread/detail/thread.hpp:116\r\n    #14 0x00007ff69635d116 in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.62.0\r\n    #15 0x00007ff6947b9494 in start_thread (arg=0x7ff66b7ae700) at pthread_create.c:333\r\n    #16 0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 7 (Thread 0x7ff66bfff700 (LWP 17654)):\r\n    #0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n    #1  0x000056128a0017eb in boost::condition_variable::wait (this=<optimized out>, m=...) at /usr/include/boost/thread/pthread/condition_variable.hpp:77\r\n    #2  0x000056128a3212f2 in CCheckQueue<CScriptCheck>::Loop (this=<optimized out>, fMaster=<optimized out>) at ./checkqueue.h:102\r\n    #3  0x000056128a2e12c8 in CCheckQueue<CScriptCheck>::Thread (this=0x56128acc71ec <scriptcheckqueue+84>) at ./checkqueue.h:139\r\n    #4  ThreadScriptCheck () at validation.cpp:1540\r\n    #5  0x000056128a185114 in boost::detail::thread_data<void (*)()>::run (this=0x56128acc71ec <scriptcheckqueue+84>) at /usr/include/boost/thread/detail/thread.hpp:116\r\n    #6  0x00007ff69635d116 in ?? () from /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.62.0\r\n    #7  0x00007ff6947b9494 in start_thread (arg=0x7ff66bfff700) at pthread_create.c:333\r\n    #8  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 6 (Thread 0x7ff677398700 (LWP 17653)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x7ff6640008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7ff677397cc0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007ff6950f70f3 in QThread::exec (this=<optimized out>) at thread/qthread.cpp:507\r\n    #6  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x56128bfe7de0) at thread/qthread_unix.cpp:368\r\n    #7  0x00007ff6947b9494 in start_thread (arg=0x7ff677398700) at pthread_create.c:333\r\n    #8  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 5 (Thread 0x7ff677be9700 (LWP 17652)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x7ff66c0008c0, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #4  0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7ff677be8c90, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #5  0x00007ff6950f70f3 in QThread::exec (this=this@entry=0x7ff6955a6d60 <(anonymous namespace)::Q_QGS__q_manager::innerFunction()::holder>)\r\n        at thread/qthread.cpp:507\r\n    #6  0x00007ff6955316d5 in QDBusConnectionManager::run (this=0x7ff6955a6d60 <(anonymous namespace)::Q_QGS__q_manager::innerFunction()::holder>)\r\n        at qdbusconnection.cpp:178\r\n    #7  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x7ff6955a6d60 <(anonymous namespace)::Q_QGS__q_manager::innerFunction()::holder>)\r\n        at thread/qthread_unix.cpp:368\r\n    #8  0x00007ff6947b9494 in start_thread (arg=0x7ff677be9700) at pthread_create.c:333\r\n    #9  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 4 (Thread 0x7ff67df9e700 (LWP 17651)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fd82 in g_main_loop_run () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff68473e656 in ?? () from /usr/lib/x86_64-linux-gnu/libgio-2.0.so.0\r\n    #4  0x00007ff6906b73d5 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #5  0x00007ff6947b9494 in start_thread (arg=0x7ff67df9e700) at pthread_create.c:333\r\n    #6  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 3 (Thread 0x7ff67e7ef700 (LWP 17650)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff69068f9f6 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #2  0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #3  0x00007ff69068fb51 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #4  0x00007ff6906b73d5 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #5  0x00007ff6947b9494 in start_thread (arg=0x7ff67e7ef700) at pthread_create.c:333\r\n    #6  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 2 (Thread 0x7ff688439700 (LWP 17649)):\r\n    #0  0x00007ff692d586ad in poll () at ../sysdeps/unix/syscall-template.S:84\r\n    #1  0x00007ff68e55c150 in ?? () from /usr/lib/x86_64-linux-gnu/libxcb.so.1\r\n    #2  0x00007ff68e55dee9 in xcb_wait_for_event () from /usr/lib/x86_64-linux-gnu/libxcb.so.1\r\n    #3  0x00007ff68ab9ab69 in QXcbEventReader::run (this=0x56128b83c900) at qxcbconnection.cpp:1343\r\n    #4  0x00007ff6950fbda8 in QThreadPrivate::start (arg=0x56128b83c900) at thread/qthread_unix.cpp:368\r\n    #5  0x00007ff6947b9494 in start_thread (arg=0x7ff688439700) at pthread_create.c:333\r\n    #6  0x00007ff692d61aff in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n\r\n    Thread 1 (Thread 0x7ff696f01900 (LWP 17648)):\r\n    #0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n    #1  0x00007ff6947bbc06 in __GI___pthread_mutex_lock (mutex=0x56128acc6df0 <mempool+56>) at ../nptl/pthread_mutex_lock.c:115\r\n    #2  0x000056128a0259d5 in boost::recursive_mutex::lock (this=<optimized out>) at /usr/include/boost/thread/pthread/recursive_mutex.hpp:113\r\n    #3  AnnotatedMixin<boost::recursive_mutex>::lock (this=<optimized out>) at ./sync.h:59\r\n    #4  boost::unique_lock<CCriticalSection>::lock (this=0x7fff8192c5e8) at /usr/include/boost/thread/lock_types.hpp:346\r\n    #5  0x000056128a02541e in CMutexLock<CCriticalSection>::Enter (this=0x56128acc6df0 <mempool+56>, nLine=602, pszName=<optimized out>, pszFile=<optimized out>)\r\n        at ./sync.h:123\r\n    #6  CMutexLock<CCriticalSection>::CMutexLock (this=0x56128acc6df0 <mempool+56>, mutexIn=..., nLine=602, fTry=false, pszName=<optimized out>, \r\n        pszFile=<optimized out>) at ./sync.h:144\r\n    #7  CTxMemPool::size (this=0x56128acc6db8 <mempool>) at ./txmempool.h:602\r\n    #8  0x000056128a0240b9 in ClientModel::getMempoolSize (this=<optimized out>) at qt/clientmodel.cpp:130\r\n    #9  ClientModel::updateTimer (this=0x56128b70d6e0) at qt/clientmodel.cpp:153\r\n    #10 0x000056128a0ba739 in ClientModel::qt_static_metacall (_o=0x56128acc6df0 <mempool+56>, _c=128, _id=<optimized out>, _a=0x7ff6947c1f5c <__lll_lock_wait+28>)\r\n        at qt/moc_clientmodel.cpp:140\r\n    #11 0x00007ff6952f75e9 in QMetaObject::activate (sender=sender@entry=0x56128b71a310, signalOffset=<optimized out>, local_signal_index=local_signal_index@entry=0, \r\n        argv=argv@entry=0x0) at kernel/qobject.cpp:3740\r\n    #12 0x00007ff6952f7f07 in QMetaObject::activate (sender=sender@entry=0x56128b71a310, m=m@entry=0x7ff695515760 <QTimer::staticMetaObject>, \r\n        local_signal_index=local_signal_index@entry=0, argv=argv@entry=0x0) at kernel/qobject.cpp:3602\r\n    #13 0x00007ff695371780 in QTimer::timeout (this=this@entry=0x56128b71a310) at .moc/moc_qtimer.cpp:198\r\n    #14 0x00007ff695303f78 in QTimer::timerEvent (this=0x56128b71a310, e=<optimized out>) at kernel/qtimer.cpp:254\r\n    #15 0x00007ff6952f8453 in QObject::event (this=0x56128b71a310, e=<optimized out>) at kernel/qobject.cpp:1285\r\n    #16 0x00007ff695c3ab8c in QApplicationPrivate::notify_helper (this=<optimized out>, receiver=0x56128b71a310, e=0x7fff8192ca80) at kernel/qapplication.cpp:3799\r\n    #17 0x00007ff695c42341 in QApplication::notify (this=0x7fff8192d6b0, receiver=0x56128b71a310, e=0x7fff8192ca80) at kernel/qapplication.cpp:3556\r\n    #18 0x00007ff6952cb9e0 in QCoreApplication::notifyInternal2 (receiver=0x56128b71a310, event=event@entry=0x7fff8192ca80) at kernel/qcoreapplication.cpp:988\r\n    #19 0x00007ff69531efee in QCoreApplication::sendEvent (event=0x7fff8192ca80, receiver=<optimized out>)\r\n        at ../../include/QtCore/../../src/corelib/kernel/qcoreapplication.h:231\r\n    #20 QTimerInfoList::activateTimers (this=0x56128b8c6940) at kernel/qtimerinfo_unix.cpp:644\r\n    #21 0x00007ff69531f511 in timerSourceDispatch (source=<optimized out>) at kernel/qeventdispatcher_glib.cpp:182\r\n    #22 0x00007ff69068f7f7 in g_main_context_dispatch () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #23 0x00007ff69068fa60 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #24 0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #25 0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x56128b8c6720, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #26 0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7fff8192ccd0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #27 0x00007ff695e290e7 in QDialog::exec (this=0x7fff8192cd58) at dialogs/qdialog.cpp:552\r\n    #28 0x000056128a016d55 in BitcoinGUI::message (this=0x56128b9167c0, title=..., message=..., style=<optimized out>, ret=0x7ff63e702e8b) at qt/bitcoingui.cpp:925\r\n    #29 0x000056128a0b9403 in BitcoinGUI::qt_static_metacall (_o=0x56128b9167c0, _c=<optimized out>, _id=<optimized out>, _a=0x7ff63e702920)\r\n        at qt/moc_bitcoingui.cpp:216\r\n    #30 0x00007ff6952f8499 in QObject::event (this=this@entry=0x56128b9167c0, e=e@entry=0x7ff614534610) at kernel/qobject.cpp:1263\r\n    #31 0x00007ff695c8246b in QWidget::event (this=this@entry=0x56128b9167c0, event=event@entry=0x7ff614534610) at kernel/qwidget.cpp:9225\r\n    #32 0x00007ff695d8192b in QMainWindow::event (this=0x56128b9167c0, event=0x7ff614534610) at widgets/qmainwindow.cpp:1543\r\n    #33 0x00007ff695c3ab8c in QApplicationPrivate::notify_helper (this=<optimized out>, receiver=0x56128b9167c0, e=0x7ff614534610) at kernel/qapplication.cpp:3799\r\n    #34 0x00007ff695c42341 in QApplication::notify (this=0x7fff8192d6b0, receiver=0x56128b9167c0, e=0x7ff614534610) at kernel/qapplication.cpp:3556\r\n    #35 0x00007ff6952cb9e0 in QCoreApplication::notifyInternal2 (receiver=0x56128b9167c0, event=event@entry=0x7ff614534610) at kernel/qcoreapplication.cpp:988\r\n    #36 0x00007ff6952ce16d in QCoreApplication::sendEvent (event=0x7ff614534610, receiver=<optimized out>)\r\n        at ../../include/QtCore/../../src/corelib/kernel/qcoreapplication.h:231\r\n    #37 QCoreApplicationPrivate::sendPostedEvents (receiver=receiver@entry=0x0, event_type=event_type@entry=0, data=0x56128b821ce0) at kernel/qcoreapplication.cpp:1649\r\n    #38 0x00007ff6952ce5d8 in QCoreApplication::sendPostedEvents (receiver=receiver@entry=0x0, event_type=event_type@entry=0) at kernel/qcoreapplication.cpp:1503\r\n    #39 0x00007ff69531fc43 in postEventSourceDispatch (s=0x56128b8c67f0) at kernel/qeventdispatcher_glib.cpp:276\r\n    #40 0x00007ff69068f7f7 in g_main_context_dispatch () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #41 0x00007ff69068fa60 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #42 0x00007ff69068fb0c in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n    #43 0x00007ff69532004f in QEventDispatcherGlib::processEvents (this=0x56128b8c6720, flags=...) at kernel/qeventdispatcher_glib.cpp:423\r\n    #44 0x00007ff6952c99ca in QEventLoop::exec (this=this@entry=0x7fff8192d4a0, flags=..., flags@entry=...) at kernel/qeventloop.cpp:212\r\n    #45 0x00007ff6952d213c in QCoreApplication::exec () at kernel/qcoreapplication.cpp:1261\r\n    #46 0x0000561289ffbb19 in main (argc=<optimized out>, argv=<optimized out>) at qt/bitcoin.cpp:714\r\n    (gdb) \r\n\r\nI suppose it's possible that this is corruption in something other than the chainstate db, that I only fixed the chainstate db by reindexing and still have old corruption in another db.\r\n\r\nEither way, bitcoin-qt shouldn't hang like this. It's not responding to requests to \"bitcoin-cli stop\" or any other RPC.",
          "user": {
            "login": "dooglus",
            "id": 573356,
            "node_id": "MDQ6VXNlcjU3MzM1Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dooglus",
            "html_url": "https://github.com/dooglus",
            "followers_url": "https://api.github.com/users/dooglus/followers",
            "following_url": "https://api.github.com/users/dooglus/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dooglus/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dooglus/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
            "organizations_url": "https://api.github.com/users/dooglus/orgs",
            "repos_url": "https://api.github.com/users/dooglus/repos",
            "events_url": "https://api.github.com/users/dooglus/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dooglus/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 323697996,
              "node_id": "MDU6TGFiZWwzMjM2OTc5OTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Data%20corruption",
              "name": "Data corruption",
              "color": "f7c6c7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 72,
          "closed_at": "2018-03-28T21:05:29Z",
          "created_at": "2017-09-16T19:59:33Z",
          "updated_at": "2021-12-16T14:55:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "comment_deleted",
      "id": 1515061387,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQxNTE1MDYxMzg3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1515061387",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-11T14:46:27Z"
    },
    {
      "event": "comment_deleted",
      "id": 1515061411,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQxNTE1MDYxNDEx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1515061411",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-11T14:46:33Z"
    },
    {
      "event": "comment_deleted",
      "id": 1515061552,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQxNTE1MDYxNTUy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1515061552",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-11T14:46:59Z"
    },
    {
      "event": "reviewed",
      "id": 103167237,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTAzMTY3MjM3",
      "url": null,
      "actor": null,
      "commit_id": "f4b68b3f8f6bb8ad45a9c13c70be0e24404ecd54",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "randolf",
        "id": 33541170,
        "node_id": "MDQ6VXNlcjMzNTQxMTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/33541170?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/randolf",
        "html_url": "https://github.com/randolf",
        "followers_url": "https://api.github.com/users/randolf/followers",
        "following_url": "https://api.github.com/users/randolf/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/randolf/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/randolf/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/randolf/subscriptions",
        "organizations_url": "https://api.github.com/users/randolf/orgs",
        "repos_url": "https://api.github.com/users/randolf/repos",
        "events_url": "https://api.github.com/users/randolf/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/randolf/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12659#pullrequestreview-103167237",
      "submitted_at": "2018-03-12T18:29:55Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12659"
    },
    {
      "event": "commented",
      "id": 372497511,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQ5NzUxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372497511",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-12T23:35:28Z",
      "updated_at": "2018-03-12T23:35:28Z",
      "author_association": "MEMBER",
      "body": "utACK f4b68b3.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12659#issuecomment-372497511",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12659"
    },
    {
      "event": "commented",
      "id": 372525612,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjUyNTYxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372525612",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-13T02:27:45Z",
      "updated_at": "2018-03-13T02:27:45Z",
      "author_association": "MEMBER",
      "body": "utACK f4b68b3",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12659#issuecomment-372525612",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12659"
    },
    {
      "event": "commented",
      "id": 372723837,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjcyMzgzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372723837",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-13T16:15:22Z",
      "updated_at": "2018-03-13T16:15:22Z",
      "author_association": "MEMBER",
      "body": "utACK f4b68b3f8f6bb8ad45a9c13c70be0e24404ecd54",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12659#issuecomment-372723837",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12659"
    },
    {
      "event": "merged",
      "id": 1519012020,
      "node_id": "MDExOk1lcmdlZEV2ZW50MTUxOTAxMjAyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1519012020",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f4b68b3f8f6bb8ad45a9c13c70be0e24404ecd54",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4b68b3f8f6bb8ad45a9c13c70be0e24404ecd54",
      "created_at": "2018-03-13T16:19:10Z"
    },
    {
      "event": "closed",
      "id": 1519012023,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTUxOTAxMjAyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1519012023",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-13T16:19:10Z"
    },
    {
      "event": "referenced",
      "id": 1519012138,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1MTkwMTIxMzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1519012138",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3d16f581538b0974853e820508e8b3093269d2fd",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d16f581538b0974853e820508e8b3093269d2fd",
      "created_at": "2018-03-13T16:19:12Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "eklitzke",
        "id": 2734,
        "node_id": "MDQ6VXNlcjI3MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eklitzke",
        "html_url": "https://github.com/eklitzke",
        "followers_url": "https://api.github.com/users/eklitzke/followers",
        "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
        "organizations_url": "https://api.github.com/users/eklitzke/orgs",
        "repos_url": "https://api.github.com/users/eklitzke/repos",
        "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eklitzke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-15T00:46:54Z",
      "updated_at": "2018-03-15T00:46:54Z",
      "source": {
        "issue": {
          "id": 305377835,
          "node_id": "MDU6SXNzdWUzMDUzNzc4MzU=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12690",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12690/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12690/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12690/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/12690",
          "number": 12690,
          "state": "closed",
          "state_reason": "completed",
          "title": "LevelDB \"corrupted compressed block contents\" errors",
          "body": "I've been running `bitcoind -reindex-chainstate` very often for the LevelDB work I've been doing, and twice now I have gotten corrupted LevelDB databases. This is on two different computers (my desktop and my laptop). In at least once case I know there was a **clean shut down**, and the case with a clean shutdown happened on a build I produced from the official bitcoin-0.16.0.tar.gz release tarball with no patches applied.\r\n\r\nBoth cases exhibit something very unusual: the CRC32 for the index block is correct, but LevelDB thinks the block is snappy compressed (which it definitely is not). As of #12659 we are now logging better LevelDB error messages, so if other users encounter this issue they'll see something like the following in their logs:\r\n\r\n```\r\n2018-03-14 01:36:47 LevelDB read failure: Corruption: corrupted compressed block contents\r\n2018-03-14 01:36:47 Corruption: corrupted compressed block contents\r\n2018-03-14 01:36:47 Database corrupted\r\n```\r\n\r\n(If the error is a bad CRC, instead the error message will say \"Corruption: block checksum mismatch\".)\r\n\r\nWhat's interesting about this is that as you can see from the \"corrupted compressed block contents\" message, LevelDB thought the block was compressed. But that's definitely not the case: we always have snappy compression disabled (see `GetOptions()` in `dbwrapper.cpp`). I'm looking at the LevelDB code, and the compression flag is encoded within blocks (I guess so you can change the snappy compression option and not have to rebuild your database).\r\n\r\nThe conclusion I have to draw from this is that this could be a LevelDB bug, as LevelDB wrote out data with a valid checksum, but wasn't able to read the data it wrote. If there are other users who have LevelDB corruption problems, I would like them to build bitcoin from master (or at least with 3d16f581538b0974853e820508e8b3093269d2fd applied) and let me know if the error string contains the message \"corrupted compressed block contents\".\r\n\r\nI am using Linux 4.15.6 on an ext4 filesystem with `data=ordered` in both cases.\r\n\r\n## Clean Shutdown\r\n\r\nHere are the logs for the corrupted database on my desktop that had a clean shutdown: https://gist.github.com/eklitzke/166665da7eebfaedfa9ab8d0947ee5c8\r\n\r\nAs I mentioned earlier, this is from a `bitcoind` I compiled from the official source release on bitcoincore.org without any patches applied. This isn't exactly the same as the Gitian release because I have a newer version of GCC, but I would be surprised if that was related to the corruption issue (although it's not impossible).\r\n\r\n```\r\n$ sha1sum bitcoin-0.16.0.tar.gz \r\nb59539e55782f7f697ec4702bfda118274fd0138  bitcoin-0.16.0.tar.gz\r\n```\r\n\r\nIn GDB I can see that the bad block was the one that's supposed to contain `DB_BEST_BLOCK`:\r\n\r\n```\r\n(gdb) bt\r\n#0  leveldb::ReadBlock (file=file@entry=0x55555ead3a20, options=..., handle=..., result=result@entry=0x7fffffffc090) at leveldb/table/format.cc:122\r\n#1  0x000055555590a575 in leveldb::Table::Open (options=..., file=0x55555ead3a20, size=size@entry=142335, table=table@entry=0x7fffffffc190) at leveldb/table/table.cc:65\r\n#2  0x00005555558f7d94 in leveldb::TableCache::FindTable (this=this@entry=0x5555574918f0, file_number=<optimized out>, file_size=142335, handle=handle@entry=0x7fffffffc248)\r\n    at leveldb/db/table_cache.cc:64\r\n#3  0x00005555558f805d in leveldb::TableCache::Get (this=0x5555574918f0, options=..., file_number=<optimized out>, file_size=<optimized out>, k=..., arg=0x7fffffffc390, \r\n    saver=0x5555558f9d40 <leveldb::SaveValue(void*, leveldb::Slice const&, leveldb::Slice const&)>) at leveldb/db/table_cache.cc:112\r\n#4  0x0000555555901859 in leveldb::Version::Get (this=this@entry=0x5555574b50d0, options=..., k=..., value=value@entry=0x7fffffffc630, stats=stats@entry=0x7fffffffc440)\r\n    at leveldb/db/version_set.cc:408\r\n#5  0x00005555558e60b9 in leveldb::DBImpl::Get (this=0x55555eac6630, options=..., key=..., value=0x7fffffffc630) at leveldb/db/db_impl.cc:1141\r\n#6  0x00005555556daca4 in CDBWrapper::Read<char, uint256> (this=0x55555ead4898, key=@0x55555599a454: 66 'B', value=...) at ./dbwrapper.h:236\r\n#7  0x00005555556d315f in CCoinsViewDB::GetBestBlock (this=<optimized out>) at txdb.cpp:71\r\n#8  0x0000555555852dc2 in CCoinsViewBacked::GetBestBlock (this=<optimized out>) at coins.cpp:25\r\n#9  0x0000555555852f5d in CCoinsViewCache::GetBestBlock (this=0x555557473520) at coins.cpp:137\r\n#10 0x00005555555b8025 in AppInitMain () at init.cpp:1510\r\n#11 0x000055555559695c in AppInit (argc=1, argv=<optimized out>) at bitcoind.cpp:160\r\n#12 0x0000555555589d9f in main (argc=1, argv=0x7fffffffdb78) at bitcoind.cpp:186\r\n```\r\n\r\nHere's another thing that's interesting about this. The bad file was named `600070.ldb`. When I look at the directory contents of the chainstate directory, there's something kind of unexpected:\r\n\r\n```\r\n-rw-rw-r--. 1 evan evan   86225 Mar 12 01:03 600060.ldb\r\n-rw-rw-r--. 1 evan evan  106438 Mar 12 01:03 600061.ldb\r\n-rw-rw-r--. 1 evan evan   81855 Mar 12 01:03 600062.ldb\r\n-rw-rw-r--. 1 evan evan  118547 Mar 12 01:03 600063.ldb\r\n-rw-rw-r--. 1 evan evan   89644 Mar 12 01:03 600064.ldb\r\n-rw-rw-r--. 1 evan evan  112220 Mar 12 01:03 600065.ldb\r\n-rw-rw-r--. 1 evan evan   86420 Mar 12 01:03 600066.ldb\r\n-rw-rw-r--. 1 evan evan   97277 Mar 12 01:03 600067.ldb\r\n-rw-rw-r--. 1 evan evan  106997 Mar 12 01:03 600068.ldb\r\n-rw-rw-r--. 1 evan evan  142335 Mar 12 01:03 600070.ldb    <--- the corrupted file\r\n-rw-rw-r--. 1 evan evan  144482 Mar 12 01:03 600071.ldb\r\n-rw-rw-r--. 1 evan evan  150084 Mar 12 01:03 600072.ldb\r\n-rw-rw-r--. 1 evan evan  154317 Mar 12 01:03 600073.ldb\r\n-rw-rw-r--. 1 evan evan  157988 Mar 12 01:03 600074.ldb\r\n-rw-rw-r--. 1 evan evan  151167 Mar 12 01:03 600075.ldb\r\n-rw-rw-r--. 1 evan evan  224717 Mar 12 01:03 600076.ldb\r\n-rw-rw-r--. 1 evan evan  149947 Mar 12 01:03 600077.ldb\r\n-rw-rw-r--. 1 evan evan  162078 Mar 12 01:03 600078.ldb\r\n-rw-rw-r--. 1 evan evan  178024 Mar 12 01:03 600079.ldb\r\n-rw-rw-r--. 1 evan evan  140579 Mar 12 01:03 600080.ldb\r\n-rw-rw-r--. 1 evan evan  145243 Mar 12 01:03 600081.ldb\r\n-rw-rw-r--. 1 evan evan  143759 Mar 12 01:03 600082.ldb\r\n-rw-rw-r--. 1 evan evan   72766 Mar 12 01:03 600083.ldb\r\n-rw-rw-r--. 1 evan evan  206309 Mar 12 01:04 600084.ldb\r\n```\r\n\r\nAs you can see, all of these files go up sequentially. Except there's no `600069.ldb` file, which just so happens to be the file that is numerically just before the corrupted file. I don't know if this is actually significant or not. It might just be an implementation detail in LevelDB (the \"best block\" should be lexicographically first in the database, so maybe the first block is handled slightly different wrt file numbering).\r\n\r\nI've saved a copy of this database locally for further investigation.\r\n\r\n## Unclean Shutdown\r\n\r\nSame error about \"corrupted compressed block contents\". This wasn't a clean shutdown it was just from me killing the process, but this is still not supposed to cause database corruption as LevelDB is supposed to maintain a consistent writeahead log.\r\n\r\nThe stack trace is different: now the corrupted block is the one containing the head block `H` instead of the best block:\r\n\r\n```\r\n(gdb) bt\r\n#0  leveldb::ReadBlock (file=file@entry=0x15e07d90, options=..., handle=..., result=result@entry=0x7fffffffa270) at leveldb/table/format.cc:122\r\n#1  0x00000000007ec1f5 in leveldb::Table::Open (options=..., file=0x15e07d90, size=size@entry=1199067, table=table@entry=0x7fffffffa370) at leveldb/table/table.cc:65\r\n#2  0x00000000007d9a14 in leveldb::TableCache::FindTable (this=this@entry=0x83d1640, file_number=<optimized out>, file_size=1199067, handle=handle@entry=0x7fffffffa428)\r\n    at leveldb/db/table_cache.cc:64\r\n#3  0x00000000007d9cdd in leveldb::TableCache::Get (this=0x83d1640, options=..., file_number=<optimized out>, file_size=<optimized out>, k=..., arg=0x7fffffffa570, \r\n    saver=0x7db9c0 <leveldb::SaveValue(void*, leveldb::Slice const&, leveldb::Slice const&)>) at leveldb/db/table_cache.cc:112\r\n#4  0x00000000007e34d9 in leveldb::Version::Get (this=this@entry=0xfe1b90, options=..., k=..., value=value@entry=0x7fffffffa7b0, stats=stats@entry=0x7fffffffa620)\r\n    at leveldb/db/version_set.cc:408\r\n#5  0x00000000007c7d39 in leveldb::DBImpl::Get (this=0x15df55c0, options=..., key=..., value=0x7fffffffa7b0) at leveldb/db/db_impl.cc:1141\r\n#6  0x0000000000602050 in CDBWrapper::Read<char, std::vector<uint256, std::allocator<uint256> > > (this=0x15df59e8, key=@0x884eea: 72 'H', \r\n    value=std::vector of length 0, capacity 0) at ./dbwrapper.h:236\r\n#7  0x00000000005fc8fb in CCoinsViewDB::GetHeadBlocks (this=0x15df59e0) at txdb.cpp:78\r\n#8  0x000000000065c965 in CChainState::ReplayBlocks (this=0xcd7f00 <g_chainstate>, params=..., view=0x15df59e0) at validation.cpp:4000\r\n#9  0x000000000065d761 in ReplayBlocks (params=..., view=0x15df59e0) at validation.cpp:4060\r\n#10 0x000000000044172b in AppInitMain () at init.cpp:1523\r\n#11 0x00000000004194e7 in AppInit (argc=1, argv=0x7fffffffe278) at bitcoind.cpp:160\r\n#12 0x0000000000419afc in main (argc=1, argv=0x7fffffffe278) at bitcoind.cpp:186\r\n```\r\n\r\nIt's interesting that this should be the last block in the database, and the other stack trace was for the first block in the database. This one doesn't have anything unusual in the directory listing, other than that I'll note that the corrupted file was the last one numerically:\r\n\r\n```\r\n-rw-r--r--. 1 evan evan 1413847 Mar 11 23:27 006615.ldb\r\n-rw-r--r--. 1 evan evan 1484317 Mar 11 23:27 006616.ldb\r\n-rw-r--r--. 1 evan evan 1177535 Mar 11 23:27 006617.ldb\r\n-rw-r--r--. 1 evan evan 1209685 Mar 11 23:27 006618.ldb\r\n-rw-r--r--. 1 evan evan 1497862 Mar 11 23:27 006619.ldb\r\n-rw-r--r--. 1 evan evan 1318973 Mar 11 23:27 006620.ldb\r\n-rw-r--r--. 1 evan evan 1269698 Mar 11 23:27 006621.ldb\r\n-rw-r--r--. 1 evan evan 1358783 Mar 11 23:27 006622.ldb\r\n-rw-r--r--. 1 evan evan 1199067 Mar 11 23:27 006623.ldb     <--- the corrupted file\r\n-rw-------. 1 evan evan       0 Mar 14 17:34 006725.log\r\n-rw-------. 1 evan evan      16 Mar 14 17:34 CURRENT\r\n-rw-------. 1 evan evan       0 Mar 11 15:53 LOCK\r\n-rw-r--r--. 1 evan evan     181 Mar 12 00:52 LOG\r\n-rw-r--r--. 1 evan evan     181 Mar 12 00:38 LOG.old\r\n-rw-------. 1 evan evan   27472 Mar 14 17:34 MANIFEST-006724\r\n```\r\n\r\nI also saved a copy of this database locally for further investigation.",
          "user": {
            "login": "eklitzke",
            "id": 2734,
            "node_id": "MDQ6VXNlcjI3MzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eklitzke",
            "html_url": "https://github.com/eklitzke",
            "followers_url": "https://api.github.com/users/eklitzke/followers",
            "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
            "organizations_url": "https://api.github.com/users/eklitzke/orgs",
            "repos_url": "https://api.github.com/users/eklitzke/repos",
            "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/eklitzke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 219890555,
              "node_id": "MDU6TGFiZWwyMTk4OTA1NTU=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Block%20storage",
              "name": "Block storage",
              "color": "000000",
              "default": false
            },
            {
              "id": 323697996,
              "node_id": "MDU6TGFiZWwzMjM2OTc5OTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Data%20corruption",
              "name": "Data corruption",
              "color": "f7c6c7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 2,
          "closed_at": "2020-04-26T01:31:56Z",
          "created_at": "2018-03-15T00:46:54Z",
          "updated_at": "2022-02-15T10:43:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 373542085,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzU0MjA4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373542085",
      "actor": {
        "login": "donaloconnor",
        "id": 6394033,
        "node_id": "MDQ6VXNlcjYzOTQwMzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6394033?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/donaloconnor",
        "html_url": "https://github.com/donaloconnor",
        "followers_url": "https://api.github.com/users/donaloconnor/followers",
        "following_url": "https://api.github.com/users/donaloconnor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/donaloconnor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/donaloconnor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/donaloconnor/subscriptions",
        "organizations_url": "https://api.github.com/users/donaloconnor/orgs",
        "repos_url": "https://api.github.com/users/donaloconnor/repos",
        "events_url": "https://api.github.com/users/donaloconnor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/donaloconnor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-15T22:24:13Z",
      "updated_at": "2018-03-15T22:24:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK https://github.com/bitcoin/bitcoin/commit/f4b68b3f8f6bb8ad45a9c13c70be0e24404ecd54",
      "user": {
        "login": "donaloconnor",
        "id": 6394033,
        "node_id": "MDQ6VXNlcjYzOTQwMzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6394033?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/donaloconnor",
        "html_url": "https://github.com/donaloconnor",
        "followers_url": "https://api.github.com/users/donaloconnor/followers",
        "following_url": "https://api.github.com/users/donaloconnor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/donaloconnor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/donaloconnor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/donaloconnor/subscriptions",
        "organizations_url": "https://api.github.com/users/donaloconnor/orgs",
        "repos_url": "https://api.github.com/users/donaloconnor/repos",
        "events_url": "https://api.github.com/users/donaloconnor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/donaloconnor/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12659#issuecomment-373542085",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12659"
    },
    {
      "event": "head_ref_deleted",
      "id": 1524963850,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQxNTI0OTYzODUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1524963850",
      "actor": {
        "login": "eklitzke",
        "id": 2734,
        "node_id": "MDQ6VXNlcjI3MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eklitzke",
        "html_url": "https://github.com/eklitzke",
        "followers_url": "https://api.github.com/users/eklitzke/followers",
        "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
        "organizations_url": "https://api.github.com/users/eklitzke/orgs",
        "repos_url": "https://api.github.com/users/eklitzke/repos",
        "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eklitzke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-16T08:00:26Z"
    },
    {
      "event": "referenced",
      "id": 3440420172,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDA0MjAxNzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3440420172",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bbb3e74ce7b9fc0f48a089d397ab58804497e8ab",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/bbb3e74ce7b9fc0f48a089d397ab58804497e8ab",
      "created_at": "2020-06-13T03:49:32Z"
    },
    {
      "event": "referenced",
      "id": 3441086842,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDEwODY4NDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3441086842",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "57a6035a90b38c4806a64640bb2edf900a08c9d0",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/57a6035a90b38c4806a64640bb2edf900a08c9d0",
      "created_at": "2020-06-13T19:44:19Z"
    },
    {
      "event": "referenced",
      "id": 3451533187,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NTE1MzMxODc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3451533187",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "185f2d6cfab88d6a9dceda73149e413f85fd3a2f",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/185f2d6cfab88d6a9dceda73149e413f85fd3a2f",
      "created_at": "2020-06-17T02:17:37Z"
    },
    {
      "event": "referenced",
      "id": 3459080996,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NTkwODA5OTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3459080996",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f2afaa324faac96a65517aa866afdd3d430c1520",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/f2afaa324faac96a65517aa866afdd3d430c1520",
      "created_at": "2020-06-18T16:42:27Z"
    },
    {
      "event": "referenced",
      "id": 4937162855,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5MzcxNjI4NTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4937162855",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6a194112d9b416665c54ca5322419f2bba217549",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/6a194112d9b416665c54ca5322419f2bba217549",
      "created_at": "2021-06-24T22:46:11Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "lyricidal",
        "id": 2319897,
        "node_id": "MDQ6VXNlcjIzMTk4OTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2319897?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lyricidal",
        "html_url": "https://github.com/lyricidal",
        "followers_url": "https://api.github.com/users/lyricidal/followers",
        "following_url": "https://api.github.com/users/lyricidal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lyricidal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lyricidal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lyricidal/subscriptions",
        "organizations_url": "https://api.github.com/users/lyricidal/orgs",
        "repos_url": "https://api.github.com/users/lyricidal/repos",
        "events_url": "https://api.github.com/users/lyricidal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lyricidal/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-27T02:04:02Z",
      "updated_at": "2021-08-27T02:04:02Z",
      "source": {
        "issue": {
          "id": 980797169,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzIwOTY4ODU1",
          "url": "https://api.github.com/repos/PRCYCoin/PRCYCoin/issues/102",
          "repository_url": "https://api.github.com/repos/PRCYCoin/PRCYCoin",
          "labels_url": "https://api.github.com/repos/PRCYCoin/PRCYCoin/issues/102/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/PRCYCoin/PRCYCoin/issues/102/comments",
          "events_url": "https://api.github.com/repos/PRCYCoin/PRCYCoin/issues/102/events",
          "html_url": "https://github.com/PRCYCoin/PRCYCoin/pull/102",
          "number": 102,
          "state": "closed",
          "state_reason": null,
          "title": "[Upstream] [DB] Bitcoin 0.12-0.14 dbwrapper improvements",
          "body": "https://github.com/PRCYCoin/PRCYCoin/commit/f4e6c525bff6041ec7e15126af3aabb27c9108c9 from https://github.com/bitcoin/bitcoin/pull/12659\r\n> The `leveldb::Status` class logs the filename of corrupted files, which might be useful when looking at error reports from usres. In theory this is already logged via the `LogPrintf()` statement in `HandleError()`, but that may not always be close to where the final error message is logged, e.g. see [#11355 (comment)](https://github.com/bitcoin/bitcoin/issues/11355#issuecomment-340340542) where the log trace provided by the user does not contain that information (and other user comments in the same issue).\r\n> \r\n> This also adds a log message instructing the user to run the process with `-debug=leveldb`, which provides much more verbose error messages about LevelDB internals. This may not really help much, but improving the error messages here can't hurt.\r\n\r\nThe rest of the commits:\r\n\r\n> This backports a series of updates and cleanups to the LevelDB wrapper from:\r\n> \r\n> * [Change hardcoded character constants to descriptive named constants for db keys bitcoin/bitcoin#5707](https://github.com/bitcoin/bitcoin/pull/5707)\r\n> * [Obfuscate chainstate bitcoin/bitcoin#6650](https://github.com/bitcoin/bitcoin/pull/6650) [`*`]\r\n> * [Unobfuscate chainstate data in CCoinsViewDB::GetStats bitcoin/bitcoin#6777](https://github.com/bitcoin/bitcoin/pull/6777) [`*`]\r\n> * [Fix chainstate serialized_size computation bitcoin/bitcoin#6865](https://github.com/bitcoin/bitcoin/pull/6865)\r\n> * [[cleanup] leveldbwrapper becomes more generic 'dbwrapper' module bitcoin/bitcoin#6873](https://github.com/bitcoin/bitcoin/pull/6873)\r\n> * [Minor changes to dbwrapper to simplify support for other databases bitcoin/bitcoin#7927](https://github.com/bitcoin/bitcoin/pull/7927) [`*`]\r\n> * [[Trivial] Do not shadow members in dbwrapper bitcoin/bitcoin#8467](https://github.com/bitcoin/bitcoin/pull/8467)\r\n> * [rpc: make `gettxoutsettinfo` run lock-free bitcoin/bitcoin#6290](https://github.com/bitcoin/bitcoin/pull/6290)\r\nhttps://github.com/PRCYCoin/PRCYCoin/commit/f4e6c525bff6041ec7e15126af3aabb27c9108c9 from \r\n> * [Refactor: Remove using namespace <xxx> from bench/ & test/ sources bitcoin/bitcoin#9281](https://github.com/bitcoin/bitcoin/pull/9281)\r\n> \r\n> PIVX-specific edits were required to keep the sporks and zerocoin databases in line.\r\n> \r\n> [`*`] NOTE: excluding the obfuscation of databases by xoring data, as we might not want this feature (e.g. as [zcash/zcash#2598](https://github.com/zcash/zcash/pull/2598)). Otherwise it can be discussed, and added, with a separate PR.\r\n\r\nfrom https://github.com/PIVX-Project/PIVX/pull/1629",
          "user": {
            "login": "lyricidal",
            "id": 2319897,
            "node_id": "MDQ6VXNlcjIzMTk4OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2319897?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lyricidal",
            "html_url": "https://github.com/lyricidal",
            "followers_url": "https://api.github.com/users/lyricidal/followers",
            "following_url": "https://api.github.com/users/lyricidal/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/lyricidal/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/lyricidal/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/lyricidal/subscriptions",
            "organizations_url": "https://api.github.com/users/lyricidal/orgs",
            "repos_url": "https://api.github.com/users/lyricidal/repos",
            "events_url": "https://api.github.com/users/lyricidal/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/lyricidal/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 2686784391,
              "node_id": "MDU6TGFiZWwyNjg2Nzg0Mzkx",
              "url": "https://api.github.com/repos/PRCYCoin/PRCYCoin/labels/Upstream",
              "name": "Upstream",
              "description": "Upstream backports/fixes",
              "color": "93CC7D",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/PRCYCoin/PRCYCoin/pulls/102",
            "html_url": "https://github.com/PRCYCoin/PRCYCoin/pull/102",
            "diff_url": "https://github.com/PRCYCoin/PRCYCoin/pull/102.diff",
            "patch_url": "https://github.com/PRCYCoin/PRCYCoin/pull/102.patch"
          },
          "closed_at": "2021-08-27T07:09:43Z",
          "created_at": "2021-08-27T02:04:02Z",
          "updated_at": "2021-09-28T21:04:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "locked",
      "id": 5271791996,
      "node_id": "LOE_lADOABII584SH2gxzwAAAAE6OSl8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271791996",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T11:51:59Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": []
}