{
  "type": "issue",
  "issue": {
    "id": 2189085209,
    "node_id": "I_kwDOABII586CesoZ",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29662",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29662/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29662/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29662/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/29662",
    "number": 29662,
    "state": "open",
    "state_reason": null,
    "title": "More control of maintenance processes at startup/restart",
    "body": "### Please describe the feature you'd like to see added.\r\n\r\nI'd like some way to control the levelDB compaction processes a bit more. Specifically, if I could control when they are scheduled (hourly in the background, for example), and possibly limit resources they consume (I/O, in particular), I think it would help.\r\n\r\n### Is your feature related to a problem, if so please describe it.\r\n\r\nThe problem I'm having is that when I reboot my bitcoin-core node (which runs with `txindex=1`), the RPC listener comes up pretty promptly, so my healthchecks (currently just TCP) pass. However, the service is not in its usual baseline state; it is doing a lot of read I/O, and logging about levelDB compaction. This condition lasts for about an hour. \r\n\r\nHere is an illustration of the I/O level relative to baseline. The left side is the restart, and the lower right side is after this abates. Dark blue is read:\r\n\r\n<img width=\"634\" alt=\"image\" src=\"https://github.com/bitcoin/bitcoin/assets/35895831/f0902e3d-a41f-4a45-bbd4-b22c18537fa6\">\r\n\r\nHere's a summary of the logs at this time:\r\n\r\n<img width=\"500\" alt=\"image\" src=\"https://github.com/bitcoin/bitcoin/assets/35895831/4d42e318-5430-45a7-b761-5c16394d76ab\">\r\n\r\nThe \"Compacting\" log line is extremely elevated during this period (though it does occur at a much lower level after):\r\n\r\n<img width=\"765\" alt=\"image\" src=\"https://github.com/bitcoin/bitcoin/assets/35895831/815b361b-b242-4a89-a32a-a7c5c7e66155\">\r\n\r\nHere's a graph of RPC trace P50 duration before, during, and after this phase:\r\n\r\n<img width=\"1200\" alt=\"image\" src=\"https://github.com/bitcoin/bitcoin/assets/35895831/f6c6ca27-6db2-4ef2-937f-d390da18e66d\">\r\n\r\nThe real problem is the last graph, the elevated RPC latency. The tail and head latencies are also much worse than normal, so it's not just a tail latency issue I could solve with timeouts / hedging. The server goes from microsecond/millisecond latency to 10s of seconds, especially for `sendrawtransaction` (10-30s max), with `listunspent` a distant second (3-4s max).\r\n\r\nThis latency abates as soon as the high I/O and compaction logging stops. I am therefore making the **intuitive leap** (so experts, please consider this critically and I welcome other explanations) that resource utilization during compaction is causing some RPCs to be very slow. I also considered lock contention (perhaps `cs_main`) but I couldn't see it in the code.\r\n\r\n### Describe the solution you'd like\r\n\r\nI'd like the experts to recommend a solution. Intuitively, it seems like levelDB could amortize this compaction work during normal operation as a background task ([the README seems to imply it already should?](https://github.com/google/leveldb?tab=readme-ov-file#read-performance)). Or maybe some way to limit resources used for compaction? \r\n\r\n### Describe any alternatives you've considered\r\n\r\nCurrently, I'm looking at alternative ways to do the RPC I enabled `txindex` for, which is `getrawtransaction` without the blockhash. But, that will only sidestep this issue with compaction and RPC latency.\r\n\r\n### Please leave any additional context\r\n\r\nI am using a slower filesystem than most. It is a regionally-replicated NFS store, which we chose for resiliency reasons. Intuitively, I'd expect this problem to be less severe (or shorter duration) with lower-latency storage, but still present.\r\n\r\nCommand line args: \r\n\r\n```\r\ntxindex=\"1\", rpcworkqueue=\"1024\", rpc_*=\"redacted\", debug=\"coindb\", debug=\"estimatefee\", debug=\"reindex\", debug=\"leveldb\", debug=\"walletdb\", debug=\"lock\", debug=\"rpc\", dbcache=\"5734\", datadir=\"/home/bitcoin/data\", chain=\"main\"\r\n```",
    "user": {
      "login": "domZippilli",
      "id": 35895831,
      "node_id": "MDQ6VXNlcjM1ODk1ODMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35895831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domZippilli",
      "html_url": "https://github.com/domZippilli",
      "followers_url": "https://api.github.com/users/domZippilli/followers",
      "following_url": "https://api.github.com/users/domZippilli/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/domZippilli/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/domZippilli/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/domZippilli/subscriptions",
      "organizations_url": "https://api.github.com/users/domZippilli/orgs",
      "repos_url": "https://api.github.com/users/domZippilli/repos",
      "events_url": "https://api.github.com/users/domZippilli/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/domZippilli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64583,
        "node_id": "MDU6TGFiZWw2NDU4Mw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
        "name": "Feature",
        "color": "7cf575",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-15T16:53:22Z",
    "updated_at": "2024-03-15T22:36:15Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 12134374927,
      "node_id": "LE_lADOABII586CesoZzwAAAALTQ94P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12134374927",
      "actor": {
        "login": "domZippilli",
        "id": 35895831,
        "node_id": "MDQ6VXNlcjM1ODk1ODMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/35895831?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/domZippilli",
        "html_url": "https://github.com/domZippilli",
        "followers_url": "https://api.github.com/users/domZippilli/followers",
        "following_url": "https://api.github.com/users/domZippilli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/domZippilli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/domZippilli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/domZippilli/subscriptions",
        "organizations_url": "https://api.github.com/users/domZippilli/orgs",
        "repos_url": "https://api.github.com/users/domZippilli/repos",
        "events_url": "https://api.github.com/users/domZippilli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/domZippilli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T16:53:22Z",
      "label": {
        "name": "Feature",
        "color": "7cf575"
      }
    }
  ]
}