{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
    "id": 1343911718,
    "node_id": "PR_kwDOABII585QGncm",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27607",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27607.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27607.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
    "number": 27607,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "index: make startup more efficient",
    "user": {
      "login": "furszy",
      "id": 5377650,
      "node_id": "MDQ6VXNlcjUzNzc2NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/furszy",
      "html_url": "https://github.com/furszy",
      "followers_url": "https://api.github.com/users/furszy/followers",
      "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
      "organizations_url": "https://api.github.com/users/furszy/orgs",
      "repos_url": "https://api.github.com/users/furszy/repos",
      "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/furszy/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Simplifies index startup code, eliminating the `g_indexes_ready_to_sync` variable, \r\ndeduplicating code and moving the prune violation check out of the `BaseIndex` class.\r\n\r\nAlso makes startup more efficient by running the prune violation check once for all indexes\r\ninstead of once for each index, and by delaying the prune violation check and moving it off\r\nof the main thread so the node can start up faster and perform the block data availability\r\nverification even when the '-reindex\" or the \"-reindex-chainstate\" flags are enabled (which\r\nhasn't  being possible so far).",
    "labels": [
      {
        "id": 97470796,
        "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
        "name": "UTXO Db and Indexes",
        "color": "fbca04",
        "default": false
      }
    ],
    "created_at": "2023-05-09T14:55:04Z",
    "updated_at": "2023-07-20T23:00:15Z",
    "closed_at": "2023-07-10T15:56:33Z",
    "mergeable_state": "unknown",
    "merged_at": "2023-07-10T15:56:33Z",
    "merge_commit_sha": "ef29d5d7e239b42269dd22ea94a709b5e4ceb5e5",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "furszy:2023_index_decouple_has_data_checks",
      "ref": "2023_index_decouple_has_data_checks",
      "sha": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 143624913,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDM2MjQ5MTM=",
        "name": "bitcoin-core",
        "full_name": "furszy/bitcoin-core",
        "owner": {
          "login": "furszy",
          "id": 5377650,
          "node_id": "MDQ6VXNlcjUzNzc2NTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/furszy",
          "html_url": "https://github.com/furszy",
          "followers_url": "https://api.github.com/users/furszy/followers",
          "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
          "organizations_url": "https://api.github.com/users/furszy/orgs",
          "repos_url": "https://api.github.com/users/furszy/repos",
          "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/furszy/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/furszy/bitcoin-core",
        "description": "Bitcoin-Core",
        "fork": true,
        "url": "https://api.github.com/repos/furszy/bitcoin-core",
        "archive_url": "https://api.github.com/repos/furszy/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/furszy/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/furszy/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/furszy/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/furszy/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/furszy/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/furszy/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/furszy/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/furszy/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/furszy/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/furszy/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/furszy/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/furszy/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/furszy/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/furszy/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/furszy/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/furszy/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/furszy/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/furszy/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/furszy/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/furszy/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/furszy/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/furszy/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/furszy/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/furszy/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:furszy/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/furszy/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/furszy/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/furszy/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/furszy/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/furszy/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/furszy/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/furszy/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/furszy/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/furszy/bitcoin-core/hooks",
        "svn_url": "https://github.com/furszy/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 381574,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T20:22:00Z",
        "created_at": "2018-08-05T15:28:43Z",
        "updated_at": "2023-02-27T18:01:49Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "79e8247ddb166f9b980f40249b7372a502402a4d",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35476,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 673,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-03T00:03:27Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T18:21:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 189,
    "deletions": 108,
    "changed_files": 20,
    "commits": 9,
    "review_comments": 84,
    "comments": 21
  },
  "events": [
    {
      "event": "commented",
      "id": 1540297299,
      "node_id": "IC_kwDOABII585bzxJT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1540297299",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T14:55:07Z",
      "updated_at": "2023-07-10T15:44:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1522224733), [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1522386920) |\n| Stale ACK | [mzumsande](https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1515317576) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28053](https://github.com/bitcoin/bitcoin/pull/28053) (refactor: Move stopafterblockimport option out of blockstorage by TheCharlatan)\n* [#28051](https://github.com/bitcoin/bitcoin/pull/28051) (Get rid of shutdown.cpp/shutdown.h, use SignalInterrupt directly by ryanofsky)\n* [#27850](https://github.com/bitcoin/bitcoin/pull/27850) (test: Add unit & functional test coverage for blockstore by pinheadmz)\n* [#26762](https://github.com/bitcoin/bitcoin/pull/26762) (bugfix: Make `CCheckQueue` RAII-styled by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1540297299",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "labeled",
      "id": 9202431676,
      "node_id": "LE_lADOABII585ldbL0zwAAAAIkgfa8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9202431676",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T15:53:58Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T18:28:37Z",
      "updated_at": "2023-05-09T18:28:37Z",
      "source": {
        "issue": {
          "id": 1700441577,
          "node_id": "PR_kwDOABII585QAqXJ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27596",
          "number": 27596,
          "state": "open",
          "state_reason": null,
          "title": "assumeutxo (2)",
          "body": "- Background and FAQ: https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal\r\n- Prior progress/project: https://github.com/bitcoin/bitcoin/projects/11\r\n- Replaces https://github.com/bitcoin/bitcoin/pull/15606, which was closed due to Github slowness. Original description and commentary can be found there.\r\n\r\n---\r\n\r\nThis changeset finishes the first phase of the assumeutxo project. It makes UTXO snapshots loadable via RPC (`loadtxoutset`) and adds `assumeutxo` parameters to chainparams. It contains all the remaining changes necessary to both use an assumedvalid snapshot chainstate and do a full validation sync in the background.\r\n\r\nThis may look like a lot to review, but note that\r\n- 200 lines are duplicated in #24008 \r\n- ~200 lines are a (non-essential) demo shell script\r\n- Many lines are functional test, documentation, and relatively dilute RPC code.\r\n\r\nSo it shouldn't be as burdensome to review as the linecount might suggest.\r\n\r\n- **P2P**: minor changes are made to `init.cpp` and `net_processing.cpp` to make simultaneous IBD across multiple chainstates work.\r\n- **Pruning**: implement correct pruning behavior when using a background chainstate\r\n- **Blockfile separation**: to prevent \"fragmentation\" in blockfile storage, have background chainstates use separate blockfiles from active snapshot chainstates to avoid interleaving heights and impairing pruning.\r\n- **Indexing**: all existing `CValidationInterface` events are given with an additional parameter, ChainstateRole, and all indexers ignore events from ChainstateRole::ASSUMEDVALID so that indexation only happens sequentially.\r\n- Raise error when both `-reindex` and assumeutxo are in use.\r\n- **RPC**: introduce RPC commands `loadtxoutset` and (hidden) `getchainstates`.\r\n- **Release docs & first assumeutxo commitment**: add notes and a particular assumeutxo hash value for first AU-enabled release.\r\n  - This will complete the project and allow use of UTXO snapshots for faster node bootstrap.\r\n\r\nThe next phase, if it were to be pursued, would be coming up with a way to distribute the UTXO snapshots over the P2P network.\r\n\r\n---\r\n\r\n### UTXO snapshots\r\n\r\n- **788'000**\r\n  - HTTP: http://img.jameso.be/utxo-788000.dat\r\n  - Torrent: `magnet:?xt=urn:btih:a457a54c76dfdbb3f44e3485a84c4772bea647e0&dn=utxo-788000.dat&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969`\r\n  - Create your own with `./contrib/devtools/utxo_snapshot.sh`\r\n    - e.g. `./contrib/devtools/utxo_snapshot.sh 788000 utxo.dat ./src/bitcoin-cli -datadir=$(pwd)/testdata`\r\n\r\n### Testing\r\n\r\n#### For fun (~5min)\r\n\r\nIf you want to do a quick test, you can run `./contrib/devtools/test_utxo_snapshots.sh` and follow the instructions. This is mostly obviated by the functional tests, though.\r\n\r\n#### For real (longer)\r\n\r\nIf you'd like to experience a real usage of assumeutxo, you can do that too.\r\nI've cut a new snapshot at height 788'000 (http://img.jameso.be/utxo-788000.dat - but you can do it yourself with `./contrib/devtools/utxo_snapshot.sh` if you want). Download that, and then create a datadir for testing:\r\n```sh\r\n$ cd ~/src/bitcoin  # or whatever\r\n\r\n# get the snapshot\r\n$ curl http://img.jameso.be/utxo-788000.dat > utxo-788000.dat\r\n\r\n# you'll want to do this if you like copy/pasting \r\n$ export AU_DATADIR=/home/${USER}/au-test # or wherever\r\n\r\n$ mkdir ${AU_DATADIR}\r\n$ vim ${AU_DATADIR}/bitcoin.conf\r\n\r\ndbcache=8000  # or, you know, something high\r\nblockfilterindex=1\r\ncoinstatsindex=1\r\nprune=3000\r\nlogthreadnames=1\r\n```\r\nObtain this branch, build it, and then start bitcoind:\r\n```sh\r\n$ git remote add jamesob https://github.com/jamesob/bitcoin\r\n$ git fetch jamesob assumeutxo\r\n$ git checkout jamesob/assumeutxo\r\n\r\n$ ./configure $conf_args && make  # (whatever you like to do here)\r\n\r\n# start 'er up and watch the logs\r\n$ ./src/bitcoind -datadir=${AU_DATADIR}\r\n```\r\nThen, in some other window, load the snapshot\r\n```sh\r\n$ ./src/bitcoin-cli -datadir=${AU_DATADIR} loadtxoutset $(pwd)/utxo-788000.dat\r\n```\r\n\r\nYou'll see some log messages about headers retrieval and waiting to see the snapshot in the headers chain. Once you get the full headers chain, you'll spend a decent amount of time (~10min) loading the snapshot, checking it, and flushing it to disk. After all that happens, you should be syncing to tip in pretty short order, and you'll see the occasional `[background validation]` log message go by.\r\n\r\nIn yet another window, you can check out chainstate status with\r\n```sh\r\n$ ./src/bitcoin-cli -datadir=${AU_DATADIR} getchainstates\r\n```\r\nas well as usual favorites like `getblockchaininfo`.",
          "user": {
            "login": "jamesob",
            "id": 73197,
            "node_id": "MDQ6VXNlcjczMTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesob",
            "html_url": "https://github.com/jamesob",
            "followers_url": "https://api.github.com/users/jamesob/followers",
            "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesob/orgs",
            "repos_url": "https://api.github.com/users/jamesob/repos",
            "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jamesob/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27596",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27596.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27596.patch"
          },
          "created_at": "2023-05-08T15:08:28Z",
          "updated_at": "2023-08-01T18:21:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T20:51:14Z",
      "updated_at": "2023-05-09T20:51:14Z",
      "source": {
        "issue": {
          "id": 1556671710,
          "node_id": "PR_kwDOABII585Ig7Js",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26966",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26966/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26966/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26966/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26966",
          "number": 26966,
          "state": "open",
          "state_reason": null,
          "title": "index: blockfilter initial sync speedup, parallelize process",
          "body": "The current procedure for building the block filter index involves processing filters one at a time;\r\nReading blocks, undo data, and previous headers from disk sequentially.\r\n\r\nThis PR introduces a new mechanism that employs concurrent processing. Dividing the\r\nfilters generation workload among a pool of workers that can be configured by the user,\r\nsignificantly increasing the speed of the index construction process.\r\n\r\nThe same concurrent processing model has been applied to the transactions index as well.\r\n\r\nThe newly introduced init flag `-indexworkers=<n>` enables the concurrent sync\r\nbehavior.\r\nWhere \"n\" is the number of worker threads that will be spawned at startup to create ranges\r\nof block filters during the initial sync process. Destroying the workers pool once the\r\ninitial sync completes.\r\nNote: by default, the parallelized sync process is not enabled.\r\n\r\nNow the juicy part:\r\nIn my computer, with the node in debug mode and on IBD, with `-indexworkers=4`, the\r\nblock filter index generation took less than an hour. While, in master, the sync took more than 7 hours.\r\n\r\nImportant Note:\r\nAs the access to the block data on disk is protected by `cs_main`, this new feature runs substantially\r\nfaster when the node is not in IBD.\r\n\r\nFootnote:\r\nThis is part of a larger project :).",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26966",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26966",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26966.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26966.patch"
          },
          "created_at": "2023-01-25T13:36:23Z",
          "updated_at": "2023-07-06T22:10:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T23:18:42Z",
      "updated_at": "2023-05-09T23:18:42Z",
      "source": {
        "issue": {
          "id": 1245716041,
          "node_id": "PR_kwDOABII5844Umrw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25193",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25193/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25193/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25193/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25193",
          "number": 25193,
          "state": "closed",
          "state_reason": null,
          "title": "indexes: Read the locator's top block during init, allow interaction with reindex-chainstate",
          "body": "This makes two improvements to the index init phase:\r\n\r\n**1) Prevent index corruption in case a reorg happens when the index was switched off**:\r\nThis is done by reading in the top block stored in the locator instead of looking for a fork point already in `BaseIndex::Init()`.\r\nBefore, we'd just go back to the fork point by calling `FindForkInGlobalIndex()`, which would have corrupted the coinstatsindex because its saved muhash needs to be reverted step by step by un-applying all blocks in between, which wasn't done before. This is now being done a bit later in  `ThreadSync()`, which has existing logic to call the custom `Rewind()` method when going back along the chain to the forking point (thanks ryanofsky for pointing this out to me!).\r\n\r\n**2) Allow using the `-reindex-chainstate` option without needing to disabling indexes**:\r\nWith `BaseIndex::Init()` not calling `FindForkInGlobalIndex()` anymore, we can allow `reindex-chainstate` with active indexes. `reindex-chainstate` deletes the chain and rebuilds it later in `ThreadImport`, so there is no chain available during `BaseIndex::Init()`, which would lead to problems (see #24789).\r\nBut now we'll only need the chain a bit later in `BaseIndex::ThreadSync`, which will wait for the reindex-chainstate in `ThreadImport` to finish and will continue syncing after that.",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25193",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25193",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25193.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25193.patch"
          },
          "closed_at": "2023-05-17T17:27:55Z",
          "created_at": "2022-05-23T21:27:22Z",
          "updated_at": "2023-06-29T09:30:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T23:32:05Z",
      "updated_at": "2023-05-09T23:32:05Z",
      "source": {
        "issue": {
          "id": 1120958552,
          "node_id": "PR_kwDOABII584x6sdb",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24230",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24230/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24230/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24230/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24230",
          "number": 24230,
          "state": "open",
          "state_reason": null,
          "title": "indexes: Stop using node internal types and locking cs_main, improve sync logic",
          "body": "This PR lets indexing code mostly run outside of the node process. It also improves indexing sync logic, which is moved out of indexing code to a new [`node::SyncChain()`](https://github.com/ryanofsky/bitcoin/blob/8d8cdcb37005030f646ba3c45f7f54f556efb8bf/src/node/chain.h#L24-L39) function.\r\n\r\nAlmost all the commits in this PR are small refactoring changes that move code from `src/index/` to `src/node/`, or replace references to node types like `CBlockIndex`, `CChain`, `CChainState` in index code. There are only two commits affecting indexing sync logic which make complicated or substantive changes:\r\n\r\n- [`da6dc24e3c4f` indexes: Rewrite chain sync logic, remove racy init](https://github.com/bitcoin/bitcoin/pull/24230/commits/da6dc24e3c4fd8f99d869acc085384e8b2f32c8e)\r\n- [`d4a2320a77e1` indexes: Initialize indexes without holding cs_main](https://github.com/bitcoin/bitcoin/pull/24230/commits/d4a2320a77e1a25f89b53dbdda40551959c174c2)\r\n\r\nThe commit messages have more details about these and other changes. Followups to this PR will reuse indexing sync code for wallets (#15719, #11756) and let indexes run in separate processes (#10102)",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 35,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24230",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24230",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24230.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24230.patch"
          },
          "created_at": "2022-02-01T16:56:28Z",
          "updated_at": "2023-08-02T21:09:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1422846165,
      "node_id": "PRR_kwDOABII585UzujV",
      "url": null,
      "actor": null,
      "commit_id": "86752e0cc5bc48f3d4ac1cd07835c37daf078d6a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Reviewed 86752e0cc5bc48f3d4ac1cd07835c37daf078d6a and it mostly looks good, but does have a null pointer deference currently (see comments and suggested fix). I like this PR because it will simplify #24230 and could potentially improve performance. I'm not actually how sure how much it actually would improve performance in practice though, so I'm curious if that's was the original motivation here or if this is related to one of your other changes. I'm also curious about the todo:\r\n\r\n> Pending todo: Fix remaining test by using the block index map instead of the active chain. The active chain is not available at the point where the indexers are started.\r\n\r\nUnsure if this is just referring to the null pointer problem, or to something else",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1422846165",
      "submitted_at": "2023-05-11T16:10:34Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "commented",
      "id": 1544648748,
      "node_id": "IC_kwDOABII585cEXgs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544648748",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T20:40:56Z",
      "updated_at": "2023-05-12T01:32:58Z",
      "author_association": "MEMBER",
      "body": "Thanks for the deep review @ryanofsky!\r\n\r\n> Reviewed [86752e0](https://github.com/bitcoin/bitcoin/commit/86752e0cc5bc48f3d4ac1cd07835c37daf078d6a) and it mostly looks good, but does have a null pointer deference currently (see comments and suggested fix). I like this PR because it will simplify #24230 and could potentially improve performance. I'm not actually how sure how much it actually would improve performance in practice though, so I'm curious if that's was the original motivation here or if this is related to one of your other changes.\r\n\r\nYeah, the motivation came from a mix of thoughts actually.\r\n\r\nI was reviewing #24230 and wasn't completely sold by the `hasDataFromTipDown()` call inside the `attachChain` function. It seems odd to call to a chain data verification function in an event registering method.\r\nThen went deeper over the function, realized about the work duplication, and took that argument to simplify #24230 a bit.\r\n\r\nWe could also move the entire `hasDataFromTipDown` from the interface to somewhere else in this way. So there is no `CBlockIndex` dependency in the interface neither here nor in the #24230 intermediate commits.\r\n\r\nPlus, It plays well with #25193.\r\n\r\nAnd.. I'm also thinking that after #24230 and the parallel sync work (#26966), we could have one initial sync thread with a workers pool for all the indexers instead of the current per indexer sync thread.\r\nWhich should speedup the sync process quite a lot. We are currently reading the entire chain block by block from disk on every index thread. So instead, we could read blocks just once, then dispatch events to the indexers. Making indexers purely listeners with no associated thread.\r\n\r\n>  I'm also curious about the todo:\r\n> \r\n> > Pending todo: Fix remaining test by using the block index map instead of the active chain. The active chain is not available at the point where the indexers are started.\r\n> \r\n> Unsure if this is just referring to the null pointer problem, or to something else\r\n\r\nYeah ok. That comment is inaccurate and I forgot to update it.\r\n\r\nI initially thought that the issue was due an initialization ordering, that we weren’t having the active chain activated at that point (thought that was done only post load-blk thread completion).\r\nSo I implemented 4738a1d7d46a9dd1f12dfeb047b142ab33c0fa16 and 837acfdbaca430cc5e29b7cdbf61380c33ed1aa2 instead of the current version. Which is better than what we have here currently, but it’s not the solution for the null ptr deference.\r\n\r\nThe issue is that empty indexers don’t set the best block to the genesis `CBlockIndex`, they just leave it null. So, the index summary returns a valid height=0 with an empty block hash.. which crashes on the block hash assertion.\r\n\r\nSo, the fix is easy. But.. I haven’t done it because have found another possible index sync \"fatal error\" in master and wanted to fix it prior continue moving forward here.\r\n\r\nEssentially, we are not checking whether the node has the post fork point blocks in disk prior starting the index:\r\n\r\nThe pruning violation checks whether we have blocks from the fork point up to the active chain tip. But it does not check if the node has blocks from the fork point up to the fork tip.. which are required by coinstatsindex to reverse its state during the reorg..\r\n\r\nE.g.\r\n\r\nActive chain\r\nA -> B -> C -> D -> E\r\n\r\nIndex chain\r\nA -> B -> C -> G -> F -> H\r\n\r\nThe “failure error” will happen when G or F are not in disk or were pruned.\r\n\r\nSo, if this happens, it causes a “fatal error“ during the coin stats index reorg process due the impossibility to read the block from disk.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1544648748",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "mentioned",
      "id": 9226618132,
      "node_id": "MEE_lADOABII585ldbL0zwAAAAIl8wUU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9226618132",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T20:40:57Z"
    },
    {
      "event": "subscribed",
      "id": 9226618148,
      "node_id": "SE_lADOABII585ldbL0zwAAAAIl8wUk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9226618148",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T20:40:57Z"
    },
    {
      "event": "commented",
      "id": 1548248095,
      "node_id": "IC_kwDOABII585cSGQf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1548248095",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-15T17:17:41Z",
      "updated_at": "2023-05-15T17:17:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1544648748\r\n\r\n> We could also move the entire `hasDataFromTipDown` from the interface to somewhere else in this way. So there is no `CBlockIndex` dependency in the interface neither here nor in the #24230 intermediate commits.\r\n\r\nYes I don't think it makes sense to expose that method as part of the `Chain` interface, and even if it did make sense, it wouldn't make sense to put the implementation in the `ChainImpl` class, because the class is mostly meant to hold glue code, not complicated functions. That's the reason for the suggestion to make it a standalone function `bool ChainDataFromTipDown(ChainstateManager& chainman, const CBlockIndex& start_block)` in https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1191396717\r\n\r\n> And.. I'm also thinking that after #24230 and the parallel sync work (#26966), we could have one initial sync thread with a workers pool for all the indexers instead of the current per indexer sync thread. Which should speedup the sync process quite a lot. We are currently reading the entire chain block by block from disk on every index thread. So instead, we could read blocks just once, then dispatch events to the indexers. Making indexers purely listeners with no associated thread.\r\n\r\nYes letting indexes just receive notifications to get in sync and not have to implement sync logic is the goal of #24230. And the threading issue should be orthogonal after that PR. Indexes (and wallets) could read and process blocks in single thread, or read blocks in a single thread and process them in parallel, or read and process blocks in parallel like happens currently, or use some other form of scheduling. But regardless of what ordering is used, the interface an individual index uses to get in sync should not have to change, and indexes shouldn't have to create sync threads or deal with race conditions between the notification threads and sync threads.\r\n\r\n> I initially thought that the issue was due an initialization ordering, that we weren’t having the active chain activated at that point (thought that was done only post load-blk thread completion).\r\n\r\nOh, I see. That's also what I concluded from seeing the failure, but I guess it is not the complete picture.\r\n\r\n> The issue is that empty indexers don’t set the best block to the genesis `CBlockIndex`, they just leave it null. So, the index summary returns a valid height=0 with an empty block hash.. which crashes on the block hash assertion.\r\n> \r\n> So, the fix is easy.\r\n\r\nI didn't know about this. I guess the fix would be to treat the genesis as the fork point in this case. And to consider the index already synced if there is nochainstate and the genesis pointer is null.\r\n\r\n> But.. I haven’t done it because have found another possible index sync \"fatal error\" in master and wanted to fix it prior continue moving forward here.\r\n\r\nIt seems like it would be a good thing to fix this. But this sounds like something that was already broken, so I'm not sure if the fix has to be bundled here, necessarily. I think the \"has data from tip down\" check is a useful check that can run early and warn if any block data is missing. But if the check isn't perfect and doesn't catch missing block, it shouldn't be the worst thing because the missing blocks will just be reported later rather than earlier.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1548248095",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "reviewed",
      "id": 1429474726,
      "node_id": "PRR_kwDOABII585VNA2m",
      "url": null,
      "actor": null,
      "commit_id": "86752e0cc5bc48f3d4ac1cd07835c37daf078d6a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I can't see how the current approach could work, even if the problems discussed above were solved:\r\n\r\nWith this PR, the newly introduced function `update_indexes_start_block` is executed right after creating the index, but before executing `Start()`. But the index is basically just an empty object at this point, because its constructor doesn't interact with the database stored on disk at all. So calling `GetSummary()` can't possibly give any meaningful data about the best block at this stage. The load from disk is being done in `Init()`/`CustomInit()`, but that happens only later within `Start()`.\r\n\r\nI think the necessary order would be to \r\n1) create all indexes and read their best block / other data from disk\r\n2) determine the oldest block for all indexes\r\n3) Do the pruning check once",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1429474726",
      "submitted_at": "2023-05-16T21:37:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9262695781,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAIoGYVl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9262695781",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T21:40:07Z"
    },
    {
      "event": "commented",
      "id": 1550419574,
      "node_id": "IC_kwDOABII585caYZ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550419574",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T22:09:21Z",
      "updated_at": "2023-05-16T22:09:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I can't see how the current approach could work, even if the problems discussed above were solved:\r\n\r\nGood catch noticing Init() was not called! It doesn't seem like it should be that hard to fix, though. The PR was already moving most of the code out of Init(), anyway, so now a little more code needs to move. I didn't look very deeply but I would probably make Init() a public method and call it after constructing the index. Also stop calling Init() from Start() and move the RegisterValidationInterface() from Start() to Init().",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1550419574",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "commented",
      "id": 1550420156,
      "node_id": "IC_kwDOABII585caYi8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550420156",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T22:10:01Z",
      "updated_at": "2023-05-16T22:33:35Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @mzumsande.\r\n\r\nFunny that I pushed a small update at the same time that you were commenting.\r\n\r\nHave few more changes on the pipeline that will be pushing soon. e.g. the `hasDataFromTipDown` entire function can be written in two lines.. just need to re-purpose the `GetFirstStoredBlock` function a bit :).\r\n\r\n> I think the necessary order would be to\r\n>\r\n> create all indexes and read their best block / other data from disk\r\ndetermine the oldest block for all indexes\r\nDo the pruning check once\r\n\r\nYeah.. I was thinking on the other issue and forgot that `Init()` isn't being called in the constructor.. :face_palm:. Will re-order it, Thanks!\r\n\r\n\r\n\r\n\r\n\r\n",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1550420156",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "mentioned",
      "id": 9262861781,
      "node_id": "MEE_lADOABII585ldbL0zwAAAAIoHA3V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9262861781",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T22:10:02Z"
    },
    {
      "event": "subscribed",
      "id": 9262861797,
      "node_id": "SE_lADOABII585ldbL0zwAAAAIoHA3l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9262861797",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T22:10:02Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9264536966,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAIoNZ2G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9264536966",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T04:35:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9264568761,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAIoNhm5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9264568761",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T04:42:37Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9264575156,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAIoNjK0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9264575156",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T04:44:05Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T07:43:28Z",
      "updated_at": "2023-05-17T07:43:28Z",
      "source": {
        "issue": {
          "id": 1313204802,
          "node_id": "PR_kwDOABII58472hm-",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25665",
          "number": 25665,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Add util::Result failure values, multiple error and warning messages",
          "body": "Add `util::Result` support for returning more error information and make use of it in [LoadChainstate method](https://github.com/bitcoin/bitcoin/pull/25665/commits/584e3fa4ea8ca15b3a8b46e023f218c5e0ed73b0) as an initial application. Followup PR [#25722](https://github.com/bitcoin/bitcoin/pull/25722) uses it more broadly to return errors and warnings from wallet loading functions as well.\r\n\r\nThis change adds two major features to the result class:\r\n\r\n- For better error handling, adds the ability to return a value on failure, not just a value on success. This is a key missing feature that makes the result class not useful for functions like `LoadChainstate()` which produce different errors that need to be handled differently [^1].\r\n\r\n[^1]: Ability to return error values was actually present in the original implementation of [#25218](https://github.com/bitcoin/bitcoin/pull/25218), but unfortunately removed in later iterations.\r\n\r\n- For better error reporting, adds the ability to return warning messages and multiple errors, not just a single error string. This provides a way for functions to report errors and warnings in a standard way, and simplifies interfaces:\r\n\r\n    ```diff\r\n    -virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, bilingual_str& error, std::vector<bilingual_str>& warnings) = 0;\r\n    +virtual util::Result<std::unique_ptr<Wallet>> loadWallet(const std::string& name) = 0;\r\n    ```\r\n\r\n    ```diff\r\n    -std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error);\r\n    +util::Result<std::unique_ptr<WalletDatabase>, DatabaseError> MakeDatabase(const fs::path& path, const DatabaseOptions& options);\r\n   ```\r\n\r\nThis change also makes some more minor improvements:\r\n\r\n- Smaller type size. `util::Result<int>` is 16 bytes, and `util::Result<void>` is 8 bytes. Previously both were 72 bytes.\r\n\r\n- Broader type compatibility. Supports noncopyable and nonmovable success and error types.\r\n\r\n### Alternatives & design notes\r\n\r\nThe main goal for the `util::Result` class is to provide a standard way for functions to report error and warnings strings. The interface tries to make it easy to provide detailed error feedback to end users, without cluttering code or making it harder to return other result information. There have been multiple iterations of the design using different internal representations and providing different capabilities:\r\n\r\n|   | Representation (approximate)                   | Notes |\r\n|---|------------------------------------------------|-------|\r\n| _(1)_ | `tuple<T,optional<bilingual_str>>`        | Original #25218 implementation in da98fd2efc1a6b9c6e876cf3e227a8c2e9a10827. Good capabilities, but larger type size. Supports error standardized error reporting and customized error handling with failure values. |\r\n| _(2)_ | `variant<T,bilingual_str>`                | Final #25218 implementation in 7a45c33d1f8a758850cf8e7bd6ad508939ba5c0d. No support for returning failure values so not useful in many cases.\r\n| _(3)_ | `variant<monostate,T,F>`                 | Pending #25601 implementation that allows choosing whether to use standardized error reporting or return custom failure values, but doesn't support having both at the same time, like approaches _(1)_, _(4)_, _(5)_, _(6)_ do. |\r\n | _(4)_ | `tuple<variant<T,F>,bilingual_str>`      | Original #25608 implementation in c29d3008de9314dd463ed08e8bff39fe55324498. Basically the same as _(1)_ except it uses separate success and failure types instead of the same type. Using separate success and failure types makes the result class a little less flexible but can help avoid some ambiguity and inconsistent result states. |\r\n| _(5)_ | `tuple<T,optional<bilingual_str>>`        | Final #25608 implementation in dd91f294206ac87b213d23bb76656a0a5f0f4781. Essentially the same as original implementation _(1)_ except has some usability improvements. |\r\n| _(6)_ | `tuple<T,unique_ptr<tuple<F,bilingual_str>>` | Pending #25665 implementation (this PR). Supports returning failure values, uses separate success and failure types to avoid ambiguity, uses `unique_ptr` to reduce result type size, and avoids heap allocation in the happy path. |\r\n\r\n### Prior discussions & history\r\n\r\n- _furszy_ introduced a `BResult` class providing a standard error reporting mechanism in [#25218](https://github.com/bitcoin/bitcoin/pull/25218). It was renamed to `util::Result` in [#25721](https://github.com/bitcoin/bitcoin/pull/25721) but kept the same representation and capabilities.\r\n\r\n- _MarcoFalke_ suggested using `BResult` for the `LoadChainstate` function in [#25308 (comment)](https://github.com/bitcoin/bitcoin/pull/25308#issuecomment-1181674645). Inability to use `BResult` there due to lack of support for failure values led to initial work on [#25608](https://github.com/bitcoin/bitcoin/pull/25608).\r\n\r\n- _w0xlt_ wrote a `StructuredResult` class in [#25308](https://github.com/bitcoin/bitcoin/pull/25601) adding the ability to return failure values but sacrificing standard error reporting, which led to more work on [#25608](https://github.com/bitcoin/bitcoin/pull/25608).\r\n\r\n- _martinus_ suggested a space optimization in [#25608 (comment)](https://github.com/bitcoin/bitcoin/pull/25608#discussion_r921049409) that also made it easier to support distinct failure & success types, leading to [#25665](https://github.com/bitcoin/bitcoin/pull/25665) as a replacement for [#25608](https://github.com/bitcoin/bitcoin/pull/25608).",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25665",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25665.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25665.patch"
          },
          "created_at": "2022-07-21T12:46:09Z",
          "updated_at": "2023-08-02T23:52:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T07:57:10Z",
      "updated_at": "2023-05-17T07:57:10Z",
      "source": {
        "issue": {
          "id": 1264270329,
          "node_id": "PR_kwDOABII5845S2_2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25302",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25302/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25302/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25302/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25302",
          "number": 25302,
          "state": "closed",
          "state_reason": null,
          "title": "build: Check usages of #if defined(...)",
          "body": "I tried to go over #16419.\r\n\r\nBased on #16344 I interpreted that the AC_DEFINE like the following: \r\n```\r\nAC_DEFINE(USE_EXTERNAL_ASM, 1, [Define this symbol if an external (non-inline) assembly implementation is used])\r\n```\r\nResults in value defines which also #16547 suggests.\r\n\r\n\r\nIf I've missunderstood anything or if there is more `#if defined` or `#ifdef` that should be `#if` then please let me know and I will update the pull request.",
          "user": {
            "login": "brokenprogrammer",
            "id": 16289144,
            "node_id": "MDQ6VXNlcjE2Mjg5MTQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/16289144?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brokenprogrammer",
            "html_url": "https://github.com/brokenprogrammer",
            "followers_url": "https://api.github.com/users/brokenprogrammer/followers",
            "following_url": "https://api.github.com/users/brokenprogrammer/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brokenprogrammer/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brokenprogrammer/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brokenprogrammer/subscriptions",
            "organizations_url": "https://api.github.com/users/brokenprogrammer/orgs",
            "repos_url": "https://api.github.com/users/brokenprogrammer/repos",
            "events_url": "https://api.github.com/users/brokenprogrammer/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brokenprogrammer/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25302",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25302",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25302.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25302.patch"
          },
          "closed_at": "2023-05-18T11:06:56Z",
          "created_at": "2022-06-08T06:39:23Z",
          "updated_at": "2023-05-18T11:06:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T09:11:55Z",
      "updated_at": "2023-05-17T09:11:55Z",
      "source": {
        "issue": {
          "id": 684894935,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDcyNzA2NjM0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19792",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19792/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19792/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19792/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19792",
          "number": 19792,
          "state": "open",
          "state_reason": null,
          "title": "rpc: Add dumpcoinstats",
          "body": "Requires #19521 (this PR only adds the last commit).\r\n\r\nThe rpc `dumpcoinstats` dumps the content of the coinstats index into a CSV file for auditing purposes.",
          "user": {
            "login": "fjahr",
            "id": 1322187,
            "node_id": "MDQ6VXNlcjEzMjIxODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjahr",
            "html_url": "https://github.com/fjahr",
            "followers_url": "https://api.github.com/users/fjahr/followers",
            "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
            "organizations_url": "https://api.github.com/users/fjahr/orgs",
            "repos_url": "https://api.github.com/users/fjahr/repos",
            "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fjahr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19792",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19792",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19792.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19792.patch"
          },
          "created_at": "2020-08-24T19:01:38Z",
          "updated_at": "2023-05-17T19:26:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1551406710,
      "node_id": "IC_kwDOABII585ceJZ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551406710",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T13:31:57Z",
      "updated_at": "2023-05-17T13:35:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Looking at current version of the PR 6dfec1b5fbb0f8e95a6134ea8b27e9d6c285d171 it seems to have changed a lot, and the other thing it is doing now is delaying startup of indexes until blocks are loaded, so there is no longer a conflict with `reindex-chainstate`. So it is basically reimplementing #25193 in a different way that doesn't require a `sleep_for(std::chrono::milliseconds(500))` waitloop. I think this approach is cleaner, but also that #25193 is a smaller more targeted change with a test, so I would probably prefer to see #25193 merged first and with this cleanup and rewrite merged later.\r\n\r\n~#25193 also has two ACKs, so I can re-ack and merge it soon.~ EDIT: Never mind, just noticed it needs rebase currently\r\n\r\nOn this PR, I like the approach and thinks the code looks pretty good overall. The only thing I don't like is all the complexity added to AppInitMain(). I think that complexity could go away if you got rid of the `std::set<BaseIndex*> indexers` local variable there and added a `NodeContext` `std::vector<BaseIndex*> indexes` member instead. Then there would be no need for the `func_start_indexes` lambda. The lambda could be replaced with a regular `StartIndexes` function instead.\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1551406710",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "commented",
      "id": 1551443566,
      "node_id": "IC_kwDOABII585ceSZu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551443566",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T13:54:24Z",
      "updated_at": "2023-05-17T14:00:11Z",
      "author_association": "MEMBER",
      "body": "Was about to send the updates comment hehe. I was too tired last night to write it. Thanks for the review ryanofsky!\r\n\r\nUpdates list:\r\n\r\n- Decoupled index `Init()` from `Start()`. So indexers can be initialized without spawning the sync thread. \r\n\r\n- Simplified the pruning violation code by re-purposing the `GetFirstStoredBlock` function. Now called `IsBlockDataAvailable`.\r\n\r\n- Fixed a small race, where we set the index `m_synced` flag (which enables `BlockConnected` events) before calling to the child class init function. So, for example, the block filter index could theoretically process a block before initializing the `next filter position` field and end up overwriting the first stored filter.\r\n\r\n-------\r\n\r\nFeedback:\r\n\r\n> Looking at current version of the PR [6dfec1b](https://github.com/bitcoin/bitcoin/commit/6dfec1b5fbb0f8e95a6134ea8b27e9d6c285d171) it seems to have changed a lot, and the other thing it is doing now is delaying startup of indexes until blocks are loaded, so there is no longer a conflict with `reindex-chainstate`. So it is basically reimplementing #25193 in a different way that doesn't require a `sleep_for(std::chrono::milliseconds(500))` waitloop. I think this approach is cleaner, but also that #25193 is a smaller more targeted change with a test, so I would probably prefer to see #25193 merged first and with this cleanup and rewrite merged later.\r\n\r\nYeah, I updated the PR description last night stating that this is now built on top of #25193 (but my slightly modified version of it https://github.com/bitcoin/bitcoin/pull/25193#pullrequestreview-1375021974).\r\n\r\n@mzumsande said that he was going to give them a look and probably take them. So, all good if them get squashed there or here. Either way is fine for me. Happy to re-review #25193 whenever is ready to go again.\r\n\r\n\r\n \r\n> On this PR, I like the approach and thinks the code looks pretty good overall. The only thing I don't like is all the complexity added to AppInitMain(). I think that complexity could go away if you got rid of the `std::set<BaseIndex*> indexers` local variable there and added a `NodeContext` `std::vector<BaseIndex*> indexes` member instead. Then there would be no need for the `func_start_indexes` lambda. The lambda could be replaced with a regular `StartIndexes` function instead.\r\n\r\nSounds great. Was also thinking about moving the lambda to a standalone function but wasn't finding the right place and didn't want to create a new file only for this.\r\n\r\n",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1551443566",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "mentioned",
      "id": 9269782097,
      "node_id": "MEE_lADOABII585ldbL0zwAAAAIohaZR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9269782097",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T13:54:25Z"
    },
    {
      "event": "subscribed",
      "id": 9269782117,
      "node_id": "SE_lADOABII585ldbL0zwAAAAIohaZl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9269782117",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T13:54:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9270730987,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAIolCDr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9270730987",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T15:12:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9271212343,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAIom3k3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9271212343",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T15:49:29Z"
    },
    {
      "event": "labeled",
      "id": 9272894992,
      "node_id": "LE_lADOABII585ldbL0zwAAAAIotSYQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9272894992",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T19:11:44Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9272927968,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAIotabg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9272927968",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T19:16:05Z"
    },
    {
      "event": "commented",
      "id": 1551934377,
      "node_id": "IC_kwDOABII585cgKOp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551934377",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T19:23:59Z",
      "updated_at": "2023-05-18T14:23:31Z",
      "author_association": "MEMBER",
      "body": "Rebased post #25193 merge. Conflicts solved.\r\n\r\nOnly change from the last push is on the first commit ca30419, where the index threads active wait and the global flag are replaced by a post-poned indexers start call.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1551934377",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "renamed",
      "id": 9273201717,
      "node_id": "RTE_lADOABII585ldbL0zwAAAAIoudQ1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9273201717",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T19:55:26Z",
      "rename": {
        "from": "init: verify blocks data existence only once for all the indexers",
        "to": "index: improve initialization and pruning violation checks"
      }
    },
    {
      "event": "renamed",
      "id": 9273208272,
      "node_id": "RTE_lADOABII585ldbL0zwAAAAIoue3Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9273208272",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T19:56:24Z",
      "rename": {
        "from": "index: improve initialization and pruning violation checks",
        "to": "index: improve initialization and pruning violation check"
      }
    },
    {
      "event": "unlabeled",
      "id": 9273851798,
      "node_id": "UNLE_lADOABII585ldbL0zwAAAAIow7-W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9273851798",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T21:29:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T00:59:23Z",
      "updated_at": "2023-05-18T00:59:23Z",
      "source": {
        "issue": {
          "id": 1707158131,
          "node_id": "PR_kwDOABII585QXPe6",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27636",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27636/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27636/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27636/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27636",
          "number": 27636,
          "state": "closed",
          "state_reason": null,
          "title": "kernel: Remove util/system from kernel library, interface_ui from validation.",
          "body": "This pull request is part of the `libbitcoinkernel` project https://github.com/bitcoin/bitcoin/issues/27587 https://github.com/bitcoin/bitcoin/projects/18 and more specifically its \"Step 2: Decouple most non-consensus code from libbitcoinkernel\".\r\n\r\n---\r\n\r\nIt removes the kernel library's dependency on `util/system` and `interface_ui`. `util/system` contains networking and shell-related code that should not be part of the kernel library. The following pull requests prepared `util/system` for this final step: https://github.com/bitcoin/bitcoin/pull/27419 https://github.com/bitcoin/bitcoin/pull/27254 https://github.com/bitcoin/bitcoin/pull/27238.\r\n\r\n`interface_ui` defines functions for a more general node interface and has a dependency on `boost/signals2`. After applying the patches from this pull request, the kernel's reliance on boost is down to `boost::multiindex`.\r\n\r\nThe approach implemented here introduces some indirection, which makes the code a bit harder to read. Any suggestions for improving or reworking this pull request to make it more concise, or even reworking it into a more proper interface, are appreciated.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignee": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "ryanofsky",
              "id": 7133040,
              "node_id": "MDQ6VXNlcjcxMzMwNDA=",
              "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/ryanofsky",
              "html_url": "https://github.com/ryanofsky",
              "followers_url": "https://api.github.com/users/ryanofsky/followers",
              "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
              "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
              "repos_url": "https://api.github.com/users/ryanofsky/repos",
              "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27636",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27636",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27636.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27636.patch"
          },
          "closed_at": "2023-05-30T13:57:34Z",
          "created_at": "2023-05-12T08:03:05Z",
          "updated_at": "2023-05-30T13:57:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9280345628,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAIpJtYc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9280345628",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T14:16:19Z"
    },
    {
      "event": "commented",
      "id": 1553369947,
      "node_id": "IC_kwDOABII585clotb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553369947",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T17:17:02Z",
      "updated_at": "2023-05-18T17:17:02Z",
      "author_association": "MEMBER",
      "body": "CI failure is not related.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553369947",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "commented",
      "id": 1553376251,
      "node_id": "IC_kwDOABII585clqP7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553376251",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T17:22:48Z",
      "updated_at": "2023-05-18T17:23:03Z",
      "author_association": "MEMBER",
      "body": "See https://github.com/bitcoin/bitcoin/issues/27492#issuecomment-1527772394 about the CI failure",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553376251",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "commented",
      "id": 1553379017,
      "node_id": "IC_kwDOABII585clq7J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553379017",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T17:25:23Z",
      "updated_at": "2023-05-18T17:25:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27607#issue-1702212340\r\n\r\n>* Fixed a small race, where we set the index `m_synced` flag (which enables `BlockConnected` events) before calling to the child class init function. So, for example, the block filter index could theoretically process a block before initializing the next filter position field and end up overwriting the first stored filter.\r\n\r\nCan you clarify this? I don't see m_synced getting set to true before the index is synced, and don't understand the block filter index example.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553379017",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "commented",
      "id": 1553400917,
      "node_id": "IC_kwDOABII585clwRV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553400917",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T17:42:22Z",
      "updated_at": "2023-05-18T17:44:09Z",
      "author_association": "MEMBER",
      "body": "> re: [#27607 (comment)](https://github.com/bitcoin/bitcoin/pull/27607#issue-1702212340)\r\n> \r\n> > * Fixed a small race, where we set the index `m_synced` flag (which enables `BlockConnected` events) before calling to the child class init function. So, for example, the block filter index could theoretically process a block before initializing the next filter position field and end up overwriting the first stored filter.\r\n> \r\n> Can you clarify this? I don't see m_synced getting set to true before the index is synced, and don't understand the block filter index example.\r\n\r\nSure. The [BaseIndex::Start()](https://github.com/bitcoin/bitcoin/blob/6cc136bbd36f859a16e469bb5c016d06c19bcd50/src/index/base.cpp#L401) flow in master is the following one:\r\n\r\n1) Calls `RegisterValidationInterface()` --> which registers to the validation interface.\r\n2) Calls [BaseIndex::Init()](https://github.com/bitcoin/bitcoin/blob/6cc136bbd36f859a16e469bb5c016d06c19bcd50/src/index/base.cpp#L409) --> which, prior the pruning check, sets [m_synced](https://github.com/bitcoin/bitcoin/blob/6cc136bbd36f859a16e469bb5c016d06c19bcd50/src/index/base.cpp#L109):\r\n    `m_synced = m_best_block_index.load() == active_chain.Tip()`\r\n3) Calls `CustomInit()`.  --> which, for the block index filter, initializes the [m_next_filter_pos](https://github.com/bitcoin/bitcoin/blob/6cc136bbd36f859a16e469bb5c016d06c19bcd50/src/index/blockfilterindex.cpp#L114) field with the db information.\r\n\r\nSo, if the block filter index is synced, and the index receives a `BlockConnected` event after finish point (2) and before point (3) then `m_next_filter_pos` will not be initialized, so `BlockFIlterIndex::CustomAppend()` will use a null `m_next_filter_pos`. ",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553400917",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "commented",
      "id": 1553414023,
      "node_id": "IC_kwDOABII585clzeH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553414023",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T17:54:19Z",
      "updated_at": "2023-05-18T18:02:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks! So the problem is that `m_synced` is set to true before `CustomInit` code runs, instead of after. It looks like this bug was introduced in bef4e405f3de2718dfee279a9abff4daf016da26 from #25494\r\n\r\nEDIT: Added a note in the other PR https://github.com/bitcoin/bitcoin/pull/25494#discussion_r1198123860",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553414023",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T18:01:16Z",
      "updated_at": "2023-05-18T18:01:16Z",
      "source": {
        "issue": {
          "id": 1287832272,
          "node_id": "PR_kwDOABII5846hZTb",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25494",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25494/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25494/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25494/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25494",
          "number": 25494,
          "state": "closed",
          "state_reason": null,
          "title": "indexes: Stop using node internal types",
          "body": "Start transitioning index code away from using internal node types like `CBlockIndex` and `CChain` so index code is less coupled to node code and index code will later be able to stop locking cs_main and sync without having to deal with validationinterface race conditions, and so new indexes are easier to write and can run as plugins or separate processes.\r\n\r\nThis PR contains the first 7 commits from https://github.com/bitcoin/bitcoin/pull/24230#issuecomment-1165625977 which have been split off for easier review. Previous review comments can be found in #24230",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25494",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25494",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25494.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25494.patch"
          },
          "closed_at": "2022-07-19T20:43:39Z",
          "created_at": "2022-06-28T20:14:51Z",
          "updated_at": "2023-05-18T18:01:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1553427942,
      "node_id": "IC_kwDOABII585cl23m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553427942",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T18:05:30Z",
      "updated_at": "2023-05-18T18:05:30Z",
      "author_association": "MEMBER",
      "body": "> Thanks! So the problem is that `m_synced` is set to true before `CustomInit` code runs, instead of after. It looks like this bug was introduced in [bef4e40](https://github.com/bitcoin/bitcoin/commit/bef4e405f3de2718dfee279a9abff4daf016da26) from #25494\r\n\r\nYeah!, that is more or less what I wrote in the description \"Fixed a small race, where we set the index `m_synced` flag (which enables `BlockConnected` events) before calling to the child class init function\".\r\n\r\nHappy to write it differently if it is not good enough. Maybe should change \"child class init function\" for \"CustomInit\"?. (in the commit description it's explained with more details anyway)",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553427942",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "commented",
      "id": 1553447313,
      "node_id": "IC_kwDOABII585cl7mR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553447313",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T18:23:13Z",
      "updated_at": "2023-05-18T18:23:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Happy to write it differently if it is not good enough. Maybe should change \"child class init function\" for \"CustomInit\"?. (in the commit description it's explained with more details anyway)\r\n\r\nYes if CustomInit was mentioned I probably would have understood better. I would say this PR fixes a race condition where an index's  `CustomAppend` method might be called before its `CustomInit` method, causing the index to try to update itself before it is initialized. And that the PR fixes the problem by always setting `m_synced` to true until after `CustomInit` is called, instead of before. And that the race was introduced in bef4e405f3de2718dfee279a9abff4daf016da26 from #25494",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553447313",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "commented",
      "id": 1553480215,
      "node_id": "IC_kwDOABII585cmDoX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553480215",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T18:43:13Z",
      "updated_at": "2023-05-18T18:43:13Z",
      "author_association": "MEMBER",
      "body": "sounds good. Description updated, thanks.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553480215",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "reviewed",
      "id": 1433254608,
      "node_id": "PRR_kwDOABII585VbbrQ",
      "url": null,
      "actor": null,
      "commit_id": "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Reviewed dd9bc393ebd4ba915ca94991390b6e98d29dcfaf, which looks good overall, but I had questions about few things",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1433254608",
      "submitted_at": "2023-05-18T19:16:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "reviewed",
      "id": 1433308364,
      "node_id": "PRR_kwDOABII585VbozM",
      "url": null,
      "actor": null,
      "commit_id": "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1433308364",
      "submitted_at": "2023-05-18T19:16:43Z",
      "state": "DISMISSED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "review_dismissed",
      "id": 9283031643,
      "node_id": "RDE_lADOABII585ldbL0zwAAAAIpT9Jb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9283031643",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T19:17:47Z",
      "dismissed_review": {
        "state": "APPROVED",
        "review_id": 1433308364,
        "dismissal_message": "Was just trying to undo request changes, not approve the PR",
        "dismissal_commit_id": null
      }
    },
    {
      "event": "labeled",
      "id": 9286741685,
      "node_id": "LE_lADOABII585ldbL0zwAAAAIpiG61",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9286741685",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-19T07:50:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9287397238,
      "node_id": "UNLE_lADOABII585ldbL0zwAAAAIpkm92",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9287397238",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-19T09:10:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1434924256,
      "node_id": "PRR_kwDOABII585VhzTg",
      "url": null,
      "actor": null,
      "commit_id": "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1434924256",
      "submitted_at": "2023-05-19T21:36:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-20T14:29:51Z",
      "updated_at": "2023-05-20T14:29:51Z",
      "source": {
        "issue": {
          "id": 1696736253,
          "node_id": "PR_kwDOABII585P0RGI",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27576",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27576/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27576/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27576/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27576",
          "number": 27576,
          "state": "closed",
          "state_reason": null,
          "title": "kernel: Remove args, settings, chainparams, chainparamsbase from kernel library",
          "body": "This pull request is part of the `libbitcoinkernel` project https://github.com/bitcoin/bitcoin/issues/27587 https://github.com/bitcoin/bitcoin/projects/18 and more specifically its \"Step 2: Decouple most non-consensus code from libbitcoinkernel\".\r\n\r\n---\r\n\r\nThis completes the removal of the node's chainparams, chainparamsbase, args and settings files and their respective classes from the kernel library. This is the last pull request in a long series working towards decoupling the `ArgsManager` and the `gArgs` global from kernel code. These prior pull requests are: https://github.com/bitcoin/bitcoin/pull/26177 https://github.com/bitcoin/bitcoin/pull/27125 https://github.com/bitcoin/bitcoin/pull/25527 https://github.com/bitcoin/bitcoin/pull/25487 https://github.com/bitcoin/bitcoin/pull/25290\r\n\r\n",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27576",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27576",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27576.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27576.patch"
          },
          "closed_at": "2023-06-09T18:59:02Z",
          "created_at": "2023-05-04T21:36:34Z",
          "updated_at": "2023-06-13T13:22:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-21T18:17:58Z",
      "updated_at": "2023-05-21T18:17:58Z",
      "source": {
        "issue": {
          "id": 1718465932,
          "node_id": "PR_kwDOABII585Q9EjQ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27711",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27711/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27711/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27711/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27711",
          "number": 27711,
          "state": "closed",
          "state_reason": null,
          "title": "kernel:  Remove shutdown globals from kernel library",
          "body": "This pull request is part of the `libbitcoinkernel` project https://github.com/bitcoin/bitcoin/issues/27587 https://github.com/orgs/bitcoin/projects/3 and more specifically its \"Step 2: Decouple most non-consensus code from libbitcoinkernel\".\r\n\r\n---\r\n\r\nThis removes the shutdown files from the kernel library. As a standalone library the libbitcoinkernel should not have to rely on code that accesses shutdown state through a global. Instead, replace it with an interrupt class that is owned by the kernel context. Additionally this moves the remaining usages of the `uiInterface` out of the kernel code. The process of moving the `uiInterface` out of the kernel was started in https://github.com/bitcoin/bitcoin/pull/27636.\r\n\r\nThe approach taken here uses the notification interface to externalize the existing shutdown code from the kernel library. The `SignalInterrupt` kernel context member is passed by reference to the `ChainstateManager` to allow for the termination of long-running kernel functions and sending interrupt signals.\r\n",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27711",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27711",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27711.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27711.patch"
          },
          "closed_at": "2023-07-08T10:45:07Z",
          "created_at": "2023-05-21T11:20:12Z",
          "updated_at": "2023-07-08T10:45:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9304313407,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAIqlI4_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9304313407",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-22T15:42:49Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-22T16:08:55Z",
      "updated_at": "2023-05-22T16:08:55Z",
      "source": {
        "issue": {
          "id": 1720000759,
          "node_id": "PR_kwDOABII585RCLoW",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27720",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27720/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27720/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27720/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27720",
          "number": 27720,
          "state": "closed",
          "state_reason": null,
          "title": "index: prevent race by calling 'CustomInit' prior setting 'synced' flag",
          "body": "Decoupled from #27607.\r\n\r\nFixed a potential race condition in master (not possible so far) that could become an actual issue soon.\r\nWhere the index's  `CustomAppend` method could be called (from `BlockConnected`) before its\r\n`CustomInit` method, causing the index to try to update itself before it is initialized.\r\n\r\nThis could happen because we set the index `m_synced` flag (which enables `BlockConnected` events)\r\nbefore calling to the child class init function (`CustomInit`). So, for example, the block filter index could\r\nprocess a block before initialize the next filter position field and end up overwriting the first stored filter.\r\n \r\nThis race was introduced in https://github.com/bitcoin/bitcoin/commit/bef4e405f3de2718dfee279a9abff4daf016da26 from https://github.com/bitcoin/bitcoin/pull/25494.\r\n",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignee": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "ryanofsky",
              "id": 7133040,
              "node_id": "MDQ6VXNlcjcxMzMwNDA=",
              "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/ryanofsky",
              "html_url": "https://github.com/ryanofsky",
              "followers_url": "https://api.github.com/users/ryanofsky/followers",
              "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
              "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
              "repos_url": "https://api.github.com/users/ryanofsky/repos",
              "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27720",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27720",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27720.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27720.patch"
          },
          "closed_at": "2023-05-31T17:56:44Z",
          "created_at": "2023-05-22T16:08:54Z",
          "updated_at": "2023-05-31T18:26:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9304700726,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAIqmnc2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9304700726",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-22T16:19:28Z"
    },
    {
      "event": "commented",
      "id": 1557553941,
      "node_id": "IC_kwDOABII585c1mMV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1557553941",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-22T16:41:49Z",
      "updated_at": "2023-05-22T16:41:49Z",
      "author_association": "MEMBER",
      "body": "Feedback tackled, thanks ryanofsky and mzumzande for your deep review!\r\n\r\nThis PR now depends on #27720 and #27708.\r\n\r\nList of changes since the last review:\r\n\r\n* Created #27708 so the post-init shutdown doesn’t introduce any tangible difference for user and tests. (Per https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198184049 discussion).\r\n\r\n* Moved the `LoadMempool()` call from the blockstorage import function to init.cpp (per https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199824807 discussion). So the indexes can be started prior starting the mempool (which could take a while) and we don’t keep a mempool related function inside `blockstorage.cpp`.\r\n\r\n* Decoupled the uninitialized index child class race condition into an standalone PR #27720.\r\n\r\n* Fixed a missing init return if `index.Init()` fails.\r\n\r\n* Renamed `IsBlockDataAvailable` to `CheckBlockDataAvailability` and added the missing data availability check for the upper block (https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199268910).",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1557553941",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "unlabeled",
      "id": 9305843037,
      "node_id": "UNLE_lADOABII585ldbL0zwAAAAIqq-Vd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9305843037",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-22T18:24:28Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9305843315,
      "node_id": "LE_lADOABII585ldbL0zwAAAAIqq-Zz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9305843315",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-22T18:24:31Z",
      "label": {
        "name": "UTXO Db and Indexes",
        "color": "fbca04"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9351280914,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAItYTkS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9351280914",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T14:07:17Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T14:26:10Z",
      "updated_at": "2023-05-26T14:26:10Z",
      "source": {
        "issue": {
          "id": 1718198101,
          "node_id": "PR_kwDOABII585Q8Ro8",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27708",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27708/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27708/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27708/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27708",
          "number": 27708,
          "state": "closed",
          "state_reason": null,
          "title": "Return EXIT_FAILURE on post-init fatal errors",
          "body": "It seems odd to return `EXIT_SUCCESS` when the node aborted execution due a fatal internal error\r\nor any post-init problem that triggers an unrequested shutdown.\r\n\r\ne.g. blocks or coins db I/O errors, disconnect block failure, failure during thread import (external\r\nblocks loading process error), among others.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27708",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27708",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27708.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27708.patch"
          },
          "closed_at": "2023-06-12T16:55:02Z",
          "created_at": "2023-05-20T15:04:25Z",
          "updated_at": "2023-06-13T09:08:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T15:44:48Z",
      "updated_at": "2023-05-26T15:44:48Z",
      "source": {
        "issue": {
          "id": 1644039380,
          "node_id": "I_kwDOABII585h_gzU",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27355",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27355/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27355/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27355/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27355",
          "number": 27355,
          "state": "closed",
          "state_reason": "completed",
          "title": "index: ThreadSanitizer: data race on vptr ",
          "body": "Seen with master @ 220008604f15d5078092dea28be3e3f7f11b6c8f on aarch64 (with `NO_BDB=1`). Follow up from #27298. See also #26188.\r\n\r\n```bash\r\n2023-03-28T13:52:47.882295Z (mocktime: 2020-08-31T15:34:12Z) [test] [dbwrapper.cpp:158] [CDBWrapper] Opened LevelDB successfully\r\n2023-03-28T13:52:47.882390Z (mocktime: 2020-08-31T15:34:12Z) [test] [dbwrapper.cpp:183] [CDBWrapper] Using obfuscation key for /tmp/test_common_Bitcoin Core/0959fba80d599fe246b0b5ced04b4d1ecd504db9812edbff4ada2d88c6b218ae/regtest/indexes/txindex: 0000000000000000\r\n2023-03-28T13:52:47.884002Z (mocktime: 2020-08-31T15:34:12Z) [txindex] [util/thread.cpp:20] [TraceThread] txindex thread start\r\ntest/txindex_tests.cpp(38): fatal error: in \"txindex_tests/txindex_initial_sync\": critical check time_start + timeout_ms > GetTimeMillis() has failed\r\nLLVMSymbolizer: error reading file: No such file or directory\r\nmake[3]: *** [Makefile:21823: test/txindex_tests.cpp.test] Error 1\r\nmake[3]: Leaving directory '/home/fedora/bitcoin/ci/scratch/build/bitcoin-aarch64-unknown-linux-gnu/src'\r\nmake[2]: *** [Makefile:19828: check-am] Error 2\r\nmake[2]: Leaving directory '/home/fedora/bitcoin/ci/scratch/build/bitcoin-aarch64-unknown-linux-gnu/src'\r\nmake[1]: *** [Makefile:19493: check-recursive] Error 1\r\nmake[1]: Leaving directory '/home/fedora/bitcoin/ci/scratch/build/bitcoin-aarch64-unknown-linux-gnu/src'\r\nmake: *** [Makefile:816: check-recursive] Error 1\r\n==================\r\nWARNING: ThreadSanitizer: data race on vptr (ctor/dtor vs virtual call) (pid=24142)\r\n  Write of size 8 at 0xfffffee67968 by main thread:\r\n    #0 BaseIndex::~BaseIndex() src/index/base.cpp:80:1 (test_bitcoin+0xc54cc8) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #1 TxIndex::~TxIndex() src/index/txindex.cpp:56:19 (test_bitcoin+0xc6daec) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #2 txindex_tests::txindex_initial_sync::test_method() src/test/txindex_tests.cpp:82:1 (test_bitcoin+0x7c281c) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #3 txindex_tests::txindex_initial_sync_invoker() src/test/txindex_tests.cpp:17:1 (test_bitcoin+0x7c0f78) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #4 boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:117:11 (test_bitcoin+0x2b78e8) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #5 boost::function0<void>::operator()() const /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:763:14 (test_bitcoin+0x24f35c) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #6 boost::detail::forward::operator()() /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1388:32 (test_bitcoin+0x24f35c)\r\n    #7 boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:137:18 (test_bitcoin+0x24f35c)\r\n    #8 boost::function0<int>::operator()() const /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:763:14 (test_bitcoin+0x1e3384) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #9 int boost::detail::do_invoke<boost::shared_ptr<boost::detail::translator_holder_base>, boost::function<int ()>>(boost::shared_ptr<boost::detail::translator_holder_base> const&, boost::function<int ()> const&) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:301:30 (test_bitcoin+0x1e3384)\r\n    #10 boost::execution_monitor::catch_signals(boost::function<int ()> const&) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:903:16 (test_bitcoin+0x1e3384)\r\n    #11 boost::execution_monitor::execute(boost::function<int ()> const&) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1301:16 (test_bitcoin+0x1e367c) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #12 boost::execution_monitor::vexecute(boost::function<void ()> const&) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1397:5 (test_bitcoin+0x1dcec0) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #13 boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/unit_test_monitor.ipp:49:9 (test_bitcoin+0x1dcec0)\r\n    #14 boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/framework.ipp:815:44 (test_bitcoin+0x20cdfc) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #15 boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/framework.ipp:784:58 (test_bitcoin+0x20d128) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #16 boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/framework.ipp:784:58 (test_bitcoin+0x20d128) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #17 boost::unit_test::framework::run(unsigned long, bool) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/framework.ipp:1722:29 (test_bitcoin+0x1dbe64) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #18 boost::unit_test::unit_test_main(boost::unit_test::test_suite* (*)(int, char**), int, char**) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/unit_test_main.ipp:250:9 (test_bitcoin+0x1f57c8) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #19 main /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/unit_test_main.ipp:306:12 (test_bitcoin+0x1f5d74) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n\r\n  Previous read of size 8 at 0xfffffee67968 by thread T4:\r\n    #0 BaseIndex::ThreadSync() src/index/base.cpp:217:18 (test_bitcoin+0xc55ba0) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #1 BaseIndex::Start()::$_0::operator()() const src/index/base.cpp:404:73 (test_bitcoin+0xc59324) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #2 decltype(std::declval<BaseIndex::Start()::$_0&>()()) std::__1::__invoke[abi:v160000]<BaseIndex::Start()::$_0&>(BaseIndex::Start()::$_0&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:394:23 (test_bitcoin+0xc59324)\r\n    #3 void std::__1::__invoke_void_return_wrapper<void, true>::__call<BaseIndex::Start()::$_0&>(BaseIndex::Start()::$_0&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:487:9 (test_bitcoin+0xc59324)\r\n    #4 std::__1::__function::__alloc_func<BaseIndex::Start()::$_0, std::__1::allocator<BaseIndex::Start()::$_0>, void ()>::operator()[abi:v160000]() /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:185:16 (test_bitcoin+0xc59324)\r\n    #5 std::__1::__function::__func<BaseIndex::Start()::$_0, std::__1::allocator<BaseIndex::Start()::$_0>, void ()>::operator()() /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:356:12 (test_bitcoin+0xc59324)\r\n    #6 std::__1::__function::__value_func<void ()>::operator()[abi:v160000]() const /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:510:16 (test_bitcoin+0x10cbd30) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #7 std::__1::function<void ()>::operator()() const /usr/lib/llvm-16/bin/../include/c++/v1/__functional/function.h:1156:12 (test_bitcoin+0x10cbd30)\r\n    #8 util::TraceThread(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>) src/util/thread.cpp:21:9 (test_bitcoin+0x10cbd30)\r\n    #9 decltype(std::declval<void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>)>()(std::declval<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(), std::declval<BaseIndex::Start()::$_0>())) std::__1::__invoke[abi:v160000]<void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, BaseIndex::Start()::$_0>(void (*&&)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&&, BaseIndex::Start()::$_0&&) /usr/lib/llvm-16/bin/../include/c++/v1/__functional/invoke.h:394:23 (test_bitcoin+0xc58e70) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #10 void std::__1::__thread_execute[abi:v160000]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, BaseIndex::Start()::$_0, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, BaseIndex::Start()::$_0>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-16/bin/../include/c++/v1/thread:282:5 (test_bitcoin+0xc58e70)\r\n    #11 void* std::__1::__thread_proxy[abi:v160000]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, BaseIndex::Start()::$_0>>(void*) /usr/lib/llvm-16/bin/../include/c++/v1/thread:293:5 (test_bitcoin+0xc58e70)\r\n\r\n  Location is stack of main thread.\r\n\r\n  Location is global '??' at 0xfffffee4a000 ([stack]+0x1d968)\r\n\r\n  Thread T4 'b-txindex' (tid=24147, running) created by main thread at:\r\n    #0 pthread_create <null> (test_bitcoin+0x13776c) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #1 std::__1::__libcpp_thread_create[abi:v160000](unsigned long*, void* (*)(void*), void*) /usr/lib/llvm-16/bin/../include/c++/v1/__threading_support:378:10 (test_bitcoin+0xc58b00) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #2 std::__1::thread::thread<void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, BaseIndex::Start()::$_0, void>(void (*&&)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, BaseIndex::Start()::$_0&&) /usr/lib/llvm-16/bin/../include/c++/v1/thread:309:16 (test_bitcoin+0xc58b00)\r\n    #3 BaseIndex::Start() src/index/base.cpp:404:21 (test_bitcoin+0xc58b00)\r\n    #4 txindex_tests::txindex_initial_sync::test_method() src/test/txindex_tests.cpp:32:5 (test_bitcoin+0x7c18d8) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #5 txindex_tests::txindex_initial_sync_invoker() src/test/txindex_tests.cpp:17:1 (test_bitcoin+0x7c0f78) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #6 boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:117:11 (test_bitcoin+0x2b78e8) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #7 boost::function0<void>::operator()() const /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:763:14 (test_bitcoin+0x24f35c) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #8 boost::detail::forward::operator()() /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1388:32 (test_bitcoin+0x24f35c)\r\n    #9 boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:137:18 (test_bitcoin+0x24f35c)\r\n    #10 boost::function0<int>::operator()() const /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/function/function_template.hpp:763:14 (test_bitcoin+0x1e3384) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #11 int boost::detail::do_invoke<boost::shared_ptr<boost::detail::translator_holder_base>, boost::function<int ()>>(boost::shared_ptr<boost::detail::translator_holder_base> const&, boost::function<int ()> const&) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:301:30 (test_bitcoin+0x1e3384)\r\n    #12 boost::execution_monitor::catch_signals(boost::function<int ()> const&) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:903:16 (test_bitcoin+0x1e3384)\r\n    #13 boost::execution_monitor::execute(boost::function<int ()> const&) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1301:16 (test_bitcoin+0x1e367c) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #14 boost::execution_monitor::vexecute(boost::function<void ()> const&) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/execution_monitor.ipp:1397:5 (test_bitcoin+0x1dcec0) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #15 boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned long) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/unit_test_monitor.ipp:49:9 (test_bitcoin+0x1dcec0)\r\n    #16 boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/framework.ipp:815:44 (test_bitcoin+0x20cdfc) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #17 boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/framework.ipp:784:58 (test_bitcoin+0x20d128) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #18 boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned long, boost::unit_test::framework::state::random_generator_helper const*) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/framework.ipp:784:58 (test_bitcoin+0x20d128) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #19 boost::unit_test::framework::run(unsigned long, bool) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/framework.ipp:1722:29 (test_bitcoin+0x1dbe64) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #20 boost::unit_test::unit_test_main(boost::unit_test::test_suite* (*)(int, char**), int, char**) /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/unit_test_main.ipp:250:9 (test_bitcoin+0x1f57c8) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n    #21 main /home/fedora/bitcoin/depends/aarch64-unknown-linux-gnu/include/boost/test/impl/unit_test_main.ipp:306:12 (test_bitcoin+0x1f5d74) (BuildId: 4e139378821749f690b2477a97607af03b8272e9)\r\n\r\nSUMMARY: ThreadSanitizer: data race on vptr (ctor/dtor vs virtual call) src/index/base.cpp:80:1 in BaseIndex::~BaseIndex()\r\n==================\r\n\r\nreal\t30m28.818s\r\nuser\t0m1.731s\r\nsys\t0m1.874s\r\n```",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 477890092,
              "node_id": "MDU6TGFiZWw0Nzc4OTAwOTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Questions%20and%20Help",
              "name": "Questions and Help",
              "color": "006688",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 29,
          "closed_at": "2023-06-30T09:07:05Z",
          "created_at": "2023-03-28T14:06:07Z",
          "updated_at": "2023-06-30T09:07:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 9380212539,
      "node_id": "LE_lADOABII585ldbL0zwAAAAIvGq87",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9380212539",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-30T15:50:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 9393660039,
      "node_id": "REFE_lADOABII585ldbL0zwAAAAIv5-CH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9393660039",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3a83d4417b35cb0173286b6da97315be861901bc",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a83d4417b35cb0173286b6da97315be861901bc",
      "created_at": "2023-05-31T17:56:43Z"
    },
    {
      "event": "referenced",
      "id": 9394035217,
      "node_id": "REFE_lADOABII585ldbL0zwAAAAIv7ZoR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9394035217",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9ec40ffad20b44a5e0dc76626ae3be8a6522aa25",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/9ec40ffad20b44a5e0dc76626ae3be8a6522aa25",
      "created_at": "2023-05-31T18:40:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9394230591,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAIv8JU_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9394230591",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-31T18:56:05Z"
    },
    {
      "event": "unlabeled",
      "id": 9394408124,
      "node_id": "UNLE_lADOABII585ldbL0zwAAAAIv80q8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9394408124",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-31T19:11:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9505236091,
      "node_id": "LE_lADOABII585ldbL0zwAAAAI2jmR7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9505236091",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T17:02:17Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1589588481,
      "node_id": "IC_kwDOABII585evzIB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1589588481",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-13T15:52:46Z",
      "updated_at": "2023-06-13T15:52:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "This can be rebased now that #27708 is merged",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1589588481",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9522436709,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAI3lNpl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9522436709",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T01:29:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9522449812,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAI3lQ2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9522449812",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T01:32:12Z"
    },
    {
      "event": "labeled",
      "id": 9522774371,
      "node_id": "LE_lADOABII585ldbL0zwAAAAI3mgFj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9522774371",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T02:30:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9522800200,
      "node_id": "UNLE_lADOABII585ldbL0zwAAAAI3mmZI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9522800200",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T02:36:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9525554367,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAI3xGy_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9525554367",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T08:50:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9527749573,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAI35evF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9527749573",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T12:14:55Z"
    },
    {
      "event": "commented",
      "id": 1591365296,
      "node_id": "IC_kwDOABII585e2k6w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1591365296",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T14:42:13Z",
      "updated_at": "2023-06-14T14:42:13Z",
      "author_association": "MEMBER",
      "body": "> This can be rebased now that #27708 is merged\r\n\r\nDone thanks, rebased on master.\r\nHad some troubles with the line-ending encoding in the Windows CI job but all good now.\r\n\r\nThe current CI failure is unrelated to this PR.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1591365296",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "reviewed",
      "id": 1479814543,
      "node_id": "PRR_kwDOABII585YNC2P",
      "url": null,
      "actor": null,
      "commit_id": "ce5f798b089dc8051f6b414ce1a606e60c85d7f3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Light code review ACK ce5f798b089dc8051f6b414ce1a606e60c85d7f3. The final changes here look pretty good, but I saw some confusing things in the individual commits, and left some suggestions I think would make this easier to review and understand.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1479814543",
      "submitted_at": "2023-06-14T16:57:05Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-16T10:37:04Z",
      "updated_at": "2023-06-16T10:37:04Z",
      "source": {
        "issue": {
          "id": 1760282121,
          "node_id": "PR_kwDOABII585TLBTv",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27896",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27896/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27896/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27896/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27896",
          "number": 27896,
          "state": "closed",
          "state_reason": null,
          "title": "Remove the syscall sandbox",
          "body": "After initially being merged in #20487, it's no-longer clear that an internal syscall sandboxing mechanism is something that Bitcoin Core should have/maintain, especially when compared to better maintained/supported alterantives, i.e [firejail](https://github.com/netblue30/firejail).\r\n\r\nThere is more related discussion in #24771.\r\n\r\nNote that given where it's used, the sandbox also gets dragged into the kernel.\r\n\r\nIf it's removed, this should not require any sort of deprecation, as this was only ever an opt-in, experimental feature.\r\n\r\nCloses #24771.",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 234878,
              "node_id": "MDU6TGFiZWwyMzQ4Nzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Linux/Unix",
              "name": "Linux/Unix",
              "color": "770000",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27896",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27896",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27896.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27896.patch"
          },
          "closed_at": "2023-06-27T22:19:34Z",
          "created_at": "2023-06-16T09:41:43Z",
          "updated_at": "2023-06-28T10:15:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9558475259,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAI5usH7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9558475259",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-17T11:22:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9558916519,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAI5wX2n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9558916519",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-17T14:15:42Z"
    },
    {
      "event": "unlabeled",
      "id": 9559015347,
      "node_id": "UNLE_lADOABII585ldbL0zwAAAAI5wv-z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9559015347",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-17T15:20:26Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-17T19:59:27Z",
      "updated_at": "2023-06-17T19:59:27Z",
      "source": {
        "issue": {
          "id": 1750967441,
          "node_id": "PR_kwDOABII585SrjUA",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27850",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27850/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27850/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27850/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27850",
          "number": 27850,
          "state": "open",
          "state_reason": null,
          "title": "test: Add unit & functional test coverage for blockstore",
          "body": "This PR adds unit and functional tests to cover the behavior described in #2039. In particular, that bitcoind will crash on startup if a reindex is requested but the `blk` files are read-only. Eventually this behavior can be updated with https://github.com/bitcoin/bitcoin/pull/27039. This PR just commits the test coverage from #27039 as suggested in https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1584915782\r\n\r\nBecause root users on some platforms can write to read-only files, the test will expect a different outcome if run as root. To enable this, the test framework was expanded with `is_unix_root()` and the CI script modified to create a non-root user and run the functional tests as that user.",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 28,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27850",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27850",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27850.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27850.patch"
          },
          "created_at": "2023-06-10T13:14:19Z",
          "updated_at": "2023-07-30T10:10:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-18T00:02:06Z",
      "updated_at": "2023-06-18T00:02:06Z",
      "source": {
        "issue": {
          "id": 1512790127,
          "node_id": "PR_kwDOABII585GTG8c",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26762",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26762/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26762/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26762/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26762",
          "number": 26762,
          "state": "open",
          "state_reason": null,
          "title": "bugfix: Make `CCheckQueue` RAII-styled (attempt 2)",
          "body": "This PR:\r\n- makes `CCheckQueue` RAII-styled\r\n- gets rid of the global `scriptcheckqueue`\r\n- fixes https://github.com/bitcoin/bitcoin/issues/25448\r\n\r\nThe previous attempt was in https://github.com/bitcoin/bitcoin/pull/18731.\r\n\r\n",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26762",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26762",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26762.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26762.patch"
          },
          "created_at": "2022-12-28T13:17:37Z",
          "updated_at": "2023-07-27T08:23:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1485124733,
      "node_id": "PRR_kwDOABII585YhTR9",
      "url": null,
      "actor": null,
      "commit_id": "b9fe9ab33cd5914b7bf3b223e1bfc204bfc0f7ee",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Feedback tackled, thanks ryanofsky!\r\n\r\n1) Reordered commits: so we first introduce the indexes vector inside the `NodeContext` struct, then `Init()` is decoupled from `Start()`, and finally the `Start()` call is moved to the 'loadblk' thread (where indexes can perform their work directly without having to be actively waiting for another thread signal).\r\n2) Extracted mempool load changes into a standalone commit.\r\n3) Added scripted-diff for the rename changes: 'loadblk' thread name, the `ThreadImport` function and the 'm_load_block' class member.\r\n4) Improved commits description per feedback.\r\n\r\nNote:\r\nI'm not super strong over the selected names in the scripted-diff commit 32c646f. Could drop it, or change them, if they are not good enough. Thoughts?",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1485124733",
      "submitted_at": "2023-06-18T14:29:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-18T21:01:15Z",
      "updated_at": "2023-06-18T21:01:15Z",
      "source": {
        "issue": {
          "id": 813494821,
          "node_id": "MDU6SXNzdWU4MTM0OTQ4MjE=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21267",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21267/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21267/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21267/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/21267",
          "number": 21267,
          "state": "open",
          "state_reason": null,
          "title": "Allow for rescan using block filters with pruned node",
          "body": "After #15946 it should be possible to do a rescan using block filters with a pruned node. Blocks that are not stored could be requested from peers.",
          "user": {
            "login": "benthecarman",
            "id": 15256660,
            "node_id": "MDQ6VXNlcjE1MjU2NjYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benthecarman",
            "html_url": "https://github.com/benthecarman",
            "followers_url": "https://api.github.com/users/benthecarman/followers",
            "following_url": "https://api.github.com/users/benthecarman/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/benthecarman/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/benthecarman/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
            "organizations_url": "https://api.github.com/users/benthecarman/orgs",
            "repos_url": "https://api.github.com/users/benthecarman/repos",
            "events_url": "https://api.github.com/users/benthecarman/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/benthecarman/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 11,
          "created_at": "2021-02-22T13:19:46Z",
          "updated_at": "2023-06-22T22:43:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1493859114,
      "node_id": "PRR_kwDOABII585ZCnsq",
      "url": null,
      "actor": null,
      "commit_id": "b9fe9ab33cd5914b7bf3b223e1bfc204bfc0f7ee",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1493859114",
      "submitted_at": "2023-06-23T15:21:00Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9626487956,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAI9yIyU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9626487956",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-24T13:39:30Z"
    },
    {
      "event": "reviewed",
      "id": 1496630212,
      "node_id": "PRR_kwDOABII585ZNMPE",
      "url": null,
      "actor": null,
      "commit_id": "3514f768b181d359d0218845ace0266d37e9dfbd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback, thanks ryanofsky.\r\n\r\nChanges:\r\n\r\n* Renamed `post_load_init` thread to `initload`.\r\n* Changed `BaseIndex::Start()` to throw `std::logic_error` when the index is not initialized.\r\n* Added coverage for the bugfix commit within the bugfix commit and not later (2e1bb3b).\r\n* Expanded the last commit description explaining the pruning violation check movement from the init thread to the worker 'loadinit' thread (per [comment](https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1240773534)).",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1496630212",
      "submitted_at": "2023-06-24T13:49:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "reviewed",
      "id": 1499453218,
      "node_id": "PRR_kwDOABII585ZX9ci",
      "url": null,
      "actor": null,
      "commit_id": "3514f768b181d359d0218845ace0266d37e9dfbd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 3514f768b181d359d0218845ace0266d37e9dfbd\r\n\r\nThis looks good, and the PR seems pretty easy to review now. It's a series of simple, clean improvements that make index startup more straightforward and efficient.\r\n\r\nI left two review comments, one is about a potential bug in an intermediate commit, but it's fixed by the final commit, and also not hard to address if you want to take the suggestion there.\r\n\r\nI'd consider maybe renaming the PR from \"index: improve initialization and pruning violation check\" to \"index: Make startup more efficient\" and describing it as \"Simplify index startup code, eliminating the `g_indexes_ready_to_sync` variable and moving the prune violation check out of the `BaseIndex` class. Also try to make startup more efficient by running the prune violation check once for all indexes instead of once for each index, and by delaying the prune violation check and moving it off of the main thread so the node can start up faster.\"",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1499453218",
      "submitted_at": "2023-06-26T22:15:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9656973583,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAI_mbkP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9656973583",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T20:46:49Z"
    },
    {
      "event": "renamed",
      "id": 9657027614,
      "node_id": "RTE_lADOABII585ldbL0zwAAAAI_mowe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9657027614",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T20:53:20Z",
      "rename": {
        "from": "index: improve initialization and pruning violation check",
        "to": "index: make startup more efficient"
      }
    },
    {
      "event": "reviewed",
      "id": 1501863590,
      "node_id": "PRR_kwDOABII585ZhJ6m",
      "url": null,
      "actor": null,
      "commit_id": "1a50310c18db05a6fe9d5554245b0a82a0fe7c31",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback, thanks ryanofsky!.\r\n\r\n* Reordered code so `g_indexes_ready_to_sync` removal occurs at the last commit.\r\n* Documented the `CheckBlockDataAvailability` preconditions.\r\n* And fixed a little bug that could have arose when the user erases the blocks directory without erasing the indexes directory. In this scenario, the process need to verify that `CheckBlockDataAvailability` return value is the genesis block. ",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1501863590",
      "submitted_at": "2023-06-27T21:14:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "reviewed",
      "id": 1501321408,
      "node_id": "PRR_kwDOABII585ZfFjA",
      "url": null,
      "actor": null,
      "commit_id": "1a50310c18db05a6fe9d5554245b0a82a0fe7c31",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, didn't review the latest push yet. Only have some issues with the naming.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1501321408",
      "submitted_at": "2023-06-27T21:37:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "labeled",
      "id": 9657789202,
      "node_id": "LE_lADOABII585ldbL0zwAAAAI_pisS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9657789202",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T22:49:26Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9657920410,
      "node_id": "LE_lADOABII585ldbL0zwAAAAI_qCua",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9657920410",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T23:13:09Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9664630104,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAJADo1Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9664630104",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T13:19:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9664696312,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAJAD4_4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9664696312",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T13:25:53Z"
    },
    {
      "event": "commented",
      "id": 1611418821,
      "node_id": "IC_kwDOABII585gDEzF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1611418821",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T13:31:08Z",
      "updated_at": "2023-06-28T13:31:08Z",
      "author_association": "MEMBER",
      "body": "Tackled naming and docs suggestions, thanks mzumsande.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1611418821",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9664868859,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAJAEjH7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9664868859",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T13:40:52Z"
    },
    {
      "event": "unlabeled",
      "id": 9665157595,
      "node_id": "UNLE_lADOABII585ldbL0zwAAAAJAFpnb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9665157595",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T14:00:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9666095620,
      "node_id": "UNLE_lADOABII585ldbL0zwAAAAJAJOoE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9666095620",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T15:09:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1503519460,
      "node_id": "PRR_kwDOABII585ZneLk",
      "url": null,
      "actor": null,
      "commit_id": "2f830d1de8f0b57f46f1d7da3cb7b9ab4aa1e2ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 2f830d1de8f0b57f46f1d7da3cb7b9ab4aa1e2ff. I left a long comment below about one of the intermediate commits after I got hung up on whether `block_to_test` could be null before it was passed to the CheckBlockData function. I think it is not too important since the code is deleted in the end, but I did suggest some improvements to CheckBlockData that I think would make it safer and easier to use.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1503519460",
      "submitted_at": "2023-06-28T16:42:44Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9670332282,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAJAZY96",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9670332282",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T21:32:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9670371186,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAJAZidy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9670371186",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T21:37:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9670795585,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAJAbKFB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9670795585",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T22:47:15Z"
    },
    {
      "event": "labeled",
      "id": 9670795957,
      "node_id": "LE_lADOABII585ldbL0zwAAAAJAbKK1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9670795957",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T22:47:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9671353848,
      "node_id": "UNLE_lADOABII585ldbL0zwAAAAJAdSX4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9671353848",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-29T00:45:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1506345121,
      "node_id": "PRR_kwDOABII585ZyQCh",
      "url": null,
      "actor": null,
      "commit_id": "5ec5a4888743ce7261e0e9cdc077014cd47bfdd6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1506345121",
      "submitted_at": "2023-06-30T01:51:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "reviewed",
      "id": 1507412576,
      "node_id": "PRR_kwDOABII585Z2Upg",
      "url": null,
      "actor": null,
      "commit_id": "5ec5a4888743ce7261e0e9cdc077014cd47bfdd6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1507412576",
      "submitted_at": "2023-06-30T17:24:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9692119656,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAJBsgJo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9692119656",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-30T21:47:51Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-03T23:18:55Z",
      "updated_at": "2023-07-03T23:18:55Z",
      "source": {
        "issue": {
          "id": 1786918639,
          "node_id": "PR_kwDOABII585UkLN9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28026",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28026/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28026/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28026/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28026",
          "number": 28026,
          "state": "closed",
          "state_reason": null,
          "title": "test: bugfix, synchronize indexes synchronously",
          "body": "Fixing the current CI failures.\r\n\r\nThe tests objective is to exercise the chain synchronization code, \r\nverifying that the indexes are able to catch up with the chain-tip.\r\nTherefore, there is no need to run the process on a worker thread.\r\n\r\nNote:\r\nAfter #27607, the `BaseIndex::Start` method will be almost empty.\r\nOnly containing the `ThreadSync` call, allowing us to extract the\r\nthread ownership from the index class and place it into an external\r\nstructure (probably, the thread pool introduced in #26966).",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28026",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28026",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28026.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28026.patch"
          },
          "closed_at": "2023-07-07T13:29:55Z",
          "created_at": "2023-07-03T23:18:55Z",
          "updated_at": "2023-07-07T13:49:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1515317576,
      "node_id": "PRR_kwDOABII585aUelI",
      "url": null,
      "actor": null,
      "commit_id": "94c9b1f37e335c43c739b853bb9457737b67d73a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 94c9b1f37e335c43c739b853bb9457737b67d73a\r\n\r\nI reviewed the code again and did some additional tests with pruning on regtest.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1515317576",
      "submitted_at": "2023-07-05T20:32:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "review_requested",
      "id": 9736225327,
      "node_id": "RRE_lADOABII585ldbL0zwAAAAJEUwIv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9736225327",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-05T20:32:59Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1515502475,
      "node_id": "PRR_kwDOABII585aVLuL",
      "url": null,
      "actor": null,
      "commit_id": "94c9b1f37e335c43c739b853bb9457737b67d73a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1515502475",
      "submitted_at": "2023-07-06T04:28:01Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "review_requested",
      "id": 9739143258,
      "node_id": "RRE_lADOABII585ldbL0zwAAAAJEf4ha",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9739143258",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T04:28:05Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9744082416,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAJEyuXw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9744082416",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T13:44:21Z"
    },
    {
      "event": "reviewed",
      "id": 1516581154,
      "node_id": "PRR_kwDOABII585aZTEi",
      "url": null,
      "actor": null,
      "commit_id": "30b2511f39d32e29f9f05859aa8a97b84c22376b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback, [small diff](https://github.com/bitcoin/bitcoin/compare/94c9b1f37e335c43c739b853bb9457737b67d73a..30b2511f39d32e29f9f05859aa8a97b84c22376b). Thanks ryanofsky!\r\n\r\nChanges:\r\n* Documented behavior change when tip has no data in 79449741fa commit description.\r\n* Removed the introduced `pruneblockchain` \"nothing to prune\" error.\r\n* Made `getblockchaininfo` \"pruneheight\" result consistent with the RPC documentation.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1516581154",
      "submitted_at": "2023-07-06T13:52:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "reviewed",
      "id": 1516827895,
      "node_id": "PRR_kwDOABII585aaPT3",
      "url": null,
      "actor": null,
      "commit_id": "30b2511f39d32e29f9f05859aa8a97b84c22376b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 30b2511f39d32e29f9f05859aa8a97b84c22376b. Just `GetFirstStoredBlock` and `CheckBlockDataAvailability` related improvements since last review.\r\n\r\nIt would be nice to have a third reviewer for PR this if anyone else wants to take a look.\r\n\r\n---\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1254460179\r\n\r\n> maybe would be good to discuss further what \"pruneheight\" result should be in a follow-up. it sounds better if we directly return the last pruned height.\r\n\r\nI agree that probably would be better. I think the initial history of this is that as of #15991 `pruneblockchain` and `getblockchaininfo` both tried to return the \"first stored\" block height, rather than the \"last pruned\" block height.\r\n\r\nBut then @luke-jr noticed that \"first stored\" concept was misleading because blockfiles contain multiple blocks, and blocks are downloaded out of order, so it is possible for there to be complete blocks that are stored before the last pruned block. To address this, he changed `pruneblockchain` to return the last block pruned rather than the first block stored in #24629, and he changed the `getblockchaininfo` documentation in #24640 to clarify that it returns the last block pruned + 1 rather than first block stored. I'm not sure why he didn't try to make the two functions more consistent with each other. Probably there were backwards compatibility concerns, and it was more important to make the `pruneblockchain` return value consistent with its argument value than to change the behavior of `getblockchaininfo`.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1516827895",
      "submitted_at": "2023-07-06T16:50:07Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "review_requested",
      "id": 9745994906,
      "node_id": "RRE_lADOABII585ldbL0zwAAAAJE6BSa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9745994906",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T16:50:13Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9748122103,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAJFCIn3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9748122103",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T21:13:25Z"
    },
    {
      "event": "reviewed",
      "id": 1517325528,
      "node_id": "PRR_kwDOABII585acIzY",
      "url": null,
      "actor": null,
      "commit_id": "988f3f692acabf0eedfed38e4704fe355f995e72",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback, thanks. [Small diff](https://github.com/bitcoin/bitcoin/compare/30b2511f39d32e29f9f05859aa8a97b84c22376b..988f3f692acabf0eedfed38e4704fe355f995e72).",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1517325528",
      "submitted_at": "2023-07-06T21:17:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "labeled",
      "id": 9748267858,
      "node_id": "LE_lADOABII585ldbL0zwAAAAJFCsNS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9748267858",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T21:31:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T21:48:17Z",
      "updated_at": "2023-07-07T21:48:17Z",
      "source": {
        "issue": {
          "id": 1793866420,
          "node_id": "PR_kwDOABII585U7y9a",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28048",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28048/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28048/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28048/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28048",
          "number": 28048,
          "state": "closed",
          "state_reason": null,
          "title": "kernel: Remove StartShutdown calls from validation code",
          "body": "This change drops the last kernel dependency on shutdown.cpp. It also adds new hooks for libbitcoinkernel applications to be able to interrupt kernel operations when the chain tip changes.\r\n\r\n~This change is mostly a refactoring, but does slightly change `-stopatheight` behavior (see release note and commit message)~\r\n\r\n(EDIT: This change is a refactoring and doesn't change behavior. The code change appeared to affect `-stopatheight` behavior, but doesn't really).",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28048",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28048",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28048.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28048.patch"
          },
          "closed_at": "2023-07-14T17:12:43Z",
          "created_at": "2023-07-07T17:03:53Z",
          "updated_at": "2023-07-14T19:58:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1626315000,
      "node_id": "IC_kwDOABII585g75j4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1626315000",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T22:31:04Z",
      "updated_at": "2023-07-07T22:31:13Z",
      "author_association": "MEMBER",
      "body": "Note: the branch tests are all passing locally. What is failing is the CI compiling it on top of master. Fixing it..",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1626315000",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27607"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVkNDQ2MmNjNzhhZmQyMDY1YmJmNWJkNzk3Mjg4NTJiNjViOWFkN2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed4462cc78afd2065bbf5bd79728852b65b9ad7f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ed4462cc78afd2065bbf5bd79728852b65b9ad7f",
      "tree": {
        "sha": "bc2e425aeb63d433e8cb8b51267210acce1c0f55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc2e425aeb63d433e8cb8b51267210acce1c0f55"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree bc2e425aeb63d433e8cb8b51267210acce1c0f55\nparent 79e8247ddb166f9b980f40249b7372a502402a4d\nauthor furszy <matiasfurszyfer@protonmail.com> 1686816694 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1688769086 -0300\n\ninit: start indexes sync earlier\n\nThe mempool load can take a while, and it is not\nneeded for the indexes' synchronization.\n\nAlso, having the mempool load function call\ninside 'blockstorage.cpp' wasn't structurally\ncorrect.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmSokj4ACgkQXdI8zGhq\npiPfahAAkUf6Gjy5NhvCJR4Pckj56j+oOGtcenoXoORThKBI7ZnLnxjKSW0v3BBW\nxVUaBK6PrvNFek65BZVzSqn7vMXc84gOoI90sNMGcwZLtSG5h1do0Uc16v7a0TZZ\nVpzBF6uAnfZuZK4NWwpEANiI3xmhS25f+hPTHs+yc9WAUJUdVrpTj8TMI0fuxokd\nHZ5wiROfso6PUXhliJR5nMQdFWSSoReX5RlgPB0IeOsFm418WasL0y931L2bzDhH\n0KhsrI4p4l8ZiNgXU9Zn564fv+gbi4EoAr9RuL/knWehdiHjWv12LsHZ6TFmH+l4\ndop0uXfkG6NwH2bXDifu4yQH88eR3Lq035dJDn1rAQZMHTXYGV21XHTLQMr1it/b\n++JOv+edKHIX0Sv45VTPbEGMrbte7kVNwt0qCjuDQNu8esHThXaLrDDLalB7wnhE\nzxIl9LpboguYUXawGR0tKaEgzFsgn6Qt3h1QjO+tKQmmH36sP7vMIVeQzQbw2Ofz\nZyU/1TrlQyYPmpIPmb9gH31yAr8U5ZGURl+gYStCLVw2je5j866INCKbhNCEMED+\no7qnt4BAUogx5Xl1pGbyrr28TrAQ5ZF95ydxHkxLTjYjEV65OLjl4Z6F/a2kg0jt\nYSg3DGW8UJanlUTuTTSSQCv1JoytVWRhmloY0/gWZhzHd9b/jrU=\n=4Jwe\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79e8247ddb166f9b980f40249b7372a502402a4d",
          "sha": "79e8247ddb166f9b980f40249b7372a502402a4d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/79e8247ddb166f9b980f40249b7372a502402a4d"
        }
      ],
      "message": "init: start indexes sync earlier\n\nThe mempool load can take a while, and it is not\nneeded for the indexes' synchronization.\n\nAlso, having the mempool load function call\ninside 'blockstorage.cpp' wasn't structurally\ncorrect.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-07-07T22:31:26Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-06-15T08:11:34Z"
      },
      "sha": "ed4462cc78afd2065bbf5bd79728852b65b9ad7f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA0NTc1MTA2YjI1MjlmNDk1Y2U4MTEwZGRmN2VkMjI0N2Q0YmMzMzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04575106b2529f495ce8110ddf7ed2247d4bc339",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/04575106b2529f495ce8110ddf7ed2247d4bc339",
      "tree": {
        "sha": "589bc75b1a85ec31b86de84d8eeb96f4635bbcb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/589bc75b1a85ec31b86de84d8eeb96f4635bbcb7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 589bc75b1a85ec31b86de84d8eeb96f4635bbcb7\nparent ed4462cc78afd2065bbf5bd79728852b65b9ad7f\nauthor furszy <matiasfurszyfer@protonmail.com> 1687011111 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1688769087 -0300\n\nscripted-diff: rename 'loadblk' thread name to 'initload'\n\nThe thread does not only load blocks, it loads the mempool and,\nin a future commit, will start the indexes as well.\n\nAlso, renamed the 'ThreadImport' function to 'ImportBlocks'\nAnd the 'm_load_block' class member to 'm_thread_load'.\n\n-BEGIN VERIFY SCRIPT-\n\nsed -i \"s/ThreadImport/ImportBlocks/g\" $(git grep -l ThreadImport -- ':!/doc/')\nsed -i \"s/loadblk/initload/g\" $(git grep -l loadblk -- ':!/doc/release-notes/')\nsed -i \"s/m_load_block/m_thread_load/g\" $(git grep -l m_load_block)\n\n-END VERIFY SCRIPT-\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmSokj8ACgkQXdI8zGhq\npiOpbg/9E1ZaZH6fG/L4d0a4sjTv4onBxd3riOKZHf6u0SGdyf1EN5dDq6k86nDh\n3CANNqUjKdsmdtKJVxA+dyf2M09hDYlEmeL0sJW2ZvGQG+JWScGDTOcnVWX3OXVC\nXg76+Bp/JRP6pLXkzcERbp2MXkkXHuTcPGkcGDeiJ/UiO10cz1Fn5zr6UN1OAEkp\nC3DmLzgoyt3Z3L4HAPlv1cyk5KQ4b71j1iU72u/FMY8RkxvD5VuF4p9d4Mbu6NLw\nPb7Jvd1zy1zLEgTg0XVfQpb15mTKESp9ur7lLuzgr4RsyAGHmDUb/8O47uhyJr3F\nn2F3qDSzLZiirV4025voN3GHv5weDbKLxc4T/EtXYYsPK9lBgUvoqThh9UwRZymv\nB6Wy4aqIiSh0IJrfeZmYHSyNl0HMy8PoKsJbMAzFV/zzvzyxeTVxjsacNUJske9H\nkRxKx2LjlmLDUNk1FCeHt10qKf0insDUoIbXvFgmk1SGClghIB4u6PKMV/5k+qGA\nSwfH0D2nqOMeVDcld+3jQ4+jH0W8H5hNlXapyOA4jLoYhefjS7XpZ3lbGJSx6HNA\nTRQ6AcWjWfE8DsDExXVBcsYh5BDuFw4Qr4IVkI/bdmQumYi6L+YMYlrDhPp7TaD1\nO1hp/v2VSD0h1XQAhz1HG1RQKko8To+lZrl+O8k7V7766FJ+KJw=\n=HJKx\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed4462cc78afd2065bbf5bd79728852b65b9ad7f",
          "sha": "ed4462cc78afd2065bbf5bd79728852b65b9ad7f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ed4462cc78afd2065bbf5bd79728852b65b9ad7f"
        }
      ],
      "message": "scripted-diff: rename 'loadblk' thread name to 'initload'\n\nThe thread does not only load blocks, it loads the mempool and,\nin a future commit, will start the indexes as well.\n\nAlso, renamed the 'ThreadImport' function to 'ImportBlocks'\nAnd the 'm_load_block' class member to 'm_thread_load'.\n\n-BEGIN VERIFY SCRIPT-\n\nsed -i \"s/ThreadImport/ImportBlocks/g\" $(git grep -l ThreadImport -- ':!/doc/')\nsed -i \"s/loadblk/initload/g\" $(git grep -l loadblk -- ':!/doc/release-notes/')\nsed -i \"s/m_load_block/m_thread_load/g\" $(git grep -l m_load_block)\n\n-END VERIFY SCRIPT-",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-07-07T22:31:27Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-06-17T14:11:51Z"
      },
      "sha": "04575106b2529f495ce8110ddf7ed2247d4bc339"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJlYmM3ZTY4Y2M5ZDM0NzgwN2I2NDZmNjAxYjI3OTQwYzk1OTBjODk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ebc7e68cc9d347807b646f601b27940c9590c89",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2ebc7e68cc9d347807b646f601b27940c9590c89",
      "tree": {
        "sha": "15994f943add78416c4669ab2e5bc6e04e266dcc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15994f943add78416c4669ab2e5bc6e04e266dcc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 15994f943add78416c4669ab2e5bc6e04e266dcc\nparent 04575106b2529f495ce8110ddf7ed2247d4bc339\nauthor Martin Zumsande <mzumsande@gmail.com> 1687904704 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1688769087 -0300\n\ndoc: describe 'init load' thread actions\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmSokj8ACgkQXdI8zGhq\npiPq6w//S51j8MLgFy5bs1SEexDolel5zfdoa+iTtln1m2eMg+HBdwKsMzsMQnxn\nuSVLb1ipLCMgK4FUstSpgr3NVsSurg/YNbaWHuaAlZYeSd4Bp1pVBmQt6mbEIwvh\nBK97FN0bQW9YHAJJeqqpB5SNDVn4UeC3WwwNdzRARV89lt2BrFDM/rGaySNa3xyj\nzwfpfstdMqy6Mf60fO9g6Srjjv1XoIySCNDv/HUorFhFc4MappebFJ0+Yl7HPbpZ\n43lRO8A49oieaJLYVmoWAeqRBb9CBPwU7U81JF1rD2hp2nZnS03xbbeT1g5DyOeF\n5cUTz/58xrszPGSjSiFaaL8Ljxh2rOb2r+nis9mwPMPyD99J+O+2t4p/OAQDwYb0\n/tBQFRPuw0DHNjp6Lh0XjmDel308USfmJuyvGYvuc+N+FncmoAdvD1k189wyFcGu\nt/U6uGm7y7PokiGw/r5oM6uh8+0t4QfBIjhJ33Bwi+0QfnyIoITvAgYDvMoZT79s\nGMVTlqrBZxMEeKSHie8AWJCrok8zZJw/z+/nlxiTfl0OckjpX8lOgo8MbwP/f5qa\nAu+k8HMPY99sWa62FgykAZdjsoImNOYUiGccOvNvPTt66VuEt2xkkAUx0Br9idMf\n97gyCKH51oaYGHuJ/9InPGQIDb19ntNShPoh0hY6l0TTXhjgpJo=\n=aaEK\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04575106b2529f495ce8110ddf7ed2247d4bc339",
          "sha": "04575106b2529f495ce8110ddf7ed2247d4bc339",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/04575106b2529f495ce8110ddf7ed2247d4bc339"
        }
      ],
      "message": "doc: describe 'init load' thread actions",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-07-07T22:31:27Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2023-06-27T22:25:04Z"
      },
      "sha": "2ebc7e68cc9d347807b646f601b27940c9590c89"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIyNWUyMTMxMTA2MDJiNGZkMWQzNDUxNjdmNWY5MmQyNjU1N2Y2YzE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/225e213110602b4fd1d345167f5f92d26557f6c1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/225e213110602b4fd1d345167f5f92d26557f6c1",
      "tree": {
        "sha": "7f5e352803344f9d6a43347cfc6fe225a474e04a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f5e352803344f9d6a43347cfc6fe225a474e04a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7f5e352803344f9d6a43347cfc6fe225a474e04a\nparent 2ebc7e68cc9d347807b646f601b27940c9590c89\nauthor furszy <matiasfurszyfer@protonmail.com> 1686921382 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1688769087 -0300\n\nrefactor: init indexes, decouple 'Start()' from the creation step\n\nNo behavior change.\n\nThe goal here is to group indexes, so we can perform the same\ninitialization and verification process equally for all of them.\n\nThe checks performed inside `StartIndexes` will be expanded\nin the subsequent commits.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmSokj8ACgkQXdI8zGhq\npiPnfw/+JGegBZ0gffeiGNLj4aNdiivZJhlra2rVWeGm0CTNuo66vgzsH/HPMkIH\nfwkmuFi8jYNY31xCyyy1c2V8Yghlf9o73wTAiR6TlrO1oUNEKUhMvWDi3uPiky8u\nwHGKjJO2QMk4RgqlrFqHFsp73ZNa3amCpW7WE0IgQ7veLHhkJqYT8WSbQY9hJZMp\n4EdZ4itmVYqEtLBKfO2cvhZa31OjpaUoVooEc+Z5ohv+2E+Eiq8YBncvQPUGvsl+\nNHP4suT/M7pVUIllwHGJ3hfDn5d8qBfmZkScenJYU9/U6AXXflygSRK7N8M4lUTf\nHCeGdLfDl6nE+kzHXtvCjSMHonGjY2Hb1ooYIkLC8h2ObcdXU9D0y9gJ2dTOdi1K\nnCI/AYC+c7IQFeoJSSf0LVztM5XbEXQ2ycb7GbR+2IL4Uj503NcAy3ysDQBPxaFJ\nfoTvucuhqDV9iu5uCcASZBUBFYnYEfpRpN7PQ7f8LKkQ4XiWf/GZyYuTt7DVOOAV\n1+m8y+Yr46JuRmyEMlAHyat6muYdhtwaTMAYrdp9+rJy3CEYVwG0OrBrC6IH1zXh\nJFFL04AzwVhoIJQDiuCQMVTg7Wup6OFAofJATHbpWnp2r52NNiiAsiMLQ3n792d1\nk7kX1TO1FtVhiE4GlnigM2W7Cj5EAaJE+flet1KprGJ44SJNZt0=\n=u4L8\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ebc7e68cc9d347807b646f601b27940c9590c89",
          "sha": "2ebc7e68cc9d347807b646f601b27940c9590c89",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2ebc7e68cc9d347807b646f601b27940c9590c89"
        }
      ],
      "message": "refactor: init indexes, decouple 'Start()' from the creation step\n\nNo behavior change.\n\nThe goal here is to group indexes, so we can perform the same\ninitialization and verification process equally for all of them.\n\nThe checks performed inside `StartIndexes` will be expanded\nin the subsequent commits.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-07-07T22:31:27Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-06-16T13:16:22Z"
      },
      "sha": "225e213110602b4fd1d345167f5f92d26557f6c1"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9759802902,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAJFusYW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9759802902",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T22:37:31Z"
    },
    {
      "event": "reviewed",
      "id": 1520127552,
      "node_id": "PRR_kwDOABII585am05A",
      "url": null,
      "actor": null,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 988f3f692acabf0eedfed38e4704fe355f995e72, just suggested StartIndexes simplification and comment changes since last review",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1520127552",
      "submitted_at": "2023-07-07T22:44:43Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "reviewed",
      "id": 1520172723,
      "node_id": "PRR_kwDOABII585am_6z",
      "url": null,
      "actor": null,
      "commit_id": "4223d80bdae0d265e67280ea8853b184ff0ced13",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Rebased on master due a silent conflict. Only had to adapt an `AbortNode()` line (which now is under the `fatalError()` alias).\r\n\r\nShould be easy to re-check with a `git range-diff 988f3f6...4223d80`.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1520172723",
      "submitted_at": "2023-07-07T22:56:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "unlabeled",
      "id": 9760679034,
      "node_id": "UNLE_lADOABII585ldbL0zwAAAAJFyCR6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9760679034",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-08T01:12:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-08T08:28:26Z",
      "updated_at": "2023-07-08T08:28:26Z",
      "source": {
        "issue": {
          "id": 1794480203,
          "node_id": "PR_kwDOABII585U9_dX",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28051",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28051/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28051/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28051/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28051",
          "number": 28051,
          "state": "open",
          "state_reason": null,
          "title": "Get rid of shutdown.cpp/shutdown.h, use SignalInterrupt directly",
          "body": "This change just removes some code and gets rid of an unnecessary layer of indirection after #27861",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28051",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28051",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28051.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28051.patch"
          },
          "created_at": "2023-07-07T22:26:18Z",
          "updated_at": "2023-07-14T18:45:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-08T10:40:39Z",
      "updated_at": "2023-07-08T10:40:39Z",
      "source": {
        "issue": {
          "id": 1794886050,
          "node_id": "PR_kwDOABII585U_XO7",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28053",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28053/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28053/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28053/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28053",
          "number": 28053,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Move stopafterblockimport option out of blockstorage",
          "body": "This has the benefit of moving this StartShutdown call out of the blockstorage file and thus out of the kernel's responsibility. The user can now decide if he wants to start shutdown / interrupt after a block import or not.\r\n\r\nThis also simplifies https://github.com/bitcoin/bitcoin/pull/28048, making it one fewer shutdown call to handle.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28053",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28053",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28053.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28053.patch"
          },
          "closed_at": "2023-07-11T13:47:21Z",
          "created_at": "2023-07-08T10:40:39Z",
          "updated_at": "2023-07-11T13:47:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1520884392,
      "node_id": "PRR_kwDOABII585aptqo",
      "url": null,
      "actor": null,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Nice, ACK 4223d80bdae0d265e67280ea8853b184ff0ced13\r\n\r\nNit can be ignored.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1520884392",
      "submitted_at": "2023-07-09T11:06:38Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "review_requested",
      "id": 9767011203,
      "node_id": "RRE_lADOABII585ldbL0zwAAAAJGKMOD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9767011203",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-09T11:06:44Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1521991201,
      "node_id": "PRR_kwDOABII585at74h",
      "url": null,
      "actor": null,
      "commit_id": "4223d80bdae0d265e67280ea8853b184ff0ced13",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looks like the tests fail",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1521991201",
      "submitted_at": "2023-07-10T13:25:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQzMGU3MDI3YTE4ODcwYTI5NmFiYjBiYmQ5MzMyY2JlNDBkOGZkYzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/430e7027a18870a296abb0bbd9332cbe40d8fdc0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/430e7027a18870a296abb0bbd9332cbe40d8fdc0",
      "tree": {
        "sha": "f3eb0ea165cce9123f47bed6ff3130cbb9bb97e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3eb0ea165cce9123f47bed6ff3130cbb9bb97e6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f3eb0ea165cce9123f47bed6ff3130cbb9bb97e6\nparent 225e213110602b4fd1d345167f5f92d26557f6c1\nauthor furszy <matiasfurszyfer@protonmail.com> 1684295709 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1688996837 -0300\n\nrefactor: index, decouple 'Init' from 'Start'\n\nSo indexes can be initialized without spawning\nthe sync thread.\n\nThis makes asynchronous indexes startup\npossible in the following commits.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmSsC+UACgkQXdI8zGhq\npiP/+RAAnCvGpF/Xt43FP9UGQ3grgoHis/dzs3WCOWmykp/RtzGR0zxTEcD7z2Ib\nUhja8bhLyj0xi+PAZcEfy9jAnM9vXGXoHuBHKH0K+6vyKG1+ynIrFN4Qic2oO2eC\nCsX1uIY8VQGaJUpitUHuJS8YTxC+9A9055Y+a1ujzS9MaKOuOuCiNRSmybVgl7sO\nSaPhnu+Sj+/V286zOvcNfeO2znl/pko/q39oI6s3PZzjG2ATP4Cffdsf0CGricVV\n02aS/T8SyvxE5ccAIg8PZzhjxE2YAD6Sw/ZEvu2Wxodc3/Paw5+XCTlmTtoFsK6x\nxOI2anDbyxnk34l2/HRF+M8CEN/RJhTYOhK5r+hH3UOTpAs6iZ2+5yWDU0nS0Ejo\ny/NhAWyoIcPKhUGxdddUEUikG+Ua2IO9Yz14NGdvrrv4PXYmglaxlGHKnoXGiMwP\nqmSqv1TzvrYllvr3lTibdZaK3frGSDZ4bAg1NWCIXEmC43Lzwupa5l7v0lAVh133\nBLLVyIxNJ9IKDhGiYULoRTu+Stj7gzmwnq2ZEr7/OGl1MGYY0uEC7E/rjxF1NpPn\ncNHUOTx+V3BIlqPPzy3m9bdY0oEwmPuCwQtjnftoCO9lQWU0qzaYEC+ZLf+d1eGS\nYT0CcsgDT5ew00Y0hngo8Vb7BACXfMjrLhHZKoZPNb6AxPhd8Bg=\n=szVt\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/225e213110602b4fd1d345167f5f92d26557f6c1",
          "sha": "225e213110602b4fd1d345167f5f92d26557f6c1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/225e213110602b4fd1d345167f5f92d26557f6c1"
        }
      ],
      "message": "refactor: index, decouple 'Init' from 'Start'\n\nSo indexes can be initialized without spawning\nthe sync thread.\n\nThis makes asynchronous indexes startup\npossible in the following commits.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-07-10T13:47:17Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-05-17T03:55:09Z"
      },
      "sha": "430e7027a18870a296abb0bbd9332cbe40d8fdc0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM4MmVmOTFlYWUzOGYzODVkNDA4YjA5NWViYmM4YTE4MGNlNTJlYmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c82ef91eae38f385d408b095ebbc8a180ce52ebb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c82ef91eae38f385d408b095ebbc8a180ce52ebb",
      "tree": {
        "sha": "3be2122ba97f94d141a6a9ef40846868828e8199",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3be2122ba97f94d141a6a9ef40846868828e8199"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3be2122ba97f94d141a6a9ef40846868828e8199\nparent 430e7027a18870a296abb0bbd9332cbe40d8fdc0\nauthor furszy <matiasfurszyfer@protonmail.com> 1686947541 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1688996837 -0300\n\nmake GetFirstStoredBlock assert that 'start_block' always has data\n\nAnd transfer the responsibility of verifying whether 'start_block'\nhas data or not to the caller.\n\nThis is because the 'GetFirstStoredBlock' function responsibility\nis to return the first block containing data. And the current\nimplementation can return 'start_block' when it has no data!. Which\nis misleading at least.\n\nEdge case behavior change:\nPreviously, if the block tip lacked data but all preceding blocks\ncontained data, there was no prune violation. And now, such\nscenario will result in a prune violation.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmSsC+UACgkQXdI8zGhq\npiNvbhAAndmzN4muPdNsosR/v8CM54TpDYqyqi11IRLKmTBLd0Ud0Glcvew5ZcUw\nsLfPA1IZtqFGSl8vT5ZyEm2NxMzM1miyZd5jHJEaCtAN20Ib//6g8gvTDHPi1xZt\nvzXIjpU+PxDX3BI+Exg2Bk2ROmq27EzGK7Uhj+3jxvJmct5uvKAMaqa2CT9XTNHD\noJTlSaJ+BOfIiFniaHGZi+/NRQ1ez9Y+bIhufdlUxUhaf81DitJUWbhQLJWYGZEv\nODWa6fcWRU7mxqfKlRb96wun9ieF0ulSG4+ISmiojTRvGb91X/f8YOe9/tfU4Tsg\nmG6kJ1Bo3s71knCZD/RmZYvQEOKSFvy33V5YqTZybBYWu9m8ItF89sMrw4ApfZ/O\nNA8XS+3Kotjmdned4iyJArk/YjHii7yJ09FwmsUZEk3x0f9k8g76LJKUQYjp7EV1\nfb/+9Itb43ZolbeSAQAoAZprH4knOl502bjHgy0GNcMbyzJdAV/J8E3gDU3RSdiW\nWoPQ+Ts9FLTHZxZe1AF2/DcmTsj3opbNDPJ70ympqHYQ749Qr6S6Mq5WWPpr6VuI\niO6EiCz5IY5l18eTrsXqeui00VpS1U9+764Q8tBMC5HP+5hXYpDYjeLe25EcI1na\ny3Omz1ufX5cc3A3YIAx064N1/XvzKNruiK8CAGBzkQjdIfZJgw4=\n=91YU\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/430e7027a18870a296abb0bbd9332cbe40d8fdc0",
          "sha": "430e7027a18870a296abb0bbd9332cbe40d8fdc0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/430e7027a18870a296abb0bbd9332cbe40d8fdc0"
        }
      ],
      "message": "make GetFirstStoredBlock assert that 'start_block' always has data\n\nAnd transfer the responsibility of verifying whether 'start_block'\nhas data or not to the caller.\n\nThis is because the 'GetFirstStoredBlock' function responsibility\nis to return the first block containing data. And the current\nimplementation can return 'start_block' when it has no data!. Which\nis misleading at least.\n\nEdge case behavior change:\nPreviously, if the block tip lacked data but all preceding blocks\ncontained data, there was no prune violation. And now, such\nscenario will result in a prune violation.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-07-10T13:47:17Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-06-16T20:32:21Z"
      },
      "sha": "c82ef91eae38f385d408b095ebbc8a180ce52ebb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJlYzg5ZjE5NzA5MzVkMjc2MzFiY2QxN2I3OTIzYTc5Y2RiMWVkYmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ec89f1970935d27631bcd17b7923a79cdb1edbb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2ec89f1970935d27631bcd17b7923a79cdb1edbb",
      "tree": {
        "sha": "387c97e5187eb1a6cfdf8b80838f62b2507b561d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/387c97e5187eb1a6cfdf8b80838f62b2507b561d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 387c97e5187eb1a6cfdf8b80838f62b2507b561d\nparent c82ef91eae38f385d408b095ebbc8a180ce52ebb\nauthor furszy <matiasfurszyfer@protonmail.com> 1684275546 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1688997050 -0300\n\nrefactor: simplify pruning violation check\n\nBy generalizing 'GetFirstStoredBlock' and implementing\n'CheckBlockDataAvailability' we can dedup code and\navoid repeating work when multiple indexes are enabled.\nE.g. get the oldest block across all indexes and\nperform the pruning violation check from that point\nup to the tip only once (this feature is being introduced\nin a follow-up commit).\n\nThis commit shouldn't change behavior in any way.\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmSsDLoACgkQXdI8zGhq\npiPGmxAAz3+yTtrP9cO624YkRQbZgWTtHQz/vIQloGAv+NRuysfATAUy5Qe6Yooi\n8nEvRZCjko2XFyScTZvgrFr12ELyQPUKgO82EXOzptgFbGOjUpSDX2WSj3vVyval\n8zM3OaG88UyhDBszd/NhyfsixL1sUr77m5AgaogkMMo215wwb8ZKSS2GLBtxOuKh\niv2AIvVjGV7ffuVQVtxvVTdenrEtUpsDZYTkujzaB0ocmOBy4txpaTT97/7kJ4NW\n4QaXYi1ghHC778i032P7dDx1rXDf2hkO+0oCZAXxAMbmu45dFtzqQs54sWDS0fl+\nnwSVgjekWlr9gDFB+kqk4AVreGHcqHMrTYKfbI12eHXNxOtc7nVqxfscioDgrxrs\nkrLhVbEcQB3OZsG46gh5+MuGw/CEFP72H1QZMUsZvKjU9YI6OTBLGI5umQqFacOc\nyv+2cI+ZdubSIiLqME6o0RFggOvU/T6kfKFJF42TSfADptAwDH68j7x7JAGMkQG1\nRG5t4nI7kNfV+RIu8UZiMqcv0eFEt782TXTE9nx04aJ+mpV7DP8YSZIPYQqQz9Ao\nGw/ZCtRJTLS4fiUXsRjkiz/JYpMjGUivp96cW+/tw0jgI8evmk0W3mmOJPUD791m\ndJK/kN4NmlLrAt6oY7GklEtZ+Io0EuUuqRhxyrbckgJjpj/1Rhk=\n=VdIS\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c82ef91eae38f385d408b095ebbc8a180ce52ebb",
          "sha": "c82ef91eae38f385d408b095ebbc8a180ce52ebb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c82ef91eae38f385d408b095ebbc8a180ce52ebb"
        }
      ],
      "message": "refactor: simplify pruning violation check\n\nBy generalizing 'GetFirstStoredBlock' and implementing\n'CheckBlockDataAvailability' we can dedup code and\navoid repeating work when multiple indexes are enabled.\nE.g. get the oldest block across all indexes and\nperform the pruning violation check from that point\nup to the tip only once (this feature is being introduced\nin a follow-up commit).\n\nThis commit shouldn't change behavior in any way.\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-07-10T13:50:50Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-05-16T22:19:06Z"
      },
      "sha": "2ec89f1970935d27631bcd17b7923a79cdb1edbb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZjYmRhZWVmNGQ1YTYzZTNlNWI0NzljNmZjYWQ3MzBlYjg2ZmI5MjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fcbdaeef4d5a63e3e5b479c6fcad730eb86fb923",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fcbdaeef4d5a63e3e5b479c6fcad730eb86fb923",
      "tree": {
        "sha": "e266b0cab828adc38232b388fd6bd3ff0538bdd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e266b0cab828adc38232b388fd6bd3ff0538bdd7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e266b0cab828adc38232b388fd6bd3ff0538bdd7\nparent 2ec89f1970935d27631bcd17b7923a79cdb1edbb\nauthor furszy <matiasfurszyfer@protonmail.com> 1684350415 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1688997050 -0300\n\ninit: don't start indexes sync thread prematurely\n\nBy moving the 'StartIndexes()' call into the 'initload'\nthread, we can remove the threads active wait. Optimizing\nthe available resources.\n\nThe only difference with the current state is that now the\nindexes threads will only be started when they can process\nwork and not before it.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmSsDLoACgkQXdI8zGhq\npiOwwQ//VrP88trbmmtqJLMovXxvSvwiGx0yCNGkpYVhBBWR6kC01x0F/NKbH3RF\nyrR6VaroEnr9YYb2EShG5ZvctBiJ8S6Sjh3fyUEoXc7oKPLNdslMfQOkU0q/Jwe0\nU0R2QzFq5mYepE/WlE32beHaudW8N4A5FLTW2B855rrHcRKvz1nkzXzpBMlHaWAT\n/plBfSRyNM7P9HnYBY6sONPuyrpYPrVUoOyiEO/HxrXkA5qdiShKmRAoCCUporut\nr7NINDP5Rw51nLSpPy5elDfhdBViILE8JfJcXiSiml9HJKbjXL9CWSbTPT1Cfyu2\nA7R//NAT2AVBkKnpQ31O5CBOWSg/iF+lUZixAdfrs5blZ3+j2ImMdhlmuYXjN4r4\nXpIRBXb4jAdlED4gHYUpEwCnjMeaOJ+Rsc/hUaQl0IOUMsMq7jlYm+M9Y+e8w7kV\nfVbeOgok1WGXLE46sOl08wvBAXG8ZFE3mGfXzRky4zbkCXOIy6w+ggLiMo8GpviO\n0hzYRVAXVY4Xdne4ATlOgFMxP3LOEwroC53h5dvNa90oaZc59H8FUMLLiBeENdI2\n8sGoB1Jlq0shlBr/X3fDSetJgn9pM7X+sFrgOswHMTtuQzyDem7fRgZul1/qhGec\n9IJ0Iv721KJc5u1KFxhbObL4o+D30/ywIy/nm/XiNdutb4k4Ktk=\n=yHok\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ec89f1970935d27631bcd17b7923a79cdb1edbb",
          "sha": "2ec89f1970935d27631bcd17b7923a79cdb1edbb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2ec89f1970935d27631bcd17b7923a79cdb1edbb"
        }
      ],
      "message": "init: don't start indexes sync thread prematurely\n\nBy moving the 'StartIndexes()' call into the 'initload'\nthread, we can remove the threads active wait. Optimizing\nthe available resources.\n\nThe only difference with the current state is that now the\nindexes threads will only be started when they can process\nwork and not before it.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-07-10T13:50:50Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-05-17T19:06:55Z"
      },
      "sha": "fcbdaeef4d5a63e3e5b479c6fcad730eb86fb923"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNhOTFjMjQ0ZWYxYmE3ZWFjNjY0M2Q2NmE1ZmM1NmQzYTJhOGI1NTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "tree": {
        "sha": "425fd02022aac33a86087392dd201b5d9f1836cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/425fd02022aac33a86087392dd201b5d9f1836cc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 425fd02022aac33a86087392dd201b5d9f1836cc\nparent fcbdaeef4d5a63e3e5b479c6fcad730eb86fb923\nauthor furszy <matiasfurszyfer@protonmail.com> 1684272935 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1688997050 -0300\n\nindex: verify blocks data existence only once\n\nAt present, during init, we traverse the chain (once per index)\nto confirm that all necessary blocks to sync each index up to\nthe current tip are present.\n\nTo make the process more efficient, we can fetch the oldest block\nfrom the indexers and perform the chain data existence check from\nthat point only once.\n\nThis also moves the pruning violation check to the end of the\n'loadinit' thread, which is where the reindex, block loading and\nchain activation processes happen.\n\nMaking the node's startup process faster, allowing us to remove\nthe global g_indexes_ready_to_sync flag, and enabling the\nexecution of the pruning violation verification even when the\nreindex or reindex-chainstate flags are enabled (which has being\nskipped so far).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmSsDLoACgkQXdI8zGhq\npiMSEQ/9GBVxti8u+8PqoWfV4zssyJVLPVy4JZ6vmNIndqVqY0tiM2HIPY2Al2Ow\nAmTlRxLQimr7vL9thaBxSpsdA5IRSrNoAa94pRMHOD/RHf39/Ker8MHp6viL7x3y\nQfD5id2YFuBtXIduYiyW/RIbhU9WcQBaezC6HSexcUhktxalXwqJE5eq2FSCPWDS\nmly729ZYh1Z7axIEEukaGjtasnsLx58UkbCfPt40CoEwCZwCwaUwwJ5Fy9/1+U9C\nyz1+TW8ikXcKnKVhx45D+NQilXsAxmfMSd2x9OEbEsId9kaQTbemF1iepoRRJtfF\nEpRhZY3kVHpFQtP07PZ2rk3KFhCZcbe65mpZCJAJEmZOmnqykEZf4FRd/CL6JGCX\newh8RuflRcMSx45kZXGKdApQK0MEgO7PqpOX8MsCMaSkQuuCx24/R4tnLY6r3kwx\nB15wdQvM9pJSI/KpufRydBT+G2OaXrqgkPluVRA2ZQtLrwi1EEL1TOPSXeLExkLV\nyC+73cqbT7sJwTyadoMic8OgJVfAkLiD4XQedeOVe0x5vC82iTkCVbJ1p9ZDEO6u\nyGD1H7rAY7JHK/oV4pEIEclWSWRclaM2/sltA/B7yREsBkcq2fna/aqmQcFr3WZy\n7OT10Az/lQ/+pSdKs4m7oZAchFqi5eyi+f5XIWQFhriE5YGG7VI=\n=QB9r\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fcbdaeef4d5a63e3e5b479c6fcad730eb86fb923",
          "sha": "fcbdaeef4d5a63e3e5b479c6fcad730eb86fb923",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fcbdaeef4d5a63e3e5b479c6fcad730eb86fb923"
        }
      ],
      "message": "index: verify blocks data existence only once\n\nAt present, during init, we traverse the chain (once per index)\nto confirm that all necessary blocks to sync each index up to\nthe current tip are present.\n\nTo make the process more efficient, we can fetch the oldest block\nfrom the indexers and perform the chain data existence check from\nthat point only once.\n\nThis also moves the pruning violation check to the end of the\n'loadinit' thread, which is where the reindex, block loading and\nchain activation processes happen.\n\nMaking the node's startup process faster, allowing us to remove\nthe global g_indexes_ready_to_sync flag, and enabling the\nexecution of the pruning violation verification even when the\nreindex or reindex-chainstate flags are enabled (which has being\nskipped so far).",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-07-10T13:50:50Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-05-16T21:35:35Z"
      },
      "sha": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9775212677,
      "node_id": "HRFPE_lADOABII585ldbL0zwAAAAJGpeiF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9775212677",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T13:52:22Z"
    },
    {
      "event": "reviewed",
      "id": 1522158509,
      "node_id": "PRR_kwDOABII585aukut",
      "url": null,
      "actor": null,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback, thanks Marco and TheCharlatan.\r\n\r\nChanges:\r\n* Fixed bug in one of the intermediate commits (per [comment](https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1258201606)).\r\n* Inlined an if/else in one of the intermediate commits (per  [comment](https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1257458241)).",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1522158509",
      "submitted_at": "2023-07-10T13:57:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "reviewed",
      "id": 1522224733,
      "node_id": "PRR_kwDOABII585au05d",
      "url": null,
      "actor": null,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550. Just rebase and suggested changes since last review (Start return check, and code simplification)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1522224733",
      "submitted_at": "2023-07-10T14:28:45Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "review_requested",
      "id": 9775670453,
      "node_id": "RRE_lADOABII585ldbL0zwAAAAJGrOS1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9775670453",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T14:28:51Z",
      "requested_reviewer": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1522386920,
      "node_id": "PRR_kwDOABII585avcfo",
      "url": null,
      "actor": null,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#pullrequestreview-1522386920",
      "submitted_at": "2023-07-10T15:44:31Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
    },
    {
      "event": "merged",
      "id": 9776744675,
      "node_id": "ME_lADOABII585ldbL0zwAAAAJGvUjj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9776744675",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ef29d5d7e239b42269dd22ea94a709b5e4ceb5e5",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef29d5d7e239b42269dd22ea94a709b5e4ceb5e5",
      "created_at": "2023-07-10T15:56:33Z"
    },
    {
      "event": "closed",
      "id": 9776744716,
      "node_id": "CE_lADOABII585ldbL0zwAAAAJGvUkM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9776744716",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T15:56:33Z"
    },
    {
      "event": "referenced",
      "id": 9787772014,
      "node_id": "REFE_lADOABII585ldbL0zwAAAAJHZYxu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9787772014",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e253568da8dc3693ad99aee260276233245e3d77",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e253568da8dc3693ad99aee260276233245e3d77",
      "created_at": "2023-07-11T13:47:19Z"
    },
    {
      "event": "referenced",
      "id": 9803627299,
      "node_id": "REFE_lADOABII585ldbL0zwAAAAJIV3sj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9803627299",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "efd440400044ce9423a6a95328023bec187b66c8",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/efd440400044ce9423a6a95328023bec187b66c8",
      "created_at": "2023-07-12T20:16:00Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 9879870533,
      "node_id": "HRDE_lADOABII585ldbL0zwAAAAJM4txF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9879870533",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T23:00:15Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191329811",
      "pull_request_review_id": 1422846165,
      "id": 1191329811,
      "node_id": "PRRC_kwDOABII585HAkAT",
      "diff_hunk": "@@ -390,7 +385,11 @@ IndexSummary BaseIndex::GetSummary() const\n     IndexSummary summary{};\n     summary.name = GetName();\n     summary.synced = m_synced;\n-    summary.best_block_height = m_best_block_index ? m_best_block_index.load()->nHeight : 0;\n+    if (m_best_block_index) {\n+        const CBlockIndex* pindex = m_best_block_index.load();",
      "path": "src/index/base.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "86752e0cc5bc48f3d4ac1cd07835c37daf078d6a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"index: verify blocks data existence only once\" (86752e0cc5bc48f3d4ac1cd07835c37daf078d6a)\r\n\r\nNot important in practice, but since `m_best_block_index` is an atomic variable, it would look a little better to retrieve it atomically with:\r\n\r\n```\r\n    if (const CBlockIndex* pindex = m_best_block_index.load()) {\r\n```",
      "created_at": "2023-05-11T15:09:55Z",
      "updated_at": "2023-05-11T16:10:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1191329811",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191329811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": 388,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 389,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191383733",
      "pull_request_review_id": 1422846165,
      "id": 1191383733,
      "node_id": "PRRC_kwDOABII585HAxK1",
      "diff_hunk": "@@ -1562,32 +1562,55 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n                                      chainman, *node.mempool, ignores_incoming_txs);\n     RegisterValidationInterface(node.peerman.get());\n \n-    // ********************************************************* Step 8: start indexers\n+    // ********************************************************* Step 8: init indexers\n+\n+    // Cache the first block required by the indexes\n+    const CBlockIndex* indexes_start_block{nullptr};\n+    std::string older_index_name;\n+    const auto& update_indexes_start_block = [&](const BaseIndex* index){\n+        const IndexSummary& summary = index->GetSummary();\n+        if (summary.synced) return;\n+        const CBlockIndex* pindex = WITH_LOCK(::cs_main, return chainman.ActiveChain()[summary.best_block_height]);\n+        // indexes are always initialized to the active chain last common block\n+        assert(pindex->GetBlockHash() == summary.best_block_hash);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "86752e0cc5bc48f3d4ac1cd07835c37daf078d6a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"index: verify blocks data existence only once\" (86752e0cc5bc48f3d4ac1cd07835c37daf078d6a)\r\n\r\nIn the case where the bitcoind datadir is being newly created and the `LoadChainState` call above doesn't set a chain tip, `pindex` will be null here and this line will segfault. It should be possible to handle this with `if (!pindex) return`. This is causing CI errors (https://cirrus-ci.com/task/4539645451567104) currently",
      "created_at": "2023-05-11T15:49:13Z",
      "updated_at": "2023-05-11T16:10:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1191383733",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191383733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1575,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191390577",
      "pull_request_review_id": 1422846165,
      "id": 1191390577,
      "node_id": "PRRC_kwDOABII585HAy1x",
      "diff_hunk": "@@ -725,6 +725,39 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n+    bool hasDataFromTipDown(const CBlockIndex* start_block) override {",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "1341793b928ba81205b1cea11fdbd52fe6c3e869",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"indexes, refactor: Remove index prune_violation code\" (1341793b928ba81205b1cea11fdbd52fe6c3e869)\r\n\r\nNote for reviewers: code in this function is moved from the BaseIndex::Init function with minor changes. An easy way to review it is to look at the before and after versions in a side by side diff.",
      "created_at": "2023-05-11T15:54:34Z",
      "updated_at": "2023-05-11T16:10:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1191390577",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191390577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 728,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191396717",
      "pull_request_review_id": 1422846165,
      "id": 1191396717,
      "node_id": "PRRC_kwDOABII585HA0Vt",
      "diff_hunk": "@@ -725,6 +725,39 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n+    bool hasDataFromTipDown(const CBlockIndex* start_block) override {",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "1341793b928ba81205b1cea11fdbd52fe6c3e869",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"indexes, refactor: Remove index prune_violation code\" (1341793b928ba81205b1cea11fdbd52fe6c3e869)\r\n\r\nIt would probably make more sense to make this method into a standalone function `bool ChainDataFromTipDown(ChainstateManager& chainman, const CBlockIndex& start_block)` function in someplace like `src/node/chainstate.cpp` than to add it to interfaces::Chain if it won't be called by chain clients like wallets or indexes.",
      "created_at": "2023-05-11T15:59:32Z",
      "updated_at": "2023-05-11T16:10:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1191396717",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191396717"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 728,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198165818",
      "pull_request_review_id": 1433254608,
      "id": 1198165818,
      "node_id": "PRRC_kwDOABII585Hao86",
      "diff_hunk": "@@ -1665,13 +1655,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n #endif\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(fs::PathFromString(strFile));\n-    }\n+    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [&chainman, &args, &node] {\n+        std::vector<fs::path> vImportFiles;\n+        for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n+            vImportFiles.push_back(fs::PathFromString(strFile));\n+        }\n \n-    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+\n+        // Start indexers",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "ca3041984cf3665e27b6783c923ab1c32682500a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"init: start indexes after the loadblk thread finishes\" (ca3041984cf3665e27b6783c923ab1c32682500a)\r\n\r\nCould we change \"indexers\" to \"indexes\" in all new code? I don't think distinguishing between an \"index\" and \"indexer\" really clarifies anything, and the word \"indexers\" seems a little odd and unexpected.",
      "created_at": "2023-05-18T18:35:25Z",
      "updated_at": "2023-05-18T19:16:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198165818",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198165818"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1666,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198184049",
      "pull_request_review_id": 1433254608,
      "id": 1198184049,
      "node_id": "PRRC_kwDOABII585HatZx",
      "diff_hunk": "@@ -1665,13 +1655,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n #endif\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(fs::PathFromString(strFile));\n-    }\n+    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [&chainman, &args, &node] {\n+        std::vector<fs::path> vImportFiles;\n+        for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n+            vImportFiles.push_back(fs::PathFromString(strFile));\n+        }\n \n-    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+\n+        // Start indexers\n+        if (!StartIndexes(node)) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "ca3041984cf3665e27b6783c923ab1c32682500a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"init: start indexes after the loadblk thread finishes\" (ca3041984cf3665e27b6783c923ab1c32682500a)\r\n\r\nOne side-effect of this change is that now if there is a \"best block of the index goes beyond pruned data\" error, bitcoind successfully starts and returns 0 then exits, where previously it could fail early and actually return an error code.\r\n\r\nThat aspect of the previous behavior seems better to me, though I'm not sure what the tradeoffs are. \r\n\r\nDo you think the the main benefit of this commit is cleaner code, and the worse error detection a side effect? Or are there other benefits to this commit?\r\n\r\nI'm thinking the PR is doing a lot of things and maybe it would be good to split into smaller PRs where possible. Especially if the smaller PRs can be unambiguous improvements.",
      "created_at": "2023-05-18T18:48:33Z",
      "updated_at": "2023-05-18T19:16:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198184049",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198184049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1683,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198191133",
      "pull_request_review_id": 1433254608,
      "id": 1198191133,
      "node_id": "PRRC_kwDOABII585HavId",
      "diff_hunk": "@@ -216,8 +216,13 @@ class BlockManager\n     //! Returns last CBlockIndex* that is a checkpoint\n     const CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    //! Returns 'lower_block' if all blocks up to that point are available in disk, otherwise returns the first block that is not pruned in the upper-lower range.\n+    //! If 'lower_block=nullptr': verify blocks availability up to the genesis block.\n+    //! Returns nullptr if 'lower_block' is not an 'upper_block' ancestry.\n+    const CBlockIndex* IsBlockDataAvailable(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n     //! Find the first block that is not pruned\n-    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& upper_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 11,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "704c9e4cf67468708db655226a78489b92ef0523",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"index: simplify pruning violation check\" (704c9e4cf67468708db655226a78489b92ef0523)\r\n\r\nWould be good to make this declaration use the same argument name as the definition which is `BlockManager::GetFirstStoredBlock(const CBlockIndex& start_block)`",
      "created_at": "2023-05-18T18:53:45Z",
      "updated_at": "2023-05-18T19:16:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198191133",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198191133"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198193156",
      "pull_request_review_id": 1433254608,
      "id": 1198193156,
      "node_id": "PRRC_kwDOABII585HavoE",
      "diff_hunk": "@@ -106,36 +106,16 @@ bool BaseIndex::Init()\n     // via `BlockConnected` signals until, possibly, the next restart.\n     m_synced = m_best_block_index.load() == active_chain.Tip();\n     if (!m_synced) {\n-        bool prune_violation = false;\n-        if (!m_best_block_index) {\n-            // index is not built yet\n-            // make sure we have all block data back to the genesis\n-            prune_violation = m_chainstate->m_blockman.GetFirstStoredBlock(*active_chain.Tip()) != active_chain.Genesis();\n+        const CBlockIndex* start_block = m_best_block_index.load();\n+        if (!start_block) start_block = active_chain.Genesis();\n+        if (!active_chain.Contains(start_block)) {\n+            // if the bestblock is not part of the mainchain, find the fork\n+            // so we can make sure we have all data down to the fork\n+            start_block = active_chain.FindFork(start_block);\n         }\n-        // in case the index has a best block set and is not fully synced\n-        // check if we have the required blocks to continue building the index\n-        else {\n-            const CBlockIndex* block_to_test = m_best_block_index.load();\n-            if (!active_chain.Contains(block_to_test)) {\n-                // if the bestblock is not part of the mainchain, find the fork\n-                // and make sure we have all data down to the fork\n-                block_to_test = active_chain.FindFork(block_to_test);\n-            }\n-            const CBlockIndex* block = active_chain.Tip();\n-            prune_violation = true;\n-            // check backwards from the tip if we have all block data until we reach the indexes bestblock\n-            while (block_to_test && block && (block->nStatus & BLOCK_HAVE_DATA)) {\n-                if (block_to_test == block) {\n-                    prune_violation = false;\n-                    break;\n-                }\n-                // block->pprev must exist at this point, since block_to_test is part of the chain\n-                // and thus must be encountered when going backwards from the tip\n-                assert(block->pprev);\n-                block = block->pprev;\n-            }\n-        }\n-        if (prune_violation) {\n+\n+        // make sure we have all block data back to the start block\n+        if (m_chainstate->m_blockman.IsBlockDataAvailable(*active_chain.Tip(), start_block) != start_block) {",
      "path": "src/index/base.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "704c9e4cf67468708db655226a78489b92ef0523",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"index: simplify pruning violation check\" (704c9e4cf67468708db655226a78489b92ef0523)\r\n\r\nCould the commit message clarify if any behavior is changing here? Would be good to label it a refactoring and say it does not change behavior if nothing is changing, and say what is changing otherwise.\r\n\r\nAlso, it seems like new code that is added here just gets moved / deleted later in the PR in the last commit \"index: verify blocks data existence only once\" (dd9bc393ebd4ba915ca94991390b6e98d29dcfaf).\r\n\r\nI could be missing something, but it seems like the PR would be easier to review if this commit only added the `IsBlockDataAvailable` function, the other commit started calling it, so reviewers would only need to review one new version of the pruned data check, instead of reviewing a temporary version that gets thrown away and then another final version.",
      "created_at": "2023-05-18T18:55:54Z",
      "updated_at": "2023-05-18T19:16:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198193156",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198193156"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198195900",
      "pull_request_review_id": 1433254608,
      "id": 1198195900,
      "node_id": "PRRC_kwDOABII585HawS8",
      "diff_hunk": "@@ -119,6 +116,16 @@ bool BaseIndex::Init()\n             return InitError(strprintf(Untranslated(\"%s best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\"), GetName()));\n         }\n     }\n+\n+    // Child init\n+    if (!CustomInit(start_block ? std::make_optional(interfaces::BlockKey{start_block->GetBlockHash(), start_block->nHeight}) : std::nullopt)) {",
      "path": "src/index/base.cpp",
      "position": 67,
      "original_position": 22,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "21812970cc56191e18f96692e47f00ed881bd596",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"index: prevent race by calling 'CustomInit' prior setting 'm_synced' flag\" (21812970cc56191e18f96692e47f00ed881bd596)\r\n\r\nI think it would be nice to split this commit off into a separate PR is possible, so we have a minimal bugfix that could backported (and also be easier to understand)",
      "created_at": "2023-05-18T18:59:05Z",
      "updated_at": "2023-05-18T19:16:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198195900",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198195900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 110,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198198410",
      "pull_request_review_id": 1433254608,
      "id": 1198198410,
      "node_id": "PRRC_kwDOABII585Haw6K",
      "diff_hunk": "@@ -1577,6 +1577,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.indexers.insert(g_coin_stats_index.get());\n     }\n \n+    // Init all indexers\n+    for (auto indexer : node.indexers) indexer->Init();",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "26bd60eafc42484d80d5dfef0fa0abb77e7817ce",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: index, decouple 'Init' from 'Start'\" (26bd60eafc42484d80d5dfef0fa0abb77e7817ce)\r\n\r\nInit return value is ignored. I think this needs to return false if it fails. Would also be good to mark Init declaration with `[[nodiscard]]`",
      "created_at": "2023-05-18T19:02:00Z",
      "updated_at": "2023-05-18T19:16:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198198410",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198198410"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1581,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199013812",
      "pull_request_review_id": 1434512490,
      "id": 1199013812,
      "node_id": "PRRC_kwDOABII585Hd3-0",
      "diff_hunk": "@@ -1665,13 +1655,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n #endif\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(fs::PathFromString(strFile));\n-    }\n+    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [&chainman, &args, &node] {\n+        std::vector<fs::path> vImportFiles;\n+        for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n+            vImportFiles.push_back(fs::PathFromString(strFile));\n+        }\n \n-    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+\n+        // Start indexers",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "ca3041984cf3665e27b6783c923ab1c32682500a",
      "in_reply_to_id": 1198165818,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure, will change it. I used indexers to try to differentiate them from block indexes but guess that its an odd term in English.",
      "created_at": "2023-05-19T14:14:20Z",
      "updated_at": "2023-05-19T14:14:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199013812",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199013812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1666,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199080037",
      "pull_request_review_id": 1434618666,
      "id": 1199080037,
      "node_id": "PRRC_kwDOABII585HeIJl",
      "diff_hunk": "@@ -1665,13 +1655,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n #endif\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(fs::PathFromString(strFile));\n-    }\n+    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [&chainman, &args, &node] {\n+        std::vector<fs::path> vImportFiles;\n+        for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n+            vImportFiles.push_back(fs::PathFromString(strFile));\n+        }\n \n-    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+\n+        // Start indexers\n+        if (!StartIndexes(node)) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "ca3041984cf3665e27b6783c923ab1c32682500a",
      "in_reply_to_id": 1198184049,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Do you think the the main benefit of this commit is cleaner code, and the worse error detection a side effect? Or are there other benefits to this commit?\r\n\r\nAside from the cleaner code (which I think that it's salable on its own), I see maintainability and test coverage benefits with the global flag removal. Also, the indexes threads active-wait isn't that good in terms of processors context switching (the index threads are waking up every 0.5s and the reindex process could take a while).\r\nPlus, since #25193, we skip the pruning violation checks prior reindex, while here we are recovering those checks too.\r\n\r\nFurthermore, it's more accurate to conduct the pruning violations checks after the \"loadblk\" thread execution. This is because that thread imports data from external sources and activates the best chain (only there we know which is the node's best chain).\r\nMeaning that, with the current code, we could have performed the pruning violations checks on a fork chain if the import thread encounters another best chain (and not perform any pruning check on the real active chain). Which could lead to a similar situation as there would be no init error if something isn't correct after thread import execution.\r\n\r\nSaid that, talking about the init returned error, maybe we could cache the node shutdown reason and return it even if the error was post-init?. Will give it a look.\r\n\r\n\r\n> I'm thinking the PR is doing a lot of things and maybe it would be good to split into smaller PRs where possible. Especially if the smaller PRs can be unambiguous improvements.\r\n\r\nYeah sure.\r\nI usually try to not split a PR too much (when it's scoped under a certain area) to not loose review power and coordinate better between ourselves but.. I agree that this started targeting something and now grew up a bit longer.",
      "created_at": "2023-05-19T15:13:34Z",
      "updated_at": "2023-05-20T04:07:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199080037",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199080037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1683,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199268910",
      "pull_request_review_id": 1434924256,
      "id": 1199268910,
      "node_id": "PRRC_kwDOABII585He2Qu",
      "diff_hunk": "@@ -216,8 +216,13 @@ class BlockManager\n     //! Returns last CBlockIndex* that is a checkpoint\n     const CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    //! Returns 'lower_block' if all blocks up to that point are available in disk, otherwise returns the first block that is not pruned in the upper-lower range.\n+    //! If 'lower_block=nullptr': verify blocks availability up to the genesis block.\n+    //! Returns nullptr if 'lower_block' is not an 'upper_block' ancestry.\n+    const CBlockIndex* IsBlockDataAvailable(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 7,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "704c9e4cf67468708db655226a78489b92ef0523",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this is possible to trigger with the way the function is used, but if `upper_block` already has `NO_DATA`, it would return that block, maybe `nullptr` would be more natural? (also applies to `GetFirstStoredBlock`).\r\n\r\nAlso, the name sounds like a boolean function, maybe something like `CheckBlockDataAvailability()` would be better?",
      "created_at": "2023-05-19T18:42:19Z",
      "updated_at": "2023-05-19T21:36:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199268910",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199268910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199338711",
      "pull_request_review_id": 1434924256,
      "id": 1199338711,
      "node_id": "PRRC_kwDOABII585HfHTX",
      "diff_hunk": "@@ -119,6 +116,16 @@ bool BaseIndex::Init()\n             return InitError(strprintf(Untranslated(\"%s best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\"), GetName()));\n         }\n     }\n+\n+    // Child init\n+    if (!CustomInit(start_block ? std::make_optional(interfaces::BlockKey{start_block->GetBlockHash(), start_block->nHeight}) : std::nullopt)) {",
      "path": "src/index/base.cpp",
      "position": 67,
      "original_position": 22,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "21812970cc56191e18f96692e47f00ed881bd596",
      "in_reply_to_id": 1198195900,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch! Is my understanding correct that this race cannot actually happen in practice on master right now, because the indexes are set up (`Init()`) by the init thread, which starts the networking and loadblk threads only later - so I can't see from which other thread `BlockConnected` signals could come from at this stage. However, once index initialization is deferred to the loadblk thread in ca3041984cf3665e27b6783c923ab1c32682500a, I think this race could easily happen. \r\n (this might affect the decision whether backport is necessary).",
      "created_at": "2023-05-19T20:20:58Z",
      "updated_at": "2023-05-19T21:36:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199338711",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199338711"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 110,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199624849",
      "pull_request_review_id": 1435416979,
      "id": 1199624849,
      "node_id": "PRRC_kwDOABII585HgNKR",
      "diff_hunk": "@@ -1665,13 +1655,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n #endif\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(fs::PathFromString(strFile));\n-    }\n+    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [&chainman, &args, &node] {\n+        std::vector<fs::path> vImportFiles;\n+        for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n+            vImportFiles.push_back(fs::PathFromString(strFile));\n+        }\n \n-    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+\n+        // Start indexers\n+        if (!StartIndexes(node)) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "ca3041984cf3665e27b6783c923ab1c32682500a",
      "in_reply_to_id": 1198184049,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Said that, talking about the init returned error, maybe we could cache the node shutdown reason and return it even if the error was post-init?. Will give it a look.\r\n\r\nFollowing-up this, pushed #27708. Which will let us keep the same behavior as we have now:\r\n\r\nThe user, same as the functional tests, shouldn't notice any difference between running the pruning violation checks in the load-blk thread vs init thread with it. We will continue erroring out after a pruning violation with an `EXIT_FAILURE` code. Making the `feature_index_prune.py` changes in ca3041984cf3665e27b6783c923ab1c32682500a no longer needed.",
      "created_at": "2023-05-20T15:18:55Z",
      "updated_at": "2023-05-20T15:18:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199624849",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199624849"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1683,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199788121",
      "pull_request_review_id": 1435558536,
      "id": 1199788121,
      "node_id": "PRRC_kwDOABII585Hg1BZ",
      "diff_hunk": "@@ -216,8 +216,13 @@ class BlockManager\n     //! Returns last CBlockIndex* that is a checkpoint\n     const CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    //! Returns 'lower_block' if all blocks up to that point are available in disk, otherwise returns the first block that is not pruned in the upper-lower range.\n+    //! If 'lower_block=nullptr': verify blocks availability up to the genesis block.\n+    //! Returns nullptr if 'lower_block' is not an 'upper_block' ancestry.\n+    const CBlockIndex* IsBlockDataAvailable(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n     //! Find the first block that is not pruned\n-    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& upper_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 11,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "704c9e4cf67468708db655226a78489b92ef0523",
      "in_reply_to_id": 1198191133,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah thx, this is a remanent from a previous version.",
      "created_at": "2023-05-21T15:42:13Z",
      "updated_at": "2023-05-21T15:42:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199788121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199788121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199796712",
      "pull_request_review_id": 1435566027,
      "id": 1199796712,
      "node_id": "PRRC_kwDOABII585Hg3Ho",
      "diff_hunk": "@@ -106,36 +106,16 @@ bool BaseIndex::Init()\n     // via `BlockConnected` signals until, possibly, the next restart.\n     m_synced = m_best_block_index.load() == active_chain.Tip();\n     if (!m_synced) {\n-        bool prune_violation = false;\n-        if (!m_best_block_index) {\n-            // index is not built yet\n-            // make sure we have all block data back to the genesis\n-            prune_violation = m_chainstate->m_blockman.GetFirstStoredBlock(*active_chain.Tip()) != active_chain.Genesis();\n+        const CBlockIndex* start_block = m_best_block_index.load();\n+        if (!start_block) start_block = active_chain.Genesis();\n+        if (!active_chain.Contains(start_block)) {\n+            // if the bestblock is not part of the mainchain, find the fork\n+            // so we can make sure we have all data down to the fork\n+            start_block = active_chain.FindFork(start_block);\n         }\n-        // in case the index has a best block set and is not fully synced\n-        // check if we have the required blocks to continue building the index\n-        else {\n-            const CBlockIndex* block_to_test = m_best_block_index.load();\n-            if (!active_chain.Contains(block_to_test)) {\n-                // if the bestblock is not part of the mainchain, find the fork\n-                // and make sure we have all data down to the fork\n-                block_to_test = active_chain.FindFork(block_to_test);\n-            }\n-            const CBlockIndex* block = active_chain.Tip();\n-            prune_violation = true;\n-            // check backwards from the tip if we have all block data until we reach the indexes bestblock\n-            while (block_to_test && block && (block->nStatus & BLOCK_HAVE_DATA)) {\n-                if (block_to_test == block) {\n-                    prune_violation = false;\n-                    break;\n-                }\n-                // block->pprev must exist at this point, since block_to_test is part of the chain\n-                // and thus must be encountered when going backwards from the tip\n-                assert(block->pprev);\n-                block = block->pprev;\n-            }\n-        }\n-        if (prune_violation) {\n+\n+        // make sure we have all block data back to the start block\n+        if (m_chainstate->m_blockman.IsBlockDataAvailable(*active_chain.Tip(), start_block) != start_block) {",
      "path": "src/index/base.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "704c9e4cf67468708db655226a78489b92ef0523",
      "in_reply_to_id": 1198193156,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Could the commit message clarify if any behavior is changing here? Would be good to label it a refactoring and say it does not change behavior if nothing is changing, and say what is changing otherwise.\r\n\r\nyeah sure. https://github.com/bitcoin/bitcoin/commit/704c9e4cf67468708db655226a78489b92ef0523 has no behavior change.\r\n\r\n> Also, it seems like new code that is added here just gets moved / deleted later in the PR in the last commit \"index: verify blocks data existence only once\" (https://github.com/bitcoin/bitcoin/commit/dd9bc393ebd4ba915ca94991390b6e98d29dcfaf).\r\n> \r\n> I could be missing something, but it seems like the PR would be easier to review if this commit only added the IsBlockDataAvailable function, the other commit started calling it, so reviewers would only need to review one new version of the pruned data check, instead of reviewing a temporary version that gets thrown away and then another final version.\r\n\r\nHmm, I actually made it in this way to try to make review easier.\r\n\r\nThe idea was that 704c9e4 makes current violation code much more concise with no behavior change (introducing this new function which re-purposes another existent function), then dd9bc393 moves it to init with a slightly difference: instead of calling `IsBlockDataAvailable` once per index, it's called once for all the indexes (so the diff is on init fetching the oldest block index from the indexers and then calling `IsBlockDataAvailable` with it).\r\n\r\nI thought that was going to be easier to review in this way than moving + changing the entire pruning violation check at once in a single commit. I mean, at least for me, it seemed good to let us verify that the conciser pruning violation code doesn't introduces any behavior changes first (at this point reviewers should be ok with the \"new\" process), then move that to init and call it with the the oldest indexer block index (which is the behavior change).\r\n\r\nBut let me know if this doesn't makes sense for you, and you still prefer the all-in-one way. If it doesn't help review or code consistency, could go ahead with your suggestion.",
      "created_at": "2023-05-21T16:48:54Z",
      "updated_at": "2023-05-21T16:49:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199796712",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199796712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199824807",
      "pull_request_review_id": 1435589453,
      "id": 1199824807,
      "node_id": "PRRC_kwDOABII585Hg9-n",
      "diff_hunk": "@@ -1665,13 +1655,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n #endif\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(fs::PathFromString(strFile));\n-    }\n+    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [&chainman, &args, &node] {\n+        std::vector<fs::path> vImportFiles;\n+        for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n+            vImportFiles.push_back(fs::PathFromString(strFile));\n+        }\n \n-    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+\n+        // Start indexers\n+        if (!StartIndexes(node)) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "ca3041984cf3665e27b6783c923ab1c32682500a",
      "in_reply_to_id": 1198184049,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Do you think the the main benefit of this commit is cleaner code, and the worse error detection a side effect? Or are there other benefits to this commit?\r\n\r\nI think one minor downside could be that the indexes will be available a few minutes later because loadblk doesn't only do reindexing etc., it also loads the mempool - this could take several minutes depending on mempool size and there isn't really a reason why the indexes shouldn't be available before that has finished. This is already the case now in case of `-reindex-chainstate` after #25193 (I didn't think of that), but it could be easily changed in master by moving `g_indexes_ready_to_sync = true` up one line in `ThreadImport`.",
      "created_at": "2023-05-21T20:42:15Z",
      "updated_at": "2023-05-21T21:09:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199824807",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199824807"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1683,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199939444",
      "pull_request_review_id": 1435746295,
      "id": 1199939444,
      "node_id": "PRRC_kwDOABII585HhZ90",
      "diff_hunk": "@@ -1665,13 +1655,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n #endif\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(fs::PathFromString(strFile));\n-    }\n+    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [&chainman, &args, &node] {\n+        std::vector<fs::path> vImportFiles;\n+        for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n+            vImportFiles.push_back(fs::PathFromString(strFile));\n+        }\n \n-    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+\n+        // Start indexers\n+        if (!StartIndexes(node)) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "ca3041984cf3665e27b6783c923ab1c32682500a",
      "in_reply_to_id": 1198184049,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This is already the case now in case of -reindex-chainstate after https://github.com/bitcoin/bitcoin/pull/25193 (I didn't think of that), but it could be easily changed in master by moving g_indexes_ready_to_sync = true up one line in ThreadImport.\r\n\r\nyeah, I don't see why that would be a downside for this changes neither. Same as with `g_indexes_ready_to_sync` flag,  the `StartIndexes()` call could be executed before the mempool load too.\r\n\r\nIt wouldn't be bad to rename `ThreadImport` to `ImportBlocks`, and move the single line mempool load function call to the end of the `loadblk` lambda.",
      "created_at": "2023-05-22T04:21:20Z",
      "updated_at": "2023-05-22T04:21:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199939444",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199939444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1683,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1200555420",
      "pull_request_review_id": 1436698456,
      "id": 1200555420,
      "node_id": "PRRC_kwDOABII585HjwWc",
      "diff_hunk": "@@ -119,6 +116,16 @@ bool BaseIndex::Init()\n             return InitError(strprintf(Untranslated(\"%s best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\"), GetName()));\n         }\n     }\n+\n+    // Child init\n+    if (!CustomInit(start_block ? std::make_optional(interfaces::BlockKey{start_block->GetBlockHash(), start_block->nHeight}) : std::nullopt)) {",
      "path": "src/index/base.cpp",
      "position": 67,
      "original_position": 22,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "21812970cc56191e18f96692e47f00ed881bd596",
      "in_reply_to_id": 1198195900,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">  Is my understanding correct that this race cannot actually happen in practice on master right now, because the indexes are set up (Init()) by the init thread, which starts the networking and loadblk threads only later - so I can't see from which other thread BlockConnected signals could come from at this stage.\r\n\r\nYeah, the race cannot realistically happen in master. The only process that occurs before the indexes initialization is the chain state loading process, which doesn't signal any block connection event.\r\n\r\nSo back porting seems to not be needed. But, if it helps review, could still decouple 21812970cc56191e18f96692e47f00ed881bd596 into a standalone PR.",
      "created_at": "2023-05-22T13:56:31Z",
      "updated_at": "2023-05-22T13:56:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1200555420",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1200555420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 110,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1200556364",
      "pull_request_review_id": 1436699935,
      "id": 1200556364,
      "node_id": "PRRC_kwDOABII585HjwlM",
      "diff_hunk": "@@ -1577,6 +1577,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.indexers.insert(g_coin_stats_index.get());\n     }\n \n+    // Init all indexers\n+    for (auto indexer : node.indexers) indexer->Init();",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "26bd60eafc42484d80d5dfef0fa0abb77e7817ce",
      "in_reply_to_id": 1198198410,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good catch 👌🏼 .",
      "created_at": "2023-05-22T13:57:13Z",
      "updated_at": "2023-05-22T13:57:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1200556364",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1200556364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1581,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1200568842",
      "pull_request_review_id": 1436724179,
      "id": 1200568842,
      "node_id": "PRRC_kwDOABII585HjzoK",
      "diff_hunk": "@@ -216,8 +216,13 @@ class BlockManager\n     //! Returns last CBlockIndex* that is a checkpoint\n     const CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    //! Returns 'lower_block' if all blocks up to that point are available in disk, otherwise returns the first block that is not pruned in the upper-lower range.\n+    //! If 'lower_block=nullptr': verify blocks availability up to the genesis block.\n+    //! Returns nullptr if 'lower_block' is not an 'upper_block' ancestry.\n+    const CBlockIndex* IsBlockDataAvailable(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 7,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "704c9e4cf67468708db655226a78489b92ef0523",
      "in_reply_to_id": 1199268910,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I don't think this is possible to trigger with the way the function is used, but if upper_block already has NO_DATA, it would return that block, maybe nullptr would be more natural? (also applies to GetFirstStoredBlock).\r\n\r\nyeah, that is something that already exists. Good eye.\r\nIt shouldn't be possible to trigger as `upper_block` is always equal to the chain tip and, as far as I know, we never prune the tip. But.. a bug is a bug, better to fix it now.",
      "created_at": "2023-05-22T14:07:08Z",
      "updated_at": "2023-05-22T14:07:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1200568842",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1200568842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1229847798",
      "pull_request_review_id": 1479814543,
      "id": 1229847798,
      "node_id": "PRRC_kwDOABII585JTfz2",
      "diff_hunk": "@@ -1683,14 +1683,17 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n \n     chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n-        ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+        // Import blocks\n+        ImportBlocks(chainman, vImportFiles);\n+        // Load mempool from disk\n+        chainman.ActiveChainstate().LoadMempool(ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});",
      "path": "src/init.cpp",
      "position": 81,
      "original_position": 26,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "17fd33248cf6d1daa995d4c29bc98e7cd3dd722d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: move 'LoadMempool' call out of blockstorage.cpp\" (17fd33248cf6d1daa995d4c29bc98e7cd3dd722d)\r\n\r\nI'm confused about this commit because the commit message says it only \"will allow us to start indexes prior loading the mempool\" in future commits, but the actual code change in commit sets `g_indexes_ready_to_sync` before calling `LoadMempool`, so it seems like that change is happening here, not in future commits.\r\n\r\nAlso renaming `ImportBlocks` to `ThreadImport` here makes it hard to see where the real changes are in this commit. I agree `ImportBlocks` would be a slightly better name than `ThreadImport`, but I also think `ThreadImport` is fine. What's more misleading than the function name is the thread name \"loadblk\", so if you do want to do a renaming, I'd suggest renaming both `loadblk` and `ThreadImport` in a separate scripted diff commit not mixed with more substantive changes.",
      "created_at": "2023-06-14T15:54:56Z",
      "updated_at": "2023-06-14T16:57:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1229847798",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1229847798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1663,
      "original_line": 1663,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1229884217",
      "pull_request_review_id": 1479814543,
      "id": 1229884217,
      "node_id": "PRRC_kwDOABII585JTos5",
      "diff_hunk": "@@ -1569,34 +1568,25 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n                                      chainman, *node.mempool, ignores_incoming_txs);\n     RegisterValidationInterface(node.peerman.get());\n \n-    // ********************************************************* Step 8: start indexers\n-\n-    // If reindex-chainstate was specified, delay syncing indexes until ImportBlocks has reindexed the chain\n-    if (!fReindexChainState) g_indexes_ready_to_sync = true;\n+    // ********************************************************* Step 8: start indexes\n     if (args.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n         auto result{WITH_LOCK(cs_main, return CheckLegacyTxindex(*Assert(chainman.m_blockman.m_block_tree_db)))};\n         if (!result) {\n             return InitError(util::ErrorString(result));\n         }\n \n         g_txindex = std::make_unique<TxIndex>(interfaces::MakeChain(node), cache_sizes.tx_index, false, fReindex);\n-        if (!g_txindex->Start()) {",
      "path": "src/init.cpp",
      "position": 37,
      "original_position": 24,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "a9e45f7926fab62ef0c5cea540386266235b2990",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"init: start indexes after 'loadblk' thread finishes\" (a9e45f7926fab62ef0c5cea540386266235b2990)\r\n\r\nCan the commit message be written to say how this affects behavior of bitcoind?\r\n\r\n I understand that it gets rid of the `g_indexes_ready_to_sync` variable internally, which is nice.\r\n\r\nI can also see that behavior of the `BaseIndex::ThreadSync()` is basically unchanged, because it now calls `BaseIndex::Start` in basically same place it previously set `g_indexes_ready_to_sync` to true, after importing blocks and before loading the mempool.\r\n\r\nBut now `RegisterValidationInterface` and `BaseIndex::Init` calls appear to be delayed. Previously they ran on the main thread before loadblk thread started, now they are running **on** the loadblk thread, after importing blocks and before loading the mempool. Is it a good thing to delay the index Register and Init calls? Is it good to move them from the main thread to the loadblk thread? It seems like it would be pretty easy to keep those calls where they are and still get rid of the `g_indexes_ready_to_sync` variable, so what is the motivation for changing the behavior here?\r\n\r\nThe change seems reasonable to me, but the description is vague and it's not clear how exactly behavior is changing and why the behavior change is good, or neccessary.\r\n\r\nEDIT: Looking at later commit \"refactor: index, decouple 'Init' from 'Start'\" (9f38c2ffba87ea07c0eeb9975ad4d84ae716f9aa), I can see that the behavior change here actually gets reverted later and is unnecessary. I would suggest moving that commit before this one so this one only removes the `g_indexes_ready_to_sync` variable without affecting other behavior.",
      "created_at": "2023-06-14T16:24:09Z",
      "updated_at": "2023-06-14T16:57:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1229884217",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1229884217"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1557,
      "original_line": 1557,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1229896457",
      "pull_request_review_id": 1479814543,
      "id": 1229896457,
      "node_id": "PRRC_kwDOABII585JTrsJ",
      "diff_hunk": "@@ -216,6 +216,11 @@ class BlockManager\n     //! Returns last CBlockIndex* that is a checkpoint\n     const CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    //! Returns 'lower_block' if all blocks up to that point are available in disk, otherwise returns the first block that is not pruned in the upper-lower range.\n+    //! If 'lower_block=nullptr': verify blocks availability up to the genesis block.\n+    //! Returns nullptr if 'lower_block' is not an 'upper_block' ancestry.\n+    const CBlockIndex* CheckBlockDataAvailability(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 7,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "2163b736f255dd5381a6f9ba4ad7dd32192c74e6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: simplify pruning violation check\" (2163b736f255dd5381a6f9ba4ad7dd32192c74e6)\r\n\r\nThis commit seems like a nice code simplification to the `BaseIndex::Init` function. I wonder if simplifying Init is the real motivation for the change at this point, or if this is also used for something else later. Would be helpful if commit message had a sentence about the benefit / motivation.\r\n\r\nAlso commit message should be updated to mention `CheckBlockDataAvailability` instead of `IsBlockDataAvailable`.\r\n\r\nAlso, it would be good to have a simple unit test for the `CheckBlockDataAvailability` function in `blockmanager_tests.cpp`. Even if the unit test doesn't cover all the edge cases, having it would be useful to show  `CheckBlockDataAvailability` makes sense as an API and is testable\r\n\r\nEDIT: Now that I've reached the last commit of the PR  \"index: verify blocks data existence only once\" (ce5f798b089dc8051f6b414ce1a606e60c85d7f3) I can see that the motivation for commit is to be able to help make index startup more asynchronous, avoid repeating work when multiple indexes are enabled in the followup commit. Could mention something like that in the commit message here.",
      "created_at": "2023-06-14T16:35:31Z",
      "updated_at": "2023-06-14T16:57:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1229896457",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1229896457"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1229908664",
      "pull_request_review_id": 1479814543,
      "id": 1229908664,
      "node_id": "PRRC_kwDOABII585JTuq4",
      "diff_hunk": "@@ -1589,6 +1589,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.indexes.insert(g_coin_stats_index.get());\n     }\n \n+    // Init all indexes\n+    for (auto index : node.indexes) if (!index->Init()) return false;",
      "path": "src/init.cpp",
      "position": 60,
      "original_position": 14,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "9f38c2ffba87ea07c0eeb9975ad4d84ae716f9aa",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: index, decouple 'Init' from 'Start'\" (9f38c2ffba87ea07c0eeb9975ad4d84ae716f9aa)\r\n\r\nOh wow, it seems like this commit is basically reverting all the behavior changes of earlier commit a9e45f7926fab62ef0c5cea540386266235b2990 \"init: start indexes after 'loadblk' thread finishes\" that I was confused by and asking about in my comment on that commit (https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1229884217).\r\n\r\nI would definitely recommend moving this commit before the earlier a9e45f7926fab62ef0c5cea540386266235b2990 commit, and keeping `RegisterValidationInterface` and `BaseIndex::Init` code running on the main thread throughout the PR, instead of moving it from the main thread to the loadblk thread in the earlier commit, and then moving it back to the main thread again in this commit. That would be a lot less confusing.",
      "created_at": "2023-06-14T16:47:10Z",
      "updated_at": "2023-06-14T16:58:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1229908664",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1229908664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1568,
      "original_line": 1568,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1232178011",
      "pull_request_review_id": 1483383092,
      "id": 1232178011,
      "node_id": "PRRC_kwDOABII585JcYtb",
      "diff_hunk": "@@ -1683,14 +1683,17 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n \n     chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n-        ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+        // Import blocks\n+        ImportBlocks(chainman, vImportFiles);\n+        // Load mempool from disk\n+        chainman.ActiveChainstate().LoadMempool(ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});",
      "path": "src/init.cpp",
      "position": 81,
      "original_position": 26,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "17fd33248cf6d1daa995d4c29bc98e7cd3dd722d",
      "in_reply_to_id": 1229847798,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I'm confused about this commit because the commit message says it only \"will allow us to start indexes prior loading the mempool\" in future commits, but the actual code change in commit sets g_indexes_ready_to_sync before calling LoadMempool, so it seems like that change is happening here, not in future commits.\r\n\r\nUpps, yeah. Sorry for that. I updated that commit description in a rush..\r\n\r\n> Also renaming ImportBlocks to ThreadImport here makes it hard to see where the real changes are in this commit. I agree ImportBlocks would be a slightly better name than ThreadImport, but I also think ThreadImport is fine. What's more misleading than the function name is the thread name \"loadblk\", so if you do want to do a renaming, I'd suggest renaming both loadblk and ThreadImport in a separate scripted diff commit not mixed with more substantive changes.\r\n\r\nYeah ok. Agree.\r\nHave renamed \"loadblk\" to \"post_init_load\" but I'm all ears if you have a better term for a thread that imports/load blocks, the mempool and starts indexes. No better naming has come to my head yet.",
      "created_at": "2023-06-16T12:22:36Z",
      "updated_at": "2023-06-16T12:22:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1232178011",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1232178011"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1663,
      "original_line": 1663,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1232734590",
      "pull_request_review_id": 1484318385,
      "id": 1232734590,
      "node_id": "PRRC_kwDOABII585Jegl-",
      "diff_hunk": "@@ -1589,6 +1589,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.indexes.insert(g_coin_stats_index.get());\n     }\n \n+    // Init all indexes\n+    for (auto index : node.indexes) if (!index->Init()) return false;",
      "path": "src/init.cpp",
      "position": 60,
      "original_position": 14,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "9f38c2ffba87ea07c0eeb9975ad4d84ae716f9aa",
      "in_reply_to_id": 1229908664,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah, totally agree. Commits order ended up quite ugly after all the findings. Thanks.",
      "created_at": "2023-06-16T20:15:16Z",
      "updated_at": "2023-06-16T20:15:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1232734590",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1232734590"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1568,
      "original_line": 1568,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238756136",
      "pull_request_review_id": 1493577985,
      "id": 1238756136,
      "node_id": "PRRC_kwDOABII585J1eso",
      "diff_hunk": "@@ -1683,14 +1683,17 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n \n     chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n-        ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+        // Import blocks\n+        ImportBlocks(chainman, vImportFiles);\n+        // Load mempool from disk\n+        chainman.ActiveChainstate().LoadMempool(ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});",
      "path": "src/init.cpp",
      "position": 81,
      "original_position": 26,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "17fd33248cf6d1daa995d4c29bc98e7cd3dd722d",
      "in_reply_to_id": 1229847798,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Yeah ok. Agree. Have renamed \"loadblk\" to \"post_init_load\" but I'm all ears if you have a better term for a thread that imports/load blocks, the mempool and starts indexes. No better naming has come to my head yet.\r\n\r\nI think current name `loadblk` is misleading because the thread is doing more than loading block data, so most other names would be better. I'd probably call it `initload` just to suggest it is loading data and is related to initialization, and will go away when the node is started. I think it's also good if the thread has a short name so it is readable in tools like `top`",
      "created_at": "2023-06-22T16:13:43Z",
      "updated_at": "2023-06-22T19:16:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1238756136",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238756136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1663,
      "original_line": 1663,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238941139",
      "pull_request_review_id": 1493859114,
      "id": 1238941139,
      "node_id": "PRRC_kwDOABII585J2L3T",
      "diff_hunk": "@@ -403,13 +411,7 @@ void BaseIndex::Interrupt()\n \n bool BaseIndex::Start()\n {\n-    // m_chainstate member gives indexing code access to node internals. It is\n-    // removed in followup https://github.com/bitcoin/bitcoin/pull/24230\n-    m_chainstate = &m_chain->context()->chainman->ActiveChainstate();\n-    // Need to register this ValidationInterface before running Init(), so that\n-    // callbacks are not missed if Init sets m_synced to true.\n-    RegisterValidationInterface(this);\n-    if (!Init()) return false;\n+    if (!m_init) throw std::runtime_error(\"Error: Cannot start a non-initialized index\");",
      "path": "src/index/base.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "fc4d09af5218e4df83cb8d94b8abdfdfc38bcbb0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: index, decouple 'Init' from 'Start'\" (fc4d09af5218e4df83cb8d94b8abdfdfc38bcbb0)\r\n\r\nShould probably throw std::logic_error not std::runtime_error because there's no way this should happen at runtime unless there is a bug. Could also `assert(m_init)`",
      "created_at": "2023-06-22T19:23:49Z",
      "updated_at": "2023-06-23T15:21:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1238941139",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238941139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 414,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238946048",
      "pull_request_review_id": 1493859114,
      "id": 1238946048,
      "node_id": "PRRC_kwDOABII585J2NEA",
      "diff_hunk": "@@ -406,6 +406,7 @@ const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& start_bl\n {\n     AssertLockHeld(::cs_main);\n     const CBlockIndex* last_block = &start_block;\n+    if (!(last_block->nStatus & BLOCK_HAVE_DATA)) return nullptr;",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "5bf99759d677efbdca1c3903b5128a870963a429",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"bugfix: Make GetFirstStoredBlock return nullptr if 'start_block' has no data\" (5bf99759d677efbdca1c3903b5128a870963a429)\r\n\r\nWould be nice to have a unit test showing the effect of the change in this commit fixing the bug.\r\n\r\nTest coverage is added in the next commit 3df6fbb44f60ebb739395212170f0093e0fe3e1e, so maybe the small part of that test that's relevant could be added here. Or the commit order could be just switched and the test updated in this commit.",
      "created_at": "2023-06-22T19:29:53Z",
      "updated_at": "2023-06-23T15:21:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1238946048",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238946048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1239949785",
      "pull_request_review_id": 1493859114,
      "id": 1239949785,
      "node_id": "PRRC_kwDOABII585J6CHZ",
      "diff_hunk": "@@ -106,10 +104,9 @@ bool BaseIndex::Init()\n         SetBestBlockIndex(locator_index);\n     }\n \n-    // Skip pruning check if indexes are not ready to sync (because reindex-chainstate has wiped the chain).\n     const CBlockIndex* start_block = m_best_block_index.load();\n     bool synced = start_block == active_chain.Tip();\n-    if (!synced && g_indexes_ready_to_sync) {",
      "path": "src/index/base.cpp",
      "position": 30,
      "original_position": 16,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "480f5aad060f4f60b5d0617cfb96276891ac692a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"init: don't start indexes sync thread prematurely\" (480f5aad060f4f60b5d0617cfb96276891ac692a)\r\n\r\nIt's not really clear why this change is safe. It seems like in case of reindexing maybe `active_chain.Tip()` could be null and the prune_violation error could happen below? Or possibly there's a reason that wouldn't happen that could be clarified here. Maybe `&& g_indexes_ready_to_sync` needs to be replaced with `&& !fReindexChainState`? Either way would at least be good to keep a code comment here about how the prune_violation check is supposed to work with reindexing.",
      "created_at": "2023-06-23T15:20:15Z",
      "updated_at": "2023-06-23T15:21:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1239949785",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1239949785"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 106,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1240773534",
      "pull_request_review_id": 1496608049,
      "id": 1240773534,
      "node_id": "PRRC_kwDOABII585J9LOe",
      "diff_hunk": "@@ -106,10 +104,9 @@ bool BaseIndex::Init()\n         SetBestBlockIndex(locator_index);\n     }\n \n-    // Skip pruning check if indexes are not ready to sync (because reindex-chainstate has wiped the chain).\n     const CBlockIndex* start_block = m_best_block_index.load();\n     bool synced = start_block == active_chain.Tip();\n-    if (!synced && g_indexes_ready_to_sync) {",
      "path": "src/index/base.cpp",
      "position": 30,
      "original_position": 16,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "480f5aad060f4f60b5d0617cfb96276891ac692a",
      "in_reply_to_id": 1239949785,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm ok, this should have been part of the commits ordering changes.\r\n\r\nThe change is not safe in 480f5aad, it becomes safe at the last commit (in b9fe9ab). \r\n\r\nBasically, this last commit moves the pruning violation check from `Init()` to the end\r\nof the 'loadblk' thread, which is where the reindex, block loading and chain activation\r\nprocesses happen.\r\n\r\nSo we can run this verification step even when the reindex or reindex-chainstate flags\r\nare enabled (which has being skipped so far).\r\n\r\nThis means executing the pruning violation checks only prior spawning the indexes\r\nthreads, which is safe because these checks' purpose is to verify that the indexes\r\nthreads will be able to sync up to the tip block.\r\n\r\nWill add a check inside the intermediate commit so the history stay consistent and also\r\nexpand the last commit description to include this explanation. Thanks!",
      "created_at": "2023-06-24T13:11:38Z",
      "updated_at": "2023-06-24T13:36:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1240773534",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1240773534"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 106,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1240787722",
      "pull_request_review_id": 1496624281,
      "id": 1240787722,
      "node_id": "PRRC_kwDOABII585J9OsK",
      "diff_hunk": "@@ -406,6 +406,7 @@ const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& start_bl\n {\n     AssertLockHeld(::cs_main);\n     const CBlockIndex* last_block = &start_block;\n+    if (!(last_block->nStatus & BLOCK_HAVE_DATA)) return nullptr;",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "5bf99759d677efbdca1c3903b5128a870963a429",
      "in_reply_to_id": 1238946048,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.\r\nReordered code so the test coverage for the bug fix is introduced with the bug fix.",
      "created_at": "2023-06-24T13:41:27Z",
      "updated_at": "2023-06-24T13:41:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1240787722",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1240787722"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1240787754",
      "pull_request_review_id": 1496624320,
      "id": 1240787754,
      "node_id": "PRRC_kwDOABII585J9Osq",
      "diff_hunk": "@@ -403,13 +411,7 @@ void BaseIndex::Interrupt()\n \n bool BaseIndex::Start()\n {\n-    // m_chainstate member gives indexing code access to node internals. It is\n-    // removed in followup https://github.com/bitcoin/bitcoin/pull/24230\n-    m_chainstate = &m_chain->context()->chainman->ActiveChainstate();\n-    // Need to register this ValidationInterface before running Init(), so that\n-    // callbacks are not missed if Init sets m_synced to true.\n-    RegisterValidationInterface(this);\n-    if (!Init()) return false;\n+    if (!m_init) throw std::runtime_error(\"Error: Cannot start a non-initialized index\");",
      "path": "src/index/base.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "fc4d09af5218e4df83cb8d94b8abdfdfc38bcbb0",
      "in_reply_to_id": 1238941139,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure, done.",
      "created_at": "2023-06-24T13:41:36Z",
      "updated_at": "2023-06-24T13:41:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1240787754",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1240787754"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 414,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1240788990",
      "pull_request_review_id": 1496625542,
      "id": 1240788990,
      "node_id": "PRRC_kwDOABII585J9O_-",
      "diff_hunk": "@@ -1683,14 +1683,17 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n \n     chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n-        ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+        // Import blocks\n+        ImportBlocks(chainman, vImportFiles);\n+        // Load mempool from disk\n+        chainman.ActiveChainstate().LoadMempool(ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});",
      "path": "src/init.cpp",
      "position": 81,
      "original_position": 26,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "17fd33248cf6d1daa995d4c29bc98e7cd3dd722d",
      "in_reply_to_id": 1229847798,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok done, renamed the thread to `initload`.",
      "created_at": "2023-06-24T13:43:11Z",
      "updated_at": "2023-06-24T13:43:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1240788990",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1240788990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1663,
      "original_line": 1663,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1242783297",
      "pull_request_review_id": 1499453218,
      "id": 1242783297,
      "node_id": "PRRC_kwDOABII585KE15B",
      "diff_hunk": "@@ -106,10 +104,9 @@ bool BaseIndex::Init()\n         SetBestBlockIndex(locator_index);\n     }\n \n-    // Skip pruning check if indexes are not ready to sync (because reindex-chainstate has wiped the chain).\n     const CBlockIndex* start_block = m_best_block_index.load();\n     bool synced = start_block == active_chain.Tip();\n-    if (!synced && g_indexes_ready_to_sync) {",
      "path": "src/index/base.cpp",
      "position": 30,
      "original_position": 16,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "480f5aad060f4f60b5d0617cfb96276891ac692a",
      "in_reply_to_id": 1239949785,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"init: don't start indexes sync thread prematurely\" (d7a13cb990826d0422e2135a6fd4f2b8813b6eb8)\r\n\r\nI don't think replacing the `&& g_indexes_ready_to_sync` condition with `&& !LoadingBlocks` here in this commit is correct or preserves behavior. The goal of having the condition is to skip checking code and avoid the prune_violation error below if `-reindex-chainstate` is used, but `!LoadingBlocks` will still be true if `-reindex-chainstate` is used. Definition of `LoadingBlocks` is `m_importing || fReindex` but `m_importing` is guaranteed to be false here because the `ThreadImport` thread is not created at this point. And the `fReindex` global is only true if `-reindex` option is used, not if `-reindex-chainstate` option is used.\r\n\r\nI think the most straightforward thing to do in this commit is just to get rid of the `while (!g_indexes_ready_to_sync)` loop in `BaseIndex::ThreadSync` but leave the `g_indexes_ready_to_sync` variable alone everywhere else. Then get rid of `g_indexes_ready_to_sync` later when it is safe to eliminate, probably in the last commit \"index: verify blocks data existence only once\" (3514f768b181d359d0218845ace0266d37e9dfbd",
      "created_at": "2023-06-26T21:21:14Z",
      "updated_at": "2023-06-26T22:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1242783297",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1242783297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 106,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1242830869",
      "pull_request_review_id": 1499453218,
      "id": 1242830869,
      "node_id": "PRRC_kwDOABII585KFBgV",
      "diff_hunk": "@@ -402,17 +402,28 @@ bool BlockManager::IsBlockPruned(const CBlockIndex* pblockindex)\n     return (m_have_pruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0);\n }\n \n-const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& start_block)\n+const CBlockIndex* BlockManager::CheckBlockDataAvailability(const CBlockIndex& upper_block, const CBlockIndex* lower_block)",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "1f88e942d34bf8c51374567e9086f5535f0bde21",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: simplify pruning violation check\" (1f88e942d34bf8c51374567e9086f5535f0bde21)\r\n\r\nLooking at the `CheckBlockDataAvailability` and `GetFirstStoredBlock` functions more closely, I don't think is ever a legitmate reason to call them with an upper block that missing data, or to call them with a lower block that is not an ancestor of ancestor of upper block.\r\n\r\nI think if either of these things happen, something has gone badly wrong, and it would be better to treat these things as failed preconditions, instead of normal cases that `CheckBlockDataAvailability` ignores, and might lead to crashes or bug later that are harder to debug.\r\n\r\nWould suggest replacing:\r\n\r\n```c++\r\nif (!(last_block->nStatus & BLOCK_HAVE_DATA)) return nullptr;\r\n```\r\n\r\nwith:\r\n\r\n```c++\r\nassert(last_block->nStatus & BLOCK_HAVE_DATA));\r\n```\r\n\r\nand:\r\n\r\n```c++\r\nif (last_block->nHeight < lower_block->nHeight) return nullptr;\r\n```\r\n\r\nwith:\r\n\r\n```c++\r\nassert(last_block->nHeight < lower_block->nHeight);\r\n```\r\n\r\nand adding:\r\n\r\n```c++\r\nassert(last_block != nullptr);\r\n```\r\n\r\nbefore the return at the end.",
      "created_at": "2023-06-26T21:46:50Z",
      "updated_at": "2023-06-26T22:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1242830869",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1242830869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 404,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1243897284",
      "pull_request_review_id": 1501132386,
      "id": 1243897284,
      "node_id": "PRRC_kwDOABII585KJF3E",
      "diff_hunk": "@@ -106,10 +104,9 @@ bool BaseIndex::Init()\n         SetBestBlockIndex(locator_index);\n     }\n \n-    // Skip pruning check if indexes are not ready to sync (because reindex-chainstate has wiped the chain).\n     const CBlockIndex* start_block = m_best_block_index.load();\n     bool synced = start_block == active_chain.Tip();\n-    if (!synced && g_indexes_ready_to_sync) {",
      "path": "src/index/base.cpp",
      "position": 30,
      "original_position": 16,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "480f5aad060f4f60b5d0617cfb96276891ac692a",
      "in_reply_to_id": 1239949785,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah yeah. \r\nThe other possibility, which adds a bit more overhead, could be to move the pruning violation check from `Init()` to `Start()` in the intermediate commit, then move it from `Start()` to `StartIndexes()` in the last one.\r\n\r\nWill go with your suggestion. Thanks.",
      "created_at": "2023-06-27T14:56:58Z",
      "updated_at": "2023-06-27T14:57:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1243897284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1243897284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 106,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1243985565",
      "pull_request_review_id": 1501321408,
      "id": 1243985565,
      "node_id": "PRRC_kwDOABII585KJbad",
      "diff_hunk": "@@ -58,6 +59,7 @@ struct NodeContext {\n     std::unique_ptr<ChainstateManager> chainman;\n     std::unique_ptr<BanMan> banman;\n     ArgsManager* args{nullptr}; // Currently a raw pointer because the memory is not managed by this struct\n+    std::vector<BaseIndex*> indexes; // raw pointers because memory is not managed by this struct",
      "path": "src/node/context.h",
      "position": 15,
      "original_position": 15,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "68b13a2b6c96fd061a31add58b8626c5bf1cdf3d",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "commit 68b13a2b6c96fd061a31add58b8626c5bf1cdf3d\r\nnit: this is not a struct",
      "created_at": "2023-06-27T15:55:01Z",
      "updated_at": "2023-06-27T21:37:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1243985565",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1243985565"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244338868",
      "pull_request_review_id": 1501825323,
      "id": 1244338868,
      "node_id": "PRRC_kwDOABII585KKxq0",
      "diff_hunk": "@@ -402,17 +402,28 @@ bool BlockManager::IsBlockPruned(const CBlockIndex* pblockindex)\n     return (m_have_pruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0);\n }\n \n-const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& start_block)\n+const CBlockIndex* BlockManager::CheckBlockDataAvailability(const CBlockIndex& upper_block, const CBlockIndex* lower_block)",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "1f88e942d34bf8c51374567e9086f5535f0bde21",
      "in_reply_to_id": 1242830869,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure. Added the changes and documented the preconditions.",
      "created_at": "2023-06-27T20:52:11Z",
      "updated_at": "2023-06-27T20:52:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1244338868",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244338868"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 404,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244340856",
      "pull_request_review_id": 1501321408,
      "id": 1244340856,
      "node_id": "PRRC_kwDOABII585KKyJ4",
      "diff_hunk": "@@ -621,7 +621,7 @@ Threads\n   : Started from `main()` in `bitcoind.cpp`. Responsible for starting up and\n   shutting down the application.\n \n-- [ThreadImport (`b-loadblk`)](https://doxygen.bitcoincore.org/namespacenode.html#ab4305679079866f0f420f7dbf278381d)",
      "path": "doc/developer-notes.md",
      "position": 4,
      "original_position": 4,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "11fb8fa81ab8e2436e4ae6de79b52581db399265",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "commit 11fb8fa81ab8e2436e4ae6de79b52581db399265:\r\nThis spot doesn't mean the `ThreadImport` function, but the thread. Various other spots below also mean the thread, so I think it'd be better to change this manually, and to also expand the description one line below? I think essentially this thread performs various loading tasks that are part of init but shouldn't block the node from being started, so are  done in a separate thread (external block import, reindex, reindex-chainstate, index background sync, mempool load)",
      "created_at": "2023-06-27T20:54:10Z",
      "updated_at": "2023-06-27T21:37:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1244340856",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244340856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 624,
      "original_line": 624,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244359758",
      "pull_request_review_id": 1501321408,
      "id": 1244359758,
      "node_id": "PRRC_kwDOABII585KK2xO",
      "diff_hunk": "@@ -73,4 +73,7 @@ bool AppInitMain(node::NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip\n  */\n void SetupServerArgs(ArgsManager& argsman);\n \n+/** Validates requirements to run the indexes and spawns each index initial sync thread */\n+bool StartIndexes(node::NodeContext& node);",
      "path": "src/init.h",
      "position": null,
      "original_position": 5,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "68b13a2b6c96fd061a31add58b8626c5bf1cdf3d",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "commit 68b13a2b6c96fd061a31add58b8626c5bf1cdf3d:\r\nI think that once it's decoupled from `BaseIndex::Init()`, the names `BaseIndex::Start()` and  `StartIndexes()` are misleading: It doesn't actually start the indexes, if `Init()` determines that an index is synced, the index is started right then (it begins to process validationinterface signals), and the later `StartIndexes()` does nothing, and could just as well be skipped. I'd prefer something like `IndexBackgroundSync()`.",
      "created_at": "2023-06-27T21:06:58Z",
      "updated_at": "2023-06-27T21:37:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1244359758",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244359758"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244362593",
      "pull_request_review_id": 1501321408,
      "id": 1244362593,
      "node_id": "PRRC_kwDOABII585KK3dh",
      "diff_hunk": "@@ -1904,3 +1901,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     return true;\n }\n+\n+bool StartIndexes(NodeContext& node)",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "68b13a2b6c96fd061a31add58b8626c5bf1cdf3d",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "commit 68b13a2b6c96fd061a31add58b8626c5bf1cdf3d:\r\nConsidering how large this function becomes and how low-level the code is in the final state, I don't really love having it in `init.cpp` instead of somewhere in `index/`. Could it be better in `index/base.cpp` as a free function, even if it's not part of `BaseIndex`?",
      "created_at": "2023-06-27T21:09:02Z",
      "updated_at": "2023-06-27T21:37:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1244362593",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244362593"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1905,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244419674",
      "pull_request_review_id": 1501925250,
      "id": 1244419674,
      "node_id": "PRRC_kwDOABII585KLFZa",
      "diff_hunk": "@@ -58,6 +59,7 @@ struct NodeContext {\n     std::unique_ptr<ChainstateManager> chainman;\n     std::unique_ptr<BanMan> banman;\n     ArgsManager* args{nullptr}; // Currently a raw pointer because the memory is not managed by this struct\n+    std::vector<BaseIndex*> indexes; // raw pointers because memory is not managed by this struct",
      "path": "src/node/context.h",
      "position": 15,
      "original_position": 15,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "68b13a2b6c96fd061a31add58b8626c5bf1cdf3d",
      "in_reply_to_id": 1243985565,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It refers to the `NodeContext` struct. Same as the line that is right above it.",
      "created_at": "2023-06-27T22:07:27Z",
      "updated_at": "2023-06-28T13:26:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1244419674",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244419674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244446404",
      "pull_request_review_id": 1501925250,
      "id": 1244446404,
      "node_id": "PRRC_kwDOABII585KLL7E",
      "diff_hunk": "@@ -1904,3 +1901,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     return true;\n }\n+\n+bool StartIndexes(NodeContext& node)",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "68b13a2b6c96fd061a31add58b8626c5bf1cdf3d",
      "in_reply_to_id": 1244362593,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I thought about that initially too, but we have #24230 going into the opposite direction (removing the `CBlockIndex` usages from the `index/` directory).\r\n\r\nI think that the best would be to place it inside the chain interface. But let me check how far that goes. If it requires more changes, might be good to leave it for a follow-up to not expand this PR more.",
      "created_at": "2023-06-27T22:44:36Z",
      "updated_at": "2023-06-28T13:29:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1244446404",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244446404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1905,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245203016",
      "pull_request_review_id": 1501925250,
      "id": 1245203016,
      "node_id": "PRRC_kwDOABII585KOEpI",
      "diff_hunk": "@@ -621,7 +621,7 @@ Threads\n   : Started from `main()` in `bitcoind.cpp`. Responsible for starting up and\n   shutting down the application.\n \n-- [ThreadImport (`b-loadblk`)](https://doxygen.bitcoincore.org/namespacenode.html#ab4305679079866f0f420f7dbf278381d)",
      "path": "doc/developer-notes.md",
      "position": 4,
      "original_position": 4,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "11fb8fa81ab8e2436e4ae6de79b52581db399265",
      "in_reply_to_id": 1244340856,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah. Added eb47368 improving this docs in a separated commit. ",
      "created_at": "2023-06-28T13:20:57Z",
      "updated_at": "2023-06-28T13:27:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1245203016",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245203016"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 624,
      "original_line": 624,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245203265",
      "pull_request_review_id": 1501925250,
      "id": 1245203265,
      "node_id": "PRRC_kwDOABII585KOEtB",
      "diff_hunk": "@@ -73,4 +73,7 @@ bool AppInitMain(node::NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip\n  */\n void SetupServerArgs(ArgsManager& argsman);\n \n+/** Validates requirements to run the indexes and spawns each index initial sync thread */\n+bool StartIndexes(node::NodeContext& node);",
      "path": "src/init.h",
      "position": null,
      "original_position": 5,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "68b13a2b6c96fd061a31add58b8626c5bf1cdf3d",
      "in_reply_to_id": 1244359758,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-06-28T13:21:08Z",
      "updated_at": "2023-06-28T13:26:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1245203265",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245203265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245253634",
      "pull_request_review_id": 1503161503,
      "id": 1245253634,
      "node_id": "PRRC_kwDOABII585KORAC",
      "diff_hunk": "@@ -1904,3 +1901,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     return true;\n }\n+\n+bool StartIndexes(NodeContext& node)",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "68b13a2b6c96fd061a31add58b8626c5bf1cdf3d",
      "in_reply_to_id": 1244362593,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd definitely avoid moving `StartIndexes` into the `interfaces::Chain` class, because because that class is supposed to expose limited node functionality to outside callers like wallets and indexes without giving them access to node internals. It is supposed to be a thin wrapper around node functions and data, not to contain any real functionality itself. Its methods are meant to be called by wallets and indexes, not by node code because it would add an unnecessary layer of indirection, bring in a monolithic dependency, and could lead to `interfaces::Chain` class growing larger than it needs to be.\r\n\r\nI think `StartIndexes` function is actually pretty at home in `src/init.cpp` and would be fine to leave there. But if you want to move it, you could move it to a `src/index/init.cpp` file. If you do move it to `src/index/init.cpp`, it would make index code mirror structure of wallet code. In wallet code, `libbitcoin_wallet.a` library contains all the `.cpp` files in `src/wallet/` **except** `src/wallet/init.cpp`, which is part of `libbitcoin_node.a`. I'm not sure I Iove that structure, but it works and there is precedent for it.\r\n\r\nAnother option would be to move it somewhere like `src/node/indexes.cpp`. Conceivably the `src/wallet/init.cpp` file could move to `src/node/wallets.cpp` to be consistent with that.\r\n\r\nI don't think it matters too much what source file `StartIndexes` function lives in though, as long as it is not part of the Chain interface.",
      "created_at": "2023-06-28T13:56:44Z",
      "updated_at": "2023-06-28T13:57:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1245253634",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245253634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1905,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245290439",
      "pull_request_review_id": 1503221191,
      "id": 1245290439,
      "node_id": "PRRC_kwDOABII585KOZ_H",
      "diff_hunk": "@@ -58,6 +59,7 @@ struct NodeContext {\n     std::unique_ptr<ChainstateManager> chainman;\n     std::unique_ptr<BanMan> banman;\n     ArgsManager* args{nullptr}; // Currently a raw pointer because the memory is not managed by this struct\n+    std::vector<BaseIndex*> indexes; // raw pointers because memory is not managed by this struct",
      "path": "src/node/context.h",
      "position": 15,
      "original_position": 15,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "68b13a2b6c96fd061a31add58b8626c5bf1cdf3d",
      "in_reply_to_id": 1243985565,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "oh, right, I misunderstood this, can be resolved.",
      "created_at": "2023-06-28T14:18:23Z",
      "updated_at": "2023-06-28T14:18:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1245290439",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245290439"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245343374",
      "pull_request_review_id": 1503301764,
      "id": 1245343374,
      "node_id": "PRRC_kwDOABII585KOm6O",
      "diff_hunk": "@@ -1904,3 +1901,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     return true;\n }\n+\n+bool StartIndexes(NodeContext& node)",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "68b13a2b6c96fd061a31add58b8626c5bf1cdf3d",
      "in_reply_to_id": 1244362593,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok gotcha about the chain interface.\r\n\r\nI thought about it because of the goal of removing the node internal types from the subdirectories. If we stick to that path, the code move into the `src/index/init.cpp` could be seen as a regression.\r\n\r\nThe good point about moving this code somewhere else is that it could be unit tested without having to add `init.h` and `NodeContext` dependencies.\r\n\r\nAt least for now, I'm a bit inclined for the `src/node/` option but not feeling strong over it neither. I would also be fine if we keep it at `init.cpp` until we add more unit tests.\r\nWhat do you think @mzumsande?",
      "created_at": "2023-06-28T14:43:54Z",
      "updated_at": "2023-06-28T14:43:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1245343374",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245343374"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1905,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245477180",
      "pull_request_review_id": 1503519460,
      "id": 1245477180,
      "node_id": "PRRC_kwDOABII585KPHk8",
      "diff_hunk": "@@ -109,36 +109,16 @@ bool BaseIndex::Init()\n     const CBlockIndex* start_block = m_best_block_index.load();\n     bool synced = start_block == active_chain.Tip();\n     if (!synced && g_indexes_ready_to_sync) {\n-        bool prune_violation = false;\n-        if (!start_block) {\n-            // index is not built yet\n-            // make sure we have all block data back to the genesis\n-            prune_violation = m_chainstate->m_blockman.GetFirstStoredBlock(*active_chain.Tip()) != active_chain.Genesis();\n+        const CBlockIndex* block_to_test = start_block;\n+        if (!block_to_test) block_to_test = active_chain.Genesis();",
      "path": "src/index/base.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "2412ffdce69ce2b164e5303ae4b610ab0d00fd5c",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: simplify pruning violation check\" (2412ffdce69ce2b164e5303ae4b610ab0d00fd5c)\r\n\r\nLooking at this code, it's not really clear that `block_to_test` is going to be non-null, and that the `CheckBlockDataAvailability` check is going to pass. If it were null, the pruning check would fail even if there were no pruned data.\r\n\r\nSo I think it would be good add an assert with an explanation of why `block_to_test` can't be null here, and I implemented this below.\r\n\r\nWhile implementing this I also noticed that current `CheckBlockDataAvailability` interface seems less safe to use because it accepts a second null parameter when there's no reason to pass it one, and it's also awkward because it returns a pointer instead of just a boolean that reflects whether data is available. Would suggest the following changes to address all of this:\r\n\r\n```diff\r\n--- a/src/index/base.cpp\r\n+++ b/src/index/base.cpp\r\n@@ -111,6 +111,14 @@ bool BaseIndex::Init()\r\n     if (!synced && g_indexes_ready_to_sync) {\r\n         const CBlockIndex* block_to_test = start_block;\r\n         if (!block_to_test) block_to_test = active_chain.Genesis();\r\n+\r\n+        // Assert block_to_test is not null here. It can't be null because the\r\n+        // genesis block can't be null here. The genesis block will be null\r\n+        // during this BaseIndex::Init() call if the node is being started for\r\n+        // the first time, or if -reindex is used. But in both of these cases\r\n+        // m_best_block_index is also null so this branch is not reached.\r\n+        assert(block_to_test);\r\n+\r\n         if (!active_chain.Contains(block_to_test)) {\r\n             // if the bestblock is not part of the mainchain, find the fork\r\n             // so we can make sure we have all data down to the fork\r\n@@ -118,7 +126,7 @@ bool BaseIndex::Init()\r\n         }\r\n \r\n         // make sure we have all block data back to the start block\r\n-        if (m_chainstate->m_blockman.CheckBlockDataAvailability(*active_chain.Tip(), block_to_test) != block_to_test) {\r\n+        if (!m_chainstate->m_blockman.CheckBlockDataAvailability(*active_chain.Tip(), *Assert(block_to_test))) {\r\n             return InitError(strprintf(Untranslated(\"%s best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\"), GetName()));\r\n         }\r\n     }\r\n--- a/src/node/blockstorage.cpp\r\n+++ b/src/node/blockstorage.cpp\r\n@@ -402,7 +402,7 @@ bool BlockManager::IsBlockPruned(const CBlockIndex* pblockindex)\r\n     return (m_have_pruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0);\r\n }\r\n \r\n-const CBlockIndex* BlockManager::CheckBlockDataAvailability(const CBlockIndex& upper_block, const CBlockIndex* lower_block)\r\n+const CBlockIndex& FindFirstStored(const CBlockIndex& upper_block, const CBlockIndex* lower_block) EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\r\n {\r\n     AssertLockHeld(::cs_main);\r\n     const CBlockIndex* last_block = &upper_block;\r\n@@ -410,7 +410,7 @@ const CBlockIndex* BlockManager::CheckBlockDataAvailability(const CBlockIndex& u\r\n     while (last_block->pprev && (last_block->pprev->nStatus & BLOCK_HAVE_DATA)) {\r\n         if (lower_block) {\r\n             // Return if we reached the lower_block\r\n-            if (last_block == lower_block) return lower_block;\r\n+            if (last_block == lower_block) return *lower_block;\r\n             // if range was surpassed, means that 'lower_block' is not part of the 'upper_block' chain\r\n             // and so far this is not allowed.\r\n             assert(last_block->nHeight >= lower_block->nHeight);\r\n@@ -418,12 +418,17 @@ const CBlockIndex* BlockManager::CheckBlockDataAvailability(const CBlockIndex& u\r\n         last_block = last_block->pprev;\r\n     }\r\n     assert(last_block != nullptr);\r\n-    return last_block;\r\n+    return *last_block;\r\n+}\r\n+\r\n+bool BlockManager::CheckBlockDataAvailability(const CBlockIndex& upper_block, const CBlockIndex& lower_block)\r\n+{\r\n+    return &FindFirstStored(upper_block, &lower_block) == &lower_block;\r\n }\r\n \r\n const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& start_block)\r\n {\r\n-    return CheckBlockDataAvailability(start_block);\r\n+    return &FindFirstStored(start_block, nullptr);\r\n }\r\n \r\n // If we're using -prune with -reindex, then delete block files that will be ignored by the\r\n--- a/src/node/blockstorage.h\r\n+++ b/src/node/blockstorage.h\r\n@@ -217,15 +217,15 @@ public:\r\n     //! Returns last CBlockIndex* that is a checkpoint\r\n     const CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n \r\n-    //! Find the oldest block that is not pruned in the [upper_block, lower_block] range.\r\n-    //! If all blocks down to lower_block are available, returns lower_block.\r\n-    //! If 'lower_block=nullptr': the function verifies all blocks down to the genesis block.\r\n+    //! Check if all blocks in the [upper_block, lower_block] range have data available.\r\n     //! Preconditions:\r\n     //!  1) The caller must ensure that upper_block has block data available.\r\n     //!  2) The caller must ensure that lower_block is an ancestor of upper_block (part of the same chain).\r\n-    const CBlockIndex* CheckBlockDataAvailability(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n+    bool CheckBlockDataAvailability(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex& lower_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n \r\n-    //! Find the first block that is not pruned\r\n+    //! Find the first stored ancestor of start_block immediately after the last\r\n+    //! pruned ancestor. Return value will never be null. Caller is responsible\r\n+    //! for ensuring that start_block has data is not pruned.\r\n     const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n \r\n     /** True if any block files have ever been pruned. */\r\ndiff --git a/src/test/blockmanager_tests.cpp b/src/test/blockmanager_tests.cpp\r\nindex fadf1c2026c0..a7248935f394 100644\r\n--- a/src/test/blockmanager_tests.cpp\r\n+++ b/src/test/blockmanager_tests.cpp\r\n@@ -107,11 +107,11 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_block_data_availability, TestChain100Setup)\r\n \r\n     // 1) Return genesis block when all blocks are available\r\n     BOOST_CHECK_EQUAL(blockman.GetFirstStoredBlock(tip), chainman->ActiveChain()[0]);\r\n-    BOOST_CHECK_EQUAL(blockman.CheckBlockDataAvailability(tip), chainman->ActiveChain()[0]);\r\n+    BOOST_CHECK(blockman.CheckBlockDataAvailability(tip, *chainman->ActiveChain()[0]));\r\n \r\n-    // 2) Return lower_block when all blocks are available\r\n+    // 2) Check lower_block when all blocks are available\r\n     CBlockIndex* lower_block = chainman->ActiveChain()[tip.nHeight / 2];\r\n-    BOOST_CHECK_EQUAL(blockman.CheckBlockDataAvailability(tip, lower_block), lower_block);\r\n+    BOOST_CHECK(blockman.CheckBlockDataAvailability(tip, *lower_block));\r\n \r\n     // Prune half of the blocks\r\n     int height_to_prune = tip.nHeight / 2;\r\n@@ -121,10 +121,8 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_block_data_availability, TestChain100Setup)\r\n \r\n     // 3) The last block not pruned is in-between upper-block and the genesis block\r\n     BOOST_CHECK_EQUAL(blockman.GetFirstStoredBlock(tip), first_available_block);\r\n-    BOOST_CHECK_EQUAL(blockman.CheckBlockDataAvailability(tip), first_available_block);\r\n-\r\n-    // 4) The last block not pruned in the [tip, last_pruned_block] range is the lower_block + 1\r\n-    BOOST_CHECK_EQUAL(blockman.CheckBlockDataAvailability(tip, last_pruned_block), first_available_block);\r\n+    BOOST_CHECK(blockman.CheckBlockDataAvailability(tip, *first_available_block));\r\n+    BOOST_CHECK(!blockman.CheckBlockDataAvailability(tip, *last_pruned_block));\r\n }\r\n \r\n BOOST_AUTO_TEST_SUITE_END()\r\n```",
      "created_at": "2023-06-28T16:27:23Z",
      "updated_at": "2023-06-28T16:42:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1245477180",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245477180"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245800503",
      "pull_request_review_id": 1504148844,
      "id": 1245800503,
      "node_id": "PRRC_kwDOABII585KQWg3",
      "diff_hunk": "@@ -109,36 +109,16 @@ bool BaseIndex::Init()\n     const CBlockIndex* start_block = m_best_block_index.load();\n     bool synced = start_block == active_chain.Tip();\n     if (!synced && g_indexes_ready_to_sync) {\n-        bool prune_violation = false;\n-        if (!start_block) {\n-            // index is not built yet\n-            // make sure we have all block data back to the genesis\n-            prune_violation = m_chainstate->m_blockman.GetFirstStoredBlock(*active_chain.Tip()) != active_chain.Genesis();\n+        const CBlockIndex* block_to_test = start_block;\n+        if (!block_to_test) block_to_test = active_chain.Genesis();",
      "path": "src/index/base.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "2412ffdce69ce2b164e5303ae4b610ab0d00fd5c",
      "in_reply_to_id": 1245477180,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Cool thanks!. Pushed it with few tiny differences because I think that, at least for now, we don't need the indirections introduced by making `GetFirstStoredBlock` a `FindFirstStored` wrapper.",
      "created_at": "2023-06-28T21:43:27Z",
      "updated_at": "2023-06-28T21:43:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1245800503",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245800503"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247323044",
      "pull_request_review_id": 1506345121,
      "id": 1247323044,
      "node_id": "PRRC_kwDOABII585KWKOk",
      "diff_hunk": "@@ -105,41 +103,16 @@ bool BaseIndex::Init()\n         SetBestBlockIndex(locator_index);\n     }\n \n-    // Skip pruning check if indexes are not ready to sync (because reindex-chainstate has wiped the chain).\n-    const CBlockIndex* start_block = m_best_block_index.load();\n-    bool synced = start_block == active_chain.Tip();\n-    if (!synced && g_indexes_ready_to_sync) {\n-        const CBlockIndex* block_to_test = start_block;\n-        if (!block_to_test) block_to_test = active_chain.Genesis();\n-\n-        // Assert block_to_test is not null here. It can't be null because the\n-        // genesis block can't be null here. The genesis block will be null\n-        // during this BaseIndex::Init() call if the node is being started for\n-        // the first time, or if -reindex is used. But in both of these cases\n-        // m_best_block_index is also null so this branch is not reached.\n-        assert(block_to_test);\n-\n-        if (!active_chain.Contains(block_to_test)) {\n-            // if the bestblock is not part of the mainchain, find the fork\n-            // so we can make sure we have all data down to the fork\n-            block_to_test = active_chain.FindFork(block_to_test);\n-        }\n-\n-        // make sure we have all block data back to the start block\n-        if (!m_chainstate->m_blockman.CheckBlockDataAvailability(*active_chain.Tip(), *Assert(block_to_test))) {\n-            return InitError(strprintf(Untranslated(\"%s best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\"), GetName()));\n-        }\n-    }\n-\n     // Child init\n+    const CBlockIndex* start_block = m_best_block_index.load();",
      "path": "src/index/base.cpp",
      "position": 66,
      "original_position": 40,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "5ec5a4888743ce7261e0e9cdc077014cd47bfdd6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"index: verify blocks data existence only once\" (5ec5a4888743ce7261e0e9cdc077014cd47bfdd6)\r\n\r\nNoticed this while I was rebasing #24230, but one side effect of this commit is now `CustomInit` will be called unnecessarily when the index can't start up because there is a pruning violation. This doesn't seem ideal, but it probably not worth worrying about. It would be good to mention the change in the commit description, though.\r\n\r\nI think #24230 will restore previous behavior, and not call `CustomInit` when the index won't start. But it hard to avoid calling `CustomInit` here because it can't be moved to the Start function without also moving the `m_synced` assignment (because `CustomInit` has to be called before m_synced is true to make sure it is called before CustomAppend, as explained\r\n3126454dcfa1dd29bb66500d5f2b5261684d6c58). Moving `m_synced` assignment to Start here would potentially be bad for performance, because it would mean indexes would only sync after the blocks were connected instead at the same time during LoadBlocks. #24230 should avoid calling CustomInit unnecessarily, and avoid needing to wait for LoadBlocks when the index is in sync by registering for notifications in a different way that doesn't rely on `m_synced` to avoid spurious notifications.",
      "created_at": "2023-06-30T01:51:21Z",
      "updated_at": "2023-06-30T01:51:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1247323044",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247323044"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247821121",
      "pull_request_review_id": 1507122122,
      "id": 1247821121,
      "node_id": "PRRC_kwDOABII585KYD1B",
      "diff_hunk": "@@ -105,41 +103,16 @@ bool BaseIndex::Init()\n         SetBestBlockIndex(locator_index);\n     }\n \n-    // Skip pruning check if indexes are not ready to sync (because reindex-chainstate has wiped the chain).\n-    const CBlockIndex* start_block = m_best_block_index.load();\n-    bool synced = start_block == active_chain.Tip();\n-    if (!synced && g_indexes_ready_to_sync) {\n-        const CBlockIndex* block_to_test = start_block;\n-        if (!block_to_test) block_to_test = active_chain.Genesis();\n-\n-        // Assert block_to_test is not null here. It can't be null because the\n-        // genesis block can't be null here. The genesis block will be null\n-        // during this BaseIndex::Init() call if the node is being started for\n-        // the first time, or if -reindex is used. But in both of these cases\n-        // m_best_block_index is also null so this branch is not reached.\n-        assert(block_to_test);\n-\n-        if (!active_chain.Contains(block_to_test)) {\n-            // if the bestblock is not part of the mainchain, find the fork\n-            // so we can make sure we have all data down to the fork\n-            block_to_test = active_chain.FindFork(block_to_test);\n-        }\n-\n-        // make sure we have all block data back to the start block\n-        if (!m_chainstate->m_blockman.CheckBlockDataAvailability(*active_chain.Tip(), *Assert(block_to_test))) {\n-            return InitError(strprintf(Untranslated(\"%s best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\"), GetName()));\n-        }\n-    }\n-\n     // Child init\n+    const CBlockIndex* start_block = m_best_block_index.load();",
      "path": "src/index/base.cpp",
      "position": 66,
      "original_position": 40,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "5ec5a4888743ce7261e0e9cdc077014cd47bfdd6",
      "in_reply_to_id": 1247323044,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Noticed this while I was rebasing https://github.com/bitcoin/bitcoin/pull/24230, but one side effect of this commit is now CustomInit will be called unnecessarily when the index can't start up because there is a pruning violation. This doesn't seem ideal, but it probably not worth worrying about. It would be good to mention the change in the commit description, though.\r\n\r\nHmm, I hold the opposite view on this matter. I believe it is beneficial to call `CustomInit` within the base class's `Init` method, regardless of any external chain state. It ensures consistency in how an object is initialized, as it is isolated from its context initially.\r\n\r\nBy performing specific initialization checks on the index subclasses before anything else, we can guarantee class data consistency. Moreover, the verification process in the child classes for `CustomInit` is faster, and any errors detected are more severe than the pruning violation (currently, all failures within `CustomInit` are related to database corruption errors).",
      "created_at": "2023-06-30T12:43:34Z",
      "updated_at": "2023-06-30T17:41:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1247821121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247821121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247996232",
      "pull_request_review_id": 1507412576,
      "id": 1247996232,
      "node_id": "PRRC_kwDOABII585KYulI",
      "diff_hunk": "@@ -406,6 +406,7 @@ const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& start_bl\n {\n     AssertLockHeld(::cs_main);\n     const CBlockIndex* last_block = &start_block;\n+    assert(last_block->nStatus & BLOCK_HAVE_DATA);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "b0932ec260acd54d77022205f22167ee951cc36d",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Although `GetFirstStoredBlock()` is currently used only for rpc and indexes, this added assert makes me a bit uneasy. While we can check that `GetFirstStoredBlock()` is only called with the tip, how sure can we that the tip has `BLOCK_HAVE_DATA`?\r\nI could think of several edge cases where we don't have data for the tip, and managed to trigger the assert in some of these situations:\r\n1. (tested): With AssumeUTXO, right after importing a chainstate from disk / before getting any additional blocks from peers\r\n2. (tested): After calling `invalidateblock` for a pruned block (maybe we should disallow this / add a warning?)\r\n3. (untested): possibly also when pruning and a large reorg happens?\r\n\r\nSo I think if we now require that \"The caller must ensure that upper_block has block data available.\" we should  adjust the existing callers to do that.",
      "created_at": "2023-06-30T15:26:24Z",
      "updated_at": "2023-06-30T17:26:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1247996232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247996232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248094492",
      "pull_request_review_id": 1507412576,
      "id": 1248094492,
      "node_id": "PRRC_kwDOABII585KZGkc",
      "diff_hunk": "@@ -1904,3 +1901,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     return true;\n }\n+\n+bool StartIndexes(NodeContext& node)",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "68b13a2b6c96fd061a31add58b8626c5bf1cdf3d",
      "in_reply_to_id": 1244362593,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": " I think I also like the `src/node` option most, but it's ok for me to keep in init for now and move that later.",
      "created_at": "2023-06-30T17:02:32Z",
      "updated_at": "2023-06-30T17:24:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1248094492",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248094492"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1905,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248159158",
      "pull_request_review_id": 1507692836,
      "id": 1248159158,
      "node_id": "PRRC_kwDOABII585KZWW2",
      "diff_hunk": "@@ -406,6 +406,7 @@ const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& start_bl\n {\n     AssertLockHeld(::cs_main);\n     const CBlockIndex* last_block = &start_block;\n+    assert(last_block->nStatus & BLOCK_HAVE_DATA);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "b0932ec260acd54d77022205f22167ee951cc36d",
      "in_reply_to_id": 1247996232,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> So I think if we now require that \"The caller must ensure that upper_block has block data available.\" we should adjust the existing callers to do that.\r\n\r\nIs there something you would like to see specifically, like adding asserts at the call site? I thought most of the call sites were just passing the chain tip, so it's hard to see how this could cause a problem unless the tip was pruned, in which case the current assert failure would be seem pretty appropriate",
      "created_at": "2023-06-30T18:20:16Z",
      "updated_at": "2023-06-30T18:20:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1248159158",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248159158"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248166855",
      "pull_request_review_id": 1507704170,
      "id": 1248166855,
      "node_id": "PRRC_kwDOABII585KZYPH",
      "diff_hunk": "@@ -406,6 +406,7 @@ const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& start_bl\n {\n     AssertLockHeld(::cs_main);\n     const CBlockIndex* last_block = &start_block;\n+    assert(last_block->nStatus & BLOCK_HAVE_DATA);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "b0932ec260acd54d77022205f22167ee951cc36d",
      "in_reply_to_id": 1247996232,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think an assert failure is appropiate if having a pruned tip is a valid state that bitcoin core can be in, which seems to be the case, at least in the examples above. For example, it should be possible to call `getblockchaininfo` directly after loading a snapshot from disk, without triggering an assert.",
      "created_at": "2023-06-30T18:29:52Z",
      "updated_at": "2023-06-30T18:29:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1248166855",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248166855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248168420",
      "pull_request_review_id": 1507706474,
      "id": 1248168420,
      "node_id": "PRRC_kwDOABII585KZYnk",
      "diff_hunk": "@@ -406,6 +406,7 @@ const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& start_bl\n {\n     AssertLockHeld(::cs_main);\n     const CBlockIndex* last_block = &start_block;\n+    assert(last_block->nStatus & BLOCK_HAVE_DATA);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "b0932ec260acd54d77022205f22167ee951cc36d",
      "in_reply_to_id": 1247996232,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Based on the `AssumeUTXO` line. It seems to be expected to not have block data available right after importing the chainstate. And that shouldn't crash the software if the user calls `pruneblockchain` or `getblockchaininfo`.\r\n\r\n-- ok well.. we wrote the same thing at the same time --",
      "created_at": "2023-06-30T18:31:45Z",
      "updated_at": "2023-06-30T18:33:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1248168420",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248168420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248182230",
      "pull_request_review_id": 1507728028,
      "id": 1248182230,
      "node_id": "PRRC_kwDOABII585KZb_W",
      "diff_hunk": "@@ -406,6 +406,7 @@ const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& start_bl\n {\n     AssertLockHeld(::cs_main);\n     const CBlockIndex* last_block = &start_block;\n+    assert(last_block->nStatus & BLOCK_HAVE_DATA);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "b0932ec260acd54d77022205f22167ee951cc36d",
      "in_reply_to_id": 1247996232,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I see, so maybe current code is buggy and returns bad rpc results then? I guess simplest thing to do is just document GetFirstStoredBlock's odd behavior in this case and keep it unchanged, rather than returning nullptr which could segfault, or adding an assertion.\r\n\r\nThe new GetFirstStoredBlock function should be able to straightforwardly return false in this case, though.",
      "created_at": "2023-06-30T18:47:48Z",
      "updated_at": "2023-06-30T18:47:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1248182230",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248182230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248314125",
      "pull_request_review_id": 1507938961,
      "id": 1248314125,
      "node_id": "PRRC_kwDOABII585KZ8MN",
      "diff_hunk": "@@ -406,6 +406,7 @@ const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& start_bl\n {\n     AssertLockHeld(::cs_main);\n     const CBlockIndex* last_block = &start_block;\n+    assert(last_block->nStatus & BLOCK_HAVE_DATA);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "b0932ec260acd54d77022205f22167ee951cc36d",
      "in_reply_to_id": 1247996232,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I see, so maybe current code is buggy and returns bad rpc results then? \r\n\r\nyeah.\r\n\r\n> I guess simplest thing to do is just document GetFirstStoredBlock's odd behavior in this case and keep it unchanged, rather than returning nullptr which could segfault, or adding an assertion.\r\n\r\nHave struggled a bit with this.\r\nI tried to maintain the previous `GetFirstStoredBlock` behavior but it conflicts so much with the function's description: \"Find the first stored ancestor of 'start_block' immediately after the last pruned ancestor\" that I couldn't come up with a suitable explanation for this \"oddity\".\r\n\r\nHave preferred to transfer the responsibility of checking the 'start_block' data availability to the few callers who use it (only two places), without altering their behavior in any way.\r\n\r\nI think that the changes are minimal and help to reduce confusion. But let me know what you guys think.",
      "created_at": "2023-06-30T22:09:20Z",
      "updated_at": "2023-06-30T22:09:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1248314125",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248314125"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253746547",
      "pull_request_review_id": 1515502475,
      "id": 1253746547,
      "node_id": "PRRC_kwDOABII585Kuqdz",
      "diff_hunk": "@@ -406,6 +406,7 @@ const CBlockIndex* BlockManager::GetFirstStoredBlock(const CBlockIndex& start_bl\n {\n     AssertLockHeld(::cs_main);\n     const CBlockIndex* last_block = &start_block;\n+    assert(last_block->nStatus & BLOCK_HAVE_DATA);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "b0932ec260acd54d77022205f22167ee951cc36d",
      "in_reply_to_id": 1247996232,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"make GetFirstStoredBlock assert that 'start_block' always has data\" (aad83e489a9f515a1da36acd3e99f35b1a0da53c)\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1248314125\r\n\r\n> I think that the changes are minimal and help to reduce confusion. But let me know what you guys think.\r\n\r\nThanks for that. I think it would have been fine to just keep the `GetFirstStoredBlock` behavior unchanged, and just document it, but fixing the call sites is probably better in the long run",
      "created_at": "2023-07-05T23:18:38Z",
      "updated_at": "2023-07-06T04:28:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1253746547",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253746547"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253746784",
      "pull_request_review_id": 1515502475,
      "id": 1253746784,
      "node_id": "PRRC_kwDOABII585Kuqhg",
      "diff_hunk": "@@ -113,7 +113,8 @@ bool BaseIndex::Init()\n         if (!start_block) {\n             // index is not built yet\n             // make sure we have all block data back to the genesis\n-            prune_violation = m_chainstate->m_blockman.GetFirstStoredBlock(*active_chain.Tip()) != active_chain.Genesis();\n+            bool has_tip_data = active_chain.Tip()->nStatus & BLOCK_HAVE_DATA;\n+            prune_violation = !has_tip_data || m_chainstate->m_blockman.GetFirstStoredBlock(*active_chain.Tip()) != active_chain.Genesis();",
      "path": "src/index/base.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "aad83e489a9f515a1da36acd3e99f35b1a0da53c",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"make GetFirstStoredBlock assert that 'start_block' always has data\" (aad83e489a9f515a1da36acd3e99f35b1a0da53c)\r\n\r\nIt seems like there is a slight change in behavior here. Previously if the tip did not have data, but all blocks before it did have data there would not be a prune violation. Now there will be prune violation.\r\n\r\nThis is probably a good thing. I don't think this case actually needs to be an error if the missing blocks are <= than the assumeutxo snapshot height, and the blocks will be just be downloaded later as part of the background sync. But as long as it is an error currently, it seems best if the error happens consistently.\r\n\r\nIn any case, commit message could mention this is changing behavior in a corner case.",
      "created_at": "2023-07-05T23:18:58Z",
      "updated_at": "2023-07-06T04:28:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1253746784",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253746784"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253898394",
      "pull_request_review_id": 1515502475,
      "id": 1253898394,
      "node_id": "PRRC_kwDOABII585KvPia",
      "diff_hunk": "@@ -810,8 +810,10 @@ static RPCHelpMan pruneblockchain()\n         height = chainHeight - MIN_BLOCKS_TO_KEEP;\n     }\n \n-    PruneBlockFilesManual(active_chainstate, height);\n     const CBlockIndex& block{*CHECK_NONFATAL(active_chain.Tip())};\n+    if (!(block.nStatus & BLOCK_HAVE_DATA)) throw JSONRPCError(RPC_MISC_ERROR, \"Nothing to prune. No block data available for the chain tip.\");",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "aad83e489a9f515a1da36acd3e99f35b1a0da53c",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"make GetFirstStoredBlock assert that 'start_block' always has data\" (aad83e489a9f515a1da36acd3e99f35b1a0da53c)\r\n\r\nThe `pruneblockchain` RPC doesn't consider it an error to prune a block that's already been pruned. It just makes a best effort to prune what it can, and then it returns the height of the last block without transaction data.\r\n\r\nSo I think it would be more consistent to not make this an error, and just do:\r\n\r\n```c++\r\nPruneBlockFilesManual(active_chainstate, height);\r\nreturn block.nStatus & BLOCK_HAVE_DATA ? GetFirstStoredBlock(block)->nHeight -1 : block->nHeight;\r\n```\r\n\r\nThis would be a smaller change in behavior. It would make the RPC method consistently return the height of the highest block without data, instead of being off-by-one in this case.",
      "created_at": "2023-07-06T04:03:27Z",
      "updated_at": "2023-07-06T04:29:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1253898394",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253898394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 814,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253906502",
      "pull_request_review_id": 1515502475,
      "id": 1253906502,
      "node_id": "PRRC_kwDOABII585KvRhG",
      "diff_hunk": "@@ -1267,7 +1269,8 @@ RPCHelpMan getblockchaininfo()\n     obj.pushKV(\"size_on_disk\", chainman.m_blockman.CalculateCurrentUsage());\n     obj.pushKV(\"pruned\", chainman.m_blockman.IsPruneMode());\n     if (chainman.m_blockman.IsPruneMode()) {\n-        obj.pushKV(\"pruneheight\", chainman.m_blockman.GetFirstStoredBlock(tip)->nHeight);\n+        bool has_tip_data = tip.nStatus & BLOCK_HAVE_DATA;\n+        obj.pushKV(\"pruneheight\", has_tip_data ? chainman.m_blockman.GetFirstStoredBlock(tip)->nHeight : tip.nHeight);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "aad83e489a9f515a1da36acd3e99f35b1a0da53c",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"make GetFirstStoredBlock assert that 'start_block' always has data\" (aad83e489a9f515a1da36acd3e99f35b1a0da53c)\r\n\r\nThis preserves current behavior, but it is inconsistent with the documentation which says the field is be set to \"height of the last block pruned, plus one\". To make the code actually consistent with the documentation, this should be:\r\n\r\n```c++\r\nobj.pushKV(\"pruneheight\", has_tip_data ? chainman.m_blockman.GetFirstStoredBlock(tip)->nHeight : tip.nHeight + 1);\r\n```\r\n\r\nAlternately, to make the documentation consistent with the code, the documentation could be changed to \"height of first stored block after the last pruned or assumed-valid block. Or, the height of the last pruned or assumed valid block if no valid blocks after it have been downloaded yet.\"\r\n\r\nI would probably update the code rather than the documentation, since that seems simpler, and this case should only happen when there's an assumeutxo snapshot so there shouldn't be a backwards compatibility concern.",
      "created_at": "2023-07-06T04:21:19Z",
      "updated_at": "2023-07-06T04:28:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1253906502",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253906502"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1273,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254460179",
      "pull_request_review_id": 1516581154,
      "id": 1254460179,
      "node_id": "PRRC_kwDOABII585KxYsT",
      "diff_hunk": "@@ -1267,7 +1269,8 @@ RPCHelpMan getblockchaininfo()\n     obj.pushKV(\"size_on_disk\", chainman.m_blockman.CalculateCurrentUsage());\n     obj.pushKV(\"pruned\", chainman.m_blockman.IsPruneMode());\n     if (chainman.m_blockman.IsPruneMode()) {\n-        obj.pushKV(\"pruneheight\", chainman.m_blockman.GetFirstStoredBlock(tip)->nHeight);\n+        bool has_tip_data = tip.nStatus & BLOCK_HAVE_DATA;\n+        obj.pushKV(\"pruneheight\", has_tip_data ? chainman.m_blockman.GetFirstStoredBlock(tip)->nHeight : tip.nHeight);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "aad83e489a9f515a1da36acd3e99f35b1a0da53c",
      "in_reply_to_id": 1253906502,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I would probably update the code rather than the documentation, since that seems simpler, and this case should only happen when there's an assumeutxo snapshot so there shouldn't be a backwards compatibility concern.\r\n\r\nWouldn't be odd for the user to receive the height of a block that they do not have? (tip + 1).\r\n\r\nIsn't really a big deal anyway, this is an edge case and we can stick to the current RPC docs. But maybe would be good to discuss further what \"pruneheight\" result should be in a follow-up. it sounds better if we directly return the last pruned height.\r\n ",
      "created_at": "2023-07-06T13:41:01Z",
      "updated_at": "2023-07-06T13:52:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1254460179",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254460179"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1273,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254462432",
      "pull_request_review_id": 1516581154,
      "id": 1254462432,
      "node_id": "PRRC_kwDOABII585KxZPg",
      "diff_hunk": "@@ -113,7 +113,8 @@ bool BaseIndex::Init()\n         if (!start_block) {\n             // index is not built yet\n             // make sure we have all block data back to the genesis\n-            prune_violation = m_chainstate->m_blockman.GetFirstStoredBlock(*active_chain.Tip()) != active_chain.Genesis();\n+            bool has_tip_data = active_chain.Tip()->nStatus & BLOCK_HAVE_DATA;\n+            prune_violation = !has_tip_data || m_chainstate->m_blockman.GetFirstStoredBlock(*active_chain.Tip()) != active_chain.Genesis();",
      "path": "src/index/base.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "aad83e489a9f515a1da36acd3e99f35b1a0da53c",
      "in_reply_to_id": 1253746784,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done, extended the commit description.",
      "created_at": "2023-07-06T13:42:50Z",
      "updated_at": "2023-07-06T13:52:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1254462432",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254462432"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254464720",
      "pull_request_review_id": 1516581154,
      "id": 1254464720,
      "node_id": "PRRC_kwDOABII585KxZzQ",
      "diff_hunk": "@@ -810,8 +810,10 @@ static RPCHelpMan pruneblockchain()\n         height = chainHeight - MIN_BLOCKS_TO_KEEP;\n     }\n \n-    PruneBlockFilesManual(active_chainstate, height);\n     const CBlockIndex& block{*CHECK_NONFATAL(active_chain.Tip())};\n+    if (!(block.nStatus & BLOCK_HAVE_DATA)) throw JSONRPCError(RPC_MISC_ERROR, \"Nothing to prune. No block data available for the chain tip.\");",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "aad83e489a9f515a1da36acd3e99f35b1a0da53c",
      "in_reply_to_id": 1253898394,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done 👍🏼.",
      "created_at": "2023-07-06T13:44:33Z",
      "updated_at": "2023-07-06T13:52:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1254464720",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254464720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 814,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254477566",
      "pull_request_review_id": 1516608297,
      "id": 1254477566,
      "node_id": "PRRC_kwDOABII585Kxc7-",
      "diff_hunk": "@@ -1267,7 +1269,8 @@ RPCHelpMan getblockchaininfo()\n     obj.pushKV(\"size_on_disk\", chainman.m_blockman.CalculateCurrentUsage());\n     obj.pushKV(\"pruned\", chainman.m_blockman.IsPruneMode());\n     if (chainman.m_blockman.IsPruneMode()) {\n-        obj.pushKV(\"pruneheight\", chainman.m_blockman.GetFirstStoredBlock(tip)->nHeight);\n+        bool has_tip_data = tip.nStatus & BLOCK_HAVE_DATA;\n+        obj.pushKV(\"pruneheight\", has_tip_data ? chainman.m_blockman.GetFirstStoredBlock(tip)->nHeight : tip.nHeight);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "aad83e489a9f515a1da36acd3e99f35b1a0da53c",
      "in_reply_to_id": 1253906502,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Pushed the suggested code changes.",
      "created_at": "2023-07-06T13:53:45Z",
      "updated_at": "2023-07-06T13:53:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1254477566",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254477566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1273,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254614971",
      "pull_request_review_id": 1516827895,
      "id": 1254614971,
      "node_id": "PRRC_kwDOABII585Kx-e7",
      "diff_hunk": "@@ -217,8 +217,16 @@ class BlockManager\n     //! Returns last CBlockIndex* that is a checkpoint\n     const CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    //! Find the first block that is not pruned\n-    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    //! Check if all blocks in the [upper_block, lower_block] range have data available.\n+    //! Preconditions:\n+    //!  1) The caller must ensure that upper_block has block data available.",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 8,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "9ef5099dac06f0cc4b904fefe9620c9fc09c0ddc",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: simplify pruning violation check\" (9ef5099dac06f0cc4b904fefe9620c9fc09c0ddc)\r\n\r\nThis comment is no longer true. The `CheckBlockDataAvailability` function will just return false in this case, the caller doesn't need to check if the block has data itself.",
      "created_at": "2023-07-06T15:38:15Z",
      "updated_at": "2023-07-06T16:50:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1254614971",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254614971"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254618240",
      "pull_request_review_id": 1516827895,
      "id": 1254618240,
      "node_id": "PRRC_kwDOABII585Kx_SA",
      "diff_hunk": "@@ -217,8 +217,16 @@ class BlockManager\n     //! Returns last CBlockIndex* that is a checkpoint\n     const CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    //! Find the first block that is not pruned\n-    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    //! Check if all blocks in the [upper_block, lower_block] range have data available.\n+    //! Preconditions:\n+    //!  1) The caller must ensure that upper_block has block data available.\n+    //!  2) The caller must ensure that lower_block is an ancestor of upper_block (part of the same chain).\n+    bool CheckBlockDataAvailability(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex& lower_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    //! Find the first stored ancestor of start_block immediately after the last\n+    //! pruned ancestor. Return value will never be null. Caller is responsible\n+    //! for ensuring that start_block has data is not pruned.",
      "path": "src/node/blockstorage.h",
      "position": 21,
      "original_position": 14,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "9ef5099dac06f0cc4b904fefe9620c9fc09c0ddc",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: simplify pruning violation check\" (9ef5099dac06f0cc4b904fefe9620c9fc09c0ddc)\r\n\r\nWould be probably make sense to move new this comment to the earlier commit \"make GetFirstStoredBlock assert that 'start_block' always has data\" (79449741fa7b2fc3e59dbc92e408cff547a885fa), since everything described is true there and applies more to that commit.",
      "created_at": "2023-07-06T15:40:45Z",
      "updated_at": "2023-07-06T16:50:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1254618240",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254618240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": 229,
      "original_start_line": 226,
      "start_side": "RIGHT",
      "line": 231,
      "original_line": 231,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254647941",
      "pull_request_review_id": 1516827895,
      "id": 1254647941,
      "node_id": "PRRC_kwDOABII585KyGiF",
      "diff_hunk": "@@ -1886,6 +1883,48 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n bool StartIndexBackgroundSync(NodeContext& node)\n {\n+    // Find the oldest block among all indexes.\n+    // This block is used to verify that we have the required blocks' data stored on disk,\n+    // starting from that point up to the current tip.\n+    // indexes_start_block='nullptr' means \"start from height 0\".\n+    std::optional<const CBlockIndex*> indexes_start_block;\n+    std::string older_index_name;\n+\n+    ChainstateManager& chainman = *Assert(node.chainman);\n+    for (auto index : node.indexes) {\n+        // If the index best block is nullptr, means that we will start from the genesis block\n+        if (indexes_start_block && !indexes_start_block.value()) continue; // So, nothing to do.\n+\n+        const IndexSummary& summary = index->GetSummary();\n+        if (summary.synced) continue;\n+\n+        // Get the last common block between the index best block and the active chain\n+        LOCK(::cs_main);\n+        const CChain& active_chain = chainman.ActiveChain();\n+        const CBlockIndex* pindex = chainman.m_blockman.LookupBlockIndex(summary.best_block_hash);\n+        if (!active_chain.Contains(pindex)) {\n+            pindex = active_chain.FindFork(pindex);\n+        }\n+\n+        // Update start block\n+        bool need_start_from_scratch = !indexes_start_block || !pindex;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "30b2511f39d32e29f9f05859aa8a97b84c22376b",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"index: verify blocks data existence only once\" (30b2511f39d32e29f9f05859aa8a97b84c22376b)\r\n\r\nThe variable name `need_start_from_scratch` seems misleading because it will be true even when not syncing from genesis. Would suggest simplifying and clarifying with:\r\n\r\n```diff\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -1892,9 +1892,6 @@ bool StartIndexBackgroundSync(NodeContext& node)\r\n \r\n     ChainstateManager& chainman = *Assert(node.chainman);\r\n     for (auto index : node.indexes) {\r\n-        // If the index best block is nullptr, means that we will start from the genesis block\r\n-        if (indexes_start_block && !indexes_start_block.value()) continue; // So, nothing to do.\r\n-\r\n         const IndexSummary& summary = index->GetSummary();\r\n         if (summary.synced) continue;\r\n \r\n@@ -1906,11 +1903,10 @@ bool StartIndexBackgroundSync(NodeContext& node)\r\n             pindex = active_chain.FindFork(pindex);\r\n         }\r\n \r\n-        // Update start block\r\n-        bool need_start_from_scratch = !indexes_start_block || !pindex;\r\n-        if (need_start_from_scratch || pindex->nHeight < indexes_start_block.value()->nHeight) {\r\n+        if (!indexes_start_block || !pindex || pindex->nHeight < indexes_start_block.value()->nHeight) {\r\n             indexes_start_block = pindex;\r\n             older_index_name = summary.name;\r\n+            if (!pindex) break; // Starting from genesis so no need to look for earlier block.\r\n         }\r\n     };\r\n \r\n```",
      "created_at": "2023-07-06T16:07:39Z",
      "updated_at": "2023-07-06T16:50:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1254647941",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254647941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1910,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254925898",
      "pull_request_review_id": 1517324553,
      "id": 1254925898,
      "node_id": "PRRC_kwDOABII585KzKZK",
      "diff_hunk": "@@ -1886,6 +1883,48 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n bool StartIndexBackgroundSync(NodeContext& node)\n {\n+    // Find the oldest block among all indexes.\n+    // This block is used to verify that we have the required blocks' data stored on disk,\n+    // starting from that point up to the current tip.\n+    // indexes_start_block='nullptr' means \"start from height 0\".\n+    std::optional<const CBlockIndex*> indexes_start_block;\n+    std::string older_index_name;\n+\n+    ChainstateManager& chainman = *Assert(node.chainman);\n+    for (auto index : node.indexes) {\n+        // If the index best block is nullptr, means that we will start from the genesis block\n+        if (indexes_start_block && !indexes_start_block.value()) continue; // So, nothing to do.\n+\n+        const IndexSummary& summary = index->GetSummary();\n+        if (summary.synced) continue;\n+\n+        // Get the last common block between the index best block and the active chain\n+        LOCK(::cs_main);\n+        const CChain& active_chain = chainman.ActiveChain();\n+        const CBlockIndex* pindex = chainman.m_blockman.LookupBlockIndex(summary.best_block_hash);\n+        if (!active_chain.Contains(pindex)) {\n+            pindex = active_chain.FindFork(pindex);\n+        }\n+\n+        // Update start block\n+        bool need_start_from_scratch = !indexes_start_block || !pindex;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "30b2511f39d32e29f9f05859aa8a97b84c22376b",
      "in_reply_to_id": 1254647941,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure, applied. Thanks!",
      "created_at": "2023-07-06T21:14:02Z",
      "updated_at": "2023-07-06T21:14:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1254925898",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254925898"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1910,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254926965",
      "pull_request_review_id": 1517325528,
      "id": 1254926965,
      "node_id": "PRRC_kwDOABII585KzKp1",
      "diff_hunk": "@@ -217,8 +217,16 @@ class BlockManager\n     //! Returns last CBlockIndex* that is a checkpoint\n     const CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    //! Find the first block that is not pruned\n-    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    //! Check if all blocks in the [upper_block, lower_block] range have data available.\n+    //! Preconditions:\n+    //!  1) The caller must ensure that upper_block has block data available.",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 8,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "9ef5099dac06f0cc4b904fefe9620c9fc09c0ddc",
      "in_reply_to_id": 1254614971,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "comment removed. Thanks.",
      "created_at": "2023-07-06T21:15:24Z",
      "updated_at": "2023-07-06T21:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1254926965",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1254926965"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257458241",
      "pull_request_review_id": 1520884392,
      "id": 1257458241,
      "node_id": "PRRC_kwDOABII585K80pB",
      "diff_hunk": "@@ -111,37 +111,24 @@ bool BaseIndex::Init()\n     const CBlockIndex* start_block = m_best_block_index.load();\n     bool synced = start_block == active_chain.Tip();\n     if (!synced && g_indexes_ready_to_sync) {\n-        bool prune_violation = false;\n-        if (!start_block) {\n-            // index is not built yet\n-            // make sure we have all block data back to the genesis\n-            bool has_tip_data = active_chain.Tip()->nStatus & BLOCK_HAVE_DATA;\n-            prune_violation = !has_tip_data || m_chainstate->m_blockman.GetFirstStoredBlock(*active_chain.Tip()) != active_chain.Genesis();\n+        const CBlockIndex* block_to_test = start_block;\n+        if (!block_to_test) block_to_test = active_chain.Genesis();",
      "path": "src/index/base.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "b5f8bbff463c11418351d4c3437e013e81dac5b1",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `const CBlockIndex* block_to_test = start_block ? start_block : active_chain.Genesis();`",
      "created_at": "2023-07-09T10:45:49Z",
      "updated_at": "2023-07-09T11:06:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1257458241",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257458241"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 115,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258195719",
      "pull_request_review_id": 1521991201,
      "id": 1258195719,
      "node_id": "PRRC_kwDOABII585K_osH",
      "diff_hunk": "@@ -54,6 +54,8 @@ class BaseIndex : public CValidationInterface\n     };\n \n private:\n+    /// Whether the index has been initialized or not.\n+    std::atomic<bool> m_init{false};",
      "path": "src/index/base.h",
      "position": 13,
      "original_position": 5,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "18bf3abc2babbe066e5d4b5798209826316c8295",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "18bf3abc2babbe066e5d4b5798209826316c8295: Why is this atomic, when only a single thread has access? Or is the other code multi thread safe?",
      "created_at": "2023-07-10T12:39:15Z",
      "updated_at": "2023-07-10T13:25:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1258195719",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258195719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 59,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258201606",
      "pull_request_review_id": 1521991201,
      "id": 1258201606,
      "node_id": "PRRC_kwDOABII585K_qIG",
      "diff_hunk": "@@ -1554,25 +1554,22 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         }\n \n         g_txindex = std::make_unique<TxIndex>(interfaces::MakeChain(node), cache_sizes.tx_index, false, fReindex);\n-        if (!g_txindex->Start()) {\n-            return false;\n-        }\n+        node.indexes.emplace_back(g_txindex.get());\n     }\n \n     for (const auto& filter_type : g_enabled_filter_types) {\n         InitBlockFilterIndex([&]{ return interfaces::MakeChain(node); }, filter_type, cache_sizes.filter_index, false, fReindex);\n-        if (!GetBlockFilterIndex(filter_type)->Start()) {\n-            return false;\n-        }\n+        node.indexes.emplace_back(GetBlockFilterIndex(filter_type));\n     }\n \n     if (args.GetBoolArg(\"-coinstatsindex\", DEFAULT_COINSTATSINDEX)) {\n         g_coin_stats_index = std::make_unique<CoinStatsIndex>(interfaces::MakeChain(node), /*cache_size=*/0, false, fReindex);\n-        if (!g_coin_stats_index->Start()) {\n-            return false;\n-        }\n+        node.indexes.emplace_back(g_coin_stats_index.get());\n     }\n \n+    // Now that all indexes are loaded, start them\n+    StartIndexes(node);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "225e213110602b4fd1d345167f5f92d26557f6c1",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "225e213110602b4fd1d345167f5f92d26557f6c1: Why ignore the return value? This makes the tests fail",
      "created_at": "2023-07-10T12:42:55Z",
      "updated_at": "2023-07-10T13:25:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1258201606",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258201606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1571,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258287264",
      "pull_request_review_id": 1522120964,
      "id": 1258287264,
      "node_id": "PRRC_kwDOABII585K__Cg",
      "diff_hunk": "@@ -54,6 +54,8 @@ class BaseIndex : public CValidationInterface\n     };\n \n private:\n+    /// Whether the index has been initialized or not.\n+    std::atomic<bool> m_init{false};",
      "path": "src/index/base.h",
      "position": 13,
      "original_position": 5,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "18bf3abc2babbe066e5d4b5798209826316c8295",
      "in_reply_to_id": 1258195719,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "At the end of the PR, two threads end up accessing the variable. The `BaseIndex::Init` call stays in the main thread, while the `BaseIndex::StartBackgroundSync` call is moved to the 'loadblk' thread (now called 'initload')",
      "created_at": "2023-07-10T13:41:53Z",
      "updated_at": "2023-07-10T13:57:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1258287264",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258287264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 59,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258307033",
      "pull_request_review_id": 1522149212,
      "id": 1258307033,
      "node_id": "PRRC_kwDOABII585LAD3Z",
      "diff_hunk": "@@ -1554,25 +1554,22 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         }\n \n         g_txindex = std::make_unique<TxIndex>(interfaces::MakeChain(node), cache_sizes.tx_index, false, fReindex);\n-        if (!g_txindex->Start()) {\n-            return false;\n-        }\n+        node.indexes.emplace_back(g_txindex.get());\n     }\n \n     for (const auto& filter_type : g_enabled_filter_types) {\n         InitBlockFilterIndex([&]{ return interfaces::MakeChain(node); }, filter_type, cache_sizes.filter_index, false, fReindex);\n-        if (!GetBlockFilterIndex(filter_type)->Start()) {\n-            return false;\n-        }\n+        node.indexes.emplace_back(GetBlockFilterIndex(filter_type));\n     }\n \n     if (args.GetBoolArg(\"-coinstatsindex\", DEFAULT_COINSTATSINDEX)) {\n         g_coin_stats_index = std::make_unique<CoinStatsIndex>(interfaces::MakeChain(node), /*cache_size=*/0, false, fReindex);\n-        if (!g_coin_stats_index->Start()) {\n-            return false;\n-        }\n+        node.indexes.emplace_back(g_coin_stats_index.get());\n     }\n \n+    // Now that all indexes are loaded, start them\n+    StartIndexes(node);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "225e213110602b4fd1d345167f5f92d26557f6c1",
      "in_reply_to_id": 1258201606,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "upps, fixed the intermediate commit. Thanks.",
      "created_at": "2023-07-10T13:53:09Z",
      "updated_at": "2023-07-10T13:53:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1258307033",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258307033"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1571,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258307306",
      "pull_request_review_id": 1522149546,
      "id": 1258307306,
      "node_id": "PRRC_kwDOABII585LAD7q",
      "diff_hunk": "@@ -111,37 +111,24 @@ bool BaseIndex::Init()\n     const CBlockIndex* start_block = m_best_block_index.load();\n     bool synced = start_block == active_chain.Tip();\n     if (!synced && g_indexes_ready_to_sync) {\n-        bool prune_violation = false;\n-        if (!start_block) {\n-            // index is not built yet\n-            // make sure we have all block data back to the genesis\n-            bool has_tip_data = active_chain.Tip()->nStatus & BLOCK_HAVE_DATA;\n-            prune_violation = !has_tip_data || m_chainstate->m_blockman.GetFirstStoredBlock(*active_chain.Tip()) != active_chain.Genesis();\n+        const CBlockIndex* block_to_test = start_block;\n+        if (!block_to_test) block_to_test = active_chain.Genesis();",
      "path": "src/index/base.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "ca91c244ef1ba7eac6643d66a5fc56d3a2a8b550",
      "original_commit_id": "b5f8bbff463c11418351d4c3437e013e81dac5b1",
      "in_reply_to_id": 1257458241,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2023-07-10T13:53:18Z",
      "updated_at": "2023-07-10T13:53:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1258307306",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258307306"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 115,
      "side": "RIGHT"
    }
  ]
}