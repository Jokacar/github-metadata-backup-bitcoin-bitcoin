{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328",
    "id": 1935933587,
    "node_id": "PR_kwDOABII585zZACT",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30328",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30328.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30328.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30328",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30328/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/ed5608a5fd2ee7984afb32dd331b9665c1de1fcb",
    "number": 30328,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "wallet: Remove IsMine from migration code",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The legacy wallet `IsMine` code will be removed with the legacy wallet, but is still partially needed for migration. Instead of using `IsMine` directly in migration, equivalent checks are performed by migration.\r\n\r\nBuilds on #26596 ",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "created_at": "2024-06-24T16:40:47Z",
    "updated_at": "2024-10-30T18:24:28Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "242f1d4fc5ca0efc6b4c597a05edc619f0cc0a1a",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "achow101:migrate-inline-ismine",
      "ref": "migrate-inline-ismine",
      "sha": "ed5608a5fd2ee7984afb32dd331b9665c1de1fcb",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 45006379,
        "node_id": "MDEwOlJlcG9zaXRvcnk0NTAwNjM3OQ==",
        "name": "bitcoin",
        "full_name": "achow101/bitcoin",
        "owner": {
          "login": "achow101",
          "id": 3782274,
          "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/achow101",
          "html_url": "https://github.com/achow101",
          "followers_url": "https://api.github.com/users/achow101/followers",
          "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
          "organizations_url": "https://api.github.com/users/achow101/orgs",
          "repos_url": "https://api.github.com/users/achow101/repos",
          "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/achow101/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/achow101/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/achow101/bitcoin",
        "archive_url": "https://api.github.com/repos/achow101/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/achow101/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/achow101/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/achow101/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/achow101/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/achow101/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/achow101/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/achow101/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/achow101/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/achow101/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/achow101/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/achow101/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/achow101/bitcoin/events",
        "forks_url": "https://api.github.com/repos/achow101/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/achow101/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/achow101/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/achow101/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/achow101/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/achow101/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/achow101/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/achow101/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/achow101/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/achow101/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/achow101/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/achow101/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/achow101/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/achow101/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/achow101/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/achow101/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:achow101/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/achow101/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/achow101/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/achow101/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/achow101/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/achow101/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/achow101/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/achow101/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/achow101/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/achow101/bitcoin/hooks",
        "svn_url": "https://github.com/achow101/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 8,
        "stargazers_count": 39,
        "watchers_count": 39,
        "size": 284445,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-29T21:06:15Z",
        "created_at": "2015-10-27T00:20:28Z",
        "updated_at": "2024-10-04T23:43:44Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "538ccaed004ff89ec8b2b71d8711feed624ffccc",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36292,
        "stargazers_count": 79132,
        "watchers_count": 79132,
        "size": 270491,
        "default_branch": "master",
        "open_issues_count": 640,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-29T19:32:24Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-10-30T16:42:40Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 139,
    "deletions": 27,
    "changed_files": 2,
    "commits": 2,
    "review_comments": 10,
    "comments": 5
  },
  "events": [
    {
      "event": "commented",
      "id": 2186987135,
      "node_id": "IC_kwDOABII586CWsZ_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2186987135",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-24T16:40:50Z",
      "updated_at": "2024-10-30T18:24:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30328).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [theStack](https://github.com/bitcoin/bitcoin/pull/30328#pullrequestreview-2196286870) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28710](https://github.com/bitcoin/bitcoin/pull/28710) (Remove the legacy wallet and BDB dependency by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#issuecomment-2186987135",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30328"
    },
    {
      "event": "labeled",
      "id": 13269106942,
      "node_id": "LE_lADOABII586NTY_uzwAAAAMW5oD-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13269106942",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-24T16:40:52Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13355282170,
      "node_id": "HRFPE_lADOABII586NTY_uzwAAAAMcCW76",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13355282170",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T18:48:15Z"
    },
    {
      "event": "convert_to_draft",
      "id": 13427412885,
      "node_id": "CTDE_lADOABII586NTY_uzwAAAAMgVg-V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13427412885",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-08T17:29:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13476549068,
      "node_id": "HRFPE_lADOABII586NTY_uzwAAAAMjQ9HM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13476549068",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T19:29:41Z"
    },
    {
      "event": "ready_for_review",
      "id": 13476550066,
      "node_id": "RFRE_lADOABII586NTY_uzwAAAAMjQ9Wy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13476550066",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T19:29:48Z"
    },
    {
      "event": "commented",
      "id": 2223723973,
      "node_id": "IC_kwDOABII586Ei1XF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2223723973",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T19:30:23Z",
      "updated_at": "2024-07-11T19:30:23Z",
      "author_association": "MEMBER",
      "body": "Ready for review now that #26596 has been merged.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#issuecomment-2223723973",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30328"
    },
    {
      "event": "reviewed",
      "id": 2186531990,
      "node_id": "PRR_kwDOABII586CU9SW",
      "url": null,
      "actor": null,
      "commit_id": "d5d994c02bb54db395da457724ec45539f1c10a8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#pullrequestreview-2186531990",
      "submitted_at": "2024-07-18T18:01:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
    },
    {
      "event": "reviewed",
      "id": 2186871308,
      "node_id": "PRR_kwDOABII586CWQIM",
      "url": null,
      "actor": null,
      "commit_id": "905e22b469a1e09df9ff0e98bf989a55642f301e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#pullrequestreview-2186871308",
      "submitted_at": "2024-07-18T20:41:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
    },
    {
      "event": "reviewed",
      "id": 2186919023,
      "node_id": "PRR_kwDOABII586CWbxv",
      "url": null,
      "actor": null,
      "commit_id": "905e22b469a1e09df9ff0e98bf989a55642f301e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#pullrequestreview-2186919023",
      "submitted_at": "2024-07-18T21:09:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
    },
    {
      "event": "labeled",
      "id": 13599857620,
      "node_id": "LE_lADOABII586NTY_uzwAAAAMqnVvU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13599857620",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T11:32:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2242736995,
      "node_id": "IC_kwDOABII586FrXNj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2242736995",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T11:32:50Z",
      "updated_at": "2024-07-22T11:32:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/27341718423</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#issuecomment-2242736995",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30328"
    },
    {
      "event": "unlabeled",
      "id": 13601954814,
      "node_id": "UNLE_lADOABII586NTY_uzwAAAAMqvVv-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13601954814",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T14:07:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2196286870,
      "node_id": "PRR_kwDOABII586C6K2W",
      "url": null,
      "actor": null,
      "commit_id": "d5d994c02bb54db395da457724ec45539f1c10a8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, left two code-deduplication nits below",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#pullrequestreview-2196286870",
      "submitted_at": "2024-07-24T10:42:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
    },
    {
      "event": "reviewed",
      "id": 2201704324,
      "node_id": "PRR_kwDOABII586DO1eE",
      "url": null,
      "actor": null,
      "commit_id": "d5d994c02bb54db395da457724ec45539f1c10a8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Commit message in d5d994c02bb54db395da457724ec45539f1c10a8 incorrectly states:\r\n\"This reverts commit bbb1d51e1240da61db2ca1036f9ec91fd2f36f2d.\"\r\n\r\nI believe that commit ended up being merged as b231f4d556876ae70305e8710e31d53525ded8ae.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#pullrequestreview-2201704324",
      "submitted_at": "2024-07-26T12:21:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
    },
    {
      "event": "labeled",
      "id": 13750338894,
      "node_id": "LE_lADOABII586NTY_uzwAAAAMzlYVO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13750338894",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-03T15:00:07Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2266756401,
      "node_id": "IC_kwDOABII586HG_Ux",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2266756401",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-03T15:00:08Z",
      "updated_at": "2024-08-03T15:00:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/27341718760</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#issuecomment-2266756401",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30328"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14118147380,
      "node_id": "HRFPE_lADOABII586NTY_uzwAAAANJgdU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14118147380",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T16:30:02Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14205135002,
      "node_id": "HRFPE_lADOABII586NTY_uzwAAAANOsSia",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14205135002",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T20:09:53Z"
    },
    {
      "event": "unlabeled",
      "id": 14214342113,
      "node_id": "UNLE_lADOABII586NTY_uzwAAAANPPaXh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14214342113",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-11T11:18:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2345733518,
      "node_id": "IC_kwDOABII586L0Q2O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2345733518",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T09:22:37Z",
      "updated_at": "2024-09-12T09:22:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "https://github.com/bitcoin/bitcoin/pull/30328#pullrequestreview-2201704324 still applies to 705d9eb0aef8831891e1cce80c33615440547e90 instead of d5d994c02bb54db395da457724ec45539f1c10a8.\r\n\r\n(Clarified linked comment a bit).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#issuecomment-2345733518",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30328"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14674767400,
      "node_id": "HRFPE_lADOABII586NTY_uzwAAAANqry4o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14674767400",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-16T11:17:15Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRhMTAwOWY5MGUwNWRkZGU0YTdmOTVlNTNmYTE2Yjg1OTAxNDBkYWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a1009f90e05ddde4a7f95e53fa16b8590140dac",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4a1009f90e05ddde4a7f95e53fa16b8590140dac",
      "tree": {
        "sha": "cb38364ba1a371b64e634e0fda627e940638d362",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb38364ba1a371b64e634e0fda627e940638d362"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ca1d1bf69ca364393e924cf41becfde1b68126c",
          "sha": "0ca1d1bf69ca364393e924cf41becfde1b68126c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0ca1d1bf69ca364393e924cf41becfde1b68126c"
        }
      ],
      "message": "wallet: Remove IsMine from migration\n\nAs IsMine will be removed, the relevant components of IsMine are inlined\ninto the migration functions.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-10-16T11:33:35Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-01-05T23:36:24Z"
      },
      "sha": "4a1009f90e05ddde4a7f95e53fa16b8590140dac"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVkNTYwOGE1ZmQyZWU3OTg0YWZiMzJkZDMzMWI5NjY1YzFkZTFmY2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed5608a5fd2ee7984afb32dd331b9665c1de1fcb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ed5608a5fd2ee7984afb32dd331b9665c1de1fcb",
      "tree": {
        "sha": "e21527524635c3207f3c9f1067eca7107c5287cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e21527524635c3207f3c9f1067eca7107c5287cf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a1009f90e05ddde4a7f95e53fa16b8590140dac",
          "sha": "4a1009f90e05ddde4a7f95e53fa16b8590140dac",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4a1009f90e05ddde4a7f95e53fa16b8590140dac"
        }
      ],
      "message": "Revert \"wallet: Move LegacyScriptPubKeyMan::IsMine to LegacyDataSPKM\"\n\nThis reverts commit bbb1d51e1240da61db2ca1036f9ec91fd2f36f2d.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-10-16T11:33:35Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-06-24T16:33:59Z"
      },
      "sha": "ed5608a5fd2ee7984afb32dd331b9665c1de1fcb"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14676206798,
      "node_id": "HRFPE_lADOABII586NTY_uzwAAAANqxSTO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14676206798",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-16T11:33:38Z"
    },
    {
      "event": "review_requested",
      "id": 14852588461,
      "node_id": "RRE_lADOABII586NTY_uzwAAAAN1SIOt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14852588461",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T14:20:29Z",
      "requested_reviewer": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683274753",
      "pull_request_review_id": 2186531990,
      "id": 1683274753,
      "node_id": "PRRC_kwDOABII585kVLwB",
      "diff_hunk": "@@ -1721,37 +1721,157 @@ std::unordered_set<CScript, SaltedSipHasher> LegacyDataSPKM::GetScriptPubKeys()\n     // For all keys, if they have segwit scripts, those scripts will end up in mapScripts\n     for (const auto& script_pair : mapScripts) {\n         const CScript& script = script_pair.second;\n-        if (IsMine(script) == ISMINE_SPENDABLE) {\n-            // Add ScriptHash for scripts that are not already P2SH\n-            if (!script.IsPayToScriptHash()) {\n+        std::vector<std::vector<unsigned char>> sols;\n+        TxoutType type = Solver(script, sols);\n+        switch (type) {\n+        // We don't care aboue these types because they are not spendable",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ed5608a5fd2ee7984afb32dd331b9665c1de1fcb",
      "original_commit_id": "d5d994c02bb54db395da457724ec45539f1c10a8",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        // We don't care about these types because they are not spendable\r\n```",
      "created_at": "2024-07-18T18:01:35Z",
      "updated_at": "2024-07-18T18:01:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#discussion_r1683274753",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683274753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1728,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683481047",
      "pull_request_review_id": 2186871308,
      "id": 1683481047,
      "node_id": "PRRC_kwDOABII585kV-HX",
      "diff_hunk": "@@ -1721,37 +1721,157 @@ std::unordered_set<CScript, SaltedSipHasher> LegacyDataSPKM::GetScriptPubKeys()\n     // For all keys, if they have segwit scripts, those scripts will end up in mapScripts\n     for (const auto& script_pair : mapScripts) {\n         const CScript& script = script_pair.second;\n-        if (IsMine(script) == ISMINE_SPENDABLE) {\n-            // Add ScriptHash for scripts that are not already P2SH\n-            if (!script.IsPayToScriptHash()) {\n+        std::vector<std::vector<unsigned char>> sols;\n+        TxoutType type = Solver(script, sols);\n+        switch (type) {\n+        // We don't care aboue these types because they are not spendable\n+        case TxoutType::NONSTANDARD:\n+        case TxoutType::NULL_DATA:\n+        case TxoutType::WITNESS_UNKNOWN:\n+        case TxoutType::WITNESS_V1_TAPROOT:\n+        case TxoutType::SCRIPTHASH:\n+        // These are only spendable if the witness scripts is also spendable as a scriptPubKey\n+        // We will check these later after spks has been updated with spks from scripts.\n+        case TxoutType::WITNESS_V0_SCRIPTHASH:\n+            break;\n+        // These scriptPubKeys have already been handled by dealing with the keys\n+        // However if these scripts are here, then the P2SH nested spk will be spendable if these are also scriptPubKeys\n+        case TxoutType::PUBKEY:\n+        case TxoutType::PUBKEYHASH:\n+            if (spks.count(script) > 0) {\n                 spks.insert(GetScriptForDestination(ScriptHash(script)));\n             }\n-            // For segwit scripts, we only consider them spendable if we have the segwit spk\n-            int wit_ver = -1;\n-            std::vector<unsigned char> witprog;\n-            if (script.IsWitnessProgram(wit_ver, witprog) && wit_ver == 0) {\n+            break;\n+        case TxoutType::WITNESS_V0_KEYHASH:\n+        {\n+            CKeyID key_id{uint160(sols[0])};\n+            CPubKey pubkey;\n+            if (GetPubKey(key_id, pubkey) && pubkey.IsCompressed() && HaveKey(key_id)) {\n                 spks.insert(script);\n+                spks.insert(GetScriptForDestination(ScriptHash(script)));\n             }\n-        } else {\n-            // Multisigs are special. They don't show up as ISMINE_SPENDABLE unless they are in a P2SH\n-            // So check the P2SH of a multisig to see if we should insert it\n-            std::vector<std::vector<unsigned char>> sols;\n-            TxoutType type = Solver(script, sols);\n-            if (type == TxoutType::MULTISIG) {\n-                CScript ms_spk = GetScriptForDestination(ScriptHash(script));\n-                if (IsMine(ms_spk) != ISMINE_NO) {\n-                    spks.insert(ms_spk);\n+            break;\n+        }\n+        case TxoutType::MULTISIG:\n+        {\n+            // Multisigs are only spendable if we have all of their keys\n+            std::vector<std::vector<unsigned char>> keys(sols.begin() + 1, sols.begin() + sols.size() - 1);\n+            if (!HaveKeys(keys, *this)) {\n+                break;\n+            }\n+            // Multisigs are always spendable inside of P2SH scripts\n+            spks.insert(GetScriptForDestination(ScriptHash(script)));\n+            // We need to have the P2WSH script for the P2WSH to be spendable.\n+            // But the keys also must be compressed\n+            CScript ms_wsh = GetScriptForDestination(WitnessV0ScriptHash(script));\n+            if (HaveCScript(CScriptID(ms_wsh))) {\n+                bool allowed = true;\n+                for (const auto& key : keys) {\n+                    if (key.size() != 33) {\n+                        allowed = false;\n+                        break;\n+                    }\n+                }\n+                if (allowed) {\n+                    spks.insert(ms_wsh);\n+                    spks.insert(GetScriptForDestination(ScriptHash(ms_wsh)));\n                 }\n             }\n+            break;\n+        }\n+        }\n+    }\n+    // Iterate again for all the P2WSH scripts\n+    for (const auto& script_pair : mapScripts) {\n+        const CScript& script = script_pair.second;\n+        std::vector<std::vector<unsigned char>> sols;\n+        TxoutType type = Solver(script, sols);\n+        if (type == TxoutType::WITNESS_V0_SCRIPTHASH) {\n+            uint160 hash;\n+            CRIPEMD160().Write(sols[0].data(), sols[0].size()).Finalize(hash.begin());\n+            CScript witness_script;\n+            int wit_ver = -1;\n+            std::vector<unsigned char> wit_prog;\n+            if (GetCScript(CScriptID(hash), witness_script) &&\n+                !witness_script.IsPayToScriptHash() &&\n+                !witness_script.IsWitnessProgram(wit_ver, wit_prog) &&\n+                spks.count(witness_script) > 0) {\n+                spks.insert(script);\n+                spks.insert(GetScriptForDestination(ScriptHash(script)));\n+            }\n         }\n     }\n \n+    enum class ScriptContext {\n+        TOP,\n+        P2SH,\n+        P2WSH,\n+    };\n+    std::function<bool(const CScript&, const ScriptContext)> is_valid_script = [&](const CScript& script, const ScriptContext ctx) -> bool {\n+        std::vector<valtype> sols;\n+        TxoutType spk_type = Solver(script, sols);\n+\n+        CKeyID keyID;\n+        switch (spk_type) {\n+        case TxoutType::NONSTANDARD:\n+        case TxoutType::NULL_DATA:\n+        case TxoutType::WITNESS_UNKNOWN:\n+        case TxoutType::WITNESS_V1_TAPROOT:\n+            return ctx == ScriptContext::TOP;\n+        case TxoutType::PUBKEY:\n+            if (ctx == ScriptContext::P2WSH && sols[0].size() != 33) return false;\n+            return true;\n+        case TxoutType::WITNESS_V0_KEYHASH:\n+            return ctx != ScriptContext::P2WSH;\n+        case TxoutType::PUBKEYHASH:\n+            if (ctx == ScriptContext::P2WSH) {\n+                CPubKey pubkey;\n+                if (GetPubKey(CKeyID(uint160(sols[0])), pubkey) && !pubkey.IsCompressed()) {\n+                    return false;\n+                }\n+            }\n+            return true;\n+        case TxoutType::SCRIPTHASH:\n+        {\n+            if (ctx != ScriptContext::TOP) return false;\n+            CScriptID script_id = CScriptID(uint160(sols[0]));\n+            CScript subscript;\n+            if (GetCScript(script_id, subscript)) {\n+                return is_valid_script(subscript, ScriptContext::P2SH);\n+            }\n+            return true;\n+        }\n+        case TxoutType::WITNESS_V0_SCRIPTHASH:\n+        {\n+            if (ctx == ScriptContext::P2WSH) return false;\n+            CScriptID script_id{RIPEMD160(sols[0])};\n+            CScript subscript;\n+            if (GetCScript(script_id, subscript)) {\n+                return is_valid_script(subscript, ScriptContext::P2WSH);\n+            }\n+            return true;\n+        }\n+        case TxoutType::MULTISIG:\n+        {\n+            if (ctx == ScriptContext::P2WSH) {\n+                std::vector<valtype> keys(sols.begin() + 1, sols.begin() + sols.size() - 1);",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 153,
      "commit_id": "ed5608a5fd2ee7984afb32dd331b9665c1de1fcb",
      "original_commit_id": "905e22b469a1e09df9ff0e98bf989a55642f301e",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 905e22b469a1e09df9ff0e98bf989a55642f301e \"wallet: Remove IsMine from migration\": Just a question, but could it be a vector of `CPubKey` then use `IsCompressed`?",
      "created_at": "2024-07-18T20:41:25Z",
      "updated_at": "2024-07-18T20:41:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#discussion_r1683481047",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683481047"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1861,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683511942",
      "pull_request_review_id": 2186919023,
      "id": 1683511942,
      "node_id": "PRRC_kwDOABII585kWFqG",
      "diff_hunk": "@@ -1721,37 +1721,157 @@ std::unordered_set<CScript, SaltedSipHasher> LegacyDataSPKM::GetScriptPubKeys()\n     // For all keys, if they have segwit scripts, those scripts will end up in mapScripts\n     for (const auto& script_pair : mapScripts) {\n         const CScript& script = script_pair.second;\n-        if (IsMine(script) == ISMINE_SPENDABLE) {",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": 34,
      "original_position": 4,
      "commit_id": "ed5608a5fd2ee7984afb32dd331b9665c1de1fcb",
      "original_commit_id": "905e22b469a1e09df9ff0e98bf989a55642f301e",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 905e22b469a1e09df9ff0e98bf989a55642f301e \"wallet: Remove IsMine from migration\": Maybe it's worth updating the documentation?\r\n\r\n```\r\n// For every script in mapScript, only the ISMINE_SPENDABLE ones are being tracked.\r\n```",
      "created_at": "2024-07-18T21:09:38Z",
      "updated_at": "2024-07-18T21:09:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#discussion_r1683511942",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683511942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1725,
      "original_line": 1725,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689547396",
      "pull_request_review_id": 2196286870,
      "id": 1689547396,
      "node_id": "PRRC_kwDOABII585ktHKE",
      "diff_hunk": "@@ -1721,37 +1721,157 @@ std::unordered_set<CScript, SaltedSipHasher> LegacyDataSPKM::GetScriptPubKeys()\n     // For all keys, if they have segwit scripts, those scripts will end up in mapScripts\n     for (const auto& script_pair : mapScripts) {\n         const CScript& script = script_pair.second;\n-        if (IsMine(script) == ISMINE_SPENDABLE) {\n-            // Add ScriptHash for scripts that are not already P2SH\n-            if (!script.IsPayToScriptHash()) {\n+        std::vector<std::vector<unsigned char>> sols;\n+        TxoutType type = Solver(script, sols);\n+        switch (type) {\n+        // We don't care aboue these types because they are not spendable\n+        case TxoutType::NONSTANDARD:\n+        case TxoutType::NULL_DATA:\n+        case TxoutType::WITNESS_UNKNOWN:\n+        case TxoutType::WITNESS_V1_TAPROOT:\n+        case TxoutType::SCRIPTHASH:\n+        // These are only spendable if the witness scripts is also spendable as a scriptPubKey\n+        // We will check these later after spks has been updated with spks from scripts.\n+        case TxoutType::WITNESS_V0_SCRIPTHASH:\n+            break;\n+        // These scriptPubKeys have already been handled by dealing with the keys\n+        // However if these scripts are here, then the P2SH nested spk will be spendable if these are also scriptPubKeys\n+        case TxoutType::PUBKEY:\n+        case TxoutType::PUBKEYHASH:\n+            if (spks.count(script) > 0) {\n                 spks.insert(GetScriptForDestination(ScriptHash(script)));\n             }\n-            // For segwit scripts, we only consider them spendable if we have the segwit spk\n-            int wit_ver = -1;\n-            std::vector<unsigned char> witprog;\n-            if (script.IsWitnessProgram(wit_ver, witprog) && wit_ver == 0) {\n+            break;\n+        case TxoutType::WITNESS_V0_KEYHASH:\n+        {\n+            CKeyID key_id{uint160(sols[0])};\n+            CPubKey pubkey;\n+            if (GetPubKey(key_id, pubkey) && pubkey.IsCompressed() && HaveKey(key_id)) {\n                 spks.insert(script);\n+                spks.insert(GetScriptForDestination(ScriptHash(script)));\n             }\n-        } else {\n-            // Multisigs are special. They don't show up as ISMINE_SPENDABLE unless they are in a P2SH\n-            // So check the P2SH of a multisig to see if we should insert it\n-            std::vector<std::vector<unsigned char>> sols;\n-            TxoutType type = Solver(script, sols);\n-            if (type == TxoutType::MULTISIG) {\n-                CScript ms_spk = GetScriptForDestination(ScriptHash(script));\n-                if (IsMine(ms_spk) != ISMINE_NO) {\n-                    spks.insert(ms_spk);\n+            break;\n+        }\n+        case TxoutType::MULTISIG:\n+        {\n+            // Multisigs are only spendable if we have all of their keys\n+            std::vector<std::vector<unsigned char>> keys(sols.begin() + 1, sols.begin() + sols.size() - 1);\n+            if (!HaveKeys(keys, *this)) {\n+                break;\n+            }\n+            // Multisigs are always spendable inside of P2SH scripts\n+            spks.insert(GetScriptForDestination(ScriptHash(script)));\n+            // We need to have the P2WSH script for the P2WSH to be spendable.\n+            // But the keys also must be compressed\n+            CScript ms_wsh = GetScriptForDestination(WitnessV0ScriptHash(script));\n+            if (HaveCScript(CScriptID(ms_wsh))) {\n+                bool allowed = true;\n+                for (const auto& key : keys) {\n+                    if (key.size() != 33) {\n+                        allowed = false;\n+                        break;\n+                    }\n+                }\n+                if (allowed) {\n+                    spks.insert(ms_wsh);\n+                    spks.insert(GetScriptForDestination(ScriptHash(ms_wsh)));\n                 }\n             }\n+            break;\n+        }\n+        }\n+    }\n+    // Iterate again for all the P2WSH scripts\n+    for (const auto& script_pair : mapScripts) {\n+        const CScript& script = script_pair.second;\n+        std::vector<std::vector<unsigned char>> sols;\n+        TxoutType type = Solver(script, sols);\n+        if (type == TxoutType::WITNESS_V0_SCRIPTHASH) {\n+            uint160 hash;\n+            CRIPEMD160().Write(sols[0].data(), sols[0].size()).Finalize(hash.begin());",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 87,
      "commit_id": "ed5608a5fd2ee7984afb32dd331b9665c1de1fcb",
      "original_commit_id": "905e22b469a1e09df9ff0e98bf989a55642f301e",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: can use the `RIPEMD160` helper here\r\n```suggestion\r\n            uint160 hash{RIPEMD160(sols[0])};\r\n```",
      "created_at": "2024-07-24T10:37:34Z",
      "updated_at": "2024-07-24T10:42:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#discussion_r1689547396",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689547396"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
        }
      },
      "start_line": null,
      "original_start_line": 1790,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689550504",
      "pull_request_review_id": 2196286870,
      "id": 1689550504,
      "node_id": "PRRC_kwDOABII585ktH6o",
      "diff_hunk": "@@ -1721,37 +1721,157 @@ std::unordered_set<CScript, SaltedSipHasher> LegacyDataSPKM::GetScriptPubKeys()\n     // For all keys, if they have segwit scripts, those scripts will end up in mapScripts\n     for (const auto& script_pair : mapScripts) {\n         const CScript& script = script_pair.second;\n-        if (IsMine(script) == ISMINE_SPENDABLE) {\n-            // Add ScriptHash for scripts that are not already P2SH\n-            if (!script.IsPayToScriptHash()) {\n+        std::vector<std::vector<unsigned char>> sols;\n+        TxoutType type = Solver(script, sols);\n+        switch (type) {\n+        // We don't care aboue these types because they are not spendable\n+        case TxoutType::NONSTANDARD:\n+        case TxoutType::NULL_DATA:\n+        case TxoutType::WITNESS_UNKNOWN:\n+        case TxoutType::WITNESS_V1_TAPROOT:\n+        case TxoutType::SCRIPTHASH:\n+        // These are only spendable if the witness scripts is also spendable as a scriptPubKey\n+        // We will check these later after spks has been updated with spks from scripts.\n+        case TxoutType::WITNESS_V0_SCRIPTHASH:\n+            break;\n+        // These scriptPubKeys have already been handled by dealing with the keys\n+        // However if these scripts are here, then the P2SH nested spk will be spendable if these are also scriptPubKeys\n+        case TxoutType::PUBKEY:\n+        case TxoutType::PUBKEYHASH:\n+            if (spks.count(script) > 0) {\n                 spks.insert(GetScriptForDestination(ScriptHash(script)));\n             }\n-            // For segwit scripts, we only consider them spendable if we have the segwit spk\n-            int wit_ver = -1;\n-            std::vector<unsigned char> witprog;\n-            if (script.IsWitnessProgram(wit_ver, witprog) && wit_ver == 0) {\n+            break;\n+        case TxoutType::WITNESS_V0_KEYHASH:\n+        {\n+            CKeyID key_id{uint160(sols[0])};\n+            CPubKey pubkey;\n+            if (GetPubKey(key_id, pubkey) && pubkey.IsCompressed() && HaveKey(key_id)) {\n                 spks.insert(script);\n+                spks.insert(GetScriptForDestination(ScriptHash(script)));\n             }\n-        } else {\n-            // Multisigs are special. They don't show up as ISMINE_SPENDABLE unless they are in a P2SH\n-            // So check the P2SH of a multisig to see if we should insert it\n-            std::vector<std::vector<unsigned char>> sols;\n-            TxoutType type = Solver(script, sols);\n-            if (type == TxoutType::MULTISIG) {\n-                CScript ms_spk = GetScriptForDestination(ScriptHash(script));\n-                if (IsMine(ms_spk) != ISMINE_NO) {\n-                    spks.insert(ms_spk);\n+            break;\n+        }\n+        case TxoutType::MULTISIG:\n+        {\n+            // Multisigs are only spendable if we have all of their keys\n+            std::vector<std::vector<unsigned char>> keys(sols.begin() + 1, sols.begin() + sols.size() - 1);\n+            if (!HaveKeys(keys, *this)) {\n+                break;\n+            }\n+            // Multisigs are always spendable inside of P2SH scripts\n+            spks.insert(GetScriptForDestination(ScriptHash(script)));\n+            // We need to have the P2WSH script for the P2WSH to be spendable.\n+            // But the keys also must be compressed\n+            CScript ms_wsh = GetScriptForDestination(WitnessV0ScriptHash(script));\n+            if (HaveCScript(CScriptID(ms_wsh))) {\n+                bool allowed = true;\n+                for (const auto& key : keys) {\n+                    if (key.size() != 33) {\n+                        allowed = false;\n+                        break;\n+                    }\n+                }\n+                if (allowed) {",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "ed5608a5fd2ee7984afb32dd331b9665c1de1fcb",
      "original_commit_id": "905e22b469a1e09df9ff0e98bf989a55642f301e",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: to deduplicate code, could introduce an `all_keys_compressed` helper that is used here and below in the `is_valid_script` lambda, e.g. something like:\r\n\r\n```\r\n    const auto& all_keys_compressed = [](const std::vector<valtype>& keys) -> bool {\r\n        return std::all_of(keys.cbegin(), keys.cend(),\r\n               [](const auto& key) { return key.size() == 33; });\r\n    };\r\n```",
      "created_at": "2024-07-24T10:40:19Z",
      "updated_at": "2024-07-24T10:42:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#discussion_r1689550504",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689550504"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
        }
      },
      "start_line": null,
      "original_start_line": 1768,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1778,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802902566",
      "pull_request_review_id": 2372107763,
      "id": 1802902566,
      "node_id": "PRRC_kwDOABII585rdhwm",
      "diff_hunk": "@@ -1721,37 +1721,157 @@ std::unordered_set<CScript, SaltedSipHasher> LegacyDataSPKM::GetScriptPubKeys()\n     // For all keys, if they have segwit scripts, those scripts will end up in mapScripts\n     for (const auto& script_pair : mapScripts) {\n         const CScript& script = script_pair.second;\n-        if (IsMine(script) == ISMINE_SPENDABLE) {\n-            // Add ScriptHash for scripts that are not already P2SH\n-            if (!script.IsPayToScriptHash()) {\n+        std::vector<std::vector<unsigned char>> sols;\n+        TxoutType type = Solver(script, sols);\n+        switch (type) {\n+        // We don't care aboue these types because they are not spendable\n+        case TxoutType::NONSTANDARD:\n+        case TxoutType::NULL_DATA:\n+        case TxoutType::WITNESS_UNKNOWN:\n+        case TxoutType::WITNESS_V1_TAPROOT:\n+        case TxoutType::SCRIPTHASH:\n+        // These are only spendable if the witness scripts is also spendable as a scriptPubKey\n+        // We will check these later after spks has been updated with spks from scripts.\n+        case TxoutType::WITNESS_V0_SCRIPTHASH:\n+            break;\n+        // These scriptPubKeys have already been handled by dealing with the keys\n+        // However if these scripts are here, then the P2SH nested spk will be spendable if these are also scriptPubKeys\n+        case TxoutType::PUBKEY:\n+        case TxoutType::PUBKEYHASH:\n+            if (spks.count(script) > 0) {\n                 spks.insert(GetScriptForDestination(ScriptHash(script)));\n             }\n-            // For segwit scripts, we only consider them spendable if we have the segwit spk\n-            int wit_ver = -1;\n-            std::vector<unsigned char> witprog;\n-            if (script.IsWitnessProgram(wit_ver, witprog) && wit_ver == 0) {\n+            break;\n+        case TxoutType::WITNESS_V0_KEYHASH:\n+        {\n+            CKeyID key_id{uint160(sols[0])};\n+            CPubKey pubkey;\n+            if (GetPubKey(key_id, pubkey) && pubkey.IsCompressed() && HaveKey(key_id)) {\n                 spks.insert(script);\n+                spks.insert(GetScriptForDestination(ScriptHash(script)));\n             }\n-        } else {\n-            // Multisigs are special. They don't show up as ISMINE_SPENDABLE unless they are in a P2SH\n-            // So check the P2SH of a multisig to see if we should insert it\n-            std::vector<std::vector<unsigned char>> sols;\n-            TxoutType type = Solver(script, sols);\n-            if (type == TxoutType::MULTISIG) {\n-                CScript ms_spk = GetScriptForDestination(ScriptHash(script));\n-                if (IsMine(ms_spk) != ISMINE_NO) {\n-                    spks.insert(ms_spk);\n+            break;\n+        }\n+        case TxoutType::MULTISIG:\n+        {\n+            // Multisigs are only spendable if we have all of their keys\n+            std::vector<std::vector<unsigned char>> keys(sols.begin() + 1, sols.begin() + sols.size() - 1);\n+            if (!HaveKeys(keys, *this)) {\n+                break;\n+            }\n+            // Multisigs are always spendable inside of P2SH scripts\n+            spks.insert(GetScriptForDestination(ScriptHash(script)));\n+            // We need to have the P2WSH script for the P2WSH to be spendable.\n+            // But the keys also must be compressed\n+            CScript ms_wsh = GetScriptForDestination(WitnessV0ScriptHash(script));\n+            if (HaveCScript(CScriptID(ms_wsh))) {\n+                bool allowed = true;\n+                for (const auto& key : keys) {\n+                    if (key.size() != 33) {\n+                        allowed = false;\n+                        break;\n+                    }\n+                }\n+                if (allowed) {\n+                    spks.insert(ms_wsh);\n+                    spks.insert(GetScriptForDestination(ScriptHash(ms_wsh)));\n                 }\n             }\n+            break;\n+        }\n+        }\n+    }\n+    // Iterate again for all the P2WSH scripts\n+    for (const auto& script_pair : mapScripts) {\n+        const CScript& script = script_pair.second;\n+        std::vector<std::vector<unsigned char>> sols;\n+        TxoutType type = Solver(script, sols);\n+        if (type == TxoutType::WITNESS_V0_SCRIPTHASH) {\n+            uint160 hash;\n+            CRIPEMD160().Write(sols[0].data(), sols[0].size()).Finalize(hash.begin());\n+            CScript witness_script;\n+            int wit_ver = -1;\n+            std::vector<unsigned char> wit_prog;\n+            if (GetCScript(CScriptID(hash), witness_script) &&\n+                !witness_script.IsPayToScriptHash() &&\n+                !witness_script.IsWitnessProgram(wit_ver, wit_prog) &&\n+                spks.count(witness_script) > 0) {\n+                spks.insert(script);\n+                spks.insert(GetScriptForDestination(ScriptHash(script)));\n+            }\n         }\n     }\n \n+    enum class ScriptContext {\n+        TOP,\n+        P2SH,\n+        P2WSH,\n+    };\n+    std::function<bool(const CScript&, const ScriptContext)> is_valid_script = [&](const CScript& script, const ScriptContext ctx) -> bool {\n+        std::vector<valtype> sols;\n+        TxoutType spk_type = Solver(script, sols);\n+\n+        CKeyID keyID;\n+        switch (spk_type) {\n+        case TxoutType::NONSTANDARD:\n+        case TxoutType::NULL_DATA:\n+        case TxoutType::WITNESS_UNKNOWN:\n+        case TxoutType::WITNESS_V1_TAPROOT:\n+            return ctx == ScriptContext::TOP;\n+        case TxoutType::PUBKEY:\n+            if (ctx == ScriptContext::P2WSH && sols[0].size() != 33) return false;\n+            return true;\n+        case TxoutType::WITNESS_V0_KEYHASH:\n+            return ctx != ScriptContext::P2WSH;\n+        case TxoutType::PUBKEYHASH:\n+            if (ctx == ScriptContext::P2WSH) {\n+                CPubKey pubkey;\n+                if (GetPubKey(CKeyID(uint160(sols[0])), pubkey) && !pubkey.IsCompressed()) {\n+                    return false;\n+                }\n+            }\n+            return true;\n+        case TxoutType::SCRIPTHASH:\n+        {\n+            if (ctx != ScriptContext::TOP) return false;\n+            CScriptID script_id = CScriptID(uint160(sols[0]));\n+            CScript subscript;\n+            if (GetCScript(script_id, subscript)) {\n+                return is_valid_script(subscript, ScriptContext::P2SH);\n+            }\n+            return true;\n+        }\n+        case TxoutType::WITNESS_V0_SCRIPTHASH:\n+        {\n+            if (ctx == ScriptContext::P2WSH) return false;\n+            CScriptID script_id{RIPEMD160(sols[0])};\n+            CScript subscript;\n+            if (GetCScript(script_id, subscript)) {\n+                return is_valid_script(subscript, ScriptContext::P2WSH);\n+            }\n+            return true;\n+        }\n+        case TxoutType::MULTISIG:\n+        {\n+            if (ctx == ScriptContext::P2WSH) {\n+                std::vector<valtype> keys(sols.begin() + 1, sols.begin() + sols.size() - 1);",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 153,
      "commit_id": "ed5608a5fd2ee7984afb32dd331b9665c1de1fcb",
      "original_commit_id": "905e22b469a1e09df9ff0e98bf989a55642f301e",
      "in_reply_to_id": 1683481047,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`HaveKeys` uses `std::vector<valtype>`",
      "created_at": "2024-10-16T11:16:59Z",
      "updated_at": "2024-10-16T11:16:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#discussion_r1802902566",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802902566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1861,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802902988",
      "pull_request_review_id": 2372108454,
      "id": 1802902988,
      "node_id": "PRRC_kwDOABII585rdh3M",
      "diff_hunk": "@@ -1721,37 +1721,157 @@ std::unordered_set<CScript, SaltedSipHasher> LegacyDataSPKM::GetScriptPubKeys()\n     // For all keys, if they have segwit scripts, those scripts will end up in mapScripts\n     for (const auto& script_pair : mapScripts) {\n         const CScript& script = script_pair.second;\n-        if (IsMine(script) == ISMINE_SPENDABLE) {\n-            // Add ScriptHash for scripts that are not already P2SH\n-            if (!script.IsPayToScriptHash()) {\n+        std::vector<std::vector<unsigned char>> sols;\n+        TxoutType type = Solver(script, sols);\n+        switch (type) {\n+        // We don't care aboue these types because they are not spendable",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ed5608a5fd2ee7984afb32dd331b9665c1de1fcb",
      "original_commit_id": "d5d994c02bb54db395da457724ec45539f1c10a8",
      "in_reply_to_id": 1683274753,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2024-10-16T11:17:20Z",
      "updated_at": "2024-10-16T11:17:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#discussion_r1802902988",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802902988"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1728,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802903174",
      "pull_request_review_id": 2372108723,
      "id": 1802903174,
      "node_id": "PRRC_kwDOABII585rdh6G",
      "diff_hunk": "@@ -1721,37 +1721,157 @@ std::unordered_set<CScript, SaltedSipHasher> LegacyDataSPKM::GetScriptPubKeys()\n     // For all keys, if they have segwit scripts, those scripts will end up in mapScripts\n     for (const auto& script_pair : mapScripts) {\n         const CScript& script = script_pair.second;\n-        if (IsMine(script) == ISMINE_SPENDABLE) {",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": 34,
      "original_position": 4,
      "commit_id": "ed5608a5fd2ee7984afb32dd331b9665c1de1fcb",
      "original_commit_id": "905e22b469a1e09df9ff0e98bf989a55642f301e",
      "in_reply_to_id": 1683511942,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated the comment.",
      "created_at": "2024-10-16T11:17:29Z",
      "updated_at": "2024-10-16T11:17:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#discussion_r1802903174",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802903174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1725,
      "original_line": 1725,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802908802",
      "pull_request_review_id": 2372118601,
      "id": 1802908802,
      "node_id": "PRRC_kwDOABII585rdjSC",
      "diff_hunk": "@@ -1721,37 +1721,157 @@ std::unordered_set<CScript, SaltedSipHasher> LegacyDataSPKM::GetScriptPubKeys()\n     // For all keys, if they have segwit scripts, those scripts will end up in mapScripts\n     for (const auto& script_pair : mapScripts) {\n         const CScript& script = script_pair.second;\n-        if (IsMine(script) == ISMINE_SPENDABLE) {\n-            // Add ScriptHash for scripts that are not already P2SH\n-            if (!script.IsPayToScriptHash()) {\n+        std::vector<std::vector<unsigned char>> sols;\n+        TxoutType type = Solver(script, sols);\n+        switch (type) {\n+        // We don't care aboue these types because they are not spendable\n+        case TxoutType::NONSTANDARD:\n+        case TxoutType::NULL_DATA:\n+        case TxoutType::WITNESS_UNKNOWN:\n+        case TxoutType::WITNESS_V1_TAPROOT:\n+        case TxoutType::SCRIPTHASH:\n+        // These are only spendable if the witness scripts is also spendable as a scriptPubKey\n+        // We will check these later after spks has been updated with spks from scripts.\n+        case TxoutType::WITNESS_V0_SCRIPTHASH:\n+            break;\n+        // These scriptPubKeys have already been handled by dealing with the keys\n+        // However if these scripts are here, then the P2SH nested spk will be spendable if these are also scriptPubKeys\n+        case TxoutType::PUBKEY:\n+        case TxoutType::PUBKEYHASH:\n+            if (spks.count(script) > 0) {\n                 spks.insert(GetScriptForDestination(ScriptHash(script)));\n             }\n-            // For segwit scripts, we only consider them spendable if we have the segwit spk\n-            int wit_ver = -1;\n-            std::vector<unsigned char> witprog;\n-            if (script.IsWitnessProgram(wit_ver, witprog) && wit_ver == 0) {\n+            break;\n+        case TxoutType::WITNESS_V0_KEYHASH:\n+        {\n+            CKeyID key_id{uint160(sols[0])};\n+            CPubKey pubkey;\n+            if (GetPubKey(key_id, pubkey) && pubkey.IsCompressed() && HaveKey(key_id)) {\n                 spks.insert(script);\n+                spks.insert(GetScriptForDestination(ScriptHash(script)));\n             }\n-        } else {\n-            // Multisigs are special. They don't show up as ISMINE_SPENDABLE unless they are in a P2SH\n-            // So check the P2SH of a multisig to see if we should insert it\n-            std::vector<std::vector<unsigned char>> sols;\n-            TxoutType type = Solver(script, sols);\n-            if (type == TxoutType::MULTISIG) {\n-                CScript ms_spk = GetScriptForDestination(ScriptHash(script));\n-                if (IsMine(ms_spk) != ISMINE_NO) {\n-                    spks.insert(ms_spk);\n+            break;\n+        }\n+        case TxoutType::MULTISIG:\n+        {\n+            // Multisigs are only spendable if we have all of their keys\n+            std::vector<std::vector<unsigned char>> keys(sols.begin() + 1, sols.begin() + sols.size() - 1);\n+            if (!HaveKeys(keys, *this)) {\n+                break;\n+            }\n+            // Multisigs are always spendable inside of P2SH scripts\n+            spks.insert(GetScriptForDestination(ScriptHash(script)));\n+            // We need to have the P2WSH script for the P2WSH to be spendable.\n+            // But the keys also must be compressed\n+            CScript ms_wsh = GetScriptForDestination(WitnessV0ScriptHash(script));\n+            if (HaveCScript(CScriptID(ms_wsh))) {\n+                bool allowed = true;\n+                for (const auto& key : keys) {\n+                    if (key.size() != 33) {\n+                        allowed = false;\n+                        break;\n+                    }\n+                }\n+                if (allowed) {\n+                    spks.insert(ms_wsh);\n+                    spks.insert(GetScriptForDestination(ScriptHash(ms_wsh)));\n                 }\n             }\n+            break;\n+        }\n+        }\n+    }\n+    // Iterate again for all the P2WSH scripts\n+    for (const auto& script_pair : mapScripts) {\n+        const CScript& script = script_pair.second;\n+        std::vector<std::vector<unsigned char>> sols;\n+        TxoutType type = Solver(script, sols);\n+        if (type == TxoutType::WITNESS_V0_SCRIPTHASH) {\n+            uint160 hash;\n+            CRIPEMD160().Write(sols[0].data(), sols[0].size()).Finalize(hash.begin());",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 87,
      "commit_id": "ed5608a5fd2ee7984afb32dd331b9665c1de1fcb",
      "original_commit_id": "905e22b469a1e09df9ff0e98bf989a55642f301e",
      "in_reply_to_id": 1689547396,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2024-10-16T11:22:12Z",
      "updated_at": "2024-10-16T11:22:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#discussion_r1802908802",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802908802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
        }
      },
      "start_line": null,
      "original_start_line": 1790,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802908907",
      "pull_request_review_id": 2372118795,
      "id": 1802908907,
      "node_id": "PRRC_kwDOABII585rdjTr",
      "diff_hunk": "@@ -1721,37 +1721,157 @@ std::unordered_set<CScript, SaltedSipHasher> LegacyDataSPKM::GetScriptPubKeys()\n     // For all keys, if they have segwit scripts, those scripts will end up in mapScripts\n     for (const auto& script_pair : mapScripts) {\n         const CScript& script = script_pair.second;\n-        if (IsMine(script) == ISMINE_SPENDABLE) {\n-            // Add ScriptHash for scripts that are not already P2SH\n-            if (!script.IsPayToScriptHash()) {\n+        std::vector<std::vector<unsigned char>> sols;\n+        TxoutType type = Solver(script, sols);\n+        switch (type) {\n+        // We don't care aboue these types because they are not spendable\n+        case TxoutType::NONSTANDARD:\n+        case TxoutType::NULL_DATA:\n+        case TxoutType::WITNESS_UNKNOWN:\n+        case TxoutType::WITNESS_V1_TAPROOT:\n+        case TxoutType::SCRIPTHASH:\n+        // These are only spendable if the witness scripts is also spendable as a scriptPubKey\n+        // We will check these later after spks has been updated with spks from scripts.\n+        case TxoutType::WITNESS_V0_SCRIPTHASH:\n+            break;\n+        // These scriptPubKeys have already been handled by dealing with the keys\n+        // However if these scripts are here, then the P2SH nested spk will be spendable if these are also scriptPubKeys\n+        case TxoutType::PUBKEY:\n+        case TxoutType::PUBKEYHASH:\n+            if (spks.count(script) > 0) {\n                 spks.insert(GetScriptForDestination(ScriptHash(script)));\n             }\n-            // For segwit scripts, we only consider them spendable if we have the segwit spk\n-            int wit_ver = -1;\n-            std::vector<unsigned char> witprog;\n-            if (script.IsWitnessProgram(wit_ver, witprog) && wit_ver == 0) {\n+            break;\n+        case TxoutType::WITNESS_V0_KEYHASH:\n+        {\n+            CKeyID key_id{uint160(sols[0])};\n+            CPubKey pubkey;\n+            if (GetPubKey(key_id, pubkey) && pubkey.IsCompressed() && HaveKey(key_id)) {\n                 spks.insert(script);\n+                spks.insert(GetScriptForDestination(ScriptHash(script)));\n             }\n-        } else {\n-            // Multisigs are special. They don't show up as ISMINE_SPENDABLE unless they are in a P2SH\n-            // So check the P2SH of a multisig to see if we should insert it\n-            std::vector<std::vector<unsigned char>> sols;\n-            TxoutType type = Solver(script, sols);\n-            if (type == TxoutType::MULTISIG) {\n-                CScript ms_spk = GetScriptForDestination(ScriptHash(script));\n-                if (IsMine(ms_spk) != ISMINE_NO) {\n-                    spks.insert(ms_spk);\n+            break;\n+        }\n+        case TxoutType::MULTISIG:\n+        {\n+            // Multisigs are only spendable if we have all of their keys\n+            std::vector<std::vector<unsigned char>> keys(sols.begin() + 1, sols.begin() + sols.size() - 1);\n+            if (!HaveKeys(keys, *this)) {\n+                break;\n+            }\n+            // Multisigs are always spendable inside of P2SH scripts\n+            spks.insert(GetScriptForDestination(ScriptHash(script)));\n+            // We need to have the P2WSH script for the P2WSH to be spendable.\n+            // But the keys also must be compressed\n+            CScript ms_wsh = GetScriptForDestination(WitnessV0ScriptHash(script));\n+            if (HaveCScript(CScriptID(ms_wsh))) {\n+                bool allowed = true;\n+                for (const auto& key : keys) {\n+                    if (key.size() != 33) {\n+                        allowed = false;\n+                        break;\n+                    }\n+                }\n+                if (allowed) {",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "ed5608a5fd2ee7984afb32dd331b9665c1de1fcb",
      "original_commit_id": "905e22b469a1e09df9ff0e98bf989a55642f301e",
      "in_reply_to_id": 1689550504,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2024-10-16T11:22:17Z",
      "updated_at": "2024-10-16T11:22:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30328#discussion_r1802908907",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802908907"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30328"
        }
      },
      "start_line": null,
      "original_start_line": 1768,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1778,
      "side": "RIGHT"
    }
  ]
}