{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051",
    "id": 1855942055,
    "node_id": "PR_kwDOABII585un22n",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30051",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30051.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30051.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
    "number": 30051,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "crypto, refactor: add new KeyPair class",
    "user": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Broken out from #28201 \r\n\r\n---\r\n\r\nThe wallet returns an untweaked internal key for taproot outputs. If the output commits to a tree of scripts, this key needs to be tweaked with the merkle root. Even if the output does not commit to a tree of scripts, BIP341/342 recommend commiting to a hash of the public key.\r\n\r\nPreviously, this logic for applying the taptweak was implemented in the `CKey::SignSchnorr` method.\r\n\r\nThis PR moves introduces a KeyPair class which wraps a `secp256k1_keypair` type and refactors SignSchnorr to use this new KeyPair. The KeyPair class is created with an optional merkle_root argument and the logic from BIP341 is applied depending on the state of the merkle_root argument.\r\n\r\nThe motivation for this refactor is to be able to use the tap tweak logic outside of signing, e.g. in silent payments when retrieving the private key (see #28201). \r\n\r\nOutside of silent payments, since we almost always convert a `CKey` to a `secp256k1_keypair` when doing anything with taproot keys, it seems generally useful to have a way to model this type in our code base.",
    "labels": [],
    "created_at": "2024-05-06T11:00:17Z",
    "updated_at": "2024-07-17T14:55:12Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "a957a8eee0450e16fc60f5f7e3887fa734cb57f3",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "josibake:add-apply-taptweak-method",
      "ref": "add-apply-taptweak-method",
      "sha": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 344501009,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNDQ1MDEwMDk=",
        "name": "bitcoin",
        "full_name": "josibake/bitcoin",
        "owner": {
          "login": "josibake",
          "id": 7444140,
          "node_id": "MDQ6VXNlcjc0NDQxNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/josibake",
          "html_url": "https://github.com/josibake",
          "followers_url": "https://api.github.com/users/josibake/followers",
          "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
          "organizations_url": "https://api.github.com/users/josibake/orgs",
          "repos_url": "https://api.github.com/users/josibake/repos",
          "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/josibake/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/josibake/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/josibake/bitcoin",
        "archive_url": "https://api.github.com/repos/josibake/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/josibake/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/josibake/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/josibake/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/josibake/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/josibake/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/josibake/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/josibake/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/josibake/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/josibake/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/josibake/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/josibake/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/josibake/bitcoin/events",
        "forks_url": "https://api.github.com/repos/josibake/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/josibake/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/josibake/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/josibake/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/josibake/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/josibake/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/josibake/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/josibake/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/josibake/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/josibake/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/josibake/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/josibake/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/josibake/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/josibake/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/josibake/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/josibake/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:josibake/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/josibake/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/josibake/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/josibake/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/josibake/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/josibake/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/josibake/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/josibake/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/josibake/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/josibake/bitcoin/hooks",
        "svn_url": "https://github.com/josibake/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 249359,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-16T18:17:02Z",
        "created_at": "2021-03-04T14:24:20Z",
        "updated_at": "2024-07-11T14:53:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "1d24d383b45ec54b65da2c9ea86554f45a8f1b06",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35646,
        "stargazers_count": 77235,
        "watchers_count": 77235,
        "size": 263187,
        "default_branch": "master",
        "open_issues_count": 673,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-17T14:53:38Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-07-17T14:53:49Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 142,
    "deletions": 20,
    "changed_files": 3,
    "commits": 6,
    "review_comments": 25,
    "comments": 11
  },
  "events": [
    {
      "event": "commented",
      "id": 2095746172,
      "node_id": "IC_kwDOABII58586ox8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2095746172",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-06T11:00:20Z",
      "updated_at": "2024-07-17T14:06:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30051).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Stale ACK | [theuni](https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2050642049), [itornaza](https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2169749598) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29295](https://github.com/bitcoin/bitcoin/pull/29295) (CKey: add Serialize and Unserialize by Sjors)\n* [#28241](https://github.com/bitcoin/bitcoin/pull/28241) (Silent payment index (for light wallets and consistency check) by Sjors)\n* [#28201](https://github.com/bitcoin/bitcoin/pull/28201) (Silent Payments: sending by josibake)\n* [#28122](https://github.com/bitcoin/bitcoin/pull/28122) (Silent Payments: Implement BIP352 by josibake)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2095746172",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "comment_deleted",
      "id": 12714942745,
      "node_id": "CDE_lADOABII586H706dzwAAAAL13qEZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12714942745",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-06T13:19:13Z"
    },
    {
      "event": "comment_deleted",
      "id": 12714943883,
      "node_id": "CDE_lADOABII586H706dzwAAAAL13qWL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12714943883",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-06T13:19:18Z"
    },
    {
      "event": "reviewed",
      "id": 2041367317,
      "node_id": "PRR_kwDOABII5855rMsV",
      "url": null,
      "actor": null,
      "commit_id": "e8d1b223e0c618bb08adbae0d51ff8c7151549b6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "This function feels kinda weird. As it's named `ApplyTapTweak`, I would expect it to modify `*this`. It also takes in a `uint256* merkle_root` but doesn't check for null, a reference would make more sense.\r\n\r\nPerhaps this would make more sense as a static utility function that takes input/output keys?",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2041367317",
      "submitted_at": "2024-05-06T17:59:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "subscribed",
      "id": 12722226786,
      "node_id": "SE_lADOABII586H706dzwAAAAL2TcZi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12722226786",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-07T01:40:12Z"
    },
    {
      "event": "commented",
      "id": 2097902146,
      "node_id": "IC_kwDOABII5859C3JC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2097902146",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-07T09:51:01Z",
      "updated_at": "2024-05-07T09:51:01Z",
      "author_association": "MEMBER",
      "body": "> This function feels kinda weird. As it's named `ApplyTapTweak`, I would expect it to modify `*this`. It also takes in a `uint256* merkle_root` but doesn't check for null, a reference would make more sense.\r\n> \r\n> Perhaps this would make more sense as a static utility function that takes input/output keys?\r\n\r\nUtility function might make more sense here: could do a utility function with `secp256k1_keypairs` as in/out args:\r\n\r\n```\r\nint compute_taptweak(secp256k1_keypair in, unsigned char merkle_root, secp256k1_keypair out)\r\n```\r\n\r\nand use that inside `::SignSchnorr`. This means we still only creating one `secp256k1_keypair` when signing. For usage outside of signing, wrap that utility function in a function takes and returns `CKey`s as arguments:\r\n\r\n```\r\nCKey tweaked_key ComputeTapTweak(CKey& internal_key, uint256& merkle_root) {\r\n    // .. do stuff\r\n    compute_taptweak(..);\r\n    return tweaked_key;\r\n```\r\n\r\nWDYT?",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2097902146",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "commented",
      "id": 2098527381,
      "node_id": "IC_kwDOABII5859FPyV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2098527381",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-07T14:21:27Z",
      "updated_at": "2024-05-07T14:21:27Z",
      "author_association": "MEMBER",
      "body": "`ComputeTapTweak` is more like what I had in mind, yes.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2098527381",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12741509247,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL3dAB_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12741509247",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T10:04:20Z"
    },
    {
      "event": "commented",
      "id": 2100225575,
      "node_id": "IC_kwDOABII5859LuYn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2100225575",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T10:05:57Z",
      "updated_at": "2024-05-08T10:05:57Z",
      "author_association": "MEMBER",
      "body": "Updated to use a utility function (instead of a method on `CKey`) per the @theuni 's feedback",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2100225575",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12741529173,
      "node_id": "MEE_lADOABII586H706dzwAAAAL3dE5V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12741529173",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T10:05:58Z"
    },
    {
      "event": "subscribed",
      "id": 12741529193,
      "node_id": "SE_lADOABII586H706dzwAAAAL3dE5p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12741529193",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T10:05:58Z"
    },
    {
      "event": "reviewed",
      "id": 2046154187,
      "node_id": "PRR_kwDOABII58559dXL",
      "url": null,
      "actor": null,
      "commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2046154187",
      "submitted_at": "2024-05-08T16:48:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12768720758,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5Ezd2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12768720758",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T11:34:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12768870122,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5FX7q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12768870122",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T11:51:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12769107313,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5GR1x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12769107313",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T12:17:49Z"
    },
    {
      "event": "commented",
      "id": 2104541750,
      "node_id": "IC_kwDOABII5859cMI2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2104541750",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T12:41:31Z",
      "updated_at": "2024-05-10T12:41:31Z",
      "author_association": "MEMBER",
      "body": "Updated to use the new `KeyPair` wrapper class (h/t @theuni).",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2104541750",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12769334399,
      "node_id": "MEE_lADOABII586H706dzwAAAAL5HJR_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12769334399",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T12:41:33Z"
    },
    {
      "event": "subscribed",
      "id": 12769334412,
      "node_id": "SE_lADOABII586H706dzwAAAAL5HJSM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12769334412",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T12:41:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12770336692,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5K9-0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12770336692",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T14:12:59Z"
    },
    {
      "event": "reviewed",
      "id": 2050167463,
      "node_id": "PRR_kwDOABII5856MxKn",
      "url": null,
      "actor": null,
      "commit_id": "8d33daf93871c34c4fbe19f3c6ffa5d337eae144",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "It's weird to see this hooked up but unused. It could also use some simple test vectors.\r\n\r\nMind killing both birds by adding some tests, at least 1 for each `merkle_root` state?",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2050167463",
      "submitted_at": "2024-05-10T14:16:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12771898558,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5Q7S-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12771898558",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T16:43:53Z"
    },
    {
      "event": "commented",
      "id": 2104921312,
      "node_id": "IC_kwDOABII5859dozg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2104921312",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T16:46:14Z",
      "updated_at": "2024-05-10T16:46:14Z",
      "author_association": "MEMBER",
      "body": "@theuni Updated with a comment and added `KeyPair` to the BIP340 test vectors. This does test all possible merkle_root states and ensures everything is 1-to-1 with `XOnlyPubKey::ComputeTapTweakHash` and `CKey::SignSchnorr`",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2104921312",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12771921724,
      "node_id": "MEE_lADOABII586H706dzwAAAAL5RA88",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12771921724",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T16:46:15Z"
    },
    {
      "event": "subscribed",
      "id": 12771921735,
      "node_id": "SE_lADOABII586H706dzwAAAAL5RA9H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12771921735",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T16:46:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12772360638,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5SsG-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772360638",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:36:11Z"
    },
    {
      "event": "commented",
      "id": 2105011629,
      "node_id": "IC_kwDOABII5859d-2t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2105011629",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:38:37Z",
      "updated_at": "2024-05-10T17:39:11Z",
      "author_association": "MEMBER",
      "body": "Updated to add a move constructor to the KeyPair class. I noticed this was missing while trying to use the new class in #28201 (i.e. creating a std::vector of KeyPairs). @theuni assuming this was just missed, but if not curious if you have any objections to adding a move constructor on KeyPair?\r\n\r\nEDIT: also rebased on master to fix conflicts",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2105011629",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12772381477,
      "node_id": "MEE_lADOABII586H706dzwAAAAL5SxMl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772381477",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:38:38Z"
    },
    {
      "event": "subscribed",
      "id": 12772381487,
      "node_id": "SE_lADOABII586H706dzwAAAAL5SxMv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772381487",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:38:38Z"
    },
    {
      "event": "reviewed",
      "id": 2050565640,
      "node_id": "PRR_kwDOABII5856OSYI",
      "url": null,
      "actor": null,
      "commit_id": "c2c5e72ea09f55d40013ce2363f2045affbc76fa",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Mind changing the dumb c-style casts to `reinterpret_cast` so it's clear that they can't be `static_cast`s ?  Sorry, I know that's my code.\r\n\r\nutACK after that.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2050565640",
      "submitted_at": "2024-05-10T17:43:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "commented",
      "id": 2105023865,
      "node_id": "IC_kwDOABII5859eB15",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2105023865",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:48:02Z",
      "updated_at": "2024-05-10T17:48:02Z",
      "author_association": "MEMBER",
      "body": "PR description needs an update too :)",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2105023865",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12772503226,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5TO66",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772503226",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:53:15Z"
    },
    {
      "event": "renamed",
      "id": 12772545930,
      "node_id": "RTE_lADOABII586H706dzwAAAAL5TZWK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772545930",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:58:28Z",
      "rename": {
        "from": "crypto, refactor: add method for applying the taptweak",
        "to": "crypto, refactor: add new KeyPair class"
      }
    },
    {
      "event": "commented",
      "id": 2105045459,
      "node_id": "IC_kwDOABII5859eHHT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2105045459",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:59:18Z",
      "updated_at": "2024-05-10T17:59:18Z",
      "author_association": "MEMBER",
      "body": "@theuni title, description, and dumb c-style casts updated!",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2105045459",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12772552396,
      "node_id": "MEE_lADOABII586H706dzwAAAAL5Ta7M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772552396",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:59:18Z"
    },
    {
      "event": "subscribed",
      "id": 12772552417,
      "node_id": "SE_lADOABII586H706dzwAAAAL5Ta7h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772552417",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:59:19Z"
    },
    {
      "event": "reviewed",
      "id": 2050642049,
      "node_id": "PRR_kwDOABII5856OlCB",
      "url": null,
      "actor": null,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2050642049",
      "submitted_at": "2024-05-10T18:35:37Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "reviewed",
      "id": 2051346482,
      "node_id": "PRR_kwDOABII5856RRAy",
      "url": null,
      "actor": null,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2051346482",
      "submitted_at": "2024-05-12T10:26:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "reviewed",
      "id": 2169749598,
      "node_id": "PRR_kwDOABII586BU8Be",
      "url": null,
      "actor": null,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "tested ACK bdc2a656c2d2a61d226fde1d1fd4e79664106e18\r\n\r\nBuilt from source and run all unit, functional and extended tests and all of them pass. Looked through the code changes and they look great to me. I particularly like the default definition of the move constructors in `KeyPair` since there is a pointer member `m_keydata` in that class, plus the fact that the generation of the copy constructors that are not needed anywhere is suppressed due to the use of the default keyword which I consider an excellent programming practice. One small suggestion about repeating the KeyPair header for your consideration if you ever need to update for other more serious reasons.",
      "user": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2169749598",
      "submitted_at": "2024-07-10T17:03:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "reviewed",
      "id": 2169947102,
      "node_id": "PRR_kwDOABII586BVsPe",
      "url": null,
      "actor": null,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Not yet sure about adding stuff that \"will hopefully used this way one day\".\r\n\r\nRefactoring is welcome, as long as it's easy to review, which is not yet the case here, could you split the change into trivial, focused commits?",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2169947102",
      "submitted_at": "2024-07-10T18:38:27Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRlOGQ2MWU3NTA0ODdmOGZmODFlMzQxMWEwMTRiMGE5MDdjNWU0N2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "tree": {
        "sha": "e3336aece80d9977ba237597323716daa35bbaad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e3336aece80d9977ba237597323716daa35bbaad"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e3336aece80d9977ba237597323716daa35bbaad\nparent ff100bb549f21dc0136af9241fd2de6daffb19a2\nauthor josibake <josibake@protonmail.com> 1721139425 +0200\ncommitter josibake <josibake@protonmail.com> 1721149161 +0200\n\n[staging] refactor: replace early returns\n\nThis commit is a staging refactor to simplify the diff for moving the\nmerkle tweaking logic out of this function in a later commit.\n\nIn the if (merkle_root) block, accumulate errors in the `ret` variable\ninstead of returning early on the function.\n\nTo accomplish this:\n\n    1. Initialize `ret` at the beginning of the function (instead of\n       setting it directly with the return value from\n       `_schnorrsig_sign32`\n    2. Accumlute errors in `ret` instead of early exit in the\n       merkle_root block\n    3. Add an early return after applying the merkle_root logic. This\n       ensures we do not change behavior by exiting early before\n       attempting to sign if there is a failure with the merkle_root logic\n    4. Accumulate the error from `_schnorrsig_sign32` in `ret` instead of\n       using the return value to initialize the variable. Also\n       accumulate the error from `_keypair_xonly_pub` (arguably, it\n       should have already been this way before)\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmaWpwkACgkQity1WMTz\nPWUiohAA0s+s/QoGXQbSAgkCLL347btx67Fba6yRgd5weisvy6Ww3j0L1N5Joyfw\nOay02giFaE6tmfDMSDWotALbunzqeL+x6qODhx78VR9Z7R+BwXLywOSXdAHwgcPf\nI/zPaiAgw2u1mUiUwWGDT7mfHIlnKhpntNlRtrUW936SvRx9DkLKrL0oGYQnUXuu\nhj1EmlT2k2F8Jje+fB87FR44NDoX3cjNh66O6Gp3GPpq3KAlgW+oTjUWU+hBKer0\nXbIL0wqfOdUzIpfzNPZgDt70HL6U/WWOFZc01vO+a3erxHmfT9I9NfOjWjeZykiL\nNBcMJYeBYXciyDYuTreO89lWOwrJQ+gXToLFaytkYX+kj0wWkqGz6mC8xkAgPHvV\ntNwDuhqZ4P0qXfHzyonZNVPDyOWoquZyG7XOFin7wGlGVsPnqC3FL1HF4/d74O0M\nwgeQ8mMsPvi+OL0gcir3g1LesetUtop64pwPGVzuMwnjtlwSd2/kbkDF9yNJ/w73\nYjXKsOII3VH6rAAAJe/2z0vgijCa5SGhTF32dqWB9Q9SZWgTUoJRhbqIbLJ6pOv+\nx/T4uOv3yqaciEu5mGnHNJToUSrf9MNKqZnn/okEK8pYZ/GAMp/Q4X1qnujYa4t6\nm1pai9YxCPDGqUMtHXak92MW/vgunDx95a5CdMupNEkN8R+vGI0=\n=6XPu\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff100bb549f21dc0136af9241fd2de6daffb19a2",
          "sha": "ff100bb549f21dc0136af9241fd2de6daffb19a2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ff100bb549f21dc0136af9241fd2de6daffb19a2"
        }
      ],
      "message": "[staging] refactor: replace early returns\n\nThis commit is a staging refactor to simplify the diff for moving the\nmerkle tweaking logic out of this function in a later commit.\n\nIn the if (merkle_root) block, accumulate errors in the `ret` variable\ninstead of returning early on the function.\n\nTo accomplish this:\n\n    1. Initialize `ret` at the beginning of the function (instead of\n       setting it directly with the return value from\n       `_schnorrsig_sign32`\n    2. Accumlute errors in `ret` instead of early exit in the\n       merkle_root block\n    3. Add an early return after applying the merkle_root logic. This\n       ensures we do not change behavior by exiting early before\n       attempting to sign if there is a failure with the merkle_root logic\n    4. Accumulate the error from `_schnorrsig_sign32` in `ret` instead of\n       using the return value to initialize the variable. Also\n       accumulate the error from `_keypair_xonly_pub` (arguably, it\n       should have already been this way before)",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T16:59:21Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T14:17:05Z"
      },
      "sha": "4e8d61e750487f8ff81e3411a014b0a907c5e47d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNjYTMyOTc5NWNlNzZiZTIyMDFhOTQzMzk4Y2MyMDBkZWMzNWIxNWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ca329795ce76be2201a943398cc200dec35b15a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3ca329795ce76be2201a943398cc200dec35b15a",
      "tree": {
        "sha": "d6ef301170ed36e146e2a8d0bc4d8c41bebf8cef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6ef301170ed36e146e2a8d0bc4d8c41bebf8cef"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d6ef301170ed36e146e2a8d0bc4d8c41bebf8cef\nparent 4e8d61e750487f8ff81e3411a014b0a907c5e47d\nauthor josibake <josibake@protonmail.com> 1721147650 +0200\ncommitter josibake <josibake@protonmail.com> 1721152198 +0200\n\n[staging] crypto: add KeyPair wrapper class\n\nAdd a `KeyPair` class which wraps the `secp256k1_keypair`. This allows\nkeeps the secret data in secure memory and allows for passing the\n`KeyPair` object directly to libsecp256k1 functions expecting a\n`secp256k1_keypair`.\n\nMotivation: when passing `CKeys` for taproot outputs to libsecp256k1 functions,\nthe first step is to create a `secp256k1_keypair` data type and use that\ninstead. This is so the libsecp256k1 function can determine if the key\nneeds to be negated, e.g., when signing.\n\nThis is a bit clunky in that it creates an extra step when using a `CKey`\nfor a taproot output and also involves copying the secret data into a\ntemporary object, which the caller must then take care to cleanse. In\naddition, the logic for for applying the merkle_root tweak currently\nonly exists in the `SignSchnorr` function.\n\nIn a later commit, we will add the merkle_root tweaking logic to this\nfunction, which will make the merkle_root logic reusable outside of\nsigning by using the `KeyPair` class directly.\n\nNote: the `data()` method is not const in this commit but will be made\nconst in a later commit. The only reason for this is to keep the diffs\neasier to analyze as we move the merkle_root logic out of `SignSchnorr`\nand the finally move the `SignSchnorr` function from `CKey` to `KeyPair`.\nThis commit is labelled `[staging]` to make it clear that the class as\nimplemented with a non-const data method is not the desired state of the\nclass and that it will be resolved in a later commit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmaWswwACgkQity1WMTz\nPWXN4BAAm9pL+vDjfA1A5WgnrWrw1yzSFF6XdV/z83Qirbg9zRpFK1tlUMFyqlBB\nNvMTHWLRlZ12yeBGfYNAaY4gcfCYEERP/m/o9WD/GKp8Ssn1RzXxKuATIYuHfw4W\nK6PO2tdLcgpd/GWtVTM3S+k623Bz+cQRXMnqDqQNvU1JR5MYlMiP9+ETgOH3AInv\nONkESp2WZke7iZZ/f/7kbI6BhT15BYhiJWBPYK+aBQE8/n0ivD2kRtw/B1+c7qzO\n8acUPozRRhXiKdnXVZax20pny8GVK6cOjBmqAAR+HttMKHwXl7ZuSky+scvdFalg\n/iziLrPga6dFaaspGkftQVmSejdzHAUd5CeozTAzQavT3YQVpG7hey1cm7fA3eaT\n+jk81rgK/wNgV977PEwBIy2QOS3AVkGHy1HIBMQKWsa7MTA5fV0JZ7nOUNwCatLA\n4OW0cYXwQweAG3aLiJWrUYZpgB/6BHrg6h22aMsZakSj0cWgyWqAYBvPR28+ujJN\nypT1MbsbqbhlndkOCi8rKJljRyFZ+audLNQMUm6OlXptrkTmNwn+k6IuhpESYqcK\nHJc9HhNKMEPY8wCKylvSCxWUlwXkECsOZN2oQ0sjm+CmPaQXSmpkt+Y6Hk1wkt2X\nnCu2szJAMReAEfskUVl6OvdjQMH6lFwVU14Dmvl+HE6459LjYVM=\n=x5+n\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e8d61e750487f8ff81e3411a014b0a907c5e47d",
          "sha": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4e8d61e750487f8ff81e3411a014b0a907c5e47d"
        }
      ],
      "message": "[staging] crypto: add KeyPair wrapper class\n\nAdd a `KeyPair` class which wraps the `secp256k1_keypair`. This allows\nkeeps the secret data in secure memory and allows for passing the\n`KeyPair` object directly to libsecp256k1 functions expecting a\n`secp256k1_keypair`.\n\nMotivation: when passing `CKeys` for taproot outputs to libsecp256k1 functions,\nthe first step is to create a `secp256k1_keypair` data type and use that\ninstead. This is so the libsecp256k1 function can determine if the key\nneeds to be negated, e.g., when signing.\n\nThis is a bit clunky in that it creates an extra step when using a `CKey`\nfor a taproot output and also involves copying the secret data into a\ntemporary object, which the caller must then take care to cleanse. In\naddition, the logic for for applying the merkle_root tweak currently\nonly exists in the `SignSchnorr` function.\n\nIn a later commit, we will add the merkle_root tweaking logic to this\nfunction, which will make the merkle_root logic reusable outside of\nsigning by using the `KeyPair` class directly.\n\nNote: the `data()` method is not const in this commit but will be made\nconst in a later commit. The only reason for this is to keep the diffs\neasier to analyze as we move the merkle_root logic out of `SignSchnorr`\nand the finally move the `SignSchnorr` function from `CKey` to `KeyPair`.\nThis commit is labelled `[staging]` to make it clear that the class as\nimplemented with a non-const data method is not the desired state of the\nclass and that it will be resolved in a later commit.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T17:49:58Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T16:34:10Z"
      },
      "sha": "3ca329795ce76be2201a943398cc200dec35b15a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxZDAzMWU3ODY3ZWY5N2MwN2NlZTY5MWMxMTVkNTliM2FlYmZkMTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21d031e7867ef97c07cee691c115d59b3aebfd19",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/21d031e7867ef97c07cee691c115d59b3aebfd19",
      "tree": {
        "sha": "a06095611225a61e0fe1f276a0c0cf8a8d4327e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a06095611225a61e0fe1f276a0c0cf8a8d4327e5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a06095611225a61e0fe1f276a0c0cf8a8d4327e5\nparent 3ca329795ce76be2201a943398cc200dec35b15a\nauthor josibake <josibake@protonmail.com> 1721147801 +0200\ncommitter josibake <josibake@protonmail.com> 1721152268 +0200\n\n[staging] refactor: use KeyPair in SignSchnorr\n\nUse `KeyPair` instead of creating a `secp256k1_keypair` object. The\nmain change here is creating a `KeyPair` instead of a\n`secp256k1_keypair` and then passing it to the libsec256k1 functions\nusing `reinterpret_cast<secp256k1_keypair*>(keypair)`.\n\nThe variable name `m_keypair` is used here to simplify the diff in a\nlater commit when all of the logic in SignSchnorr is moved into the\nKeyPair class, where `m_keypair` is then a private member.\n\nNote: this is why `data()` is currently non-const. Since SignSchnorr\ndoes not have access to the private `m_keypair` member directly, we are cheating\nand accessing it through `data()` in this commit. This is to keep the\nchanges incremental and easier to review.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmaWswwACgkQity1WMTz\nPWVOOA//bYFTY8r4BtY1Xjkvmx86wexoXPFGhz7OoKXXYxL9sj7OEx1gDf7ks0K/\nae17cHqrnsdXioTJTu+MB+mfbAC1DvHAOimYFal+U1Pk/Vlrjmz612Bv0Auw7cOb\nsIw3OY4HjJ0d+BdT7n4FecGWPAAu5aeabeWFvArLwvRhV18h5JaxrNzquJLlwQ1I\nn8T3QXIdrPedGLM/JdsgWcwcgHJvl2ZqLpaUDaiSaPrui9mU0mrgwQJpPy8el4Tz\n1/YVkHnKj/eg2Z5iUqAGSMXrh8mfVG8P6uBpvHUZzDz0l/Mpmtg0z4HwMyYtdOE9\npRF81kCpIjCtvkgaKfwJhkHofHe/Ztn+33YSnhFf35TxQ+HuHNeKz7Zw1QNUGJ6W\nw2yvYHd8yi/R4Xpw90YbnU6FJJD5vQmp7kVxkhPFCImgBnJqFjmeDproHleME0rN\n87yMTTnVWM4qDTokI04S+v3b9Eb+CWHprD33JqUagRtIuj+GwhwxvAN2vklYr5Ni\nAB0JMYbUjTBwK+fPHfqq51cBLDiEQ3BesZiBX6oHZTq8i+zeRkytW+cZNjbreFIq\n1pDKnwnkWg2A8R39b+iaPkU+pPl0Me9Yoy9Il4exw9RBkhBlFE3rJbGiwZPU3tnb\nv4rWrKs9139H3/4zNz8EzZ9Y+1IErV/stDRTHootXZIe9eifwqQ=\n=rhGb\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ca329795ce76be2201a943398cc200dec35b15a",
          "sha": "3ca329795ce76be2201a943398cc200dec35b15a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3ca329795ce76be2201a943398cc200dec35b15a"
        }
      ],
      "message": "[staging] refactor: use KeyPair in SignSchnorr\n\nUse `KeyPair` instead of creating a `secp256k1_keypair` object. The\nmain change here is creating a `KeyPair` instead of a\n`secp256k1_keypair` and then passing it to the libsec256k1 functions\nusing `reinterpret_cast<secp256k1_keypair*>(keypair)`.\n\nThe variable name `m_keypair` is used here to simplify the diff in a\nlater commit when all of the logic in SignSchnorr is moved into the\nKeyPair class, where `m_keypair` is then a private member.\n\nNote: this is why `data()` is currently non-const. Since SignSchnorr\ndoes not have access to the private `m_keypair` member directly, we are cheating\nand accessing it through `data()` in this commit. This is to keep the\nchanges incremental and easier to review.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T17:51:08Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T16:36:41Z"
      },
      "sha": "21d031e7867ef97c07cee691c115d59b3aebfd19"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgyYWY4MWI1MWE4NDA5N2ZkMTA5NTNkMDQxOGFhYzNjOWI3OGIxYzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82af81b51a84097fd10953d0418aac3c9b78b1c8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/82af81b51a84097fd10953d0418aac3c9b78b1c8",
      "tree": {
        "sha": "18ada8f44756282a7fed2632e7949ae717b48b21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/18ada8f44756282a7fed2632e7949ae717b48b21"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 18ada8f44756282a7fed2632e7949ae717b48b21\nparent 21d031e7867ef97c07cee691c115d59b3aebfd19\nauthor josibake <josibake@protonmail.com> 1721141938 +0200\ncommitter josibake <josibake@protonmail.com> 1721152268 +0200\n\nrefactor: move merkle_root logic into KeyPair\n\nMove the merkle_root tweaking logic into the `KeyPair` constructor. This\ncommit adds `merkle_root` to `CKey::ComputeKeyPair` and passes it to the\n`KeyPair` constructor.\n\nThe `if (merkle_root)` block is move-only, except that\n`keypair.data()` is changed to `m_keypair->data()`. This is because we\nare no longer accessing `m_keypair` through the `KeyPair::data()` method\nbecause we can now access the private member `m_keypair` directly.\nBecause of this, we can now make `KeyPair::data()` a read-only const\nmethod.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmaWswwACgkQity1WMTz\nPWXvDw/8DAHoz4mZEhygvZ9zs1CuHWYOecZFh0D+45emIR8h3A7RS85D+AmkCjy/\nwtwh8+GOlr54ZjWm2nMmokShXe1h7g/RgJ1Whki5QS/DHlhkI5bXYff16LGfBqrK\nmwwb5Vt26i3Z841EOkx+HFrjMy3dHmP+cYQpcS4aYK1M/xhX97EXkJRcnG1nYn5B\nNdl6EpX5R24GgIBWqXgdKp+iJkBECt4qceMHxFxR+xtIsVsYKrw9b6S1ilb2tphN\ncGslAh7arz35FJTSKr/4fCaVasVrAk2QTGpkNKcVmAjE6NJqYQl6my5W9z+WWMGe\nhlqEanEvruWncHXpgc2eBrnRngrfIEdGdGBUvaS7fCRhT4WRj/cV2rMbC0v2aHy4\njBc8Jju3xV1HMwkIRg1mjKXyQzIt4sTcxXENos3sgLNb+AZevxTZelKmYVsX+Qvr\npr2zSCyfgZvIUjKObwNGPInfQSKX2ISmvC/M6JcJFvFHeif3nFEuF5rhlxuxnlwa\nbObHPpyvuSwVLu5ToN33hjCcRMW3D2VwOKhi1m0+4PpQ/DAHhraXPrySWrb8ZF53\nJPdscRqeDZmWsO4d3c0kpanzbVOEGK2ebbAuDFY/haqZgF0PEr90N5BSRmcPE+yq\nU68pur9UPQ59Qcq8wIlN9N4ebSlWvLhAyFS6GH2uGgNYIuTwU88=\n=RmHo\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21d031e7867ef97c07cee691c115d59b3aebfd19",
          "sha": "21d031e7867ef97c07cee691c115d59b3aebfd19",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/21d031e7867ef97c07cee691c115d59b3aebfd19"
        }
      ],
      "message": "refactor: move merkle_root logic into KeyPair\n\nMove the merkle_root tweaking logic into the `KeyPair` constructor. This\ncommit adds `merkle_root` to `CKey::ComputeKeyPair` and passes it to the\n`KeyPair` constructor.\n\nThe `if (merkle_root)` block is move-only, except that\n`keypair.data()` is changed to `m_keypair->data()`. This is because we\nare no longer accessing `m_keypair` through the `KeyPair::data()` method\nbecause we can now access the private member `m_keypair` directly.\nBecause of this, we can now make `KeyPair::data()` a read-only const\nmethod.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T17:51:08Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T14:58:58Z"
      },
      "sha": "82af81b51a84097fd10953d0418aac3c9b78b1c8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE3NmNjMzY1MGQ1NmY4MWQyYzZmZWUyMjU5ZTlmNjdjODhjMjU1NTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a76cc3650d56f81d2c6fee2259e9f67c88c25557",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a76cc3650d56f81d2c6fee2259e9f67c88c25557",
      "tree": {
        "sha": "688954d552f308961ba5576dfdd7a8f44f29b8d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/688954d552f308961ba5576dfdd7a8f44f29b8d7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 688954d552f308961ba5576dfdd7a8f44f29b8d7\nparent 82af81b51a84097fd10953d0418aac3c9b78b1c8\nauthor josibake <josibake@protonmail.com> 1721150818 +0200\ncommitter josibake <josibake@protonmail.com> 1721152268 +0200\n\nrefactor: move SignSchnorr logic to KeyPair\n\nMove `SignSchnorr` to `KeyPair`. This makes `CKey::SignSchnorr` now\ncompute a `KeyPair` object and then call `KeyPair::SignSchorr`. The\nsigning logic is move-only with the exception of changing\n`keypair.data()` to `my_keypair->data()`, since we now have access to\nthe private member `m_keypair`.\n\nInstead of calling memory_cleanse on the `secp256k1_keypair`, instead\ninvalidate `KeyPair` by creating an empty one.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmaWswwACgkQity1WMTz\nPWVt7Q//Q7HBppNhGoi+CW9NGC0PNMdt7KtTuZhc//2H+B4x93PR/r/IxQWGYa2O\n+6UVSJQJaDiJw9C31wgE6iiRMrwIe2irB353fiSZV//0MnvgxahXuKRXRlMkIv76\nzi+MkFj8IlM7xzWAaHS2Pdb8OEFybVHalthvhXYwRDU9RSvkflRTp0djuSCteIWN\nZzg6L49/BQGuL8zk0Sf2LCyH0GYutISjTjMhZLYrhcxvZY4lXvb/crwxxgGSHJOr\nbZngF95xX8pKOvCAP6yuZoiWdLEHOJMts9QeDUfBrVJJl5/nu1yzc9nF6iYK0JjN\n3K+ZKoKZx9c1FW8RXhhFac395BZJiOnsK82TCLvGOxreczblIxmySsE2zy3/TFge\nZp1wY/YzQBbPSlMRaO6JuekTZz9bLzggWQQE6Il7yUNrFXrMhOssTidvQadfqId3\neV47k8vqV3iGuR0Gecy5KH+pjfI6IkyOjpJTLbpVFYkl6YONx4I3MOytc3WJAdVv\ntcM/3spolZlUGkO6y/2CvvtK9P6JK+Gep6qPbob6bzikOQy2w7hG9GnLPLS6HRcT\n33Vx8OWXkU2TpK22Hs5W7kwGe4ik+kNn8APLbPN6q64ECzpaKw8YwaoPsk38W90t\nAoSMtF4tuJWtf0gebNk2uTMhDZCT0zt1o7kSBSEqVzaEIDsg4jY=\n=jN/L\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82af81b51a84097fd10953d0418aac3c9b78b1c8",
          "sha": "82af81b51a84097fd10953d0418aac3c9b78b1c8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/82af81b51a84097fd10953d0418aac3c9b78b1c8"
        }
      ],
      "message": "refactor: move SignSchnorr logic to KeyPair\n\nMove `SignSchnorr` to `KeyPair`. This makes `CKey::SignSchnorr` now\ncompute a `KeyPair` object and then call `KeyPair::SignSchorr`. The\nsigning logic is move-only with the exception of changing\n`keypair.data()` to `my_keypair->data()`, since we now have access to\nthe private member `m_keypair`.\n\nInstead of calling memory_cleanse on the `secp256k1_keypair`, instead\ninvalidate `KeyPair` by creating an empty one.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T17:51:08Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T17:26:58Z"
      },
      "sha": "a76cc3650d56f81d2c6fee2259e9f67c88c25557"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVlOWY0ZjQxZGU5OGMyY2RjYzc0ZTMxZmU5MjViMmY1Y2Y5ZjZhZWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "tree": {
        "sha": "05c3816b47dc5f191e44a2cd3a16005ffce4cf79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05c3816b47dc5f191e44a2cd3a16005ffce4cf79"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 05c3816b47dc5f191e44a2cd3a16005ffce4cf79\nparent a76cc3650d56f81d2c6fee2259e9f67c88c25557\nauthor josibake <josibake@protonmail.com> 1721144552 +0200\ncommitter josibake <josibake@protonmail.com> 1721152268 +0200\n\ntests: add tests for KeyPair\n\nReuse existing BIP340 tests, as there should be\nno behavior change between the two\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmaWswwACgkQity1WMTz\nPWXlrw//QnOI68538IiGqkg5IpjH2rmaN/oNvLkBGIRifNMQ5j4IT0f6TYWHaj71\nJaVqDa3NgWEgOkP5mZIqyMz13tHZJHN7WcuvEtSkbQEKL0dnEGUz9Y4RYkheI5bF\nIhou9AO1Mt/70BdhTEIKgRnEs8FvsvcU+ccNiGVQTI/6My4+9B7xVvDwDsOXH49G\nO/M0bRJYbXB1CjFHzIU5u1delz4VIbAXR3aOEkyQqWFobwilSSoz94FnSe4f0kQy\nn7HWGIXQEoqJ0t3djVMmfngTSHyZqp7N71d6+88BBoiFOi8lRyYkjt2y4bziEezI\no6hV6ZyWIT2juOkjGRWedF/gkeiW8WPq8S9+etws7Tzqwpw2j5Kn8H0zFcR9rdZ7\n3p/3D2NPbYlzg6tp0yO1ZiFyx7pk2ij56c02RIPQnGEsVywHjsMk4UhKJ+Z5my2u\nJvh7UyVEOdTRspOQj8GTF1elb4p1nK62Ok4gRp285mNQXEvvPUIJdaPG744uTx7k\ntPrSq1bUSeJpzaBbHtRBhjhx46U36ijzXpclVHWeYiwyPomFnCaZXfR0jsa5Ustc\nxhjrMkXS9UNPPknczmMn5trnqGiOohvFNickAfaLuhKfZg2oJ9t468QItlDpcGx9\nP+3Fwo28RbQfFgHp9ALMaG2m2q3UtwrrUdb9YRw4VBYFf3Z9kRA=\n=YtHs\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a76cc3650d56f81d2c6fee2259e9f67c88c25557",
          "sha": "a76cc3650d56f81d2c6fee2259e9f67c88c25557",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a76cc3650d56f81d2c6fee2259e9f67c88c25557"
        }
      ],
      "message": "tests: add tests for KeyPair\n\nReuse existing BIP340 tests, as there should be\nno behavior change between the two",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T17:51:08Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T15:42:32Z"
      },
      "sha": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13525166154,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAMmKahK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13525166154",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:09:12Z"
    },
    {
      "event": "commented",
      "id": 2231532258,
      "node_id": "IC_kwDOABII586FAnri",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231532258",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:19:31Z",
      "updated_at": "2024-07-16T18:23:06Z",
      "author_association": "MEMBER",
      "body": "Updated https://github.com/bitcoin/bitcoin/commit/bdc2a656c2d2a61d226fde1d1fd4e79664106e18 -> https://github.com/bitcoin/bitcoin/commit/5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec ([add-apply-taptweak-method-00](https://github.com/josibake/bitcoin/tree/add-apply-taptweak-method-00) -> [add-apply-taptweak-method-01](https://github.com/josibake/bitcoin/tree/add-apply-taptweak-method-01) ([compare](https://github.com/josibake/bitcoin/compare/add-apply-taptweak-method-00..josibake:add-apply-taptweak-method-01))\r\n\r\n* Follows some `CKey` conventions with `MakeKeyPairData`, `ClearKeyPairData`, etc\r\n* Add copy constructors (same as `CKey`) - this is necessary to be able to hold `KeyPair` objects in stl containers, e.g., `std::vector<KeyPair>`\r\n* Breaks up the first commit into smaller, more focused commits to aid review (h/t @paplorinc)\r\n\r\nNot much in terms of logical changes from the previous version, but broken into incremental steps to aid with review. Worth mentioning for reviewers: `[staging]` commits are changes that should not be considered final on their own but are incremental steps to make the overall change easier to review. Each commit is still atomic in that it compiles on its own, but having them in smaller steps like this helps quite a bit in understanding the diffs. However, if reviewers feel this is unnecessary, I'm happy to squash these staging commits back into a single commit.\r\n\r\nThis push also includes a rebase on master, but the [compare](https://github.com/josibake/bitcoin/compare/add-apply-taptweak-method-00..josibake:add-apply-taptweak-method-01) is provided with both the old and new branch rebased on master.\r\n\r\n",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2231532258",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 13525268674,
      "node_id": "MEE_lADOABII586H706dzwAAAAMmKzjC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13525268674",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:19:32Z"
    },
    {
      "event": "subscribed",
      "id": 13525268688,
      "node_id": "SE_lADOABII586H706dzwAAAAMmKzjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13525268688",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:19:32Z"
    },
    {
      "event": "commented",
      "id": 2231544856,
      "node_id": "IC_kwDOABII586FAqwY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231544856",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:27:00Z",
      "updated_at": "2024-07-16T18:27:00Z",
      "author_association": "MEMBER",
      "body": "cc @theuni - would appreciate your eyes on this again",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2231544856",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 13525346445,
      "node_id": "MEE_lADOABII586H706dzwAAAAMmLGiN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13525346445",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:27:01Z"
    },
    {
      "event": "subscribed",
      "id": 13525346461,
      "node_id": "SE_lADOABII586H706dzwAAAAMmLGid",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13525346461",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:27:01Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594325841",
      "pull_request_review_id": 2046154187,
      "id": 1594325841,
      "node_id": "PRRC_kwDOABII585fB3tR",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Will anything ever use this key directly? Or will it always just be turned back into a `secp256k1_keypair`? It seems the CKey output is just a wrapper that causes overhead here. I guess for the sake of not exposing `secp256k1_keypair` to the caller?",
      "created_at": "2024-05-08T16:44:21Z",
      "updated_at": "2024-05-08T16:48:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1594325841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594325841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594328715",
      "pull_request_review_id": 2046154187,
      "id": 1594328715,
      "node_id": "PRRC_kwDOABII585fB4aL",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;\n+        if (!ComputeTapTweak(*this, *merkle_root, tweaked_key)) return false;\n+        ret = secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(tweaked_key.begin()));\n+        tweaked_key = CKey();",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is going out of scope anyway, no need?",
      "created_at": "2024-05-08T16:46:56Z",
      "updated_at": "2024-05-08T16:48:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1594328715",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594328715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594465354",
      "pull_request_review_id": 2046365854,
      "id": 1594465354,
      "node_id": "PRRC_kwDOABII585fCZxK",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep! From the description:\r\n\r\n> The motivation is to be able to use the ::ApplyTapTweak logic outside of signing, e.g. in silent payments when retrieving the private key. Outside of silent payments, having this method would support any future use cases where the tweaked key is needed outside of signing.\r\n\r\nThis commit was broken out of the silent payments sending PR, because there we need the tweaked `CKey`. However, we do eventually turn it back into a `keypair` when passing it to libsecp, so maybe there is an argument for just returning the `keypair`? But passing around libsecp types seemed a bit weird..",
      "created_at": "2024-05-08T18:26:18Z",
      "updated_at": "2024-05-08T18:26:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1594465354",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594465354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594569600",
      "pull_request_review_id": 2046546616,
      "id": 1594569600,
      "node_id": "PRRC_kwDOABII585fCzOA",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, if what you need is a wrapped `keypair`, how about creating a wrapped `keypair`? :) https://github.com/theuni/bitcoin/commit/db1d199bf93eae046a62245db8f7782a94f25e9d\r\n\r\n^^ Completely untested. Maybe state via `ApplyTapTweak` is unnecessary as the ctor could just take a pointer to a merkle root instead?",
      "created_at": "2024-05-08T20:08:32Z",
      "updated_at": "2024-05-08T20:28:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1594569600",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594569600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595092731",
      "pull_request_review_id": 2047353278,
      "id": 1595092731,
      "node_id": "PRRC_kwDOABII585fEy77",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice, thanks for the suggestion! This makes a ton more sense. I think it would be better to have the ctor take a pointer to the merkle root because `ApplyTapTweak` is something that you a) only want to do once over the lifetime of the object and b) will always be applied if a `merkle_root` is present (even if its `merkle_root.IsNull() == true`). I don't think this is actually a use case, but if for whatever reason you did need to do something with the key and then later apply a merkle root tweak, you could just use the `CKey` first and then create a `KeyPair(*this, merkle_root)` with the merkle root when needed. \r\n\r\nAlso, what do you think about something like `KeyPair CKey::ComputeKeyPair(*merkle_root);` method, instead of `KeyPair(CKey, merkle_root)`?\r\n\r\nWill pull this in and test it in #28122 and #28201.",
      "created_at": "2024-05-09T07:46:23Z",
      "updated_at": "2024-05-09T07:46:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1595092731",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595092731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595390078",
      "pull_request_review_id": 2047862139,
      "id": 1595390078,
      "node_id": "PRRC_kwDOABII585fF7h-",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please consider the above a doodle, change it however you'd like. I just wanted to sketch out the concept of a wrapped `keypair`.",
      "created_at": "2024-05-09T12:37:48Z",
      "updated_at": "2024-05-09T12:37:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1595390078",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595390078"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595408180",
      "pull_request_review_id": 2047891999,
      "id": 1595408180,
      "node_id": "PRRC_kwDOABII585fF_80",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, for sure! But thanks, very helpful doodle. Not sure why I was so apprehensive about passing around a keypair, but seeing you write it out helped it click for me.",
      "created_at": "2024-05-09T12:54:23Z",
      "updated_at": "2024-05-09T12:54:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1595408180",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595408180"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595821023",
      "pull_request_review_id": 2048562521,
      "id": 1595821023,
      "node_id": "PRRC_kwDOABII585fHkvf",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated as suggested here: https://github.com/theuni/bitcoin/commits/keypairtaptweak/",
      "created_at": "2024-05-09T18:22:39Z",
      "updated_at": "2024-05-09T18:22:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1595821023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595821023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596696710",
      "pull_request_review_id": 2049982773,
      "id": 1596696710,
      "node_id": "PRRC_kwDOABII585fK6iG",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Awesome, thanks @theuni ! I pulled this commit in and also add a \"simple read only vector like interface\" to the `KeyPair` class (same as `CKey`). Needed for: https://github.com/josibake/bitcoin/blob/33868a74dc7b3403ff38343899c37feb4c88d0c6/src/common/bip352.cpp#L204\r\nI also rebased #28122 on this PR and confirmed everything works with the new `KeyPair` class.",
      "created_at": "2024-05-10T12:33:24Z",
      "updated_at": "2024-05-10T12:46:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1596696710",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596696710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596806833",
      "pull_request_review_id": 2050167463,
      "id": 1596806833,
      "node_id": "PRRC_kwDOABII585fLVax",
      "diff_hunk": "@@ -203,6 +205,8 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    KeyPair ComputeKeyPair(const uint256* merkle_root) const;",
      "path": "src/key.h",
      "position": 28,
      "original_position": 14,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "0caa3241b00ee49c7f103c04b6aaad292ec18372",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This could use a comment.",
      "created_at": "2024-05-10T14:11:53Z",
      "updated_at": "2024-05-10T14:16:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1596806833",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596806833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 222,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596815685",
      "pull_request_review_id": 2050182032,
      "id": 1596815685,
      "node_id": "PRRC_kwDOABII585fLXlF",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That looks much better, thanks. Exposing the vector-like interface is a shame, but I don't see any way around it for `secp256k1_silentpayments_sender_create_outputs`.",
      "created_at": "2024-05-10T14:19:26Z",
      "updated_at": "2024-05-10T14:19:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1596815685",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596815685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596979700",
      "pull_request_review_id": 2050461011,
      "id": 1596979700,
      "node_id": "PRRC_kwDOABII585fL_n0",
      "diff_hunk": "@@ -203,6 +205,8 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    KeyPair ComputeKeyPair(const uint256* merkle_root) const;",
      "path": "src/key.h",
      "position": 28,
      "original_position": 14,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "0caa3241b00ee49c7f103c04b6aaad292ec18372",
      "in_reply_to_id": 1596806833,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-05-10T16:44:18Z",
      "updated_at": "2024-05-10T16:44:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1596979700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596979700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 222,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597605164",
      "pull_request_review_id": 2051346482,
      "id": 1597605164,
      "node_id": "PRRC_kwDOABII585fOYUs",
      "diff_hunk": "@@ -327,6 +327,16 @@ BOOST_AUTO_TEST_CASE(bip340_test_vectors)\n         // Verify those signatures for good measure.\n         BOOST_CHECK(pubkey.VerifySchnorr(msg256, sig64));\n \n+        // Repeat the same check, but use the KeyPair directly without any merkle tweak\n+        KeyPair keypair = key.ComputeKeyPair(/*merkle_root=*/nullptr);\n+        CKey keypair_seckey;\n+        BOOST_CHECK(keypair.GetKey(keypair_seckey));",
      "path": "src/test/key_tests.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: BOOST_CHECK_MESSAGE often produces more readable results, but it may be inconvenient to set it up properly. If you think it adds value, it may be helpful to add some debug info as a message in case of likely failures.",
      "created_at": "2024-05-12T10:16:07Z",
      "updated_at": "2024-05-12T10:26:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1597605164",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597605164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597605647",
      "pull_request_review_id": 2051346482,
      "id": 1597605647,
      "node_id": "PRRC_kwDOABII585fOYcP",
      "diff_hunk": "@@ -236,6 +252,41 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair\n+ *\n+ *  Wraps a `secp256k1_keypair` type. `merkle_root` is used to optionally perform tweaking of\n+ *  the internal key, as specified in BIP341:\n+ *\n+ *  - If merkle_root == nullptr: no tweaking is done, use the internal key directly (this is\n+ *                               used for signatures in BIP342 script).\n+ *  - If merkle_root->IsNull():  tweak the internal key with H_TapTweak(pubkey) (this is used for\n+ *                               key path spending when no scripts are present).\n+ *  - Otherwise:                 tweak the internal key H_TapTweak(pubkey || *merkle_root)\n+ *                               (this is used for key path spending, with specific\n+ *                               Merkle root of the script tree).\n+ */\n+class KeyPair\n+{\n+public:\n+    KeyPair(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(KeyPair&&) noexcept = default;\n+\n+    friend KeyPair CKey::ComputeKeyPair(const uint256* merkle_root) const;\n+    [[nodiscard]] bool GetKey(CKey& key) const;\n+    [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n+\n+    //! Simple read-only vector-like interface.\n+    unsigned int size() const { return m_keydata ? m_keydata->size() : 0; }\n+    const std::byte* data() const { return m_keydata ? reinterpret_cast<const std::byte*>(m_keydata->data()) : nullptr; }\n+    const std::byte* begin() const { return data(); }\n+    const std::byte* end() const { return data() + size(); }\n+private:\n+    KeyPair(const CKey& key, const uint256* merkle_root);\n+\n+    using KeyType = std::array<unsigned char, 96>;",
      "path": "src/key.h",
      "position": 90,
      "original_position": 65,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: would it make sense to extract the `96` to a const?\r\n```C++\r\nconstexpr size_t SECP256K1_KEYPAIR_SIZE = 96;\r\nusing KeyType = std::array<unsigned char, SECP256K1_KEYPAIR_SIZE>;\r\n```",
      "created_at": "2024-05-12T10:18:42Z",
      "updated_at": "2024-05-12T10:26:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1597605647",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597605647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 310,
      "original_line": 310,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598114179",
      "pull_request_review_id": 2052091990,
      "id": 1598114179,
      "node_id": "PRRC_kwDOABII585fQUmD",
      "diff_hunk": "@@ -327,6 +327,16 @@ BOOST_AUTO_TEST_CASE(bip340_test_vectors)\n         // Verify those signatures for good measure.\n         BOOST_CHECK(pubkey.VerifySchnorr(msg256, sig64));\n \n+        // Repeat the same check, but use the KeyPair directly without any merkle tweak\n+        KeyPair keypair = key.ComputeKeyPair(/*merkle_root=*/nullptr);\n+        CKey keypair_seckey;\n+        BOOST_CHECK(keypair.GetKey(keypair_seckey));",
      "path": "src/test/key_tests.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": 1597605164,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think it adds much here? We are using BOOST_CHECK to to ensure the function call succeeds before proceeding, so getting a line number failure for BOOST_CHECK seems sufficient for debugging. Also, if dealing with valid keys, this function should never fail.",
      "created_at": "2024-05-13T08:55:21Z",
      "updated_at": "2024-05-13T08:55:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1598114179",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598114179"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598119960",
      "pull_request_review_id": 2052101222,
      "id": 1598119960,
      "node_id": "PRRC_kwDOABII585fQWAY",
      "diff_hunk": "@@ -236,6 +252,41 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair\n+ *\n+ *  Wraps a `secp256k1_keypair` type. `merkle_root` is used to optionally perform tweaking of\n+ *  the internal key, as specified in BIP341:\n+ *\n+ *  - If merkle_root == nullptr: no tweaking is done, use the internal key directly (this is\n+ *                               used for signatures in BIP342 script).\n+ *  - If merkle_root->IsNull():  tweak the internal key with H_TapTweak(pubkey) (this is used for\n+ *                               key path spending when no scripts are present).\n+ *  - Otherwise:                 tweak the internal key H_TapTweak(pubkey || *merkle_root)\n+ *                               (this is used for key path spending, with specific\n+ *                               Merkle root of the script tree).\n+ */\n+class KeyPair\n+{\n+public:\n+    KeyPair(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(KeyPair&&) noexcept = default;\n+\n+    friend KeyPair CKey::ComputeKeyPair(const uint256* merkle_root) const;\n+    [[nodiscard]] bool GetKey(CKey& key) const;\n+    [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n+\n+    //! Simple read-only vector-like interface.\n+    unsigned int size() const { return m_keydata ? m_keydata->size() : 0; }\n+    const std::byte* data() const { return m_keydata ? reinterpret_cast<const std::byte*>(m_keydata->data()) : nullptr; }\n+    const std::byte* begin() const { return data(); }\n+    const std::byte* end() const { return data() + size(); }\n+private:\n+    KeyPair(const CKey& key, const uint256* merkle_root);\n+\n+    using KeyType = std::array<unsigned char, 96>;",
      "path": "src/key.h",
      "position": 90,
      "original_position": 65,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": 1597605647,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't really see a benefit. We shouldn't be exposing this value to anything outside the class, so defining a constexpr here seems unnecessarily verbose. ",
      "created_at": "2024-05-13T08:59:33Z",
      "updated_at": "2024-05-13T08:59:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1598119960",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598119960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 310,
      "original_line": 310,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1672656999",
      "pull_request_review_id": 2169749598,
      "id": 1672656999,
      "node_id": "PRRC_kwDOABII585jsrhn",
      "diff_hunk": "@@ -236,6 +252,41 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair",
      "path": "src/key.h",
      "position": 36,
      "original_position": 34,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": null,
      "user": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The same header is already and very thoughtfully provided for the following function a few lines above\r\n\r\n`KeyPair ComputeKeyPair(const uint256* merkle_root) const;` \r\n\r\n Maybe here a shorter header would be more appropriate to avoid repeating ourselves and make maintenance easier to handle (at the comment level), like so\r\n\r\n```\r\n/** KeyPair\r\n *\r\n *  Wrapper class for the `secp256k1_keypair` type.\r\n */ \r\n```\r\n",
      "created_at": "2024-07-10T16:53:01Z",
      "updated_at": "2024-07-10T17:04:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1672656999",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1672656999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 256,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1672775882",
      "pull_request_review_id": 2169947102,
      "id": 1672775882,
      "node_id": "PRRC_kwDOABII585jtIjK",
      "diff_hunk": "@@ -277,27 +277,7 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);",
      "path": "src/key.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "54b3c73ec50d4c3902049a66bca56438bb4078ba",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Moving and modifying the code in the same commit (while many of the changes serve different purposes, mixing low and high-risk changes) makes the review a lot harder since the diff isn't really useful – having separate red and green parts, not really a diff.\r\n\r\nAdditionally, the commit doesn't explain each change separately. For example:\r\n* The exact reason for memory management changes (via `make_secure_unique`) is not explained, nor are the security implications or potential performance impacts discussed.\r\n* It's unclear why `GetKey` is only used in tests. Why not delete it and introduce it in another PR where it's actually needed by production code?\r\n* The fate of `memory_cleanse(&keypair, sizeof(keypair))` is not explained, nor are the implications of its removal or replacement addressed.\r\n\r\nIt would help a lot if a commit did a single thing, such as a rename or cast change, changing a constant, moving implementation over to a new method, introducing a new class, or splitting a method into two methods, etc - where the commit message explains why the change was necessarry.\r\nThis would separate trivial changes from high-risk ones that need extra attention, so we don't have unrelated changes competing for our attention.\r\n\r\nPlease see https://github.com/bitcoin/bitcoin/pull/28280/commits for an example of focused, single-purpose commits that separate low and high-risk changes (e.g., preparatory refactorings from the focus of the PR), making the review a lot easier.\r\n",
      "created_at": "2024-07-10T18:36:33Z",
      "updated_at": "2024-07-10T18:40:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1672775882",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1672775882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 274,
      "original_line": 274,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679854604",
      "pull_request_review_id": 2180983178,
      "id": 1679854604,
      "node_id": "PRRC_kwDOABII585kIIwM",
      "diff_hunk": "@@ -277,27 +277,7 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);",
      "path": "src/key.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "54b3c73ec50d4c3902049a66bca56438bb4078ba",
      "in_reply_to_id": 1672775882,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hey @paplorinc , thanks for taking a look! I agree, the first commit was quite dense. I've broken the first commit into smaller commits to aid with review and tried to include more information in the commit messages as to the motivation for the changes. Per your feedback, I've also removed the `GetKey` method as its not necessary.",
      "created_at": "2024-07-16T18:21:39Z",
      "updated_at": "2024-07-16T18:21:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1679854604",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679854604"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 274,
      "original_line": 274,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679873577",
      "pull_request_review_id": 2181004865,
      "id": 1679873577,
      "node_id": "PRRC_kwDOABII585kINYp",
      "diff_hunk": "@@ -236,6 +252,41 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair",
      "path": "src/key.h",
      "position": 36,
      "original_position": 34,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": 1672656999,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hey @itornaza , thanks for the review! I've incorporated your feedback and moved the comment regarding the merkle root to the `ComputeKeyPair` function and made this comment more specific to the class itself.",
      "created_at": "2024-07-16T18:31:13Z",
      "updated_at": "2024-07-16T18:31:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1679873577",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679873577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 256,
      "original_line": 256,
      "side": "RIGHT"
    }
  ]
}