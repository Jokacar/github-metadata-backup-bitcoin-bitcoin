{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510",
    "id": 1983513590,
    "node_id": "PR_kwDOABII5852OgP2",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30510",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30510.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30510.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30510",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30510/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/c538ec69f266b51c893a374a4bb82796ede3d7cb",
    "number": 30510,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "multiprocess: Add IPC wrapper for Mining interface",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add Cap'n Proto wrapper for the Mining interface introduced in #30200, and its associated types.\r\n\r\nThis PR combined with #30509 will allow a separate mining process, like the one being implemented in https://github.com/Sjors/bitcoin/pull/48, to connect to the node over IPC, and create, manage, and submit block templates. (#30437 shows another simpler demo of a process using the Mining interface.)\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).",
    "labels": [],
    "created_at": "2024-07-23T14:45:26Z",
    "updated_at": "2024-08-13T12:31:52Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "859eda6655c76b66d36f184353d01ca748475f2e",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "ryanofsky:pr/mine-types",
      "ref": "pr/mine-types",
      "sha": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 13,
        "watchers_count": 13,
        "size": 262795,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-13T09:20:20Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2024-08-02T04:30:37Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "27a770b34b8f1dbb84760f442edb3e23a0c2420b",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35983,
        "stargazers_count": 77845,
        "watchers_count": 77845,
        "size": 265438,
        "default_branch": "master",
        "open_issues_count": 654,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-13T12:51:58Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-08-13T12:46:03Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 300,
    "deletions": 16,
    "changed_files": 15,
    "commits": 7,
    "review_comments": 13,
    "comments": 8
  },
  "events": [
    {
      "event": "commented",
      "id": 2245458616,
      "node_id": "IC_kwDOABII586F1vq4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2245458616",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T14:45:30Z",
      "updated_at": "2024-08-09T16:08:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30510).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30509](https://github.com/bitcoin/bitcoin/pull/30509) (multiprocess: Add -ipcbind option to bitcoin-node by ryanofsky)\n* [#30437](https://github.com/bitcoin/bitcoin/pull/30437) (multiprocess: add bitcoin-mine test program by ryanofsky)\n* [#29409](https://github.com/bitcoin/bitcoin/pull/29409) (multiprocess: Add capnp wrapper for Chain interface by ryanofsky)\n* [#19461](https://github.com/bitcoin/bitcoin/pull/19461) (multiprocess: Add bitcoin-gui -ipcconnect option by ryanofsky)\n* [#19460](https://github.com/bitcoin/bitcoin/pull/19460) (multiprocess: Add bitcoin-wallet -ipcconnect option by ryanofsky)\n* [#10102](https://github.com/bitcoin/bitcoin/pull/10102) (Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#issuecomment-2245458616",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30510"
    },
    {
      "event": "commented",
      "id": 2245586329,
      "node_id": "IC_kwDOABII586F2O2Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2245586329",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T15:37:38Z",
      "updated_at": "2024-07-23T15:38:54Z",
      "author_association": "MEMBER",
      "body": "Is the idea to incorporate the interface changes proposed in #30440 and #30409 after they're merged? And in the mean time keep them in #30437?\r\n\r\nMaybe also link to #30437 in the description as it's a more simple demo than https://github.com/Sjors/bitcoin/pull/48.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#issuecomment-2245586329",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30510"
    },
    {
      "event": "commented",
      "id": 2245938009,
      "node_id": "IC_kwDOABII586F3ktZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2245938009",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T18:16:01Z",
      "updated_at": "2024-07-23T18:16:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Is the idea to incorporate the interface changes proposed in #30440 and #30409 after they're merged? And in the mean time keep them in #30437?\r\n\r\nI could add them here. Just let me know what you prefer. I am planning to rebase #30437 on top of this, too.\r\n\r\n> Maybe also link to #30437 in the description as it's a more simple demo than [Sjors#48](https://github.com/Sjors/bitcoin/pull/48).\r\n\r\nThanks, added\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#issuecomment-2245938009",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30510"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13620721165,
      "node_id": "HRFPE_lADOABII586QkLxWzwAAAAMr27YN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13620721165",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T19:45:57Z"
    },
    {
      "event": "commented",
      "id": 2246151321,
      "node_id": "IC_kwDOABII586F4YyZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2246151321",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T19:46:02Z",
      "updated_at": "2024-07-23T19:46:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/27810447228</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#issuecomment-2246151321",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30510"
    },
    {
      "event": "labeled",
      "id": 13620722245,
      "node_id": "LE_lADOABII586QkLxWzwAAAAMr27pF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13620722245",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T19:46:02Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2246153002,
      "node_id": "IC_kwDOABII586F4ZMq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2246153002",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T19:47:06Z",
      "updated_at": "2024-07-23T19:47:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 4e67086e4c0babb97be30bd9fe3c3b96e258a502 -> 79cfc0d198faecec598f923e6bf83ccf8dc09bbb ([`pr/mine-types.1`](https://github.com/ryanofsky/bitcoin/commits/pr/mine-types.1) -> [`pr/mine-types.2`](https://github.com/ryanofsky/bitcoin/commits/pr/mine-types.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/mine-types.1..pr/mine-types.2)) to fix link error in   https://github.com/bitcoin/bitcoin/pull/30510/checks?check_run_id=27810447228",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#issuecomment-2246153002",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30510"
    },
    {
      "event": "unlabeled",
      "id": 13623628712,
      "node_id": "UNLE_lADOABII586QkLxWzwAAAAMsCBOo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13623628712",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-24T01:48:02Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg1MjNkMTliYjNmOGM5ODJjNmUwMWE0NjM1Yzk4Y2Q5YWMzODZkZWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8523d19bb3f8c982c6e01a4635c98cd9ac386dea",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8523d19bb3f8c982c6e01a4635c98cd9ac386dea",
      "tree": {
        "sha": "3ec7490c027018f616a2d4e01434e9df08a2a81c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ec7490c027018f616a2d4e01434e9df08a2a81c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa0b5d68823b69f4861b002bbfac2fd36ed46356",
          "sha": "fa0b5d68823b69f4861b002bbfac2fd36ed46356",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0b5d68823b69f4861b002bbfac2fd36ed46356"
        }
      ],
      "message": "multiprocess: Add serialization code for CTransaction\n\nAdd support for passing CTransaction and CTransactionRef types to IPC\nfunctions.\n\nThese types can't be passed currently because IPC serialization code currently\nonly supports deserializing types that have an Unserialize() method, which\nCTransaction does not, because it is supposed to represent immutable\ntransactions. Work around this by adding a CustomReadField overload that will\ncall CTransaction's deserialize_type constructor.\n\nThese types also can't be passed currently because serializing transactions\nrequires TransactionSerParams to be set. Fix this by setting TX_WITH_WITNESS as\ndefault serialization parameters for IPC code.",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2024-07-24T08:42:25Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-12-05T20:57:12Z"
      },
      "sha": "8523d19bb3f8c982c6e01a4635c98cd9ac386dea"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg5ODYzOGUwMzQ1MWEwZjA1MDVkZDk0YTAxM2NmNWY3ZTI0ZmQ4MDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/898638e03451a0f0505dd94a013cf5f7e24fd800",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/898638e03451a0f0505dd94a013cf5f7e24fd800",
      "tree": {
        "sha": "8269a6bb13e20a213a8f98e731b161ab36d70bf9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8269a6bb13e20a213a8f98e731b161ab36d70bf9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8523d19bb3f8c982c6e01a4635c98cd9ac386dea",
          "sha": "8523d19bb3f8c982c6e01a4635c98cd9ac386dea",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8523d19bb3f8c982c6e01a4635c98cd9ac386dea"
        }
      ],
      "message": "multiprocess: Add IPC wrapper for Mining interface",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-24T08:42:25Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-17T15:36:34Z"
      },
      "sha": "898638e03451a0f0505dd94a013cf5f7e24fd800"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ3NGM0ZTdmZDBkYWM4YmM4MjVkMjFiNjU4ZTI5ZGVmMjVlMzcxNjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d74c4e7fd0dac8bc825d21b658e29def25e37160",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d74c4e7fd0dac8bc825d21b658e29def25e37160",
      "tree": {
        "sha": "c3b9e9d1ec1eb223aefbdd6b8df13082129fff04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3b9e9d1ec1eb223aefbdd6b8df13082129fff04"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/898638e03451a0f0505dd94a013cf5f7e24fd800",
          "sha": "898638e03451a0f0505dd94a013cf5f7e24fd800",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/898638e03451a0f0505dd94a013cf5f7e24fd800"
        }
      ],
      "message": "depends: Update libmultiprocess library for CustomMessage functions\n\nThis update brings in the following change which allows simplifying the\nmultiprocess code in bitcoin:\n\nhttps://github.com/chaincodelabs/libmultiprocess/pull/105 types: Add Custom{Build,Read,Pass}Message hooks",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-24T21:09:38Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-24T21:09:38Z"
      },
      "sha": "d74c4e7fd0dac8bc825d21b658e29def25e37160"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA0ZWNlYjA4MTUzMjliMTRjZDUxMWYzZDQzNGZmMjEwNTYzNDgxY2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04eceb0815329b14cd511f3d434ff210563481cb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/04eceb0815329b14cd511f3d434ff210563481cb",
      "tree": {
        "sha": "e5dcbbf006dbef29b42d7f30251d41b62441a03c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e5dcbbf006dbef29b42d7f30251d41b62441a03c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d74c4e7fd0dac8bc825d21b658e29def25e37160",
          "sha": "d74c4e7fd0dac8bc825d21b658e29def25e37160",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d74c4e7fd0dac8bc825d21b658e29def25e37160"
        }
      ],
      "message": "multiprocess: Add serialization code for BlockValidationState\n\nCo-authored-by: TheCharlatan <seb.kung@gmail.com>",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-24T21:09:38Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-16T16:38:12Z"
      },
      "sha": "04eceb0815329b14cd511f3d434ff210563481cb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM2NWVhMzc3MzU0YTczYjU1NDY3NmE4Y2I2NTU1OWZiMDUzMWNiMTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c65ea377354a73b554676a8cb65559fb0531cb12",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c65ea377354a73b554676a8cb65559fb0531cb12",
      "tree": {
        "sha": "54ef6f38bb7b7a40572f58c09c61022c2efd936c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/54ef6f38bb7b7a40572f58c09c61022c2efd936c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04eceb0815329b14cd511f3d434ff210563481cb",
          "sha": "04eceb0815329b14cd511f3d434ff210563481cb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/04eceb0815329b14cd511f3d434ff210563481cb"
        }
      ],
      "message": "multiprocess: Add serialization code for vector<char>",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2024-07-24T21:09:38Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-12-05T20:57:12Z"
      },
      "sha": "c65ea377354a73b554676a8cb65559fb0531cb12"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEwNjdjZTM2NWRiNWYzMjVjNDMzOGU5ZjJkOGEzMTNiM2JlOWJjMGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1067ce365db5f325c4338e9f2d8a313b3be9bc0e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1067ce365db5f325c4338e9f2d8a313b3be9bc0e",
      "tree": {
        "sha": "23be307c59611c007266601567309f9a518cd2fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23be307c59611c007266601567309f9a518cd2fc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c65ea377354a73b554676a8cb65559fb0531cb12",
          "sha": "c65ea377354a73b554676a8cb65559fb0531cb12",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c65ea377354a73b554676a8cb65559fb0531cb12"
        }
      ],
      "message": "multiprocess: Add serialization code for CBlockTemplate",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-24T21:09:38Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-16T16:38:12Z"
      },
      "sha": "1067ce365db5f325c4338e9f2d8a313b3be9bc0e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM1MzhlYzY5ZjI2NmI1MWM4OTNhMzc0YTRiYjgyNzk2ZWRlM2Q3Y2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "tree": {
        "sha": "653faceab5d21c7e69805175e375d107ddbec1a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/653faceab5d21c7e69805175e375d107ddbec1a9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1067ce365db5f325c4338e9f2d8a313b3be9bc0e",
          "sha": "1067ce365db5f325c4338e9f2d8a313b3be9bc0e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1067ce365db5f325c4338e9f2d8a313b3be9bc0e"
        }
      ],
      "message": "doc: multiprocess documentation improvements\n\nMost improvements suggested by stickies-v <stickies-v@protonmail.com>\nhttps://github.com/bitcoin/bitcoin/pull/28978#pullrequestreview-1800375604\n\nOmission of CustomReadMessage and CustomBuildMessage was noticed by\nTheCharlatan in\nhttps://github.com/bitcoin/bitcoin/pull/30510#discussion_r1708996040 and is\nfixed here as well.\n\nCo-authored-by: stickies-v <stickies-v@protonmail.com>",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-24T21:09:38Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-01-11T23:07:20Z"
      },
      "sha": "c538ec69f266b51c893a374a4bb82796ede3d7cb"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13636601368,
      "node_id": "HRFPE_lADOABII586QkLxWzwAAAAMszgYY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13636601368",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-24T21:32:14Z"
    },
    {
      "event": "commented",
      "id": 2248939831,
      "node_id": "IC_kwDOABII586GDBk3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2248939831",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-24T21:34:44Z",
      "updated_at": "2024-07-24T21:34:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Was able to simplify this by dropping CustomBuildMessage/CustomReadMessage functions and tests. It now requires the latest version of the libmultiprocess library though.\r\n\r\nRebased 79cfc0d198faecec598f923e6bf83ccf8dc09bbb -> 6cccb436557c58e0ccd21ffe0eaf31058f5cb799 ([`pr/mine-types.2`](https://github.com/ryanofsky/bitcoin/commits/pr/mine-types.2) -> [`pr/mine-types.3`](https://github.com/ryanofsky/bitcoin/commits/pr/mine-types.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/mine-types.2-rebase..pr/mine-types.3)) dropping the first commit",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#issuecomment-2248939831",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30510"
    },
    {
      "event": "reviewed",
      "id": 2227196999,
      "node_id": "PRR_kwDOABII586EwFRH",
      "url": null,
      "actor": null,
      "commit_id": "6cccb436557c58e0ccd21ffe0eaf31058f5cb799",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#pullrequestreview-2227196999",
      "submitted_at": "2024-08-08T10:13:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13810675433,
      "node_id": "HRFPE_lADOABII586QkLxWzwAAAAM3Li7p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13810675433",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T18:19:06Z"
    },
    {
      "event": "reviewed",
      "id": 2228236248,
      "node_id": "PRR_kwDOABII586E0C_Y",
      "url": null,
      "actor": null,
      "commit_id": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 6cccb436557c58e0ccd21ffe0eaf31058f5cb799 -> c538ec69f266b51c893a374a4bb82796ede3d7cb ([`pr/mine-types.3`](https://github.com/ryanofsky/bitcoin/commits/pr/mine-types.3) -> [`pr/mine-types.4`](https://github.com/ryanofsky/bitcoin/commits/pr/mine-types.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/mine-types.3..pr/mine-types.4)) with review suggestions.\r\n\r\nThanks for the review and thoughtful questions. I wrote detailed answers in line but I will reuse the text & diagram in documentation for libmultiprocess so there's a place to point to if similar questions come up again.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#pullrequestreview-2228236248",
      "submitted_at": "2024-08-08T18:22:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
    },
    {
      "event": "commented",
      "id": 2276568749,
      "node_id": "IC_kwDOABII586Hsa6t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2276568749",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T20:08:35Z",
      "updated_at": "2024-08-08T20:08:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for all the explanations @ryanofsky , I'll take some time to digest all of this, and read some more libmultiprocess code.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#issuecomment-2276568749",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30510"
    },
    {
      "event": "mentioned",
      "id": 13811726932,
      "node_id": "MEE_lADOABII586QkLxWzwAAAAM3PjpU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13811726932",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T20:08:37Z"
    },
    {
      "event": "subscribed",
      "id": 13811726945,
      "node_id": "SE_lADOABII586QkLxWzwAAAAM3Pjph",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13811726945",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T20:08:37Z"
    },
    {
      "event": "commented",
      "id": 2276699135,
      "node_id": "IC_kwDOABII586Hs6v_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2276699135",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T21:41:52Z",
      "updated_at": "2024-08-08T21:41:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Thanks for all the explanations @ryanofsky , I'll take some time to digest all of this, and read some more libmultiprocess code.\r\n\r\nThanks! Feel free to ping me if you have any questions. it will help me learn what things to work on documentation for.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#issuecomment-2276699135",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30510"
    },
    {
      "event": "mentioned",
      "id": 13812567640,
      "node_id": "MEE_lADOABII586QkLxWzwAAAAM3Sw5Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13812567640",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T21:41:53Z"
    },
    {
      "event": "subscribed",
      "id": 13812567648,
      "node_id": "SE_lADOABII586QkLxWzwAAAAM3Sw5g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13812567648",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T21:41:53Z"
    },
    {
      "event": "reviewed",
      "id": 2235424388,
      "node_id": "PRR_kwDOABII586FPd6E",
      "url": null,
      "actor": null,
      "commit_id": "8523d19bb3f8c982c6e01a4635c98cd9ac386dea",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#pullrequestreview-2235424388",
      "submitted_at": "2024-08-13T12:31:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708937001",
      "pull_request_review_id": 2227196999,
      "id": 1708937001,
      "node_id": "PRRC_kwDOABII585l3E8p",
      "diff_hunk": "@@ -76,16 +92,40 @@ void CustomBuildField(\n template <typename LocalType, typename Input, typename ReadDest>\n decltype(auto)\n CustomReadField(TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Input&& input, ReadDest&& read_dest,\n-                std::enable_if_t<ipc::capnp::Unserializable<LocalType>::value>* enable = nullptr)\n+                std::enable_if_t<ipc::capnp::Unserializable<LocalType>::value &&\n+                                 !ipc::capnp::Deserializable<LocalType>::value>* enable = nullptr)\n {\n     return read_dest.update([&](auto& value) {\n         if (!input.has()) return;\n         auto data = input.get();\n         SpanReader stream({data.begin(), data.end()});\n-        value.Unserialize(stream);\n+        auto wrapper{ipc::capnp::Wrap(stream)};\n+        value.Unserialize(wrapper);\n     });\n }\n \n+//! Overload multiprocess library's CustomReadField hook to allow any object\n+//! with an deserialize constructor to be read from a capnproto Data field or\n+//! returned from canproto interface. Use Priority<1> so this hook has medium\n+//! priority, and higher priority hooks could take precedence over this one.\n+template <typename LocalType, typename Input, typename ReadDest>\n+decltype(auto)\n+CustomReadField(TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Input&& input, ReadDest&& read_dest,\n+                std::enable_if_t<ipc::capnp::Deserializable<LocalType>::value>* enable = nullptr)\n+{\n+    assert(input.has());\n+    auto data = input.get();\n+    SpanReader stream({data.begin(), data.end()});\n+    // TODO: instead of always preferring Deserialize implementation over\n+    // Unserialize should prefer Deserializing when emplacing, unserialize when\n+    // updating. Can implement by adding read_dest.alreadyConstructed()\n+    // constexpr bool method in libmultiprocess.",
      "path": "src/ipc/capnp/common-types.h",
      "position": null,
      "original_position": 79,
      "commit_id": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "original_commit_id": "2405f401c1f0d6e30b6fa933fba7d5e841f77b87",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm having a hard time reading this  TODO. Can you try and reformulate it?",
      "created_at": "2024-08-08T08:26:08Z",
      "updated_at": "2024-08-08T10:13:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1708937001",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708937001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708942643",
      "pull_request_review_id": 2227196999,
      "id": 1708942643,
      "node_id": "PRRC_kwDOABII585l3GUz",
      "diff_hunk": "@@ -76,16 +92,40 @@ void CustomBuildField(\n template <typename LocalType, typename Input, typename ReadDest>\n decltype(auto)\n CustomReadField(TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Input&& input, ReadDest&& read_dest,\n-                std::enable_if_t<ipc::capnp::Unserializable<LocalType>::value>* enable = nullptr)\n+                std::enable_if_t<ipc::capnp::Unserializable<LocalType>::value &&\n+                                 !ipc::capnp::Deserializable<LocalType>::value>* enable = nullptr)\n {\n     return read_dest.update([&](auto& value) {\n         if (!input.has()) return;\n         auto data = input.get();\n         SpanReader stream({data.begin(), data.end()});\n-        value.Unserialize(stream);\n+        auto wrapper{ipc::capnp::Wrap(stream)};\n+        value.Unserialize(wrapper);\n     });\n }\n \n+//! Overload multiprocess library's CustomReadField hook to allow any object\n+//! with an deserialize constructor to be read from a capnproto Data field or\n+//! returned from canproto interface. Use Priority<1> so this hook has medium\n+//! priority, and higher priority hooks could take precedence over this one.\n+template <typename LocalType, typename Input, typename ReadDest>\n+decltype(auto)\n+CustomReadField(TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Input&& input, ReadDest&& read_dest,\n+                std::enable_if_t<ipc::capnp::Deserializable<LocalType>::value>* enable = nullptr)\n+{\n+    assert(input.has());\n+    auto data = input.get();\n+    SpanReader stream({data.begin(), data.end()});\n+    // TODO: instead of always preferring Deserialize implementation over\n+    // Unserialize should prefer Deserializing when emplacing, unserialize when\n+    // updating. Can implement by adding read_dest.alreadyConstructed()\n+    // constexpr bool method in libmultiprocess.\n+    auto wrapper{ipc::capnp::Wrap(stream)};\n+    return read_dest.construct(deserialize, wrapper);",
      "path": "src/ipc/capnp/common-types.h",
      "position": 91,
      "original_position": 81,
      "commit_id": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "original_commit_id": "2405f401c1f0d6e30b6fa933fba7d5e841f77b87",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: it would be nice to give this the global `g_` prefix (though it is not introduced in this PR).",
      "created_at": "2024-08-08T08:29:09Z",
      "updated_at": "2024-08-08T10:13:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1708942643",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708942643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 120,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708943992",
      "pull_request_review_id": 2227196999,
      "id": 1708943992,
      "node_id": "PRRC_kwDOABII585l3Gp4",
      "diff_hunk": "@@ -76,16 +92,40 @@ void CustomBuildField(\n template <typename LocalType, typename Input, typename ReadDest>\n decltype(auto)\n CustomReadField(TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Input&& input, ReadDest&& read_dest,\n-                std::enable_if_t<ipc::capnp::Unserializable<LocalType>::value>* enable = nullptr)\n+                std::enable_if_t<ipc::capnp::Unserializable<LocalType>::value &&\n+                                 !ipc::capnp::Deserializable<LocalType>::value>* enable = nullptr)\n {\n     return read_dest.update([&](auto& value) {\n         if (!input.has()) return;\n         auto data = input.get();\n         SpanReader stream({data.begin(), data.end()});\n-        value.Unserialize(stream);\n+        auto wrapper{ipc::capnp::Wrap(stream)};\n+        value.Unserialize(wrapper);\n     });\n }\n \n+//! Overload multiprocess library's CustomReadField hook to allow any object\n+//! with an deserialize constructor to be read from a capnproto Data field or\n+//! returned from canproto interface. Use Priority<1> so this hook has medium",
      "path": "src/ipc/capnp/common-types.h",
      "position": null,
      "original_position": 66,
      "commit_id": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "original_commit_id": "2405f401c1f0d6e30b6fa933fba7d5e841f77b87",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo nit: s/canproto/capnproto/ (here and elsewhere).",
      "created_at": "2024-08-08T08:29:53Z",
      "updated_at": "2024-08-08T10:13:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1708943992",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708943992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708996040",
      "pull_request_review_id": 2227196999,
      "id": 1708996040,
      "node_id": "PRRC_kwDOABII585l3TXI",
      "diff_hunk": "@@ -11,4 +11,14 @@\n #include <node/types.h>\n #include <validation.h>\n \n+namespace mp {\n+// Custom serialization for BlockValidationState.\n+void CustomBuildMessage(InvokeContext& invoke_context,\n+                        const BlockValidationState& src,\n+                        ipc::capnp::messages::BlockValidationState::Builder&& builder);\n+void CustomReadMessage(InvokeContext& invoke_context,",
      "path": "src/ipc/capnp/mining-types.h",
      "position": 20,
      "original_position": 9,
      "commit_id": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "original_commit_id": "e5820bfa73a17a4b0bec0e8f42d162e9d44a93dd",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not directly related to this PR, but did these type hook methods get renamed since the docs were written? https://github.com/ryanofsky/bitcoin/blob/pr/ipc/doc/design/multiprocess.md#type-hooks-in-srcipccapnp-typesh",
      "created_at": "2024-08-08T08:57:06Z",
      "updated_at": "2024-08-08T10:13:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1708996040",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708996040"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709048212",
      "pull_request_review_id": 2227196999,
      "id": 1709048212,
      "node_id": "PRRC_kwDOABII585l3gGU",
      "diff_hunk": "@@ -0,0 +1,12 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_CAPNP_MINING_H\n+#define BITCOIN_IPC_CAPNP_MINING_H\n+\n+#include <interfaces/mining.h>\n+#include <ipc/capnp/mining.capnp.h>",
      "path": "src/ipc/capnp/mining.h",
      "position": null,
      "original_position": 9,
      "commit_id": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "original_commit_id": "6cccb436557c58e0ccd21ffe0eaf31058f5cb799",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm a bit confused by this file. It is only included by `mining.capnp`, but in turn includes the auto-generated header from `mining.capnp` here. What is the purpose of this? Couldn't the capnp file just directly include `interfaces/mining.h`? At least doing so compiles for me.",
      "created_at": "2024-08-08T09:24:06Z",
      "updated_at": "2024-08-08T10:13:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1709048212",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709048212"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709096542",
      "pull_request_review_id": 2227196999,
      "id": 1709096542,
      "node_id": "PRRC_kwDOABII585l3r5e",
      "diff_hunk": "@@ -70,6 +71,13 @@ void IpcTest()\n     CTransactionRef tx2{foo->passTransaction(tx1)};\n     BOOST_CHECK(*Assert(tx1) == *Assert(tx2));\n \n+    BlockValidationState bs1;\n+    bs1.Invalid(BlockValidationResult::BLOCK_CHECKPOINT, \"reject reason\", \"debug message\");\n+    BlockValidationState bs2{foo->passBlockState(bs1)};\n+    BOOST_CHECK_EQUAL(static_cast<int>(bs1.GetResult()), static_cast<int>(bs2.GetResult()));\n+    BOOST_CHECK_EQUAL(bs1.GetRejectReason(), bs2.GetRejectReason());\n+    BOOST_CHECK_EQUAL(bs1.GetDebugMessage(), bs2.GetDebugMessage());",
      "path": "src/test/ipc_test.cpp",
      "position": 38,
      "original_position": 17,
      "commit_id": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "original_commit_id": "e5820bfa73a17a4b0bec0e8f42d162e9d44a93dd",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it would be nice to test some more invariants here:\r\n```diff\r\ndiff --git a/src/test/ipc_test.cpp b/src/test/ipc_test.cpp\r\nindex aabc0650b8..fa5273446f 100644\r\n--- a/src/test/ipc_test.cpp\r\n+++ b/src/test/ipc_test.cpp\r\n@@ -79,0 +80,3 @@ void IpcTest()\r\n+    BOOST_CHECK_EQUAL(bs1.IsValid(), bs2.IsValid());\r\n+    BOOST_CHECK_EQUAL(bs1.IsError(), bs2.IsError());\r\n+    BOOST_CHECK_EQUAL(bs1.IsInvalid(), bs2.IsInvalid());\r\n@@ -82,0 +86,9 @@ void IpcTest()\r\n+    BlockValidationState bs3;\r\n+    BlockValidationState bs4{foo->passBlockState(bs3)};\r\n+    BOOST_CHECK_EQUAL(bs3.IsValid(), bs4.IsValid());\r\n+    BOOST_CHECK_EQUAL(bs3.IsError(), bs4.IsError());\r\n+    BOOST_CHECK_EQUAL(bs3.IsInvalid(), bs4.IsInvalid());\r\n+    BOOST_CHECK_EQUAL(static_cast<int>(bs3.GetResult()), static_cast<int>(bs4.GetResult()));\r\n+    BOOST_CHECK_EQUAL(bs3.GetRejectReason(), bs4.GetRejectReason());\r\n+    BOOST_CHECK_EQUAL(bs3.GetDebugMessage(), bs4.GetDebugMessage());\r\n```",
      "created_at": "2024-08-08T09:48:53Z",
      "updated_at": "2024-08-08T10:13:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1709096542",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709096542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709774619",
      "pull_request_review_id": 2228236248,
      "id": 1709774619,
      "node_id": "PRRC_kwDOABII585l6Rcb",
      "diff_hunk": "@@ -76,16 +92,40 @@ void CustomBuildField(\n template <typename LocalType, typename Input, typename ReadDest>\n decltype(auto)\n CustomReadField(TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Input&& input, ReadDest&& read_dest,\n-                std::enable_if_t<ipc::capnp::Unserializable<LocalType>::value>* enable = nullptr)\n+                std::enable_if_t<ipc::capnp::Unserializable<LocalType>::value &&\n+                                 !ipc::capnp::Deserializable<LocalType>::value>* enable = nullptr)\n {\n     return read_dest.update([&](auto& value) {\n         if (!input.has()) return;\n         auto data = input.get();\n         SpanReader stream({data.begin(), data.end()});\n-        value.Unserialize(stream);\n+        auto wrapper{ipc::capnp::Wrap(stream)};\n+        value.Unserialize(wrapper);\n     });\n }\n \n+//! Overload multiprocess library's CustomReadField hook to allow any object\n+//! with an deserialize constructor to be read from a capnproto Data field or\n+//! returned from canproto interface. Use Priority<1> so this hook has medium\n+//! priority, and higher priority hooks could take precedence over this one.\n+template <typename LocalType, typename Input, typename ReadDest>\n+decltype(auto)\n+CustomReadField(TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Input&& input, ReadDest&& read_dest,\n+                std::enable_if_t<ipc::capnp::Deserializable<LocalType>::value>* enable = nullptr)\n+{\n+    assert(input.has());\n+    auto data = input.get();\n+    SpanReader stream({data.begin(), data.end()});\n+    // TODO: instead of always preferring Deserialize implementation over\n+    // Unserialize should prefer Deserializing when emplacing, unserialize when\n+    // updating. Can implement by adding read_dest.alreadyConstructed()\n+    // constexpr bool method in libmultiprocess.",
      "path": "src/ipc/capnp/common-types.h",
      "position": null,
      "original_position": 79,
      "commit_id": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "original_commit_id": "2405f401c1f0d6e30b6fa933fba7d5e841f77b87",
      "in_reply_to_id": 1708937001,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1708937001\r\n\r\n> I'm having a hard time reading this TODO. Can you try and reformulate it?\r\n\r\nI'm removed the TODO since it's a low-priority efficiency improvement. Basically, there are 2 ways to call `CustomReadField` and there are 2 ways to deserialize certain objects, and the code is not currently choosing the most efficient way to deserialize based on the way it is called.\r\n\r\nTo explain further, the `CustomReadField` function is responsible for converting one field of a capnproto struct into a C++ object. (This C++ object will be an input parameter passed to a function in the IPC server process, or it will be an output parameter, return value, or an exception to be thrown in the IPC client process.)\r\n\r\nOne way to call `CustomReadField` is to pass a `ReadDestEmplace` object as the `read_dest` parameter. The other way to call it is to pass a `ReadDestValue` object as the `read_dest` parameter.\r\n\r\nYou pass `ReadDestValue` when you want the `CustomReadField` implementation to read some capnpproto struct field and use the content to update an existing C++ object.  `ReadDestValue` just contains a reference to the object that should be updated.\r\n\r\nYou pass `ReadDestEmplace` when there is no existing C++ object and you want the `CustomReadField` implementation to read a capnproto field and construct a new C++ object from it by calling an emplace function. `ReadDestEmplace` is needed if the C++ type is immutable like `CTransaction` and can't be modified after is created. It is also useful for mutable objects if they are being used as `std::map` keys, because `std::map` keys are const, so it is less awkward and more efficient to call `std::map::emplace` than try to read the capnproto field into a temporary object and then try to move that object into the `std::map`.\r\n\r\nAs for the TODO, the TODO is just saying right now if a C++ class has both a `deserialize_type` constructor and an `Unserialize` method, the current `CustomReadField` implementation will always prefer calling the `deserialize_type` constructor. This works and is ideal if `ReadDestEmplace` is passed, but is not ideal if `ReadDestValue` is passed, because that requires the existing C++ object to be [destroyed and reconstructed](https://github.com/chaincodelabs/libmultiprocess/blob/a9e16da55e880e5a0aed5008307ea56edc33fbd1/include/mp/proxy-types.h#L285-L287) to call the `deserialize_type` constructor, when probably it would be more efficient to call the `Unserialize` method instead. So the TODO describes a libmultiprocess modification which would enable that.",
      "created_at": "2024-08-08T15:30:29Z",
      "updated_at": "2024-08-08T18:22:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1709774619",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709774619"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709816237",
      "pull_request_review_id": 2228236248,
      "id": 1709816237,
      "node_id": "PRRC_kwDOABII585l6bmt",
      "diff_hunk": "@@ -76,16 +92,40 @@ void CustomBuildField(\n template <typename LocalType, typename Input, typename ReadDest>\n decltype(auto)\n CustomReadField(TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Input&& input, ReadDest&& read_dest,\n-                std::enable_if_t<ipc::capnp::Unserializable<LocalType>::value>* enable = nullptr)\n+                std::enable_if_t<ipc::capnp::Unserializable<LocalType>::value &&\n+                                 !ipc::capnp::Deserializable<LocalType>::value>* enable = nullptr)\n {\n     return read_dest.update([&](auto& value) {\n         if (!input.has()) return;\n         auto data = input.get();\n         SpanReader stream({data.begin(), data.end()});\n-        value.Unserialize(stream);\n+        auto wrapper{ipc::capnp::Wrap(stream)};\n+        value.Unserialize(wrapper);\n     });\n }\n \n+//! Overload multiprocess library's CustomReadField hook to allow any object\n+//! with an deserialize constructor to be read from a capnproto Data field or\n+//! returned from canproto interface. Use Priority<1> so this hook has medium\n+//! priority, and higher priority hooks could take precedence over this one.\n+template <typename LocalType, typename Input, typename ReadDest>\n+decltype(auto)\n+CustomReadField(TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Input&& input, ReadDest&& read_dest,\n+                std::enable_if_t<ipc::capnp::Deserializable<LocalType>::value>* enable = nullptr)\n+{\n+    assert(input.has());\n+    auto data = input.get();\n+    SpanReader stream({data.begin(), data.end()});\n+    // TODO: instead of always preferring Deserialize implementation over\n+    // Unserialize should prefer Deserializing when emplacing, unserialize when\n+    // updating. Can implement by adding read_dest.alreadyConstructed()\n+    // constexpr bool method in libmultiprocess.\n+    auto wrapper{ipc::capnp::Wrap(stream)};\n+    return read_dest.construct(deserialize, wrapper);",
      "path": "src/ipc/capnp/common-types.h",
      "position": 91,
      "original_position": 81,
      "commit_id": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "original_commit_id": "2405f401c1f0d6e30b6fa933fba7d5e841f77b87",
      "in_reply_to_id": 1708942643,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1708942643\r\n\r\n> Nit: it would be nice to give this the global `g_` prefix (though it is not introduced in this PR).\r\n\r\nIt's a good point but I think modifying serialize.h is outside the scope of this PR, so I will leave it alone here.\r\n\r\nI'm not sure a `g_` prefix is ideal since this is a constant, so all caps `DESERIALIZE` would probably communicate its purpose more accurately and be more in spirit of the the developer notes.\r\n\r\nI think If I were changing this, I would eliminate the `deserialize` global entirely and rename `struct deserialize_type` just to `struct Deserialize`, replacing current uses of `deserialize` with `Deserialize{}`. The would avoid the ugliness of all-caps `DESERIALIZE` and also make clear this is a token parameter which doesn't actually hold any information.",
      "created_at": "2024-08-08T15:52:49Z",
      "updated_at": "2024-08-08T18:22:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1709816237",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709816237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 120,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709823817",
      "pull_request_review_id": 2228236248,
      "id": 1709823817,
      "node_id": "PRRC_kwDOABII585l6ddJ",
      "diff_hunk": "@@ -11,4 +11,14 @@\n #include <node/types.h>\n #include <validation.h>\n \n+namespace mp {\n+// Custom serialization for BlockValidationState.\n+void CustomBuildMessage(InvokeContext& invoke_context,\n+                        const BlockValidationState& src,\n+                        ipc::capnp::messages::BlockValidationState::Builder&& builder);\n+void CustomReadMessage(InvokeContext& invoke_context,",
      "path": "src/ipc/capnp/mining-types.h",
      "position": 20,
      "original_position": 9,
      "commit_id": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "original_commit_id": "e5820bfa73a17a4b0bec0e8f42d162e9d44a93dd",
      "in_reply_to_id": 1708996040,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1708996040\r\n\r\n> Not directly related to this PR, but did these type hook methods get renamed since the docs were written? https://github.com/ryanofsky/bitcoin/blob/pr/ipc/doc/design/multiprocess.md#type-hooks-in-srcipccapnp-typesh\r\n\r\nGood catch, updated the docs to mention these. The custom message hooks have actually been around a while but I moved them from bitcoin code to libmultiprocess code recently in https://github.com/chaincodelabs/libmultiprocess/pull/105. The message hooks are just simpler but less flexible alternatives to the field hooks, as described there.",
      "created_at": "2024-08-08T15:56:53Z",
      "updated_at": "2024-08-08T18:22:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1709823817",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709823817"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709911230",
      "pull_request_review_id": 2228236248,
      "id": 1709911230,
      "node_id": "PRRC_kwDOABII585l6yy-",
      "diff_hunk": "@@ -0,0 +1,12 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_CAPNP_MINING_H\n+#define BITCOIN_IPC_CAPNP_MINING_H\n+\n+#include <interfaces/mining.h>\n+#include <ipc/capnp/mining.capnp.h>",
      "path": "src/ipc/capnp/mining.h",
      "position": null,
      "original_position": 9,
      "commit_id": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "original_commit_id": "6cccb436557c58e0ccd21ffe0eaf31058f5cb799",
      "in_reply_to_id": 1709048212,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1709048212\r\n\r\n> I'm a bit confused by this file. It is only included by `mining.capnp`, but in turn includes the auto-generated header from `mining.capnp` here. What is the purpose of this? Couldn't the capnp file just directly include `interfaces/mining.h`? At least doing so compiles for me.\r\n\r\nI simplified this as suggested. I had just copied these mining interface files from one of the other interfaces (probably node or chain) and did not bother to simplify it.\r\n\r\nThe mining interface is pretty basic and does not require specializing the `mp::ProxyServer` and `mp::ProxyClient` classes like some other interfaces (to manage lifetimes of pointer and reference parameters passed through those interfaces). If it did, these definitions would go in `mining.h` because those specializations would be needed by the `mining.capnp.proxy.h` file generated by libmultiprocess. They could not go in `mining-types.h` because it depends on that file, which would cause a circular dependency.\r\n\r\nIf the mining interface did need to specialize the proxy client or proxy server classes, the includes would look like:\r\n\r\n```mermaid\r\ngraph BT\r\n    CH[mining.capnp.h]:::gencap\r\n    H[mining.h]\r\n    PH[mining.capnp.proxy.h]:::genmp\r\n    TH[mining-types.h]\r\n    PTH[mining.capnp.proxy-types.h]:::genmp\r\n    \r\n    H --> CH\r\n    PH --> H\r\n    PH --> CH\r\n    PTH --> PH\r\n    TH --> PH\r\n    TH --> CH\r\n    PTH --> TH\r\n    PTH --> CH\r\n    \r\n    classDef gencap fill:#ffecff,stroke:#937093,font-style:italic;\r\n    classDef genmp fill:#ecffff,stroke:#709393,font-style:italic;\r\n```\r\n\r\nwith:\r\n\r\n- `mining.capnp.h` generated by Cap'n Proto and exposing capnp structs and interfaces to c++\r\n- `mining.h` written manually and customizing `mp::ProxyServer` and `mp::ProxyClient` classes.\r\n- `mining.capnp.proxy.h` generated by libmultiprocess and providing accessors for capnp types, using customizations from previous.\r\n- `mining-types.h` written manually and customizing C++ type ↔️ Cap'n Proto type conversion, using accessors from previous.\r\n- `mining.capnp.proxy-types.h` generated by libmultiprocess, providing type conversions for Capnp structs annotated with `$Proxy.wrap`, and using manual type conversions from previous",
      "created_at": "2024-08-08T16:49:06Z",
      "updated_at": "2024-08-08T18:27:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1709911230",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709911230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709972901",
      "pull_request_review_id": 2228236248,
      "id": 1709972901,
      "node_id": "PRRC_kwDOABII585l7B2l",
      "diff_hunk": "@@ -70,6 +71,13 @@ void IpcTest()\n     CTransactionRef tx2{foo->passTransaction(tx1)};\n     BOOST_CHECK(*Assert(tx1) == *Assert(tx2));\n \n+    BlockValidationState bs1;\n+    bs1.Invalid(BlockValidationResult::BLOCK_CHECKPOINT, \"reject reason\", \"debug message\");\n+    BlockValidationState bs2{foo->passBlockState(bs1)};\n+    BOOST_CHECK_EQUAL(static_cast<int>(bs1.GetResult()), static_cast<int>(bs2.GetResult()));\n+    BOOST_CHECK_EQUAL(bs1.GetRejectReason(), bs2.GetRejectReason());\n+    BOOST_CHECK_EQUAL(bs1.GetDebugMessage(), bs2.GetDebugMessage());",
      "path": "src/test/ipc_test.cpp",
      "position": 38,
      "original_position": 17,
      "commit_id": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "original_commit_id": "e5820bfa73a17a4b0bec0e8f42d162e9d44a93dd",
      "in_reply_to_id": 1709096542,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1709096542\r\n\r\n> I think it would be nice to test some more invariants here:\r\n\r\nThanks, added",
      "created_at": "2024-08-08T17:27:39Z",
      "updated_at": "2024-08-08T18:22:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1709972901",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709972901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710015402",
      "pull_request_review_id": 2228236248,
      "id": 1710015402,
      "node_id": "PRRC_kwDOABII585l7MOq",
      "diff_hunk": "@@ -76,16 +92,40 @@ void CustomBuildField(\n template <typename LocalType, typename Input, typename ReadDest>\n decltype(auto)\n CustomReadField(TypeList<LocalType>, Priority<1>, InvokeContext& invoke_context, Input&& input, ReadDest&& read_dest,\n-                std::enable_if_t<ipc::capnp::Unserializable<LocalType>::value>* enable = nullptr)\n+                std::enable_if_t<ipc::capnp::Unserializable<LocalType>::value &&\n+                                 !ipc::capnp::Deserializable<LocalType>::value>* enable = nullptr)\n {\n     return read_dest.update([&](auto& value) {\n         if (!input.has()) return;\n         auto data = input.get();\n         SpanReader stream({data.begin(), data.end()});\n-        value.Unserialize(stream);\n+        auto wrapper{ipc::capnp::Wrap(stream)};\n+        value.Unserialize(wrapper);\n     });\n }\n \n+//! Overload multiprocess library's CustomReadField hook to allow any object\n+//! with an deserialize constructor to be read from a capnproto Data field or\n+//! returned from canproto interface. Use Priority<1> so this hook has medium",
      "path": "src/ipc/capnp/common-types.h",
      "position": null,
      "original_position": 66,
      "commit_id": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "original_commit_id": "2405f401c1f0d6e30b6fa933fba7d5e841f77b87",
      "in_reply_to_id": 1708943992,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1708943992\r\n\r\n> Typo nit: s/canproto/capnproto/ (here and elsewhere).\r\n\r\nThanks, fixed",
      "created_at": "2024-08-08T17:55:02Z",
      "updated_at": "2024-08-08T18:22:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1710015402",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710015402"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1715214130",
      "pull_request_review_id": 2235424388,
      "id": 1715214130,
      "node_id": "PRRC_kwDOABII585mPBcy",
      "diff_hunk": "@@ -16,6 +17,14 @@\n \n namespace ipc {\n namespace capnp {\n+//! Construct a ParamStream wrapping data stream with serialization parameters\n+//! needed to pass transaction objects between bitcoin processes.\n+template<typename S>\n+auto Wrap(S& s)\n+{\n+    return ParamsStream{s, TX_WITH_WITNESS};",
      "path": "src/ipc/capnp/common-types.h",
      "position": 17,
      "original_position": 17,
      "commit_id": "c538ec69f266b51c893a374a4bb82796ede3d7cb",
      "original_commit_id": "8523d19bb3f8c982c6e01a4635c98cd9ac386dea",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8523d19bb3f8c982c6e01a4635c98cd9ac386dea: I wonder if this causes a problem when handling a block template without a witness commitment.\r\n\r\nIf so, I might just have stratum v2 templates always set a coinbase witness.",
      "created_at": "2024-08-13T12:31:52Z",
      "updated_at": "2024-08-13T12:31:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30510#discussion_r1715214130",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1715214130"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30510"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    }
  ]
}