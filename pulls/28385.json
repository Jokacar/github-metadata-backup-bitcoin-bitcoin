{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385",
    "id": 1499078513,
    "node_id": "PR_kwDOABII585ZWh9x",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28385",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28385.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28385.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28385",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28385/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
    "number": 28385,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "[refactor] rewrite DisconnectedBlockTransactions to not use boost",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Motivation\r\n- I think it's preferable to use stdlib data structures instead of depending on boost if we can achieve the same thing.\r\n- Also see #28335 for further context/motivation. This PR simplifies that one.\r\n\r\nThings done in this PR:\r\n- Add a bench for `DisconnectedBlockTransactions` where we reorg and the new chain has {100%, 90%, 10%} of the same transactions. AFAIU in practice, it's usually close to 100%.\r\n- Rewrite `DisconnectedBlockTransactions` as a `std::list` + `unordered_map` instead of a boost multi index container.\r\n  - On my machine, the bench suggests the performance is very similar.\r\n- Move `DisconnectedBlockTransactions` from txmempool.h to its own kernel/disconnected_transactions.h. This struct isn't used by txmempool and doesn't have much to do with txmempool. My guess is that it's been living there for convenience since the boost includes are there.\r\n",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-09-01T15:52:38Z",
    "updated_at": "2023-09-05T14:58:26Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "382feb7da4dadde586824fd808f2f221d944facf",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "glozow:2023-09-unboost-disconnectedtxns-listonly",
      "ref": "2023-09-unboost-disconnectedtxns-listonly",
      "sha": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 244262754,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNDQyNjI3NTQ=",
        "name": "bitcoin",
        "full_name": "glozow/bitcoin",
        "owner": {
          "login": "glozow",
          "id": 25183001,
          "node_id": "MDQ6VXNlcjI1MTgzMDAx",
          "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/glozow",
          "html_url": "https://github.com/glozow",
          "followers_url": "https://api.github.com/users/glozow/followers",
          "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
          "organizations_url": "https://api.github.com/users/glozow/orgs",
          "repos_url": "https://api.github.com/users/glozow/repos",
          "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/glozow/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/glozow/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/glozow/bitcoin",
        "archive_url": "https://api.github.com/repos/glozow/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/glozow/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/glozow/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/glozow/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/glozow/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/glozow/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/glozow/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/glozow/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/glozow/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/glozow/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/glozow/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/glozow/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/glozow/bitcoin/events",
        "forks_url": "https://api.github.com/repos/glozow/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/glozow/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/glozow/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/glozow/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/glozow/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/glozow/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/glozow/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/glozow/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/glozow/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/glozow/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/glozow/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/glozow/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/glozow/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/glozow/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/glozow/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/glozow/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:glozow/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/glozow/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/glozow/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/glozow/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/glozow/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/glozow/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/glozow/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/glozow/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/glozow/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/glozow/bitcoin/hooks",
        "svn_url": "https://github.com/glozow/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 10,
        "watchers_count": 10,
        "size": 229999,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-09-05T14:58:20Z",
        "created_at": "2020-03-02T02:31:56Z",
        "updated_at": "2023-08-30T16:39:28Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9d3b216e009a53ffcecd57e7f10df15cccd5fd6d",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35612,
        "stargazers_count": 71222,
        "watchers_count": 71222,
        "size": 239099,
        "default_branch": "master",
        "open_issues_count": 682,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-09-05T14:58:27Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-09-05T11:14:20Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 238,
    "deletions": 100,
    "changed_files": 7,
    "commits": 4,
    "review_comments": 28,
    "comments": 3
  },
  "events": [
    {
      "event": "labeled",
      "id": 10258786900,
      "node_id": "LE_lADOABII585v6tugzwAAAAJjeKpU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10258786900",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-01T15:52:38Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "commented",
      "id": 1702965783,
      "node_id": "IC_kwDOABII585lgTIX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1702965783",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-01T15:52:42Z",
      "updated_at": "2023-09-05T14:53:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [fanquake](https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1706343369) |\n| Approach ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/28385#pullrequestreview-1609794532), [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/28385#pullrequestreview-1611253884) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28335](https://github.com/bitcoin/bitcoin/pull/28335) (RFC: Remove boost usage from kernel api / headers by TheCharlatan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1702965783",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28385"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10258927179,
      "node_id": "HRFPE_lADOABII585v6tugzwAAAAJjes5L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10258927179",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-01T16:07:33Z"
    },
    {
      "event": "labeled",
      "id": 10258929323,
      "node_id": "LE_lADOABII585v6tugzwAAAAJjetar",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10258929323",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-01T16:07:39Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10258978176,
      "node_id": "HRFPE_lADOABII585v6tugzwAAAAJje5WA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10258978176",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-01T16:12:50Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-01T16:24:24Z",
      "updated_at": "2023-09-01T16:24:24Z",
      "source": {
        "issue": {
          "id": 1864447692,
          "node_id": "PR_kwDOABII585YqB5K",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28335",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28335/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28335/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28335/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28335",
          "number": 28335,
          "state": "open",
          "state_reason": null,
          "title": "RFC: Remove boost usage from kernel api / headers",
          "body": "Similarly to #28327 I wanted to open this PR to receive some opinions and better approaches.\r\n\r\nThe kernel library is currently at the stage where unwanted headers are removed from its set of headers. In practice, this means we are reducing the number of includes that are required for compiling the experimental `bitcoin-chainstate` binary. This is described in stage 1 step 3 of the [project tracking issue](https://github.com/bitcoin/bitcoin/issues/27587).\r\n\r\nCurrently the mempool is part of the kernel library. The mempool headers include the boost multi index headers. Thus any application wanting to use the kernel library and its headers will have to include the boost headers too. This is not only undesirable because of the sheer size of these headers, but also might lead to conflicts if the including application uses a different boost version.\r\n\r\nIn the approach laid out by this PR, mempool member variables and methods are declared in the header without having to include boost by either wrapping them in a struct and [pimpling](https://en.cppreference.com/w/cpp/language/pimpl) them, or making methods static implementation functions. The boost definitions are gathered into separate header (`mempool_set_definitions.h`) that is only included by implementation files that require definitions of the boost types. This allows us to retain the current architecture with roughly the same interfaces. \r\n\r\nThe approach laid out by this PR also has some, albeit small, compilation speed and size benefits. Averaged over a few of compilation runs I consistently observe faster compilation by a couple of seconds and some smaller pre-processed and compiled object sizes. The main detractor of this method is obviously the number of lines touched. However it also has the benefit of inventorizing all the files that require direct access to the mempool data structures as well getting rid of boost multi index includes in non-kernel implementation files that include the mempool, but don't directly manipulate its data structures (e.g. wallet.cpp).\r\n\r\nA much simpler alternative approach, at least on the surface, would be removing all `txmempool.h` includes from kernel library headers (see [this branch](https://github.com/TheCharlatan/bitcoin/tree/mempoolBoostSimple)). Currently this is only `validation.h`.  Due to the mutex member of `CTxMemPool` and the correspondingly defined lock decorators on the chainstate methods this becomes a bit more complicated though and I am not sure how this might be possible with the current architecture.\r\n\r\nA discussion of how and if to remove the mempool from the kernel library has so far been intentionally punted to the next stage of the kernel library development. Pimpling the mempool itself precludes this discussion, since the library could never be shipped with the `CTxMemPool` headers. Pimpling the mempool members (like done in this PR) might also make a future splitting of block and mempool validation logic into separate compilation units easier.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28335",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28335",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28335.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28335.patch"
          },
          "created_at": "2023-08-24T05:46:16Z",
          "updated_at": "2023-09-05T10:00:59Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 10259654431,
      "node_id": "UNLE_lADOABII585v6tugzwAAAAJjhecf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10259654431",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-01T17:45:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1607651664,
      "node_id": "PRR_kwDOABII585f0tFQ",
      "url": null,
      "actor": null,
      "commit_id": "0c356aaafad6a45cd5a6c52d2a561f392751533a",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "bitcoinfinancier",
        "id": 134175231,
        "node_id": "U_kgDOB_9Z_w",
        "avatar_url": "https://avatars.githubusercontent.com/u/134175231?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoinfinancier",
        "html_url": "https://github.com/bitcoinfinancier",
        "followers_url": "https://api.github.com/users/bitcoinfinancier/followers",
        "following_url": "https://api.github.com/users/bitcoinfinancier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoinfinancier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoinfinancier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoinfinancier/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoinfinancier/orgs",
        "repos_url": "https://api.github.com/users/bitcoinfinancier/repos",
        "events_url": "https://api.github.com/users/bitcoinfinancier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoinfinancier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#pullrequestreview-1607651664",
      "submitted_at": "2023-09-01T20:46:40Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
    },
    {
      "event": "reviewed",
      "id": 1607967957,
      "node_id": "PRR_kwDOABII585f16TV",
      "url": null,
      "actor": null,
      "commit_id": "0c356aaafad6a45cd5a6c52d2a561f392751533a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#pullrequestreview-1607967957",
      "submitted_at": "2023-09-02T07:00:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-02T09:47:53Z",
      "updated_at": "2023-09-02T09:47:53Z",
      "source": {
        "issue": {
          "id": 1878544434,
          "node_id": "PR_kwDOABII585ZZZg8",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28391",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28391/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28391/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28391/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28391",
          "number": 28391,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Simplify CTxMempool/BlockAssembler fields, remove some external mapTx access",
          "body": "Motivation\r\n* It seems preferable to use stdlib data structures instead of boost if they can achieve close to the same thing.\r\n* Code external to mempool should ideally use its public helper methods instead of accessing `mapTx` directly.\r\n* Reduce the number of complex boost multi index type interactions\r\n* Also see #28335 for further context/motivation. This PR together with #28385 simplifies that one.\r\n\r\nOverview of things done in this PR:\r\n* Make `vTxHashes` a vector of transaction references instead of a pair of transaction hash and iterator. The trade off here is that the iterator is retrieved on the fly with `get_iter_from_wtxid` instead of being cached in `vTxHashes`.\r\n* Replace `mapTx` access with `CTxMemPool` helper methods\r\n  * Please note when reviewing that `infoAll` is already in other places that grab all mempool transactions as well, such as in net_processing when responding to bip35 messages.\r\n* Simplify `checkChainLimits` call in `node/interfaces.cpp`\r\n* Make `MiniMinerMempoolEntry` ctor more explicit\r\n* Make `CTxMemPoolEntry`s `lockPoints`mutable such that they can be changed with a const iterator directly instead of going through `mapTx`\r\n* Make `BlockAssembler`'s `inBlock` and `failedTx` sets of transaction hashes.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28391",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28391",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28391.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28391.patch"
          },
          "created_at": "2023-09-02T09:47:53Z",
          "updated_at": "2023-09-05T13:32:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 10265874913,
      "node_id": "LE_lADOABII585v6tugzwAAAAJj5NHh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10265874913",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-03T11:22:53Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10272212810,
      "node_id": "HRFPE_lADOABII585v6tugzwAAAAJkRYdK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10272212810",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-04T10:18:04Z"
    },
    {
      "event": "renamed",
      "id": 10272229456,
      "node_id": "RTE_lADOABII585v6tugzwAAAAJkRchQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10272229456",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-04T10:19:44Z",
      "rename": {
        "from": "[refactor] rewrite DisconnectedblockTransactions to not use boost, remove some external mapTx accesses",
        "to": "[refactor] rewrite DisconnectedblockTransactions to not use boost"
      }
    },
    {
      "event": "renamed",
      "id": 10272230854,
      "node_id": "RTE_lADOABII585v6tugzwAAAAJkRc3G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10272230854",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-04T10:19:53Z",
      "rename": {
        "from": "[refactor] rewrite DisconnectedblockTransactions to not use boost",
        "to": "[refactor] rewrite DisconnectedBlockTransactions to not use boost"
      }
    },
    {
      "event": "commented",
      "id": 1705008336,
      "node_id": "IC_kwDOABII585loFzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1705008336",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-04T10:23:47Z",
      "updated_at": "2023-09-04T10:23:47Z",
      "author_association": "MEMBER",
      "body": "- Dropped last 2 commits since they're now in #28391\r\n- Switched to the list + map implementation. I thought about it more over the weekend and it feels more similar to the current impl + would be more performant in the average case.\r\n- Addressed https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1313753384\r\n- Improved the bench a little, reduced some duplicate code",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1705008336",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28385"
    },
    {
      "event": "reviewed",
      "id": 1609499811,
      "node_id": "PRR_kwDOABII585f7wSj",
      "url": null,
      "actor": null,
      "commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#pullrequestreview-1609499811",
      "submitted_at": "2023-09-04T12:56:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
    },
    {
      "event": "reviewed",
      "id": 1609794532,
      "node_id": "PRR_kwDOABII585f84Pk",
      "url": null,
      "actor": null,
      "commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK, this approach with `std::list` seems elegant and reduces dependency on boost.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#pullrequestreview-1609794532",
      "submitted_at": "2023-09-04T17:24:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
    },
    {
      "event": "commented",
      "id": 1706343369,
      "node_id": "IC_kwDOABII585ltLvJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1706343369",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T10:18:31Z",
      "updated_at": "2023-09-05T10:18:31Z",
      "author_association": "MEMBER",
      "body": "Concept ACK - great stuff.\r\n\r\n> I think it's preferable to use stdlib data structures instead of depending on boost if we can achieve the same thing.\r\n\r\n+1",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#issuecomment-1706343369",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28385"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10283579593,
      "node_id": "HRFPE_lADOABII585v6tugzwAAAAJk8vjJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10283579593",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T13:15:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10283633819,
      "node_id": "HRFPE_lADOABII585v6tugzwAAAAJk88yb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10283633819",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T13:19:35Z"
    },
    {
      "event": "reviewed",
      "id": 1611195190,
      "node_id": "PRR_kwDOABII585gCOM2",
      "url": null,
      "actor": null,
      "commit_id": "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#pullrequestreview-1611195190",
      "submitted_at": "2023-09-05T14:26:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
    },
    {
      "event": "reviewed",
      "id": 1611196988,
      "node_id": "PRR_kwDOABII585gCOo8",
      "url": null,
      "actor": null,
      "commit_id": "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#pullrequestreview-1611196988",
      "submitted_at": "2023-09-05T14:29:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
    },
    {
      "event": "reviewed",
      "id": 1611253884,
      "node_id": "PRR_kwDOABII585gCch8",
      "url": null,
      "actor": null,
      "commit_id": "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK 0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#pullrequestreview-1611253884",
      "submitted_at": "2023-09-05T14:52:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUxMGJiNjFlMWQyMDNjNmE1NjBkMWY5OTIzZWY3ODYyYzI1ZDMyZTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e10bb61e1d203c6a560d1f9923ef7862c25d32e1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e10bb61e1d203c6a560d1f9923ef7862c25d32e1",
      "tree": {
        "sha": "32d57ea45713ce302b7917e2ec50bb5e2f2b9b2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/32d57ea45713ce302b7917e2ec50bb5e2f2b9b2c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5666966dffeb620b4a628679d667346e02fd3b19",
          "sha": "5666966dffeb620b4a628679d667346e02fd3b19",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5666966dffeb620b4a628679d667346e02fd3b19"
        }
      ],
      "message": "[bench] DisconnectedBlockTransactions",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-09-05T14:57:13Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-09-01T10:58:23Z"
      },
      "sha": "e10bb61e1d203c6a560d1f9923ef7862c25d32e1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU2NTI0N2FlYzRlMmM3MGU4OGYzMGE5MDc0Mjk2ZGNlNzQ4OWQ2YjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/565247aec4e2c70e88f30a9074296dce7489d6b6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/565247aec4e2c70e88f30a9074296dce7489d6b6",
      "tree": {
        "sha": "f5dac6c08cea5990db93ca8cab1b16c385665369",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f5dac6c08cea5990db93ca8cab1b16c385665369"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e10bb61e1d203c6a560d1f9923ef7862c25d32e1",
          "sha": "e10bb61e1d203c6a560d1f9923ef7862c25d32e1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e10bb61e1d203c6a560d1f9923ef7862c25d32e1"
        }
      ],
      "message": "[refactor] rewrite DisconnectedBlockTransactions as a list + map\n\ninstead of using boost.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-09-05T14:57:14Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-08-25T15:26:22Z"
      },
      "sha": "565247aec4e2c70e88f30a9074296dce7489d6b6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJhZjEzNTIwMjAxNzE3ZDI5NzJmMmRmNTc0MGRiYzBkOTNlMTFjYTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/baf13520201717d2972f2df5740dbc0d93e11ca6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/baf13520201717d2972f2df5740dbc0d93e11ca6",
      "tree": {
        "sha": "1ef6531d8ff7f263c4141e43fd51bcc919244089",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ef6531d8ff7f263c4141e43fd51bcc919244089"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/565247aec4e2c70e88f30a9074296dce7489d6b6",
          "sha": "565247aec4e2c70e88f30a9074296dce7489d6b6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/565247aec4e2c70e88f30a9074296dce7489d6b6"
        }
      ],
      "message": "don't check disconnectpool memory usage if queuedTx.empty",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-09-05T14:57:14Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-09-05T12:39:15Z"
      },
      "sha": "baf13520201717d2972f2df5740dbc0d93e11ca6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMxOWY0YWFiYjYwODMwMmJhN2JiNjhiNTJhNGU3NTkyY2NkNWUzNGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "tree": {
        "sha": "d7f940e68f68b7564034ee6951442877af4ae7ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7f940e68f68b7564034ee6951442877af4ae7ae"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/baf13520201717d2972f2df5740dbc0d93e11ca6",
          "sha": "baf13520201717d2972f2df5740dbc0d93e11ca6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/baf13520201717d2972f2df5740dbc0d93e11ca6"
        }
      ],
      "message": "MOVEONLY: DisconnectedBlockTransactions to its own file\n\nThis struct is only used in validation + tests and has very little to do\nwith txmempool.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-09-05T14:57:14Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-09-05T12:45:09Z"
      },
      "sha": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10284856362,
      "node_id": "HRFPE_lADOABII585v6tugzwAAAAJlBnQq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10284856362",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T14:58:26Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313753384",
      "pull_request_review_id": 1607967957,
      "id": 1313753384,
      "node_id": "PRRC_kwDOABII585OTkko",
      "diff_hunk": "@@ -301,8 +301,8 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     // Iterate disconnectpool in reverse, so that we add transactions",
      "path": "src/validation.cpp",
      "position": 17,
      "original_position": 1,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "0c356aaafad6a45cd5a6c52d2a561f392751533a",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The comment here about `insertion_order` needs updating.",
      "created_at": "2023-09-02T07:00:09Z",
      "updated_at": "2023-09-02T07:00:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1313753384",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1313753384"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 302,
      "original_line": 302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314742050",
      "pull_request_review_id": 1609235600,
      "id": 1314742050,
      "node_id": "PRRC_kwDOABII585OXV8i",
      "diff_hunk": "@@ -301,8 +301,8 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     // Iterate disconnectpool in reverse, so that we add transactions",
      "path": "src/validation.cpp",
      "position": 17,
      "original_position": 1,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "0c356aaafad6a45cd5a6c52d2a561f392751533a",
      "in_reply_to_id": 1313753384,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, thanks",
      "created_at": "2023-09-04T10:23:53Z",
      "updated_at": "2023-09-04T10:23:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314742050",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314742050"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 302,
      "original_line": 302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314917018",
      "pull_request_review_id": 1609499811,
      "id": 1314917018,
      "node_id": "PRRC_kwDOABII585OYAqa",
      "diff_hunk": "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {",
      "path": "src/validation.h",
      "position": null,
      "original_position": 18,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is only used in `validation.cpp`, and one unit test, so I wonder if it makes sense to move it to a separate header? ",
      "created_at": "2023-09-04T12:56:15Z",
      "updated_at": "2023-09-04T12:56:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314917018",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314917018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 250,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314920227",
      "pull_request_review_id": 1609504968,
      "id": 1314920227,
      "node_id": "PRRC_kwDOABII585OYBcj",
      "diff_hunk": "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {",
      "path": "src/validation.h",
      "position": null,
      "original_position": 18,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": 1314917018,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "makes sense to me. kernel/disconnected_transactions.h?",
      "created_at": "2023-09-04T12:59:17Z",
      "updated_at": "2023-09-04T12:59:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1314920227",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314920227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 250,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315098713",
      "pull_request_review_id": 1609794532,
      "id": 1315098713,
      "node_id": "PRRC_kwDOABII585OYtBZ",
      "diff_hunk": "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;",
      "path": "src/validation.h",
      "position": null,
      "original_position": 51,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: would suggest reserving to avoid rehashing the set\r\n```suggestion\r\n        std::unordered_set<uint256, SaltedTxidHasher> txids;\r\n        txids.reserve(vtx.size());\r\n```",
      "created_at": "2023-09-04T16:16:48Z",
      "updated_at": "2023-09-04T17:24:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315098713",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315098713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 283,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315106643",
      "pull_request_review_id": 1609794532,
      "id": 1315106643,
      "node_id": "PRRC_kwDOABII585OYu9T",
      "diff_hunk": "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "path": "src/validation.h",
      "position": null,
      "original_position": 61,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could avoid creating `it_next`\r\n```suggestion\r\n            if (txids.count((*it)->GetHash()) > 0) {\r\n                cachedInnerUsage -= RecursiveDynamicUsage(*it);\r\n                it = queuedTx.erase(it);\r\n            } else {\r\n                ++it;\r\n            }\r\n```",
      "created_at": "2023-09-04T16:27:33Z",
      "updated_at": "2023-09-04T17:24:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315106643",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315106643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": 288,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315116227",
      "pull_request_review_id": 1609794532,
      "id": 1315116227,
      "node_id": "PRRC_kwDOABII585OYxTD",
      "diff_hunk": "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "path": "src/validation.h",
      "position": null,
      "original_position": 61,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": 1315106643,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Or actually, could use `std::list::remove_if`. Quickly conveys the intent of the code imo, and looks like it speeds up the bench a tiny bit, going from \r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        7,204,642.33 |              138.80 |    0.2% |      0.87 | `AddAndRemoveDisconnectedBlockTransactions10`\r\n|        5,293,310.64 |              188.92 |    0.4% |      0.64 | `AddAndRemoveDisconnectedBlockTransactions100`\r\n|        6,931,825.73 |              144.26 |    0.9% |      0.84 | `AddAndRemoveDisconnectedBlockTransactions90`\r\n\r\nto\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        6,971,191.70 |              143.45 |    0.8% |      0.84 | `AddAndRemoveDisconnectedBlockTransactions10`\r\n|        4,991,280.27 |              200.35 |    0.7% |      0.60 | `AddAndRemoveDisconnectedBlockTransactions100`\r\n|        6,632,837.50 |              150.77 |    0.6% |      0.80 | `AddAndRemoveDisconnectedBlockTransactions90`\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/validation.h b/src/validation.h\r\nindex 3e1a024d09..c81331f950 100644\r\n--- a/src/validation.h\r\n+++ b/src/validation.h\r\n@@ -283,15 +283,13 @@ struct DisconnectedBlockTransactions {\r\n         std::unordered_set<uint256, SaltedTxidHasher> txids;\r\n         std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\r\n         // Iterate through entire list once, removing any transactions in the block.\r\n-        auto it = queuedTx.begin();\r\n-        while (it != queuedTx.end()) {\r\n-            auto it_next = std::next(it);\r\n-            if (txids.count((*it)->GetHash()) > 0) {\r\n-                cachedInnerUsage -= RecursiveDynamicUsage(*it);\r\n-                queuedTx.erase(it);\r\n+        queuedTx.remove_if([&](const CTransactionRef& tx) {\r\n+            if (txids.count(tx->GetHash()) > 0) {\r\n+                cachedInnerUsage -= RecursiveDynamicUsage(tx);\r\n+                return true;\r\n             }\r\n-            it = it_next;\r\n-        }\r\n+            return false;\r\n+        });\r\n     }\r\n \r\n     // Remove the earliest-inserted transaction.\r\n\r\n```\r\n</details>",
      "created_at": "2023-09-04T16:46:39Z",
      "updated_at": "2023-09-04T17:24:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315116227",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315116227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": 288,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315120053",
      "pull_request_review_id": 1609794532,
      "id": 1315120053,
      "node_id": "PRRC_kwDOABII585OYyO1",
      "diff_hunk": "@@ -2726,9 +2726,9 @@ bool Chainstate::DisconnectTip(BlockValidationState& state, DisconnectedBlockTra\n         }\n         while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since the dynamic memory usage of `queuedTx` now changed, I think this is behaviour change as we'll be dropping entries less frequently?",
      "created_at": "2023-09-04T16:54:45Z",
      "updated_at": "2023-09-04T17:24:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315120053",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315120053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2727,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315121992",
      "pull_request_review_id": 1609794532,
      "id": 1315121992,
      "node_id": "PRRC_kwDOABII585OYytI",
      "diff_hunk": "@@ -2726,9 +2726,9 @@ bool Chainstate::DisconnectTip(BlockValidationState& state, DisconnectedBlockTra\n         }\n         while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {\n             // Drop the earliest entry, and remove its children from the mempool.\n-            auto it = disconnectpool->queuedTx.get<insertion_order>().begin();\n-            m_mempool->removeRecursive(**it, MemPoolRemovalReason::REORG);\n-            disconnectpool->removeEntry(it);\n+            auto ptx = disconnectpool->queuedTx.front();",
      "path": "src/validation.cpp",
      "position": 39,
      "original_position": 18,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps worth adding an `assert(!disconnectpool->queuedTx.empty())` here? I know we already assume that's the case because `disconnectpool` is non-nullptr and because of the dynamic memory usage check, but i think adding an assertion may make this more robust, since for an empty vector we have UB here and two lines down.",
      "created_at": "2023-09-04T16:59:13Z",
      "updated_at": "2023-09-04T17:24:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315121992",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315121992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2730,
      "original_line": 2730,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315126680",
      "pull_request_review_id": 1609794532,
      "id": 1315126680,
      "node_id": "PRRC_kwDOABII585OYz2Y",
      "diff_hunk": "@@ -301,8 +301,8 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     // Iterate disconnectpool in reverse, so that we add transactions\n     // back to the mempool starting with the earliest transaction that had\n     // been previously seen in a block.\n-    auto it = disconnectpool.queuedTx.get<insertion_order>().rbegin();\n-    while (it != disconnectpool.queuedTx.get<insertion_order>().rend()) {\n+    auto it = disconnectpool.queuedTx.rbegin();",
      "path": "src/validation.cpp",
      "position": 23,
      "original_position": 6,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[this comment](https://github.com/bitcoin/bitcoin/pull/28385/files#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98L298) still needs updating",
      "created_at": "2023-09-04T17:10:35Z",
      "updated_at": "2023-09-04T17:24:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315126680",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315126680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 305,
      "original_line": 305,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315700650",
      "pull_request_review_id": 1610734123,
      "id": 1315700650,
      "node_id": "PRRC_kwDOABII585Oa_-q",
      "diff_hunk": "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "path": "src/validation.h",
      "position": null,
      "original_position": 61,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": 1315106643,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`remove_if` doesn't change the size of the container, so your patch is incomplete, no?",
      "created_at": "2023-09-05T10:27:25Z",
      "updated_at": "2023-09-05T10:27:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315700650",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315700650"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": 288,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315715972",
      "pull_request_review_id": 1610758430,
      "id": 1315715972,
      "node_id": "PRRC_kwDOABII585ObDuE",
      "diff_hunk": "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "path": "src/validation.h",
      "position": null,
      "original_position": 61,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": 1315106643,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`queuedTx` is not a vector but a list, so I think just removing it from the list is sufficient?",
      "created_at": "2023-09-05T10:42:47Z",
      "updated_at": "2023-09-05T10:42:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315715972",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315715972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": 288,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315721974",
      "pull_request_review_id": 1610768061,
      "id": 1315721974,
      "node_id": "PRRC_kwDOABII585ObFL2",
      "diff_hunk": "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "path": "src/validation.h",
      "position": null,
      "original_position": 61,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": 1315106643,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why would the container make a difference? If I print `std::list::size()`, it remains unchanged.\r\n\r\n\r\n```cpp\r\n#include <algorithm>\r\n#include <iostream>\r\n#include <list>\r\n  \r\nint main()\r\n{\r\n    std::list<char> str1 {'T', ' ', 't'};\r\n\r\n \r\n    auto noSpaceEnd = std::remove(str1.begin(), str1.end(), ' ');\r\n \r\n         std::cout  << \" size: \" << str1.size() << '\\n';\r\n\r\n    str1.erase(noSpaceEnd, str1.end());\r\n \r\n     std::cout  << \" size: \" << str1.size() << '\\n';\r\n \r\n  \r\n}\r\n```\r\n\r\n```\r\n size: 3\r\n\r\n size: 2",
      "created_at": "2023-09-05T10:49:01Z",
      "updated_at": "2023-09-05T10:49:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315721974",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315721974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": 288,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315735924",
      "pull_request_review_id": 1610789611,
      "id": 1315735924,
      "node_id": "PRRC_kwDOABII585ObIl0",
      "diff_hunk": "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "path": "src/validation.h",
      "position": null,
      "original_position": 61,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": 1315106643,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, sorry, you are using `std::list::remove_if`, not `std::remove_if`.",
      "created_at": "2023-09-05T11:02:16Z",
      "updated_at": "2023-09-05T11:02:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315735924",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315735924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": 288,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315745332",
      "pull_request_review_id": 1610805064,
      "id": 1315745332,
      "node_id": "PRRC_kwDOABII585ObK40",
      "diff_hunk": "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "path": "src/validation.h",
      "position": null,
      "original_position": 61,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": 1315106643,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I didn't realize they behaved differently but with `std::list::remove_if` the items are indeed removed from the container, as opposed to just shifted:\r\n\r\n```\r\n#include <algorithm>\r\n#include <iostream>\r\n#include <list>\r\n  \r\nint main()\r\n{\r\n    std::list<char> str1 {'T', ' ', 't'};\r\n\r\n    str1.remove(' ');\r\n         std::cout  << \" size: \" << str1.size() << '\\n';\r\n  \r\n}\r\n```\r\n \r\n```\r\nsize: 2\r\n```",
      "created_at": "2023-09-05T11:12:17Z",
      "updated_at": "2023-09-05T11:12:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315745332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315745332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": 288,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315818643",
      "pull_request_review_id": 1610928529,
      "id": 1315818643,
      "node_id": "PRRC_kwDOABII585ObcyT",
      "diff_hunk": "@@ -2726,9 +2726,9 @@ bool Chainstate::DisconnectTip(BlockValidationState& state, DisconnectedBlockTra\n         }\n         while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": 1315120053,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps (I think it's negligible compared to the transactions themselves), and would probably be an improvement.",
      "created_at": "2023-09-05T12:23:10Z",
      "updated_at": "2023-09-05T12:23:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315818643",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315818643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2727,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315830894",
      "pull_request_review_id": 1610948591,
      "id": 1315830894,
      "node_id": "PRRC_kwDOABII585Obfxu",
      "diff_hunk": "@@ -301,8 +301,8 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     // Iterate disconnectpool in reverse, so that we add transactions\n     // back to the mempool starting with the earliest transaction that had\n     // been previously seen in a block.\n-    auto it = disconnectpool.queuedTx.get<insertion_order>().rbegin();\n-    while (it != disconnectpool.queuedTx.get<insertion_order>().rend()) {\n+    auto it = disconnectpool.queuedTx.rbegin();",
      "path": "src/validation.cpp",
      "position": 23,
      "original_position": 6,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": 1315126680,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wow, I just realized I was pushing changes to the wrong branch 🤦 \r\nI have changed this now",
      "created_at": "2023-09-05T12:33:46Z",
      "updated_at": "2023-09-05T13:15:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315830894",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315830894"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 305,
      "original_line": 305,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877339",
      "pull_request_review_id": 1610948591,
      "id": 1315877339,
      "node_id": "PRRC_kwDOABII585ObrHb",
      "diff_hunk": "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;",
      "path": "src/validation.h",
      "position": null,
      "original_position": 51,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": 1315098713,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This line went away with the list + map approach so marking as resolved",
      "created_at": "2023-09-05T13:11:10Z",
      "updated_at": "2023-09-05T13:15:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315877339",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 283,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877657",
      "pull_request_review_id": 1610948591,
      "id": 1315877657,
      "node_id": "PRRC_kwDOABII585ObrMZ",
      "diff_hunk": "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {\n+    uint64_t cachedInnerUsage = 0;\n+    std::list<CTransactionRef> queuedTx;\n+\n+    // It's almost certainly a logic bug if we don't clear out queuedTx before\n+    // destruction, as we add to it while disconnecting blocks, and then we\n+    // need to re-process remaining transactions to ensure mempool consistency.\n+    // For now, assert() that we've emptied out this object on destruction.\n+    // This assert() can always be removed if the reorg-processing code were\n+    // to be refactored such that this assumption is no longer true (for\n+    // instance if there was some other way we cleaned up the mempool after a\n+    // reorg, besides draining this object).\n+    ~DisconnectedBlockTransactions() { assert(queuedTx.empty()); }\n+\n+    size_t DynamicMemoryUsage() const {\n+        // std::list uses 3 pointers per entry.\n+        return memusage::MallocUsage(sizeof(CTransactionRef) + 3 * sizeof(void*)) * queuedTx.size() + cachedInnerUsage;\n+    }\n+\n+    void addTransaction(const CTransactionRef& tx)\n+    {\n+        queuedTx.push_back(tx);\n+        cachedInnerUsage += RecursiveDynamicUsage(tx);\n+    }\n+\n+    // Remove entries by txid, and update memory usage.\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx)\n+    {\n+        // Short-circuit in the common case of a block being added to the tip\n+        if (queuedTx.empty()) {\n+            return;\n+        }\n+        // Create a set of all block txids.\n+        std::unordered_set<uint256, SaltedTxidHasher> txids;\n+        std::transform(vtx.cbegin(), vtx.cend(), std::inserter(txids, txids.end()), [](const auto& tx) { return tx->GetHash(); });\n+        // Iterate through entire list once, removing any transactions in the block.\n+        auto it = queuedTx.begin();\n+        while (it != queuedTx.end()) {\n+            auto it_next = std::next(it);\n+            if (txids.count((*it)->GetHash()) > 0) {\n+                cachedInnerUsage -= RecursiveDynamicUsage(*it);\n+                queuedTx.erase(it);\n+            }\n+            it = it_next;",
      "path": "src/validation.h",
      "position": null,
      "original_position": 61,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": 1315106643,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This line went away with the list + map approach so marking as resolved\r\n",
      "created_at": "2023-09-05T13:11:27Z",
      "updated_at": "2023-09-05T13:15:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315877657",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315877657"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": 288,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880225",
      "pull_request_review_id": 1610948591,
      "id": 1315880225,
      "node_id": "PRRC_kwDOABII585Obr0h",
      "diff_hunk": "@@ -233,6 +233,81 @@ struct PackageMempoolAcceptResult\n         : m_tx_results{ {wtxid, result} } {}\n };\n \n+/**\n+ * DisconnectedBlockTransactions\n+\n+ * During the reorg, it's desirable to re-add previously confirmed transactions\n+ * to the mempool, so that anything not re-confirmed in the new chain is\n+ * available to be mined. However, it's more efficient to wait until the reorg\n+ * is complete and process all still-unconfirmed transactions at that time,\n+ * since we expect most confirmed transactions to (typically) still be\n+ * confirmed in the new chain, and re-accepting to the memory pool is expensive\n+ * (and therefore better to not do in the middle of reorg-processing).\n+ * Instead, store the disconnected transactions (in order!) as we go, remove any\n+ * that are included in blocks in the new chain, and then process the remaining\n+ * still-unconfirmed transactions at the end.\n+ */\n+struct DisconnectedBlockTransactions {",
      "path": "src/validation.h",
      "position": null,
      "original_position": 18,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": 1314917018,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-09-05T13:13:26Z",
      "updated_at": "2023-09-05T13:15:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315880225",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 250,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880709",
      "pull_request_review_id": 1610948591,
      "id": 1315880709,
      "node_id": "PRRC_kwDOABII585Obr8F",
      "diff_hunk": "@@ -2726,9 +2726,9 @@ bool Chainstate::DisconnectTip(BlockValidationState& state, DisconnectedBlockTra\n         }\n         while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {\n             // Drop the earliest entry, and remove its children from the mempool.\n-            auto it = disconnectpool->queuedTx.get<insertion_order>().begin();\n-            m_mempool->removeRecursive(**it, MemPoolRemovalReason::REORG);\n-            disconnectpool->removeEntry(it);\n+            auto ptx = disconnectpool->queuedTx.front();",
      "path": "src/validation.cpp",
      "position": 39,
      "original_position": 18,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "17c2f91fcadceb698067d5edc9204e4e5b17aa8b",
      "in_reply_to_id": 1315121992,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added in the while loop condition, feels a bit more robust than crashing",
      "created_at": "2023-09-05T13:13:48Z",
      "updated_at": "2023-09-05T13:15:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315880709",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315880709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2730,
      "original_line": 2730,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315982561",
      "pull_request_review_id": 1611195190,
      "id": 1315982561,
      "node_id": "PRRC_kwDOABII585OcEzh",
      "diff_hunk": "@@ -18,6 +18,7 @@\n #include <kernel/chainparams.h>\n #include <kernel/chainstatemanager_opts.h>\n #include <kernel/cs_main.h> // IWYU pragma: export\n+#include <kernel/disconnected_transactions.h>",
      "path": "src/validation.h",
      "position": null,
      "original_position": 4,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "0409dbcc9d5394d310da50e0ca326fb132b6d1e2",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this should be included in `validation.cpp` instead.",
      "created_at": "2023-09-05T14:26:38Z",
      "updated_at": "2023-09-05T14:26:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315982561",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315982561"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315983675",
      "pull_request_review_id": 1611196988,
      "id": 1315983675,
      "node_id": "PRRC_kwDOABII585OcFE7",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+constexpr size_t BLOCK_VTX_COUNT{4000};\n+constexpr size_t BLOCK_VTX_COUNT_10PERCENT{400};\n+\n+using BlockTxns = decltype(CBlock::vtx);\n+\n+/** Reorg where 1 block is disconnected and 2 blocks are connected. */\n+struct ReorgTxns {\n+    /** Disconnected block. */\n+    BlockTxns disconnected_txns;\n+    /** First connected block. */\n+    BlockTxns connected_txns_1;\n+    /** Second connected block, new chain tip. Has no overlap with disconnected_txns. */\n+    BlockTxns connected_txns_2;\n+    /** Transactions shared between disconnected_txns and connected_txns_1. */\n+    size_t num_shared;\n+};\n+\n+static BlockTxns CreateRandomTransactions(size_t num_txns, uint32_t unique_set_num)\n+{\n+    FastRandomContext det_rand{true};\n+    // The unique_set_num trick won't work otherwise. It assumes that there's a different\n+    // unique_set_num each time we call CreateRandomTransactions and each batch is <= 4000.\n+    assert(num_txns <= BLOCK_VTX_COUNT);\n+\n+    BlockTxns txns;\n+    txns.reserve(num_txns);\n+    // Simplest spk for every tx\n+    CScript spk = CScript() << OP_TRUE;\n+    for (uint32_t i = 0; i < num_txns; ++i) {\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        // We should get a different prevout hash every time. But just to be sure, change the index\n+        // as well to ensure every tx has a different txid.\n+        tx.vin.emplace_back(CTxIn{COutPoint{det_rand.rand256(), uint32_t(i + BLOCK_VTX_COUNT * unique_set_num)}});",
      "path": "src/bench/disconnected_transactions.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "5a1233c098cb093e50ee31a77bb12aa53de545cf",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 5a1233c0:\r\n\r\nSmall idea: what about having an always increasing `lock_time` number?. It will ensure different tx ids and let you remove the `unique_set_num` as well as the fast RNG for the prevout hash which doesn't seems to be used anywhere.\r\n\r\nE.g.\r\n```c++\r\nstatic BlockTxns CreateRandomTransactions(size_t num_txns)\r\n{\r\n    static uint32_t next_locktime{0};\r\n\r\n    BlockTxns txns;\r\n    txns.reserve(num_txns);\r\n    // Simplest spk for every tx\r\n    CScript spk = CScript() << OP_TRUE;\r\n    for (uint32_t i = 0; i < num_txns; ++i) {\r\n        CMutableTransaction tx;\r\n        tx.vin.resize(1);\r\n        tx.vout.resize(1);\r\n        tx.vout.emplace_back(CTxOut{CENT, spk});\r\n        tx.nLockTime = next_locktime++;\r\n        txns.emplace_back(MakeTransactionRef(tx));\r\n    }\r\n    return txns;\r\n}\r\n```",
      "created_at": "2023-09-05T14:27:26Z",
      "updated_at": "2023-09-05T14:29:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315983675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315983675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": 41,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315985759",
      "pull_request_review_id": 1611196988,
      "id": 1315985759,
      "node_id": "PRRC_kwDOABII585OcFlf",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+constexpr size_t BLOCK_VTX_COUNT{4000};\n+constexpr size_t BLOCK_VTX_COUNT_10PERCENT{400};\n+\n+using BlockTxns = decltype(CBlock::vtx);\n+\n+/** Reorg where 1 block is disconnected and 2 blocks are connected. */\n+struct ReorgTxns {\n+    /** Disconnected block. */\n+    BlockTxns disconnected_txns;\n+    /** First connected block. */\n+    BlockTxns connected_txns_1;\n+    /** Second connected block, new chain tip. Has no overlap with disconnected_txns. */\n+    BlockTxns connected_txns_2;\n+    /** Transactions shared between disconnected_txns and connected_txns_1. */\n+    size_t num_shared;\n+};\n+\n+static BlockTxns CreateRandomTransactions(size_t num_txns, uint32_t unique_set_num)\n+{\n+    FastRandomContext det_rand{true};\n+    // The unique_set_num trick won't work otherwise. It assumes that there's a different\n+    // unique_set_num each time we call CreateRandomTransactions and each batch is <= 4000.\n+    assert(num_txns <= BLOCK_VTX_COUNT);\n+\n+    BlockTxns txns;\n+    txns.reserve(num_txns);\n+    // Simplest spk for every tx\n+    CScript spk = CScript() << OP_TRUE;\n+    for (uint32_t i = 0; i < num_txns; ++i) {\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        // We should get a different prevout hash every time. But just to be sure, change the index\n+        // as well to ensure every tx has a different txid.\n+        tx.vin.emplace_back(CTxIn{COutPoint{det_rand.rand256(), uint32_t(i + BLOCK_VTX_COUNT * unique_set_num)}});\n+        tx.vout.resize(1);\n+        tx.vout.emplace_back(CTxOut{CENT, spk});\n+        txns.emplace_back(MakeTransactionRef(tx));\n+    }\n+    return txns;\n+}\n+\n+/** Creates 2 blocks with BLOCK_VTX_COUNT transactions each. There will be num_not_shared\n+ * transactions that are different, all other transactions the exact same. This is to simulate a\n+ * reorg in which all but num_not_shared transactions are confirmed in the new chain. */\n+static ReorgTxns CreateBlocks(TestChain100Setup& testing_setup, size_t num_not_shared)",
      "path": "src/bench/disconnected_transactions.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "c19f4aabb608302ba7bb68b52a4e7592ccd5e34f",
      "original_commit_id": "5a1233c098cb093e50ee31a77bb12aa53de545cf",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In In 5a1233c0:\r\n\r\nUnused `testing_setup` arg",
      "created_at": "2023-09-05T14:28:55Z",
      "updated_at": "2023-09-05T14:29:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1315985759",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315985759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28385"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    }
  ]
}