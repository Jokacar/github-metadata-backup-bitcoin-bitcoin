{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30315",
    "id": 1930925459,
    "node_id": "PR_kwDOABII585zF5WT",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30315",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30315.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30315.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30315",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30315/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30315/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30315/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/bdc85423c60b438721773191878fd42960ad40d0",
    "number": 30315,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Stratum v2 Transport",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Based on #29346. Parent PR #29432.\r\n\r\nIntroduces `Sv2Transport::Transport` which is very similar to `V2Transport`.\r\n\r\nThis shoehorns `Sv2NetMsg` into a `CSerializedNetMsg` in `SetMessageToSend`, and into a `CNetMessage` in `GetReceivedMessage`.\r\n\r\nSee discussion in #30209.",
    "labels": [],
    "created_at": "2024-06-20T15:59:15Z",
    "updated_at": "2024-08-08T16:31:36Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "6387f744624982e08f517cb292e5ee3cce3d9ae3",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "Sjors:2024/06/sv2_transport",
      "ref": "2024/06/sv2_transport",
      "sha": "bdc85423c60b438721773191878fd42960ad40d0",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 92390696,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MjM5MDY5Ng==",
        "name": "bitcoin",
        "full_name": "Sjors/bitcoin",
        "owner": {
          "login": "Sjors",
          "id": 10217,
          "node_id": "MDQ6VXNlcjEwMjE3",
          "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Sjors",
          "html_url": "https://github.com/Sjors",
          "followers_url": "https://api.github.com/users/Sjors/followers",
          "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
          "organizations_url": "https://api.github.com/users/Sjors/orgs",
          "repos_url": "https://api.github.com/users/Sjors/repos",
          "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Sjors/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/Sjors/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Sjors/bitcoin",
        "archive_url": "https://api.github.com/repos/Sjors/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Sjors/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Sjors/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Sjors/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Sjors/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Sjors/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Sjors/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Sjors/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Sjors/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Sjors/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Sjors/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Sjors/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Sjors/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Sjors/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Sjors/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Sjors/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Sjors/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Sjors/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Sjors/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Sjors/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Sjors/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Sjors/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Sjors/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Sjors/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Sjors/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Sjors/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Sjors/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Sjors/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Sjors/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Sjors/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Sjors/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Sjors/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Sjors/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Sjors/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Sjors/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Sjors/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Sjors/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Sjors/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Sjors/bitcoin/hooks",
        "svn_url": "https://github.com/Sjors/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 6,
        "watchers_count": 6,
        "size": 244936,
        "default_branch": "sv2",
        "open_issues_count": 11,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-08T16:45:49Z",
        "created_at": "2017-05-25T10:05:54Z",
        "updated_at": "2024-07-29T23:55:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "27a770b34b8f1dbb84760f442edb3e23a0c2420b",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35975,
        "stargazers_count": 77776,
        "watchers_count": 77776,
        "size": 265221,
        "default_branch": "master",
        "open_issues_count": 657,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-08T16:50:29Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-08-08T16:54:44Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30315"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 2436,
    "deletions": 1,
    "changed_files": 13,
    "commits": 5,
    "review_comments": 4,
    "comments": 9
  },
  "events": [
    {
      "event": "commented",
      "id": 2181044150,
      "node_id": "IC_kwDOABII586CABe2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2181044150",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-20T15:59:19Z",
      "updated_at": "2024-08-07T11:43:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30315).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26697](https://github.com/bitcoin/bitcoin/pull/26697) (logging: use bitset for categories by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#issuecomment-2181044150",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30315"
    },
    {
      "event": "commented",
      "id": 2181051477,
      "node_id": "IC_kwDOABII586CADRV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2181051477",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-20T16:03:13Z",
      "updated_at": "2024-06-20T16:03:40Z",
      "author_association": "MEMBER",
      "body": "Would it make sense to add a `libbitcoin_net` library? Either at the same level as `libbitcoin_common` or on top of it. I could see how other node implementations could benefit from that, but it's also a way to limit `libbitcoin_common` in size. Afaik only `libbitcoin_node` needs networking (and `zmq`?), and a future `libbitcoin_sv2`, and maybe `libbitcoin_rpc`.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#issuecomment-2181051477",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30315"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13231508296,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMUqMtI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13231508296",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-20T16:05:29Z"
    },
    {
      "event": "labeled",
      "id": 13231509069,
      "node_id": "LE_lADOABII586M88kQzwAAAAMUqM5N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13231509069",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-20T16:05:33Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2181055856,
      "node_id": "IC_kwDOABII586CAEVw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2181055856",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-20T16:05:34Z",
      "updated_at": "2024-06-20T16:05:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/26477378291</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#issuecomment-2181055856",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30315"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13231627367,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMUqpxn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13231627367",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-20T16:15:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13241225681,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMVPRHR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13241225681",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T11:14:14Z"
    },
    {
      "event": "commented",
      "id": 2182554706,
      "node_id": "IC_kwDOABII586CFyRS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2182554706",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T11:18:24Z",
      "updated_at": "2024-06-21T11:19:15Z",
      "author_association": "MEMBER",
      "body": "It compiles and the tests run, but it's not pretty.\r\n\r\nThe conversion between `Sv2NetMsg` and `CSerializedNetMsg` / `CNetMessage` is done in https://github.com/bitcoin/bitcoin/pull/30315/commits/7d937674de425d8e2525bac9e719ac93a775ea45, which is a bit of a hack at the moment.\r\n\r\nI also haven't put much thought into `Sv2NetMsg` ever since I took over #27854, so perhaps this design can be improved as well.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#issuecomment-2182554706",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30315"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13242195353,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMVS92Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13242195353",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T12:47:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13242625290,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMVUm0K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13242625290",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T13:24:03Z"
    },
    {
      "event": "commented",
      "id": 2182768070,
      "node_id": "IC_kwDOABII586CGmXG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2182768070",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T13:34:45Z",
      "updated_at": "2024-06-21T13:34:45Z",
      "author_association": "MEMBER",
      "body": "I only had a very brief look, but my guess would be that it would be easier if `Sv2NetMsg` did not contain an `Sv2NetHeader`, and just stored type and message. The Sv2 Transport would then construct the header at submitting or sending time instead. This means `Sv2NetMsg` would be more of a dumb container for what higher-level code cares about, while the protocol details would be more abstracted away in the Transport.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#issuecomment-2182768070",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30315"
    },
    {
      "event": "unlabeled",
      "id": 13244009977,
      "node_id": "UNLE_lADOABII586M88kQzwAAAAMVZ435",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13244009977",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T15:18:18Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13244298304,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMVa_RA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13244298304",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T15:44:01Z"
    },
    {
      "event": "commented",
      "id": 2182999892,
      "node_id": "IC_kwDOABII586CHe9U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2182999892",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T15:44:59Z",
      "updated_at": "2024-06-21T15:44:59Z",
      "author_association": "MEMBER",
      "body": "@sipa done and managed to clean up `sv2_messages.h` a bit in the process.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#issuecomment-2182999892",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30315"
    },
    {
      "event": "mentioned",
      "id": 13244308952,
      "node_id": "MEE_lADOABII586M88kQzwAAAAMVbB3Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13244308952",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T15:45:01Z"
    },
    {
      "event": "subscribed",
      "id": 13244308961,
      "node_id": "SE_lADOABII586M88kQzwAAAAMVbB3h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13244308961",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T15:45:01Z"
    },
    {
      "event": "reviewed",
      "id": 2132948873,
      "node_id": "PRR_kwDOABII585_IjeJ",
      "url": null,
      "actor": null,
      "commit_id": "e108385a6e0e1a9528c15ae8b668a91163e0af44",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#pullrequestreview-2132948873",
      "submitted_at": "2024-06-21T15:47:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30315"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13244670139,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMVcaC7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13244670139",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T16:20:02Z"
    },
    {
      "event": "reviewed",
      "id": 2133107146,
      "node_id": "PRR_kwDOABII585_JKHK",
      "url": null,
      "actor": null,
      "commit_id": "2f673b5959cee168b808e23c6f5554e2f673db15",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#pullrequestreview-2133107146",
      "submitted_at": "2024-06-21T17:15:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30315"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13245769633,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMVgmeh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13245769633",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T18:14:39Z"
    },
    {
      "event": "commented",
      "id": 2183220018,
      "node_id": "IC_kwDOABII586CIUsy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2183220018",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T18:14:59Z",
      "updated_at": "2024-06-21T18:14:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/26526802432</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#issuecomment-2183220018",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30315"
    },
    {
      "event": "labeled",
      "id": 13245772613,
      "node_id": "LE_lADOABII586M88kQzwAAAAMVgnNF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13245772613",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T18:14:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13265149402,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMWqh3a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13265149402",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-24T11:50:15Z"
    },
    {
      "event": "unlabeled",
      "id": 13266204744,
      "node_id": "UNLE_lADOABII586M88kQzwAAAAMWujhI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13266204744",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-24T13:08:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13276723013,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMXWrdF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13276723013",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-25T07:42:37Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13278829434,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMXett6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13278829434",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-25T10:14:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13327272889,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMaXgu5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13327272889",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T06:43:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13333164618,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMat_JK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13333164618",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T15:14:04Z"
    },
    {
      "event": "commented",
      "id": 2197155437,
      "node_id": "IC_kwDOABII586C9e5t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2197155437",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T15:14:07Z",
      "updated_at": "2024-06-28T15:33:36Z",
      "author_association": "MEMBER",
      "body": "I dropped the refactoring commits e18887d3c45d4c0b2d414392ec33dbc36c0d8df7, cf67a72aea67b8ecf2c24200f69c68d1e7f4de4b and 912b800581ba6c21b0ed43832c6307f98e7a3af1 which move Transport and its prerequisites to `libbitcoin_common`. See https://github.com/Sjors/bitcoin/pull/47 for a more ambitious attempt to introduce a whole new `libbitcoin_net`, but that became real big and distracting real fast :-)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#issuecomment-2197155437",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30315"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13353215329,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMb6eVh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13353215329",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T15:27:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13369263987,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMc3sdz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13369263987",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-02T17:05:21Z"
    },
    {
      "event": "labeled",
      "id": 13413272264,
      "node_id": "LE_lADOABII586M88kQzwAAAAMffkrI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13413272264",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-07T05:04:57Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2212323997,
      "node_id": "IC_kwDOABII586D3WKd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2212323997",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-07T05:04:58Z",
      "updated_at": "2024-07-07T05:04:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/26955137717</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#issuecomment-2212323997",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30315"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13469680153,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMi2wIZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13469680153",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T10:32:47Z"
    },
    {
      "event": "unlabeled",
      "id": 13471021896,
      "node_id": "UNLE_lADOABII586M88kQzwAAAAMi73tI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13471021896",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T12:28:12Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13531867756,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMmj-ps",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13531867756",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-17T07:03:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13569778213,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAMo0mIl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13569778213",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-19T07:07:38Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDMzM2JlN2I0NzU5ZjRkMGFlNGM3OGFlYjc5M2M5MTE5YjY0ZWRkMTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/333be7b4759f4d0ae4c78aeb793c9119b64edd10",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/333be7b4759f4d0ae4c78aeb793c9119b64edd10",
      "tree": {
        "sha": "b913dbdbf4eb59ed73540228da015696358ce0f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b913dbdbf4eb59ed73540228da015696358ce0f9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b913dbdbf4eb59ed73540228da015696358ce0f9\nparent 27a770b34b8f1dbb84760f442edb3e23a0c2420b\nauthor Sjors Provoost <sjors@sprovoost.nl> 1701349128 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1723123303 +0200\n\nAdd sv2 log category for Stratum v2\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAma0xmcACgkQV/+b28ww\nEAnxUhAAu5OsqFts9oWXUFQm1HiSkH40z9SOe0dnKfEMTbepvIDdyjHUwt82EMeZ\nW/vliI2UPQbl8c2DwbJLgNELUxXZJHdD6ftPDZ1nMoLnx+EF4BAYQ/TbTJyUDlUi\nCDb33z7A4+hVtW5UkRWp36SSP9dmBSAbJPuC/l5Sg+yfLSyFTDmOJr09WO4Lr3uw\nLVHh+X3n20GMaKSAxYh5C+0yw0XdhLN8r2gj+KQXolvFdo82sVZ7Ysv4BeJm+e/3\nOG6EIlXfJ46qjpOXweJhmHoVWDRTBdKdOka8P8W8W3WHL3DbFWxjqq+omClmagxk\nq5RtpgdwpYc0++u0OPOMHXosJnRALW5Elx1H05+edMLbxXMz8ugihisu2+eOJ2FA\nnUNUV1jVR501o4Y3vO5+7P8nXBTdxGc8lrtWoSS+JuRqsni5aDCaMdawniXULcFR\nbzVbQcsfO+ZU8NWICrByaNDVH9LBnwmt/zXpaNfZRC4adXt0D0NlR888uckmNihu\ncVXyet6wC9vUzB+GEy7wq9D8qDyWcSXI55rAupsr67eIggq/4e4XuOOQnxGIZHg6\nMn/+Oo8ojwIHeAB+w3v2oUpkmZ7DyYpX9jjilIQkGufrxAHAB4IMEbltewGF0IWH\naT2LHh02EUjJmhN0IUrbAdj9Uwk/rn9hx+VgB20Gl1zQkE5UmSo=\n=ixeq\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27a770b34b8f1dbb84760f442edb3e23a0c2420b",
          "sha": "27a770b34b8f1dbb84760f442edb3e23a0c2420b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/27a770b34b8f1dbb84760f442edb3e23a0c2420b"
        }
      ],
      "message": "Add sv2 log category for Stratum v2",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-08-08T13:21:43Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-11-30T12:58:48Z"
      },
      "sha": "333be7b4759f4d0ae4c78aeb793c9119b64edd10"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU3Mzc0MGZkZTEwN2Y3OWVlZWU4ZTU1YzZiZWQxNTY3MTNhYmU4YTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e73740fde107f79eeee8e55c6bed156713abe8a5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e73740fde107f79eeee8e55c6bed156713abe8a5",
      "tree": {
        "sha": "ee9855bc38e47d4bacc47b7f884759e401ba4bd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee9855bc38e47d4bacc47b7f884759e401ba4bd1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ee9855bc38e47d4bacc47b7f884759e401ba4bd1\nparent 333be7b4759f4d0ae4c78aeb793c9119b64edd10\nauthor Sjors Provoost <sjors@sprovoost.nl> 1723133160 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1723133160 +0200\n\nAdd sv2 noise protocol\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAma07OoACgkQV/+b28ww\nEAmpwBAAwxMknZ0A4W/vex2U0PLkWtWpBrd+0PAPAXOZsBEEi9PDRqTq3yIVIN+H\n7hMHPzqe6Wnla2bham8AmSVl42QpQMxQ5KMm0Xrt+8zNjTpp7zjXa4Kk2d1+MH2m\nHKdNqxWegY7q+Kz6Dv7hd4qXguCi0frgrxSNV/n/Sa8e2Kb6Hr+3s83wBKQb5Cx/\nH+055HoUF/I6leKVg6gHjTuWho7boxZzPdZRlabAnnlCEy3QG57IRqManl0+vpvC\nbDP1wrbM1PuoKHUqLnnUVayxkF/BAKelQ2GQJDJW15bT4FivHYeWYK58mvpNdzBb\nL/syLyWaMTkGp7YY3JVtsOkEbcNyrsJlVV4xxI52maQdKhyNm64CWtrLRBfYGr1n\nR3tIzAjPtsgbdHlsnMhyxPO/ttT2zK4a/cQvjmGDbGZyJofYMxgtqt+f5DRFho45\n9HeSVinLu8TSPtm+ykP/+MCu1Dk/+Q4BBO1F6VW0fktl2Ehxn7kPlrcp7mgxhkBZ\n2mLQL5EGejepbjrifTFRVduRlO46OjDLjPIp2dfnLZd6qwNwcN3l+XeGOxr7a5V4\nn0L6uTmYdN7rbovweUNfUgsToy7l+4f5sewqdbp+O9S46baYgjq6J5/OFHMqf9RV\nQpX1uxU33ljlVEgy/PmPd+xsn+HguPnV4V+PqB7E43J3c+oNbB8=\n=KuD7\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/333be7b4759f4d0ae4c78aeb793c9119b64edd10",
          "sha": "333be7b4759f4d0ae4c78aeb793c9119b64edd10",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/333be7b4759f4d0ae4c78aeb793c9119b64edd10"
        }
      ],
      "message": "Add sv2 noise protocol\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-08-08T16:06:00Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-08-08T16:06:00Z"
      },
      "sha": "e73740fde107f79eeee8e55c6bed156713abe8a5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZlNzAyYzY1Y2YwYzc5ZTg1ZDYxMjBiMjBlNzU5MTMzNWY1ZjlkNzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe702c65cf0c79e85d6120b20e7591335f5f9d73",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fe702c65cf0c79e85d6120b20e7591335f5f9d73",
      "tree": {
        "sha": "0ab0138ab41ade21813914e12fa12f69eefafe23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ab0138ab41ade21813914e12fa12f69eefafe23"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0ab0138ab41ade21813914e12fa12f69eefafe23\nparent e73740fde107f79eeee8e55c6bed156713abe8a5\nauthor Sjors Provoost <sjors@sprovoost.nl> 1718889964 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1723133248 +0200\n\nAdd sv2 message CoinbaseOutputDataSize\n\nThis commit adds the simplest stratum v2 message. The remaining messages are introduced in later commits.\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAma07UEACgkQV/+b28ww\nEAmFBw//dF5BF+0TkS/6LhsZtuCAvEFkkm4RMfkdGROAfmFoZO0duwcajUv8HrEm\nuKRXbhehnJ3DRlUD/uiXcyi+LvYABrZmCpDqc5QopgPkryQB7NNa8VtoW9M4Ga4m\nIcgrXL0mlI9eQq8Ght1yikXf5cxP32kx8rH8zAQwhfn0Nf5We4hnAy9Kf6tSs+hF\nKqXAi9m7ztXrIG8c8hiK1Vjd/9VxMo1sCLgEOTL5klXfGabJ0xLK2chZNbK+/Zz4\nKZb88qJdX6k35VI/6oXZUUo+d0dT+iFrepYHbo3wcd8PwYuwrCCYi879aVtnV8il\nc7Bb3zwC85tp7How8CUaBVOFJzJ3c6m2q5MGmesq/jOjL/CjoMpjjK6Q1S0ax3Z4\niO8YI/ucmrvU0jwZiirDwaJAqzK1M/yh5MoPJNd0gZqMSMjHCgI8ZurGr+uGfWTE\n+5dvhqutJtRGd48uEluuGXXurMGOe4SJRW0VoEP6hB2MB53Je/yp9sEo+yDddyz+\nIk2TKcbQqphQoVo779AG8CjwFCHFLmz4NWXFcJubkFNAiUBfuNOzyZ008iA2+rye\n3GLg4hqY8J73DEuY480VO92oI7fXQakCnxn1uGLJhw3w9t6gBK2VmI7okVrj8t4x\nmGbfoAvWqT1xOO4UiBCjFSY/LlgMvOBP4MCeNp4O/ZK/EF+jQtA=\n=LXaR\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e73740fde107f79eeee8e55c6bed156713abe8a5",
          "sha": "e73740fde107f79eeee8e55c6bed156713abe8a5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e73740fde107f79eeee8e55c6bed156713abe8a5"
        }
      ],
      "message": "Add sv2 message CoinbaseOutputDataSize\n\nThis commit adds the simplest stratum v2 message. The remaining messages are introduced in later commits.\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-08-08T16:07:28Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-06-20T13:26:04Z"
      },
      "sha": "fe702c65cf0c79e85d6120b20e7591335f5f9d73"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU2MzcwYzUwZTllOWYzNzZiZjI2ODRjMjVkMWUyNzBhMThhNGUwOTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6370c50e9e9f376bf2684c25d1e270a18a4e091",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e6370c50e9e9f376bf2684c25d1e270a18a4e091",
      "tree": {
        "sha": "6bba71380a1247c4eb53020bea0e469374826a35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6bba71380a1247c4eb53020bea0e469374826a35"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6bba71380a1247c4eb53020bea0e469374826a35\nparent fe702c65cf0c79e85d6120b20e7591335f5f9d73\nauthor Sjors Provoost <sjors@sprovoost.nl> 1718963782 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1723133249 +0200\n\nConvert between Sv2NetMsg  and CSerializedNetMsg\n\nThis allows us to subclass Transport.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAma07UEACgkQV/+b28ww\nEAkpohAAoFFfGzlbH5QjnVVG/z1BjfHI8C9D4sQmsyFlAWYpUD4fq1skPWp3YQw3\nmiOx778rTO+FBR/lU/y8O4zzrXqGXjRychy2hd8FbkCofQkbUlsoj4Ax4Ag5YsMu\nW5sg6fYRzJl8suCcK16DwQ/9+O8dFm47rxnGVaiTdK5k6G82tK16NNFFEy6hlN17\noIA9kN05XWisq+LM3ohyztdwaaMeFSjeFLFaXaaeoOalumSlusT8AQFDyhCVscEi\nLMdkpAT0daaihH9MRT4exrigKfdojEVcP5eYC+NaPQ00O86l1ZV/n70hUcXusGBc\nuH+tyUVyZ5xrJgrRd5S5KIokkTQy0e0E0FPq2446Y3+0YRRvgJh0ml+ZTxnROc0F\nuPfVQ1wXCvItn5aO8UN1flEkjScup1k8yps/HezozTphOE/E3kiQxdQpnxJ+JB9H\nl77V49JS5AZFTr9jllk6RBXF6oGcVCl0V4cc8bHsz05MkCRSySq/99waojIMl5V+\n6ERNRx34sg6kpEa775lqjZ80ISs9o1cFSw68xlmvj4wT/hvBLTcRDtgJeQlt01e8\nmw1ScwUZqdZWdFYGdcvnWRM5KbvzsTzVb6G6TMJEfYlS3Ik6zaSPQ4boQW3ziKHk\npQtvEkcF0Xv9D0+2KFUIreL+rZ6qff/qCUde3XYGwbXQe3gjN/I=\n=YVjy\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe702c65cf0c79e85d6120b20e7591335f5f9d73",
          "sha": "fe702c65cf0c79e85d6120b20e7591335f5f9d73",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fe702c65cf0c79e85d6120b20e7591335f5f9d73"
        }
      ],
      "message": "Convert between Sv2NetMsg  and CSerializedNetMsg\n\nThis allows us to subclass Transport.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-08-08T16:07:29Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-06-21T09:56:22Z"
      },
      "sha": "e6370c50e9e9f376bf2684c25d1e270a18a4e091"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJkYzg1NDIzYzYwYjQzODcyMTc3MzE5MTg3OGZkNDI5NjBhZDQwZDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bdc85423c60b438721773191878fd42960ad40d0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bdc85423c60b438721773191878fd42960ad40d0",
      "tree": {
        "sha": "48a915d766d9eaf2dc095e8bff0f1065b3859178",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48a915d766d9eaf2dc095e8bff0f1065b3859178"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 48a915d766d9eaf2dc095e8bff0f1065b3859178\nparent e6370c50e9e9f376bf2684c25d1e270a18a4e091\nauthor Sjors Provoost <sjors@sprovoost.nl> 1718989960 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1723133249 +0200\n\nIntroduce Sv2Transport\n\nImplemented starting from a copy of V2Transport and the V2TransportTester, modifying it to fit Stratum v2 and Noise Protocol requirements.\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\nCo-Authored-By: Fi3\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAma07UEACgkQV/+b28ww\nEAkSnQ//VAncCnz0jyiTaTddjxnMsFnZ3uqzZCPUcr/5svEM/50xFEhkZrN9VYKo\nsuxjP3pqxiuP+NlDGZ/tZpmfBNwk7+zIA0g9L+7yGP0V9VkB/sv2Llpobq81j4Nu\n6n24mp2w5mm7F7S7gfJHHg99rrksj6iOzqlXu1ZTN1IjWuwxUhaC68MCBoi0T6X2\nDHT6M9XmrkwjfxSMeG8v2KsDIXAdcFwlcotFUInHhz1DC1x3x62eUOmY5M6A4kSQ\nlk+NCtxBc2LA5Bo2QRERnAt21pgoN/p2+Uf9qg9+5Ur9LBN7uuZah9US23s0rFoZ\nTq19kLfxFwX+8FJzZYyjyhp0Uhr2Ie/on/BA9IaUUqNb+ST8bVGLFzCjaX1BMjAH\nWoQNyaAMfe/OKWsAMk1+LXYRyW+6zhCE5v50VJweVmoc1I7MjppjOR65ImjV7VtX\nrzsOCyTf1wuUm7QSUUP6PWAOEPqaSDG9a9/dEaC4DxbtFAp3F2CTJrutdzdkHFmJ\nfWVOz8k3BjWP7m/U/UnVEKn4DpOYCICGxcjr2960h1ovv8TuTpY4PjfhF3gGbXM2\ng1AM3JNfluE17iNopbUXCpF9iAiQgCcLES44/pEnWKOZAkGma+W8yeGwM1qkn+Cg\nP5yKWTSyoDpCNFhmSKt3dT9XAom6orTVrYocbaS20os4nyHLBis=\n=XbBO\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6370c50e9e9f376bf2684c25d1e270a18a4e091",
          "sha": "e6370c50e9e9f376bf2684c25d1e270a18a4e091",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e6370c50e9e9f376bf2684c25d1e270a18a4e091"
        }
      ],
      "message": "Introduce Sv2Transport\n\nImplemented starting from a copy of V2Transport and the V2TransportTester, modifying it to fit Stratum v2 and Noise Protocol requirements.\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\nCo-Authored-By: Fi3",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-08-08T16:07:29Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-06-21T17:12:40Z"
      },
      "sha": "bdc85423c60b438721773191878fd42960ad40d0"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13809574799,
      "node_id": "HRFPE_lADOABII586M88kQzwAAAAM3HWOP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13809574799",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T16:31:36Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649141459",
      "pull_request_review_id": 2132948873,
      "id": 1649141459,
      "node_id": "PRRC_kwDOABII585iS-bT",
      "diff_hunk": "@@ -0,0 +1,221 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_MESSAGES_H\n+#define BITCOIN_COMMON_SV2_MESSAGES_H\n+\n+#include <common/net_message.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <string>\n+#include <util/check.h>\n+\n+namespace node {",
      "path": "src/common/sv2_messages.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "bdc85423c60b438721773191878fd42960ad40d0",
      "original_commit_id": "e108385a6e0e1a9528c15ae8b668a91163e0af44",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "639be6df22800d2e2a170c1af74d51951597834c: this `namespace` is outdated, since this isn't part of the `node` anymore.",
      "created_at": "2024-06-21T15:47:21Z",
      "updated_at": "2024-06-21T15:47:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#discussion_r1649141459",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649141459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30315"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649237537",
      "pull_request_review_id": 2133107146,
      "id": 1649237537,
      "node_id": "PRRC_kwDOABII585iTV4h",
      "diff_hunk": "@@ -0,0 +1,388 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/sv2_noise.h>\n+#include <common/sv2_transport.h>\n+#include <logging.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+#include <node/timeoffsets.h>\n+#include <util/bitdeque.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <algorithm>\n+#include <ios>\n+#include <memory>\n+#include <optional>\n+#include <string>\n+\n+using namespace std::literals;\n+using node::Sv2NetMsg;\n+using node::Sv2CoinbaseOutputDataSizeMsg;\n+using node::Sv2MsgType;\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_transport_tests, RegTestingSetup)\n+\n+namespace {\n+\n+/** A class for scenario-based tests of Sv2Transport\n+ *\n+ * Each Sv2TransportTester encapsulates a Sv2Transport (the one being tested),\n+ * and can be told to interact with it. To do so, it also encapsulates a Sv2Cipher\n+ * to act as the other side. A second Sv2Transport is not used, as doing so would\n+ * not permit scenarios that involve sending invalid data.\n+ */\n+class Sv2TransportTester\n+{\n+    std::unique_ptr<Sv2Transport> m_transport; //!< Sv2Transport being tested\n+    std::unique_ptr<Sv2Cipher> m_peer_cipher;  //!< Cipher to help with the other side\n+    bool m_test_initiator;    //!< Whether m_transport is the initiator (true) or responder (false)\n+\n+    std::vector<uint8_t> m_to_send;  //!< Bytes we have queued up to send to m_transport->\n+    std::vector<uint8_t> m_received; //!< Bytes we have received from m_transport->\n+    std::deque<Sv2NetMsg> m_msg_to_send; //!< Messages to be sent *by* m_transport to us.\n+\n+public:\n+    /** Construct a tester object. test_initiator: whether the tested transport is initiator. */\n+\n+    explicit Sv2TransportTester(bool test_initiator) : m_test_initiator(test_initiator)\n+    {\n+        auto initiator_static_key{GenerateRandomKey()};\n+        auto responder_static_key{GenerateRandomKey()};\n+        auto responder_authority_key{GenerateRandomKey()};\n+\n+        // Create certificates\n+        auto epoch_now = std::chrono::system_clock::now().time_since_epoch();\n+        uint16_t version = 0;\n+        uint32_t valid_from = static_cast<uint32_t>(std::chrono::duration_cast<std::chrono::seconds>(epoch_now).count());\n+        uint32_t valid_to =  std::numeric_limits<unsigned int>::max();\n+\n+        auto responder_certificate = Sv2SignatureNoiseMessage(version, valid_from, valid_to,\n+                                    XOnlyPubKey(responder_static_key.GetPubKey()), responder_authority_key);\n+\n+        if (test_initiator) {\n+            m_transport = std::make_unique<Sv2Transport>(initiator_static_key, XOnlyPubKey(responder_authority_key.GetPubKey()));\n+            m_peer_cipher = std::make_unique<Sv2Cipher>(std::move(responder_static_key), std::move(responder_certificate));\n+        } else {\n+            m_transport = std::make_unique<Sv2Transport>(responder_static_key, responder_certificate);\n+            m_peer_cipher = std::make_unique<Sv2Cipher>(std::move(initiator_static_key), XOnlyPubKey(responder_authority_key.GetPubKey()));\n+        }\n+    }\n+\n+    /** Data type returned by Interact:\n+     *\n+     * - std::nullopt: transport error occurred\n+     * - otherwise: a vector of\n+     *   - std::nullopt: invalid message received\n+     *   - otherwise: a Sv2NetMsg retrieved\n+     */\n+    using InteractResult = std::optional<std::vector<std::optional<Sv2NetMsg>>>;\n+\n+    void LogProgress(bool should_progress, bool progress, bool pretend_no_progress) {\n+        if (!should_progress) {\n+            BOOST_TEST_MESSAGE(\"[Interact] !should_progress\");\n+        } else if  (!progress) {\n+            BOOST_TEST_MESSAGE(\"[Interact] should_progress && !progress\");\n+        } else if (pretend_no_progress) {\n+            BOOST_TEST_MESSAGE(\"[Interact] pretend !progress\");\n+        }\n+    }\n+\n+    /** Send/receive scheduled/available bytes and messages.\n+     *\n+     * This is the only function that interacts with the transport being tested; everything else is\n+     * scheduling things done by Interact(), or processing things learned by it.\n+     */\n+    InteractResult Interact()\n+    {\n+        std::vector<std::optional<Sv2NetMsg>> ret;\n+        while (true) {\n+            bool progress{false};\n+            // Send bytes from m_to_send to the transport.\n+            if (!m_to_send.empty()) {\n+                size_t n_bytes_to_send = 1 + InsecureRandRange(m_to_send.size());\n+                BOOST_TEST_MESSAGE(strprintf(\"[Interact] send %d of %d bytes\", n_bytes_to_send, m_to_send.size()));\n+                Span<const uint8_t> to_send = Span{m_to_send}.first(n_bytes_to_send);\n+                size_t old_len = to_send.size();\n+                if (!m_transport->ReceivedBytes(to_send)) {\n+                    BOOST_TEST_MESSAGE(\"[Interact] transport error\");\n+                    return std::nullopt;\n+                }\n+                if (old_len != to_send.size()) {\n+                    progress = true;\n+                    m_to_send.erase(m_to_send.begin(), m_to_send.begin() + (old_len - to_send.size()));\n+                }\n+            }\n+            // Retrieve messages received by the transport.\n+            bool should_progress = m_transport->ReceivedMessageComplete();\n+            bool pretend_no_progress = InsecureRandBool();\n+            LogProgress(should_progress, progress, pretend_no_progress);\n+            if (should_progress && (!progress || pretend_no_progress)) {\n+                bool dummy_reject_message = false;\n+                CNetMessage net_msg = m_transport->GetReceivedMessage(std::chrono::microseconds(0), dummy_reject_message);\n+                Sv2NetMsg msg(std::move(net_msg));\n+                ret.emplace_back(std::move(msg));\n+                progress = true;\n+            }\n+            // Enqueue a message to be sent by the transport to us.\n+            should_progress = !m_msg_to_send.empty();\n+            pretend_no_progress = InsecureRandBool();\n+            LogProgress(should_progress, progress, pretend_no_progress);\n+            if (should_progress && (!progress || pretend_no_progress)) {\n+                BOOST_TEST_MESSAGE(\"Shoehorn into CSerializedNetMsg\");\n+                CSerializedNetMsg msg{m_msg_to_send.front()};\n+                BOOST_TEST_MESSAGE(\"Call SetMessageToSend\");\n+                if (m_transport->SetMessageToSend(msg)) {\n+                    BOOST_TEST_MESSAGE(\"Finished SetMessageToSend\");\n+                    m_msg_to_send.pop_front();\n+                    progress = true;\n+                }\n+            }\n+            // Receive bytes from the transport.\n+            const auto& [recv_bytes, _more, _m_type] = m_transport->GetBytesToSend(!m_msg_to_send.empty());\n+            should_progress = !recv_bytes.empty();\n+            pretend_no_progress = InsecureRandBool();\n+            LogProgress(should_progress, progress, pretend_no_progress);\n+            if (should_progress && (!progress || pretend_no_progress)) {\n+                size_t to_receive = 1 + InsecureRandRange(recv_bytes.size());\n+                BOOST_TEST_MESSAGE(strprintf(\"[Interact] receive %d of %d bytes\", to_receive, recv_bytes.size()));\n+                m_received.insert(m_received.end(), recv_bytes.begin(), recv_bytes.begin() + to_receive);\n+                progress = true;\n+                m_transport->MarkBytesSent(to_receive);\n+            }\n+            if (!progress) break;\n+        }\n+        return ret;\n+    }\n+\n+    /** Schedule bytes to be sent to the transport. */\n+    void Send(Span<const uint8_t> data)\n+    {\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Trace, \"Send: %s\\n\", HexStr(data));\n+        m_to_send.insert(m_to_send.end(), data.begin(), data.end());\n+    }\n+\n+    /** Schedule bytes to be sent to the transport. */\n+    void Send(Span<const std::byte> data) { Send(MakeUCharSpan(data)); }\n+\n+    /** Schedule a message to be sent to us by the transport. */\n+    void AddMessage(Sv2NetMsg msg)\n+    {\n+        m_msg_to_send.push_back(std::move(msg));\n+    }\n+\n+    /**\n+     * If we are the initiator, the send buffer should contain our ephemeral public\n+     * key. Pass this to the peer cipher and clear the buffer.\n+     *\n+     * If we are the responder, put the peer ephemeral public key on our receive buffer.\n+     */\n+    void ProcessHandshake1() {\n+        if (m_test_initiator) {\n+            BOOST_REQUIRE(m_received.size() == Sv2HandshakeState::ELLSWIFT_PUB_KEY_SIZE);\n+            m_peer_cipher->GetHandshakeState().ReadMsgEphemeralPK(MakeWritableByteSpan(m_received));\n+            m_received.clear();\n+        } else {\n+            BOOST_REQUIRE(m_to_send.empty());\n+            m_to_send.resize(Sv2HandshakeState::ELLSWIFT_PUB_KEY_SIZE);\n+            m_peer_cipher->GetHandshakeState().WriteMsgEphemeralPK(MakeWritableByteSpan(m_to_send));\n+        }\n+\n+    }\n+\n+    /** Expect key to have been received from transport and process it.\n+     *\n+     * Many other Sv2TransportTester functions cannot be called until after\n+     * ProcessHandshake2() has been called, as no encryption keys are set up before that point.\n+     */\n+    void ProcessHandshake2()\n+    {\n+        if (m_test_initiator) {\n+            BOOST_REQUIRE(m_to_send.empty());\n+\n+            // Have the peer cypher write the second part of the handshake into our receive buffer\n+            m_to_send.resize(Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+            m_peer_cipher->GetHandshakeState().WriteMsgES(MakeWritableByteSpan(m_to_send));\n+\n+            // At this point the peer is done with the handshake:\n+            m_peer_cipher->FinishHandshake();\n+        } else {\n+            BOOST_REQUIRE(m_received.size() == Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+            BOOST_REQUIRE(m_peer_cipher->GetHandshakeState().ReadMsgES(MakeWritableByteSpan(m_received)));\n+            m_received.clear();\n+\n+            m_peer_cipher->FinishHandshake();\n+        }\n+    }\n+\n+    /** Schedule an encrypted packet with specified content to be sent to transport\n+     *  (only after ReceiveKey). */\n+    void SendPacket(Sv2NetMsg msg)\n+    {\n+        // TODO: randomly break stuff\n+\n+        std::vector<std::byte> ciphertext;\n+        const size_t encrypted_payload_size = Sv2Cipher::EncryptedMessageSize(msg.size());\n+        ciphertext.resize(SV2_HEADER_ENCRYPTED_SIZE + encrypted_payload_size);\n+        Span<std::byte> buffer_span{MakeWritableByteSpan(ciphertext)};\n+\n+        // Header\n+        DataStream ss_header_plain{};\n+        ss_header_plain << Sv2NetHeader(msg);\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Trace, \"Header: %s\\n\", HexStr(ss_header_plain));\n+        Span<std::byte> header_encrypted{buffer_span.subspan(0, SV2_HEADER_ENCRYPTED_SIZE)};\n+        BOOST_REQUIRE(m_peer_cipher->EncryptMessage(ss_header_plain, header_encrypted));\n+\n+        // Payload\n+        Span<const std::byte> payload_plain = MakeByteSpan(msg.data());\n+        // TODO: truncate very long messages, about 100 bytes at the start and end\n+        //       is probably enough for most debugging.\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Trace, \"Payload: %s\\n\", HexStr(payload_plain));",
      "path": "src/test/sv2_transport_tests.cpp",
      "position": 247,
      "original_position": 247,
      "commit_id": "bdc85423c60b438721773191878fd42960ad40d0",
      "original_commit_id": "2f673b5959cee168b808e23c6f5554e2f673db15",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This trips up the address sanitizer: \r\nhttps://github.com/bitcoin/bitcoin/actions/runs/9616699499/job/26526819621?pr=30315#step:6:4956",
      "created_at": "2024-06-21T17:15:19Z",
      "updated_at": "2024-06-21T17:15:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#discussion_r1649237537",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649237537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30315"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 247,
      "original_line": 247,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649241912",
      "pull_request_review_id": 2133114380,
      "id": 1649241912,
      "node_id": "PRRC_kwDOABII585iTW84",
      "diff_hunk": "@@ -0,0 +1,388 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/sv2_noise.h>\n+#include <common/sv2_transport.h>\n+#include <logging.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+#include <node/timeoffsets.h>\n+#include <util/bitdeque.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <algorithm>\n+#include <ios>\n+#include <memory>\n+#include <optional>\n+#include <string>\n+\n+using namespace std::literals;\n+using node::Sv2NetMsg;\n+using node::Sv2CoinbaseOutputDataSizeMsg;\n+using node::Sv2MsgType;\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_transport_tests, RegTestingSetup)\n+\n+namespace {\n+\n+/** A class for scenario-based tests of Sv2Transport\n+ *\n+ * Each Sv2TransportTester encapsulates a Sv2Transport (the one being tested),\n+ * and can be told to interact with it. To do so, it also encapsulates a Sv2Cipher\n+ * to act as the other side. A second Sv2Transport is not used, as doing so would\n+ * not permit scenarios that involve sending invalid data.\n+ */\n+class Sv2TransportTester\n+{\n+    std::unique_ptr<Sv2Transport> m_transport; //!< Sv2Transport being tested\n+    std::unique_ptr<Sv2Cipher> m_peer_cipher;  //!< Cipher to help with the other side\n+    bool m_test_initiator;    //!< Whether m_transport is the initiator (true) or responder (false)\n+\n+    std::vector<uint8_t> m_to_send;  //!< Bytes we have queued up to send to m_transport->\n+    std::vector<uint8_t> m_received; //!< Bytes we have received from m_transport->\n+    std::deque<Sv2NetMsg> m_msg_to_send; //!< Messages to be sent *by* m_transport to us.\n+\n+public:\n+    /** Construct a tester object. test_initiator: whether the tested transport is initiator. */\n+\n+    explicit Sv2TransportTester(bool test_initiator) : m_test_initiator(test_initiator)\n+    {\n+        auto initiator_static_key{GenerateRandomKey()};\n+        auto responder_static_key{GenerateRandomKey()};\n+        auto responder_authority_key{GenerateRandomKey()};\n+\n+        // Create certificates\n+        auto epoch_now = std::chrono::system_clock::now().time_since_epoch();\n+        uint16_t version = 0;\n+        uint32_t valid_from = static_cast<uint32_t>(std::chrono::duration_cast<std::chrono::seconds>(epoch_now).count());\n+        uint32_t valid_to =  std::numeric_limits<unsigned int>::max();\n+\n+        auto responder_certificate = Sv2SignatureNoiseMessage(version, valid_from, valid_to,\n+                                    XOnlyPubKey(responder_static_key.GetPubKey()), responder_authority_key);\n+\n+        if (test_initiator) {\n+            m_transport = std::make_unique<Sv2Transport>(initiator_static_key, XOnlyPubKey(responder_authority_key.GetPubKey()));\n+            m_peer_cipher = std::make_unique<Sv2Cipher>(std::move(responder_static_key), std::move(responder_certificate));\n+        } else {\n+            m_transport = std::make_unique<Sv2Transport>(responder_static_key, responder_certificate);\n+            m_peer_cipher = std::make_unique<Sv2Cipher>(std::move(initiator_static_key), XOnlyPubKey(responder_authority_key.GetPubKey()));\n+        }\n+    }\n+\n+    /** Data type returned by Interact:\n+     *\n+     * - std::nullopt: transport error occurred\n+     * - otherwise: a vector of\n+     *   - std::nullopt: invalid message received\n+     *   - otherwise: a Sv2NetMsg retrieved\n+     */\n+    using InteractResult = std::optional<std::vector<std::optional<Sv2NetMsg>>>;\n+\n+    void LogProgress(bool should_progress, bool progress, bool pretend_no_progress) {\n+        if (!should_progress) {\n+            BOOST_TEST_MESSAGE(\"[Interact] !should_progress\");\n+        } else if  (!progress) {\n+            BOOST_TEST_MESSAGE(\"[Interact] should_progress && !progress\");\n+        } else if (pretend_no_progress) {\n+            BOOST_TEST_MESSAGE(\"[Interact] pretend !progress\");\n+        }\n+    }\n+\n+    /** Send/receive scheduled/available bytes and messages.\n+     *\n+     * This is the only function that interacts with the transport being tested; everything else is\n+     * scheduling things done by Interact(), or processing things learned by it.\n+     */\n+    InteractResult Interact()\n+    {\n+        std::vector<std::optional<Sv2NetMsg>> ret;\n+        while (true) {\n+            bool progress{false};\n+            // Send bytes from m_to_send to the transport.\n+            if (!m_to_send.empty()) {\n+                size_t n_bytes_to_send = 1 + InsecureRandRange(m_to_send.size());\n+                BOOST_TEST_MESSAGE(strprintf(\"[Interact] send %d of %d bytes\", n_bytes_to_send, m_to_send.size()));\n+                Span<const uint8_t> to_send = Span{m_to_send}.first(n_bytes_to_send);\n+                size_t old_len = to_send.size();\n+                if (!m_transport->ReceivedBytes(to_send)) {\n+                    BOOST_TEST_MESSAGE(\"[Interact] transport error\");\n+                    return std::nullopt;\n+                }\n+                if (old_len != to_send.size()) {\n+                    progress = true;\n+                    m_to_send.erase(m_to_send.begin(), m_to_send.begin() + (old_len - to_send.size()));\n+                }\n+            }\n+            // Retrieve messages received by the transport.\n+            bool should_progress = m_transport->ReceivedMessageComplete();\n+            bool pretend_no_progress = InsecureRandBool();\n+            LogProgress(should_progress, progress, pretend_no_progress);\n+            if (should_progress && (!progress || pretend_no_progress)) {\n+                bool dummy_reject_message = false;\n+                CNetMessage net_msg = m_transport->GetReceivedMessage(std::chrono::microseconds(0), dummy_reject_message);\n+                Sv2NetMsg msg(std::move(net_msg));\n+                ret.emplace_back(std::move(msg));\n+                progress = true;\n+            }\n+            // Enqueue a message to be sent by the transport to us.\n+            should_progress = !m_msg_to_send.empty();\n+            pretend_no_progress = InsecureRandBool();\n+            LogProgress(should_progress, progress, pretend_no_progress);\n+            if (should_progress && (!progress || pretend_no_progress)) {\n+                BOOST_TEST_MESSAGE(\"Shoehorn into CSerializedNetMsg\");\n+                CSerializedNetMsg msg{m_msg_to_send.front()};\n+                BOOST_TEST_MESSAGE(\"Call SetMessageToSend\");\n+                if (m_transport->SetMessageToSend(msg)) {\n+                    BOOST_TEST_MESSAGE(\"Finished SetMessageToSend\");\n+                    m_msg_to_send.pop_front();\n+                    progress = true;\n+                }\n+            }\n+            // Receive bytes from the transport.\n+            const auto& [recv_bytes, _more, _m_type] = m_transport->GetBytesToSend(!m_msg_to_send.empty());\n+            should_progress = !recv_bytes.empty();\n+            pretend_no_progress = InsecureRandBool();\n+            LogProgress(should_progress, progress, pretend_no_progress);\n+            if (should_progress && (!progress || pretend_no_progress)) {\n+                size_t to_receive = 1 + InsecureRandRange(recv_bytes.size());\n+                BOOST_TEST_MESSAGE(strprintf(\"[Interact] receive %d of %d bytes\", to_receive, recv_bytes.size()));\n+                m_received.insert(m_received.end(), recv_bytes.begin(), recv_bytes.begin() + to_receive);\n+                progress = true;\n+                m_transport->MarkBytesSent(to_receive);\n+            }\n+            if (!progress) break;\n+        }\n+        return ret;\n+    }\n+\n+    /** Schedule bytes to be sent to the transport. */\n+    void Send(Span<const uint8_t> data)\n+    {\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Trace, \"Send: %s\\n\", HexStr(data));\n+        m_to_send.insert(m_to_send.end(), data.begin(), data.end());\n+    }\n+\n+    /** Schedule bytes to be sent to the transport. */\n+    void Send(Span<const std::byte> data) { Send(MakeUCharSpan(data)); }\n+\n+    /** Schedule a message to be sent to us by the transport. */\n+    void AddMessage(Sv2NetMsg msg)\n+    {\n+        m_msg_to_send.push_back(std::move(msg));\n+    }\n+\n+    /**\n+     * If we are the initiator, the send buffer should contain our ephemeral public\n+     * key. Pass this to the peer cipher and clear the buffer.\n+     *\n+     * If we are the responder, put the peer ephemeral public key on our receive buffer.\n+     */\n+    void ProcessHandshake1() {\n+        if (m_test_initiator) {\n+            BOOST_REQUIRE(m_received.size() == Sv2HandshakeState::ELLSWIFT_PUB_KEY_SIZE);\n+            m_peer_cipher->GetHandshakeState().ReadMsgEphemeralPK(MakeWritableByteSpan(m_received));\n+            m_received.clear();\n+        } else {\n+            BOOST_REQUIRE(m_to_send.empty());\n+            m_to_send.resize(Sv2HandshakeState::ELLSWIFT_PUB_KEY_SIZE);\n+            m_peer_cipher->GetHandshakeState().WriteMsgEphemeralPK(MakeWritableByteSpan(m_to_send));\n+        }\n+\n+    }\n+\n+    /** Expect key to have been received from transport and process it.\n+     *\n+     * Many other Sv2TransportTester functions cannot be called until after\n+     * ProcessHandshake2() has been called, as no encryption keys are set up before that point.\n+     */\n+    void ProcessHandshake2()\n+    {\n+        if (m_test_initiator) {\n+            BOOST_REQUIRE(m_to_send.empty());\n+\n+            // Have the peer cypher write the second part of the handshake into our receive buffer\n+            m_to_send.resize(Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+            m_peer_cipher->GetHandshakeState().WriteMsgES(MakeWritableByteSpan(m_to_send));\n+\n+            // At this point the peer is done with the handshake:\n+            m_peer_cipher->FinishHandshake();\n+        } else {\n+            BOOST_REQUIRE(m_received.size() == Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+            BOOST_REQUIRE(m_peer_cipher->GetHandshakeState().ReadMsgES(MakeWritableByteSpan(m_received)));\n+            m_received.clear();\n+\n+            m_peer_cipher->FinishHandshake();\n+        }\n+    }\n+\n+    /** Schedule an encrypted packet with specified content to be sent to transport\n+     *  (only after ReceiveKey). */\n+    void SendPacket(Sv2NetMsg msg)\n+    {\n+        // TODO: randomly break stuff\n+\n+        std::vector<std::byte> ciphertext;\n+        const size_t encrypted_payload_size = Sv2Cipher::EncryptedMessageSize(msg.size());\n+        ciphertext.resize(SV2_HEADER_ENCRYPTED_SIZE + encrypted_payload_size);\n+        Span<std::byte> buffer_span{MakeWritableByteSpan(ciphertext)};\n+\n+        // Header\n+        DataStream ss_header_plain{};\n+        ss_header_plain << Sv2NetHeader(msg);\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Trace, \"Header: %s\\n\", HexStr(ss_header_plain));\n+        Span<std::byte> header_encrypted{buffer_span.subspan(0, SV2_HEADER_ENCRYPTED_SIZE)};\n+        BOOST_REQUIRE(m_peer_cipher->EncryptMessage(ss_header_plain, header_encrypted));\n+\n+        // Payload\n+        Span<const std::byte> payload_plain = MakeByteSpan(msg.data());\n+        // TODO: truncate very long messages, about 100 bytes at the start and end\n+        //       is probably enough for most debugging.\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Trace, \"Payload: %s\\n\", HexStr(payload_plain));",
      "path": "src/test/sv2_transport_tests.cpp",
      "position": 247,
      "original_position": 247,
      "commit_id": "bdc85423c60b438721773191878fd42960ad40d0",
      "original_commit_id": "2f673b5959cee168b808e23c6f5554e2f673db15",
      "in_reply_to_id": 1649237537,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Pretty sure you mean `MakeByteSpan(msg)`, not `MakeByteSpan(msg.data())`.",
      "created_at": "2024-06-21T17:20:20Z",
      "updated_at": "2024-06-21T17:20:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#discussion_r1649241912",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649241912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30315"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 247,
      "original_line": 247,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649293172",
      "pull_request_review_id": 2133197114,
      "id": 1649293172,
      "node_id": "PRRC_kwDOABII585iTjd0",
      "diff_hunk": "@@ -0,0 +1,388 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <common/sv2_noise.h>\n+#include <common/sv2_transport.h>\n+#include <logging.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <test/util/random.h>\n+#include <test/util/setup_common.h>\n+#include <node/timeoffsets.h>\n+#include <util/bitdeque.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <algorithm>\n+#include <ios>\n+#include <memory>\n+#include <optional>\n+#include <string>\n+\n+using namespace std::literals;\n+using node::Sv2NetMsg;\n+using node::Sv2CoinbaseOutputDataSizeMsg;\n+using node::Sv2MsgType;\n+\n+BOOST_FIXTURE_TEST_SUITE(sv2_transport_tests, RegTestingSetup)\n+\n+namespace {\n+\n+/** A class for scenario-based tests of Sv2Transport\n+ *\n+ * Each Sv2TransportTester encapsulates a Sv2Transport (the one being tested),\n+ * and can be told to interact with it. To do so, it also encapsulates a Sv2Cipher\n+ * to act as the other side. A second Sv2Transport is not used, as doing so would\n+ * not permit scenarios that involve sending invalid data.\n+ */\n+class Sv2TransportTester\n+{\n+    std::unique_ptr<Sv2Transport> m_transport; //!< Sv2Transport being tested\n+    std::unique_ptr<Sv2Cipher> m_peer_cipher;  //!< Cipher to help with the other side\n+    bool m_test_initiator;    //!< Whether m_transport is the initiator (true) or responder (false)\n+\n+    std::vector<uint8_t> m_to_send;  //!< Bytes we have queued up to send to m_transport->\n+    std::vector<uint8_t> m_received; //!< Bytes we have received from m_transport->\n+    std::deque<Sv2NetMsg> m_msg_to_send; //!< Messages to be sent *by* m_transport to us.\n+\n+public:\n+    /** Construct a tester object. test_initiator: whether the tested transport is initiator. */\n+\n+    explicit Sv2TransportTester(bool test_initiator) : m_test_initiator(test_initiator)\n+    {\n+        auto initiator_static_key{GenerateRandomKey()};\n+        auto responder_static_key{GenerateRandomKey()};\n+        auto responder_authority_key{GenerateRandomKey()};\n+\n+        // Create certificates\n+        auto epoch_now = std::chrono::system_clock::now().time_since_epoch();\n+        uint16_t version = 0;\n+        uint32_t valid_from = static_cast<uint32_t>(std::chrono::duration_cast<std::chrono::seconds>(epoch_now).count());\n+        uint32_t valid_to =  std::numeric_limits<unsigned int>::max();\n+\n+        auto responder_certificate = Sv2SignatureNoiseMessage(version, valid_from, valid_to,\n+                                    XOnlyPubKey(responder_static_key.GetPubKey()), responder_authority_key);\n+\n+        if (test_initiator) {\n+            m_transport = std::make_unique<Sv2Transport>(initiator_static_key, XOnlyPubKey(responder_authority_key.GetPubKey()));\n+            m_peer_cipher = std::make_unique<Sv2Cipher>(std::move(responder_static_key), std::move(responder_certificate));\n+        } else {\n+            m_transport = std::make_unique<Sv2Transport>(responder_static_key, responder_certificate);\n+            m_peer_cipher = std::make_unique<Sv2Cipher>(std::move(initiator_static_key), XOnlyPubKey(responder_authority_key.GetPubKey()));\n+        }\n+    }\n+\n+    /** Data type returned by Interact:\n+     *\n+     * - std::nullopt: transport error occurred\n+     * - otherwise: a vector of\n+     *   - std::nullopt: invalid message received\n+     *   - otherwise: a Sv2NetMsg retrieved\n+     */\n+    using InteractResult = std::optional<std::vector<std::optional<Sv2NetMsg>>>;\n+\n+    void LogProgress(bool should_progress, bool progress, bool pretend_no_progress) {\n+        if (!should_progress) {\n+            BOOST_TEST_MESSAGE(\"[Interact] !should_progress\");\n+        } else if  (!progress) {\n+            BOOST_TEST_MESSAGE(\"[Interact] should_progress && !progress\");\n+        } else if (pretend_no_progress) {\n+            BOOST_TEST_MESSAGE(\"[Interact] pretend !progress\");\n+        }\n+    }\n+\n+    /** Send/receive scheduled/available bytes and messages.\n+     *\n+     * This is the only function that interacts with the transport being tested; everything else is\n+     * scheduling things done by Interact(), or processing things learned by it.\n+     */\n+    InteractResult Interact()\n+    {\n+        std::vector<std::optional<Sv2NetMsg>> ret;\n+        while (true) {\n+            bool progress{false};\n+            // Send bytes from m_to_send to the transport.\n+            if (!m_to_send.empty()) {\n+                size_t n_bytes_to_send = 1 + InsecureRandRange(m_to_send.size());\n+                BOOST_TEST_MESSAGE(strprintf(\"[Interact] send %d of %d bytes\", n_bytes_to_send, m_to_send.size()));\n+                Span<const uint8_t> to_send = Span{m_to_send}.first(n_bytes_to_send);\n+                size_t old_len = to_send.size();\n+                if (!m_transport->ReceivedBytes(to_send)) {\n+                    BOOST_TEST_MESSAGE(\"[Interact] transport error\");\n+                    return std::nullopt;\n+                }\n+                if (old_len != to_send.size()) {\n+                    progress = true;\n+                    m_to_send.erase(m_to_send.begin(), m_to_send.begin() + (old_len - to_send.size()));\n+                }\n+            }\n+            // Retrieve messages received by the transport.\n+            bool should_progress = m_transport->ReceivedMessageComplete();\n+            bool pretend_no_progress = InsecureRandBool();\n+            LogProgress(should_progress, progress, pretend_no_progress);\n+            if (should_progress && (!progress || pretend_no_progress)) {\n+                bool dummy_reject_message = false;\n+                CNetMessage net_msg = m_transport->GetReceivedMessage(std::chrono::microseconds(0), dummy_reject_message);\n+                Sv2NetMsg msg(std::move(net_msg));\n+                ret.emplace_back(std::move(msg));\n+                progress = true;\n+            }\n+            // Enqueue a message to be sent by the transport to us.\n+            should_progress = !m_msg_to_send.empty();\n+            pretend_no_progress = InsecureRandBool();\n+            LogProgress(should_progress, progress, pretend_no_progress);\n+            if (should_progress && (!progress || pretend_no_progress)) {\n+                BOOST_TEST_MESSAGE(\"Shoehorn into CSerializedNetMsg\");\n+                CSerializedNetMsg msg{m_msg_to_send.front()};\n+                BOOST_TEST_MESSAGE(\"Call SetMessageToSend\");\n+                if (m_transport->SetMessageToSend(msg)) {\n+                    BOOST_TEST_MESSAGE(\"Finished SetMessageToSend\");\n+                    m_msg_to_send.pop_front();\n+                    progress = true;\n+                }\n+            }\n+            // Receive bytes from the transport.\n+            const auto& [recv_bytes, _more, _m_type] = m_transport->GetBytesToSend(!m_msg_to_send.empty());\n+            should_progress = !recv_bytes.empty();\n+            pretend_no_progress = InsecureRandBool();\n+            LogProgress(should_progress, progress, pretend_no_progress);\n+            if (should_progress && (!progress || pretend_no_progress)) {\n+                size_t to_receive = 1 + InsecureRandRange(recv_bytes.size());\n+                BOOST_TEST_MESSAGE(strprintf(\"[Interact] receive %d of %d bytes\", to_receive, recv_bytes.size()));\n+                m_received.insert(m_received.end(), recv_bytes.begin(), recv_bytes.begin() + to_receive);\n+                progress = true;\n+                m_transport->MarkBytesSent(to_receive);\n+            }\n+            if (!progress) break;\n+        }\n+        return ret;\n+    }\n+\n+    /** Schedule bytes to be sent to the transport. */\n+    void Send(Span<const uint8_t> data)\n+    {\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Trace, \"Send: %s\\n\", HexStr(data));\n+        m_to_send.insert(m_to_send.end(), data.begin(), data.end());\n+    }\n+\n+    /** Schedule bytes to be sent to the transport. */\n+    void Send(Span<const std::byte> data) { Send(MakeUCharSpan(data)); }\n+\n+    /** Schedule a message to be sent to us by the transport. */\n+    void AddMessage(Sv2NetMsg msg)\n+    {\n+        m_msg_to_send.push_back(std::move(msg));\n+    }\n+\n+    /**\n+     * If we are the initiator, the send buffer should contain our ephemeral public\n+     * key. Pass this to the peer cipher and clear the buffer.\n+     *\n+     * If we are the responder, put the peer ephemeral public key on our receive buffer.\n+     */\n+    void ProcessHandshake1() {\n+        if (m_test_initiator) {\n+            BOOST_REQUIRE(m_received.size() == Sv2HandshakeState::ELLSWIFT_PUB_KEY_SIZE);\n+            m_peer_cipher->GetHandshakeState().ReadMsgEphemeralPK(MakeWritableByteSpan(m_received));\n+            m_received.clear();\n+        } else {\n+            BOOST_REQUIRE(m_to_send.empty());\n+            m_to_send.resize(Sv2HandshakeState::ELLSWIFT_PUB_KEY_SIZE);\n+            m_peer_cipher->GetHandshakeState().WriteMsgEphemeralPK(MakeWritableByteSpan(m_to_send));\n+        }\n+\n+    }\n+\n+    /** Expect key to have been received from transport and process it.\n+     *\n+     * Many other Sv2TransportTester functions cannot be called until after\n+     * ProcessHandshake2() has been called, as no encryption keys are set up before that point.\n+     */\n+    void ProcessHandshake2()\n+    {\n+        if (m_test_initiator) {\n+            BOOST_REQUIRE(m_to_send.empty());\n+\n+            // Have the peer cypher write the second part of the handshake into our receive buffer\n+            m_to_send.resize(Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+            m_peer_cipher->GetHandshakeState().WriteMsgES(MakeWritableByteSpan(m_to_send));\n+\n+            // At this point the peer is done with the handshake:\n+            m_peer_cipher->FinishHandshake();\n+        } else {\n+            BOOST_REQUIRE(m_received.size() == Sv2HandshakeState::HANDSHAKE_STEP2_SIZE);\n+            BOOST_REQUIRE(m_peer_cipher->GetHandshakeState().ReadMsgES(MakeWritableByteSpan(m_received)));\n+            m_received.clear();\n+\n+            m_peer_cipher->FinishHandshake();\n+        }\n+    }\n+\n+    /** Schedule an encrypted packet with specified content to be sent to transport\n+     *  (only after ReceiveKey). */\n+    void SendPacket(Sv2NetMsg msg)\n+    {\n+        // TODO: randomly break stuff\n+\n+        std::vector<std::byte> ciphertext;\n+        const size_t encrypted_payload_size = Sv2Cipher::EncryptedMessageSize(msg.size());\n+        ciphertext.resize(SV2_HEADER_ENCRYPTED_SIZE + encrypted_payload_size);\n+        Span<std::byte> buffer_span{MakeWritableByteSpan(ciphertext)};\n+\n+        // Header\n+        DataStream ss_header_plain{};\n+        ss_header_plain << Sv2NetHeader(msg);\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Trace, \"Header: %s\\n\", HexStr(ss_header_plain));\n+        Span<std::byte> header_encrypted{buffer_span.subspan(0, SV2_HEADER_ENCRYPTED_SIZE)};\n+        BOOST_REQUIRE(m_peer_cipher->EncryptMessage(ss_header_plain, header_encrypted));\n+\n+        // Payload\n+        Span<const std::byte> payload_plain = MakeByteSpan(msg.data());\n+        // TODO: truncate very long messages, about 100 bytes at the start and end\n+        //       is probably enough for most debugging.\n+        LogPrintLevel(BCLog::SV2, BCLog::Level::Trace, \"Payload: %s\\n\", HexStr(payload_plain));",
      "path": "src/test/sv2_transport_tests.cpp",
      "position": 247,
      "original_position": 247,
      "commit_id": "bdc85423c60b438721773191878fd42960ad40d0",
      "original_commit_id": "2f673b5959cee168b808e23c6f5554e2f673db15",
      "in_reply_to_id": 1649237537,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I did! Did I? Should be fixed now.",
      "created_at": "2024-06-21T18:15:05Z",
      "updated_at": "2024-06-21T18:15:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30315#discussion_r1649293172",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649293172"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30315"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 247,
      "original_line": 247,
      "side": "RIGHT"
    }
  ]
}