{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061",
    "id": 2115066966,
    "node_id": "PR_kwDOABII585-EVxW",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31061",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31061.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31061.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fae6acacc0216aa07f5a4a0ee75fbade620d7023",
    "number": 31061,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "refactor: Check translatable format strings at compile-time",
    "user": {
      "login": "maflcko",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maflcko",
      "html_url": "https://github.com/maflcko",
      "followers_url": "https://api.github.com/users/maflcko/followers",
      "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
      "organizations_url": "https://api.github.com/users/maflcko/orgs",
      "repos_url": "https://api.github.com/users/maflcko/repos",
      "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/maflcko/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "All translatable format strings are fixed. This change surfaces errors in them at compile-time.\r\n\r\nThe implementation achieves this by allowing to delay the translation (or `std::string` construction) that previously happened in `Untranslated()` or `_()` by returning a new type from those functions. The new type can be converted to `bilingual_str` where needed.\r\n\r\nThis can be tested by adding a format string error in an original string literal and observing a new compile-time failure.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2024-10-09T11:35:14Z",
    "updated_at": "2024-10-11T13:53:38Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "1dc5c5209ac8a4dc17f5c90c6e78e249a135d8ca",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "maflcko:2410-trans",
      "ref": "2410-trans",
      "sha": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "bitcoin-core",
        "full_name": "maflcko/bitcoin-core",
        "owner": {
          "login": "maflcko",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/maflcko",
          "html_url": "https://github.com/maflcko",
          "followers_url": "https://api.github.com/users/maflcko/followers",
          "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
          "organizations_url": "https://api.github.com/users/maflcko/orgs",
          "repos_url": "https://api.github.com/users/maflcko/repos",
          "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/maflcko/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/maflcko/bitcoin-core",
        "fork": true,
        "url": "https://api.github.com/repos/maflcko/bitcoin-core",
        "archive_url": "https://api.github.com/repos/maflcko/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/maflcko/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/maflcko/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/maflcko/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/maflcko/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/maflcko/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/maflcko/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/maflcko/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/maflcko/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/maflcko/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/maflcko/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/maflcko/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/maflcko/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/maflcko/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/maflcko/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/maflcko/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/maflcko/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/maflcko/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/maflcko/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/maflcko/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/maflcko/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:maflcko/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/maflcko/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/maflcko/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/maflcko/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/maflcko/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/maflcko/bitcoin-core/hooks",
        "svn_url": "https://github.com/maflcko/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 26,
        "watchers_count": 26,
        "size": 238100,
        "default_branch": "master",
        "open_issues_count": 18,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-10T19:16:59Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2024-09-23T23:48:35Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "0c2c3bb3f5c6f52c8db625c3edb51409c72c14b0",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36240,
        "stargazers_count": 78808,
        "watchers_count": 78808,
        "size": 269888,
        "default_branch": "master",
        "open_issues_count": 682,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-11T12:46:43Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-10-11T13:56:19Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 161,
    "deletions": 152,
    "changed_files": 20,
    "commits": 7,
    "review_comments": 39,
    "comments": 3
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhYTM0YWQwYTdmNTI3MTk1OGU1MzEzZTdhYWUyYmFhZWQ0MTU4N2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faa34ad0a7f5271958e5313e7aae2baaed41587e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/faa34ad0a7f5271958e5313e7aae2baaed41587e",
      "tree": {
        "sha": "c36ff8fdf42f9722d20138f053fa7fca94be2e90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c36ff8fdf42f9722d20138f053fa7fca94be2e90"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree c36ff8fdf42f9722d20138f053fa7fca94be2e90\nparent caf44e500eb257376c36c0e043f71f72b949f743\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728467457 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728469059 +0200\n\nrefactor: Check wallet format strings at compile time\n\nPreviously, the std::string overload of tfm::format was selected, which\ndoes no checks. Now, the ConstevalFormatString overload is picked.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQMn/3SwnIahJzyyd4z2nmp5A+wRf5yHAGJM7y+VUTTJn0dK253S3Ih9Bjvumhf30xG\nmxUqm5CW4+vfshdvXf6g0=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/caf44e500eb257376c36c0e043f71f72b949f743",
          "sha": "caf44e500eb257376c36c0e043f71f72b949f743",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/caf44e500eb257376c36c0e043f71f72b949f743"
        }
      ],
      "message": "refactor: Check wallet format strings at compile time\n\nPreviously, the std::string overload of tfm::format was selected, which\ndoes no checks. Now, the ConstevalFormatString overload is picked.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-09T10:17:39Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-09T09:50:57Z"
      },
      "sha": "faa34ad0a7f5271958e5313e7aae2baaed41587e"
    },
    {
      "event": "commented",
      "id": 2402071055,
      "node_id": "IC_kwDOABII586PLLIP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2402071055",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T11:35:17Z",
      "updated_at": "2024-10-11T13:53:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/31061).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2362745062) |\n| Concept ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2357070300) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31072](https://github.com/bitcoin/bitcoin/pull/31072) (scripted-diff: Replace strprintf(Untranslated(...)) with Untranslated(strprintf(...)) by ryanofsky)\n* [#31046](https://github.com/bitcoin/bitcoin/pull/31046) (init: Some small chainstate load improvements by TheCharlatan)\n* [#31042](https://github.com/bitcoin/bitcoin/pull/31042) (build: Rename `PACKAGE_*` variables to `CLIENT_*` by hebasto)\n* [#30928](https://github.com/bitcoin/bitcoin/pull/30928) (tinyformat: refactor: increase compile-time checks and don't throw for tfm::format_error by stickies-v)\n* [#30221](https://github.com/bitcoin/bitcoin/pull/30221) (wallet: Ensure best block matches wallet scan state by achow101)\n* [#28710](https://github.com/bitcoin/bitcoin/pull/28710) (Remove the legacy wallet and BDB dependency by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2402071055",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "renamed",
      "id": 14571347679,
      "node_id": "RTE_lADOABII586ZhW7DzwAAAANkhR7f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14571347679",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T11:35:20Z",
      "rename": {
        "from": " refactor: Check original (translatable) format string at compile-time ",
        "to": "refactor: Check original (translatable) format string at compile-time"
      }
    },
    {
      "event": "labeled",
      "id": 14571348001,
      "node_id": "LE_lADOABII586ZhW7DzwAAAANkhSAh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14571348001",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T11:35:21Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "renamed",
      "id": 14571450433,
      "node_id": "RTE_lADOABII586ZhW7DzwAAAANkhrBB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14571450433",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T11:41:52Z",
      "rename": {
        "from": "refactor: Check original (translatable) format string at compile-time",
        "to": "refactor: Check translatable format strings at compile-time"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14571924735,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAANkjez_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14571924735",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T12:15:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14572389579,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAANklQTL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14572389579",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T12:46:10Z"
    },
    {
      "event": "labeled",
      "id": 14572392290,
      "node_id": "LE_lADOABII586ZhW7DzwAAAANklQ9i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14572392290",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T12:46:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2402225515,
      "node_id": "IC_kwDOABII586PLw1r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2402225515",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T12:46:22Z",
      "updated_at": "2024-10-09T12:46:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/31292791221</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2402225515",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "reviewed",
      "id": 2356947303,
      "node_id": "PRR_kwDOABII586MfCln",
      "url": null,
      "actor": null,
      "commit_id": "fabb28f6c8f772d38917a23dfbda706292070ba1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK fabb28f6c8f772d38917a23dfbda706292070ba1. This looks great, and implementation is very clean. However, I think it could be simplified significantly if there were a scripted diff commit to replace `strprintf(Untranslated(\"...\"), ...)` with `Untranslated(strprintf(\"...\", ...))`, which would be a good change on its own for clarity and consistency. More details in comments below.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2356947303",
      "submitted_at": "2024-10-09T13:02:39Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhNzg4ZGI2NGI0YmIwNWMwZmNjYzcxNTVkZGFjOTdmYTQyZmQ1ZTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa788db64b4bb05c0fccc7155ddac97fa42fd5e8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa788db64b4bb05c0fccc7155ddac97fa42fd5e8",
      "tree": {
        "sha": "2a5114d373206317c50e87e40dd57a2d3aa36f62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a5114d373206317c50e87e40dd57a2d3aa36f62"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 2a5114d373206317c50e87e40dd57a2d3aa36f62\nparent faa34ad0a7f5271958e5313e7aae2baaed41587e\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728467219 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728480761 +0200\n\nrefactor: Pick translated string after format\n\nThis passes the return value of _() directly to strprintf so the format\nstring can be checked at compile time in a future commit.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQOwGlVGEuqrpCwXuLjHXgu0KtjAGCmw32D9RamohA1LUYWGzzObEQgm9D6GvEtL7CS\nNaHpZLLPhIfFBmrd2fiAA=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faa34ad0a7f5271958e5313e7aae2baaed41587e",
          "sha": "faa34ad0a7f5271958e5313e7aae2baaed41587e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/faa34ad0a7f5271958e5313e7aae2baaed41587e"
        }
      ],
      "message": "refactor: Pick translated string after format\n\nThis passes the return value of _() directly to strprintf so the format\nstring can be checked at compile time in a future commit.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-09T13:32:41Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-09T09:46:59Z"
      },
      "sha": "fa788db64b4bb05c0fccc7155ddac97fa42fd5e8"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14573177661,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAANkoQs9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14573177661",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T13:35:02Z"
    },
    {
      "event": "unlabeled",
      "id": 14574747063,
      "node_id": "UNLE_lADOABII586ZhW7DzwAAAANkuP23",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14574747063",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T15:06:03Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2357070300,
      "node_id": "PRR_kwDOABII586Mfgnc",
      "url": null,
      "actor": null,
      "commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, and this is a smaller diff than I'd expected to implement this, nice!\r\n\r\nI need to think about it more and work out some code, but I feel like the new interface is not as intuitive yet as it could be. Will follow up with that in next review.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2357070300",
      "submitted_at": "2024-10-09T16:36:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "commented",
      "id": 2403846748,
      "node_id": "IC_kwDOABII586PR8pc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2403846748",
      "actor": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-10T03:06:34Z",
      "updated_at": "2024-10-10T03:06:34Z",
      "author_association": "MEMBER",
      "body": "concept ack",
      "user": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2403846748",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14586545742,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAANlbQZO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14586545742",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-10T08:12:41Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhODliOTE5ZGQyZWRjZGExMWUwZjEzODk3NTRlZWQzYzMwNTBmYTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa89b919dd2edcda11e0f1389754eed3c3050fa6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa89b919dd2edcda11e0f1389754eed3c3050fa6",
      "tree": {
        "sha": "fb4d30a2a16e0b5653f1dcd99b591311fefde80c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb4d30a2a16e0b5653f1dcd99b591311fefde80c"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree fb4d30a2a16e0b5653f1dcd99b591311fefde80c\nparent fa788db64b4bb05c0fccc7155ddac97fa42fd5e8\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728466646 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728551904 +0200\n\nmove-only: Detail_CheckNumFormatSpecifiers and G_TRANSLATION_FUN\n\nThis is required for a future commit. Can be reviewed via the git\noptions --color-moved=dimmed-zebra --color-moved-ws=ignore-all-space\n\nAlso move util::detail::Hex to a proper namespace instead of an inline\nnamespace so it doesn't conflict with the new util::detail namespace, and\nwon't create other problems for callers trying to use the inline namespaces.\n\nAlso fix a misleading comment in util_string_tests.cpp.\n\nCo-Authored-By: Ryan Ofsky <ryan@ofsky.org>\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQHlr77ssMA7KUOL/aNnVjWQqmlDaydVjLxw4STkDFA1EhFuS4PkcUMRly8cS3VS84Q\nfKEhyKhz5DD+MIY+AGngk=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa788db64b4bb05c0fccc7155ddac97fa42fd5e8",
          "sha": "fa788db64b4bb05c0fccc7155ddac97fa42fd5e8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa788db64b4bb05c0fccc7155ddac97fa42fd5e8"
        }
      ],
      "message": "move-only: Detail_CheckNumFormatSpecifiers and G_TRANSLATION_FUN\n\nThis is required for a future commit. Can be reviewed via the git\noptions --color-moved=dimmed-zebra --color-moved-ws=ignore-all-space\n\nAlso move util::detail::Hex to a proper namespace instead of an inline\nnamespace so it doesn't conflict with the new util::detail namespace, and\nwon't create other problems for callers trying to use the inline namespaces.\n\nAlso fix a misleading comment in util_string_tests.cpp.\n\nCo-Authored-By: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-10T09:18:24Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-09T09:37:26Z"
      },
      "sha": "fa89b919dd2edcda11e0f1389754eed3c3050fa6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhZjcxYmU4OWFkOWQwN2MwODQ4ZDEzZGE1MWZjNzFjMTEzOTU5ODQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf71be89ad9d07c0848d13da51fc71c11395984",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/faf71be89ad9d07c0848d13da51fc71c11395984",
      "tree": {
        "sha": "31f0121891e0a18d1b400d67caf1056073c0ca66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31f0121891e0a18d1b400d67caf1056073c0ca66"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 31f0121891e0a18d1b400d67caf1056073c0ca66\nparent fa89b919dd2edcda11e0f1389754eed3c3050fa6\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728471403 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728551960 +0200\n\nrefactor: Mark run-time Untranslated() c_str with std::string\n\nThis is a no-op right now, because a std::string was constructed either\nway. However, it is needed for a future commit that forces\nUntranslated() char literals to be evaluated at compile time.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQE+WVXNTKcveQCWU7ndHFANtPZnISr7+AM3VCDUVWuukj/VEOw8t6XakOFFjpKs+Ru\nrH6PB5qt7P2cDgB9AfKAw=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa89b919dd2edcda11e0f1389754eed3c3050fa6",
          "sha": "fa89b919dd2edcda11e0f1389754eed3c3050fa6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa89b919dd2edcda11e0f1389754eed3c3050fa6"
        }
      ],
      "message": "refactor: Mark run-time Untranslated() c_str with std::string\n\nThis is a no-op right now, because a std::string was constructed either\nway. However, it is needed for a future commit that forces\nUntranslated() char literals to be evaluated at compile time.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-10T09:19:20Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-09T10:56:43Z"
      },
      "sha": "faf71be89ad9d07c0848d13da51fc71c11395984"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhNjI3MzdhZTM5OGJkNTZlZjllNjhiOGQwYTRkMjE3Y2ZjYzUzMmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa62737ae398bd56ef9e68b8d0a4d217cfcc532b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa62737ae398bd56ef9e68b8d0a4d217cfcc532b",
      "tree": {
        "sha": "7ac7b0a4b054735e4f66457b98715f554977e8e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7ac7b0a4b054735e4f66457b98715f554977e8e9"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 7ac7b0a4b054735e4f66457b98715f554977e8e9\nparent faf71be89ad9d07c0848d13da51fc71c11395984\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728471930 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728551985 +0200\n\nrefactor: Delay translation of Untranslated() or _() literals\n\nThis is required for a future commit that requires Untranslated() and\n_() to be consteval for format literals.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQHKK2Sht/bu1vaV0gShqAohGQnP+MnoSvN/hzeQswBlXgBJ18l7OoChHiHOea7DTeP\nk+OsrqMgZH9Ax987wSqAw=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf71be89ad9d07c0848d13da51fc71c11395984",
          "sha": "faf71be89ad9d07c0848d13da51fc71c11395984",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/faf71be89ad9d07c0848d13da51fc71c11395984"
        }
      ],
      "message": "refactor: Delay translation of Untranslated() or _() literals\n\nThis is required for a future commit that requires Untranslated() and\n_() to be consteval for format literals.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-10T09:19:45Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-09T11:05:30Z"
      },
      "sha": "fa62737ae398bd56ef9e68b8d0a4d217cfcc532b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhNWZmNTVhMzBjNDVhYzgxZTIwMGRlMGNhOTg0MGYzMDU0ZjNmNTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa5ff55a30c45ac81e200de0ca9840f3054f3f59",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5ff55a30c45ac81e200de0ca9840f3054f3f59",
      "tree": {
        "sha": "7705180475f07f9b10d2e662dda4c6a647125cd3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7705180475f07f9b10d2e662dda4c6a647125cd3"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 7705180475f07f9b10d2e662dda4c6a647125cd3\nparent fa62737ae398bd56ef9e68b8d0a4d217cfcc532b\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728471074 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728551987 +0200\n\nrefactor: Check translatable format strings at compile-time\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQNXvzR4URicz/gUCxM9tlJEWJ1CLulWh5i6RSbHxA9hqDEjoTVZSuOnPOdvF38osDi\nkpgm/STB9OMjlnrdArfQk=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa62737ae398bd56ef9e68b8d0a4d217cfcc532b",
          "sha": "fa62737ae398bd56ef9e68b8d0a4d217cfcc532b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa62737ae398bd56ef9e68b8d0a4d217cfcc532b"
        }
      ],
      "message": "refactor: Check translatable format strings at compile-time",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-10T09:19:47Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-09T10:51:14Z"
      },
      "sha": "fa5ff55a30c45ac81e200de0ca9840f3054f3f59"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhZTZhY2FjYzAyMTZhYTA3ZjVhNGEwZWU3NWZiYWRlNjIwZDcwMjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "tree": {
        "sha": "33fce29968bd5651b35df981b25ddd4d8c4faf8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33fce29968bd5651b35df981b25ddd4d8c4faf8b"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 33fce29968bd5651b35df981b25ddd4d8c4faf8b\nparent fa5ff55a30c45ac81e200de0ca9840f3054f3f59\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728479108 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728552012 +0200\n\nrefactor: Tidy fixups\n\nRequested by clang-tidy:\n\nsrc/wallet/salvage.cpp:119:18: error: use emplace_back instead of push_back [modernize-use-emplace,-warnings-as-errors]\n   119 |         warnings.push_back(Untranslated(\"Salvage: Database salvage found errors, all data may not be recoverable.\"));\n       |                  ^~~~~~~~~~\n       |                  emplace_back(\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQN8zU481EoXvIjWsRxk+dJhdcmyOyNP0K4QKcu0xhYsPz+xDJTJ5AKZpTBBkHgb5z2\n1q3DhshEYhKJxq5eQcZww=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa5ff55a30c45ac81e200de0ca9840f3054f3f59",
          "sha": "fa5ff55a30c45ac81e200de0ca9840f3054f3f59",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5ff55a30c45ac81e200de0ca9840f3054f3f59"
        }
      ],
      "message": "refactor: Tidy fixups\n\nRequested by clang-tidy:\n\nsrc/wallet/salvage.cpp:119:18: error: use emplace_back instead of push_back [modernize-use-emplace,-warnings-as-errors]\n   119 |         warnings.push_back(Untranslated(\"Salvage: Database salvage found errors, all data may not be recoverable.\"));\n       |                  ^~~~~~~~~~\n       |                  emplace_back(",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-10T09:20:12Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-09T13:05:08Z"
      },
      "sha": "fae6acacc0216aa07f5a4a0ee75fbade620d7023"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14587654617,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAANlffHZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14587654617",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-10T09:20:25Z"
    },
    {
      "event": "reviewed",
      "id": 2362745062,
      "node_id": "PRR_kwDOABII586M1KDm",
      "url": null,
      "actor": null,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK fae6acacc0216aa07f5a4a0ee75fbade620d7023. This is a nice improvement overall, and definitely better than the status quo due to extra type checking it provides. I do think there is extra complexity here and extra changes that could go away if we adopt #31072 and stop passing untranslated format strings to strprintf. \r\n\r\nI also think it probably would be nicer if `_()` would continue to look up translations right away, instead of delaying them until conversion to bilingual str. I think it could return a bilingual_str with extra compile-time information instead of returning different type with `.lit` and `.translate()` fields. I'm not sure this is possible though, and it's likely there's something I'm overlooking.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2362745062",
      "submitted_at": "2024-10-11T13:53:35Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "review_requested",
      "id": 14609178604,
      "node_id": "RRE_lADOABII586ZhW7DzwAAAANmxl_s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14609178604",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-11T13:53:38Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793398674",
      "pull_request_review_id": 2356947303,
      "id": 1793398674,
      "node_id": "PRRC_kwDOABII585q5ReS",
      "diff_hunk": "@@ -71,7 +71,7 @@ std::string FormatSubVersion(const std::string& name, int nClientVersion, const\n \n std::string CopyrightHolders(const std::string& strPrefix)\n {\n-    const auto copyright_devs = strprintf(_(COPYRIGHT_HOLDERS).translated, COPYRIGHT_HOLDERS_SUBSTITUTION);\n+    const auto copyright_devs = strprintf(_(COPYRIGHT_HOLDERS), COPYRIGHT_HOLDERS_SUBSTITUTION).translated;",
      "path": "src/clientversion.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa22616839903369757069d50aa8f55e246b2b6c",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: Pick translated string after format\" (fa22616839903369757069d50aa8f55e246b2b6c)\r\n\r\nCommit message says this change is \"required for a future commit\" but that makes it sound this is because of some implementation detail, when I think the actual reason is that strprintf can't check format string at compile time if it is passed a runtime std::string value.\r\n\r\nUnless I'm missing something would be clearer if commit message just said this passes return value of the underscore function to directly to strprintf so the format string can be checked at compile time.",
      "created_at": "2024-10-09T12:04:42Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793398674",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793398674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 74,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793403826",
      "pull_request_review_id": 2356947303,
      "id": 1793403826,
      "node_id": "PRRC_kwDOABII585q5Suy",
      "diff_hunk": "@@ -18,6 +18,48 @@\n #include <vector>\n \n namespace util {\n+template <unsigned num_params>\n+constexpr static void Detail_CheckNumFormatSpecifiers(std::string_view str)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa6cef7cf762a33755697dff20b75a9f235e96a9",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"move-only: Detail_CheckNumFormatSpecifiers and G_TRANSLATION_FUN\" (fa6cef7cf762a33755697dff20b75a9f235e96a9)\r\n\r\nI think it would make more sense to call this function `util::detail::CheckNumFormatSpecifiers` instead of `util::Detail_CheckNumFormatSpecifiers`",
      "created_at": "2024-10-09T12:08:46Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793403826",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793403826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793408147",
      "pull_request_review_id": 2356947303,
      "id": 1793408147,
      "node_id": "PRRC_kwDOABII585q5TyT",
      "diff_hunk": "@@ -17,12 +17,12 @@ template <unsigned NumArgs>\n inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n {\n     // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+    util::Detail_CheckNumFormatSpecifiers<NumArgs>(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa6cef7cf762a33755697dff20b75a9f235e96a9",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"move-only: Detail_CheckNumFormatSpecifiers and G_TRANSLATION_FUN\" (fa6cef7cf762a33755697dff20b75a9f235e96a9)\r\n\r\nIs this comment accurate? If so it seems like if is a more obvious approach to avoiding -Wunused errors would be to write `(void)fmt;` or just drop the `fmt` variable and declare the function as `void PassFmt(util::ConstevalFormatString<NumArgs>)`",
      "created_at": "2024-10-09T12:11:44Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793408147",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793408147"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793416404",
      "pull_request_review_id": 2356947303,
      "id": 1793416404,
      "node_id": "PRRC_kwDOABII585q5VzU",
      "diff_hunk": "@@ -107,7 +107,7 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n             }\n         }\n     } catch (const std::exception& e) {\n-        return ConfigError{ConfigStatus::FAILED, Untranslated(e.what())};\n+        return ConfigError{ConfigStatus::FAILED, Untranslated(std::string{e.what()})};",
      "path": "src/common/init.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa213aa88dfe9354c314a855c72ea33b3966c5c0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: Mark run-time Untranslated() c_str with std::string\" (fa213aa88dfe9354c314a855c72ea33b3966c5c0)\r\n\r\nI think this change is unfortunate and doesn't make sense. It seems like it could be a avoided with a small scripted diff to replace `strprintf(Untranslated(\"...\"), ...)` with `Untranslated(strprintf(\"...\", ...))` and that replacement would make the code clearer and more consistent anyway.",
      "created_at": "2024-10-09T12:18:00Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793416404",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793416404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 110,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793440780",
      "pull_request_review_id": 2356947303,
      "id": 1793440780,
      "node_id": "PRRC_kwDOABII585q5bwM",
      "diff_hunk": "@@ -89,8 +89,8 @@ BOOST_AUTO_TEST_CASE(check_value_or)\n     BOOST_CHECK_EQUAL(IntFn(10, false).value_or(20), 20);\n     BOOST_CHECK_EQUAL(NoCopyFn(10, true).value_or(20), 10);\n     BOOST_CHECK_EQUAL(NoCopyFn(10, false).value_or(20), 20);\n-    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), true).value_or(Untranslated(\"B\")), Untranslated(\"A\"));\n-    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), false).value_or(Untranslated(\"B\")), Untranslated(\"B\"));\n+    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), true).value_or(Untranslated(\"B\")), bilingual_str{Untranslated(\"A\")});\n+    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), false).value_or(Untranslated(\"B\")), bilingual_str{Untranslated(\"B\")});",
      "path": "src/test/result_tests.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: Delay translation of Untranslated() or _() literals\" (aaaa4fb20156b4375d92e1eca4acc90a425a1896)\r\n\r\nLooks like these changes would also not be necessary if using earlier suggestion to replace `strprintf(Untranslated(\"...\"), ...)` with `Untranslated(strprintf(\"...\", ...))` so `Untranslated` definition does not have to change.",
      "created_at": "2024-10-09T12:32:23Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793440780",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793440780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 92,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793459318",
      "pull_request_review_id": 2356947303,
      "id": 1793459318,
      "node_id": "PRRC_kwDOABII585q5gR2",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 24,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fac722986e317861d131f95f6e8cfa8446bf8fba",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: Delay translation of Untranslated() or _() literals\" (aaaa4fb20156b4375d92e1eca4acc90a425a1896)\r\n\r\nName `Original` is vague. Would suggest renaming `Original` something like `bilingual_literal` or `bilingual_const` to be consistent with `bilingual_str` and `bilingual_fmt` since it represents a bilingual literal or constant string which is the return value of the underscore function.\r\n\r\nI also think this can just be a normal non-template struct, and `bool translatable` template argument can be dropped if you take eariler suggestion to replace `strprintf(Untranslated(\"...\"), ...)` with `Untranslated(strprintf(\"...\", ...))` so `Untranlated` can continue to return `bilingual_str`",
      "created_at": "2024-10-09T12:45:10Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793459318",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793459318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 28,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793462300",
      "pull_request_review_id": 2356947303,
      "id": 1793462300,
      "node_id": "PRRC_kwDOABII585q5hAc",
      "diff_hunk": "@@ -47,8 +73,11 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+consteval auto _(util::Original<true> str) { return str; }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 50,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: Delay translation of Untranslated() or _() literals\" (aaaa4fb20156b4375d92e1eca4acc90a425a1896)\r\n\r\nShould be no need for this if take earlier suggestion to replace `strprintf(Untranslated(\"...\"), ...)` with `Untranslated(strprintf(\"...\", ...))`",
      "created_at": "2024-10-09T12:47:03Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793462300",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793462300"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793473436",
      "pull_request_review_id": 2357070300,
      "id": 1793473436,
      "node_id": "PRRC_kwDOABII585q5juc",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 22,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fabb28f6c8f772d38917a23dfbda706292070ba1",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "typo nit\r\n```suggestion\r\n/** Type to denote whether an original string literal is translatable */\r\n```",
      "created_at": "2024-10-09T12:54:07Z",
      "updated_at": "2024-10-09T16:36:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793473436",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793473436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793473728",
      "pull_request_review_id": 2356947303,
      "id": 1793473728,
      "node_id": "PRRC_kwDOABII585q5jzA",
      "diff_hunk": "@@ -22,6 +41,13 @@ struct bilingual_str {\n     std::string original;\n     std::string translated;\n \n+    bilingual_str() = default;\n+    bilingual_str(std::string original, std::string translated) : original{original}, translated{translated} {}\n+    template <bool translatable>\n+    bilingual_str(util::Original<translatable> original) : original{original.lit}, translated{original.translate()}\n+    {\n+    }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 41,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: Delay translation of Untranslated() or _() literals\" (aaaa4fb20156b4375d92e1eca4acc90a425a1896)\r\n\r\nI think it confuses and complicates the design for `bilingual_str` to be aware of `Original` since `bilingual_str` is just a simple, low-level pair of strings that shouldn't know about formatting.\r\n\r\nI think we do need return value of underscore function to be implicitly convertible to `bilingual_str` but that would be more cleanly implemented by adding an `operator bilingual_str` to the Original class.\r\n\r\nAlso (not sure about this, but) it might be nice to add an explicit conversion method to Original class, so we could write something like `_(\"Error opening block database\").str()` instead of  `bilingual_str{_(\"Error opening block database\")}`",
      "created_at": "2024-10-09T12:54:17Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793473728",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793473728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793488009",
      "pull_request_review_id": 2357070300,
      "id": 1793488009,
      "node_id": "PRRC_kwDOABII585q5nSJ",
      "diff_hunk": "@@ -7,12 +7,31 @@\n \n #include <tinyformat.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n /** Translate a message to the native language of the user. */\n const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 22,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in aaaa4fb20156b4375d92e1eca4acc90a425a1896: seems more straightforward to just extend `ConstevalStringLiteral` instead of creating a new `util::Original`? This would 1) minimize the diff and 2) I find `ConstevalStringLiteral` a much more helpful name than `Original`.",
      "created_at": "2024-10-09T13:02:30Z",
      "updated_at": "2024-10-09T16:36:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793488009",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793488009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793530260",
      "pull_request_review_id": 2357165915,
      "id": 1793530260,
      "node_id": "PRRC_kwDOABII585q5xmU",
      "diff_hunk": "@@ -18,6 +18,48 @@\n #include <vector>\n \n namespace util {\n+template <unsigned num_params>\n+constexpr static void Detail_CheckNumFormatSpecifiers(std::string_view str)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa6cef7cf762a33755697dff20b75a9f235e96a9",
      "in_reply_to_id": 1793403826,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this is possible with a simple diff touching only lines that are already touched in this pull request. If you disagree, I am happy to accept any commit that compiles. I am also happy to review any pull request that achieves this and is split up from this pull request.",
      "created_at": "2024-10-09T13:28:10Z",
      "updated_at": "2024-10-09T13:28:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793530260",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793530260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793533834",
      "pull_request_review_id": 2357172941,
      "id": 1793533834,
      "node_id": "PRRC_kwDOABII585q5yeK",
      "diff_hunk": "@@ -107,7 +107,7 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n             }\n         }\n     } catch (const std::exception& e) {\n-        return ConfigError{ConfigStatus::FAILED, Untranslated(e.what())};\n+        return ConfigError{ConfigStatus::FAILED, Untranslated(std::string{e.what()})};",
      "path": "src/common/init.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa213aa88dfe9354c314a855c72ea33b3966c5c0",
      "in_reply_to_id": 1793416404,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> It seems like it could be a avoided with a small scripted diff to replace `strprintf(Untranslated(\"...\"), ...)` with `Untranslated(strprintf(\"...\", ...))` and that replacement would make the code clearer and more consistent anyway.\r\n\r\nAre you sure? The two are not equivalent, because args can also be a `bilingual_str`, in which case the scripted-diff does not compile. In any case, it seems unrelated to this pull request and I don't see how it \"simplifies\" stuff and it touches different lines anyway, so maybe a separate issue or pull request would be better to explore this?\r\n\r\n> I think this change is unfortunate and doesn't make sense.\r\n\r\nCan you explain which part doesn't make sense and how this relates to `strprintf` and tinyformat at all? I can't see any tfm use in the line you commented on.",
      "created_at": "2024-10-09T13:30:21Z",
      "updated_at": "2024-10-09T13:30:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793533834",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793533834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 110,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793534710",
      "pull_request_review_id": 2357174546,
      "id": 1793534710,
      "node_id": "PRRC_kwDOABII585q5yr2",
      "diff_hunk": "@@ -89,8 +89,8 @@ BOOST_AUTO_TEST_CASE(check_value_or)\n     BOOST_CHECK_EQUAL(IntFn(10, false).value_or(20), 20);\n     BOOST_CHECK_EQUAL(NoCopyFn(10, true).value_or(20), 10);\n     BOOST_CHECK_EQUAL(NoCopyFn(10, false).value_or(20), 20);\n-    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), true).value_or(Untranslated(\"B\")), Untranslated(\"A\"));\n-    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), false).value_or(Untranslated(\"B\")), Untranslated(\"B\"));\n+    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), true).value_or(Untranslated(\"B\")), bilingual_str{Untranslated(\"A\")});\n+    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), false).value_or(Untranslated(\"B\")), bilingual_str{Untranslated(\"B\")});",
      "path": "src/test/result_tests.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": 1793440780,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(same)",
      "created_at": "2024-10-09T13:30:54Z",
      "updated_at": "2024-10-09T13:30:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793534710",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793534710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 92,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793543713",
      "pull_request_review_id": 2357189404,
      "id": 1793543713,
      "node_id": "PRRC_kwDOABII585q504h",
      "diff_hunk": "@@ -71,7 +71,7 @@ std::string FormatSubVersion(const std::string& name, int nClientVersion, const\n \n std::string CopyrightHolders(const std::string& strPrefix)\n {\n-    const auto copyright_devs = strprintf(_(COPYRIGHT_HOLDERS).translated, COPYRIGHT_HOLDERS_SUBSTITUTION);\n+    const auto copyright_devs = strprintf(_(COPYRIGHT_HOLDERS), COPYRIGHT_HOLDERS_SUBSTITUTION).translated;",
      "path": "src/clientversion.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa22616839903369757069d50aa8f55e246b2b6c",
      "in_reply_to_id": 1793398674,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, fixed commit message.",
      "created_at": "2024-10-09T13:36:13Z",
      "updated_at": "2024-10-09T13:36:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793543713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793543713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 74,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793544349",
      "pull_request_review_id": 2357190386,
      "id": 1793544349,
      "node_id": "PRRC_kwDOABII585q51Cd",
      "diff_hunk": "@@ -17,12 +17,12 @@ template <unsigned NumArgs>\n inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n {\n     // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+    util::Detail_CheckNumFormatSpecifiers<NumArgs>(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa6cef7cf762a33755697dff20b75a9f235e96a9",
      "in_reply_to_id": 1793408147,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, added unrelated change to fix comment.",
      "created_at": "2024-10-09T13:36:34Z",
      "updated_at": "2024-10-09T13:36:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793544349",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793544349"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793642022",
      "pull_request_review_id": 2357348665,
      "id": 1793642022,
      "node_id": "PRRC_kwDOABII585q6M4m",
      "diff_hunk": "@@ -22,6 +41,13 @@ struct bilingual_str {\n     std::string original;\n     std::string translated;\n \n+    bilingual_str() = default;\n+    bilingual_str(std::string original, std::string translated) : original{original}, translated{translated} {}\n+    template <bool translatable>\n+    bilingual_str(util::Original<translatable> original) : original{original.lit}, translated{original.translate()}\n+    {\n+    }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 41,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": 1793473728,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Also (not sure about this, but) it might be nice to add an explicit conversion method to Original class, so we could write something like `_(\"Error opening block database\").str()` instead of `bilingual_str{_(\"Error opening block database\")}`\r\n\r\nSure, I am happy to add `bilingual_str str()` and `operator bilingual_str()` to the `Original` type and remove the constructors from `bilingual_str`. However, this means that calling `bilingual_str{Original{}}` is now forbidden and one would have to use `()` over `{}`, or call the `.str()` method.\r\n\r\nLet me know if this is fine and I should go ahead and push this diff:\r\n\r\n```diff\r\ndiff --git a/src/init.cpp b/src/init.cpp\r\nindex fb2028281a..c849f83b05 100644\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -1261,7 +1261,7 @@ static ChainstateLoadResult InitAndLoadChainstate(\r\n             return f();\r\n         } catch (const std::exception& e) {\r\n             LogError(\"%s\\n\", e.what());\r\n-            return std::make_tuple(node::ChainstateLoadStatus::FAILURE, bilingual_str{_(\"Error opening block database\")});\r\n+            return std::make_tuple(node::ChainstateLoadStatus::FAILURE, _(\"Error opening block database\").str());\r\n         }\r\n     };\r\n     auto [status, error] = catch_exceptions([&] { return LoadChainstate(chainman, cache_sizes, options); });\r\ndiff --git a/src/test/result_tests.cpp b/src/test/result_tests.cpp\r\nindex 45337c6801..c829d56faa 100644\r\n--- a/src/test/result_tests.cpp\r\n+++ b/src/test/result_tests.cpp\r\n@@ -63,7 +63,7 @@ void ExpectSuccess(const util::Result<T>& result, const bilingual_str& str, Args\r\n {\r\n     ExpectResult(result, true, str);\r\n     BOOST_CHECK_EQUAL(result.has_value(), true);\r\n-    BOOST_CHECK_EQUAL(result.value(), T{std::forward<Args>(args)...});\r\n+    BOOST_CHECK_EQUAL(result.value(), T(std::forward<Args>(args)...));\r\n     BOOST_CHECK_EQUAL(&result.value(), &*result);\r\n }\r\n \r\n@@ -89,8 +89,8 @@ BOOST_AUTO_TEST_CASE(check_value_or)\r\n     BOOST_CHECK_EQUAL(IntFn(10, false).value_or(20), 20);\r\n     BOOST_CHECK_EQUAL(NoCopyFn(10, true).value_or(20), 10);\r\n     BOOST_CHECK_EQUAL(NoCopyFn(10, false).value_or(20), 20);\r\n-    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), true).value_or(Untranslated(\"B\")), bilingual_str{Untranslated(\"A\")});\r\n-    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), false).value_or(Untranslated(\"B\")), bilingual_str{Untranslated(\"B\")});\r\n+    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), true).value_or(Untranslated(\"B\")), Untranslated(\"A\").str());\r\n+    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), false).value_or(Untranslated(\"B\")), Untranslated(\"B\").str());\r\n }\r\n \r\n BOOST_AUTO_TEST_SUITE_END()\r\ndiff --git a/src/util/translation.h b/src/util/translation.h\r\nindex 08df892733..a06f7b982f 100644\r\n--- a/src/util/translation.h\r\n+++ b/src/util/translation.h\r\n@@ -14,24 +14,6 @@\r\n /** Translate a message to the native language of the user. */\r\n const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\r\n \r\n-namespace util {\r\n-/**\r\n- * Translation function.\r\n- * If no translation function is set, simply return the input.\r\n- */\r\n-inline std::string translate(const char* lit)\r\n-{\r\n-    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\r\n-}\r\n-/** Type to denote whether an orginal string literal is translatable */\r\n-template <bool translatable = true>\r\n-struct Original {\r\n-    const char* const lit;\r\n-    consteval Original(const char* str) : lit{str} { assert(lit); }\r\n-    std::string translate() const { return translatable ? util::translate(lit) : lit; }\r\n-};\r\n-} // namespace util\r\n-\r\n /**\r\n  * Bilingual messages:\r\n  *   - in GUI: user's native language + untranslated (i.e. English)\r\n@@ -41,13 +23,6 @@ struct bilingual_str {\r\n     std::string original;\r\n     std::string translated;\r\n \r\n-    bilingual_str() = default;\r\n-    bilingual_str(std::string original, std::string translated) : original{original}, translated{translated} {}\r\n-    template <bool translatable>\r\n-    bilingual_str(util::Original<translatable> original) : original{original.lit}, translated{original.translate()}\r\n-    {\r\n-    }\r\n-\r\n     bilingual_str& operator+=(const bilingual_str& rhs)\r\n     {\r\n         original += rhs.original;\r\n@@ -73,6 +48,26 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\r\n     return lhs;\r\n }\r\n \r\n+namespace util {\r\n+/**\r\n+ * Translation function.\r\n+ * If no translation function is set, simply return the input.\r\n+ */\r\n+inline std::string translate(const char* lit)\r\n+{\r\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\r\n+}\r\n+/** Type to denote whether an orginal string literal is translatable */\r\n+template <bool translatable = true>\r\n+struct Original {\r\n+    const char* const lit;\r\n+    consteval Original(const char* str) : lit{str} { assert(lit); }\r\n+    std::string translate() const { return translatable ? util::translate(lit) : lit; }\r\n+    bilingual_str str() const { return {lit, translate()}; }\r\n+    operator bilingual_str() const { return str(); }\r\n+};\r\n+} // namespace util\r\n+\r\n consteval auto _(util::Original<true> str) { return str; }\r\n \r\n /** Mark a bilingual_str as untranslated */\r\n",
      "created_at": "2024-10-09T14:32:19Z",
      "updated_at": "2024-10-09T14:32:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793642022",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793642022"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793707636",
      "pull_request_review_id": 2357070300,
      "id": 1793707636,
      "node_id": "PRRC_kwDOABII585q6c50",
      "diff_hunk": "@@ -431,7 +431,7 @@ void RestoreWalletActivity::finish()\n         QMessageBox::warning(m_parent_widget, tr(\"Restore wallet warning\"), QString::fromStdString(Join(m_warning_message, Untranslated(\"\\n\")).translated));\n     } else {\n         //: Title of message box which is displayed when the wallet is successfully restored.\n-        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(Untranslated(\"Wallet restored successfully \\n\").translated));\n+        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(Untranslated(\"Wallet restored successfully \\n\").translate()));",
      "path": "src/qt/walletcontroller.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(\"Wallet restored successfully \\n\"));\r\n```",
      "created_at": "2024-10-09T15:10:56Z",
      "updated_at": "2024-10-09T16:36:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793707636",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793707636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 434,
      "original_line": 434,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793744937",
      "pull_request_review_id": 2357070300,
      "id": 1793744937,
      "node_id": "PRRC_kwDOABII585q6mAp",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {\n+    const char* const lit;\n+    consteval Original(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return translatable ? util::translate(lit) : lit; }\n+};\n+template <unsigned num_params>\n+struct bilingual_fmt {\n+    const ConstevalFormatString<num_params> original;\n+    const bool translatable;\n+    template <bool translatable>\n+    consteval bilingual_fmt(Original<translatable> o) : original{o.lit}, translatable{translatable}\n+    {\n+    }\n+    std::string translate() { return translate(original.fmt); }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 37,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This function is currently unused, and it seems incorrectly implemented as it doesn't compile when actually used:\r\n\r\n```\r\nIn file included from ../../src/clientversion.cpp:9:\r\n../../src/util/translation.h:42:48: error: too many arguments to function call, expected 0, have 1\r\n    std::string translate() { return translate(original.fmt); }\r\n                                     ~~~~~~~~~ ^~~~~~~~~~~~\r\n../../src/util/translation.h:106:42: note: in instantiation of member function 'util::bilingual_fmt<1>::translate' requested here\r\n                         tfm::format(fmt.translate(), translate_arg(args, true)...)};\r\n                                         ^\r\n../../src/clientversion.cpp:74:33: note: in instantiation of function template specialization 'tinyformat::format<char[13]>' requested here\r\n    const auto copyright_devs = strprintf(_(COPYRIGHT_HOLDERS), COPYRIGHT_HOLDERS_SUBSTITUTION).translated;\r\n```\r\n\r\nSuggested fix to address both:\r\n\r\n<details>\r\n<summary>git diff on fad211bfef</summary>\r\n\r\n```diff\r\ndiff --git a/src/util/translation.h b/src/util/translation.h\r\nindex 0f230017d9..2de99f386d 100644\r\n--- a/src/util/translation.h\r\n+++ b/src/util/translation.h\r\n@@ -39,7 +39,7 @@ struct bilingual_fmt {\r\n     consteval bilingual_fmt(Original<translatable> o) : original{o.lit}, translatable{translatable}\r\n     {\r\n     }\r\n-    std::string translate() { return translate(original.fmt); }\r\n+    std::string translate() { return util::translate(original.fmt); }\r\n };\r\n } // namespace util\r\n \r\n@@ -103,7 +103,7 @@ bilingual_str format(util::bilingual_fmt<sizeof...(Args)> fmt, const Args&... ar\r\n         }\r\n     }};\r\n     return bilingual_str{tfm::format(fmt.original, translate_arg(args, false)...),\r\n-                         tfm::format(util::translate(fmt.original.fmt), translate_arg(args, true)...)};\r\n+                         tfm::format(fmt.translate(), translate_arg(args, true)...)};\r\n }\r\n } // namespace tinyformat\r\n \r\n\r\n```\r\n</details>",
      "created_at": "2024-10-09T15:34:24Z",
      "updated_at": "2024-10-09T16:36:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793744937",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793744937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793829614",
      "pull_request_review_id": 2357070300,
      "id": 1793829614,
      "node_id": "PRRC_kwDOABII585q66ru",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 23,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I would prefer templating this on an enum `{Translateable,Untranslateable}` for readability over the non-obvious `<{true,false}>` boolean",
      "created_at": "2024-10-09T16:33:25Z",
      "updated_at": "2024-10-09T16:36:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793829614",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793829614"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793837788",
      "pull_request_review_id": 2357676090,
      "id": 1793837788,
      "node_id": "PRRC_kwDOABII585q68rc",
      "diff_hunk": "@@ -107,7 +107,7 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n             }\n         }\n     } catch (const std::exception& e) {\n-        return ConfigError{ConfigStatus::FAILED, Untranslated(e.what())};\n+        return ConfigError{ConfigStatus::FAILED, Untranslated(std::string{e.what()})};",
      "path": "src/common/init.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa213aa88dfe9354c314a855c72ea33b3966c5c0",
      "in_reply_to_id": 1793416404,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793533834\r\n\r\nThanks, it's a good point that Untranslated(strprintf) is not equivalent to strprintf(Untranslated) in all cases. But I think those cases are basically broken because they are substituting non-english string fragments inside english strings. \r\n\r\nI created a branch which removes these (4) cases and adds a scripted-diff to remove the remaining strprintf(Untranslated) uses. This allows a lot of simplifications to this PR:\r\n\r\n- Untranslated function is simpler. Has a single definition, and is not overloaded to return different things depending on whether it is passed a std:::string or a c string.\r\n- \"Original\" struct no longer requires a template parameter, it can be a simple struct.\r\n- This commit can be dropped, the clang tidy commit can be dropped, and there's no need to convert add manual conversions from Untranslated to bilingual_str next commit.\r\n\r\nBranch is https://github.com/ryanofsky/bitcoin/commits/pr/tfmt, commits are:\r\n\r\n- ab4e567f4c8fc2b332e4f620567fab01ede4e1f4 refactor: Don't embed translated strings in untranslated strings.\r\n- d5a8e2b24ff46e0bc5e0fdc733663f5c5527efb0 scripted-diff: Replace strprintf(Untranslated) with Untranslated(strprintf)\r\n- 5e0b4f9df2786ca674df18bd4f8397e3189684be refactor: Check wallet format strings at compile time\r\n- 6183767bd30494876064fc0ffb1a69269d102b5b refactor: Pick translated string after format\r\n- 71d382650b5a0bfb21085e8f6bd22152d2148459 move-only: Detail_CheckNumFormatSpecifiers and G_TRANSLATION_FUN\r\n- 86ea5847925e9baff5c1f02976604a65770e2a72 refactor: Delay translation of Untranslated() or _() literals\r\n- 08bab0447027ace65f18a72c98b1c87683f8f378 refactor: Check translatable format strings at compile-time\r\n",
      "created_at": "2024-10-09T16:38:36Z",
      "updated_at": "2024-10-09T18:33:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793837788",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793837788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 110,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793913422",
      "pull_request_review_id": 2357676090,
      "id": 1793913422,
      "node_id": "PRRC_kwDOABII585q7PJO",
      "diff_hunk": "@@ -18,6 +18,48 @@\n #include <vector>\n \n namespace util {\n+template <unsigned num_params>\n+constexpr static void Detail_CheckNumFormatSpecifiers(std::string_view str)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa6cef7cf762a33755697dff20b75a9f235e96a9",
      "in_reply_to_id": 1793403826,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793403826\r\n\r\n> I don't think this is possible with a simple diff touching only lines that are already touched in this pull request. If you disagree, I am happy to accept any commit that compiles. I am also happy to review any pull request that achieves this and is split up from this pull request.\r\n\r\nI see what you mean: it's not possible to introduce a util::detail namespace because it would conflict with the util::detail in the hex_literals inline namespace.\r\n\r\nHowever, it doesn't actually make sense for there to be a detail namespace in an inline namespace, and this seemslikely to create problems for callers using the inline namespace, since they may have detail namespaces of their own. This was easy enough to fix so I just fixed it in the suggested branch.",
      "created_at": "2024-10-09T17:37:45Z",
      "updated_at": "2024-10-09T18:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793913422",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793913422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793914825",
      "pull_request_review_id": 2357676090,
      "id": 1793914825,
      "node_id": "PRRC_kwDOABII585q7PfJ",
      "diff_hunk": "@@ -17,12 +17,12 @@ template <unsigned NumArgs>\n inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n {\n     // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+    util::Detail_CheckNumFormatSpecifiers<NumArgs>(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa6cef7cf762a33755697dff20b75a9f235e96a9",
      "in_reply_to_id": 1793408147,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793544349\r\n\r\n> Thanks, added unrelated change to fix comment.\r\n\r\nThanks, comment makes sense. I knew there was probably some reason for doing it that way but couldn't figure out what it was.",
      "created_at": "2024-10-09T17:38:59Z",
      "updated_at": "2024-10-09T18:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793914825",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793914825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793944625",
      "pull_request_review_id": 2357676090,
      "id": 1793944625,
      "node_id": "PRRC_kwDOABII585q7Wwx",
      "diff_hunk": "@@ -22,6 +41,13 @@ struct bilingual_str {\n     std::string original;\n     std::string translated;\n \n+    bilingual_str() = default;\n+    bilingual_str(std::string original, std::string translated) : original{original}, translated{translated} {}\n+    template <bool translatable>\n+    bilingual_str(util::Original<translatable> original) : original{original.lit}, translated{original.translate()}\n+    {\n+    }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 41,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": 1793473728,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793642022\r\n\r\nYes I do think that's better and basically made the same change in my branch, though without the str() method since it seems it makes it a little less clear what return type is.",
      "created_at": "2024-10-09T18:04:59Z",
      "updated_at": "2024-10-09T18:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793944625",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793944625"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793948085",
      "pull_request_review_id": 2357676090,
      "id": 1793948085,
      "node_id": "PRRC_kwDOABII585q7Xm1",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 23,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": 1793829614,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> nit: I would prefer templating this on an enum `{Translateable,Untranslateable}` for readability over the non-obvious `<{true,false}>` boolean\r\n\r\nNote: with changes in suggested branch it should no longer be necessary for this to be templated.",
      "created_at": "2024-10-09T18:08:11Z",
      "updated_at": "2024-10-09T18:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793948085",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793948085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793951571",
      "pull_request_review_id": 2357676090,
      "id": 1793951571,
      "node_id": "PRRC_kwDOABII585q7YdT",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {\n+    const char* const lit;\n+    consteval Original(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return translatable ? util::translate(lit) : lit; }\n+};\n+template <unsigned num_params>\n+struct bilingual_fmt {\n+    const ConstevalFormatString<num_params> original;\n+    const bool translatable;\n+    template <bool translatable>\n+    consteval bilingual_fmt(Original<translatable> o) : original{o.lit}, translatable{translatable}\n+    {\n+    }\n+    std::string translate() { return translate(original.fmt); }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 37,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": 1793744937,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793744937\r\n\r\nThis is a good catch, but it seems better to just drop the template method instead of trying to fix it up and use it. It just seems to add complexity and it doesn't seem like there is another use-case for it.",
      "created_at": "2024-10-09T18:11:12Z",
      "updated_at": "2024-10-09T18:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793951571",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793951571"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793952960",
      "pull_request_review_id": 2357676090,
      "id": 1793952960,
      "node_id": "PRRC_kwDOABII585q7YzA",
      "diff_hunk": "@@ -431,7 +431,7 @@ void RestoreWalletActivity::finish()\n         QMessageBox::warning(m_parent_widget, tr(\"Restore wallet warning\"), QString::fromStdString(Join(m_warning_message, Untranslated(\"\\n\")).translated));\n     } else {\n         //: Title of message box which is displayed when the wallet is successfully restored.\n-        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(Untranslated(\"Wallet restored successfully \\n\").translated));\n+        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(Untranslated(\"Wallet restored successfully \\n\").translate()));",
      "path": "src/qt/walletcontroller.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": 1793707636,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793707636\r\n\r\nWould be reasonable to change this but no more change is actually required here with my suggested branch. \r\n\r\n",
      "created_at": "2024-10-09T18:12:22Z",
      "updated_at": "2024-10-09T18:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793952960",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793952960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 434,
      "original_line": 434,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793960605",
      "pull_request_review_id": 2357676090,
      "id": 1793960605,
      "node_id": "PRRC_kwDOABII585q7aqd",
      "diff_hunk": "@@ -7,12 +7,31 @@\n \n #include <tinyformat.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n /** Translate a message to the native language of the user. */\n const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 22,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": 1793488009,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793488009\r\n\r\n> in [aaaa4fb](https://github.com/bitcoin/bitcoin/commit/aaaa4fb20156b4375d92e1eca4acc90a425a1896): seems more straightforward to just extend `ConstevalStringLiteral` instead of creating a new `util::Original`? This would 1) minimize the diff and 2) I find `ConstevalStringLiteral` a much more helpful name than `Original`.\r\n\r\nI think this is only a question of naming since `Original` class is replacing `ConstevalStringLiteral` this commit. In by branch I called this ConstEvalTranslated, since it's the type name for values returned from the underscore function, and is not just referring to a generic string literal. But I didn't put much thought into the name and something else may be better.",
      "created_at": "2024-10-09T18:19:08Z",
      "updated_at": "2024-10-09T18:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793960605",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793960605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794944263",
      "pull_request_review_id": 2359460239,
      "id": 1794944263,
      "node_id": "PRRC_kwDOABII585q_K0H",
      "diff_hunk": "@@ -18,6 +18,48 @@\n #include <vector>\n \n namespace util {\n+template <unsigned num_params>\n+constexpr static void Detail_CheckNumFormatSpecifiers(std::string_view str)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa6cef7cf762a33755697dff20b75a9f235e96a9",
      "in_reply_to_id": 1793403826,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, replaced my commit with your 71d382650b5a0bfb21085e8f6bd22152d2148459",
      "created_at": "2024-10-10T08:17:54Z",
      "updated_at": "2024-10-10T08:17:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1794944263",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794944263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794955960",
      "pull_request_review_id": 2359482258,
      "id": 1794955960,
      "node_id": "PRRC_kwDOABII585q_Nq4",
      "diff_hunk": "@@ -107,7 +107,7 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n             }\n         }\n     } catch (const std::exception& e) {\n-        return ConfigError{ConfigStatus::FAILED, Untranslated(e.what())};\n+        return ConfigError{ConfigStatus::FAILED, Untranslated(std::string{e.what()})};",
      "path": "src/common/init.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa213aa88dfe9354c314a855c72ea33b3966c5c0",
      "in_reply_to_id": 1793416404,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> But I think those cases are basically broken because they are substituting non-english string fragments inside english strings.\r\n\r\nI am not sure I agree. `Untranslated(\"%s:%i \")` doesn't look English to me. To me, it looks like `Untranslated()` is sometimes used to annotate format strings that are valid in any language and do not need to be translated.\r\n\r\nAnd your fix doesn't prevent non-English fragments in English strings anyway, because you are using `operator+` to concatenate the English/`Untranslated` string with a translated (`_()`) string.\r\n\r\nSo I am not sure your suggestion is easy for developers to follow (having to sometimes emulate formatting with `operator+` and conversions, and other times not), but maybe I am missing something.",
      "created_at": "2024-10-10T08:23:26Z",
      "updated_at": "2024-10-10T11:46:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1794955960",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794955960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 110,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794960822",
      "pull_request_review_id": 2359489744,
      "id": 1794960822,
      "node_id": "PRRC_kwDOABII585q_O22",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 24,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fac722986e317861d131f95f6e8cfa8446bf8fba",
      "in_reply_to_id": 1793459318,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, renamed to `Translatable<bool _>`. I don't think `bilingual_*` makes sense, because it is only an internally used type to hold the hand of the compiler. The type is supposed to convert into a real `bilingual_str` either directly or via `bilingual_fmt` and tfm.",
      "created_at": "2024-10-10T08:26:36Z",
      "updated_at": "2024-10-10T08:26:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1794960822",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794960822"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 28,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794962369",
      "pull_request_review_id": 2359492234,
      "id": 1794962369,
      "node_id": "PRRC_kwDOABII585q_PPB",
      "diff_hunk": "@@ -22,6 +41,13 @@ struct bilingual_str {\n     std::string original;\n     std::string translated;\n \n+    bilingual_str() = default;\n+    bilingual_str(std::string original, std::string translated) : original{original}, translated{translated} {}\n+    template <bool translatable>\n+    bilingual_str(util::Original<translatable> original) : original{original.lit}, translated{original.translate()}\n+    {\n+    }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 41,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": 1793473728,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Yes I do think that's better and basically made the same change in my branch, though without the str() method since it seems it makes it a little less clear what return type is.\r\n\r\nOk, pushed my diff above, with the added `str()` removed again.",
      "created_at": "2024-10-10T08:27:39Z",
      "updated_at": "2024-10-10T08:27:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1794962369",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794962369"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794962653",
      "pull_request_review_id": 2359492742,
      "id": 1794962653,
      "node_id": "PRRC_kwDOABII585q_PTd",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 22,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fabb28f6c8f772d38917a23dfbda706292070ba1",
      "in_reply_to_id": 1793473436,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thanks, fixed",
      "created_at": "2024-10-10T08:27:52Z",
      "updated_at": "2024-10-10T08:27:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1794962653",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794962653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794969088",
      "pull_request_review_id": 2359503249,
      "id": 1794969088,
      "node_id": "PRRC_kwDOABII585q_Q4A",
      "diff_hunk": "@@ -7,12 +7,31 @@\n \n #include <tinyformat.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n /** Translate a message to the native language of the user. */\n const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 22,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": 1793488009,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> in [aaaa4fb](https://github.com/bitcoin/bitcoin/commit/aaaa4fb20156b4375d92e1eca4acc90a425a1896): seems more straightforward to just extend `ConstevalStringLiteral` instead of creating a new `util::Original`? This would 1) minimize the diff and 2) I find `ConstevalStringLiteral` a much more helpful name than `Original`.\r\n\r\nAre you sure it would minimize the diff? `Original` needs to deal with the concept of translations, which seems out-of-scope for `ConstevalStringLiteral`. Having two separate types to only deal with the things they care about seems easier. However, I may be missing something and if you find a smaller diff, I am happy to consider it.\r\n\r\nI've renamed the type to `Translatable<bool _>`.",
      "created_at": "2024-10-10T08:32:13Z",
      "updated_at": "2024-10-10T08:32:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1794969088",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794969088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794970457",
      "pull_request_review_id": 2359505471,
      "id": 1794970457,
      "node_id": "PRRC_kwDOABII585q_RNZ",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 23,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": 1793829614,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've renamed the type to `Translatable<bool _>`, which should clear this up without adding an enum?\r\n\r\nThe type is only supposed to be used internally, so I can also wrap it into a `detail::` if you think this is helpful?",
      "created_at": "2024-10-10T08:33:08Z",
      "updated_at": "2024-10-10T08:33:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1794970457",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794970457"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1795043415",
      "pull_request_review_id": 2359620333,
      "id": 1795043415,
      "node_id": "PRRC_kwDOABII585q_jBX",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {\n+    const char* const lit;\n+    consteval Original(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return translatable ? util::translate(lit) : lit; }\n+};\n+template <unsigned num_params>\n+struct bilingual_fmt {\n+    const ConstevalFormatString<num_params> original;\n+    const bool translatable;\n+    template <bool translatable>\n+    consteval bilingual_fmt(Original<translatable> o) : original{o.lit}, translatable{translatable}\n+    {\n+    }\n+    std::string translate() { return translate(original.fmt); }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 37,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": 1793744937,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Suggested fix to address both:\r\n\r\nGood catch. Though, I don't think the fix fixes all issues. There was a third that the `translatable` member field was unused. I've pushed a fix to fix all three issues.",
      "created_at": "2024-10-10T09:20:15Z",
      "updated_at": "2024-10-10T09:20:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1795043415",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1795043415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1795269088",
      "pull_request_review_id": 2360058562,
      "id": 1795269088,
      "node_id": "PRRC_kwDOABII585rAaHg",
      "diff_hunk": "@@ -107,7 +107,7 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n             }\n         }\n     } catch (const std::exception& e) {\n-        return ConfigError{ConfigStatus::FAILED, Untranslated(e.what())};\n+        return ConfigError{ConfigStatus::FAILED, Untranslated(std::string{e.what()})};",
      "path": "src/common/init.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa213aa88dfe9354c314a855c72ea33b3966c5c0",
      "in_reply_to_id": 1793416404,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To extend a bit: Previously (and after my pull right now), it was easy to toggle between translation and non-translation by replacing `_` with `Untranslated` (or vice-versa):\r\n\r\n```diff\r\n-strprintf(Untranslated(\"Cannot create database file %s\"), filename);\r\n+strprintf(           _(\"Cannot create database file %s\"), filename);\r\n```\r\n\r\nWith your change, the function call order has to be changed as well.\r\n\r\n\r\n",
      "created_at": "2024-10-10T11:45:14Z",
      "updated_at": "2024-10-10T11:45:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1795269088",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1795269088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 110,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796917617",
      "pull_request_review_id": 2362745062,
      "id": 1796917617,
      "node_id": "PRRC_kwDOABII585rGslx",
      "diff_hunk": "@@ -107,7 +107,7 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n             }\n         }\n     } catch (const std::exception& e) {\n-        return ConfigError{ConfigStatus::FAILED, Untranslated(e.what())};\n+        return ConfigError{ConfigStatus::FAILED, Untranslated(std::string{e.what()})};",
      "path": "src/common/init.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa213aa88dfe9354c314a855c72ea33b3966c5c0",
      "in_reply_to_id": 1793416404,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1795269088\r\n\r\nI don't see ability to swap `_` and `Untranslated` as a real benefit here, because it is pretty easy to switch between translated and non translated format strings either way, and if you are doing that it probably makes sense to actually look at format string arguments and see if they should be translated or untranslated for consistency. The PR also already loses the ability to swap between `_` and `Untranslated` in other places anyway since `bilingual_str` and `Translatable` structs are incompatible.\r\n\r\nYou are right that `Untranslated(\"%s:%i \")` is not an english string and the commit message in ab4e567f4c8fc2b332e4f620567fab01ede4e1f4 wasn't doing an a good job of describing changes there. I think most of the 54 cases changed in d5a8e2b24ff46e0bc5e0fdc733663f5c5527efb0 are untranslated English strings though, and having a compile time check to make sure non-english strings aren't inserted accidentally inside them is a good thing.\r\n\r\nIf you really disagree with this and prefer strprintf(Untranslated(...)) over Untranslated(strprintf(...)) I think we could also go in that direction with the opposite scripted-diff. I just think trying to support both and making `Untranslated` function return different things when it is called with a `char*` instead of `std::string`, and having to add extra casts here to work around that in this commit is unfortunate.\r\n\r\nIt seems like implementation of this PR could be simpler, API can be simpler, and code can be more consistent by having Untranslated return one thing or the other instead of both.",
      "created_at": "2024-10-11T12:54:57Z",
      "updated_at": "2024-10-11T13:53:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1796917617",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796917617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 110,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796975768",
      "pull_request_review_id": 2362745062,
      "id": 1796975768,
      "node_id": "PRRC_kwDOABII585rG6yY",
      "diff_hunk": "@@ -47,8 +48,30 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an original string literal is translatable */\n+template <bool translatable = true>\n+struct Translatable {\n+    const char* const lit;\n+    consteval Translatable(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return translatable ? util::translate(lit) : lit; }\n+    operator bilingual_str() const { return {lit, translate()}; }\n+};\n+} // namespace util\n+\n+consteval auto _(util::Translatable<true> str) { return str; }",
      "path": "src/util/translation.h",
      "position": 49,
      "original_position": 31,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "original_commit_id": "fa62737ae398bd56ef9e68b8d0a4d217cfcc532b",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: Delay translation of Untranslated() or _() literals\" (fa62737ae398bd56ef9e68b8d0a4d217cfcc532b)\r\n\r\nThinking about this more it seems like `_` function does not be consteval, and could just return a template type that inherits from `bilingual_str`, and includes the number of format specifiers included in the string as part of its type information. This would be nice because runtime semantics of `_` would be unchanged, it would still do the translation at time it is called, and there would be no need to make any `translated` -> `translate()` replacements. \r\n\r\nI think the main downside to this approach is would be need to refactor CheckNumFormatSpecifiers but there would be fewer changes overall. The other downside would be that _ would need to be aware the translated strings might be a format string and count the specifiers instead of just passing it along blindly. Neither downside would have to exist if c++ just allowed arguments to consteval functions to be treated as compile time constants, which they are by definition, but they did not do this (I think because stylistically they want to see compile-time arguments passed as `<>` arguments not `()` arguments.)\r\n\r\nNot sure about any of this, though, would need to experiment.\r\n\r\n",
      "created_at": "2024-10-11T13:40:14Z",
      "updated_at": "2024-10-11T13:55:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1796975768",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796975768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 81,
      "original_line": 70,
      "side": "RIGHT"
    }
  ]
}