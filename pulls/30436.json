{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436",
    "id": 1966221777,
    "node_id": "PR_kwDOABII5851MinR",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30436",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30436.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30436.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/c3a9c71c7077324bf0aa40f834f7537a14619340",
    "number": 30436,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "fix: Make TxidFromString() respect string_view length",
    "user": {
      "login": "hodlinator",
      "id": 172445034,
      "node_id": "U_kgDOCkdNag",
      "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hodlinator",
      "html_url": "https://github.com/hodlinator",
      "followers_url": "https://api.github.com/users/hodlinator/followers",
      "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
      "organizations_url": "https://api.github.com/users/hodlinator/orgs",
      "repos_url": "https://api.github.com/users/hodlinator/repos",
      "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hodlinator/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Prompted by comment in https://github.com/bitcoin/bitcoin/pull/30377#issuecomment-2208857200 (referring to https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378).",
    "labels": [],
    "created_at": "2024-07-12T09:07:31Z",
    "updated_at": "2024-07-19T05:56:29Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "cb4755f8e4a0e41e0e24ad7d09342453a6e7d093",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "hodlinator:2024-07_fix_TxidFromString",
      "ref": "2024-07_fix_TxidFromString",
      "sha": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 813856282,
        "node_id": "R_kgDOMIJ2Gg",
        "name": "bitcoin",
        "full_name": "hodlinator/bitcoin",
        "owner": {
          "login": "hodlinator",
          "id": 172445034,
          "node_id": "U_kgDOCkdNag",
          "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hodlinator",
          "html_url": "https://github.com/hodlinator",
          "followers_url": "https://api.github.com/users/hodlinator/followers",
          "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
          "organizations_url": "https://api.github.com/users/hodlinator/orgs",
          "repos_url": "https://api.github.com/users/hodlinator/repos",
          "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hodlinator/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/hodlinator/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/hodlinator/bitcoin",
        "archive_url": "https://api.github.com/repos/hodlinator/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hodlinator/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hodlinator/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hodlinator/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hodlinator/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hodlinator/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hodlinator/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hodlinator/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hodlinator/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hodlinator/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/hodlinator/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/hodlinator/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/hodlinator/bitcoin/events",
        "forks_url": "https://api.github.com/repos/hodlinator/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/hodlinator/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hodlinator/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hodlinator/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hodlinator/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/hodlinator/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hodlinator/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hodlinator/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hodlinator/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hodlinator/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hodlinator/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/hodlinator/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/hodlinator/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hodlinator/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hodlinator/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hodlinator/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:hodlinator/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/hodlinator/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/hodlinator/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hodlinator/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/hodlinator/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/hodlinator/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/hodlinator/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/hodlinator/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hodlinator/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/hodlinator/bitcoin/hooks",
        "svn_url": "https://github.com/hodlinator/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 221505,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-18T13:36:55Z",
        "created_at": "2024-06-11T22:00:51Z",
        "updated_at": "2024-06-11T22:00:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "efbf4e71ce8e3cd49ccdfb5e55e14fa4b338453c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35651,
        "stargazers_count": 77255,
        "watchers_count": 77255,
        "size": 263302,
        "default_branch": "master",
        "open_issues_count": 667,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-19T05:44:54Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-07-19T05:26:39Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 26,
    "deletions": 49,
    "changed_files": 6,
    "commits": 3,
    "review_comments": 42,
    "comments": 2
  },
  "events": [
    {
      "event": "commented",
      "id": 2225151232,
      "node_id": "IC_kwDOABII586EoR0A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2225151232",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T09:07:34Z",
      "updated_at": "2024-07-19T00:00:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30436).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [maflcko](https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2180659057), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2186195988), [stickies-v](https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2185910679) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2225151232",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "reviewed",
      "id": 2174408053,
      "node_id": "PRR_kwDOABII586BmtV1",
      "url": null,
      "actor": null,
      "commit_id": "be23937392195c773811fdfc0d723783b2dace67",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "left some comments",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2174408053",
      "submitted_at": "2024-07-12T10:41:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13486294275,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMj2IUD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13486294275",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T12:00:28Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgwMTQwNDcxOWRiZGJiYzMyN2IyZjFiYzI0Y2IxMWI2ZDUyZTNmMjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "tree": {
        "sha": "3da87d74f40182282221225fc91697b2158a8de5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3da87d74f40182282221225fc91697b2158a8de5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3da87d74f40182282221225fc91697b2158a8de5\nparent 33af14e31b9fa436029a2bb8c2b11de8feb32f86\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1720784777 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1720785692 +0200\n\ntest: Verify uint256S() ignores garbage suffix\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQDTaLDCMSfYSeNM9bD5G5P55OvhNq9lpwufHYg/AQZFEDCeGv5WBOj2S6+C0YMm3Wm\n0ZIVI8gvsuBM9S9V80MwA=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33af14e31b9fa436029a2bb8c2b11de8feb32f86",
          "sha": "33af14e31b9fa436029a2bb8c2b11de8feb32f86",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/33af14e31b9fa436029a2bb8c2b11de8feb32f86"
        }
      ],
      "message": "test: Verify uint256S() ignores garbage suffix",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-12T12:01:32Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-12T11:46:17Z"
      },
      "sha": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13486307936,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMj2Lpg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13486307936",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T12:01:52Z"
    },
    {
      "event": "reviewed",
      "id": 2174597881,
      "node_id": "PRR_kwDOABII586Bnbr5",
      "url": null,
      "actor": null,
      "commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2174597881",
      "submitted_at": "2024-07-12T12:21:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "reviewed",
      "id": 2174609468,
      "node_id": "PRR_kwDOABII586Bneg8",
      "url": null,
      "actor": null,
      "commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2174609468",
      "submitted_at": "2024-07-12T12:28:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13491453703,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMkJz8H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13491453703",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T19:25:08Z"
    },
    {
      "event": "reviewed",
      "id": 2179521737,
      "node_id": "PRR_kwDOABII586B6NzJ",
      "url": null,
      "actor": null,
      "commit_id": "3d0aec126f8103310b741a5c21e94cf537fcd191",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2179521737",
      "submitted_at": "2024-07-16T08:06:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13517355588,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMlsnpE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13517355588",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T08:46:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13517678424,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMlt2dY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13517678424",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T09:10:26Z"
    },
    {
      "event": "reviewed",
      "id": 2179724266,
      "node_id": "PRR_kwDOABII586B6_Pq",
      "url": null,
      "actor": null,
      "commit_id": "d20fc9cdffbf029bf1c6162ed22eaac6c320fa1a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2179724266",
      "submitted_at": "2024-07-16T09:34:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "reviewed",
      "id": 2179725098,
      "node_id": "PRR_kwDOABII586B6_cq",
      "url": null,
      "actor": null,
      "commit_id": "d20fc9cdffbf029bf1c6162ed22eaac6c320fa1a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2179725098",
      "submitted_at": "2024-07-16T09:35:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY3N2Q5NjFkOTI2NDA1NjM3ZGZiZGZiOWE5YmFlYTFmYWI0ZjFiN2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "tree": {
        "sha": "3b3bde8879265a5200d5c7a0297efc116bb743b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b3bde8879265a5200d5c7a0297efc116bb743b1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3b3bde8879265a5200d5c7a0297efc116bb743b1\nparent 801404719dbdbbc327b2f1bc24cb11b6d52e3f27\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721124959 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721124959 +0200\n\nrefactor: Change base_blob::SetHex() to take std::string_view\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQAqFY5uHOd/UUXPfBMH3ybqjlY21nxRDZQPenrcjSSov5Ny+v/BKBZVxUsrw1Fsf5G\njgqnqR4TwrVFR2YFythwU=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
          "sha": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/801404719dbdbbc327b2f1bc24cb11b6d52e3f27"
        }
      ],
      "message": "refactor: Change base_blob::SetHex() to take std::string_view",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-16T10:15:59Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-16T10:15:59Z"
      },
      "sha": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMzYTljNzFjNzA3NzMyNGJmMGFhNDBmODM0Zjc1MzdhMTQ2MTkzNDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3a9c71c7077324bf0aa40f834f7537a14619340",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c3a9c71c7077324bf0aa40f834f7537a14619340",
      "tree": {
        "sha": "1f83527c51f0761674019bad711ccabca7173f24",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f83527c51f0761674019bad711ccabca7173f24"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1f83527c51f0761674019bad711ccabca7173f24\nparent f77d961d926405637dfbdfb9a9baea1fab4f1b7b\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1720783615 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721124963 +0200\n\nfix: Make TxidFromString() respect string length\n\nAppears to have been a fully dormant bug. Introduced since inception of TxidFromString(), discussed in https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQE7V5ES2Xdlt6sKY86MVblDwc1uqAKxwM+T0CUTTe5NW+QR+hdsJ8N7XRgh2trFk9U\nwDFW37JeW5H3XNidy7Og0=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
          "sha": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f77d961d926405637dfbdfb9a9baea1fab4f1b7b"
        }
      ],
      "message": "fix: Make TxidFromString() respect string length\n\nAppears to have been a fully dormant bug. Introduced since inception of TxidFromString(), discussed in https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378.",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-16T10:16:03Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-12T11:26:55Z"
      },
      "sha": "c3a9c71c7077324bf0aa40f834f7537a14619340"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13518608098,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMlxZbi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13518608098",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T10:16:22Z"
    },
    {
      "event": "reviewed",
      "id": 2180659057,
      "node_id": "PRR_kwDOABII586B-jdx",
      "url": null,
      "actor": null,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK c3a9c71c7077324bf0aa40f834f7537a14619340 🐞\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: ACK c3a9c71c7077324bf0aa40f834f7537a14619340 🐞\r\n0oe/WjDO2mSwVc5Blutf21rEvpYjnqCdQdO76x2UhqHObkUZghAnaWmbpcKtyptM6F8bw8dIl8IU3+TJAkcnBg==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2180659057",
      "submitted_at": "2024-07-16T15:41:05Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "review_requested",
      "id": 13538022192,
      "node_id": "RRE_lADOABII586PWwz2zwAAAAMm7dMw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13538022192",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-17T14:46:37Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 2183757955,
      "node_id": "PRR_kwDOABII586CKYCD",
      "url": null,
      "actor": null,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK c3a9c71c7077324bf0aa40f834f7537a14619340",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2183757955",
      "submitted_at": "2024-07-17T18:36:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13541490928,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMnIsDw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13541490928",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-17T19:04:47Z"
    },
    {
      "event": "reviewed",
      "id": 2184843613,
      "node_id": "PRR_kwDOABII586COhFd",
      "url": null,
      "actor": null,
      "commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2184843613",
      "submitted_at": "2024-07-18T06:36:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13551220922,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMntzi6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13551220922",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T07:37:18Z"
    },
    {
      "event": "reviewed",
      "id": 2186195988,
      "node_id": "PRR_kwDOABII586CTrQU",
      "url": null,
      "actor": null,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK c3a9c71c7077324bf0aa40f834f7537a14619340\r\n\r\nI think the changes are all good, but the PR and the most important commit \"fix: Make TxidFromString() respect string length\" (c3a9c71c7077324bf0aa40f834f7537a14619340) are lacking a good description that actually says what the bug is.\r\n\r\nI think they should say that currently `TxidFromString` takes a string_view parameter, but internally it is calling the `uint256S` function which expects a nul-terminated string. If `TxidFromString` is called with a string that not contain `\\0`, the implementation will read the string and potentially uninitialized memory after it until it finds any character which is not a hex digit.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2186195988",
      "submitted_at": "2024-07-18T16:08:14Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "review_requested",
      "id": 13558932680,
      "node_id": "RRE_lADOABII586PWwz2zwAAAAMoLOTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13558932680",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T16:08:18Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 2185910679,
      "node_id": "PRR_kwDOABII586CSlmX",
      "url": null,
      "actor": null,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK c3a9c71c7077324bf0aa40f834f7537a14619340,\r\n\r\n> are lacking a good description that actually says what the bug is.\r\n\r\nI agree, I spent quite a bit of time getting to the bottom of this and more documentation would have sped that up\r\n\r\n> but internally it is calling the uint256S function which expects a nul-terminated string\r\n\r\nMaybe I'm being too pedantic (or wrong), but I'm not sure this is 100% correct? I don't think the `uint256S(std::string_view str)` `str` needs to be null-terminated. Rather, I think the problem is that by removing the string length data in `TxidFromstring` (by passing `std::string_view::data` instead of `std::string_view`), `uint256S` has to construct a `std::string_view` from the `const char*` without length information, which is dangerous (as you describe) when the initial `string_view` was not null-terminated, e.g. because it is a substring?\r\n\r\nFor example, this test (with a non-null terminated string) fails before c3a9c71c7077324bf0aa40f834f7537a14619340 and succeeds after:\r\n\r\n```cp\r\n//txid \"0x74d681e0e03bafa802c8aa084379aa98d9fcd632ddc2ed9782b586ec87451f20\"\r\nconst char arr[66] = {\r\n    '7', '4', 'd', '6', '8', '1', 'e', '0', 'e', '0', '3', 'b', 'a', 'f', 'a', '8',\r\n    '0', '2', 'c', '8', 'a', 'a', '0', '8', '4', '3', '7', '9', 'a', 'a', '9', '8',\r\n    'd', '9', 'f', 'c', 'd', '6', '3', '2', 'd', 'd', 'c', '2', 'e', 'd', '9', '7',\r\n    '8', '2', 'b', '5', '8', '6', 'e', 'c', '8', '7', '4', '5', '1', 'f', '2', '0',\r\n    'a', 'b' // extra 2 characters\r\n};\r\nconst char* ptr = arr;  // not null-terminated\r\nstd::string_view view{ptr, 64};\r\nBOOST_CHECK_EQUAL(TxidFromString(view).ToString(), view);\r\n```",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2185910679",
      "submitted_at": "2024-07-18T20:56:00Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "reviewed",
      "id": 2187172873,
      "node_id": "PRR_kwDOABII586CXZwJ",
      "url": null,
      "actor": null,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2185910679\r\n\r\n> > but internally it is calling the uint256S function which expects a nul-terminated string\r\n> \r\n> Maybe I'm being too pedantic (or wrong), but I'm not sure this is 100% correct? I don't think the `uint256S(std::string_view str)` `str` needs to be null-terminated.\r\n\r\nYes, both explanations are saying the same thing but mine is unnecessarily confusing. The `uint256S` function \"expects\" a nul-terminated string because it accepts a bare `char*`  argument, and in C bare `char*` strings are almost always nul-terminated. But it does not \"need\" a nul-terminated string. The string can be terminated with any character other than `0123456789AaBbCcDdEeFf`, as mentioned in the next sentence.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2187172873",
      "submitted_at": "2024-07-19T02:17:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "commented",
      "id": 2238241424,
      "node_id": "IC_kwDOABII586FaNqQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2238241424",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-19T05:42:00Z",
      "updated_at": "2024-07-19T05:42:00Z",
      "author_association": "MEMBER",
      "body": "> > are lacking a good description that actually says what the bug is.\r\n> \r\n> I agree, I spent quite a bit of time getting to the bottom of this and more documentation would have sped that up\r\n\r\nI agree as well. Thanks for brining it up! This should be fixed before merge, other than that, I'd say it is ready.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2238241424",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675652818",
      "pull_request_review_id": 2174408053,
      "id": 1675652818,
      "node_id": "PRRC_kwDOABII585j4G7S",
      "diff_hunk": "@@ -68,7 +68,7 @@ using Wtxid = transaction_identifier<true>;\n \n inline Txid TxidFromString(std::string_view str)\n {\n-    return Txid::FromUint256(uint256S(str.data()));\n+    return Txid::FromUint256(uint256S(str));",
      "path": "src/util/transaction_identifier.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "a4ead4e51c04c75c7837fb53116062e79f502bbd",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in a4ead4e51c04c75c7837fb53116062e79f502bbd (commit message): Could link directly to the discussion https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378 ?",
      "created_at": "2024-07-12T10:26:47Z",
      "updated_at": "2024-07-12T10:41:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675652818",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675652818"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675658574",
      "pull_request_review_id": 2174408053,
      "id": 1675658574,
      "node_id": "PRRC_kwDOABII585j4IVO",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::LeftTrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Both sides are trimmed. My recommendation would be to drop the first commit and instead add a unit test:\r\n\r\n```diff\r\ndiff --git a/src/test/uint256_tests.cpp b/src/test/uint256_tests.cpp\r\nindex b7892a2139..5602b33e17 100644\r\n--- a/src/test/uint256_tests.cpp\r\n+++ b/src/test/uint256_tests.cpp\r\n@@ -102,6 +102,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\r\n     BOOST_CHECK(uint256S(\"0x\"+MaxL.ToString()) == MaxL);\r\n     BOOST_CHECK(uint256S(R1L.ToString()) == R1L);\r\n     BOOST_CHECK(uint256S(\"   0x\"+R1L.ToString()+\"   \") == R1L);\r\n+    BOOST_CHECK(uint256S(\"   0x\" + R1L.ToString() + \"-trash;%^&   \") == R1L);\r\n+    BOOST_CHECK(uint256S(\"\\t \\n  \\n \\f\\n\\r\\t\\v\\t   0x\" + R1L.ToString() + \"  \\t \\n  \\n \\f\\n\\r\\t\\v\\t \") == R1L);\r\n     BOOST_CHECK(uint256S(\"\") == ZeroL);\r\n     BOOST_CHECK(R1L == uint256S(R1ArrayHex));\r\n     BOOST_CHECK(uint256(R1L) == R1L);\r\n@@ -115,6 +117,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\r\n     BOOST_CHECK(uint160S(\"0x\"+MaxS.ToString()) == MaxS);\r\n     BOOST_CHECK(uint160S(R1S.ToString()) == R1S);\r\n     BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"   \") == R1S);\r\n+    BOOST_CHECK(uint160S(\"   0x\" + R1S.ToString() + \"-trash;%^&   \") == R1S);\r\n+    BOOST_CHECK(uint160S(\" \\t \\n  \\n \\f\\n\\r\\t\\v\\t  0x\" + R1S.ToString() + \"   \\t \\n  \\n \\f\\n\\r\\t\\v\\t\") == R1S);\r\n     BOOST_CHECK(uint160S(\"\") == ZeroS);\r\n     BOOST_CHECK(R1S == uint160S(R1ArrayHex));\r\n \r\n```\r\n\r\nThen, you can replace this call in the second commit with the existing string view Trim function.\r\n\r\n(The unit test also checks that trailing trash is ignored. (Which is sad, but existing behavior, so probably good to keep for now))",
      "created_at": "2024-07-12T10:32:20Z",
      "updated_at": "2024-07-12T10:41:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675658574",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675658574"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675665249",
      "pull_request_review_id": 2174408053,
      "id": 1675665249,
      "node_id": "PRRC_kwDOABII585j4J9h",
      "diff_hunk": "@@ -58,8 +58,9 @@ class base_blob\n     friend constexpr bool operator<(const base_blob& a, const base_blob& b) { return a.Compare(b) < 0; }\n \n     std::string GetHex() const;\n-    void SetHex(const char* psz);\n-    void SetHex(const std::string& str);\n+    void SetHex(std::string_view str);\n+    inline void SetHex(const char* psz) { SetHex(std::string_view{psz}); }\n+    inline void SetHex(const std::string& str) { SetHex(std::string_view{str}); }",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 8,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The compiler will generate those, no? So seems fine to remove?",
      "created_at": "2024-07-12T10:39:02Z",
      "updated_at": "2024-07-12T10:41:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675665249",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675665249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675665868",
      "pull_request_review_id": 2174408053,
      "id": 1675665868,
      "node_id": "PRRC_kwDOABII585j4KHM",
      "diff_hunk": "@@ -132,5 +133,15 @@ inline uint256 uint256S(const std::string& str)\n     rv.SetHex(str);\n     return rv;\n }",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 15,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same (the compiler will generate those)?",
      "created_at": "2024-07-12T10:39:41Z",
      "updated_at": "2024-07-12T10:41:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675665868",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675665868"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675666153",
      "pull_request_review_id": 2174408053,
      "id": 1675666153,
      "node_id": "PRRC_kwDOABII585j4KLp",
      "diff_hunk": "@@ -132,5 +133,15 @@ inline uint256 uint256S(const std::string& str)\n     rv.SetHex(str);\n     return rv;\n }",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 15,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": 1675665868,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also, the same for `inline uint160 uint160S(`.",
      "created_at": "2024-07-12T10:39:58Z",
      "updated_at": "2024-07-12T10:41:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675666153",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675666153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675668347",
      "pull_request_review_id": 2174432766,
      "id": 1675668347,
      "node_id": "PRRC_kwDOABII585j4Kt7",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::LeftTrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": 1675658574,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also, could add a unit test that truncated input is parsed? (Sad as well, but again existing behavior, so probably good to keep for now)",
      "created_at": "2024-07-12T10:42:07Z",
      "updated_at": "2024-07-12T10:42:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675668347",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675668347"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675687795",
      "pull_request_review_id": 2174464053,
      "id": 1675687795,
      "node_id": "PRRC_kwDOABII585j4Pdz",
      "diff_hunk": "@@ -68,7 +68,7 @@ using Wtxid = transaction_identifier<true>;\n \n inline Txid TxidFromString(std::string_view str)\n {\n-    return Txid::FromUint256(uint256S(str.data()));\n+    return Txid::FromUint256(uint256S(str));",
      "path": "src/util/transaction_identifier.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "a4ead4e51c04c75c7837fb53116062e79f502bbd",
      "in_reply_to_id": 1675652818,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(same commit): Also, you'd have to fix `WtxidFromString(` in the same commit?",
      "created_at": "2024-07-12T11:02:18Z",
      "updated_at": "2024-07-12T11:02:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675687795",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675687795"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675758398",
      "pull_request_review_id": 2174582054,
      "id": 1675758398,
      "node_id": "PRRC_kwDOABII585j4gs-",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::LeftTrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": 1675658574,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the feedback, I really enjoyed removing the overloads based on the other comments! :)\r\n\r\nMessed up the first force-push somehow, here is a comparison between what you reviewed and the current state:\r\nhttps://github.com/bitcoin/bitcoin/compare/be23937392195c773811fdfc0d723783b2dace67..fcec222ae9386342ff1342e096255ca1ff74964d\r\n\r\n> Also, could add a unit test that truncated input is parsed?\r\n\r\nDo you mean that `base_blob::SetHex()` allows parsing \"half bytes\" like `\"0xF\"`, while `ParseHex()` would fail on `\"F\"` and require `\"0F\"` (maybe `\"F0\"`)?",
      "created_at": "2024-07-12T12:12:35Z",
      "updated_at": "2024-07-12T12:12:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675758398",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675758398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675767961",
      "pull_request_review_id": 2174597881,
      "id": 1675767961,
      "node_id": "PRRC_kwDOABII585j4jCZ",
      "diff_hunk": "@@ -789,8 +789,9 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         for (size_t i = (fCheckMemPool) ? 1 : 0; i < uriParts.size(); i++)\n         {\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n+            const std::string_view part{uriParts[i]};\n+            const std::string_view strTxid{part.substr(0, part.find('-'))};\n+            const std::string_view strOutput{part.substr(strTxid.size()+1)};",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is wrong and not a refactor. It crashes the node for me. Previously it did not crash.\r\n\r\n```\r\n node0 stderr terminate called after throwing an instance of 'std::out_of_range'\r\n  what():  basic_string_view::substr: __pos (which is 67) > __size (which is 66) \r\n```",
      "created_at": "2024-07-12T12:21:53Z",
      "updated_at": "2024-07-12T12:21:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675767961",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675767961"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675771306",
      "pull_request_review_id": 2174603411,
      "id": 1675771306,
      "node_id": "PRRC_kwDOABII585j4j2q",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::LeftTrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": 1675658574,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Do you mean that `base_blob::SetHex()` allows parsing \"half bytes\" like `\"0xF\"`, while `ParseHex()` would fail on `\"F\"` and require `\"0F\"` (maybe `\"F0\"`)?\r\n\r\nYeah,  it looks like this is already tested in `BOOST_AUTO_TEST_CASE(parse)`:\r\n\r\n```cpp\r\n    {\r\n        std::string s_1{uint256::ONE.GetHex()};\r\n        BOOST_CHECK_EQUAL(uint256S(\"1\\0\").GetHex(), s_1);\r\n        BOOST_CHECK_EQUAL(uint256S(std::string{\"1\\0\", 2}).GetHex(), s_1);\r\n        BOOST_CHECK_EQUAL(uint256S(\"0x1\").GetHex(), s_1);\r\n        BOOST_CHECK_EQUAL(uint256S(\" 0x1\").GetHex(), s_1);\r\n        BOOST_CHECK_EQUAL(uint256S(\" 1\").GetHex(), s_1);\r\n    }\r\n",
      "created_at": "2024-07-12T12:25:03Z",
      "updated_at": "2024-07-12T12:25:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675771306",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675771306"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675773282",
      "pull_request_review_id": 2174606323,
      "id": 1675773282,
      "node_id": "PRRC_kwDOABII585j4kVi",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::LeftTrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": 1675658574,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Messed up the first force-push somehow, here is a comparison between what you reviewed and the current state:\r\n> https://github.com/bitcoin/bitcoin/compare/be23937392195c773811fdfc0d723783b2dace67..fcec222ae9386342ff1342e096255ca1ff74964d\r\n\r\nNo worries. I do proper reviews locally anyway, as I don't trust GitHub, due to its history of data loss and data corruption.",
      "created_at": "2024-07-12T12:26:43Z",
      "updated_at": "2024-07-12T12:26:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675773282",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675773282"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675775175",
      "pull_request_review_id": 2174609468,
      "id": 1675775175,
      "node_id": "PRRC_kwDOABII585j4kzH",
      "diff_hunk": "@@ -112,21 +111,11 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is a separate function because the constructor uint256(std::string_view str) can result\n+ * in dangerously catching uint256(0) via std::string_view(const char*).",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 19,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is fixed in C++23. Also, most C++17 compilers would already issue a compile warning for this.",
      "created_at": "2024-07-12T12:28:28Z",
      "updated_at": "2024-07-12T12:28:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675775175",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675775175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675824921",
      "pull_request_review_id": 2174687444,
      "id": 1675824921,
      "node_id": "PRRC_kwDOABII585j4w8Z",
      "diff_hunk": "@@ -789,8 +789,9 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         for (size_t i = (fCheckMemPool) ? 1 : 0; i < uriParts.size(); i++)\n         {\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n+            const std::string_view part{uriParts[i]};\n+            const std::string_view strTxid{part.substr(0, part.find('-'))};\n+            const std::string_view strOutput{part.substr(strTxid.size()+1)};",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "in_reply_to_id": 1675767961,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm.. may have managed to figure out why it would not fail before. Old code:\r\n```C++\r\nstd::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\r\nstd::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\r\n```\r\nIf `.find('-')` returned `npos` and `npos = size_type(-1)`, then `+1` would make it `0`, so it would not throw in `substr()`. This would happen for an empty `uriParts[i]`, or non-empty not containing `-` (in this latter case it might have failed parsing `strOutput` if encountering `A-F`).\r\n",
      "created_at": "2024-07-12T13:00:36Z",
      "updated_at": "2024-07-12T13:00:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675824921",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675824921"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1676377257",
      "pull_request_review_id": 2175597723,
      "id": 1676377257,
      "node_id": "PRRC_kwDOABII585j63yp",
      "diff_hunk": "@@ -789,8 +789,9 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         for (size_t i = (fCheckMemPool) ? 1 : 0; i < uriParts.size(); i++)\n         {\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n+            const std::string_view part{uriParts[i]};\n+            const std::string_view strTxid{part.substr(0, part.find('-'))};\n+            const std::string_view strOutput{part.substr(strTxid.size()+1)};",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "in_reply_to_id": 1675767961,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Improved testing and error reporting in 01fa92928e6f9509935840a8c57d29774a0d14a1.\r\n\r\nMade 3d0aec126f8103310b741a5c21e94cf537fcd191 use `util::Split`. It allocates a vector for each parsed UTXO but is more readable than my former approach.",
      "created_at": "2024-07-12T19:31:56Z",
      "updated_at": "2024-07-12T19:31:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1676377257",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1676377257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1676379848",
      "pull_request_review_id": 2175601673,
      "id": 1676379848,
      "node_id": "PRRC_kwDOABII585j64bI",
      "diff_hunk": "@@ -112,21 +111,11 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is a separate function because the constructor uint256(std::string_view str) can result\n+ * in dangerously catching uint256(0) via std::string_view(const char*).",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 19,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "in_reply_to_id": 1675775175,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e9a436b7796cb285730d179fb3317ad50234ab04 changed it to: `This is not a uint256 constructor because of historical fears of uint256(0) resolving to a NULL string and crashing.`",
      "created_at": "2024-07-12T19:34:56Z",
      "updated_at": "2024-07-12T19:34:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1676379848",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1676379848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1678947516",
      "pull_request_review_id": 2179521737,
      "id": 1678947516,
      "node_id": "PRRC_kwDOABII585kErS8",
      "diff_hunk": "@@ -789,8 +789,11 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         for (size_t i = (fCheckMemPool) ? 1 : 0; i < uriParts.size(); i++)\n         {\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n+            const std::vector<std::string_view> utxo_pair = util::Split<std::string_view>(uriParts[i], '-');\n+            if (utxo_pair.size() != 2)\n+                return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: expected one '-' separator for UTXO in \\\"\" + uriParts[i] + \"\\\"\");\n+            const auto strTxid{utxo_pair[0]};\n+            const auto strOutput{utxo_pair[1]};\n \n             if (!ParseInt32(strOutput, &nOutput) || !IsHex(strTxid))\n                 return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: couldn't read \\\"<hexadecimal txid>-<decimal output index>\\\" from \\\"\" + uriParts[i] + \"\\\"\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "3d0aec126f8103310b741a5c21e94cf537fcd191",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is probably fine to rework the error strings in `rest.cpp`, but seems better to leave for a follow-up, given that there are other follow-ups as well: https://github.com/bitcoin/bitcoin/pull/30444#issuecomment-2227109971 ?\r\n\r\nThis way, the changes here would be focussed on one thing (fixing the possible UB).",
      "created_at": "2024-07-16T08:06:34Z",
      "updated_at": "2024-07-16T08:06:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1678947516",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1678947516"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 799,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679008780",
      "pull_request_review_id": 2179619081,
      "id": 1679008780,
      "node_id": "PRRC_kwDOABII585kE6QM",
      "diff_hunk": "@@ -789,8 +789,11 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         for (size_t i = (fCheckMemPool) ? 1 : 0; i < uriParts.size(); i++)\n         {\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n+            const std::vector<std::string_view> utxo_pair = util::Split<std::string_view>(uriParts[i], '-');\n+            if (utxo_pair.size() != 2)\n+                return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: expected one '-' separator for UTXO in \\\"\" + uriParts[i] + \"\\\"\");\n+            const auto strTxid{utxo_pair[0]};\n+            const auto strOutput{utxo_pair[1]};\n \n             if (!ParseInt32(strOutput, &nOutput) || !IsHex(strTxid))\n                 return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: couldn't read \\\"<hexadecimal txid>-<decimal output index>\\\" from \\\"\" + uriParts[i] + \"\\\"\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "3d0aec126f8103310b741a5c21e94cf537fcd191",
      "in_reply_to_id": 1678947516,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated to avoid changing existing error strings. Also reordered commits, let me know if you prefer I break off the last 2 into a separate PR.\r\n\r\n(Also added some info to commit message for 735865af6308bd76063d48d145ca5761fc839405 and used curly-initialization for the `Split()` result).",
      "created_at": "2024-07-16T08:49:38Z",
      "updated_at": "2024-07-16T08:52:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679008780",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679008780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 799,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679027950",
      "pull_request_review_id": 2179649435,
      "id": 1679027950,
      "node_id": "PRRC_kwDOABII585kE-7u",
      "diff_hunk": "@@ -789,8 +789,11 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         for (size_t i = (fCheckMemPool) ? 1 : 0; i < uriParts.size(); i++)\n         {\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n+            const std::vector<std::string_view> utxo_pair = util::Split<std::string_view>(uriParts[i], '-');\n+            if (utxo_pair.size() != 2)\n+                return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: expected one '-' separator for UTXO in \\\"\" + uriParts[i] + \"\\\"\");\n+            const auto strTxid{utxo_pair[0]};\n+            const auto strOutput{utxo_pair[1]};\n \n             if (!ParseInt32(strOutput, &nOutput) || !IsHex(strTxid))\n                 return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: couldn't read \\\"<hexadecimal txid>-<decimal output index>\\\" from \\\"\" + uriParts[i] + \"\\\"\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "3d0aec126f8103310b741a5c21e94cf537fcd191",
      "in_reply_to_id": 1678947516,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I'd say a separate PR would be better.",
      "created_at": "2024-07-16T09:02:22Z",
      "updated_at": "2024-07-16T09:02:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679027950",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679027950"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 799,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679040564",
      "pull_request_review_id": 2179670044,
      "id": 1679040564,
      "node_id": "PRRC_kwDOABII585kFCA0",
      "diff_hunk": "@@ -789,8 +789,11 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         for (size_t i = (fCheckMemPool) ? 1 : 0; i < uriParts.size(); i++)\n         {\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n+            const std::vector<std::string_view> utxo_pair = util::Split<std::string_view>(uriParts[i], '-');\n+            if (utxo_pair.size() != 2)\n+                return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: expected one '-' separator for UTXO in \\\"\" + uriParts[i] + \"\\\"\");\n+            const auto strTxid{utxo_pair[0]};\n+            const auto strOutput{utxo_pair[1]};\n \n             if (!ParseInt32(strOutput, &nOutput) || !IsHex(strTxid))\n                 return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: couldn't read \\\"<hexadecimal txid>-<decimal output index>\\\" from \\\"\" + uriParts[i] + \"\\\"\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "3d0aec126f8103310b741a5c21e94cf537fcd191",
      "in_reply_to_id": 1678947516,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Dropped 2 commits from this PR.",
      "created_at": "2024-07-16T09:11:41Z",
      "updated_at": "2024-07-16T09:11:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679040564",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679040564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 799,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679074765",
      "pull_request_review_id": 2179724266,
      "id": 1679074765,
      "node_id": "PRRC_kwDOABII585kFKXN",
      "diff_hunk": "@@ -68,11 +68,11 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view TrimStringView(std::string_view str, std::string_view pattern = \" \\f\\n\\r\\t\\v\")\n {\n-    std::string::size_type front = str.find_first_not_of(pattern);\n+    std::string_view::size_type front = str.find_first_not_of(pattern);\n     if (front == std::string::npos) {",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 6,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "d20fc9cdffbf029bf1c6162ed22eaac6c320fa1a",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "not sure about this change. The types are the same either way and below is still using `std::string::npos`. Also, it has nothing to do with `base_blob` in the commit.",
      "created_at": "2024-07-16T09:34:48Z",
      "updated_at": "2024-07-16T09:34:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679074765",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679074765"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 71,
      "start_side": "LEFT",
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679075260",
      "pull_request_review_id": 2179725098,
      "id": 1679075260,
      "node_id": "PRRC_kwDOABII585kFKe8",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": 7,
      "original_position": 21,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "d20fc9cdffbf029bf1c6162ed22eaac6c320fa1a",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here. Has nothing to do with the `base_blob` commit.",
      "created_at": "2024-07-16T09:35:11Z",
      "updated_at": "2024-07-16T09:35:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679075260",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679075260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 87,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679085201",
      "pull_request_review_id": 2179740302,
      "id": 1679085201,
      "node_id": "PRRC_kwDOABII585kFM6R",
      "diff_hunk": "@@ -68,11 +68,11 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view TrimStringView(std::string_view str, std::string_view pattern = \" \\f\\n\\r\\t\\v\")\n {\n-    std::string::size_type front = str.find_first_not_of(pattern);\n+    std::string_view::size_type front = str.find_first_not_of(pattern);\n     if (front == std::string::npos) {",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 6,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "d20fc9cdffbf029bf1c6162ed22eaac6c320fa1a",
      "in_reply_to_id": 1679074765,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems very harmless to correct the type. But yeah, should have fixed the `npos` if we go with this change.\r\n\r\nI'll remove it from this PR for now if it goes outside of the \"PR style\" of the project.",
      "created_at": "2024-07-16T09:42:05Z",
      "updated_at": "2024-07-16T09:42:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679085201",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679085201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 71,
      "start_side": "LEFT",
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679138796",
      "pull_request_review_id": 2179827141,
      "id": 1679138796,
      "node_id": "PRRC_kwDOABII585kFZ_s",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": 7,
      "original_position": 21,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "d20fc9cdffbf029bf1c6162ed22eaac6c320fa1a",
      "in_reply_to_id": 1679075260,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`base_blob` now calls `RemovePrefixView()` which it did not previously do. I want to make it as efficient as possible compared to the prior `base_blob` implementation, hence this change.",
      "created_at": "2024-07-16T10:14:12Z",
      "updated_at": "2024-07-16T10:14:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679138796",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679138796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 87,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681559119",
      "pull_request_review_id": 2183757955,
      "id": 1681559119,
      "node_id": "PRRC_kwDOABII585kOo5P",
      "diff_hunk": "@@ -112,21 +111,11 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor because of historical fears of uint256(0)",
      "path": "src/uint256.h",
      "position": 18,
      "original_position": 18,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I interpret \"historical fears\" as \"the fears are no longer applicable\", in which case I think it should just be a constructor and this helper function removed. But, it [seems](https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675775175) like until C++23 this is indeed an issue (even if the ambiguous overload with the `uint8_t` should prevent compilation), so the current wording is confusing to me.\r\n\r\nSuggested alternative:\r\n\r\n```\r\n/* uint256 from std::string_view.\r\n * This is not a uint256 constructor to avoid the ambiguity of\r\n * uint256(0) being interpreted as initialization from a nullptr.\r\n *\r\n * This helper can be replaced with a constructor when we require c++23,\r\n * which prohibits constructing a string_view from a nullptr, see\r\n * https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2166r1.html\r\n */\r\n```",
      "created_at": "2024-07-17T18:35:24Z",
      "updated_at": "2024-07-17T18:37:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1681559119",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681559119"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 115,
      "original_line": 115,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681594420",
      "pull_request_review_id": 2183815708,
      "id": 1681594420,
      "node_id": "PRRC_kwDOABII585kOxg0",
      "diff_hunk": "@@ -112,21 +111,11 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor because of historical fears of uint256(0)",
      "path": "src/uint256.h",
      "position": 18,
      "original_position": 18,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "in_reply_to_id": 1681559119,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you for the correction! Applied with some minor adjustments.",
      "created_at": "2024-07-17T19:06:22Z",
      "updated_at": "2024-07-17T19:06:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1681594420",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681594420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 115,
      "original_line": 115,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682274787",
      "pull_request_review_id": 2184843613,
      "id": 1682274787,
      "node_id": "PRRC_kwDOABII585kRXnj",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure the latest push is a good change. I don't think this should be replaced with a constructor in the future, but it should be removed completely.\r\n\r\nA new function (for example `static std::optional<base_blob<N>> base_blob<N>::FromHex(std::string_view)` can be added that parses and then returns an `std::optional`. Similar to TryParseHex.\r\n\r\nIn any case, the doxygen comment here is probably the wrong place to track brainstorming issues.\r\n\r\nIf we really wanted to turn this into a constructor, it could be done today. As mentioned earlier, C++17 compilers will already warn when a string_view is initialized with a nullptr. It should be easy to turn this into a compile error, or simply compile once with C++23 in CI. However, I don't think we want a constructor here.",
      "created_at": "2024-07-18T06:36:09Z",
      "updated_at": "2024-07-18T06:36:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682274787",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682274787"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682324270",
      "pull_request_review_id": 2184921945,
      "id": 1682324270,
      "node_id": "PRRC_kwDOABII585kRjsu",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": 1682274787,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Tried:\r\n```diff\r\ndiff --git a/src/test/uint256_tests.cpp b/src/test/uint256_tests.cpp\r\nindex 2053a42d24..e8dfb03d18 100644\r\n--- a/src/test/uint256_tests.cpp\r\n+++ b/src/test/uint256_tests.cpp\r\n@@ -119,6 +119,10 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\r\n     BOOST_CHECK(uint160(R1S) == R1S);\r\n     BOOST_CHECK(uint160(ZeroS) == ZeroS);\r\n     BOOST_CHECK(uint160(OneS) == OneS);\r\n+\r\n+    uint256{0};\r\n+    uint256{NULL};\r\n+    uint256{nullptr};\r\n }\r\n \r\n BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\r\ndiff --git a/src/uint256.h b/src/uint256.h\r\nindex 19faaca91f..39b776ed0f 100644\r\n--- a/src/uint256.h\r\n+++ b/src/uint256.h\r\n@@ -107,6 +107,7 @@ public:\r\n     constexpr uint256() = default;\r\n     constexpr explicit uint256(uint8_t v) : base_blob<256>(v) {}\r\n     constexpr explicit uint256(Span<const unsigned char> vch) : base_blob<256>(vch) {}\r\n+    explicit uint256(std::string_view str) { SetHex(str); }\r\n     static const uint256 ZERO;\r\n     static const uint256 ONE;\r\n };\r\n```\r\n\r\nG++13.2.0 warns against both `NULL` and `nullptr`. `0` and `NULL` resolve to the `uint256(uint8_t v)` ctor:\r\n```\r\ntest/uint256_tests.cpp: In member function ‘void uint256_tests::basics::test_method()’:\r\ntest/uint256_tests.cpp:124:17: warning: passing NULL to non-pointer argument 1 of ‘constexpr uint256::uint256(uint8_t)’ [-Wconversion-null]\r\n  124 |     uint256{NULL};\r\n      |                 ^\r\n...\r\n./uint256.h:108:40: note:   declared here\r\n  108 |     constexpr explicit uint256(uint8_t v) : base_blob<256>(v) {}\r\n      |                                ~~~~~~~~^\r\ntest/uint256_tests.cpp:125:20: warning: argument 1 null where non-null expected [-Wnonnull]\r\n  125 |     uint256{nullptr};\r\n      |                    ^\r\n...\r\n/nix/store/14c6s4xzhy14i2b05s00rjns2j93gzz4-gcc-13.2.0/include/c++/13.2.0/string_view:140:7: note: in a call to function ‘constexpr std::basic_string_view<_CharT, _Traits>::basic_string_view(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>]’ declared ‘nonnull’\r\n  140 |       basic_string_view(const _CharT* __str) noexcept\r\n      |       ^~~~~~~~~~~~~~~~~\r\n...\r\n/nix/store/14c6s4xzhy14i2b05s00rjns2j93gzz4-gcc-13.2.0/include/c++/13.2.0/bits/char_traits.h:409:32: warning: argument 1 null where non-null expected [-Wnonnull]\r\n  409 |         return __builtin_strlen(__s);\r\n      |                ~~~~~~~~~~~~~~~~^~~~~\r\n/nix/store/14c6s4xzhy14i2b05s00rjns2j93gzz4-gcc-13.2.0/include/c++/13.2.0/bits/char_traits.h:409:32: note: in a call to built-in function ‘long unsigned int __builtin_strlen(const char*)’\r\n```\r\nClang++(17.0.6) warns as well:\r\n```\r\ntest/uint256_tests.cpp:124:13: warning: implicit conversion of NULL constant to 'uint8_t' (aka 'unsigned char') [-Wnull-conversion]\r\n  124 |     uint256{NULL};\r\n      |     ~~~~~~~ ^~~~\r\n      |             '\\0'\r\ntest/uint256_tests.cpp:125:13: warning: null passed to a callee that requires a non-null argument [-Wnonnull]\r\n  125 |     uint256{nullptr};\r\n      |             ^~~~~~~\r\n2 warnings generated.\r\n```\r\nBoth continue compilation and segfault when running the tests.\r\n\r\nDoes CI have a stricter warnings-as-errors policy?",
      "created_at": "2024-07-18T07:16:32Z",
      "updated_at": "2024-07-18T07:17:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682324270",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682324270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682344482",
      "pull_request_review_id": 2184954456,
      "id": 1682344482,
      "node_id": "PRRC_kwDOABII585kRooi",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": 1682274787,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Does CI have a stricter warnings-as-errors policy?\r\n\r\nYeah, IIRC it should treat warnings as error.\r\n\r\nEven if it didn't, the compile warning and `nullptr` in code would still have to pass the eyes of the developer and reviewers. Also, the CI would fail later on with a segfault anyway.\r\n\r\nAs for the others:\r\n\r\n* `0` is intentional and used in code today, see:\r\n```\r\nconst uint256 uint256::ZERO(0);\r\nconst uint256 uint256::ONE(1);\r\n```\r\n\r\n* NULL is forbidden by clang-tidy, see `modernize-use-nullptr`.",
      "created_at": "2024-07-18T07:29:16Z",
      "updated_at": "2024-07-18T07:29:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682344482",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682344482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682359897",
      "pull_request_review_id": 2184979122,
      "id": 1682359897,
      "node_id": "PRRC_kwDOABII585kRsZZ",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": 1682274787,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reset back to prior version. As you say it seems we could convert `uint256S()` to a constructor already thanks to the pre-C++23 warnings by Clang & GCC, but I think that is outside the scope of this PR.",
      "created_at": "2024-07-18T07:39:55Z",
      "updated_at": "2024-07-18T07:39:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682359897",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682359897"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682361588",
      "pull_request_review_id": 2184981667,
      "id": 1682361588,
      "node_id": "PRRC_kwDOABII585kRsz0",
      "diff_hunk": "@@ -112,21 +111,11 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor because of historical fears of uint256(0)",
      "path": "src/uint256.h",
      "position": 18,
      "original_position": 18,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "in_reply_to_id": 1681559119,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reset back to prior version, see https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682274787.",
      "created_at": "2024-07-18T07:41:08Z",
      "updated_at": "2024-07-18T07:41:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682361588",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682361588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 115,
      "original_line": 115,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682619292",
      "pull_request_review_id": 2185432632,
      "id": 1682619292,
      "node_id": "PRRC_kwDOABII585kSruc",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": 1682274787,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for your comprehensive input here @maflcko. You're right that this is safe as long as one CI job fails, there's no need to ensure this fails on every single compiler, which indeed makes the fear historical. My apologies for the back and forth.\r\n\r\nYour suggestion for a `FromHex()` method also seems better than a `std::string_view` ctor.",
      "created_at": "2024-07-18T10:39:01Z",
      "updated_at": "2024-07-18T10:39:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682619292",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682619292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682745543",
      "pull_request_review_id": 2185662382,
      "id": 1682745543,
      "node_id": "PRRC_kwDOABII585kTKjH",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": 1682274787,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree `uint256::FromHex()` is more self-explanatory than `uint256S()`. Making it return `std::optional` might be good if we want stricter parsing and non-fatal failures. This PR feels large enough for now though.",
      "created_at": "2024-07-18T12:23:42Z",
      "updated_at": "2024-07-18T12:23:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682745543",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682745543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682755930",
      "pull_request_review_id": 2185678524,
      "id": 1682755930,
      "node_id": "PRRC_kwDOABII585kTNFa",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": 1682274787,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, all of this should happen later, because it is unrelated to fixing possible UB/crashes (the goal of this pull).",
      "created_at": "2024-07-18T12:31:18Z",
      "updated_at": "2024-07-18T12:31:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682755930",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682755930"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682892102",
      "pull_request_review_id": 2185910679,
      "id": 1682892102,
      "node_id": "PRRC_kwDOABII585kTuVG",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "review note: it seems the `while` loop was replaced with `for` loop purely for readability, I don't see any functional change here.",
      "created_at": "2024-07-18T13:56:31Z",
      "updated_at": "2024-07-18T20:56:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682892102",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682892102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": 30,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683055614",
      "pull_request_review_id": 2186195988,
      "id": 1683055614,
      "node_id": "PRRC_kwDOABII585kUWP-",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: Change base_blob::SetHex() to take std::string_view\" (f77d961d926405637dfbdfb9a9baea1fab4f1b7b)\r\n\r\nNote: This line isn't directly equivalent to previous code because it trims whitespace from the end of the string, not just the beginning, but the net effect is the same because any whitespace at the end of the string would be ignored anyway.\r\n\r\nI'm surprised looking at the implementation of SetHex to see how unreliable it is in general. Since it can't report errors it winds up just ignoring unexpected input:\r\n\r\n- Any input following the first non-hex character is ignored.\r\n  -  So if there is a space in the string, or a 1 replaced with an I, it is treated like the end of input, and the resulting blob may have a combination of new and old values.\r\n- If the hex string provided is too long to fit in the blob, the end of the string will be ignored.\r\n\r\n\r\n\r\n",
      "created_at": "2024-07-18T15:29:23Z",
      "updated_at": "2024-07-18T16:08:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683055614",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683055614"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683086730",
      "pull_request_review_id": 2186195988,
      "id": 1683086730,
      "node_id": "PRRC_kwDOABII585kUd2K",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: Change base_blob::SetHex() to take std::string_view\" (f77d961d926405637dfbdfb9a9baea1fab4f1b7b)\r\n\r\nIt seems not great, especially in the light of the unterminated string bug, that this will iterate over the entire string when only the beginning portion of the string may be needed. For example, if the string is 1MB and the blob is 32 bytes, this will iterate over 1MB. Would changing this to:\r\n```c++\r\nwhile (digits < str.size() && digits < WIDTH*2 && ::HexDigit(str[digits]) != -1) {\r\n    ++digits;\r\n}\r\n```\r\n\r\nThis would also allow dropping the `pend` variable below as a further simplification.",
      "created_at": "2024-07-18T15:51:43Z",
      "updated_at": "2024-07-18T16:08:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683086730",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683086730"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": 30,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683221641",
      "pull_request_review_id": 2186448462,
      "id": 1683221641,
      "node_id": "PRRC_kwDOABII585kU-yJ",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1683055614,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I'm surprised looking at the implementation of SetHex to see how unreliable it is in general. Since it can't report errors it winds up just ignoring unexpected input:\r\n\r\nYes, those are known shortcomings. The function will be removed completely in the future, but this will be done in a follow-up.",
      "created_at": "2024-07-18T17:15:01Z",
      "updated_at": "2024-07-18T17:15:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683221641",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683221641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683226283",
      "pull_request_review_id": 2186455377,
      "id": 1683226283,
      "node_id": "PRRC_kwDOABII585kU_6r",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1683086730,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> It seems not great\r\n\r\nI don't think this is a change in behavior (previously this was the behavior and afterward this remains the behavior), and the function will be removed completely in the future anyway, so I am not sure how much time should be spent on playing code-golf here.\r\n\r\nHappy to re-ACK a trivial fixup, but if it takes more than a few seconds to review it is probably not worth it.",
      "created_at": "2024-07-18T17:19:07Z",
      "updated_at": "2024-07-18T17:19:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683226283",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683226283"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": 30,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683245538",
      "pull_request_review_id": 2186486004,
      "id": 1683245538,
      "node_id": "PRRC_kwDOABII585kVEni",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1683086730,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, I did not know this function will be removed. It would be helpful to mention in the PR description that it will be removed, so reviewers can know how worried to be about the quality of the code.",
      "created_at": "2024-07-18T17:37:10Z",
      "updated_at": "2024-07-18T17:37:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683245538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683245538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": 30,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683252772",
      "pull_request_review_id": 2186500464,
      "id": 1683252772,
      "node_id": "PRRC_kwDOABII585kVGYk",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1683086730,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Thanks, I did not know this function will be removed. It would be helpful to mention in the PR description that it will be removed, so reviewers can know how worried to be about the quality of the code.\r\n\r\nWell, it will be removed, given that someone writes the code and reviews it. A tracking issue can be created, if you want, but I think the pull request description is the wrong place for this tracking stuff. As for reviewers: I'd say reviewers should worry the most about any regression or worsening of the code. Follow-up improvements are great to mention, but shouldn't hold up a possible UB/crash fix.",
      "created_at": "2024-07-18T17:43:29Z",
      "updated_at": "2024-07-18T17:43:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683252772",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683252772"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": 30,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683689226",
      "pull_request_review_id": 2187172873,
      "id": 1683689226,
      "node_id": "PRRC_kwDOABII585kWw8K",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "in_reply_to_id": 1682892102,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682892102\r\n\r\n> review note: it seems the `while` loop was replaced with `for` loop purely for readability, I don't see any functional change here.\r\n\r\nTo be sure, replacing the previous while loop is an important part of the fix. If the previous while loop was kept, it could iterate past the end of the of `string_view` and read uninitialized memory. This for loop (and the while loop I suggested in https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683086730) avoid the bug by stopping iteration at the end of the `string_view`.",
      "created_at": "2024-07-19T02:15:51Z",
      "updated_at": "2024-07-19T02:17:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683689226",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683689226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": 30,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683831519",
      "pull_request_review_id": 2187369595,
      "id": 1683831519,
      "node_id": "PRRC_kwDOABII585kXTrf",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1683055614,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> * So if there is a space in the string, or a 1 replaced with an I, it is treated like the end of input, and the resulting blob may have a combination of new and old values.\r\n\r\nI don't think this is true. All \"old\" values will zeroed in the first line of `SetHex`.\r\n\r\nThe other shortcomings (no length check and no hex check) are true.",
      "created_at": "2024-07-19T05:56:29Z",
      "updated_at": "2024-07-19T05:56:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683831519",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683831519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    }
  ]
}