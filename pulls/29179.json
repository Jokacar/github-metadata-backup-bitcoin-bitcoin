{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179",
    "id": 1664966896,
    "node_id": "PR_kwDOABII585jPWDw",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29179",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29179.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29179.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29179",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29179/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
    "number": 29179,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test: wallet rescan with reorged parent + IsFromMe child in mempool",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Originally motivated by #29019, which reverts back to having `requestMempoolTransactions` emit `transactionAddedToMempool` in `mapTx` default order instead of `GetSortedDepthAndScore` order.\r\n\r\nIt's important that these notifications happen in topological order, otherwise the wallet rescan may miss transactions that belong to it. Notably, checking whether a transaction `IsFromMe` requires knowing its inputs, which may be from a mempool parent.\r\n\r\nWhen using `mapTx` order, a parent may come later than its child if it was added from a block disconnected in a reorg.\r\n\r\nThis PR adds a test for this case.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2024-01-04T16:26:03Z",
    "updated_at": "2024-01-12T04:45:20Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "7c4029fccc6d836ca6e079440f92a63f9240b3ac",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "glozow:2024-01-test-reorg-rescan",
      "ref": "2024-01-test-reorg-rescan",
      "sha": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 244262754,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNDQyNjI3NTQ=",
        "name": "bitcoin",
        "full_name": "glozow/bitcoin",
        "owner": {
          "login": "glozow",
          "id": 25183001,
          "node_id": "MDQ6VXNlcjI1MTgzMDAx",
          "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/glozow",
          "html_url": "https://github.com/glozow",
          "followers_url": "https://api.github.com/users/glozow/followers",
          "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
          "organizations_url": "https://api.github.com/users/glozow/orgs",
          "repos_url": "https://api.github.com/users/glozow/repos",
          "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/glozow/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/glozow/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/glozow/bitcoin",
        "archive_url": "https://api.github.com/repos/glozow/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/glozow/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/glozow/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/glozow/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/glozow/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/glozow/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/glozow/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/glozow/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/glozow/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/glozow/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/glozow/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/glozow/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/glozow/bitcoin/events",
        "forks_url": "https://api.github.com/repos/glozow/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/glozow/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/glozow/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/glozow/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/glozow/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/glozow/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/glozow/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/glozow/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/glozow/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/glozow/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/glozow/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/glozow/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/glozow/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/glozow/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/glozow/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/glozow/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:glozow/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/glozow/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/glozow/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/glozow/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/glozow/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/glozow/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/glozow/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/glozow/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/glozow/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/glozow/bitcoin/hooks",
        "svn_url": "https://github.com/glozow/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 3,
        "stargazers_count": 10,
        "watchers_count": 10,
        "size": 238819,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-01-11T11:39:03Z",
        "created_at": "2020-03-02T02:31:56Z",
        "updated_at": "2023-08-30T16:39:28Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9e1306fc886bcf8024ec37687bbfb8ae364286d6",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36473,
        "stargazers_count": 73277,
        "watchers_count": 73277,
        "size": 247393,
        "default_branch": "master",
        "open_issues_count": 697,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-01-11T23:21:12Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-01-12T04:16:01Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 145,
    "deletions": 9,
    "changed_files": 3,
    "commits": 2,
    "review_comments": 17,
    "comments": 8
  },
  "events": [
    {
      "event": "labeled",
      "id": 11392098099,
      "node_id": "LE_lADOABII5857JAo-zwAAAAKnBZ8z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11392098099",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-04T16:26:03Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 1877390756,
      "node_id": "IC_kwDOABII585v5rWk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1877390756",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-04T16:26:06Z",
      "updated_at": "2024-01-12T04:45:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29179).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [Eunovo](https://github.com/bitcoin/bitcoin/pull/29179#issuecomment-1885834450), [stickies-v](https://github.com/bitcoin/bitcoin/pull/29179#pullrequestreview-1816762773) |\n| Stale ACK | [achow101](https://github.com/bitcoin/bitcoin/pull/29179#issuecomment-1877892122) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28710](https://github.com/bitcoin/bitcoin/pull/28710) (Remove the legacy wallet and BDB dependency by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#issuecomment-1877390756",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29179"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-04T16:31:04Z",
      "updated_at": "2024-01-04T16:31:04Z",
      "source": {
        "issue": {
          "id": 2030275366,
          "node_id": "PR_kwDOABII585hZXQM",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29019",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29019/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29019/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29019/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29019",
          "number": 29019,
          "state": "closed",
          "state_reason": null,
          "title": "mempool: Don't sort in entryAll",
          "body": "Current call sites of entryAll do not require the entries to be sorted, so iterate through mapTx directly to retrieve the entries instead of using SortedDepthAndScore.\r\n\r\nThis is a follow up to #28391 and was noted here https://github.com/bitcoin/bitcoin/pull/28391#discussion_r1418261403.\r\n",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29019",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29019",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29019.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29019.patch"
          },
          "closed_at": "2024-01-05T12:28:50Z",
          "created_at": "2023-12-07T09:24:57Z",
          "updated_at": "2024-01-05T12:28:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1877879833,
      "node_id": "IC_kwDOABII585v7iwZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1877879833",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-04T23:02:07Z",
      "updated_at": "2024-01-04T23:02:07Z",
      "author_association": "MEMBER",
      "body": "Huh, looks like this behavior has been broken since it was introduced in #15652",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#issuecomment-1877879833",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29179"
    },
    {
      "event": "commented",
      "id": 1877892122,
      "node_id": "IC_kwDOABII585v7lwa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1877892122",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-04T23:16:40Z",
      "updated_at": "2024-01-04T23:16:40Z",
      "author_association": "MEMBER",
      "body": "ACK 1a52ca7619eeb1baafa5a32b364381126862b29d",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#issuecomment-1877892122",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29179"
    },
    {
      "event": "reviewed",
      "id": 1805846181,
      "node_id": "PRR_kwDOABII585rowal",
      "url": null,
      "actor": null,
      "commit_id": "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK, nice one finding this test case! 1a52ca7619eeb1baafa5a32b364381126862b29d looks good to me but not super familiar with this part of the code. Left some suggestions about maintainability and can be ignored.\r\n\r\nI verified that the tests fail on #29019 as well as on 453b4813ebc74859864803e9972b58e4be76a4d6~1, as is necessary.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#pullrequestreview-1805846181",
      "submitted_at": "2024-01-05T17:25:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11403952066,
      "node_id": "HRFPE_lADOABII5857JAo-zwAAAAKnun_C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11403952066",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-05T18:14:07Z"
    },
    {
      "event": "reviewed",
      "id": 1806935444,
      "node_id": "PRR_kwDOABII585rs6WU",
      "url": null,
      "actor": null,
      "commit_id": "aa7eda33c35a40760cd9ad26fed02c27f4127e1e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Pre-review note: have you considered that `wallet_import_rescan.py` is a legacy wallet only test?\r\nIf it's placed here due to a lack of alternatives, I think this could be moved to a separate `wallet_mempool.py` file, where we could continue adding more cases related to the wallet-mempool interaction (or.. we could upgrade this file to run on a descriptors wallet).",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#pullrequestreview-1806935444",
      "submitted_at": "2024-01-05T22:18:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-06T08:57:05Z",
      "updated_at": "2024-01-06T08:57:05Z",
      "source": {
        "issue": {
          "id": 1958204865,
          "node_id": "PR_kwDOABII585dlfBo",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28710",
          "number": 28710,
          "state": "open",
          "state_reason": null,
          "title": "Remove the legacy wallet and BDB dependency",
          "body": "The final step of #20160.\r\n\r\nA bare minimum of legacy wallet code is kept in order to perform wallet migration. Migration of legacy wallets uses the independent BDB parser and a minimal `LegacyDataSPKM` that allows the legacy data to be loaded so that the migration can be completed.\r\n\r\nAll tests which tested legacy wallet behavior have been removed. The `--descriptors` and `--legacy-wallet` options are removed from the functional tests.\r\n\r\nBDB has been removed as a dependency and documentation have been updated to reflect that.\r\n\r\nDepends on #26596",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28710",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28710",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28710.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28710.patch"
          },
          "created_at": "2023-10-23T23:36:07Z",
          "updated_at": "2024-01-11T22:24:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1880584066,
      "node_id": "IC_kwDOABII585wF2-C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1880584066",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-08T08:46:54Z",
      "updated_at": "2024-01-08T09:18:40Z",
      "author_association": "MEMBER",
      "body": "> Pre-review note: have you considered that wallet_import_rescan.py is a legacy wallet only test?\r\n\r\nAh good point. ~I added a commit to run this test with descriptors as I couldn't find a reason why we don't do this. Lmk if this seems sufficient / ok to do?~ EDIT: oh descriptors can't use `dumpprivkey`, nvm",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#issuecomment-1880584066",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29179"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11415004610,
      "node_id": "HRFPE_lADOABII5857JAo-zwAAAAKoYyXC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11415004610",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-08T09:18:52Z"
    },
    {
      "event": "labeled",
      "id": 11415005372,
      "node_id": "LE_lADOABII5857JAo-zwAAAAKoYyi8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11415005372",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-08T09:18:56Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 11415499547,
      "node_id": "UNLE_lADOABII5857JAo-zwAAAAKoarMb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11415499547",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-08T10:03:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEwOGFmZmZiNGU1ZDRlNmMzYjBiODUzNWVjNmNmNjI4MDZhZTg1ZWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/108afffb4e5d4e6c3b0b8535ec6cf62806ae85ea",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/108afffb4e5d4e6c3b0b8535ec6cf62806ae85ea",
      "tree": {
        "sha": "576061dd86f9d8f5697cf6fb4202f1c9312e2d40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/576061dd86f9d8f5697cf6fb4202f1c9312e2d40"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65c05db660b2ca1d0076b0d8573a6760b3228068",
          "sha": "65c05db660b2ca1d0076b0d8573a6760b3228068",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/65c05db660b2ca1d0076b0d8573a6760b3228068"
        }
      ],
      "message": "[test] rescan legacy wallet with reorged parent + IsFromMe child in mempool\n\nTest that wallet rescans process transactions topologically, even if a\nparent's entry into the mempool is later than that of its child.\nThis behavior is important because IsFromMe requires the ability to look\nup a transaction's inputs.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-01-08T16:43:53Z"
      },
      "author": {
        "name": "Gloria Zhao",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-01-03T16:44:12Z"
      },
      "sha": "108afffb4e5d4e6c3b0b8535ec6cf62806ae85ea"
    },
    {
      "event": "commented",
      "id": 1882660532,
      "node_id": "IC_kwDOABII585wNx60",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1882660532",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-09T09:04:43Z",
      "updated_at": "2024-01-09T09:04:43Z",
      "author_association": "MEMBER",
      "body": "I'm working on adding a descriptors version of this test so we can have both.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#issuecomment-1882660532",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29179"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11428503435,
      "node_id": "HRFPE_lADOABII5857JAo-zwAAAAKpMR-L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11428503435",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-09T10:36:36Z"
    },
    {
      "event": "commented",
      "id": 1882825009,
      "node_id": "IC_kwDOABII585wOaEx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1882825009",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-09T10:39:16Z",
      "updated_at": "2024-01-09T10:39:16Z",
      "author_association": "MEMBER",
      "body": "I've added another commit which has pretty much the same test but using descriptor wallets i.e. a rescan through `importdescriptors`. Just like the other test, you can reproduce the bug by cherry-picking from #29019. You should get `JSONRPCEXCEPTION: Invalid or non-wallet transaction id (-5)` for the child tx.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#issuecomment-1882825009",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29179"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11428734891,
      "node_id": "HRFPE_lADOABII5857JAo-zwAAAAKpNKer",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11428734891",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-09T10:55:36Z"
    },
    {
      "event": "labeled",
      "id": 11428735677,
      "node_id": "LE_lADOABII5857JAo-zwAAAAKpNKq9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11428735677",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-09T10:55:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11428869979,
      "node_id": "HRFPE_lADOABII5857JAo-zwAAAAKpNrdb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11428869979",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-09T11:07:06Z"
    },
    {
      "event": "reviewed",
      "id": 1811002749,
      "node_id": "PRR_kwDOABII585r8bV9",
      "url": null,
      "actor": null,
      "commit_id": "fa2b8d0e30c45b4ff59db1ac6aaeab3dc10f3df3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Hooray for adding descriptor wallet support. Is there a reason both legacy and descriptor wallet tests aren't in the new `wallet_rescan_unconfirmed` test, though? That seems like a more logical grouping with less duplication? If there are technical objections, I think it would be good to add some extra documentation to both tests stating that the other wallet type is tested in file xxx.py, making it easier to clean up these tests e.g. when we drop legacy wallets or make other significant changes?",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#pullrequestreview-1811002749",
      "submitted_at": "2024-01-09T12:09:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
    },
    {
      "event": "unlabeled",
      "id": 11429804017,
      "node_id": "UNLE_lADOABII5857JAo-zwAAAAKpRPfx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11429804017",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-09T12:32:10Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1883154232,
      "node_id": "IC_kwDOABII585wPqc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1883154232",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-09T14:30:25Z",
      "updated_at": "2024-01-09T14:31:19Z",
      "author_association": "MEMBER",
      "body": "> Is there a reason both legacy and descriptor wallet tests aren't in the new wallet_rescan_unconfirmed test, though? That seems like a more logical grouping with less duplication?\r\n\r\nThey use different RPCs. I think it's more readable for them to be separate (having most the test as `if is_sqlite_compiled() elif is_bdb_compiled()` is pretty annoying). I think it's much easier to delete legacy without touching the descriptor one if they're in different files.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#issuecomment-1883154232",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29179"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ5ZGY0MzhjNmU1ODFkYWUwYzgxOGE0YzJmNWZlOTU2MjdhZTI2YmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "tree": {
        "sha": "ce3620fcd0b841bf28423939e3174f00d8b64047",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce3620fcd0b841bf28423939e3174f00d8b64047"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/108afffb4e5d4e6c3b0b8535ec6cf62806ae85ea",
          "sha": "108afffb4e5d4e6c3b0b8535ec6cf62806ae85ea",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/108afffb4e5d4e6c3b0b8535ec6cf62806ae85ea"
        }
      ],
      "message": "[test] import descriptor wallet with reorged parent + IsFromMe child in mempool\n\nTest that wallet rescans process transactions topologically, even if a\nparent's entry into the mempool is later than that of its child.\nThis behavior is important because IsFromMe requires the ability to look\nup a transaction's inputs.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-01-09T15:48:09Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-01-09T10:03:20Z"
      },
      "sha": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11432220616,
      "node_id": "HRFPE_lADOABII5857JAo-zwAAAAKpadfI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11432220616",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-09T15:48:28Z"
    },
    {
      "event": "review_requested",
      "id": 11441548047,
      "node_id": "RRE_lADOABII5857JAo-zwAAAAKp-CsP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11441548047",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-10T10:46:25Z",
      "requested_reviewer": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11441549373,
      "node_id": "RRE_lADOABII5857JAo-zwAAAAKp-DA9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11441549373",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-10T10:46:32Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11441549951,
      "node_id": "RRE_lADOABII5857JAo-zwAAAAKp-DJ_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11441549951",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-10T10:46:36Z",
      "requested_reviewer": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1885834450,
      "node_id": "IC_kwDOABII585wZ4zS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1885834450",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-10T22:20:22Z",
      "updated_at": "2024-01-10T22:38:21Z",
      "author_association": "NONE",
      "body": "Tested ACK [d9df438](https://github.com/bitcoin/bitcoin/pull/29179/commits/d9df438c6e581dae0c818a4c2f5fe95627ae26bc)\r\n\r\nRan the tests locally and got `test_framework.authproxy.JSONRPCException: Invalid or non-wallet transaction id (-5)` for both `wallet_import_rescan.py` and `wallet_rescan_unconfirmed.py` when insertion order is used in `CTxMemPool::entryAll()`.\r\n",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#issuecomment-1885834450",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29179"
    },
    {
      "event": "reviewed",
      "id": 1816762773,
      "node_id": "PRR_kwDOABII585sSZmV",
      "url": null,
      "actor": null,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK d9df438c6e581dae0c818a4c2f5fe95627ae26bc\r\n\r\n> I think it's much easier to delete legacy without touching the descriptor one if they're in different files.\r\n\r\nThanks, you're right. There's less overlap than I thought there would be.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#pullrequestreview-1816762773",
      "submitted_at": "2024-01-11T21:52:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442808773",
      "pull_request_review_id": 1805846181,
      "id": 1442808773,
      "node_id": "PRRC_kwDOABII585V_4PF",
      "diff_hunk": "@@ -267,14 +271,45 @@ def run_test(self):\n                 address_type=variant.address_type.value,\n             ))\n             variant.key = self.nodes[1].dumpprivkey(variant.address[\"address\"])\n-            variant.initial_amount = get_rand_amount()\n+            variant.initial_amount = get_rand_amount() * 2\n             variant.initial_txid = self.nodes[0].sendtoaddress(variant.address[\"address\"], variant.initial_amount)\n             variant.confirmation_height = 0\n             variant.timestamp = timestamp\n \n+        # Mine a block so these parents are confirmed\n+        assert_equal(len(self.nodes[0].getrawmempool()), len(mempool_variants))\n+        self.sync_mempools()\n+        block_to_disconnect = self.generate(self.nodes[0], 1)\n+        assert_equal(len(self.nodes[0].getrawmempool()), 0)\n+\n+        # For each variant, create an unconfirmed child transaction from initial_txid, sending half of the balance to\n+        # itself and the other half to unspendable/fees. This transaction is only recognizable as\n+        # belonging to this wallet when the inputs are known. That means the rescan must process the\n+        # parent before the child.\n+        for variant in mempool_variants:\n+            inputs_to_spend = [txin for txin in self.nodes[1].listunspent() if txin[\"txid\"] == variant.initial_txid]",
      "path": "test/functional/wallet_import_rescan.py",
      "position": null,
      "original_position": 52,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could be a bit more efficient by only calling and iterating over `listunspent` once (does not test for txid collisions, but I don't think we need that?)\r\n\r\n<details>\r\n<summary>git diff on 1a52ca7619</summary>\r\n\r\n```diff\r\ndiff --git a/test/functional/wallet_import_rescan.py b/test/functional/wallet_import_rescan.py\r\nindex 1abc9c0c79..928455c355 100755\r\n--- a/test/functional/wallet_import_rescan.py\r\n+++ b/test/functional/wallet_import_rescan.py\r\n@@ -286,13 +286,12 @@ class ImportRescanTest(BitcoinTestFramework):\r\n         # itself and the other half to unspendable/fees. This transaction is only recognizable as\r\n         # belonging to this wallet when the inputs are known. That means the rescan must process the\r\n         # parent before the child.\r\n+        unspent_txid_map = {txin[\"txid\"] : txin for txin in self.nodes[1].listunspent()}\r\n         for variant in mempool_variants:\r\n-            inputs_to_spend = [txin for txin in self.nodes[1].listunspent() if txin[\"txid\"] == variant.initial_txid]\r\n-            assert_equal(len(inputs_to_spend), 1)\r\n             # Send full amount, subtracting fee from outputs, to ensure no change is created.\r\n             child = self.nodes[1].send(\r\n                 add_to_wallet=False,\r\n-                inputs=inputs_to_spend,\r\n+                inputs=[unspent_txid_map[variant.initial_txid]],\r\n                 outputs=[{ADDRESS_BCRT1_UNSPENDABLE : variant.initial_amount}],\r\n                 subtract_fee_from_outputs=[0]\r\n             )\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2024-01-05T12:18:30Z",
      "updated_at": "2024-01-05T17:25:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1442808773",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442808773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 290,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442918332",
      "pull_request_review_id": 1805846181,
      "id": 1442918332,
      "node_id": "PRRC_kwDOABII585WAS-8",
      "diff_hunk": "@@ -267,14 +271,45 @@ def run_test(self):\n                 address_type=variant.address_type.value,\n             ))\n             variant.key = self.nodes[1].dumpprivkey(variant.address[\"address\"])\n-            variant.initial_amount = get_rand_amount()\n+            variant.initial_amount = get_rand_amount() * 2\n             variant.initial_txid = self.nodes[0].sendtoaddress(variant.address[\"address\"], variant.initial_amount)\n             variant.confirmation_height = 0\n             variant.timestamp = timestamp\n \n+        # Mine a block so these parents are confirmed\n+        assert_equal(len(self.nodes[0].getrawmempool()), len(mempool_variants))\n+        self.sync_mempools()\n+        block_to_disconnect = self.generate(self.nodes[0], 1)",
      "path": "test/functional/wallet_import_rescan.py",
      "position": null,
      "original_position": 44,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: makes more sense to unpack here imo\r\n```suggestion\r\n        block_to_disconnect = self.generate(self.nodes[0], 1)[0]\r\n```",
      "created_at": "2024-01-05T13:55:03Z",
      "updated_at": "2024-01-05T17:25:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1442918332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442918332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 282,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443052612",
      "pull_request_review_id": 1805846181,
      "id": 1443052612,
      "node_id": "PRRC_kwDOABII585WAzxE",
      "diff_hunk": "@@ -283,9 +318,11 @@ def run_test(self):\n             variant.node = self.nodes[2 + IMPORT_NODES.index(ImportNode(variant.prune, expect_rescan))]\n             variant.do_import(variant.timestamp)\n             if expect_rescan:\n-                variant.expected_balance = variant.initial_amount\n+                # Ensure both transactions were rescanned\n+                assert_equal(variant.node.gettransaction(variant.initial_txid)['confirmations'], 0)\n+                assert_equal(variant.node.gettransaction(variant.child_txid)['confirmations'], 0)",
      "path": "test/functional/wallet_import_rescan.py",
      "position": 98,
      "original_position": 85,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I don't think we're actually checking the confirmations values, so for future maintenance, would this be more straightforward?\r\n```suggestion\r\n                variant.node.gettransaction(variant.initial_txid)  # raises if tx wasn't rescanned\r\n                variant.node.gettransaction(variant.child_txid)    # raises if tx wasn't rescanned\r\n```",
      "created_at": "2024-01-05T16:06:26Z",
      "updated_at": "2024-01-05T17:25:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443052612",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443052612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": 321,
      "original_start_line": 322,
      "start_side": "RIGHT",
      "line": 322,
      "original_line": 322,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443144137",
      "pull_request_review_id": 1805846181,
      "id": 1443144137,
      "node_id": "PRRC_kwDOABII585WBKHJ",
      "diff_hunk": "@@ -79,7 +82,7 @@ def do_import(self, timestamp):\n             )\n             assert_equal(response, [{\"success\": True}])\n \n-    def check(self, txid=None, amount=None, confirmation_height=None):\n+    def check(self, txid=None, amount=None, confirmation_height=None, amount_is_balance=True):",
      "path": "test/functional/wallet_import_rescan.py",
      "position": null,
      "original_position": 17,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It doesn't seem like we're actually testing the expected balance at any point, rather the amount received, but I may be missing nuance. Would this diff make sense? I don't like adding an extra parameter to an already long function for something so specific, if we can avoid it.\r\n\r\n<details>\r\n<summary>git diff on 1a52ca7619</summary>\r\n\r\n```diff\r\ndiff --git a/test/functional/wallet_import_rescan.py b/test/functional/wallet_import_rescan.py\r\nindex 1abc9c0c79..fa9f43f66c 100755\r\n--- a/test/functional/wallet_import_rescan.py\r\n+++ b/test/functional/wallet_import_rescan.py\r\n@@ -82,7 +82,7 @@ class Variant(collections.namedtuple(\"Variant\", \"call data address_type rescan p\r\n             )\r\n             assert_equal(response, [{\"success\": True}])\r\n \r\n-    def check(self, txid=None, amount=None, confirmation_height=None, amount_is_balance=True):\r\n+    def check(self, txid=None, amount=None, confirmation_height=None):\r\n         \"\"\"Verify that listtransactions/listreceivedbyaddress return expected values.\"\"\"\r\n \r\n         txs = self.node.listtransactions(label=self.label, count=10000, include_watchonly=True)\r\n@@ -112,8 +112,7 @@ class Variant(collections.namedtuple(\"Variant\", \"call data address_type rescan p\r\n \r\n             address, = [ad for ad in addresses if txid in ad[\"txids\"]]\r\n             assert_equal(address[\"address\"], self.address[\"address\"])\r\n-            if amount_is_balance:\r\n-                assert_equal(address[\"amount\"], self.expected_balance)\r\n+            assert_equal(address[\"amount\"], self.amount_received)\r\n             assert_equal(address[\"confirmations\"], confirmations)\r\n             # Verify the transaction is correctly marked watchonly depending on\r\n             # whether the transaction pays to an imported public key or\r\n@@ -227,11 +226,11 @@ class ImportRescanTest(BitcoinTestFramework):\r\n             variant.node = self.nodes[2 + IMPORT_NODES.index(ImportNode(variant.prune, expect_rescan))]\r\n             variant.do_import(variant.timestamp)\r\n             if expect_rescan:\r\n-                variant.expected_balance = variant.initial_amount\r\n+                variant.amount_received = variant.initial_amount\r\n                 variant.expected_txs = 1\r\n                 variant.check(variant.initial_txid, variant.initial_amount, variant.confirmation_height)\r\n             else:\r\n-                variant.expected_balance = 0\r\n+                variant.amount_received = 0\r\n                 variant.expected_txs = 0\r\n                 variant.check()\r\n \r\n@@ -251,7 +250,7 @@ class ImportRescanTest(BitcoinTestFramework):\r\n         # Check the latest results from getbalance and listtransactions.\r\n         for variant in IMPORT_VARIANTS:\r\n             self.log.info('Run check for variant {}'.format(variant))\r\n-            variant.expected_balance += variant.sent_amount\r\n+            variant.amount_received += variant.sent_amount\r\n             variant.expected_txs += 1\r\n             variant.check(variant.sent_txid, variant.sent_amount, variant.confirmation_height)\r\n \r\n@@ -297,7 +296,6 @@ class ImportRescanTest(BitcoinTestFramework):\r\n                 subtract_fee_from_outputs=[0]\r\n             )\r\n             variant.child_txid = child[\"txid\"]\r\n-            variant.expected_balance = 0\r\n             self.nodes[0].sendrawtransaction(child[\"hex\"])\r\n \r\n         # Mempools should contain the child transactions for each variant.\r\n@@ -321,10 +319,11 @@ class ImportRescanTest(BitcoinTestFramework):\r\n                 # Ensure both transactions were rescanned\r\n                 assert_equal(variant.node.gettransaction(variant.initial_txid)['confirmations'], 0)\r\n                 assert_equal(variant.node.gettransaction(variant.child_txid)['confirmations'], 0)\r\n+                variant.amount_received = variant.initial_amount\r\n                 variant.expected_txs = 1\r\n-                variant.check(variant.initial_txid, variant.initial_amount, 0, False)\r\n+                variant.check(variant.initial_txid, variant.initial_amount, 0)\r\n             else:\r\n-                variant.expected_balance = 0\r\n+                variant.amount_received = 0\r\n                 variant.expected_txs = 0\r\n                 variant.check()\r\n \r\n\r\n```\r\n</details>\r\n",
      "created_at": "2024-01-05T17:19:11Z",
      "updated_at": "2024-01-05T17:25:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443144137",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443144137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208149",
      "pull_request_review_id": 1806568472,
      "id": 1443208149,
      "node_id": "PRRC_kwDOABII585WBZvV",
      "diff_hunk": "@@ -79,7 +82,7 @@ def do_import(self, timestamp):\n             )\n             assert_equal(response, [{\"success\": True}])\n \n-    def check(self, txid=None, amount=None, confirmation_height=None):\n+    def check(self, txid=None, amount=None, confirmation_height=None, amount_is_balance=True):",
      "path": "test/functional/wallet_import_rescan.py",
      "position": null,
      "original_position": 17,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "in_reply_to_id": 1443144137,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, taken.",
      "created_at": "2024-01-05T18:11:55Z",
      "updated_at": "2024-01-05T18:14:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443208149",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208149"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208232",
      "pull_request_review_id": 1806568472,
      "id": 1443208232,
      "node_id": "PRRC_kwDOABII585WBZwo",
      "diff_hunk": "@@ -267,14 +271,45 @@ def run_test(self):\n                 address_type=variant.address_type.value,\n             ))\n             variant.key = self.nodes[1].dumpprivkey(variant.address[\"address\"])\n-            variant.initial_amount = get_rand_amount()\n+            variant.initial_amount = get_rand_amount() * 2\n             variant.initial_txid = self.nodes[0].sendtoaddress(variant.address[\"address\"], variant.initial_amount)\n             variant.confirmation_height = 0\n             variant.timestamp = timestamp\n \n+        # Mine a block so these parents are confirmed\n+        assert_equal(len(self.nodes[0].getrawmempool()), len(mempool_variants))\n+        self.sync_mempools()\n+        block_to_disconnect = self.generate(self.nodes[0], 1)",
      "path": "test/functional/wallet_import_rescan.py",
      "position": null,
      "original_position": 44,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "in_reply_to_id": 1442918332,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree, taken",
      "created_at": "2024-01-05T18:12:00Z",
      "updated_at": "2024-01-05T18:14:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443208232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 282,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208305",
      "pull_request_review_id": 1806568472,
      "id": 1443208305,
      "node_id": "PRRC_kwDOABII585WBZxx",
      "diff_hunk": "@@ -267,14 +271,45 @@ def run_test(self):\n                 address_type=variant.address_type.value,\n             ))\n             variant.key = self.nodes[1].dumpprivkey(variant.address[\"address\"])\n-            variant.initial_amount = get_rand_amount()\n+            variant.initial_amount = get_rand_amount() * 2\n             variant.initial_txid = self.nodes[0].sendtoaddress(variant.address[\"address\"], variant.initial_amount)\n             variant.confirmation_height = 0\n             variant.timestamp = timestamp\n \n+        # Mine a block so these parents are confirmed\n+        assert_equal(len(self.nodes[0].getrawmempool()), len(mempool_variants))\n+        self.sync_mempools()\n+        block_to_disconnect = self.generate(self.nodes[0], 1)\n+        assert_equal(len(self.nodes[0].getrawmempool()), 0)\n+\n+        # For each variant, create an unconfirmed child transaction from initial_txid, sending half of the balance to\n+        # itself and the other half to unspendable/fees. This transaction is only recognizable as\n+        # belonging to this wallet when the inputs are known. That means the rescan must process the\n+        # parent before the child.\n+        for variant in mempool_variants:\n+            inputs_to_spend = [txin for txin in self.nodes[1].listunspent() if txin[\"txid\"] == variant.initial_txid]",
      "path": "test/functional/wallet_import_rescan.py",
      "position": null,
      "original_position": 52,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "in_reply_to_id": 1442808773,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "taken",
      "created_at": "2024-01-05T18:12:05Z",
      "updated_at": "2024-01-05T18:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443208305",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 290,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443209504",
      "pull_request_review_id": 1806568472,
      "id": 1443209504,
      "node_id": "PRRC_kwDOABII585WBaEg",
      "diff_hunk": "@@ -283,9 +318,11 @@ def run_test(self):\n             variant.node = self.nodes[2 + IMPORT_NODES.index(ImportNode(variant.prune, expect_rescan))]\n             variant.do_import(variant.timestamp)\n             if expect_rescan:\n-                variant.expected_balance = variant.initial_amount\n+                # Ensure both transactions were rescanned\n+                assert_equal(variant.node.gettransaction(variant.initial_txid)['confirmations'], 0)\n+                assert_equal(variant.node.gettransaction(variant.child_txid)['confirmations'], 0)",
      "path": "test/functional/wallet_import_rescan.py",
      "position": 98,
      "original_position": 85,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "in_reply_to_id": 1443052612,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a similar comment.",
      "created_at": "2024-01-05T18:13:40Z",
      "updated_at": "2024-01-05T18:14:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443209504",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443209504"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": 321,
      "original_start_line": 322,
      "start_side": "RIGHT",
      "line": 322,
      "original_line": 322,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445998556",
      "pull_request_review_id": 1811002749,
      "id": 1445998556,
      "node_id": "PRRC_kwDOABII585WMC_c",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that descriptor wallets rescan mempool transactions properly when importing.\"\"\"\n+\n+from test_framework.address import (\n+    address_to_scriptpubkey,\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+from test_framework.wallet import MiniWallet\n+from test_framework.wallet_util import test_address\n+\n+\n+class WalletRescanUnconfirmed(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, legacy=False)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+        # Immediate tx relay\n+        self.extra_args = [['-whitelist=noban@127.0.0.1']] * self.num_nodes\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def run_test(self):\n+        # Node with which we will use to send funds to the wallet and mine blocks",
      "path": "test/functional/wallet_rescan_unconfirmed.py",
      "position": null,
      "original_position": 31,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "fa2b8d0e30c45b4ff59db1ac6aaeab3dc10f3df3",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "grammar nit\r\n```suggestion\r\n        # Node which we will use to send funds to the wallet and mine blocks\r\n```",
      "created_at": "2024-01-09T11:56:38Z",
      "updated_at": "2024-01-09T12:09:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1445998556",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445998556"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446005072",
      "pull_request_review_id": 1811002749,
      "id": 1446005072,
      "node_id": "PRRC_kwDOABII585WMElQ",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that descriptor wallets rescan mempool transactions properly when importing.\"\"\"\n+\n+from test_framework.address import (\n+    address_to_scriptpubkey,\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+from test_framework.wallet import MiniWallet\n+from test_framework.wallet_util import test_address\n+\n+\n+class WalletRescanUnconfirmed(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, legacy=False)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+        # Immediate tx relay\n+        self.extra_args = [['-whitelist=noban@127.0.0.1']] * self.num_nodes\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def run_test(self):\n+        # Node with which we will use to send funds to the wallet and mine blocks\n+        tester_node = self.nodes[0]\n+        # Node on which the wallet is originally created\n+        orig_wallet_node = self.nodes[1]\n+        # Node which will import the wallet and rescan blocks / mempool for transactions\n+        import_wallet_node = self.nodes[2]\n+\n+\n+        self.log.info(\"Create wallets and mine initial chain\")\n+        tester_wallet = MiniWallet(tester_node)\n+        self.generate(tester_wallet, 110)",
      "path": "test/functional/wallet_rescan_unconfirmed.py",
      "position": null,
      "original_position": 41,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "fa2b8d0e30c45b4ff59db1ac6aaeab3dc10f3df3",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a reason it's 110 and not `COINBASE_MATURITY`?",
      "created_at": "2024-01-09T12:00:26Z",
      "updated_at": "2024-01-09T12:09:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1446005072",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446005072"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446011145",
      "pull_request_review_id": 1811002749,
      "id": 1446011145,
      "node_id": "PRRC_kwDOABII585WMGEJ",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that descriptor wallets rescan mempool transactions properly when importing.\"\"\"\n+\n+from test_framework.address import (\n+    address_to_scriptpubkey,\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+from test_framework.wallet import MiniWallet\n+from test_framework.wallet_util import test_address\n+\n+\n+class WalletRescanUnconfirmed(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, legacy=False)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+        # Immediate tx relay\n+        self.extra_args = [['-whitelist=noban@127.0.0.1']] * self.num_nodes\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def run_test(self):\n+        # Node with which we will use to send funds to the wallet and mine blocks\n+        tester_node = self.nodes[0]\n+        # Node on which the wallet is originally created\n+        orig_wallet_node = self.nodes[1]\n+        # Node which will import the wallet and rescan blocks / mempool for transactions\n+        import_wallet_node = self.nodes[2]\n+\n+\n+        self.log.info(\"Create wallets and mine initial chain\")\n+        tester_wallet = MiniWallet(tester_node)\n+        self.generate(tester_wallet, 110)\n+\n+        orig_wallet_node.createwallet(wallet_name='w0', disable_private_keys=False, descriptors=True)\n+        w0 = orig_wallet_node.get_wallet_rpc('w0')\n+\n+        self.log.info(\"Create a parent tx and mine it in a block that will later be disconnected\")\n+        parent_amount = 100000\n+        parent_address = w0.getnewaddress()\n+        tx_parent_to_reorg = tester_wallet.send_to(\n+            from_node=tester_node,\n+            scriptPubKey=address_to_scriptpubkey(parent_address),\n+            amount=parent_amount,\n+        )\n+        assert tx_parent_to_reorg[\"txid\"] in tester_node.getrawmempool()\n+        block_to_reorg = self.generate(tester_node, 1)[0]\n+        assert_equal(len(tester_node.getrawmempool()), 0)\n+\n+        # Create an unconfirmed child transaction from the parent tx, sending all\n+        # the funds to an unspendable address. Importantly, no change output is created so the\n+        # transaction can't be recognized using its outputs. The wallet rescan needs to know the\n+        # inputs of the transaction to detect it, so the parent must be processed before the child.\n+        w0_utxos = w0.listunspent()\n+\n+        self.log.info(\"Create a child tx and wait for it to propagate to all mempools\")\n+        # The only UTXO available to spend is tx_parent_to_reorg.\n+        assert_equal(len(w0_utxos), 1)\n+        assert_equal(w0_utxos[0][\"txid\"], tx_parent_to_reorg[\"txid\"])\n+        tx_child_unconfirmed_sweep = w0.sendall([ADDRESS_BCRT1_UNSPENDABLE])\n+        self.sync_all()\n+        assert tx_child_unconfirmed_sweep[\"txid\"] in tester_node.getrawmempool()\n+        assert tx_child_unconfirmed_sweep[\"txid\"] in import_wallet_node.getrawmempool()\n+\n+        self.log.info(\"Mock a reorg, causing parent to re-enter mempools after its child\")\n+        for node in self.nodes:\n+            node.invalidateblock(block_to_reorg)\n+            assert tx_parent_to_reorg[\"txid\"] in node.getrawmempool()\n+\n+        self.log.info(\"Import descriptor wallet on another node\")\n+        descriptors_to_import = []\n+        for item in w0.listdescriptors()[\"descriptors\"]:\n+            # descriptors_to_import.append(item)\n+            # use timestamp 0 to tell wallet to rescan entire chain\n+            if not item[\"internal\"]:\n+                descriptors_to_import.append({\"desc\": item[\"desc\"], \"timestamp\": 0, \"label\": \"w0 import\"})\n+        import_wallet_node.createwallet(wallet_name=\"w1\", disable_private_keys=True, blank=True, descriptors=True)\n+        w1 = import_wallet_node.get_wallet_rpc(\"w1\")\n+        w1.importdescriptors(descriptors_to_import)\n+\n+        self.log.info(\"Check that the importing node has properly rescanned mempool transactions\")\n+        # Check that parent address is correctly determined as ismine\n+        test_address(w1, parent_address, solvable=True, ismine=True)\n+        # This would raise a JSONRPCError if the transactions were not identified as belonging to the wallet.\n+        assert_equal(w1.gettransaction(tx_parent_to_reorg[\"txid\"])[\"confirmations\"], 0)\n+        assert_equal(w1.gettransaction(tx_child_unconfirmed_sweep[\"txid\"])[\"confirmations\"], 0)",
      "path": "test/functional/wallet_rescan_unconfirmed.py",
      "position": 95,
      "original_position": 94,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "fa2b8d0e30c45b4ff59db1ac6aaeab3dc10f3df3",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I still think it's unnecessarily confusing for (current and future) reviewers to figure out why confirmations needs to equal 0 when afaiu this is completely unrelated to the test. I would either remove the value comparison or specifically state in the docs that we don't care about the `confirmations` value, just that the response is a JSON object with a field we recognize?",
      "created_at": "2024-01-09T12:06:37Z",
      "updated_at": "2024-01-09T12:09:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1446011145",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446011145"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": 94,
      "original_start_line": 93,
      "start_side": "RIGHT",
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446161874",
      "pull_request_review_id": 1811273879,
      "id": 1446161874,
      "node_id": "PRRC_kwDOABII585WMq3S",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that descriptor wallets rescan mempool transactions properly when importing.\"\"\"\n+\n+from test_framework.address import (\n+    address_to_scriptpubkey,\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+from test_framework.wallet import MiniWallet\n+from test_framework.wallet_util import test_address\n+\n+\n+class WalletRescanUnconfirmed(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, legacy=False)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+        # Immediate tx relay\n+        self.extra_args = [['-whitelist=noban@127.0.0.1']] * self.num_nodes\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def run_test(self):\n+        # Node with which we will use to send funds to the wallet and mine blocks\n+        tester_node = self.nodes[0]\n+        # Node on which the wallet is originally created\n+        orig_wallet_node = self.nodes[1]\n+        # Node which will import the wallet and rescan blocks / mempool for transactions\n+        import_wallet_node = self.nodes[2]\n+\n+\n+        self.log.info(\"Create wallets and mine initial chain\")\n+        tester_wallet = MiniWallet(tester_node)\n+        self.generate(tester_wallet, 110)\n+\n+        orig_wallet_node.createwallet(wallet_name='w0', disable_private_keys=False, descriptors=True)\n+        w0 = orig_wallet_node.get_wallet_rpc('w0')\n+\n+        self.log.info(\"Create a parent tx and mine it in a block that will later be disconnected\")\n+        parent_amount = 100000\n+        parent_address = w0.getnewaddress()\n+        tx_parent_to_reorg = tester_wallet.send_to(\n+            from_node=tester_node,\n+            scriptPubKey=address_to_scriptpubkey(parent_address),\n+            amount=parent_amount,\n+        )\n+        assert tx_parent_to_reorg[\"txid\"] in tester_node.getrawmempool()\n+        block_to_reorg = self.generate(tester_node, 1)[0]\n+        assert_equal(len(tester_node.getrawmempool()), 0)\n+\n+        # Create an unconfirmed child transaction from the parent tx, sending all\n+        # the funds to an unspendable address. Importantly, no change output is created so the\n+        # transaction can't be recognized using its outputs. The wallet rescan needs to know the\n+        # inputs of the transaction to detect it, so the parent must be processed before the child.\n+        w0_utxos = w0.listunspent()\n+\n+        self.log.info(\"Create a child tx and wait for it to propagate to all mempools\")\n+        # The only UTXO available to spend is tx_parent_to_reorg.\n+        assert_equal(len(w0_utxos), 1)\n+        assert_equal(w0_utxos[0][\"txid\"], tx_parent_to_reorg[\"txid\"])\n+        tx_child_unconfirmed_sweep = w0.sendall([ADDRESS_BCRT1_UNSPENDABLE])\n+        self.sync_all()\n+        assert tx_child_unconfirmed_sweep[\"txid\"] in tester_node.getrawmempool()\n+        assert tx_child_unconfirmed_sweep[\"txid\"] in import_wallet_node.getrawmempool()\n+\n+        self.log.info(\"Mock a reorg, causing parent to re-enter mempools after its child\")\n+        for node in self.nodes:\n+            node.invalidateblock(block_to_reorg)\n+            assert tx_parent_to_reorg[\"txid\"] in node.getrawmempool()\n+\n+        self.log.info(\"Import descriptor wallet on another node\")\n+        descriptors_to_import = []\n+        for item in w0.listdescriptors()[\"descriptors\"]:\n+            # descriptors_to_import.append(item)\n+            # use timestamp 0 to tell wallet to rescan entire chain\n+            if not item[\"internal\"]:\n+                descriptors_to_import.append({\"desc\": item[\"desc\"], \"timestamp\": 0, \"label\": \"w0 import\"})\n+        import_wallet_node.createwallet(wallet_name=\"w1\", disable_private_keys=True, blank=True, descriptors=True)\n+        w1 = import_wallet_node.get_wallet_rpc(\"w1\")\n+        w1.importdescriptors(descriptors_to_import)\n+\n+        self.log.info(\"Check that the importing node has properly rescanned mempool transactions\")\n+        # Check that parent address is correctly determined as ismine\n+        test_address(w1, parent_address, solvable=True, ismine=True)\n+        # This would raise a JSONRPCError if the transactions were not identified as belonging to the wallet.\n+        assert_equal(w1.gettransaction(tx_parent_to_reorg[\"txid\"])[\"confirmations\"], 0)\n+        assert_equal(w1.gettransaction(tx_child_unconfirmed_sweep[\"txid\"])[\"confirmations\"], 0)",
      "path": "test/functional/wallet_rescan_unconfirmed.py",
      "position": 95,
      "original_position": 94,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "fa2b8d0e30c45b4ff59db1ac6aaeab3dc10f3df3",
      "in_reply_to_id": 1446011145,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We are testing that they are marked as in-mempool wallet transactions. If the reorg didn't happen, the value would be 1.",
      "created_at": "2024-01-09T14:30:20Z",
      "updated_at": "2024-01-09T15:54:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1446161874",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446161874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": 94,
      "original_start_line": 93,
      "start_side": "RIGHT",
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446269441",
      "pull_request_review_id": 1811449910,
      "id": 1446269441,
      "node_id": "PRRC_kwDOABII585WNFIB",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that descriptor wallets rescan mempool transactions properly when importing.\"\"\"\n+\n+from test_framework.address import (\n+    address_to_scriptpubkey,\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+from test_framework.wallet import MiniWallet\n+from test_framework.wallet_util import test_address\n+\n+\n+class WalletRescanUnconfirmed(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, legacy=False)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+        # Immediate tx relay\n+        self.extra_args = [['-whitelist=noban@127.0.0.1']] * self.num_nodes\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def run_test(self):\n+        # Node with which we will use to send funds to the wallet and mine blocks\n+        tester_node = self.nodes[0]\n+        # Node on which the wallet is originally created\n+        orig_wallet_node = self.nodes[1]\n+        # Node which will import the wallet and rescan blocks / mempool for transactions\n+        import_wallet_node = self.nodes[2]\n+\n+\n+        self.log.info(\"Create wallets and mine initial chain\")\n+        tester_wallet = MiniWallet(tester_node)\n+        self.generate(tester_wallet, 110)",
      "path": "test/functional/wallet_rescan_unconfirmed.py",
      "position": null,
      "original_position": 41,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "fa2b8d0e30c45b4ff59db1ac6aaeab3dc10f3df3",
      "in_reply_to_id": 1446005072,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "changed",
      "created_at": "2024-01-09T15:48:42Z",
      "updated_at": "2024-01-09T15:48:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1446269441",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446269441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446269555",
      "pull_request_review_id": 1811450059,
      "id": 1446269555,
      "node_id": "PRRC_kwDOABII585WNFJz",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that descriptor wallets rescan mempool transactions properly when importing.\"\"\"\n+\n+from test_framework.address import (\n+    address_to_scriptpubkey,\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+from test_framework.wallet import MiniWallet\n+from test_framework.wallet_util import test_address\n+\n+\n+class WalletRescanUnconfirmed(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, legacy=False)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+        # Immediate tx relay\n+        self.extra_args = [['-whitelist=noban@127.0.0.1']] * self.num_nodes\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def run_test(self):\n+        # Node with which we will use to send funds to the wallet and mine blocks",
      "path": "test/functional/wallet_rescan_unconfirmed.py",
      "position": null,
      "original_position": 31,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "fa2b8d0e30c45b4ff59db1ac6aaeab3dc10f3df3",
      "in_reply_to_id": 1445998556,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "taken",
      "created_at": "2024-01-09T15:48:45Z",
      "updated_at": "2024-01-09T15:48:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1446269555",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446269555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449427996",
      "pull_request_review_id": 1816762773,
      "id": 1449427996,
      "node_id": "PRRC_kwDOABII585WZIQc",
      "diff_hunk": "@@ -0,0 +1,98 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that descriptor wallets rescan mempool transactions properly when importing.\"\"\"\n+\n+from test_framework.address import (\n+    address_to_scriptpubkey,\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+)\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+from test_framework.wallet import MiniWallet\n+from test_framework.wallet_util import test_address\n+\n+\n+class WalletRescanUnconfirmed(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, legacy=False)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+        # Immediate tx relay\n+        self.extra_args = [['-whitelist=noban@127.0.0.1']] * self.num_nodes\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def run_test(self):\n+        # Node which we will use to send funds to the wallet and mine blocks\n+        tester_node = self.nodes[0]\n+        # Node on which the wallet is originally created\n+        orig_wallet_node = self.nodes[1]\n+        # Node which will import the wallet and rescan blocks / mempool for transactions\n+        import_wallet_node = self.nodes[2]\n+\n+\n+        self.log.info(\"Create wallets and mine initial chain\")\n+        tester_wallet = MiniWallet(tester_node)\n+        self.generate(tester_wallet, COINBASE_MATURITY)\n+\n+        orig_wallet_node.createwallet(wallet_name='w0', disable_private_keys=False, descriptors=True)\n+        w0 = orig_wallet_node.get_wallet_rpc('w0')\n+\n+        self.log.info(\"Create a parent tx and mine it in a block that will later be disconnected\")\n+        parent_amount = 100000\n+        parent_address = w0.getnewaddress()\n+        tx_parent_to_reorg = tester_wallet.send_to(\n+            from_node=tester_node,\n+            scriptPubKey=address_to_scriptpubkey(parent_address),\n+            amount=parent_amount,\n+        )\n+        assert tx_parent_to_reorg[\"txid\"] in tester_node.getrawmempool()\n+        block_to_reorg = self.generate(tester_node, 1)[0]\n+        assert_equal(len(tester_node.getrawmempool()), 0)\n+\n+        # Create an unconfirmed child transaction from the parent tx, sending all\n+        # the funds to an unspendable address. Importantly, no change output is created so the\n+        # transaction can't be recognized using its outputs. The wallet rescan needs to know the\n+        # inputs of the transaction to detect it, so the parent must be processed before the child.\n+        w0_utxos = w0.listunspent()\n+\n+        self.log.info(\"Create a child tx and wait for it to propagate to all mempools\")\n+        # The only UTXO available to spend is tx_parent_to_reorg.\n+        assert_equal(len(w0_utxos), 1)\n+        assert_equal(w0_utxos[0][\"txid\"], tx_parent_to_reorg[\"txid\"])\n+        tx_child_unconfirmed_sweep = w0.sendall([ADDRESS_BCRT1_UNSPENDABLE])\n+        self.sync_all()\n+        assert tx_child_unconfirmed_sweep[\"txid\"] in tester_node.getrawmempool()\n+        assert tx_child_unconfirmed_sweep[\"txid\"] in import_wallet_node.getrawmempool()\n+\n+        self.log.info(\"Mock a reorg, causing parent to re-enter mempools after its child\")\n+        for node in self.nodes:\n+            node.invalidateblock(block_to_reorg)\n+            assert tx_parent_to_reorg[\"txid\"] in node.getrawmempool()\n+\n+        self.log.info(\"Import descriptor wallet on another node\")\n+        descriptors_to_import = []\n+        for item in w0.listdescriptors()[\"descriptors\"]:\n+            # descriptors_to_import.append(item)",
      "path": "test/functional/wallet_rescan_unconfirmed.py",
      "position": 82,
      "original_position": 82,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "probably should be removed?",
      "created_at": "2024-01-11T21:38:42Z",
      "updated_at": "2024-01-11T21:52:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1449427996",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449427996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449435185",
      "pull_request_review_id": 1816762773,
      "id": 1449435185,
      "node_id": "PRRC_kwDOABII585WZKAx",
      "diff_hunk": "@@ -267,14 +270,44 @@ def run_test(self):\n                 address_type=variant.address_type.value,\n             ))\n             variant.key = self.nodes[1].dumpprivkey(variant.address[\"address\"])\n-            variant.initial_amount = get_rand_amount()\n+            variant.initial_amount = get_rand_amount() * 2\n             variant.initial_txid = self.nodes[0].sendtoaddress(variant.address[\"address\"], variant.initial_amount)\n             variant.confirmation_height = 0\n             variant.timestamp = timestamp\n \n+        # Mine a block so these parents are confirmed\n+        assert_equal(len(self.nodes[0].getrawmempool()), len(mempool_variants))\n+        self.sync_mempools()\n+        block_to_disconnect = self.generate(self.nodes[0], 1)[0]\n+        assert_equal(len(self.nodes[0].getrawmempool()), 0)\n+\n+        # For each variant, create an unconfirmed child transaction from initial_txid, sending all\n+        # the funds to an unspendable address. Importantly, no change output is created so the\n+        # transaction can't be recognized using its outputs. The wallet rescan needs to know the\n+        # inputs of the transaction to detect it, so the parent must be processed before the child.",
      "path": "test/functional/wallet_import_rescan.py",
      "position": 63,
      "original_position": 63,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What do you think about adding one line to these docs in each file to reference the other file? Might be useful to e.g. keep tests in sync if problems are found, or when people wonder why this is (at first sight) only tested for legacy or descriptor wallets.\r\n\r\n```suggestion\r\n        # inputs of the transaction to detect it, so the parent must be processed before the child.\r\n        # This behaviour is tested for descriptor wallets in wallet_rescan_unconfirmed.py.\r\n```",
      "created_at": "2024-01-11T21:47:32Z",
      "updated_at": "2024-01-11T21:52:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1449435185",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449435185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 287,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449439228",
      "pull_request_review_id": 1816762773,
      "id": 1449439228,
      "node_id": "PRRC_kwDOABII585WZK_8",
      "diff_hunk": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that descriptor wallets rescan mempool transactions properly when importing.\"\"\"\n+\n+from test_framework.address import (\n+    address_to_scriptpubkey,\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+from test_framework.wallet import MiniWallet\n+from test_framework.wallet_util import test_address\n+\n+\n+class WalletRescanUnconfirmed(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, legacy=False)\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+        # Immediate tx relay\n+        self.extra_args = [['-whitelist=noban@127.0.0.1']] * self.num_nodes\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def run_test(self):\n+        # Node with which we will use to send funds to the wallet and mine blocks\n+        tester_node = self.nodes[0]\n+        # Node on which the wallet is originally created\n+        orig_wallet_node = self.nodes[1]\n+        # Node which will import the wallet and rescan blocks / mempool for transactions\n+        import_wallet_node = self.nodes[2]\n+\n+\n+        self.log.info(\"Create wallets and mine initial chain\")\n+        tester_wallet = MiniWallet(tester_node)\n+        self.generate(tester_wallet, 110)\n+\n+        orig_wallet_node.createwallet(wallet_name='w0', disable_private_keys=False, descriptors=True)\n+        w0 = orig_wallet_node.get_wallet_rpc('w0')\n+\n+        self.log.info(\"Create a parent tx and mine it in a block that will later be disconnected\")\n+        parent_amount = 100000\n+        parent_address = w0.getnewaddress()\n+        tx_parent_to_reorg = tester_wallet.send_to(\n+            from_node=tester_node,\n+            scriptPubKey=address_to_scriptpubkey(parent_address),\n+            amount=parent_amount,\n+        )\n+        assert tx_parent_to_reorg[\"txid\"] in tester_node.getrawmempool()\n+        block_to_reorg = self.generate(tester_node, 1)[0]\n+        assert_equal(len(tester_node.getrawmempool()), 0)\n+\n+        # Create an unconfirmed child transaction from the parent tx, sending all\n+        # the funds to an unspendable address. Importantly, no change output is created so the\n+        # transaction can't be recognized using its outputs. The wallet rescan needs to know the\n+        # inputs of the transaction to detect it, so the parent must be processed before the child.\n+        w0_utxos = w0.listunspent()\n+\n+        self.log.info(\"Create a child tx and wait for it to propagate to all mempools\")\n+        # The only UTXO available to spend is tx_parent_to_reorg.\n+        assert_equal(len(w0_utxos), 1)\n+        assert_equal(w0_utxos[0][\"txid\"], tx_parent_to_reorg[\"txid\"])\n+        tx_child_unconfirmed_sweep = w0.sendall([ADDRESS_BCRT1_UNSPENDABLE])\n+        self.sync_all()\n+        assert tx_child_unconfirmed_sweep[\"txid\"] in tester_node.getrawmempool()\n+        assert tx_child_unconfirmed_sweep[\"txid\"] in import_wallet_node.getrawmempool()\n+\n+        self.log.info(\"Mock a reorg, causing parent to re-enter mempools after its child\")\n+        for node in self.nodes:\n+            node.invalidateblock(block_to_reorg)\n+            assert tx_parent_to_reorg[\"txid\"] in node.getrawmempool()\n+\n+        self.log.info(\"Import descriptor wallet on another node\")\n+        descriptors_to_import = []\n+        for item in w0.listdescriptors()[\"descriptors\"]:\n+            # descriptors_to_import.append(item)\n+            # use timestamp 0 to tell wallet to rescan entire chain\n+            if not item[\"internal\"]:\n+                descriptors_to_import.append({\"desc\": item[\"desc\"], \"timestamp\": 0, \"label\": \"w0 import\"})\n+        import_wallet_node.createwallet(wallet_name=\"w1\", disable_private_keys=True, blank=True, descriptors=True)\n+        w1 = import_wallet_node.get_wallet_rpc(\"w1\")\n+        w1.importdescriptors(descriptors_to_import)\n+\n+        self.log.info(\"Check that the importing node has properly rescanned mempool transactions\")\n+        # Check that parent address is correctly determined as ismine\n+        test_address(w1, parent_address, solvable=True, ismine=True)\n+        # This would raise a JSONRPCError if the transactions were not identified as belonging to the wallet.\n+        assert_equal(w1.gettransaction(tx_parent_to_reorg[\"txid\"])[\"confirmations\"], 0)\n+        assert_equal(w1.gettransaction(tx_child_unconfirmed_sweep[\"txid\"])[\"confirmations\"], 0)",
      "path": "test/functional/wallet_rescan_unconfirmed.py",
      "position": 95,
      "original_position": 94,
      "commit_id": "d9df438c6e581dae0c818a4c2f5fe95627ae26bc",
      "original_commit_id": "fa2b8d0e30c45b4ff59db1ac6aaeab3dc10f3df3",
      "in_reply_to_id": 1446011145,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Makes sense, thank you! I failed to appreciate that we're calling the wallet `gettransaction` RPC, and not the not `getrawtransaction` RPC.",
      "created_at": "2024-01-11T21:51:30Z",
      "updated_at": "2024-01-11T21:52:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1449439228",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449439228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
        }
      },
      "start_line": 94,
      "original_start_line": 93,
      "start_side": "RIGHT",
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    }
  ]
}