{
  "type": "issue",
  "issue": {
    "id": 2425976655,
    "node_id": "I_kwDOABII586QmXdP",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30514",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30514/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30514/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30514/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/30514",
    "number": 30514,
    "state": "open",
    "state_reason": null,
    "title": "implicit-integer-sign-change in ActivateSnapshot",
    "body": "```\r\n$ echo 'dXR4b/8BAPq/tdph' | base64 --decode > ./crash\r\n\r\n$ UBSAN_OPTIONS=\"suppressions=$PWD/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\" FUZZ=utxo_snapshot ./src/test/fuzz/fuzz ./crash\r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 2946336184\r\nINFO: Loaded 1 modules   (625551 inline 8-bit counters): 625551 [0x572ffe28af78, 0x572ffe323b07), \r\nINFO: Loaded 1 PC tables (625551 PCs): 625551 [0x572ffe323b08,0x572ffecaf3f8), \r\n./src/test/fuzz/fuzz: Running 1 inputs 1 time(s) each.\r\nRunning: ./crash\r\nvalidation.cpp:5657:28: runtime error: implicit conversion from type 'uint32_t' (aka 'unsigned int') of value 3275262676 (32-bit, unsigned) to type 'int' changed the value to -1019704620 (32-bit, signed)\r\n    #0 0x572ffc2f8a69 in ChainstateManager::ActivateSnapshot(AutoFile&, node::SnapshotMetadata const&, bool) src/validation.cpp:5657:28\r\n    #1 0x572ffb5b93ac in (anonymous namespace)::utxo_snapshot_fuzz_target(std::span<unsigned char const, 18446744073709551615ul>)::$_0::operator()() const src/test/fuzz/utxo_snapshot.cpp:83:27\r\n    #2 0x572ffb5b6896 in (anonymous namespace)::utxo_snapshot_fuzz_target(std::span<unsigned char const, 18446744073709551615ul>) src/test/fuzz/utxo_snapshot.cpp:96:9\r\n    #3 0x572ffb73ac5d in std::function<void (std::span<unsigned char const, 18446744073709551615ul>)>::operator()(std::span<unsigned char const, 18446744073709551615ul>) const /usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_function.h:591:9\r\n    #4 0x572ffb73ac5d in LLVMFuzzerTestOneInput src/test/fuzz/fuzz.cpp:209:5\r\n\r\nSUMMARY: UndefinedBehaviorSanitizer: implicit-integer-sign-change validation.cpp:5657:28 \r\n```\r\n\r\nThe reason is that metadata is untrusted input, but it isn't sanitized at that point. I presume it can also be reproduced with the integer sanitizer and:\r\n\r\n```diff\r\ndiff --git a/test/functional/feature_assumeutxo.py b/test/functional/feature_assumeutxo.py\r\nindex 943862f8cf..fcb894c924 100755\r\n--- a/test/functional/feature_assumeutxo.py\r\n+++ b/test/functional/feature_assumeutxo.py\r\n@@ -113,10 +113,10 @@ class AssumeutxoTest(BitcoinTestFramework):\r\n         bogus_block_hash = \"0\" * 64  # Represents any unknown block hash\r\n         # The height is not used for anything critical currently, so we just\r\n         # confirm the manipulation in the error message\r\n-        bogus_height = 1337\r\n+        bogus_height = -1019704620\r\n         for bad_block_hash in [bogus_block_hash, prev_block_hash]:\r\n             with open(bad_snapshot_path, 'wb') as f:\r\n-                f.write(valid_snapshot_contents[:11] + bogus_height.to_bytes(4, \"little\") + bytes.fromhex(bad_block_hash)[::-1] + valid_snapshot_contents[47:])\r\n+                f.write(valid_snapshot_contents[:11] + bogus_height.to_bytes(4, \"little\", signed=True) + bytes.fromhex(bad_block_hash)[::-1] + valid_snapshot_contents[47:])\r\n \r\n             msg = f\"Unable to load UTXO snapshot: assumeutxo block hash in snapshot metadata not recognized (hash: {bad_block_hash}, height: {bogus_height}). The following snapshot heights are available: 110, 200, 299.\"\r\n             assert_raises_rpc_error(-32603, msg, node.loadtxoutset, bad_snapshot_path)\r\n```\r\n\r\n",
    "user": {
      "login": "maflcko",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maflcko",
      "html_url": "https://github.com/maflcko",
      "followers_url": "https://api.github.com/users/maflcko/followers",
      "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
      "organizations_url": "https://api.github.com/users/maflcko/orgs",
      "repos_url": "https://api.github.com/users/maflcko/repos",
      "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/maflcko/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 1,
    "created_at": "2024-07-23T19:37:31Z",
    "updated_at": "2024-07-23T19:38:21Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 2246139045,
      "node_id": "IC_kwDOABII586F4Vyl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2246139045",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T19:38:20Z",
      "updated_at": "2024-07-23T19:38:20Z",
      "author_association": "MEMBER",
      "body": "\r\nGenerally, I am not sure if the metadata is the right place to add the block height. It is just another field that may be corrupt (intentionally, or accidentally) and may lead to issues down the line, when used in a context that hasn't fully checked it.\r\n\r\nMy recommendation would be to just remove it from the metadata. The block hash should be sufficient to get the height (for logging and other purposes). And if the block headers are insufficient to get the height, `ActivateSnapshot` will error anyway, due to missing headers.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/30514#issuecomment-2246139045",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30514"
    }
  ]
}