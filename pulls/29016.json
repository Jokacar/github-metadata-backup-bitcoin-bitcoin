{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016",
    "id": 1633360227,
    "node_id": "PR_kwDOABII585hWxlj",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29016",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29016.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29016.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/07008477b8174d00627c5fe75859bc1f85602c69",
    "number": 29016,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "RPC: add new `listmempooltransactions`",
    "user": {
      "login": "niftynei",
      "id": 1097769,
      "node_id": "MDQ6VXNlcjEwOTc3Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niftynei",
      "html_url": "https://github.com/niftynei",
      "followers_url": "https://api.github.com/users/niftynei/followers",
      "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
      "organizations_url": "https://api.github.com/users/niftynei/orgs",
      "repos_url": "https://api.github.com/users/niftynei/repos",
      "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/niftynei/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "## Proposed Update\r\n\r\nAdd a new RPC endpoint, `listmempooltransactions`. Takes as args a `start_sequence` and `verbose`.\r\n\r\nReturns: \r\n- if verbose false, list of txids + their `entry_sequence` where each entry's `entry_sequence` >= the provided `start_sequence.\r\n- if verbose true, raw tx output info including each entry's `entry_sequence`.\r\n\r\n\r\nBuilds on work done in #19572.\r\n\r\n## Rationale\r\nThe current mempool RPCs are lacking an ability to scan for updates in a more efficient manner. You can subscribe for updates via the ZMQ pipeline, but even this is inefficient to recover from if your consumer app falls offline.\r\n\r\nZMQ also is a push protocol, and doesn't provide a rate-limiting mechanism.\r\n\r\nIn the case of core-lightning, we don't assume access to bitcoin-core/ZMQ, so we're unable to do efficient mempool querying. There have been some recent CVEs come to light where having optional access to mempool updates may prove useful.\r\n\r\nPaging, filtering by last seen, and the addition of full tx data in the call makes mempool data more readily available to any client app. This is good for self-sovereignty as it reduces the need for additional dependencies and app data sources to efficiently query and parse mempool data. \r\n\r\n\r\n## Other Things I Considered\r\nMy initial attempt at this modified `getrawmempool` to \r\n- take a `start_sequence` to allow for filtering, and\r\n- adding the txdata (inputs outpoints + outputs (amount + scriptPubKeys)). \r\n\r\nThat was pretty ugly however, given that the current data model for `getrawmempool` is around a concept of \"mempool entry\" data. This new RPC in contrast only returns transaction data (and does not report on information about other mempool dependencies etc; for that you should still call `getrawmempool` or `getmempoolentry`). \r\n\r\nYou could add a `start_sequence` to the existing `getrawmempool` to help with entry data paging/querying but that's secondary to my goals for fetching relevant txdata from the mempool.\r\n\r\n## Additions/Changes\r\n\r\nThis PR could be further improved by\r\n- Add a `page_size` argument which allows a calling application to limit the number of results returned.\r\n\r\n\r\n## Future Work\r\nThe current RPC only supports finding *added* mempool transactions. It'd be interesting to experiment with keeping track of evicted/not mined transactions and adding them to the results.\r\n\r\nThis would require:\r\n- An additional memory buffer (perhaps a configurable memory limited ring buffer?) for evicted tx data and the mempool sequence of the eviction.\r\n- Adding a `sequence_action` field for results, which indicates whether the sequence is for the tx's `addition` or `eviction`.\r\n\r\nYou could also keep track of tx movements into blocks, but this seems less useful/urgent in general.\r\n\r\n## Usage\r\nYou can see an example of this implemented and used in CLN for finding paid onchain invoices in this branch: https://github.com/ElementsProject/lightning/compare/master...niftynei:lightning:nifty/mempool-scan\r\n\r\nNote that the CLN implementation doesn't currently keep the mempool_sequence in disk, so it'll reload/rescan the mempool at start. This *may* be desirable?\r\n\r\nHere's how a caller would use this\r\n\r\n```\r\n1) start node\r\n2) listmempooltransactions 0 to get backlog\r\n3) call listmempooltransactions again with `start_sequence` set to `mempool_sequence` result from last call\r\n```\r\n\r\nNote that this works well with ZMQ as the `mempool_sequence` number is identical.",
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-12-06T22:32:25Z",
    "updated_at": "2024-04-10T21:49:22Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "ea33d3265a55e27de5272a58b6252b73d38e5b61",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "niftynei:nifty/listmempoolentry",
      "ref": "nifty/listmempoolentry",
      "sha": "07008477b8174d00627c5fe75859bc1f85602c69",
      "user": {
        "login": "niftynei",
        "id": 1097769,
        "node_id": "MDQ6VXNlcjEwOTc3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/niftynei",
        "html_url": "https://github.com/niftynei",
        "followers_url": "https://api.github.com/users/niftynei/followers",
        "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
        "organizations_url": "https://api.github.com/users/niftynei/orgs",
        "repos_url": "https://api.github.com/users/niftynei/repos",
        "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/niftynei/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 246689974,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNDY2ODk5NzQ=",
        "name": "bitcoin",
        "full_name": "niftynei/bitcoin",
        "owner": {
          "login": "niftynei",
          "id": 1097769,
          "node_id": "MDQ6VXNlcjEwOTc3Njk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/niftynei",
          "html_url": "https://github.com/niftynei",
          "followers_url": "https://api.github.com/users/niftynei/followers",
          "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
          "organizations_url": "https://api.github.com/users/niftynei/orgs",
          "repos_url": "https://api.github.com/users/niftynei/repos",
          "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/niftynei/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/niftynei/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/niftynei/bitcoin",
        "archive_url": "https://api.github.com/repos/niftynei/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/niftynei/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/niftynei/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/niftynei/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/niftynei/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/niftynei/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/niftynei/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/niftynei/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/niftynei/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/niftynei/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/niftynei/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/niftynei/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/niftynei/bitcoin/events",
        "forks_url": "https://api.github.com/repos/niftynei/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/niftynei/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/niftynei/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/niftynei/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/niftynei/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/niftynei/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/niftynei/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/niftynei/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/niftynei/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/niftynei/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/niftynei/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/niftynei/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/niftynei/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/niftynei/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/niftynei/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/niftynei/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:niftynei/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/niftynei/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/niftynei/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/niftynei/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/niftynei/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/niftynei/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/niftynei/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/niftynei/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/niftynei/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/niftynei/bitcoin/hooks",
        "svn_url": "https://github.com/niftynei/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 230174,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-12-06T07:27:01Z",
        "created_at": "2020-03-11T22:11:43Z",
        "updated_at": "2022-12-05T22:19:05Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2e8ec6b338a825a7155fff1be83993e3834ab655",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35049,
        "stargazers_count": 75365,
        "watchers_count": 75365,
        "size": 254588,
        "default_branch": "master",
        "open_issues_count": 681,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-04-10T21:39:21Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-04-10T21:08:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 160,
    "deletions": 1,
    "changed_files": 8,
    "commits": 2,
    "review_comments": 2,
    "comments": 12
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNiNDY2ZjQ0NTFlMTA1MDI4ZDQxZDgxNTM1ZTFjOTBjNzI1OWQ0YWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb466f4451e105028d41d81535e1c90c7259d4ad",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cb466f4451e105028d41d81535e1c90c7259d4ad",
      "tree": {
        "sha": "6fda30e5744361300b012070290fca006916b3b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6fda30e5744361300b012070290fca006916b3b2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6fda30e5744361300b012070290fca006916b3b2\nparent 6d5790956f45e3de5c6c4ee6fda21878b0d1287b\nauthor niftynei <niftynei@gmail.com> 1701748056 -0600\ncommitter niftynei <niftynei@gmail.com> 1701847607 -0600\n\nrpc: add new `listmempooltransactions`\n\nAllow bitcoin-core clients to get more interesting information out\nof the mempool more easily, including by filtering for 'latest txs'.\n\nEventually would be a good interface for grabbing all mempool\ntransaction data, including information about evicted transactions\n(which would be useful for avoiding situations where removed\ntransactions contained data important for bitcoin applications). This\nwould require the addition of a mempool tx log, however the\n`mempool_sequence` id plus this call and the use of a ring buffer(?)\nwould allow for clients to get complete scans of anything a bitcoin\ncore node had seen in its mempool.\n\nThat's future work. For now we start with the interface over existing\ninformation.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMN5pOuDenjez5+trv/D2eBDB7tEFAmVwIjcACgkQv/D2eBDB\n7tGA1w//S5Q3zrMkhF2tewMiAAuXyOMw2HXaxLNV94WEWt8YuqLaGSc2+y917pXU\nN7LIDdzIJ3ufvQQlmuMN3ljxMlafmkl1LruziqFUU6ki0YCkazYDoIbvoGGJm+14\nFXgbiEi2ohqQdNnciHs64cbbqivIxOvVabXxRD6+5j45uWukI/ROiZWm1jkeaVGM\nCyEVq4ZlPByoVvs7oe/zAQidq4oBblJH28jhpLjC7xH/LQiVTEykiGMvehxee4Vc\nDM3ymZbQtJ/fVPg3l/XpIwQN8Sjl4F5nF4MdwKHHPUqliWEn0JxrHcWDYuBOqh3Y\n04TNhkPkOLDV/ZPAKCJTOZ2szFxS81V3gEodfI0NzvM/d5Mp0rOzimSK0i4oFD1a\nxyN6rOAMnJ+rYYGooXercT80srjW/eEnbXh9E/KuBg1lPkp3xzxCiSwi131It9Ot\ngMxJjuT2qGWfyrW25EX2I75pT0XyYzRwVcqgoO4B4f+2J7KaeG51jbkBK5hBEzSt\nD8/jY6iDw9kDCcuhV9/QwY4qbKo0Q+oNN5EsqBEIKwViUVGf0BGphToVAKuT8Jbn\n4zMT94Q6oxfU3OCh73MVvdDwUKrrVysfu4THsAmKo/bmtpHgKgAkboCN1xzB/pAR\ntzkjlgMX6ajizgiymEi5zuGsUIR62vKTHx07gXFj1DfTmZOFgV8=\n=VFwr\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d5790956f45e3de5c6c4ee6fda21878b0d1287b",
          "sha": "6d5790956f45e3de5c6c4ee6fda21878b0d1287b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6d5790956f45e3de5c6c4ee6fda21878b0d1287b"
        }
      ],
      "message": "rpc: add new `listmempooltransactions`\n\nAllow bitcoin-core clients to get more interesting information out\nof the mempool more easily, including by filtering for 'latest txs'.\n\nEventually would be a good interface for grabbing all mempool\ntransaction data, including information about evicted transactions\n(which would be useful for avoiding situations where removed\ntransactions contained data important for bitcoin applications). This\nwould require the addition of a mempool tx log, however the\n`mempool_sequence` id plus this call and the use of a ring buffer(?)\nwould allow for clients to get complete scans of anything a bitcoin\ncore node had seen in its mempool.\n\nThat's future work. For now we start with the interface over existing\ninformation.",
      "committer": {
        "name": "niftynei",
        "email": "niftynei@gmail.com",
        "date": "2023-12-06T07:26:47Z"
      },
      "author": {
        "name": "niftynei",
        "email": "niftynei@gmail.com",
        "date": "2023-12-05T03:47:36Z"
      },
      "sha": "cb466f4451e105028d41d81535e1c90c7259d4ad"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA3MDA4NDc3YjgxNzRkMDA2MjdjNWZlNzU4NTliYzFmODU2MDJjNjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07008477b8174d00627c5fe75859bc1f85602c69",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/07008477b8174d00627c5fe75859bc1f85602c69",
      "tree": {
        "sha": "8b5d3b1992a01f10e6287f6ca58efd69780e01f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b5d3b1992a01f10e6287f6ca58efd69780e01f0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8b5d3b1992a01f10e6287f6ca58efd69780e01f0\nparent cb466f4451e105028d41d81535e1c90c7259d4ad\nauthor niftynei <niftynei@gmail.com> 1701748247 -0600\ncommitter niftynei <niftynei@gmail.com> 1701847607 -0600\n\nrest: add `listmempooltransactions` to the REST API\n\nMake the `listmempooltransactions` rpc available via the REST api\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMN5pOuDenjez5+trv/D2eBDB7tEFAmVwIjcACgkQv/D2eBDB\n7tFSGhAAjeIHiJ762Tx5r4YH87zIGeyNQwhMEwpHFfXA8jqOxDhPkayvnPdoii4h\nj6feYMYlQzfm3VLJxSS1j4opm8eYvjFFmn55txe8xDuIUZjYn9FW0IeaGdfm+9KF\n1lla03bb2tOJTAkm6Otf1zlInu0t/btVb9Rv4eYdQuTjIul6o2QmHp6VU41SidJy\nfNkpTgL4MQ3tNg+KpdH/5QadrzsrUkEVk4hsI+z7mE6oPgS98mSO0Q+vrvf18uu1\nktp8rTVyh0vKx+g+VBXe4MtAAOSF4hrxqh3k6US+kezPbJegwdmhorlXUgoM+Iuo\ncfZtdw/SSi6ajcc7otr+9SP9f0ev5qwD5VMo+DBIBUvuJs6k+iuJFrSPYKcz6iXM\nRs+esglwLAuC5k/9IGXCDglbjuAd2P/AE5LdpUBehFcZbzZL3Pdn0apYB116WHyT\nbLVTTjbd+bn1Awz71UnQlEkkHV7JAlEc83P9rfnvIr0jKPg5kinsOdg7XmiRYQL4\nsjWOLFa5UvNbIbKbPYJtH1fdhqTgNpHpfF/XeMftRe7T1y4zWwsAZF6HJb4g5r5f\nj+A55hInZK0X0BX6IgSOKC2IyM5Hicebxm9QnxUCCCv/XfLjiR9mdJY5ZHulq9qG\nnJH6+X/Ekx8Tv8eNsZlznG4Nw5pXdOTS+OQebBEQG/qpFvbS1JE=\n=qz0s\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb466f4451e105028d41d81535e1c90c7259d4ad",
          "sha": "cb466f4451e105028d41d81535e1c90c7259d4ad",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cb466f4451e105028d41d81535e1c90c7259d4ad"
        }
      ],
      "message": "rest: add `listmempooltransactions` to the REST API\n\nMake the `listmempooltransactions` rpc available via the REST api",
      "committer": {
        "name": "niftynei",
        "email": "niftynei@gmail.com",
        "date": "2023-12-06T07:26:47Z"
      },
      "author": {
        "name": "niftynei",
        "email": "niftynei@gmail.com",
        "date": "2023-12-05T03:50:47Z"
      },
      "sha": "07008477b8174d00627c5fe75859bc1f85602c69"
    },
    {
      "event": "commented",
      "id": 1843794495,
      "node_id": "IC_kwDOABII585t5hI_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843794495",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T22:32:27Z",
      "updated_at": "2024-01-09T00:02:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29016).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [kristapsk](https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1880094062), [bordalix](https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1880184679) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24748](https://github.com/bitcoin/bitcoin/pull/24748) (test/BIP324: functional tests for v2 P2P encryption by stratospher)\n* [#19463](https://github.com/bitcoin/bitcoin/pull/19463) (Prune locks by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1843794495",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016"
    },
    {
      "event": "labeled",
      "id": 11174347007,
      "node_id": "LE_lADOABII585498VmzwAAAAKaCwD_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11174347007",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T22:32:30Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "labeled",
      "id": 11174680795,
      "node_id": "LE_lADOABII585498VmzwAAAAKaEBjb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11174680795",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T23:20:52Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1768993243,
      "node_id": "PRR_kwDOABII585pcLHb",
      "url": null,
      "actor": null,
      "commit_id": "07008477b8174d00627c5fe75859bc1f85602c69",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#pullrequestreview-1768993243",
      "submitted_at": "2023-12-07T02:17:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T02:17:18Z",
      "updated_at": "2023-12-07T02:17:18Z",
      "source": {
        "issue": {
          "id": 1503703234,
          "node_id": "PR_kwDOABII585F0rVt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26728",
          "number": 26728,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Have the wallet store the key for automatically generated descriptors",
          "body": "The wallet currently does not know the master key that was used to generate the automatically generated descriptors. This makes it difficult to add new automatically generated descriptors when new ones are introduced. So instead of losing this information after the descriptors are created, have `CWallet` store it. The xpub will be stored in a new `activehdkey` field. The private key must be one of the keys that is used by the descriptors, and will be extracted upon loading.\r\n\r\nAs this is a new field, wallets will be automatically upgraded upon loading. This loading is backwards compatible and uses a new non-required flag `WALLET_FLAG_GLOBAL_HD_KEY` to signal that the upgrade completed. The upgrade will search for an xpub that is shared by `pkh()`, `wpkh()`, and `sh(wpkh()` descriptors with the derivation pattern that we use. For new wallets, the xpub will be set during descriptor creation rather than trying to reverse engineer it. The flag will be set for all wallets, regardless of whether such an xpub was found or can even exist, in order to indicate that the upgrade will not need to be run in the future.\r\n\r\nThis allows us to have a `gethdkey` command which is useful for those who need a simple way to get an xpub from a wallet. `gethdkey` can also take a boolean parameter to indicate whether it should also output the corresponding xprv.\r\n\r\nSupercedes #23417",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 65,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26728",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26728.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26728.patch"
          },
          "closed_at": "2024-01-06T00:05:58Z",
          "created_at": "2022-12-19T22:31:05Z",
          "updated_at": "2024-01-10T17:33:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T02:34:21Z",
      "updated_at": "2023-12-07T02:34:21Z",
      "source": {
        "issue": {
          "id": 1347108338,
          "node_id": "PR_kwDOABII5849mUDu",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25907",
          "number": 25907,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: rpc to add automatically generated descriptors",
          "body": "It is useful to have a RPC that can create and add the automatically generated descriptors (that are normally made during creation) to a wallet. This is especially useful when a new default descriptor has been implemented as it allows wallets created before that time to quickly and easily add that type of descriptor.\r\n\r\nIn particular, descriptor wallets created before Taproot was implemented can use the new `createwalletdescriptor` RPC in order to get a Taproot descriptor.\r\n\r\nFurthermore, to keep the newly generated descriptor in line with the existing descriptors, this PR uses #26728 as it exposes a \"wallet extended key\" for us (in addition to upgrading wallets implemented prior to have a wallet xpub). The newly generated descriptors will use the \"wallet extended key\" stored in `CWallet` that PR adds.\r\n\r\n`createwalletdescriptor` is generic and so it can also be used with the other address types. Of course, it given the same wallet extended key, address type, and internal-ness, it will create the same descriptor. So some refactoring has been done in order to detect that the same descriptor is about to be created, and to avoid overwriting any existing descriptors.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25907",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25907",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25907.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25907.patch"
          },
          "closed_at": "2024-01-06T00:06:14Z",
          "created_at": "2022-08-22T23:17:45Z",
          "updated_at": "2024-01-06T00:06:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T02:44:29Z",
      "updated_at": "2023-12-07T02:44:29Z",
      "source": {
        "issue": {
          "id": 1191033673,
          "node_id": "PR_kwDOABII5841jAnn",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24748",
          "number": 24748,
          "state": "closed",
          "state_reason": null,
          "title": "test/BIP324: functional tests for v2 P2P encryption",
          "body": "This PR introduces support for v2 P2P encryption(BIP 324) in the existing functional test framework and adds functional tests for the same.\r\n\r\n### commits overview\r\n1. introduces a new class `EncryptedP2PState` to store the keys, functions for performing the initial v2 handshake and encryption/decryption.\r\n3. this class is used by `P2PConnection` in inbound/outbound connections to perform the initial v2 handshake before the v1 version handshake. Only after the initial v2 handshake is performed do application layer P2P messages(version, verack etc..) get exchanged. (in a v2 connection)\r\n    - `v2_state` is the object of class `EncryptedP2PState` in `P2PConnection` used to store its keys, session-id etc.\r\n    - a node [advertising](https://github.com/stratospher/blogosphere/blob/main/integration_test_bip324.md#advertising-to-support-v2-p2p) support for  v2 P2P is different from a node actually [supporting v2 P2P](https://github.com/stratospher/blogosphere/blob/main/integration_test_bip324.md#supporting-v2-p2p) (differ when false advertisement of services occur)\r\n        - introduce a boolean variable `supports_v2_p2p` in `P2PConnection` to denote if it supports v2 P2P.\r\n        - introduce a boolean variable `advertises_v2_p2p` to denote whether `P2PConnection` which mimics peer behaviour advertises V2 P2P support. Default option is `False`.\r\n    - In the test framework, you can create Inbound and Outbound connections to `TestNode`\r\n        1. During **Inbound Connections**, `P2PConnection` is the initiator [`TestNode` <--------- `P2PConnection`]\r\n            - Case 1:\r\n                - if the `TestNode` advertises/signals v2 P2P support (means `self.nodes[i]` set up with `\"-v2transport=1\"`), different behaviour will be exhibited based on whether:\r\n                    1. `P2PConnection` supports v2 P2P\r\n                    2. `P2PConnection` does not support v2 P2P\r\n               - In a real world scenario, the initiator node would intrinsically know if they support v2 P2P based on whatever code they choose to run. However, in the test scenario where we mimic peer behaviour, we have no way of knowing if `P2PConnection` should support v2 P2P or not. So `supports_v2_p2p` boolean variable is used as an option to enable support for v2 P2P in `P2PConnection`.\r\n              - Since the `TestNode` advertises v2 P2P support (using \"-v2transport=1\"), our initiator `P2PConnection` would send:\r\n                1. (if the `P2PConnection` supports v2 P2P) ellswift + garbage bytes to initiate the connection\r\n                2. (if the `P2PConnection` does not support v2 P2P) version message to initiate the connection\r\n           - Case 2:\r\n                - if the `TestNode` doesn't signal v2 P2P support; `P2PConnection` being the initiator would send version message to initiate a connection.\r\n       2. During **Outbound Connections** [TestNode --------> P2PConnection]\r\n           - initiator `TestNode` would send:\r\n                - (if the `P2PConnection` advertises v2 P2P) ellswift + garbage bytes to initiate the connection\r\n                - (if the `P2PConnection` advertises v2 P2P) version message to initiate the connection\r\n          - Suppose `P2PConnection` advertises v2 P2P support when it actually doesn't support v2 P2P (false advertisement scenario)\r\n               - `TestNode` sends ellswift + garbage bytes\r\n               - `P2PConnection` receives but can't process it and disconnects.\r\n               - `TestNode` then tries using v1 P2P and sends version message\r\n               - `P2PConnection` receives/processes this successfully and they communicate on v1 P2P\r\n\r\n4. the encrypted P2P messages follow a different format - 3 byte length + 1-13 byte message_type + payload + 16 byte MAC\r\n5. includes support for testing decoy messages and v2 connection downgrade(using false advertisement - when a v2 node makes an outbound connection to a node which doesn't support v2 but is advertised as v2 by some malicious\r\nintermediary)\r\n\r\n### run the tests\r\n* functional test - `test/functional/p2p_v2_encrypted.py` `test/functional/p2p_v2_earlykeyresponse.py`\r\n\r\nI'm also super grateful to @ dhruv for his really valuable feedback on this branch.\r\nAlso written a more elaborate explanation here - https://github.com/stratospher/blogosphere/blob/main/integration_test_bip324.md",
          "user": {
            "login": "stratospher",
            "id": 44024636,
            "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stratospher",
            "html_url": "https://github.com/stratospher",
            "followers_url": "https://api.github.com/users/stratospher/followers",
            "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
            "organizations_url": "https://api.github.com/users/stratospher/orgs",
            "repos_url": "https://api.github.com/users/stratospher/repos",
            "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stratospher/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/61",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/61",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/61/labels",
            "id": 9334188,
            "node_id": "MI_kwDOABII584Ajm2s",
            "number": 61,
            "state": "open",
            "title": "27.0",
            "description": "",
            "creator": {
              "login": "sipa",
              "id": 548488,
              "node_id": "MDQ6VXNlcjU0ODQ4OA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/sipa",
              "html_url": "https://github.com/sipa",
              "followers_url": "https://api.github.com/users/sipa/followers",
              "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
              "organizations_url": "https://api.github.com/users/sipa/orgs",
              "repos_url": "https://api.github.com/users/sipa/repos",
              "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/sipa/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 65,
            "created_at": "2023-04-27T08:01:57Z",
            "updated_at": "2024-04-03T09:35:46Z"
          },
          "locked": false,
          "comments": 28,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24748",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24748.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24748.patch"
          },
          "closed_at": "2024-01-29T17:31:51Z",
          "created_at": "2022-04-03T20:14:51Z",
          "updated_at": "2024-02-16T21:42:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1769056893,
      "node_id": "PRR_kwDOABII585pcap9",
      "url": null,
      "actor": null,
      "commit_id": "07008477b8174d00627c5fe75859bc1f85602c69",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Also, [missing](https://github.com/bitcoin/bitcoin/pull/29016/checks?check_run_id=19389652409) test coverage for the new command:\r\n\r\n```\r\nUncovered RPC commands:\r\n  - listmempooltransactions\r\n```",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#pullrequestreview-1769056893",
      "submitted_at": "2023-12-07T03:33:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T17:12:50Z",
      "updated_at": "2023-12-07T17:12:50Z",
      "source": {
        "issue": {
          "id": 930266556,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Njc3OTg5MzM4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22341",
          "number": 22341,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: add path to gethdkey",
          "body": "Depends on #26728.\r\n\r\nThis PR expands the wallet RPC `gethdkey` introduced in #26728. It takes a BIP32 path as argument and returns the xpub, along with the master key fingerprint.\r\n\r\nTo test this PR:\r\n\r\n* create a regular descriptor wallet\r\n* call `getxpub m/86h/0h/0h`\r\n* call `listdescriptors`, compare the xpub in the `tr()` descriptor with the previous step\r\n\r\n## Bigger picture\r\n\r\nThis paves the way for using Bitcoin Core as one signer in a multisig setup. It simplifies the proposed flow in #22067.\r\n\r\nThe eventual flow would be:\r\n1. Create a blank wallet with a seed (either with no descriptors, or where its single key descriptors are not `active`, so they don't get used when calling `getnewaddress`). \r\n2. Call `getxpub m/87h/0h/0h` (as suggested in [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki))\r\n3. (Manually, with Specter or with a simple Python utility - TBD): craft a multisig descriptor containing this xpub\r\n4. Call `importdescriptors` which will allow the import if its own fingerprint is recognized (and after checking the xpub)\r\n5. The usual flow with `getnewaddress`, `send` and `walletprocesspsbt` (and their GUI equivalents)\r\n\r\nThis PR makes step (2) possible.\r\n\r\nStep (1) would require a followup, because blank wallets currently can't have a seed. Step 4 would also require a followup,  so that `importdescriptors` treats an `xpub` as if it was an `xpriv`, after checking that it can derive the xpub from the seed (that matches the fingerprint)\r\n\r\nOn the GUI side a wizard could perform the above steps and guide the user, where they either:\r\n* export their own xpub and then import a descriptor from somewhere else (performing some sanity checks); or\r\n* import xpub(s) from other wallets, compose a multisig and get the descriptors for export; or\r\n* get xpub(s) from connected hardware devices and configure a multisig (with or without a key on their machine)",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 36,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22341",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22341",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22341.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22341.patch"
          },
          "closed_at": "2024-02-13T09:49:14Z",
          "created_at": "2021-06-25T15:12:03Z",
          "updated_at": "2024-02-13T09:49:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T21:11:32Z",
      "updated_at": "2023-12-07T21:11:32Z",
      "source": {
        "issue": {
          "id": 1950437953,
          "node_id": "PR_kwDOABII585dLamZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28676",
          "number": 28676,
          "state": "open",
          "state_reason": null,
          "title": "[WIP] Cluster mempool implementation",
          "body": "This is a draft implementation of the cluster mempool design described in #27677.  I'm opening this as a draft PR now to share the branch I'm working on with others, so that we can start to think about in-progress projects (like package relay, package validation, and package rbf) in the context of this design.  Also, I can use some help from others for parts of this work, including the interaction between the mempool and the wallet, and also reworking some of our existing test cases to fit a cluster-mempool world.\r\n\r\nNote that the design of this implementation is subject to change as I continue to iterate on the code (to make the code more hygienic and robust, in particular). At this point though I think the performance is pretty reasonable and I'm not currently aware of any bugs.  There are some microbenchmarks added here, and some improved fuzz tests; it would be great if others ran both of those on their own hardware as well and reported back on any findings.\r\n\r\nThis branch implements the following observable behavior changes:\r\n\r\n- Maintains a partitioning of the mempool into connected clusters\r\n- Each cluster is sorted (\"linearized\") either using an optimal sort, or an ancestor-feerate-based one, depending on the size of the cluster (thanks to @sipa for this logic)\r\n- Transaction selection for mining is updated to use the cluster linearizations\r\n- Mempool eviction is updated to use the cluster linearizations\r\n- The RBF rules are updated to drop the requirement that no new inputs are introduced, and to change the feerate requirement to instead check that the mining score of a replacement transaction exceed the mining score of the conflicted transactions\r\n- The CPFP carveout rule is eliminated (it doesn't make sense in a cluster-limited mempool)\r\n- The ancestor and descendant limits are no longer enforced.\r\n- New cluster count/cluster vsize limits are now enforced instead.\r\n\r\nSome less observable behavior changes:\r\n- The cached ancestor and descendant data are dropped from the mempool, along with the multi_index indices that were maintained to sort the mempool by ancestor and descendant feerates. For compatibility (eg with wallet behavior or RPCs exposing this), this information is now calculated dynamically instead.\r\n- The ancestor and descendant walking algorithms are now implemented using `epoch`s (resulting in a significant performance improvement, according to the benchmarks I've looked at)\r\n\r\nStill to do:\r\n\r\n- [ ] More comparisons between this branch and master on historical data to compare validation speed (accepting loose transactions, processing RBF transactions, validating a block/postprocessing, updating the mempool for a reorg).\r\n- [ ] More historical data analysis to try to evaluate the likely impact of setting the cluster size limits to varying values (to motivate what values we should ultimately pick)\r\n- [ ] Updating wallet code to be cluster-aware (including mini_miner and coin selection)\r\n- [ ] Rework many of our functional tests to be cluster-aware\r\n- [ ] Figure out what package validation and package RBF rules should be in this design\r\n- [ ] Rework the `partially_downloaded_block` fuzz target to not add mempool transactions in a topologically-invalid way.\r\n- [ ] Update RBF logic to ensure that replacements always strictly improve the mempool.\r\n- [ ] Figure out how we want to document our RBF policy (preserve historical references to BIP 125 or previous Bitcoin Core behaviors vs clean slate documentation?)\r\n\r\nFor discussion/feedback:\r\n\r\n - How significant is it to be dropping the CPFP carveout rule?  Does that affect how we will ultimately want to stage new mempool deployment?\r\n - How well do the proposed RBF rules meet everyone's use cases?\r\n - What design improvements can we make to the cluster tracking implementation?\r\n - The ZMQ callbacks that occur when a block is found will happen in a slightly different order, because we now will fully remove all transactions occurring in a block from the mempool before removing any conflicts. Is this a problem?",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28676",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28676.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28676.patch"
          },
          "created_at": "2023-10-18T18:59:37Z",
          "updated_at": "2024-04-03T19:04:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-11T21:22:53Z",
      "updated_at": "2023-12-11T21:22:53Z",
      "source": {
        "issue": {
          "id": 2036429651,
          "node_id": "PR_kwDOABII585huQZ6",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29054",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29054/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29054/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29054/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29054",
          "number": 29054,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: reenable sethdseed for descriptor wallets",
          "body": "Enable `sethdseed` for descriptor wallets. To be able to use `createwalletdescriptor` with the other address types, we need a way to change the wallet extended key, and so `sethdseed` has been updated and enabled for descriptor wallets. As with legacy wallets, when called without parameters, it will generate a new random master key for the wallet. It can also take a xprv and set that as the master key. It still takes a BIP 32 seed as WIF or as hex as we do for legacy wallets. The seed will be transformed into and stored as a BIP 32 extended key. The latter is to give us greater compatibility with other wallets which often produce non-WIF HD seeds.\r\n\r\nSplit from #25907",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29054",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29054",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29054.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29054.patch"
          },
          "closed_at": "2024-01-06T00:06:40Z",
          "created_at": "2023-12-11T20:00:27Z",
          "updated_at": "2024-01-06T00:06:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1860896797,
      "node_id": "IC_kwDOABII585u6wgd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1860896797",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-18T16:00:09Z",
      "updated_at": "2023-12-18T16:00:09Z",
      "author_association": "MEMBER",
      "body": "> My initial attempt at this modified `getrawmempool` to\r\n> \r\n>     * take a `start_sequence` to allow for filtering, and\r\n> \r\n>     * adding the txdata (inputs outpoints + outputs (amount + scriptPubKeys)).\r\n\r\nThis seems like the best option imo. If we want to return the transaction hex (iiuc that should suffice if you are looking to get the tx data itself) we could add another level of verbosity to `getrawmempool` / `getmempoolentry`.\r\n\r\n> That was pretty ugly however, given that the current data model for `getrawmempool` is around a concept of \"mempool entry\" data. This returns transaction data (and does not report on information about other mempool dependencies etc; for that you should still call `getrawmempool` or `getmempoolentry`).\r\n\r\nNot sure I understand what the difficulty was? `getrawmempool` should give dependencies if you use `verbose` (see the \"depends\" field).\r\n\r\n> Note that this works well with ZMQ as the mempool_sequence number is identical.\r\n\r\nAssuming you mean the sequence emitted from `Transaction{AddedTo,RemovedFrom}Mempool`, note that this is not actually the case (they're usually off by 1 or more due to when the sequence increments happen).",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1860896797",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-19T08:24:05Z",
      "updated_at": "2023-12-19T08:24:05Z",
      "source": {
        "issue": {
          "id": 652920165,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1OTI3NjM1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19463",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19463/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19463/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19463/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19463",
          "number": 19463,
          "state": "open",
          "state_reason": null,
          "title": "Prune locks",
          "body": "This adds the ability to have any number of internal or external locks to prevent pruning specific block ranges.\r\n\r\nSome examples where this would be useful:\r\n\r\n* Ensuring any known Core wallet won't become unable to sync due to pruning when it is unloaded. (Included in this PR)\r\n* Ensuring pruning doesn't go too far for a desired-functional wallet backup. (Questionable, since you probably lose the node if you need the backup anyway?)\r\n* Allowing users to temporarily disable block indexes and filters, without pruning cutting them off from catching up later.\r\n* Avoiding pruning out from under external wallets (Armory, EPS, etc) that might need block data.\r\n* External block indexes/filters, etc.\r\n\r\nBy design, users retain complete control over prune locks, and can delete them out from under applications using them. This is to avoid circumstances where a prune lock has been set, by an application that may no longer be used.\r\n",
          "user": {
            "login": "luke-jr",
            "id": 1095675,
            "node_id": "MDQ6VXNlcjEwOTU2NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke-jr",
            "html_url": "https://github.com/luke-jr",
            "followers_url": "https://api.github.com/users/luke-jr/followers",
            "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
            "organizations_url": "https://api.github.com/users/luke-jr/orgs",
            "repos_url": "https://api.github.com/users/luke-jr/repos",
            "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/luke-jr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 219890555,
              "node_id": "MDU6TGFiZWwyMTk4OTA1NTU=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Block%20storage",
              "name": "Block storage",
              "color": "000000",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19463",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19463",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19463.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19463.patch"
          },
          "created_at": "2020-07-08T04:03:17Z",
          "updated_at": "2024-04-09T15:06:45Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1879925212,
      "node_id": "IC_kwDOABII585wDWHc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1879925212",
      "actor": {
        "login": "niftynei",
        "id": 1097769,
        "node_id": "MDQ6VXNlcjEwOTc3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/niftynei",
        "html_url": "https://github.com/niftynei",
        "followers_url": "https://api.github.com/users/niftynei/followers",
        "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
        "organizations_url": "https://api.github.com/users/niftynei/orgs",
        "repos_url": "https://api.github.com/users/niftynei/repos",
        "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/niftynei/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-07T03:23:51Z",
      "updated_at": "2024-01-07T03:23:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Assuming you mean the sequence emitted from Transaction{AddedTo,RemovedFrom}Mempool, note that this is not actually the case (they're usually off by 1 or more due to when the sequence increments happen).\r\n\r\nCan you say more about this divergence or point me to a doc that contains more info?\r\n\r\nI should add that one problem with the existing `getrawmempool` RPC semantics is that currently requesting the mempool_sequence *and* asking for verbose results is specifically disallowed. \r\n\r\nI attempted to find a rationale for this but was unsuccessful (some code reorgs had removed the original code commit in the blame).\r\n\r\nRe: returning the raw tx: that suffices but is suboptimal for an application that is scanning for particular output creation or input inclusion in a proposed tx as it creates additional work on the client.\r\n\r\nSpeaking of computation, note that this approach omits the computation required for finding ancestor/descendent txs in the mempool; that seemed like unnecessary work for clients that are solely interested in just the tx info.\r\n",
      "user": {
        "login": "niftynei",
        "id": 1097769,
        "node_id": "MDQ6VXNlcjEwOTc3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/niftynei",
        "html_url": "https://github.com/niftynei",
        "followers_url": "https://api.github.com/users/niftynei/followers",
        "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
        "organizations_url": "https://api.github.com/users/niftynei/orgs",
        "repos_url": "https://api.github.com/users/niftynei/repos",
        "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/niftynei/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1879925212",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016"
    },
    {
      "event": "commented",
      "id": 1879925440,
      "node_id": "IC_kwDOABII585wDWLA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1879925440",
      "actor": {
        "login": "niftynei",
        "id": 1097769,
        "node_id": "MDQ6VXNlcjEwOTc3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/niftynei",
        "html_url": "https://github.com/niftynei",
        "followers_url": "https://api.github.com/users/niftynei/followers",
        "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
        "organizations_url": "https://api.github.com/users/niftynei/orgs",
        "repos_url": "https://api.github.com/users/niftynei/repos",
        "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/niftynei/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-07T03:25:41Z",
      "updated_at": "2024-01-07T03:25:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Also, [missing](https://github.com/bitcoin/bitcoin/pull/29016/checks?check_run_id=19389652409) test coverage for the new command:\r\n\r\nYes, will add test coverage when this approach gets a concept ack.\r\n\r\nInstead, working usage of this proposed code change has been included in the original PR",
      "user": {
        "login": "niftynei",
        "id": 1097769,
        "node_id": "MDQ6VXNlcjEwOTc3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/niftynei",
        "html_url": "https://github.com/niftynei",
        "followers_url": "https://api.github.com/users/niftynei/followers",
        "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
        "organizations_url": "https://api.github.com/users/niftynei/orgs",
        "repos_url": "https://api.github.com/users/niftynei/repos",
        "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/niftynei/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1879925440",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016"
    },
    {
      "event": "commented",
      "id": 1880094062,
      "node_id": "IC_kwDOABII585wD_Vu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1880094062",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-07T15:44:29Z",
      "updated_at": "2024-01-07T15:44:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1880094062",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016"
    },
    {
      "event": "commented",
      "id": 1880184679,
      "node_id": "IC_kwDOABII585wEVdn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1880184679",
      "actor": {
        "login": "bordalix",
        "id": 9318412,
        "node_id": "MDQ6VXNlcjkzMTg0MTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9318412?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bordalix",
        "html_url": "https://github.com/bordalix",
        "followers_url": "https://api.github.com/users/bordalix/followers",
        "following_url": "https://api.github.com/users/bordalix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bordalix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bordalix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bordalix/subscriptions",
        "organizations_url": "https://api.github.com/users/bordalix/orgs",
        "repos_url": "https://api.github.com/users/bordalix/repos",
        "events_url": "https://api.github.com/users/bordalix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bordalix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-07T21:42:16Z",
      "updated_at": "2024-01-07T21:42:16Z",
      "author_association": "NONE",
      "body": "Concept ACK",
      "user": {
        "login": "bordalix",
        "id": 9318412,
        "node_id": "MDQ6VXNlcjkzMTg0MTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9318412?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bordalix",
        "html_url": "https://github.com/bordalix",
        "followers_url": "https://api.github.com/users/bordalix/followers",
        "following_url": "https://api.github.com/users/bordalix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bordalix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bordalix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bordalix/subscriptions",
        "organizations_url": "https://api.github.com/users/bordalix/orgs",
        "repos_url": "https://api.github.com/users/bordalix/repos",
        "events_url": "https://api.github.com/users/bordalix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bordalix/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1880184679",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016"
    },
    {
      "event": "reviewed",
      "id": 1815145958,
      "node_id": "PRR_kwDOABII585sMO3m",
      "url": null,
      "actor": null,
      "commit_id": "07008477b8174d00627c5fe75859bc1f85602c69",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> > Assuming you mean the sequence emitted from Transaction{AddedTo,RemovedFrom}Mempool, note that this is not actually the case (they're usually off by 1 or more due to when the sequence increments happen).\r\n> \r\n> Can you say more about this divergence or point me to a doc that contains more info?\r\n\r\nIt's more that they just happen to use the same counter, but that doesn't mean they match.\r\nThe mempool entry's sequence number is assigned here;\r\nhttps://github.com/bitcoin/bitcoin/blob/fcacbab4878e10946c518970b630e7dccbbd2d45/src/validation.cpp#L854-L856\r\nAnd the notification fires along with a counter increment here:\r\nhttps://github.com/bitcoin/bitcoin/blob/fcacbab4878e10946c518970b630e7dccbbd2d45/src/validation.cpp#L1272\r\n\r\n~This means the notification is +1 of the entry sequence, +n if it's in a package.~ edit: Woops I might be wrong and that's the same number. A better example is the entry sequences are all the same but are incremented for the notifications in a package. The entry sequence is also hard coded to 0 for a transaction came from a reorg.\r\nIt doesn't look like they were meant to match up exactly, though this potential confusion was [acknowledged](https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-697313899) prior to merge.\r\n\r\n> I should add that one problem with the existing `getrawmempool` RPC semantics is that currently requesting the mempool_sequence _and_ asking for verbose results is specifically disallowed.\r\n> \r\n> I attempted to find a rationale for this but was unsuccessful (some code reorgs had removed the original code commit in the blame).\r\n\r\nI'm not sure why that's the case either, the only context I can see is the [edits in this comment](https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-663088680) after [pushing](https://github.com/bitcoin/bitcoin/compare/c89b73a64b36e52517b2b33757a86bf68f61dff8..606a49bf86306ab1664666add5eb04c4eab066e4) those lines, which indicate it was causing a test failure. I can't open the travis link anymore. Pinging @instagibbs in case he remembers what happened 3+ years ago. Maybe there was a subtle bug, or maybe it was the easiest way to make the tests pass and return the results to the client without adding more params.\r\n\r\n> Re: returning the raw tx: that suffices but is suboptimal for an application that is scanning for particular output creation or input inclusion in a proposed tx as it creates additional work on the client.\r\n\r\nNote that you can use `gettxspendingprevout` to search for mempool transactions spending a particular output, since the mempool does index by that. A watchonly wallet will also scan for its transactions in mempool as they appear.\r\n\r\n> Speaking of computation, note that this approach omits the computation required for finding ancestor/descendent txs in the mempool; that seemed like unnecessary work for clients that are solely interested in just the tx info.\r\n\r\nDon't worry, there's no extra computation, it's all cached in the mempool entry which is already pulled in.\r\n\r\nAnyway, I think it makes sense to have more params/levels to control filters and results for `getrawmempool`. It seems reasonable to have a higher verbosity level or more granular controls to give you the results you want.\r\n\r\nCan you describe in more detail what args you want to pass and what results you want returned? I have no objection to making life easier for clients, it's just that the PR as it looks right now seems like we'd have 2 RPCs that do very similar things, and uses mempool entry sequence in a way that might be buggy.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#pullrequestreview-1815145958",
      "submitted_at": "2024-01-11T10:04:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016"
    },
    {
      "event": "commented",
      "id": 1887189668,
      "node_id": "IC_kwDOABII585wfDqk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887189668",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-11T13:42:57Z",
      "updated_at": "2024-01-11T13:42:57Z",
      "author_association": "MEMBER",
      "body": "> what happened 3+ years ago\r\n\r\nI have some bad news, I do not.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1887189668",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016"
    },
    {
      "event": "labeled",
      "id": 11631539202,
      "node_id": "LE_lADOABII585498VmzwAAAAK1SzQC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11631539202",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T18:12:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1915297174,
      "node_id": "IC_kwDOABII585yKR2W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1915297174",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T18:12:17Z",
      "updated_at": "2024-01-29T18:12:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1915297174",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016"
    },
    {
      "event": "commented",
      "id": 1959989869,
      "node_id": "IC_kwDOABII58500xJt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1959989869",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T18:05:34Z",
      "updated_at": "2024-02-22T18:05:34Z",
      "author_association": "MEMBER",
      "body": "Are you still working on this? Looks like there are outstanding questions.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1959989869",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016"
    },
    {
      "event": "commented",
      "id": 1962057278,
      "node_id": "IC_kwDOABII58508p4-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1962057278",
      "actor": {
        "login": "niftynei",
        "id": 1097769,
        "node_id": "MDQ6VXNlcjEwOTc3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/niftynei",
        "html_url": "https://github.com/niftynei",
        "followers_url": "https://api.github.com/users/niftynei/followers",
        "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
        "organizations_url": "https://api.github.com/users/niftynei/orgs",
        "repos_url": "https://api.github.com/users/niftynei/repos",
        "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/niftynei/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-23T21:59:12Z",
      "updated_at": "2024-02-23T22:06:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, haven't had time recently due to bitcoin++ work.\r\n\r\n> Note that you can use gettxspendingprevout to search for mempool transactions spending a particular output\r\n\r\nMy use case is to scan for new transactions depositing to addresses or new scripts pertaining to a wallet which is not managed by core. Please see linked PR for CLN.\r\n\r\n> to have more params/levels to control filters and results for getrawmempool.\r\n\r\nAs mentioned in the PR, the data model that this returns is distinct from `getrawmempool`. This is specifically for transaction model data; `getrawmempool`'s data model is around mempool entries.\r\n\r\n> Note that this works well with ZMQ as the mempool_sequence number is identical.\r\n\r\nFound an exception to this: package acceptance sequencing is broken and breaks this assumption. \r\n\r\nAfter some research, it turns out that we can't expose the mempool_sequence until we fix an existing bug in the package acceptance's mempool sequence assignment code.\r\n\r\nCurrently, we assign every tx in a *package* the same sequence  number, but notify via ZMQ using an incrmenting one. The problem stems from copying the behavior the single tx acceptance used for sequence assignment (which is quite well done) to the package context, which broke assumptions the single tx was able to rely on. This should be fixed regardless of the status of this PR, and should be considered a blocker imo for this being shipped. If someone else wants to fix it, that'd be great.",
      "user": {
        "login": "niftynei",
        "id": 1097769,
        "node_id": "MDQ6VXNlcjEwOTc3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/niftynei",
        "html_url": "https://github.com/niftynei",
        "followers_url": "https://api.github.com/users/niftynei/followers",
        "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
        "organizations_url": "https://api.github.com/users/niftynei/orgs",
        "repos_url": "https://api.github.com/users/niftynei/repos",
        "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/niftynei/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1962057278",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016"
    },
    {
      "event": "referenced",
      "id": 12106188743,
      "node_id": "REFE_lADOABII585498VmzwAAAALRlcfH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12106188743",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8c8f3163f2aca0998f9d7130837be374c2e62912",
      "commit_url": "https://api.github.com/repos/bitcoinknots/bitcoin/commits/8c8f3163f2aca0998f9d7130837be374c2e62912",
      "created_at": "2024-03-13T16:27:37Z"
    },
    {
      "event": "referenced",
      "id": 12106188776,
      "node_id": "REFE_lADOABII585498VmzwAAAALRlcfo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12106188776",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a4fe132d567aebee31c04d54d2a2995b760ad233",
      "commit_url": "https://api.github.com/repos/bitcoinknots/bitcoin/commits/a4fe132d567aebee31c04d54d2a2995b760ad233",
      "created_at": "2024-03-13T16:27:37Z"
    },
    {
      "event": "commented",
      "id": 2045315768,
      "node_id": "IC_kwDOABII58556Qq4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2045315768",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T14:26:32Z",
      "updated_at": "2024-04-09T14:26:32Z",
      "author_association": "MEMBER",
      "body": "Are you still working on this?",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-2045315768",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016"
    },
    {
      "event": "commented",
      "id": 2048493284,
      "node_id": "IC_kwDOABII5856GYbk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2048493284",
      "actor": {
        "login": "niftynei",
        "id": 1097769,
        "node_id": "MDQ6VXNlcjEwOTc3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/niftynei",
        "html_url": "https://github.com/niftynei",
        "followers_url": "https://api.github.com/users/niftynei/followers",
        "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
        "organizations_url": "https://api.github.com/users/niftynei/orgs",
        "repos_url": "https://api.github.com/users/niftynei/repos",
        "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/niftynei/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-10T21:49:21Z",
      "updated_at": "2024-04-10T21:49:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Yes but won't have any progress to show til May or so. Thanks",
      "user": {
        "login": "niftynei",
        "id": 1097769,
        "node_id": "MDQ6VXNlcjEwOTc3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/niftynei",
        "html_url": "https://github.com/niftynei",
        "followers_url": "https://api.github.com/users/niftynei/followers",
        "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
        "organizations_url": "https://api.github.com/users/niftynei/orgs",
        "repos_url": "https://api.github.com/users/niftynei/repos",
        "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/niftynei/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-2048493284",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418224065",
      "pull_request_review_id": 1768993243,
      "id": 1418224065,
      "node_id": "PRRC_kwDOABII585UiGHB",
      "diff_hunk": "@@ -375,6 +377,100 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempoo\n     }\n }\n \n+static RPCHelpMan listmempooltransactions()\n+{\n+    return RPCHelpMan{\"listmempooltransactions\",\n+        \"\\nReturns all transactions in the mempool. Can be filtered by mempool_sequence\\n\"\n+        \"\\nAllows for syncing with current mempool entries via polling (not zmq).\",\n+        {\n+            {\"start_sequence\", RPCArg::Type::NUM, RPCArg::Default{0}, \"The mempool_sequence to start the results to. Defaults to 0 (zero, all transactions).\"},\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a json object, false for array of transaction ids\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\",\n+                RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"mempool_sequence\", \"The current max mempool sequence value.\"},\n+                    {RPCResult::Type::ARR, \"txs\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::NUM, \"entry_sequence\", \"The mempool sequence value for this transaction entry.\"},\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"The transaction id\"},\n+                        }},\n+                    }},\n+                }},\n+            RPCResult{\"for verbose = true\",\n+                RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"mempool_sequence\", \"The current max mempool sequence value.\"},\n+                    {RPCResult::Type::ARR, \"txs\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                         Cat<std::vector<RPCResult>>(\n+                            {\n+                                {RPCResult::Type::NUM, \"entry_sequence\", \"The mempool sequence value for this transaction entry.\"},\n+                            },\n+                            DecodeTxDoc(/*txid_field_doc=*/\"The transaction id of the mempool transaction\")),\n+                        }},\n+                    }},\n+                }},\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"listmempooltransactions\", \"true\")\n+            + HelpExampleRpc(\"listmempooltransactions\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            uint64_t start_mempool_sequence = 0;\n+            if (!request.params[0].isNull()) {\n+                start_mempool_sequence = request.params[0].getInt<uint64_t>();\n+            }\n+\n+            bool fVerbose = false;\n+            if (!request.params[1].isNull())\n+                fVerbose = request.params[1].get_bool();\n+\n+            return MempoolTxsToJSON(EnsureAnyMemPool(request.context), fVerbose, start_mempool_sequence);\n+        },\n+    };\n+}\n+\n+UniValue MempoolTxsToJSON(const CTxMemPool& pool, bool verbose, uint64_t sequence_start)\n+{\n+    uint64_t mempool_sequence;\n+\n+    LOCK(pool.cs);\n+    mempool_sequence = pool.GetSequence();\n+\n+    UniValue o(UniValue::VOBJ);\n+    o.pushKV(\"mempool_sequence\", mempool_sequence);\n+\n+    UniValue a(UniValue::VARR);\n+    for (const CTxMemPoolEntry& e : pool.entryAll()) {\n+        UniValue txentry(UniValue::VOBJ);\n+\n+        // We skip anything not requested.\n+        if (e.GetSequence() < sequence_start)\n+            continue;\n+\n+        txentry.pushKV(\"entry_sequence\", e.GetSequence());\n+\n+        if (verbose) {\n+            // We could also calculate fees etc for this transaction, but yolo.\n+            TxToUniv(e.GetTx(), /*block_hash=*/uint256::ZERO, /*entry=*/txentry, /*inclue_hex=*/false);",
      "path": "src/rpc/mempool.cpp",
      "position": 95,
      "original_position": 95,
      "commit_id": "07008477b8174d00627c5fe75859bc1f85602c69",
      "original_commit_id": "07008477b8174d00627c5fe75859bc1f85602c69",
      "in_reply_to_id": null,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "looks like the tidy ci is getting upset here\r\n\r\n```\r\nrpc/mempool.cpp:462:82: error: argument name 'inclue_hex' in comment does not match parameter name 'include_hex' [bugprone-argument-comment,-warnings-as-errors]\r\n  462 |             TxToUniv(e.GetTx(), /*block_hash=*/uint256::ZERO, /*entry=*/txentry, /*inclue_hex=*/false);\r\n      |                                                                                  ^~~~~~~~~~~~~~~\r\n      |                                                                                  /*include_hex=*/\r\n./core_io.h:57:88: note: 'include_hex' declared here\r\n   57 | void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry, bool include_hex = true, bool without_witness = false, const CTxUndo* txundo = nullptr, TxVerbosity verbosity = TxVerbosity::SHOW_DETAILS);\r\n   ```",
      "created_at": "2023-12-07T02:17:13Z",
      "updated_at": "2023-12-07T02:17:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#discussion_r1418224065",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418224065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 462,
      "original_line": 462,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1448596725",
      "pull_request_review_id": 1815145958,
      "id": 1448596725,
      "node_id": "PRRC_kwDOABII585WV9T1",
      "diff_hunk": "@@ -375,6 +377,100 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempoo\n     }\n }\n \n+static RPCHelpMan listmempooltransactions()\n+{\n+    return RPCHelpMan{\"listmempooltransactions\",\n+        \"\\nReturns all transactions in the mempool. Can be filtered by mempool_sequence\\n\"\n+        \"\\nAllows for syncing with current mempool entries via polling (not zmq).\",\n+        {\n+            {\"start_sequence\", RPCArg::Type::NUM, RPCArg::Default{0}, \"The mempool_sequence to start the results to. Defaults to 0 (zero, all transactions).\"},\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a json object, false for array of transaction ids\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\",\n+                RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"mempool_sequence\", \"The current max mempool sequence value.\"},\n+                    {RPCResult::Type::ARR, \"txs\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::NUM, \"entry_sequence\", \"The mempool sequence value for this transaction entry.\"},\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"The transaction id\"},\n+                        }},\n+                    }},\n+                }},\n+            RPCResult{\"for verbose = true\",\n+                RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"mempool_sequence\", \"The current max mempool sequence value.\"},\n+                    {RPCResult::Type::ARR, \"txs\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                         Cat<std::vector<RPCResult>>(\n+                            {\n+                                {RPCResult::Type::NUM, \"entry_sequence\", \"The mempool sequence value for this transaction entry.\"},\n+                            },\n+                            DecodeTxDoc(/*txid_field_doc=*/\"The transaction id of the mempool transaction\")),\n+                        }},\n+                    }},\n+                }},\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"listmempooltransactions\", \"true\")\n+            + HelpExampleRpc(\"listmempooltransactions\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            uint64_t start_mempool_sequence = 0;\n+            if (!request.params[0].isNull()) {\n+                start_mempool_sequence = request.params[0].getInt<uint64_t>();\n+            }\n+\n+            bool fVerbose = false;\n+            if (!request.params[1].isNull())\n+                fVerbose = request.params[1].get_bool();\n+\n+            return MempoolTxsToJSON(EnsureAnyMemPool(request.context), fVerbose, start_mempool_sequence);\n+        },\n+    };\n+}\n+\n+UniValue MempoolTxsToJSON(const CTxMemPool& pool, bool verbose, uint64_t sequence_start)\n+{\n+    uint64_t mempool_sequence;\n+\n+    LOCK(pool.cs);\n+    mempool_sequence = pool.GetSequence();\n+\n+    UniValue o(UniValue::VOBJ);\n+    o.pushKV(\"mempool_sequence\", mempool_sequence);\n+\n+    UniValue a(UniValue::VARR);\n+    for (const CTxMemPoolEntry& e : pool.entryAll()) {\n+        UniValue txentry(UniValue::VOBJ);\n+\n+        // We skip anything not requested.\n+        if (e.GetSequence() < sequence_start)\n+            continue;",
      "path": "src/rpc/mempool.cpp",
      "position": 89,
      "original_position": 89,
      "commit_id": "07008477b8174d00627c5fe75859bc1f85602c69",
      "original_commit_id": "07008477b8174d00627c5fe75859bc1f85602c69",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do note that a mempool tx from a recently disconnected block would be skipped here",
      "created_at": "2024-01-11T10:01:59Z",
      "updated_at": "2024-01-11T10:04:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29016#discussion_r1448596725",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1448596725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016"
        }
      },
      "start_line": 454,
      "original_start_line": 454,
      "start_side": "RIGHT",
      "line": 456,
      "original_line": 456,
      "side": "RIGHT"
    }
  ]
}