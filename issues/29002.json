{
  "type": "issue",
  "issue": {
    "id": 2026666862,
    "node_id": "I_kwDOABII5854zHtu",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29002",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29002/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29002/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29002/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/29002",
    "number": 29002,
    "state": "open",
    "state_reason": null,
    "title": "Intermittent test failure in p2p_v2_transport",
    "body": "https://drahtbot.space/temp_scratch/p2p_v2_transport_129.tar.xz\r\n\r\n```\r\n test  2023-12-05T14:06:56.900000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: '''' \r\n                                               self.wait_until(lambda: len(self.nodes[0].getpeerinfo()) == num_peers + 1)\r\n                                   '''\r\n test  2023-12-05T14:06:56.902000Z TestFramework (ERROR): Assertion failed \r\n                                   Traceback (most recent call last):\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 131, in main\r\n                                       self.run_test()\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/p2p_v2_transport.py\", line 156, in run_test\r\n                                       self.wait_until(lambda: len(self.nodes[0].getpeerinfo()) == num_peers + 1)\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 765, in wait_until\r\n                                       return wait_until_helper_internal(test_function, timeout=timeout, timeout_factor=self.options.timeout_factor)\r\n                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/util.py\", line 276, in wait_until_helper_internal\r\n                                       raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\n                                   AssertionError: Predicate ''''\r\n                                               self.wait_until(lambda: len(self.nodes[0].getpeerinfo()) == num_peers + 1)\r\n                                   ''' not true after 2400.0 seconds\r\n",
    "user": {
      "login": "maflcko",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maflcko",
      "html_url": "https://github.com/maflcko",
      "followers_url": "https://api.github.com/users/maflcko/followers",
      "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
      "organizations_url": "https://api.github.com/users/maflcko/orgs",
      "repos_url": "https://api.github.com/users/maflcko/repos",
      "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/maflcko/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 1,
    "created_at": "2023-12-05T16:48:43Z",
    "updated_at": "2023-12-05T21:54:24Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 11156285734,
      "node_id": "LE_lADOABII5854zHtuzwAAAAKY92km",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11156285734",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T16:48:48Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 1841678647,
      "node_id": "IC_kwDOABII585txck3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1841678647",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T21:54:22Z",
      "updated_at": "2023-12-05T21:54:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "It seems that the problem is the following construct for detection of a new incoming connection:\r\n```\r\n    num_peers = len(self.nodes[0].getpeerinfo())\r\n    s.connect((\"127.0.0.1\", p2p_port(0))\r\n    self.wait_until(lambda: len(self.nodes[0].getpeerinfo()) == num_peers + 1)\r\n```\r\nLooking at the logs, I think in this test run the the disconnect of the previous connection finished _after_ the first `getpeerinfo` RPC call, i.e. the peer count drops to `num_peers-1`, increases to `num_peers` after the connection is made and remains at this value, so the lambda expression can never be fulfilled.\r\n\r\nI wonder what would be a more robust alternative. Maybe checking that the last peer's id has increased, i.e. something like:\r\n```\r\n    highest_peer_id = self.nodes[0].getpeerinfo()[-1][\"id\"]\r\n    s.connect((\"127.0.0.1\", p2p_port(0))\r\n    self.wait_until(lambda: self.nodes[0].getpeerinfo()[-1][\"id\"] > highest_peer_id)\r\n```\r\nThis ensures that _at least one_ new connection has been made in-between, which should be good enough. And it needs special-casing for when `.getpeerinfo()` returns an empty list (as accessing [-1] would yield an \"index out of range\" exception), which is a bit annoying...",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/29002#issuecomment-1841678647",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29002"
    }
  ]
}