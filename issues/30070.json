{
  "type": "issue",
  "issue": {
    "id": 2286927464,
    "node_id": "I_kwDOABII586IT75o",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30070",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30070/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30070/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30070/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/30070",
    "number": 30070,
    "state": "open",
    "state_reason": null,
    "title": "Load PSBT error: Unable to decode PSBT",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current behaviour\r\n\r\n\"Load PSBT from ...\" from menu, error shows:\r\n`Unable to decode PSBT \r\nUnsigned tx does not have empty scriptSigs and scriptWitnesses.: unspecified iostream_category error`\r\n\r\ndecodepsbt and analyzepsbt show the same error too:\r\n`TX decode failed Unsigned tx does not have empty scriptSigs and scriptWitnesses.: unspecified iostream_category error (code -22)`\r\n\r\n### Expected behaviour\r\n\r\nI expect Load PSBT success.\r\n\r\nAnd same procedure works fine in another wallet of test net. Both wallets are not watch-only\r\n\r\n### Steps to reproduce\r\n\r\nI test PSBT in my wallet today, create a transaction in Bitcoin Core, click \"send\" and \"create unsigned\", then \"Load PSBT from ...\" from menu\r\n\r\nI'm using prune mode for block chain. This address I made tx was obtained by importprivkey, and then covert to Descriptor Wallets by migratewallet.\r\n\r\nI found the [source code](https://github.com/bitcoin/bitcoin/blob/master/src/psbt.h):\r\n\r\n>                  case PSBT_GLOBAL_UNSIGNED_TX:\r\n>                 {\r\n>                     if (!key_lookup.emplace(key).second) {\r\n>                         throw std::ios_base::failure(\"Duplicate Key, unsigned tx already provided\");\r\n>                     } else if (key.size() != 1) {\r\n>                         throw std::ios_base::failure(\"Global unsigned tx key is more than one byte type\");\r\n>                     }\r\n>                     CMutableTransaction mtx;\r\n>                     // Set the stream to serialize with non-witness since this should always be non-witness\r\n>                     UnserializeFromVector(s, TX_NO_WITNESS(mtx));\r\n>                     tx = std::move(mtx);\r\n>                     // Make sure that all scriptSigs and scriptWitnesses are empty\r\n>                     for (const CTxIn& txin : tx->vin) {\r\n>                         if (!txin.scriptSig.empty() || !txin.scriptWitness.IsNull()) {\r\n>      ---->                  throw std::ios_base::failure(\"Unsigned tx does not have empty scriptSigs and scriptWitnesses.\");\r\n>                         }\r\n>                     }\r\n>                     break;\r\n>                 }\r\n\r\n### Relevant log output\r\n\r\nno relevant log.\r\n\r\n### How did you obtain Bitcoin Core\r\n\r\nPre-built binaries\r\n\r\n### What version of Bitcoin Core are you using?\r\n\r\nBitcoin Core version v27.0.0\r\n\r\n### Operating system and version\r\n\r\nMacOS 14.4.1\r\n\r\n### Machine specifications\r\n\r\n_No response_",
    "user": {
      "login": "foolbear",
      "id": 827316,
      "node_id": "MDQ6VXNlcjgyNzMxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/827316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/foolbear",
      "html_url": "https://github.com/foolbear",
      "followers_url": "https://api.github.com/users/foolbear/followers",
      "following_url": "https://api.github.com/users/foolbear/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/foolbear/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/foolbear/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/foolbear/subscriptions",
      "organizations_url": "https://api.github.com/users/foolbear/orgs",
      "repos_url": "https://api.github.com/users/foolbear/repos",
      "events_url": "https://api.github.com/users/foolbear/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/foolbear/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 0,
    "created_at": "2024-05-09T05:34:12Z",
    "updated_at": "2024-05-09T05:45:32Z"
  },
  "events": []
}