{
  "type": "issue",
  "issue": {
    "id": 70577635,
    "node_id": "MDU6SXNzdWU3MDU3NzYzNQ==",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6056",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6056/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6056/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6056/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/6056",
    "number": 6056,
    "state": "closed",
    "state_reason": "completed",
    "title": "build error",
    "body": "can't  build latest git master (734f80a5d18821f4f6d0488996655c6e35ce160c).\nboost version 1.58\n    ...\n    CXX      wallet/libbitcoin_wallet_a-rpcwallet.o\n    In file included from wallet/rpcwallet.cpp:7:\n    In file included from ./base58.h:21:\n    In file included from ./script/standard.h:12:\n    In file included from /opt/local/include/boost/variant.hpp:22:\n    /opt/local/include/boost/variant/get.hpp:212:42: error: implicit instantiation of undefined template 'boost::STATIC_ASSERTION_FAILURE<false>'\n        typedef ::boost::static_assert_test< sizeof(::boost::STATIC_ASSERTION_FAILURE< (((boost::detail::variant::holds_element<boost::variant< T0 , T1 , T2 , T3 , T4 , T5 , T6 , T7 , T8 , T9 , T10 , T11 , T12 , T13 , T14 , T15 , T16 , T17 , T18 , T19 >, U >::value)) == 0 ? false : true) >)> boost_static_assert_typedef_216 ;\n                                            ^\n    /opt/local/include/boost/variant/get.hpp:284:12: note: in instantiation of function template specialization 'boost::strict_get<const CScriptID &, CNoDestination, CKeyID, CScriptID, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>' requested here\n        return strict_get<U>(operand);\n            ^\n    wallet/rpcwallet.cpp:2333:48: note: in instantiation of function template specialization 'boost::get<const CScriptID &, CNoDestination, CKeyID, CScriptID, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>' requested here\n                    const CScriptID& hash = boost::get<const CScriptID&>(address);\n                                                ^\n    /opt/local/include/boost/static_assert.hpp:87:26: note: template is declared here\n    template <bool x> struct STATIC_ASSERTION_FAILURE;\n                            ^\n    1 error generated.\n    make[2]: **\\* [wallet/libbitcoin_wallet_a-rpcwallet.o] Error 1\n    make[1]: **\\* [all-recursive] Error 1\n    make: **\\* [all-recursive] Error 1\n",
    "user": {
      "login": "y",
      "id": 172322,
      "node_id": "MDQ6VXNlcjE3MjMyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/172322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/y",
      "html_url": "https://github.com/y",
      "followers_url": "https://api.github.com/users/y/followers",
      "following_url": "https://api.github.com/users/y/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/y/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/y/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/y/subscriptions",
      "organizations_url": "https://api.github.com/users/y/orgs",
      "repos_url": "https://api.github.com/users/y/repos",
      "events_url": "https://api.github.com/users/y/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/y/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": true,
    "active_lock_reason": "resolved",
    "comments": 2,
    "closed_at": "2015-04-29T07:04:10Z",
    "created_at": "2015-04-24T03:45:20Z",
    "updated_at": "2021-09-08T12:22:40Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 97100664,
      "node_id": "MDEyOklzc3VlQ29tbWVudDk3MTAwNjY0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/97100664",
      "actor": {
        "login": "easye",
        "id": 864261,
        "node_id": "MDQ6VXNlcjg2NDI2MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/864261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/easye",
        "html_url": "https://github.com/easye",
        "followers_url": "https://api.github.com/users/easye/followers",
        "following_url": "https://api.github.com/users/easye/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/easye/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/easye/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/easye/subscriptions",
        "organizations_url": "https://api.github.com/users/easye/orgs",
        "repos_url": "https://api.github.com/users/easye/repos",
        "events_url": "https://api.github.com/users/easye/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/easye/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-04-28T15:11:53Z",
      "updated_at": "2015-04-28T15:11:53Z",
      "author_association": "NONE",
      "body": "Note that this failure occurs for the v0.10.1 tag as well.\n\nIs there a statement somewhere of the versions of dependencies that Bitcoin Core has been tested with?\n",
      "user": {
        "login": "easye",
        "id": 864261,
        "node_id": "MDQ6VXNlcjg2NDI2MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/864261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/easye",
        "html_url": "https://github.com/easye",
        "followers_url": "https://api.github.com/users/easye/followers",
        "following_url": "https://api.github.com/users/easye/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/easye/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/easye/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/easye/subscriptions",
        "organizations_url": "https://api.github.com/users/easye/orgs",
        "repos_url": "https://api.github.com/users/easye/repos",
        "events_url": "https://api.github.com/users/easye/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/easye/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/6056#issuecomment-97100664",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6056"
    },
    {
      "event": "commented",
      "id": 97104675,
      "node_id": "MDEyOklzc3VlQ29tbWVudDk3MTA0Njc1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/97104675",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-04-28T15:24:02Z",
      "updated_at": "2015-04-28T15:24:02Z",
      "author_association": "MEMBER",
      "body": "I've just verified this problem. It's due to the breaking change in boost 1.58 (See the variant notes here: http://www.boost.org/users/history/version_1_58_0.html)\n\nFix is coming right up.\n",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/6056#issuecomment-97104675",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6056"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-04-28T16:20:44Z",
      "updated_at": "2015-04-28T16:20:44Z",
      "source": {
        "issue": {
          "id": 71635286,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzQyODQ0ODc=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6076",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6076/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6076/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6076/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/6076",
          "number": 6076,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: fix boost::get usage with boost 1.58",
          "body": "Fixes #6056.\nSpecifying a const reference for the return type here is unnecessary and confuses the type checker.\n",
          "user": {
            "login": "theuni",
            "id": 417043,
            "node_id": "MDQ6VXNlcjQxNzA0Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theuni",
            "html_url": "https://github.com/theuni",
            "followers_url": "https://api.github.com/users/theuni/followers",
            "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
            "organizations_url": "https://api.github.com/users/theuni/orgs",
            "repos_url": "https://api.github.com/users/theuni/repos",
            "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theuni/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6076",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/6076",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/6076.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/6076.patch"
          },
          "closed_at": "2015-04-29T07:04:10Z",
          "created_at": "2015-04-28T16:20:44Z",
          "updated_at": "2021-09-08T10:45:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "closed",
      "id": 292724759,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjkyNzI0NzU5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/292724759",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-04-29T07:04:10Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sanak",
        "id": 629923,
        "node_id": "MDQ6VXNlcjYyOTkyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/629923?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sanak",
        "html_url": "https://github.com/sanak",
        "followers_url": "https://api.github.com/users/sanak/followers",
        "following_url": "https://api.github.com/users/sanak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sanak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sanak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sanak/subscriptions",
        "organizations_url": "https://api.github.com/users/sanak/orgs",
        "repos_url": "https://api.github.com/users/sanak/repos",
        "events_url": "https://api.github.com/users/sanak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sanak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-07-05T04:17:12Z",
      "updated_at": "2015-07-05T04:17:12Z",
      "source": {
        "issue": {
          "id": 93075006,
          "node_id": "MDU6SXNzdWU5MzA3NTAwNg==",
          "url": "https://api.github.com/repos/Oslandia/SFCGAL/issues/103",
          "repository_url": "https://api.github.com/repos/Oslandia/SFCGAL",
          "labels_url": "https://api.github.com/repos/Oslandia/SFCGAL/issues/103/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/Oslandia/SFCGAL/issues/103/comments",
          "events_url": "https://api.github.com/repos/Oslandia/SFCGAL/issues/103/events",
          "html_url": "https://github.com/Oslandia/SFCGAL/issues/103",
          "number": 103,
          "state": "closed",
          "state_reason": "completed",
          "title": "Boost >= 1.58.0 boost::get<T> build issue",
          "body": "I encountered the following error when building `master` branch on my Mac OSX homebrew environment.\n(Sorry for too long list.)\n\n<pre>\nMBP2012:SFCGAL-git sanak$ mkdir build\nMBP2012:SFCGAL-git sanak$ cd build\nMBP2012:build sanak$ cmake ../\n-- The C compiler identification is AppleClang 6.1.0.6020053\n-- The CXX compiler identification is AppleClang 6.1.0.6020053\n-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc\n-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++\n-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Setting build type to 'Release' as none was specified.\n-- Boost_USE_STATIC_LIBS=OFF\n-- Boost_USE_MULTITHREAD=ON\n-- Boost version: 1.58.0\n-- Found the following Boost libraries:\n--   date_time\n--   thread\n--   system\n--   serialization\n-- Found GMP: /usr/local/include  \n-- GMP_INCLUDE_DIRS = /usr/local/include\n-- GMP_LIBRARIES = /usr/local/lib/libgmp.dylib\n-- Found MPFR: /usr/local/include  \n-- MPFR_INCLUDE_DIRS = /usr/local/include\n-- MPFR_LIBRARIES = /usr/local/lib/libmpfr.dylib\n-- Found CGAL: /usr/local/include (Required is at least version \"4.3\") \n-- CGAL 4.6 found\n-- removing /Users/sanak/Build/cpp/SFCGAL-git/src/io/osg.h and /Users/sanak/Build/cpp/SFCGAL-git/src/SFCGAL/io/osg.cpp from the library\nCMake Warning (dev) at cmake/Modules/Libtoolize.cmake:9 (GET_TARGET_PROPERTY):\n  Policy CMP0026 is not set: Disallow use of the LOCATION target property.\n  Run \"cmake --help-policy CMP0026\" for policy details.  Use the cmake_policy\n  command to set the policy and suppress this warning.\n\n  The LOCATION property should not be read from target \"SFCGAL\".  Use the\n  target name directly with add_custom_command, or use the generator\n  expression $<TARGET_FILE>, as appropriate.\n\nCall Stack (most recent call first):\n  CMakeLists.txt:236 (create_libtool_file)\nThis warning is for project developers.  Use -Wno-dev to suppress it.\n\n-- Configuring done\nCMake Warning (dev):\n  Policy CMP0042 is not set: MACOSX_RPATH is enabled by default.  Run \"cmake\n  --help-policy CMP0042\" for policy details.  Use the cmake_policy command to\n  set the policy and suppress this warning.\n\n  MACOSX_RPATH is not specified for the following targets:\n\n   SFCGAL\n\nThis warning is for project developers.  Use -Wno-dev to suppress it.\n\n-- Generating done\n-- Build files have been written to: /Users/sanak/Build/cpp/SFCGAL-git/build\nMBP2012:build sanak$ make\nScanning dependencies of target copy\n[  0%] Built target copy\nScanning dependencies of target SFCGAL\n[  1%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/area.cpp.o\n[  2%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/BoundaryVisitor.cpp.o\n[  3%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/collect.cpp.o\n[  4%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/collectionExtract.cpp.o\n[  5%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/collectionHomogenize.cpp.o\n[  6%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/collectionToMulti.cpp.o\n[  7%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/connection.cpp.o\n[  8%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/ConsistentOrientationBuilder.cpp.o\n[ 10%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/convexHull.cpp.o\n[ 11%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/covers.cpp.o\n[ 12%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/difference.cpp.o\n[ 13%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/differencePrimitives.cpp.o\n[ 14%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/distance.cpp.o\n[ 15%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/distance3d.cpp.o\n[ 16%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/extrude.cpp.o\n[ 17%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/force2D.cpp.o\n[ 19%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/force3D.cpp.o\n[ 20%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/intersection.cpp.o\n[ 21%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/Intersection2D.cpp.o\n[ 22%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/Intersection3D.cpp.o\n[ 23%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/intersects.cpp.o\n[ 24%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/isValid.cpp.o\n[ 25%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/length.cpp.o\n[ 26%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/minkowskiSum.cpp.o\n[ 28%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/offset.cpp.o\n[ 29%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/orientation.cpp.o\n[ 30%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/straightSkeleton.cpp.o\n[ 31%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/tesselate.cpp.o\n[ 32%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/translate.cpp.o\n[ 33%] Building CXX object src/CMakeFiles/SFCGAL.dir/algorithm/union.cpp.o\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:21:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/algorithm/differencePrimitives.h:26:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/Polygon.h:30:\nIn file included from /usr/local/include/CGAL/Polygon_with_holes_2.h:24:\nIn file included from /usr/local/include/CGAL/Polygon_2.h:33:\nIn file included from /usr/local/include/CGAL/basic.h:46:\nIn file included from /usr/local/include/CGAL/kernel_basic.h:33:\nIn file included from /usr/local/include/CGAL/Object.h:36:\nIn file included from /usr/local/include/boost/variant.hpp:22:\n/usr/local/include/boost/variant/get.hpp:212:5: error: implicit instantiation of undefined template\n      'boost::STATIC_ASSERTION_FAILURE<false>'\n    BOOST_STATIC_ASSERT_MSG(\n    ^\n/usr/local/include/boost/static_assert.hpp:36:48: note: expanded from macro 'BOOST_STATIC_ASSERT_MSG'\n#     define BOOST_STATIC_ASSERT_MSG( B, Msg ) BOOST_STATIC_ASSERT( B )\n                                               ^\n/usr/local/include/boost/static_assert.hpp:169:13: note: expanded from macro 'BOOST_STATIC_ASSERT'\n            sizeof(::boost::STATIC_ASSERTION_FAILURE< BOOST_STATIC_ASSERT_BOOL_CAST( __VA_ARGS__ ) >)>\\\n            ^\n/usr/local/include/boost/variant/get.hpp:284:12: note: in instantiation of function template\n      specialization 'boost::strict_get<CGAL::Point_2<CGAL::Epeck> &, CGAL::Point_2<CGAL::Epeck>,\n      SFCGAL::algorithm::Segment_d<2>, SFCGAL::algorithm::Surface_d<2>, SFCGAL::detail::NoVolume,\n      SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_>' requested here\n    return strict_get<U>(operand);\n           ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:392:23: note: in instantiation of function\n      template specialization 'boost::get<CGAL::Point_2<CGAL::Epeck> &, CGAL::Point_2<CGAL::Epeck>,\n      SFCGAL::algorithm::Segment_d<2>, SFCGAL::algorithm::Surface_d<2>, SFCGAL::detail::NoVolume,\n      SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_>' requested here\n        return boost::get<typename detail::Point_d<Dim>::Type& >( *( *_p ) );\n                      ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:508:26: note: in instantiation of member\n      function 'SFCGAL::algorithm::Handle<2>::asPoint' requested here\n    if ( do_intersect( a.asPoint(), b.asSurface() ) ) {\n                         ^\n/usr/local/include/boost/static_assert.hpp:87:26: note: template is declared here\ntemplate <bool x> struct STATIC_ASSERTION_FAILURE;\n                         ^\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:21:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/algorithm/differencePrimitives.h:26:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/Polygon.h:30:\nIn file included from /usr/local/include/CGAL/Polygon_with_holes_2.h:24:\nIn file included from /usr/local/include/CGAL/Polygon_2.h:33:\nIn file included from /usr/local/include/CGAL/basic.h:46:\nIn file included from /usr/local/include/CGAL/kernel_basic.h:33:\nIn file included from /usr/local/include/CGAL/Object.h:36:\nIn file included from /usr/local/include/boost/variant.hpp:22:\n/usr/local/include/boost/variant/get.hpp:212:5: error: implicit instantiation of undefined template\n      'boost::STATIC_ASSERTION_FAILURE<false>'\n    BOOST_STATIC_ASSERT_MSG(\n    ^\n/usr/local/include/boost/static_assert.hpp:36:48: note: expanded from macro 'BOOST_STATIC_ASSERT_MSG'\n#     define BOOST_STATIC_ASSERT_MSG( B, Msg ) BOOST_STATIC_ASSERT( B )\n                                               ^\n/usr/local/include/boost/static_assert.hpp:169:13: note: expanded from macro 'BOOST_STATIC_ASSERT'\n            sizeof(::boost::STATIC_ASSERTION_FAILURE< BOOST_STATIC_ASSERT_BOOL_CAST( __VA_ARGS__ ) >)>\\\n            ^\n/usr/local/include/boost/variant/get.hpp:284:12: note: in instantiation of function template\n      specialization 'boost::strict_get<SFCGAL::algorithm::Surface_d<2> &, CGAL::Point_2<CGAL::Epeck>,\n      SFCGAL::algorithm::Segment_d<2>, SFCGAL::algorithm::Surface_d<2>, SFCGAL::detail::NoVolume,\n      SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_>' requested here\n    return strict_get<U>(operand);\n           ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:404:23: note: in instantiation of function\n      template specialization 'boost::get<SFCGAL::algorithm::Surface_d<2> &, CGAL::Point_2<CGAL::Epeck>,\n      SFCGAL::algorithm::Segment_d<2>, SFCGAL::algorithm::Surface_d<2>, SFCGAL::detail::NoVolume,\n      SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_>' requested here\n        return boost::get<Surface_d<Dim> & >( *( *_p ) );\n                      ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:508:39: note: in instantiation of member\n      function 'SFCGAL::algorithm::Handle<2>::asSurface' requested here\n    if ( do_intersect( a.asPoint(), b.asSurface() ) ) {\n                                      ^\n/usr/local/include/boost/static_assert.hpp:87:26: note: template is declared here\ntemplate <bool x> struct STATIC_ASSERTION_FAILURE;\n                         ^\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:21:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/algorithm/differencePrimitives.h:26:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/Polygon.h:30:\nIn file included from /usr/local/include/CGAL/Polygon_with_holes_2.h:24:\nIn file included from /usr/local/include/CGAL/Polygon_2.h:33:\nIn file included from /usr/local/include/CGAL/basic.h:46:\nIn file included from /usr/local/include/CGAL/kernel_basic.h:33:\nIn file included from /usr/local/include/CGAL/Object.h:36:\nIn file included from /usr/local/include/boost/variant.hpp:22:\n/usr/local/include/boost/variant/get.hpp:212:5: error: implicit instantiation of undefined template\n      'boost::STATIC_ASSERTION_FAILURE<false>'\n    BOOST_STATIC_ASSERT_MSG(\n    ^\n/usr/local/include/boost/static_assert.hpp:36:48: note: expanded from macro 'BOOST_STATIC_ASSERT_MSG'\n#     define BOOST_STATIC_ASSERT_MSG( B, Msg ) BOOST_STATIC_ASSERT( B )\n                                               ^\n/usr/local/include/boost/static_assert.hpp:169:13: note: expanded from macro 'BOOST_STATIC_ASSERT'\n            sizeof(::boost::STATIC_ASSERTION_FAILURE< BOOST_STATIC_ASSERT_BOOL_CAST( __VA_ARGS__ ) >)>\\\n            ^\n/usr/local/include/boost/variant/get.hpp:284:12: note: in instantiation of function template\n      specialization 'boost::strict_get<SFCGAL::algorithm::Surface_d<3> &, CGAL::Point_3<CGAL::Epeck>,\n      SFCGAL::algorithm::Segment_d<3>, SFCGAL::algorithm::Surface_d<3>, CGAL::Polyhedron_3<CGAL::Epeck,\n      SFCGAL::detail::Items_with_mark_on_hedge, HalfedgeDS_default, std::__1::allocator<int> >,\n      SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_>' requested here\n    return strict_get<U>(operand);\n           ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:404:23: note: in instantiation of function\n      template specialization 'boost::get<SFCGAL::algorithm::Surface_d<3> &, CGAL::Point_3<CGAL::Epeck>,\n      SFCGAL::algorithm::Segment_d<3>, SFCGAL::algorithm::Surface_d<3>, CGAL::Polyhedron_3<CGAL::Epeck,\n      SFCGAL::detail::Items_with_mark_on_hedge, HalfedgeDS_default, std::__1::allocator<int> >,\n      SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_>' requested here\n        return boost::get<Surface_d<Dim> & >( *( *_p ) );\n                      ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:515:12: note: in instantiation of member\n      function 'SFCGAL::algorithm::Handle<3>::asSurface' requested here\n    if ( b.asSurface().has_on( a.asPoint() ) ) {\n           ^\n/usr/local/include/boost/static_assert.hpp:87:26: note: template is declared here\ntemplate <bool x> struct STATIC_ASSERTION_FAILURE;\n                         ^\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:21:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/algorithm/differencePrimitives.h:26:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/Polygon.h:30:\nIn file included from /usr/local/include/CGAL/Polygon_with_holes_2.h:24:\nIn file included from /usr/local/include/CGAL/Polygon_2.h:33:\nIn file included from /usr/local/include/CGAL/basic.h:46:\nIn file included from /usr/local/include/CGAL/kernel_basic.h:33:\nIn file included from /usr/local/include/CGAL/Object.h:36:\nIn file included from /usr/local/include/boost/variant.hpp:22:\n/usr/local/include/boost/variant/get.hpp:212:5: error: implicit instantiation of undefined template\n      'boost::STATIC_ASSERTION_FAILURE<false>'\n    BOOST_STATIC_ASSERT_MSG(\n    ^\n/usr/local/include/boost/static_assert.hpp:36:48: note: expanded from macro 'BOOST_STATIC_ASSERT_MSG'\n#     define BOOST_STATIC_ASSERT_MSG( B, Msg ) BOOST_STATIC_ASSERT( B )\n                                               ^\n/usr/local/include/boost/static_assert.hpp:169:13: note: expanded from macro 'BOOST_STATIC_ASSERT'\n            sizeof(::boost::STATIC_ASSERTION_FAILURE< BOOST_STATIC_ASSERT_BOOL_CAST( __VA_ARGS__ ) >)>\\\n            ^\n/usr/local/include/boost/variant/get.hpp:284:12: note: in instantiation of function template\n      specialization 'boost::strict_get<CGAL::Point_3<CGAL::Epeck> &, CGAL::Point_3<CGAL::Epeck>,\n      SFCGAL::algorithm::Segment_d<3>, SFCGAL::algorithm::Surface_d<3>, CGAL::Polyhedron_3<CGAL::Epeck,\n      SFCGAL::detail::Items_with_mark_on_hedge, HalfedgeDS_default, std::__1::allocator<int> >,\n      SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_>' requested here\n    return strict_get<U>(operand);\n           ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:392:23: note: in instantiation of function\n      template specialization 'boost::get<CGAL::Point_3<CGAL::Epeck> &, CGAL::Point_3<CGAL::Epeck>,\n      SFCGAL::algorithm::Segment_d<3>, SFCGAL::algorithm::Surface_d<3>, CGAL::Polyhedron_3<CGAL::Epeck,\n      SFCGAL::detail::Items_with_mark_on_hedge, HalfedgeDS_default, std::__1::allocator<int> >,\n      SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_>' requested here\n        return boost::get<typename detail::Point_d<Dim>::Type& >( *( *_p ) );\n                      ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:515:34: note: in instantiation of member\n      function 'SFCGAL::algorithm::Handle<3>::asPoint' requested here\n    if ( b.asSurface().has_on( a.asPoint() ) ) {\n                                 ^\n/usr/local/include/boost/static_assert.hpp:87:26: note: template is declared here\ntemplate <bool x> struct STATIC_ASSERTION_FAILURE;\n                         ^\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:21:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/algorithm/differencePrimitives.h:26:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/Polygon.h:30:\nIn file included from /usr/local/include/CGAL/Polygon_with_holes_2.h:24:\nIn file included from /usr/local/include/CGAL/Polygon_2.h:33:\nIn file included from /usr/local/include/CGAL/basic.h:46:\nIn file included from /usr/local/include/CGAL/kernel_basic.h:33:\nIn file included from /usr/local/include/CGAL/Object.h:36:\nIn file included from /usr/local/include/boost/variant.hpp:22:\n/usr/local/include/boost/variant/get.hpp:212:5: error: implicit instantiation of undefined template\n      'boost::STATIC_ASSERTION_FAILURE<false>'\n    BOOST_STATIC_ASSERT_MSG(\n    ^\n/usr/local/include/boost/static_assert.hpp:36:48: note: expanded from macro 'BOOST_STATIC_ASSERT_MSG'\n#     define BOOST_STATIC_ASSERT_MSG( B, Msg ) BOOST_STATIC_ASSERT( B )\n                                               ^\n/usr/local/include/boost/static_assert.hpp:169:13: note: expanded from macro 'BOOST_STATIC_ASSERT'\n            sizeof(::boost::STATIC_ASSERTION_FAILURE< BOOST_STATIC_ASSERT_BOOL_CAST( __VA_ARGS__ ) >)>\\\n            ^\n/usr/local/include/boost/variant/get.hpp:284:12: note: in instantiation of function template\n      specialization 'boost::strict_get<CGAL::Polyhedron_3<CGAL::Epeck,\n      SFCGAL::detail::Items_with_mark_on_hedge, HalfedgeDS_default, std::__1::allocator<int> > &,\n      CGAL::Point_3<CGAL::Epeck>, SFCGAL::algorithm::Segment_d<3>, SFCGAL::algorithm::Surface_d<3>,\n      CGAL::Polyhedron_3<CGAL::Epeck, SFCGAL::detail::Items_with_mark_on_hedge, HalfedgeDS_default,\n      std::__1::allocator<int> >, SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_>' requested here\n    return strict_get<U>(operand);\n           ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:410:23: note: in instantiation of function\n      template specialization 'boost::get<CGAL::Polyhedron_3<CGAL::Epeck,\n      SFCGAL::detail::Items_with_mark_on_hedge, HalfedgeDS_default, std::__1::allocator<int> > &,\n      CGAL::Point_3<CGAL::Epeck>, SFCGAL::algorithm::Segment_d<3>, SFCGAL::algorithm::Surface_d<3>,\n      CGAL::Polyhedron_3<CGAL::Epeck, SFCGAL::detail::Items_with_mark_on_hedge, HalfedgeDS_default,\n      std::__1::allocator<int> >, SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_>' requested here\n        return boost::get<typename detail::Volume_d<Dim>::Type& >( *( *_p ) );\n                      ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:528:77: note: in instantiation of member\n      function 'SFCGAL::algorithm::Handle<3>::asVolume' requested here\n    CGAL::Point_inside_polyhedron_3<MarkedPolyhedron, Kernel> is_in_poly( b.asVolume() );\n                                                                            ^\n/usr/local/include/boost/static_assert.hpp:87:26: note: template is declared here\ntemplate <bool x> struct STATIC_ASSERTION_FAILURE;\n                         ^\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:21:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/algorithm/differencePrimitives.h:26:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/Polygon.h:30:\nIn file included from /usr/local/include/CGAL/Polygon_with_holes_2.h:24:\nIn file included from /usr/local/include/CGAL/Polygon_2.h:33:\nIn file included from /usr/local/include/CGAL/basic.h:46:\nIn file included from /usr/local/include/CGAL/kernel_basic.h:33:\nIn file included from /usr/local/include/CGAL/Object.h:36:\nIn file included from /usr/local/include/boost/variant.hpp:22:\n/usr/local/include/boost/variant/get.hpp:212:5: error: implicit instantiation of undefined template\n      'boost::STATIC_ASSERTION_FAILURE<false>'\n    BOOST_STATIC_ASSERT_MSG(\n    ^\n/usr/local/include/boost/static_assert.hpp:36:48: note: expanded from macro 'BOOST_STATIC_ASSERT_MSG'\n#     define BOOST_STATIC_ASSERT_MSG( B, Msg ) BOOST_STATIC_ASSERT( B )\n                                               ^\n/usr/local/include/boost/static_assert.hpp:169:13: note: expanded from macro 'BOOST_STATIC_ASSERT'\n            sizeof(::boost::STATIC_ASSERTION_FAILURE< BOOST_STATIC_ASSERT_BOOL_CAST( __VA_ARGS__ ) >)>\\\n            ^\n/usr/local/include/boost/variant/get.hpp:284:12: note: in instantiation of function template\n      specialization 'boost::strict_get<SFCGAL::algorithm::Segment_d<2> &, CGAL::Point_2<CGAL::Epeck>,\n      SFCGAL::algorithm::Segment_d<2>, SFCGAL::algorithm::Surface_d<2>, SFCGAL::detail::NoVolume,\n      SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_>' requested here\n    return strict_get<U>(operand);\n           ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:398:23: note: in instantiation of function\n      template specialization 'boost::get<SFCGAL::algorithm::Segment_d<2> &, CGAL::Point_2<CGAL::Epeck>,\n      SFCGAL::algorithm::Segment_d<2>, SFCGAL::algorithm::Surface_d<2>, SFCGAL::detail::NoVolume,\n      SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_>' requested here\n        return boost::get<Segment_d<Dim> & >( *( *_p ) );\n                      ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:573:41: note: in instantiation of member\n      function 'SFCGAL::algorithm::Handle<2>::asSegment' requested here\n    std::vector< Point_2 > points( 1, a.asSegment().source() );\n                                        ^\n/usr/local/include/boost/static_assert.hpp:87:26: note: template is declared here\ntemplate <bool x> struct STATIC_ASSERTION_FAILURE;\n                         ^\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:21:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/algorithm/differencePrimitives.h:26:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/Polygon.h:30:\nIn file included from /usr/local/include/CGAL/Polygon_with_holes_2.h:24:\nIn file included from /usr/local/include/CGAL/Polygon_2.h:33:\nIn file included from /usr/local/include/CGAL/basic.h:46:\nIn file included from /usr/local/include/CGAL/kernel_basic.h:33:\nIn file included from /usr/local/include/CGAL/Object.h:36:\nIn file included from /usr/local/include/boost/variant.hpp:22:\n/usr/local/include/boost/variant/get.hpp:212:5: error: implicit instantiation of undefined template\n      'boost::STATIC_ASSERTION_FAILURE<false>'\n    BOOST_STATIC_ASSERT_MSG(\n    ^\n/usr/local/include/boost/static_assert.hpp:36:48: note: expanded from macro 'BOOST_STATIC_ASSERT_MSG'\n#     define BOOST_STATIC_ASSERT_MSG( B, Msg ) BOOST_STATIC_ASSERT( B )\n                                               ^\n/usr/local/include/boost/static_assert.hpp:169:13: note: expanded from macro 'BOOST_STATIC_ASSERT'\n            sizeof(::boost::STATIC_ASSERTION_FAILURE< BOOST_STATIC_ASSERT_BOOL_CAST( __VA_ARGS__ ) >)>\\\n            ^\n/usr/local/include/boost/variant/get.hpp:284:12: note: in instantiation of function template\n      specialization 'boost::strict_get<SFCGAL::algorithm::Segment_d<3> &, CGAL::Point_3<CGAL::Epeck>,\n      SFCGAL::algorithm::Segment_d<3>, SFCGAL::algorithm::Surface_d<3>, CGAL::Polyhedron_3<CGAL::Epeck,\n      SFCGAL::detail::Items_with_mark_on_hedge, HalfedgeDS_default, std::__1::allocator<int> >,\n      SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_>' requested here\n    return strict_get<U>(operand);\n           ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:398:23: note: in instantiation of function\n      template specialization 'boost::get<SFCGAL::algorithm::Segment_d<3> &, CGAL::Point_3<CGAL::Epeck>,\n      SFCGAL::algorithm::Segment_d<3>, SFCGAL::algorithm::Surface_d<3>, CGAL::Polyhedron_3<CGAL::Epeck,\n      SFCGAL::detail::Items_with_mark_on_hedge, HalfedgeDS_default, std::__1::allocator<int> >,\n      SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_>' requested here\n        return boost::get<Segment_d<Dim> & >( *( *_p ) );\n                      ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:614:48: note: in instantiation of member\n      function 'SFCGAL::algorithm::Handle<3>::asSegment' requested here\n    CGAL::Object inter = CGAL::intersection( a.asSegment(), b.asSurface() );\n                                               ^\n/usr/local/include/boost/static_assert.hpp:87:26: note: template is declared here\ntemplate <bool x> struct STATIC_ASSERTION_FAILURE;\n                         ^\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:21:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/algorithm/differencePrimitives.h:26:\nIn file included from /Users/sanak/Build/cpp/SFCGAL-git/build/include/SFCGAL/Polygon.h:30:\nIn file included from /usr/local/include/CGAL/Polygon_with_holes_2.h:24:\nIn file included from /usr/local/include/CGAL/Polygon_2.h:33:\nIn file included from /usr/local/include/CGAL/basic.h:46:\nIn file included from /usr/local/include/CGAL/kernel_basic.h:33:\nIn file included from /usr/local/include/CGAL/Object.h:36:\nIn file included from /usr/local/include/boost/variant.hpp:22:\n/usr/local/include/boost/variant/get.hpp:212:5: error: implicit instantiation of undefined template\n      'boost::STATIC_ASSERTION_FAILURE<false>'\n    BOOST_STATIC_ASSERT_MSG(\n    ^\n/usr/local/include/boost/static_assert.hpp:36:48: note: expanded from macro 'BOOST_STATIC_ASSERT_MSG'\n#     define BOOST_STATIC_ASSERT_MSG( B, Msg ) BOOST_STATIC_ASSERT( B )\n                                               ^\n/usr/local/include/boost/static_assert.hpp:169:13: note: expanded from macro 'BOOST_STATIC_ASSERT'\n            sizeof(::boost::STATIC_ASSERTION_FAILURE< BOOST_STATIC_ASSERT_BOOL_CAST( __VA_ARGS__ ) >)>\\\n            ^\n/usr/local/include/boost/variant/get.hpp:284:12: note: in instantiation of function template\n      specialization 'boost::strict_get<SFCGAL::detail::NoVolume &, CGAL::Point_2<CGAL::Epeck>,\n      SFCGAL::algorithm::Segment_d<2>, SFCGAL::algorithm::Surface_d<2>, SFCGAL::detail::NoVolume,\n      SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_>' requested here\n    return strict_get<U>(operand);\n           ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:410:23: note: in instantiation of function\n      template specialization 'boost::get<SFCGAL::detail::NoVolume &, CGAL::Point_2<CGAL::Epeck>,\n      SFCGAL::algorithm::Segment_d<2>, SFCGAL::algorithm::Surface_d<2>, SFCGAL::detail::NoVolume,\n      SFCGAL::algorithm::EmptyPrimitive, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_,\n      boost::detail::variant::void_>' requested here\n        return boost::get<typename detail::Volume_d<Dim>::Type& >( *( *_p ) );\n                      ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:926:48: note: in instantiation of member\n      function 'SFCGAL::algorithm::Handle<2>::asVolume' requested here\n            output.addPrimitive( bit->handle().asVolume() );\n                                               ^\n/Users/sanak/Build/cpp/SFCGAL-git/src/algorithm/union.cpp:948:5: note: in instantiation of function\n      template specialization 'SFCGAL::algorithm::collectPrimitives<2>' requested here\n    collectPrimitives( boxes, output );\n    ^\n/usr/local/include/boost/static_assert.hpp:87:26: note: template is declared here\ntemplate <bool x> struct STATIC_ASSERTION_FAILURE;\n                         ^\n8 errors generated.\nmake[2]: *** [src/CMakeFiles/SFCGAL.dir/algorithm/union.cpp.o] Error 1\nmake[1]: *** [src/CMakeFiles/SFCGAL.dir/all] Error 2\nmake: *** [all] Error 2\n</pre>\n\n\nAccording to the following links, defining `BOOST_VARIANT_USE_RELAXED_GET_BY_DEFAULT` or fixing each `boost::get<T>` parts seem to be necessary.\nhttps://github.com/bitcoin/bitcoin/issues/6056\nhttp://www.boost.org/users/history/version_1_58_0.html\n",
          "user": {
            "login": "sanak",
            "id": 629923,
            "node_id": "MDQ6VXNlcjYyOTkyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/629923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sanak",
            "html_url": "https://github.com/sanak",
            "followers_url": "https://api.github.com/users/sanak/followers",
            "following_url": "https://api.github.com/users/sanak/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sanak/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sanak/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sanak/subscriptions",
            "organizations_url": "https://api.github.com/users/sanak/orgs",
            "repos_url": "https://api.github.com/users/sanak/repos",
            "events_url": "https://api.github.com/users/sanak/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sanak/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 7,
          "closed_at": "2015-08-19T10:02:33Z",
          "created_at": "2015-07-05T04:17:12Z",
          "updated_at": "2015-08-19T10:02:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "dozen",
        "id": 802038,
        "node_id": "MDQ6VXNlcjgwMjAzOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/802038?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dozen",
        "html_url": "https://github.com/dozen",
        "followers_url": "https://api.github.com/users/dozen/followers",
        "following_url": "https://api.github.com/users/dozen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dozen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dozen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dozen/subscriptions",
        "organizations_url": "https://api.github.com/users/dozen/orgs",
        "repos_url": "https://api.github.com/users/dozen/repos",
        "events_url": "https://api.github.com/users/dozen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dozen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T17:50:36Z",
      "updated_at": "2015-12-12T17:50:36Z",
      "source": {
        "issue": {
          "id": 121868744,
          "node_id": "MDU6SXNzdWUxMjE4Njg3NDQ=",
          "url": "https://api.github.com/repos/bitzeny/bitzeny/issues/1",
          "repository_url": "https://api.github.com/repos/bitzeny/bitzeny",
          "labels_url": "https://api.github.com/repos/bitzeny/bitzeny/issues/1/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitzeny/bitzeny/issues/1/comments",
          "events_url": "https://api.github.com/repos/bitzeny/bitzeny/issues/1/events",
          "html_url": "https://github.com/bitzeny/bitzeny/issues/1",
          "number": 1,
          "state": "closed",
          "state_reason": "completed",
          "title": "ビルドがコケる",
          "body": "70e79d9389d83283706fe14a47ceff69f6661e57 このバージョンのbitzenyをビルドしようとしたところビルドに失敗しました.\n\n```\nIn file included from /usr/include/boost/move/detail/type_traits.hpp:34:0,\n                 from /usr/include/boost/move/core.hpp:54,\n                 from /usr/include/boost/move/utility_core.hpp:29,\n                 from /usr/include/boost/move/utility.hpp:28,\n                 from /usr/include/boost/thread/detail/move.hpp:27,\n                 from /usr/include/boost/thread/lock_types.hpp:11,\n                 from /usr/include/boost/thread/pthread/mutex.hpp:16,\n                 from /usr/include/boost/thread/mutex.hpp:16,\n                 from ./allocators.h:13,\n                 from ./key.h:9,\n                 from ./script/script.h:9,\n                 from script/compressor.h:9,\n                 from core.h:10,\n                 from chainparams.h:9,\n                 from base58.h:17,\n                 from rpcrawtransaction.cpp:6:\n/usr/include/boost/variant/get.hpp: In instantiation of ‘typename boost::add_reference::type boost::strict_get(boost::variant&) [with U = const CScriptID&; T0 = CNoDestination; T1 = CKeyID; T2 = CScriptID; T3 = boost::detail::variant::void_; T4 = boost::detail::variant::void_; T5 = boost::detail::variant::void_; T6 = boost::detail::variant::void_; T7 = boost::detail::variant::void_; T8 = boost::detail::variant::void_; T9 = boost::detail::variant::void_; T10 = boost::detail::variant::void_; T11 = boost::detail::variant::void_; T12 = boost::detail::variant::void_; T13 = boost::detail::variant::void_; T14 = boost::detail::variant::void_; T15 = boost::detail::variant::void_; T16 = boost::detail::variant::void_; T17 = boost::detail::variant::void_; T18 = boost::detail::variant::void_; T19 = boost::detail::variant::void_; typename boost::add_reference::type = const CScriptID&]’:\n/usr/include/boost/variant/get.hpp:284:25:   required from ‘typename boost::add_reference::type boost::get(boost::variant&) [with U = const CScriptID&; T0 = CNoDestination; T1 = CKeyID; T2 = CScriptID; T3 = boost::detail::variant::void_; T4 = boost::detail::variant::void_; T5 = boost::detail::variant::void_; T6 = boost::detail::variant::void_; T7 = boost::detail::variant::void_; T8 = boost::detail::variant::void_; T9 = boost::detail::variant::void_; T10 = boost::detail::variant::void_; T11 = boost::detail::variant::void_; T12 = boost::detail::variant::void_; T13 = boost::detail::variant::void_; T14 = boost::detail::variant::void_; T15 = boost::detail::variant::void_; T16 = boost::detail::variant::void_; T17 = boost::detail::variant::void_; T18 = boost::detail::variant::void_; T19 = boost::detail::variant::void_; typename boost::add_reference::type = const CScriptID&]’\nrpcrawtransaction.cpp:290:77:   required from here\n/usr/include/boost/variant/get.hpp:178:5: error: invalid application of ‘sizeof’ to incomplete type ‘boost::STATIC_ASSERTION_FAILURE’\n     BOOST_STATIC_ASSERT_MSG(\n     ^\nMakefile:3222: recipe for target 'libbitcoin_server_a-rpcrawtransaction.o' failed\nmake[1]: *** [libbitcoin_server_a-rpcrawtransaction.o] Error 1\nmake[1]: Leaving directory '/home/hogehoge/bit/bitzeny-master/src'\nMakefile:564: recipe for target 'all-recursive' failed\nmake: *** [all-recursive] Error 1\n```\n\nhttps://github.com/bitcoin/bitcoin/issues/6056 で指摘されていたものと同じようです.\n\n`src/rpcrawtransaction.cpp`の299行目を変更したところビルドできました.\n\n```\n-                const CScriptID& hash = boost::get<const CScriptID&>(address);\n+                const CScriptID& hash = boost::get<CScriptID>(address);\n```\n",
          "user": {
            "login": "dozen",
            "id": 802038,
            "node_id": "MDQ6VXNlcjgwMjAzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/802038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dozen",
            "html_url": "https://github.com/dozen",
            "followers_url": "https://api.github.com/users/dozen/followers",
            "following_url": "https://api.github.com/users/dozen/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dozen/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dozen/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dozen/subscriptions",
            "organizations_url": "https://api.github.com/users/dozen/orgs",
            "repos_url": "https://api.github.com/users/dozen/repos",
            "events_url": "https://api.github.com/users/dozen/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dozen/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 0,
          "closed_at": "2016-06-12T15:57:15Z",
          "created_at": "2015-12-12T17:50:36Z",
          "updated_at": "2016-06-12T15:57:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "locked",
      "id": 5271950346,
      "node_id": "LOE_lADOABII584ENO3jzwAAAAE6O5QK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271950346",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:22:40Z",
      "lock_reason": "resolved"
    }
  ]
}