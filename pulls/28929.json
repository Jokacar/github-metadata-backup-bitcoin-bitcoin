{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929",
    "id": 1613701410,
    "node_id": "PR_kwDOABII585gLyEi",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28929",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28929.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28929.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28929",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28929/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/40f505583f4edeb2859aeb70da20c6374d331a4f",
    "number": 28929,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "serialization: Support for multiple parameters",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Currently it is only possible to attach one serialization parameter to a stream at a time. For example, it is not possible to set a parameter controlling the transaction format and a parameter controlling the address format at the same time because one parameter will override the other.\r\n\r\nThis limitation is inconvenient for multiprocess code since it is not possible to create just one type of stream and serialize any object to it. Instead it is necessary to create different streams for different object types, which requires extra boilerplate and makes using the new parameter fields a lot more awkward than the older version and type fields.\r\n\r\nFix this problem by allowing an unlimited number of serialization stream parameters to be set, and allowing them to be requested by type. Later parameters will still override earlier parameters, but only if they have the same type.\r\n\r\nFor an example of different ways multiple parameters can be set, see the new [`with_params_multi`](https://github.com/bitcoin/bitcoin/blob/40f505583f4edeb2859aeb70da20c6374d331a4f/src/test/serialize_tests.cpp#L394-L410) unit test.\r\n\r\nThis change requires replacing the `stream.GetParams()` method with a `stream.GetParams<T>()` method in order for serialization code to retrieve the desired parameters. The change is more verbose, but probably a good thing for readability because previously it could be difficult to know what type the `GetParams()` method would return, and now it is more obvious.\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).",
    "labels": [],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/66",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/66",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/66/labels",
      "id": 10314936,
      "node_id": "MI_kwDOABII584AnWS4",
      "number": 66,
      "state": "open",
      "title": "28.0",
      "creator": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 12,
      "closed_issues": 0,
      "created_at": "2023-12-15T12:08:23Z",
      "updated_at": "2024-02-27T13:44:33Z"
    },
    "created_at": "2023-11-23T01:31:48Z",
    "updated_at": "2024-02-28T12:49:17Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "0c0b2990dab933e070d792320b52a85165a7dba3",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "ryanofsky:pr/iparams",
      "ref": "pr/iparams",
      "sha": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 12,
        "watchers_count": 12,
        "size": 246934,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-02-28T01:49:36Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2024-01-25T23:52:08Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2ac41ef15fa523aa381d2b866aaa233b874c42fe",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34698,
        "stargazers_count": 74238,
        "watchers_count": 74238,
        "size": 250478,
        "default_branch": "master",
        "open_issues_count": 689,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-02-28T10:45:53Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-02-28T12:58:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 176,
    "deletions": 50,
    "changed_files": 7,
    "commits": 7,
    "review_comments": 31,
    "comments": 9
  },
  "events": [
    {
      "event": "commented",
      "id": 1823723265,
      "node_id": "IC_kwDOABII585ss88B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823723265",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-23T01:31:51Z",
      "updated_at": "2024-02-21T16:10:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28929).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [maflcko](https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1956703003), [sipa](https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1957073882) |\n| Concept ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1825460284) |\n| Ignored review | [ajtowns](https://github.com/bitcoin/bitcoin/pull/28929#pullrequestreview-1745623209) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29409](https://github.com/bitcoin/bitcoin/pull/29409) (multiprocess: Add capnp wrapper for Chain interface by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1823723265",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28929"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-23T01:32:55Z",
      "updated_at": "2023-11-23T01:32:55Z",
      "source": {
        "issue": {
          "id": 1959828375,
          "node_id": "I_kwDOABII58500JuX",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28722",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28722/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28722/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28722/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/28722",
          "number": 28722,
          "state": "open",
          "state_reason": null,
          "title": "Multiprocess tracking issue",
          "body": "This issue will be updated to reflect the current state of bitcoin core [multiprocess support](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md).\r\n\r\nPRs ready for review:\r\n\r\n- [ ] #28929\r\n- [ ] #29409\r\n- [ ] #10102\r\n- [ ] #19460\r\n- [ ] #19461\r\n\r\nPRs previously merged:\r\n\r\n- [X] ~#10242~\r\n- [X] ~#10295~\r\n- [X] ~#10600~\r\n- [X] ~#10244~\r\n- [X] ~#10605~\r\n- [X] ~#14636~\r\n- [X] ~#14437~\r\n- [X] ~#14711~\r\n- [X] ~#15342~\r\n- [X] ~#15373~\r\n- [X] ~#15288~\r\n- [X] ~#15531~\r\n- [X] ~#10973~\r\n- [X] ~#16839~\r\n- [X] ~#17906~\r\n- [X] ~#18278~\r\n- [X] ~#16367~\r\n- [X] ~#17999~\r\n- [X] ~#18743~\r\n- [X] ~#18587~\r\n- [X] ~#18677~\r\n- [X] ~#20494~\r\n- [X] ~#20046~\r\n- [X] ~#21035~\r\n- [X] ~#21732~\r\n- [X] ~#19160~\r\n- [X] ~#22216~\r\n- [X] ~#22214~\r\n- [X] ~#22218~\r\n- [X] ~bitcoin-core/gui#360~\r\n- [X] ~#22215~\r\n- [X] ~#22217~\r\n- [X] ~#19101~\r\n- [X] ~#22848~\r\n- [X] ~#22219~\r\n- [X] ~#23003~\r\n- [X] ~#23006~\r\n- [X] ~#23004~\r\n- [X] ~#23005~\r\n- [X] ~#23499~\r\n- [X] ~#28721~\r\n- [X] ~#28907~\r\n- [X] ~#28978~\r\n- [X] ~#28921~\r\n\r\nLinks:\r\n\r\n* [Documentation](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md)\r\n* [Project board](https://github.com/bitcoin/bitcoin/projects/10)\r\n* [Wiki](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Process-Separation)\r\n* [Presentation](https://docs.google.com/presentation/d/1AeJ-7gD-dItUgs5yH-HoEzLvXaEWe_2ZiGUUxYIXcws/edit) ([code shown](https://github.com/ryanofsky/bitcoin/compare/master...pr/ipc.21))\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 0,
          "created_at": "2023-10-24T18:22:37Z",
          "updated_at": "2024-02-08T13:56:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-23T01:37:14Z",
      "updated_at": "2023-11-23T01:37:14Z",
      "source": {
        "issue": {
          "id": 217385623,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyODQ2NDMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
          "number": 10102,
          "state": "open",
          "state_reason": null,
          "title": "Multiprocess bitcoin",
          "body": "**This is a draft PR because it is based on #28921 and #28929.** The non-base commits are:\r\n\r\n- [`ee4b9138c837` doc: multiprocess documentation improvements](https://github.com/bitcoin/bitcoin/pull/10102/commits/ee4b9138c837f6dc6b8f063b0df27573736d6578)\r\n- [`df27e301e603` Increase feature_block.py and feature_taproot.py timeouts](https://github.com/bitcoin/bitcoin/pull/10102/commits/df27e301e603d460cbd187056aeff20087cefe3e)\r\n- [`cbc5e366a216` Add util::Result workaround to be compatible with libmultiprocess](https://github.com/bitcoin/bitcoin/pull/10102/commits/cbc5e366a21660601bee8270b5f1d183c148d092)\r\n- [`3427e7e0a965` Add capnp serialization code for bitcoin types](https://github.com/bitcoin/bitcoin/pull/10102/commits/3427e7e0a96502b9c8c6a9d74e5f21a8d84de928)\r\n- [`b6516c454f70` Add capnp wrapper for Handler interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/b6516c454f70d8ef3091ee2ef0bdaede3b0f5893)\r\n- [`5cf30e5357fc` Add capnp wrapper for Chain interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/5cf30e5357fcc3d0ffb871b237e47b79fedd317a)\r\n- [`b5fd425e075a` Add capnp wrapper for Wallet interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/b5fd425e075a3b21bc5e5b4f25209d8abacbeb58)\r\n- [`329b34c85ac6` Add capnp wrapper for Node interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/329b34c85ac6c3718a5a575a48615ed29cfee2fc)\r\n- [`dde2a2211038` Make bitcoin-gui spawn a bitcoin-node process](https://github.com/bitcoin/bitcoin/pull/10102/commits/dde2a221103894606c77017d3e865f1aec3bfb10)\r\n- [`f3349a24e5ac` Make bitcoin-node spawn a bitcoin-wallet process](https://github.com/bitcoin/bitcoin/pull/10102/commits/f3349a24e5ac59913fbcf4ebeb8eaf8df75c604f)\r\n- [`6ea638ca4f28` multiprocess: Add debug.log .wallet/.gui suffixes](https://github.com/bitcoin/bitcoin/pull/10102/commits/6ea638ca4f2834d30853d731c8ed0bc98421d3ce)\r\n- [`622acd03b043` doc: Multiprocess misc doc and comment updates](https://github.com/bitcoin/bitcoin/pull/10102/commits/622acd03b043b238e3fa544167d0d612f1a08715)\r\n- [`755ca62696a4` combine_logs: Handle multiprocess wallet log files](https://github.com/bitcoin/bitcoin/pull/10102/commits/755ca62696a4a15cde7046f36425319ae4ca50ea)\r\n- [`56ef459b5734` Update libmultiprocess library](https://github.com/bitcoin/bitcoin/pull/10102/commits/56ef459b573461087fbe4f39d9b0a7108936335f)\r\n\r\n---\r\n\r\nThis PR adds an `--enable-multiprocess` configure option which builds new `bitcoin-node`, `bitcoin-wallet`, and `bitcoin-gui` executables with relevant functionality isolated into different processes. See [doc/design/multiprocess.md](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md) for usage details and future plans.\r\n\r\nThe change is implemented by adding a new [`Init`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/init.h) interface that spawns new wallet and node subprocesses that can be controlled over a [socketpair](http://man7.org/linux/man-pages/man2/socketpair.2.html) by calling [`Node`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/node.h), [`Wallet`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/wallet.h), and [`ChainClient`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/chain.h) methods. When running with split processes, you can see the IPC messages going back and forth in `-debug=1` output. Followup PR's #19460 and #19461 add `-ipcbind` and `-ipcconnect` options that allow more flexibility in how processes are connected.\r\n\r\nThe IPC protocol used is Cap'n Proto, but this could be swapped out for another protocol. Cap'n Proto types and libraries are only accessed in the [src/ipc/capnp/](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/src/ipc/capnp) directory, and not in any public headers or other parts of bitcoin code.\r\n\r\nSlides from a presentation describing this change are available on [google drive](https://docs.google.com/presentation/d/1AeJ-7gD-dItUgs5yH-HoEzLvXaEWe_2ZiGUUxYIXcws/edit). Demo code used in the presentation was from an older version this PR (tag [ipc.21](https://github.com/ryanofsky/bitcoin/releases/tag/pr%2Fipc.21), [commits](https://github.com/ryanofsky/bitcoin/compare/master...pr/ipc.21)).\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 84,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10102",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10102.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10102.patch"
          },
          "created_at": "2017-03-27T21:48:26Z",
          "updated_at": "2024-01-23T19:04:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1745596465,
      "node_id": "PRR_kwDOABII585oC7Ax",
      "url": null,
      "actor": null,
      "commit_id": "554a0dd18c0a277ab1d45c1643c16ed851eee14c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#pullrequestreview-1745596465",
      "submitted_at": "2023-11-23T01:40:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-23T01:55:59Z",
      "updated_at": "2023-11-23T01:55:59Z",
      "source": {
        "issue": {
          "id": 1888574337,
          "node_id": "PR_kwDOABII585Z7NXs",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28438",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28438/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28438/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28438/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28438",
          "number": 28438,
          "state": "closed",
          "state_reason": null,
          "title": "Use serialization parameters for CTransaction",
          "body": "Choose whether witness is included in transaction serialization via serialization parameter rather than the stream version. See #25284 and #19477 for previous context.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/61",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/61",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/61/labels",
            "id": 9334188,
            "node_id": "MI_kwDOABII584Ajm2s",
            "number": 61,
            "state": "open",
            "title": "27.0",
            "description": "",
            "creator": {
              "login": "sipa",
              "id": 548488,
              "node_id": "MDQ6VXNlcjU0ODQ4OA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/sipa",
              "html_url": "https://github.com/sipa",
              "followers_url": "https://api.github.com/users/sipa/followers",
              "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
              "organizations_url": "https://api.github.com/users/sipa/orgs",
              "repos_url": "https://api.github.com/users/sipa/repos",
              "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/sipa/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 52,
            "created_at": "2023-04-27T08:01:57Z",
            "updated_at": "2024-02-26T16:15:31Z"
          },
          "locked": false,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28438",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28438",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28438.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28438.patch"
          },
          "closed_at": "2023-11-15T15:16:34Z",
          "created_at": "2023-09-09T04:41:00Z",
          "updated_at": "2023-11-28T21:43:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1745623209,
      "node_id": "PRR_kwDOABII585oDBip",
      "url": null,
      "actor": null,
      "commit_id": "334f75acfdfd8c8737f0fc5da41d25ec8e6ab588",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#pullrequestreview-1745623209",
      "submitted_at": "2023-11-23T02:31:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-23T07:30:41Z",
      "updated_at": "2023-11-23T07:30:41Z",
      "source": {
        "issue": {
          "id": 1890832581,
          "node_id": "PR_kwDOABII585aClSK",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28451",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28451/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28451/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28451/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28451",
          "number": 28451,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Remove unused SER_DISK, SER_NETWORK, CDataStream",
          "body": "Seems odd to have code that is completely dead.\r\n\r\nFix this by removing all of it.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignee": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "ryanofsky",
              "id": 7133040,
              "node_id": "MDQ6VXNlcjcxMzMwNDA=",
              "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/ryanofsky",
              "html_url": "https://github.com/ryanofsky",
              "followers_url": "https://api.github.com/users/ryanofsky/followers",
              "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
              "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
              "repos_url": "https://api.github.com/users/ryanofsky/repos",
              "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28451",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28451",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28451.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28451.patch"
          },
          "closed_at": "2023-11-30T16:12:03Z",
          "created_at": "2023-09-11T16:07:31Z",
          "updated_at": "2023-11-30T17:18:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1825460284,
      "node_id": "IC_kwDOABII585szlA8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1825460284",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-24T10:29:35Z",
      "updated_at": "2023-11-24T10:29:35Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1825460284",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28929"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11089036832,
      "node_id": "HRFPE_lADOABII5853patJzwAAAAKU9UYg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11089036832",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-28T21:36:09Z"
    },
    {
      "event": "reviewed",
      "id": 1746085184,
      "node_id": "PRR_kwDOABII585oEyVA",
      "url": null,
      "actor": null,
      "commit_id": "97338eec9e35401f42c376062ea161a22143d628",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 334f75acfdfd8c8737f0fc5da41d25ec8e6ab588 -> 97338eec9e35401f42c376062ea161a22143d628 ([`pr/iparams.1`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.1) -> [`pr/iparams.2`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/iparams.1..pr/iparams.2)) adding comments and improving test\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#pullrequestreview-1746085184",
      "submitted_at": "2023-11-28T21:40:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
    },
    {
      "event": "labeled",
      "id": 11093659710,
      "node_id": "LE_lADOABII5853patJzwAAAAKVO9A-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11093659710",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T09:19:14Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11112209989,
      "node_id": "LE_lADOABII5853patJzwAAAAKWVt5F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11112209989",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-30T17:42:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYzYTJiNTIzNzY4OGU5ZjU3NDQ0NGU3OTM3MjQ2NjRiMDBmYjdmMmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3a2b5237688e9f574444e793724664b00fb7f2a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f3a2b5237688e9f574444e793724664b00fb7f2a",
      "tree": {
        "sha": "e4937cc0e01e2bfedd0aac2cd1f14fa05c0d097c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4937cc0e01e2bfedd0aac2cd1f14fa05c0d097c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ae5171d42bd288cbd9a6f307e07b71067b184f5",
          "sha": "4ae5171d42bd288cbd9a6f307e07b71067b184f5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4ae5171d42bd288cbd9a6f307e07b71067b184f5"
        }
      ],
      "message": "serialization: Support for multiple parameters\n\nThis commit makes a minimal change to the ParamsStream class to let it retrieve\nmultiple parameters. Followup commits after this commit clean up code using\nParamsStream and make it easier to set multiple parameters.\n\nCurrently it is only possible to attach one serialization parameter to a stream\nat a time. For example, it is not possible to set a parameter controlling the\ntransaction format and a parameter controlling the address format at the same\ntime because one parameter will override the other.\n\nThis limitation is inconvenient for multiprocess code since it is not possible\nto create just one type of stream and serialize any object to it. Instead it is\nnecessary to create different streams for different object types, which\nrequires extra boilerplate and makes using the new parameter fields a lot more\nawkward than the older version and type fields.\n\nFix this problem by allowing an unlimited number of serialization stream\nparameters to be set, and allowing them to be requested by type. Later\nparameters will still override earlier parameters, but only if they have the\nsame type.\n\nThis change requires replacing the stream.GetParams() method with a\nstream.GetParams<T>() method in order for serialization code to retrieve the\ndesired parameters. This change is more verbose, but probably a good thing for\nreadability because previously it could be difficult to know what type the\nGetParams() method would return, and now it is more obvious.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-01-11T11:51:57Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2023-11-22T19:47:00Z"
      },
      "sha": "f3a2b5237688e9f574444e793724664b00fb7f2a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11462622021,
      "node_id": "HRFPE_lADOABII5853patJzwAAAAKrObtF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11462622021",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-11T23:17:46Z"
    },
    {
      "event": "commented",
      "id": 1888120269,
      "node_id": "IC_kwDOABII585wim3N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888120269",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-11T23:19:14Z",
      "updated_at": "2024-01-11T23:19:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased 97338eec9e35401f42c376062ea161a22143d628 -> ffc1e9fd8cf53cfcf4d7926ca2963958eacf73d7 ([`pr/iparams.2`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.2) -> [`pr/iparams.3`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/iparams.2-rebase..pr/iparams.3)) due to minor conflict with #28451",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1888120269",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28929"
    },
    {
      "event": "unlabeled",
      "id": 11463004987,
      "node_id": "UNLE_lADOABII5853patJzwAAAAKrP5M7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11463004987",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T00:28:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1888552974,
      "node_id": "IC_kwDOABII585wkQgO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888552974",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T07:19:35Z",
      "updated_at": "2024-01-12T07:19:35Z",
      "author_association": "MEMBER",
      "body": "```\r\ntest/serialize_tests.cpp:394:11: error: unused variable 'oi2' [-Werror,-Wunused-variable]\r\n  394 |     Other oi2;\r\n      |           ^~~",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1888552974",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28929"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11468747923,
      "node_id": "HRFPE_lADOABII5853patJzwAAAAKrlzST",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11468747923",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T12:41:24Z"
    },
    {
      "event": "commented",
      "id": 1889089160,
      "node_id": "IC_kwDOABII585wmTaI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1889089160",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T12:42:02Z",
      "updated_at": "2024-01-12T12:42:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated ffc1e9fd8cf53cfcf4d7926ca2963958eacf73d7 -> 3c311734d2fc6a4ca410f254ba3c8e923d58be70 ([`pr/iparams.3`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.3) -> [`pr/iparams.4`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/iparams.3..pr/iparams.4)) to fix unused variable in test https://cirrus-ci.com/task/4527517751574528?logs=ci#L2260\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1888552974\r\n\r\n> ```\r\n> test/serialize_tests.cpp:394:11: error: unused variable 'oi2' [-Werror,-Wunused-variable]\r\n> ```\r\n\r\nFixed, thanks. Also renamed variables in the test to make it more readable\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1889089160",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28929"
    },
    {
      "event": "unlabeled",
      "id": 11470167499,
      "node_id": "UNLE_lADOABII5853patJzwAAAAKrrN3L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11470167499",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T14:50:41Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T13:54:40Z",
      "updated_at": "2024-02-08T13:54:40Z",
      "source": {
        "issue": {
          "id": 2125242991,
          "node_id": "PR_kwDOABII585mYUfz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29409",
          "number": 29409,
          "state": "open",
          "state_reason": null,
          "title": "multiprocess: Add capnp wrapper for Chain interface",
          "body": "Changes making it possible to call `interface::Chain` over a socket.\r\n\r\n---\r\n\r\n**This is based on #28929.** The non-base commits are:\r\n\r\n- [`eeb441ae7c12` Add capnp serialization code for bitcoin types](https://github.com/bitcoin/bitcoin/pull/29409/commits/eeb441ae7c12b5dafadd1c7315e5435731b3da6c)\r\n- [`d1eb7d3d5663` Add capnp wrapper for Handler interface](https://github.com/bitcoin/bitcoin/pull/29409/commits/d1eb7d3d56638960c924a6cac6b3023fcfffbd82)\r\n- [`2fd10424c043` Add capnp wrapper for Chain interface](https://github.com/bitcoin/bitcoin/pull/29409/commits/2fd10424c04397e50c6683a82db8a0bb68e0f6cc)\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29409",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29409.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29409.patch"
          },
          "created_at": "2024-02-08T13:54:40Z",
          "updated_at": "2024-02-26T22:16:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T11:10:11Z",
      "updated_at": "2024-02-09T11:10:11Z",
      "source": {
        "issue": {
          "id": 1261819358,
          "node_id": "PR_kwDOABII5845Km3S",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25284/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25284",
          "number": 25284,
          "state": "closed",
          "state_reason": null,
          "title": "net: Use serialization parameters for CAddress serialization",
          "body": "It seems confusing that picking a wrong value for `ADDRV2_FORMAT` could have effects on consensus. (See the docstring of `ADDRV2_FORMAT`).\r\n\r\nFix this by implementing https://github.com/bitcoin/bitcoin/issues/19477#issuecomment-1147421608 .\r\n\r\nThis may also help with libbitcoinkernel, see https://github.com/bitcoin/bitcoin/pull/28327",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25284",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25284",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25284.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25284.patch"
          },
          "closed_at": "2023-09-07T10:34:48Z",
          "created_at": "2022-06-06T13:04:43Z",
          "updated_at": "2024-02-09T11:10:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1935771317,
      "node_id": "IC_kwDOABII585zYYa1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1935771317",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T11:38:12Z",
      "updated_at": "2024-02-09T11:38:12Z",
      "author_association": "MEMBER",
      "body": "nit: `retreive` -> `retrieve` in the first commit msg",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1935771317",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28929"
    },
    {
      "event": "reviewed",
      "id": 1872178867,
      "node_id": "PRR_kwDOABII585vly6z",
      "url": null,
      "actor": null,
      "commit_id": "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "did not review the last commit 3c311734d2fc6a4ca410f254ba3c8e923d58be70 🚔\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: did not review the last commit 3c311734d2fc6a4ca410f254ba3c8e923d58be70 🚔\r\nHgBPRyZaqsA6IWO/nWpFwiv5/omKRQ3fZmFGkrNfInSb0WBx0SgqbIdQPEkb2NkO/KoxscmLPJRXjk2Ia3ixCA==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#pullrequestreview-1872178867",
      "submitted_at": "2024-02-09T11:38:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11867934848,
      "node_id": "HRFPE_lADOABII5853patJzwAAAALDYlCA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11867934848",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-20T22:04:03Z"
    },
    {
      "event": "reviewed",
      "id": 1891677340,
      "node_id": "PRR_kwDOABII585wwLSc",
      "url": null,
      "actor": null,
      "commit_id": "e02ab1577f51a6c9af96b49e29ffaa3918ddae6c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 3c311734d2fc6a4ca410f254ba3c8e923d58be70 -> e02ab1577f51a6c9af96b49e29ffaa3918ddae6c ([`pr/iparams.4`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.4) -> [`pr/iparams.5`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.5), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/iparams.4..pr/iparams.5)) using && and std::forward to support rvalue substream arguments and adding tests and documentation",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#pullrequestreview-1891677340",
      "submitted_at": "2024-02-20T22:18:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11868332031,
      "node_id": "HRFPE_lADOABII5853patJzwAAAALDaF__",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11868332031",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-20T22:55:56Z"
    },
    {
      "event": "reviewed",
      "id": 1891730489,
      "node_id": "PRR_kwDOABII585wwYQ5",
      "url": null,
      "actor": null,
      "commit_id": "e02ab1577f51a6c9af96b49e29ffaa3918ddae6c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated e02ab1577f51a6c9af96b49e29ffaa3918ddae6c -> 33d99bad01637a3454358841b5c1aaf099002afb ([`pr/iparams.5`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.5) -> [`pr/iparams.6`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.6), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/iparams.5..pr/iparams.6)) adding a new commit simplifying usage of ParamsStream in net.cpp, and fixing inaccurate lifetimebound annotations",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#pullrequestreview-1891730489",
      "submitted_at": "2024-02-20T22:56:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
    },
    {
      "event": "reviewed",
      "id": 1892577456,
      "node_id": "PRR_kwDOABII585wznCw",
      "url": null,
      "actor": null,
      "commit_id": "33d99bad01637a3454358841b5c1aaf099002afb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "left some comments/nits. Feel free to ignore.\r\n\r\nvery nice. lgtm ACK 33d99bad01 👆\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: very nice. lgtm ACK 33d99bad01 👆\r\nvYXG8JolRRudeR/EvljO02nNhTpLVh7ae9EjSBP82mgGSRDkUFhYYlnx9S2EOpzD0z1dE4QHOEHx7YYNx8ksAQ==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#pullrequestreview-1892577456",
      "submitted_at": "2024-02-21T10:56:03Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
    },
    {
      "event": "review_requested",
      "id": 11874580623,
      "node_id": "RRE_lADOABII5853patJzwAAAALDx7iP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11874580623",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T10:56:07Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg0NTAyYjc1NWJjYzM1NDEzYWQ0NjYwNDc4OTNiNWVkZjEzNGM1M2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84502b755bcc35413ad466047893b5edf134c53f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/84502b755bcc35413ad466047893b5edf134c53f",
      "tree": {
        "sha": "c326b64287605e81e456dd9828c827e364543548",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c326b64287605e81e456dd9828c827e364543548"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3a2b5237688e9f574444e793724664b00fb7f2a",
          "sha": "f3a2b5237688e9f574444e793724664b00fb7f2a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f3a2b5237688e9f574444e793724664b00fb7f2a"
        }
      ],
      "message": "serialization: Drop references to GetVersion/GetType\n\nDrop references to stream GetVersion()/GetType() methods which no longer exist",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-21T12:07:50Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-21T12:07:50Z"
      },
      "sha": "84502b755bcc35413ad466047893b5edf134c53f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgzNDM2ZDE0ZjA2NTUxMDI2YmNmNTUyOWRmM2I2M2I0ZThhNjc5ZmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83436d14f06551026bcf5529df3b63b4e8a679fb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/83436d14f06551026bcf5529df3b63b4e8a679fb",
      "tree": {
        "sha": "76d1f638951334dfa5ad789ab099e3c987fc606d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/76d1f638951334dfa5ad789ab099e3c987fc606d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84502b755bcc35413ad466047893b5edf134c53f",
          "sha": "84502b755bcc35413ad466047893b5edf134c53f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/84502b755bcc35413ad466047893b5edf134c53f"
        }
      ],
      "message": "serialization: Drop unnecessary ParamsStream references\n\nDrop unnecessary ParamsStream references from CTransaction and\nCMutableTransaction constructors. This just couples these classes unnecessarily\nto the ParamsStream class, making the ParamsStream class harder to modify, and\nmaking the transaction classes in some cases (depending on parameter order)\nunable to work with stream classes that have multiple parameters set.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-21T12:07:50Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2023-11-22T21:39:32Z"
      },
      "sha": "83436d14f06551026bcf5529df3b63b4e8a679fb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNiMjg4NDlhODgzMzljMWU3YmEwM2ZmYzdlMzg5OTgzMzkwNzRlNmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb28849a88339c1e7ba03ffc7e38998339074e6e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cb28849a88339c1e7ba03ffc7e38998339074e6e",
      "tree": {
        "sha": "cd54c8c3382021cdac0f46aab10a09515420bb2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd54c8c3382021cdac0f46aab10a09515420bb2d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83436d14f06551026bcf5529df3b63b4e8a679fb",
          "sha": "83436d14f06551026bcf5529df3b63b4e8a679fb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/83436d14f06551026bcf5529df3b63b4e8a679fb"
        }
      ],
      "message": "serialization: Reverse ParamsStream constructor order\n\nMove parameter argument after stream argument so will be possible to accept\nmultiple variadic parameter arguments in the following commit.\n\nAlso reverse template parameter order for consistency.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-21T12:07:50Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2023-11-22T21:39:32Z"
      },
      "sha": "cb28849a88339c1e7ba03ffc7e38998339074e6e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU2Nzk0ZTQ3NWM4NGQ5ZWRjYTRhMjg3NmUyMzQyY2JiMWQ4NWY4MDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6794e475c84d9edca4a2876e2342cbb1d85f804",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e6794e475c84d9edca4a2876e2342cbb1d85f804",
      "tree": {
        "sha": "26f39ab177e84f59da3ef1f1be516d319a691118",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26f39ab177e84f59da3ef1f1be516d319a691118"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb28849a88339c1e7ba03ffc7e38998339074e6e",
          "sha": "cb28849a88339c1e7ba03ffc7e38998339074e6e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cb28849a88339c1e7ba03ffc7e38998339074e6e"
        }
      ],
      "message": "serialization: Accept multiple parameters in ParamsStream constructor\n\nBefore this change it was possible but awkward to create ParamStream streams\nwith multiple parameter objects. After this change it is straightforward.\n\nThe change to support multiple parameters is implemented by letting\nParamsStream contain substream instances, instead of just references to\nexternal substreams. So a side-effect of this change is that ParamStream can\nnow accept rvalue stream arguments and be easier to use in some other cases. A\ntest for rvalues is added in this commit, and some simplifications to non-test\ncode are made in the next commit.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-21T12:07:50Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2023-11-22T22:56:04Z"
      },
      "sha": "e6794e475c84d9edca4a2876e2342cbb1d85f804"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1MTIwM2JjYzQ5NmM0NDE1Yjc3NTRjZDc2NDU0NDY1OWI3NjA2N2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/951203bcc496c4415b7754cd764544659b76067f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/951203bcc496c4415b7754cd764544659b76067f",
      "tree": {
        "sha": "eb5bf7f63f1dcefde8068c27007599c605187381",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb5bf7f63f1dcefde8068c27007599c605187381"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6794e475c84d9edca4a2876e2342cbb1d85f804",
          "sha": "e6794e475c84d9edca4a2876e2342cbb1d85f804",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e6794e475c84d9edca4a2876e2342cbb1d85f804"
        }
      ],
      "message": "net: Simplify ParamsStream usage\n\nSimplify ParamsStream usage in ConvertSeeds now that ParamsStream supports\nrvalue substream arguments.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-21T12:07:50Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-20T22:45:47Z"
      },
      "sha": "951203bcc496c4415b7754cd764544659b76067f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQwZjUwNTU4M2Y0ZWRlYjI4NTlhZWI3MGRhMjBjNjM3NGQzMzFhNGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40f505583f4edeb2859aeb70da20c6374d331a4f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/40f505583f4edeb2859aeb70da20c6374d331a4f",
      "tree": {
        "sha": "5ee9bec126076aa66348cd40f6ccf21119dc1565",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5ee9bec126076aa66348cd40f6ccf21119dc1565"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/951203bcc496c4415b7754cd764544659b76067f",
          "sha": "951203bcc496c4415b7754cd764544659b76067f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/951203bcc496c4415b7754cd764544659b76067f"
        }
      ],
      "message": "serialization: Add ParamsStream GetStream() method\n\nAdd GetStream() method useful for accessing underlying stream. Use to improve\nParamsStream test coverage.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-21T12:35:38Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-21T12:35:38Z"
      },
      "sha": "40f505583f4edeb2859aeb70da20c6374d331a4f"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11876027585,
      "node_id": "HRFPE_lADOABII5853patJzwAAAALD3czB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11876027585",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T12:58:37Z"
    },
    {
      "event": "reviewed",
      "id": 1893028346,
      "node_id": "PRR_kwDOABII585w1VH6",
      "url": null,
      "actor": null,
      "commit_id": "9dc839a7fd1c8c7648f9e0a025d5ebecee8d289a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 33d99bad01637a3454358841b5c1aaf099002afb -> 9dc839a7fd1c8c7648f9e0a025d5ebecee8d289a ([`pr/iparams.6`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.6) -> [`pr/iparams.7`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.7), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/iparams.6..pr/iparams.7)) applying various suggestions and splitting commits",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#pullrequestreview-1893028346",
      "submitted_at": "2024-02-21T12:59:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
    },
    {
      "event": "commented",
      "id": 1956631999,
      "node_id": "IC_kwDOABII5850n9W_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1956631999",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T13:17:32Z",
      "updated_at": "2024-02-21T13:17:32Z",
      "author_association": "MEMBER",
      "body": "ACK 9dc839a7fd1c8c7648f9e0a025d5ebecee8d289a  📇\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: ACK 9dc839a7fd1c8c7648f9e0a025d5ebecee8d289a  📇\r\nl7D2bi74heXcy2zawxMPGghg5EiPAxy6Xi+GITolujanITODEnXLVYYbrun8tyMXi780u9apadIJVoXtoXYaAQ==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1956631999",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28929"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11876471768,
      "node_id": "HRFPE_lADOABII5853patJzwAAAALD5JPY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11876471768",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T13:33:18Z"
    },
    {
      "event": "reviewed",
      "id": 1893217667,
      "node_id": "PRR_kwDOABII585w2DWD",
      "url": null,
      "actor": null,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 9dc839a7fd1c8c7648f9e0a025d5ebecee8d289a -> 40f505583f4edeb2859aeb70da20c6374d331a4f ([`pr/iparams.7`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.7) -> [`pr/iparams.8`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.8), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/iparams.7..pr/iparams.8)) using concept to replace `bool nested` as suggested",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#pullrequestreview-1893217667",
      "submitted_at": "2024-02-21T13:35:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
    },
    {
      "event": "commented",
      "id": 1956703003,
      "node_id": "IC_kwDOABII5850oOsb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1956703003",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T13:53:44Z",
      "updated_at": "2024-02-21T13:53:44Z",
      "author_association": "MEMBER",
      "body": "ACK 40f505583f4edeb2859aeb70da20c6374d331a4f  🎦\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: ACK 40f505583f4edeb2859aeb70da20c6374d331a4f  🎦\r\njZImqPjGUJwt/833rdSh2DiEjsg6nNxFTHOhUb3GhAl6bvntsIwjLrN4sAtM3nFCw97147fhRhcAtUoKEkNJDg==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1956703003",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28929"
    },
    {
      "event": "commented",
      "id": 1957073882,
      "node_id": "IC_kwDOABII5850ppPa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1957073882",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T15:58:19Z",
      "updated_at": "2024-02-21T15:58:19Z",
      "author_association": "MEMBER",
      "body": "utACK 40f505583f4edeb2859aeb70da20c6374d331a4f",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1957073882",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28929"
    },
    {
      "event": "closed",
      "id": 11878577979,
      "node_id": "CE_lADOABII5853patJzwAAAALEBLc7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11878577979",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T15:58:19Z"
    },
    {
      "event": "reopened",
      "id": 11878578800,
      "node_id": "REE_lADOABII5853patJzwAAAALEBLpw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11878578800",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T15:58:22Z"
    },
    {
      "event": "milestoned",
      "id": 11894756883,
      "node_id": "MIE_lADOABII5853patJzwAAAALE-5YT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11894756883",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T18:00:49Z",
      "milestone": {
        "title": "28.0"
      }
    },
    {
      "event": "reviewed",
      "id": 1906187275,
      "node_id": "PRR_kwDOABII585xnhwL",
      "url": null,
      "actor": null,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#pullrequestreview-1906187275",
      "submitted_at": "2024-02-28T12:49:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402847278",
      "pull_request_review_id": 1745596465,
      "id": 1402847278,
      "node_id": "PRRC_kwDOABII585TncAu",
      "diff_hunk": "@@ -332,7 +332,7 @@ class CTransaction\n     template <typename Stream>\n     CTransaction(deserialize_type, const TransactionSerParams& params, Stream& s) : CTransaction(CMutableTransaction(deserialize, params, s)) {}\n     template <typename Stream>\n-    CTransaction(deserialize_type, ParamsStream<TransactionSerParams,Stream>& s) : CTransaction(CMutableTransaction(deserialize, s)) {}\n+    CTransaction(deserialize_type, Stream& s) : CTransaction(CMutableTransaction(deserialize, s)) {}",
      "path": "src/primitives/transaction.h",
      "position": 14,
      "original_position": 5,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "554a0dd18c0a277ab1d45c1643c16ed851eee14c",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is more generalising, than dropping...",
      "created_at": "2023-11-23T01:40:33Z",
      "updated_at": "2023-11-23T01:40:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1402847278",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402847278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 337,
      "original_line": 337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402864403",
      "pull_request_review_id": 1745623209,
      "id": 1402864403,
      "node_id": "PRRC_kwDOABII585TngMT",
      "diff_hunk": "@@ -406,9 +406,10 @@ class CAddress : public CService\n     static constexpr SerParams V1_DISK{{CNetAddr::Encoding::V1}, Format::Disk};\n     static constexpr SerParams V2_DISK{{CNetAddr::Encoding::V2}, Format::Disk};\n \n-    SERIALIZE_METHODS_PARAMS(CAddress, obj, SerParams, params)\n+    SERIALIZE_METHODS(CAddress, obj)\n     {\n         bool use_v2;\n+        auto& params = SER_PARAMS(SerParams);",
      "path": "src/protocol.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "334f75acfdfd8c8737f0fc5da41d25ec8e6ab588",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Dropping `SERIALIZE_METHODS_PARAMS` doesn't seem like an improvement?\r\n\r\nI would have expected something more like:\r\n\r\n```c++\r\n// this pr: #define SER_PARAMS(type) (s.template GetParams<type>())\r\n// instead:\r\ntemplate<typename T, typename Stream>\r\nconst auto& GetSerParams(const Stream& s)\r\n{\r\n    return s.template GetParams<T>();\r\n}\r\n\r\n// FORMATTER_METHODS_PARAMS has the same signature, but now uses the new GetSerParams<>()\r\n#define FORMATTER_METHODS_PARAMS(cls, obj, paramcls, paramobj) \\\r\n    template<typename Stream> \\\r\n    static void Ser(Stream& s, const cls& obj) { SerializationOps(obj, s, GetSerParams<paramcls>(s), ActionSerialize{}); } \\\r\n    template<typename Stream> \\\r\n    static void Unser(Stream& s, cls& obj) { SerializationOps(obj, s, GetSerParams<paramcls>(s), ActionUnserialize{}); } \\\r\n    template<typename Stream, typename Type, typename Operation> \\\r\n    static void SerializationOps(Type& obj, Stream& s, const paramcls& paramobj, Operation ser_action)\r\n\r\n// protocol.h\r\n// this pr:\r\n//  SERIALIZE_METHODS(CAddress, obj) {\r\n//      auto& params = SER_PARAMS(SerParams);\r\n// instead:\r\n    SERIALIZE_METHODS_PARAMS(CAddress, obj, SerParams, params) {\r\n\r\n\r\n// netaddress.h:\r\n// original:\r\n//      if (s.GetParams().enc == Encoding::V2) {\r\n// this pr:\r\n//      if (s.template GetParams<SerParams>().enc == Encoding::V2) {\r\n// instead:\r\n        if (GetSerParams<SerParams>(s).enc == Encoding::V2) { ... }\r\n```",
      "created_at": "2023-11-23T02:30:13Z",
      "updated_at": "2023-11-23T02:31:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1402864403",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402864403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 412,
      "original_line": 412,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403153558",
      "pull_request_review_id": 1746085184,
      "id": 1403153558,
      "node_id": "PRRC_kwDOABII585TomyW",
      "diff_hunk": "@@ -406,9 +406,10 @@ class CAddress : public CService\n     static constexpr SerParams V1_DISK{{CNetAddr::Encoding::V1}, Format::Disk};\n     static constexpr SerParams V2_DISK{{CNetAddr::Encoding::V2}, Format::Disk};\n \n-    SERIALIZE_METHODS_PARAMS(CAddress, obj, SerParams, params)\n+    SERIALIZE_METHODS(CAddress, obj)\n     {\n         bool use_v2;\n+        auto& params = SER_PARAMS(SerParams);",
      "path": "src/protocol.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "334f75acfdfd8c8737f0fc5da41d25ec8e6ab588",
      "in_reply_to_id": 1402864403,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1402864403\r\n\r\n> Dropping `SERIALIZE_METHODS_PARAMS` doesn't seem like an improvement?\r\n\r\nI think `SER_PARAMS` is an improvement over `SERIALIZE_METHODS_PARAMS` and `FORMATTER_METHODS_PARAMS` because:\r\n\r\n- It allows retrieving an arbitrary number of parameters, not just one.\r\n- It makes unified `SERIALIZE_METHODS` and separated `Serialize`/`Unserialize` method definitions more similar to each other. In a unified method you use `READWRITE(field)`, and in separated methods you write `stream << field`  and `stream >> field`. In a unified method, you use `SER_PARAMS(type)` and in separated methods you write `stream.template GetParams<type>()`. This way there is a 1:1 correspondence between code in unified and separate methods without unnecessary differences.\r\n- It deduplicates code and eliminates confusing macros. `FORMATTER_METHODS_PARAMS` was a copy of `FORMATTER_METHODS` and `SERIALIZE_METHODS_PARAMS` was a copy of `SERIALIZE_METHODS`. Having duplicate code makes the library confusing to navigate and can become a maintenance burden when the definitions get out of sync or fixing a bug or adding a feature requires updating both sets of the definitions. Our own example code was previously broken on line 208, because it was confusing `FORMATTER_METHODS` for `FORMATTER_METHODS_PARAMS`. Having fewer duplicated and similarly named macros is better for users and maintainers of the serialization library.\r\n\r\nI think #25284 made a (small) mistake by adding new duplicate variants of macros instead of just extending the existing macros, and this commit cleans that up. I could probably split this commit up into two parts, first deleting the duplicate macros, then adding multiple parameter support. As I was implementing this change, it just seemed easier to delete the duplicate code than to update it, so I did both things at once.",
      "created_at": "2023-11-23T09:58:14Z",
      "updated_at": "2023-11-28T21:40:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1403153558",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403153558"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 412,
      "original_line": 412,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403212531",
      "pull_request_review_id": 1746085184,
      "id": 1403212531,
      "node_id": "PRRC_kwDOABII585To1Lz",
      "diff_hunk": "@@ -332,7 +332,7 @@ class CTransaction\n     template <typename Stream>\n     CTransaction(deserialize_type, const TransactionSerParams& params, Stream& s) : CTransaction(CMutableTransaction(deserialize, params, s)) {}\n     template <typename Stream>\n-    CTransaction(deserialize_type, ParamsStream<TransactionSerParams,Stream>& s) : CTransaction(CMutableTransaction(deserialize, s)) {}\n+    CTransaction(deserialize_type, Stream& s) : CTransaction(CMutableTransaction(deserialize, s)) {}",
      "path": "src/primitives/transaction.h",
      "position": 14,
      "original_position": 5,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "554a0dd18c0a277ab1d45c1643c16ed851eee14c",
      "in_reply_to_id": 1402847278,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1402847278\r\n\r\n> This is more generalising, than dropping...\r\n\r\nI think describing this as generalizing would incorrectly imply that some functionality is being added, when then function definitions aren't even changing, just the declarations. Motivation for this change is not really to generalize, just to drop an unnecessary reference to the ParamsStream class to simplify the next commit, and to pass streams the same way here as they are passed other places.",
      "created_at": "2023-11-23T10:50:45Z",
      "updated_at": "2023-11-28T21:40:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1403212531",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403212531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 337,
      "original_line": 337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484199895",
      "pull_request_review_id": 1872178867,
      "id": 1484199895,
      "node_id": "PRRC_kwDOABII585YdxfX",
      "diff_hunk": "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 9,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3c311734d2fc6a4ca410f254ba3c8e923d58be70:\r\n\r\nI don't understand this. For example, if `SubStream` is a `DataStream` that holds data, this will now create a copy of this data, when previously it didn't?\r\n\r\nIt seems odd that the stream has to be passed down the whole \"type-stack\" anyway. Maybe it is simpler to just create a stack of params only to hold the types?",
      "created_at": "2024-02-09T11:34:24Z",
      "updated_at": "2024-02-09T11:38:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484199895",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484199895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484226391",
      "pull_request_review_id": 1872221594,
      "id": 1484226391,
      "node_id": "PRRC_kwDOABII585Yd39X",
      "diff_hunk": "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 9,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "in_reply_to_id": 1484199895,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "One could consider to completely disallow wrapping streams into each other, see also https://www.github.com/bitcoin/bitcoin/pull/25284/commits/faec591d64e40ba7ec7656cbfdda1a05953bde13#r1315927911",
      "created_at": "2024-02-09T11:56:00Z",
      "updated_at": "2024-02-09T11:56:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484226391",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484226391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484292817",
      "pull_request_review_id": 1872329508,
      "id": 1484292817,
      "node_id": "PRRC_kwDOABII585YeILR",
      "diff_hunk": "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 9,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "in_reply_to_id": 1484199895,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484199895\r\n\r\n> [3c31173](https://github.com/bitcoin/bitcoin/commit/3c311734d2fc6a4ca410f254ba3c8e923d58be70):\r\n> \r\n> I don't understand this. For example, if `SubStream` is a `DataStream` that holds data, this will now create a copy of this data, when previously it didn't?\r\n\r\nI will add a comment here, but this does not happen due to the \"Template deduction guide for a single params argument that's slightly different from the default generated deduction guide because it stores a reference to the substream inside `ParamsStream` instead of a copy\" on line 1147 below.\r\n\r\nWith this change, a caller constructing the `ParamsStream` is in control and can decide whether  `ParamsStream` should hold a value or a reference by specifying `DataStream` if they want a value, or `DataSteam&` if they want a reference.\r\n\r\nThe default behavior for a single parameter is unchanged, and will use a reference. But if there are multiple parameters, the inner `ParamsStream` instances are stored by value so we have a single tuple-like object containing all the parameters, not multiple `ParamsStream` objects with unpredictable lifetimes referencing each other.\r\n \r\n> It seems odd that the stream has to be passed down the whole \"type-stack\" anyway. Maybe it is simpler to just create a stack of params only to hold the types?\r\n\r\nI don't think it's odd. Ultimately the `ParamsStream` wrapper methods (`read`, `write`, `size`, etc) need to call the corresponding methods on the wrapped streams, so types of all the streams need to be known.\r\n\r\n> One could consider to completely disallow wrapping streams into each other, see also https://www.github.com/bitcoin/bitcoin/pull/25284/commits/faec591d64e40ba7ec7656cbfdda1a05953bde13#r1315927911\r\n\r\nThat would be a problem because \"wrapping a `ParamsStream` in a `ParamsStream`\" is a useful thing to do, and shouldn't be forbidden. It's the most straightforward way to support multiple parameters because each `ParamStream` can hold one parameter, and `ParamsStream::GetParams` can return its own parameter if requested, or call the wrapped `GetParams` method otherwise.",
      "created_at": "2024-02-09T13:04:16Z",
      "updated_at": "2024-02-09T13:05:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484292817",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484292817"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484322490",
      "pull_request_review_id": 1872411619,
      "id": 1484322490,
      "node_id": "PRRC_kwDOABII585YePa6",
      "diff_hunk": "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 9,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "in_reply_to_id": 1484199895,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In any case `m_substream{substream}` still creates a copy when it shouldn't, due to a missing `std::forward`, no?",
      "created_at": "2024-02-09T13:32:50Z",
      "updated_at": "2024-02-09T13:32:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484322490",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484322490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484425597",
      "pull_request_review_id": 1872576998,
      "id": 1484425597,
      "node_id": "PRRC_kwDOABII585Yeol9",
      "diff_hunk": "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 9,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "in_reply_to_id": 1484199895,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484322490\r\n\r\n> In any case `m_substream{substream}` still creates a copy when it shouldn't, due to a missing `std::forward`, no?\r\n\r\nOh that's interesting. I wouldn't think to use `std::forward` because normally it's just used for && rvalue reference function template parameters, not class template parameters, and doesn't do anything useful if && is not used and special template deduction rules for it are not applied.\r\n\r\nWe are actually ok with copies not moves here in all current cases. Copies and moves in all current cases are identical because ParamStream instances don't contain any real values, just references to external params and an external substream, so their copy and move methods are the same.\r\n\r\nBut theoretically if someone did want create a `ParamsStream` with a nested substream that moved from another instance during construction, probably the code could be changed to support that better, because right now I think you have to write `ParamsStream<MySubstream>{std::move(mysubstream), myparams)`, and wouldn't be able to shorten it to  `ParamsStream{std::move(mysubstream), myparams}`. Just adding std::forward on this line wouldn't fix this, but maybe adding std::forward along with  switching from & to && in template deduction guides below would work.\r\n\r\nI can experiment with this and add a test. I could imagine this being useful if you wanted to write something like `ParamsStream mystream{FileStream{\"file.bin\"}, param1, param2}` and have the file automatically closed when the stream was destroyed.",
      "created_at": "2024-02-09T14:51:26Z",
      "updated_at": "2024-02-09T14:51:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484425597",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484425597"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484436443",
      "pull_request_review_id": 1872594580,
      "id": 1484436443,
      "node_id": "PRRC_kwDOABII585YerPb",
      "diff_hunk": "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 9,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "in_reply_to_id": 1484199895,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I could imagine this being useful if you wanted to write something like `ParamsStream mystream{FileStream{\"file.bin\"}, param1, param2}` and have the file automatically closed when the stream was destroyed.\r\n\r\nYes, an example would be in net.cpp, but feel free to ignore, if it is too much hassle.\r\n\r\n```cpp\r\nsrc/net.cpp-    DataStream underlying_stream{vSeedsIn};\r\nsrc/net.cpp:    ParamsStream s{underlying_stream, CAddress::V2_NETWORK};\r\n",
      "created_at": "2024-02-09T14:59:58Z",
      "updated_at": "2024-02-09T14:59:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484436443",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484436443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1496589417",
      "pull_request_review_id": 1891677340,
      "id": 1496589417,
      "node_id": "PRRC_kwDOABII585ZNCRp",
      "diff_hunk": "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 9,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "in_reply_to_id": 1484199895,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484436443\r\n\r\n> Yes, an example would be in net.cpp, but feel free to ignore, if it is too much hassle.\r\n> \r\n> ```c++\r\n> src/net.cpp-    DataStream underlying_stream{vSeedsIn};\r\n> src/net.cpp:    ParamsStream s{underlying_stream, CAddress::V2_NETWORK};\r\n> ```\r\n\r\nSince it didn't complicate implementation of this PR too much, I implemented support for passing any type of substream as an rvalue to ParamsStream, instead of only passing nested ParamStreams to by value, and I added a test for this. This just required changing & to && and adding std::forward a few places.\r\n\r\nUnfortunately, however, I could not find a way to simplify `net.cpp` without triggering a compiler warning:\r\n\r\n```diff\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -198,8 +198,7 @@ static std::vector<CAddress> ConvertSeeds(const std::vector<uint8_t> &vSeedsIn)\r\n     const auto one_week{7 * 24h};\r\n     std::vector<CAddress> vSeedsOut;\r\n     FastRandomContext rng;\r\n-    DataStream underlying_stream{vSeedsIn};\r\n-    ParamsStream s{underlying_stream, CAddress::V2_NETWORK};\r\n+    ParamsStream s{DataStream{vSeedsIn}, CAddress::V2_NETWORK};\r\n     while (!s.eof()) {\r\n         CService endpoint;\r\n         s >> endpoint;\r\n\r\n```\r\n\r\nThis change *should* work, but unfortunately it triggers a clang [`-Wdangling` ](https://clang.llvm.org/docs/DiagnosticsReference.html#wdangling) warning, which I believe is spurious:\r\n\r\n```c++\r\nnet.cpp:201:20: error: temporary whose address is used as value of local variable 's' will be destroyed at the end of the full-expression [-Werror,-Wdangling]\r\n  201 |     ParamsStream s{DataStream{vSeedsIn}, CAddress::V2_NETWORK};\r\n      |                    ^~~~~~~~~~~~~~~~~~~~\r\n```\r\n\r\nThe warning doesn't make sense and I think it is a compiler bug. It happens for me with clang 17.0.6.",
      "created_at": "2024-02-20T22:04:51Z",
      "updated_at": "2024-02-20T22:21:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1496589417",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1496589417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1496625389",
      "pull_request_review_id": 1891714108,
      "id": 1496625389,
      "node_id": "PRRC_kwDOABII585ZNLDt",
      "diff_hunk": "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 9,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "in_reply_to_id": 1484199895,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1496589417\r\n\r\n> The warning doesn't make sense and I think it is a compiler bug.\r\n\r\nActually it is not a compiler bug. It happens because of the lifetimebound annotation and goes away if I change:\r\n\r\n```diff\r\n-    ParamsStream(SubStream&& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{std::forward<SubStream>(substream)} {}\r\n+    ParamsStream(SubStream&& substream, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{std::forward<SubStream>(substream)} {}\r\n```\r\n\r\nBut that change is potentially less safe, because we really do want the [lifetimebound](https://clang.llvm.org/docs/AttributeReference.html#lifetimebound) attribute to be specified if Substream is an lvalue reference, just not in other cases. I'm not sure if there is an attribute syntax which would support doing that.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2024-02-20T22:33:43Z",
      "updated_at": "2024-02-20T22:33:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1496625389",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1496625389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1496650793",
      "pull_request_review_id": 1891730489,
      "id": 1496650793,
      "node_id": "PRRC_kwDOABII585ZNRQp",
      "diff_hunk": "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 9,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "in_reply_to_id": 1484199895,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1496625389\r\n\r\nThis should be resolved in latest push, which just drops the LIFETIMEBOUND annotation since it isn't always accurate. The only case where specifying the annotation is actually correct is the case where the argument is an lvalue. And in that case, I think the annotation is probably not useful. The language already doesn't allow passing temporaries as ~rvalues~ lvalues so there is probably not anything the compiler can helpfully warn about in that case.",
      "created_at": "2024-02-20T22:54:37Z",
      "updated_at": "2024-02-21T14:04:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1496650793",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1496650793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497210553",
      "pull_request_review_id": 1892577456,
      "id": 1497210553,
      "node_id": "PRRC_kwDOABII585ZPZ65",
      "diff_hunk": "@@ -1103,22 +1103,36 @@ size_t GetSerializeSize(const T& t)\n     return (SizeComputer() << t).size();\n }\n \n-/** Wrapper that overrides the GetParams() function of a stream (and hides GetVersion/GetType). */\n-template <typename SubStream, typename Params>\n+/** Wrapper that overrides the GetParams() function of a stream. */",
      "path": "src/serialize.h",
      "position": 63,
      "original_position": 6,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "af7f90da74b935c17d986b0f4d21e4bce6f56343: Thanks for removing it, but I think it can be a separate (trivial) 4 line diff commit?",
      "created_at": "2024-02-21T09:53:48Z",
      "updated_at": "2024-02-21T10:56:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497210553",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497210553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1110,
      "original_line": 1110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497229478",
      "pull_request_review_id": 1892577456,
      "id": 1497229478,
      "node_id": "PRRC_kwDOABII585ZPeim",
      "diff_hunk": "@@ -1103,22 +1103,36 @@ size_t GetSerializeSize(const T& t)\n     return (SizeComputer() << t).size();\n }\n \n-/** Wrapper that overrides the GetParams() function of a stream (and hides GetVersion/GetType). */\n-template <typename SubStream, typename Params>\n+/** Wrapper that overrides the GetParams() function of a stream. */\n+template <typename SubStream, typename Params, bool nested = false>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    // If ParamsStream constructor is passed an lvalue argument, Substream will\n+    // be a reference type, and m_substream will reference that argument.\n+    // Otherwise m_substream will be a substream instance and move from the\n+    // argument. Letting ParamsStream contain a substream instance instead of\n+    // just a reference is useful to make the ParamsStream object self contained\n+    // and let it do cleanup when destroyed, for example by closing files if\n+    // SubStream is a file stream.\n+    SubStream m_substream;\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream&& substream, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{std::forward<SubStream>(substream)} {}\n+\n+    template<typename NestedSubstream, typename Params1, typename Params2, typename... NestedParams>\n+    ParamsStream(NestedSubstream&& s, const Params1& params1 LIFETIMEBOUND, const Params2& params2 LIFETIMEBOUND, const NestedParams&... params LIFETIMEBOUND)\n+        : ParamsStream{::ParamsStream{std::forward<NestedSubstream>(s), params2, params...}, params1} {}\n+\n     template <typename U> ParamsStream& operator<<(const U& obj) { ::Serialize(*this, obj); return *this; }\n     template <typename U> ParamsStream& operator>>(U&& obj) { ::Unserialize(*this, obj); return *this; }\n     void write(Span<const std::byte> src) { m_substream.write(src); }\n     void read(Span<std::byte> dst) { m_substream.read(dst); }\n     void ignore(size_t num) { m_substream.ignore(num); }\n     bool eof() const { return m_substream.eof(); }\n     size_t size() const { return m_substream.size(); }",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 35,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/af7f90da74b935c17d986b0f4d21e4bce6f56343: Would it matter if all of these were updated to use `GetStream` over `m_substream`? I guess the only difference would be that `std::stacktrace::current()` would be smaller if called inside of one of the substream methods?",
      "created_at": "2024-02-21T10:05:36Z",
      "updated_at": "2024-02-21T10:56:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497229478",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497229478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": 1129,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497240550",
      "pull_request_review_id": 1892577456,
      "id": 1497240550,
      "node_id": "PRRC_kwDOABII585ZPhPm",
      "diff_hunk": "@@ -344,6 +356,76 @@ class Derived : public Base\n     }\n };\n \n+struct OtherParam {\n+    uint8_t param;\n+    SER_PARAMS_OPFUNC\n+};\n+\n+//! Checker for value of OtherParam. When being serialized, serializes the\n+//! param to the stream. When being unserialized, verifies the value in the\n+//! stream matches the param.\n+class OtherParamChecker\n+{\n+public:\n+    template <typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n+        const uint8_t param = s.template GetParams<OtherParam>().param;\n+        s << param;\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s) const\n+    {\n+        const uint8_t param = s.template GetParams<OtherParam>().param;\n+        uint8_t value;\n+        s >> value;\n+        BOOST_CHECK_EQUAL(value, param);\n+    }\n+};\n+\n+//! Test creating a stream with multiple parameters and making sure\n+//! serialization code requiring different parameters can retrieve them. Also\n+//! test that earlier parameters take precedence if the same parameter type is\n+//! specified twice. (Choice of whether earlier or later values take precedence\n+//! or multiple values of the same type are allowed was arbitrary, and just\n+//! decided based on what would require smallest amount of ugly C++ template\n+//! code. Intent of the test is to just ensure there is no unexpected behavior.)\n+BOOST_AUTO_TEST_CASE(with_params_multi)\n+{\n+    const OtherParam other_param_used{.param = 0x10};\n+    const OtherParam other_param_ignored{.param = 0x11};\n+    const OtherParam other_param_override{.param = 0x12};\n+    const OtherParamChecker check;\n+    DataStream stream;\n+    ParamsStream pstream{stream, RAW, other_param_used, other_param_ignored};\n+\n+    Base base1{0x20};\n+    pstream << base1 << check << other_param_override(check);\n+    BOOST_CHECK_EQUAL(stream.str(), \"\\x20\\x10\\x12\");\n+\n+    Base base2;\n+    pstream >> base2 >> check >> other_param_override(check);\n+    BOOST_CHECK_EQUAL(base2.m_base_data, 0x20);\n+}\n+\n+//! Test creating a ParamsStream that moves from a stream argument.\n+BOOST_AUTO_TEST_CASE(with_params_move)\n+{\n+    UncopyableStream stream{MakeByteSpan(std::string_view{\"abc\"})};\n+    ParamsStream pstream{std::move(stream), RAW, HEX, RAW};\n+    BOOST_CHECK_EQUAL(pstream.GetStream().str(), \"abc\");\n+    pstream.GetStream().clear();\n+\n+    Base base1{0x20};\n+    pstream << base1;\n+    BOOST_CHECK_EQUAL(pstream.GetStream().str(), \"\\x20\");\n+\n+    Base base2;\n+    pstream >> base2;;",
      "path": "src/test/serialize_tests.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ";;",
      "created_at": "2024-02-21T10:13:17Z",
      "updated_at": "2024-02-21T10:56:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497240550",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497240550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 425,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497241697",
      "pull_request_review_id": 1892577456,
      "id": 1497241697,
      "node_id": "PRRC_kwDOABII585ZPhhh",
      "diff_hunk": "@@ -1128,10 +1142,34 @@ class ParamsStream\n             return m_substream.template GetParams<P>();\n         }\n     }\n-    int GetVersion() = delete; // Deprecated with Params usage\n-    int GetType() = delete;    // Deprecated with Params usage\n+\n+    //! Get reference to underlying stream.\n+    auto& GetStream()\n+    {\n+        if constexpr (nested) {\n+            return m_substream.GetStream();\n+        } else {\n+            return m_substream;\n+        }\n+    }\n };\n \n+/**\n+ * Explicit template deduction guide is required for single-parameter\n+ * constructor so Substream&& is treated as a forwarding reference, and\n+ * SubStream is deduced as reference type for lvalue arguments.\n+ */\n+template<typename Substream, typename Params>",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 64,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Space after `template` according to clang-format?",
      "created_at": "2024-02-21T10:14:10Z",
      "updated_at": "2024-02-21T10:56:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497241697",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497241697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497241949",
      "pull_request_review_id": 1892577456,
      "id": 1497241949,
      "node_id": "PRRC_kwDOABII585ZPhld",
      "diff_hunk": "@@ -1128,10 +1142,34 @@ class ParamsStream\n             return m_substream.template GetParams<P>();\n         }\n     }\n-    int GetVersion() = delete; // Deprecated with Params usage\n-    int GetType() = delete;    // Deprecated with Params usage\n+\n+    //! Get reference to underlying stream.\n+    auto& GetStream()\n+    {\n+        if constexpr (nested) {\n+            return m_substream.GetStream();\n+        } else {\n+            return m_substream;\n+        }\n+    }\n };\n \n+/**\n+ * Explicit template deduction guide is required for single-parameter\n+ * constructor so Substream&& is treated as a forwarding reference, and\n+ * SubStream is deduced as reference type for lvalue arguments.\n+ */\n+template<typename Substream, typename Params>\n+ParamsStream(Substream&&, const Params&) -> ParamsStream<Substream, Params>;\n+\n+/**\n+ * Template deduction guide for multiple params arguments that creates a nested\n+ * ParamsStream.\n+ */\n+template<typename Substream, typename Params1, typename Params2, typename... Params>",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 71,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same?",
      "created_at": "2024-02-21T10:14:22Z",
      "updated_at": "2024-02-21T10:56:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497241949",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497241949"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497272449",
      "pull_request_review_id": 1892577456,
      "id": 1497272449,
      "node_id": "PRRC_kwDOABII585ZPpCB",
      "diff_hunk": "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 9,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "in_reply_to_id": 1484199895,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> The language already doesn't allow passing temporaries as rvalues so there is probably not anything the compiler can helpfully warn about in that case.\r\n\r\nI think you meant to say \"lvalues\"? Also, const lvalues should be fine by the language. For example, the following should cause a use-after-free:\r\n\r\n```cpp\r\nParamsStream<const UncopyableStream&,const BaseFormat&> pstream{UncopyableStream {MakeByteSpan(std::string_view{\"abc\"})}, RAW};\r\n     BOOST_CHECK_EQUAL(pstream.GetStream().str(), \"abc\");\r\n```\r\n\r\nJust leaving a comment. Not sure if it is worth it to re-add the LIFETIMEBOUND attribute for this edge case.",
      "created_at": "2024-02-21T10:29:29Z",
      "updated_at": "2024-02-21T10:56:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497272449",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497272449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497303755",
      "pull_request_review_id": 1892577456,
      "id": 1497303755,
      "node_id": "PRRC_kwDOABII585ZPwrL",
      "diff_hunk": "@@ -1103,22 +1103,36 @@ size_t GetSerializeSize(const T& t)\n     return (SizeComputer() << t).size();\n }\n \n-/** Wrapper that overrides the GetParams() function of a stream (and hides GetVersion/GetType). */\n-template <typename SubStream, typename Params>\n+/** Wrapper that overrides the GetParams() function of a stream. */\n+template <typename SubStream, typename Params, bool nested = false>",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 7,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/af7f90da74b935c17d986b0f4d21e4bce6f56343: I wonder if the `nested` bool could somehow be derived with a C++20 concept, so that it is true, whenever `SubStream::m_substream` exists (or whenever `SubStream{}.GetStream()` exists). This would avoid issues where a dev \"manually\" nests params-streams and would have to call `GetStream` for the number of manual nests they did. Using the compiler to deduce the bool makes sure that `GetStream` would have to be called only ever once to get the most underlying stream.",
      "created_at": "2024-02-21T10:47:08Z",
      "updated_at": "2024-02-21T10:56:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497303755",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497303755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497307976",
      "pull_request_review_id": 1892577456,
      "id": 1497307976,
      "node_id": "PRRC_kwDOABII585ZPxtI",
      "diff_hunk": "@@ -1128,10 +1142,34 @@ class ParamsStream\n             return m_substream.template GetParams<P>();\n         }\n     }\n-    int GetVersion() = delete; // Deprecated with Params usage\n-    int GetType() = delete;    // Deprecated with Params usage\n+\n+    //! Get reference to underlying stream.\n+    auto& GetStream()\n+    {\n+        if constexpr (nested) {\n+            return m_substream.GetStream();\n+        } else {\n+            return m_substream;\n+        }\n+    }\n };\n \n+/**\n+ * Explicit template deduction guide is required for single-parameter\n+ * constructor so Substream&& is treated as a forwarding reference, and\n+ * SubStream is deduced as reference type for lvalue arguments.\n+ */\n+template<typename Substream, typename Params>\n+ParamsStream(Substream&&, const Params&) -> ParamsStream<Substream, Params>;\n+\n+/**\n+ * Template deduction guide for multiple params arguments that creates a nested\n+ * ParamsStream.\n+ */\n+template<typename Substream, typename Params1, typename Params2, typename... Params>\n+ParamsStream(Substream&& s LIFETIMEBOUND, const Params1& params1 LIFETIMEBOUND, const Params2& params2 LIFETIMEBOUND, const Params&... params LIFETIMEBOUND) ->",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 72,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is the point of LIFETIMEBOUND in deduction guides? Does it do anything?",
      "created_at": "2024-02-21T10:49:35Z",
      "updated_at": "2024-02-21T10:56:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497307976",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497307976"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497418316",
      "pull_request_review_id": 1893028346,
      "id": 1497418316,
      "node_id": "PRRC_kwDOABII585ZQMpM",
      "diff_hunk": "@@ -1103,22 +1103,36 @@ size_t GetSerializeSize(const T& t)\n     return (SizeComputer() << t).size();\n }\n \n-/** Wrapper that overrides the GetParams() function of a stream (and hides GetVersion/GetType). */\n-template <typename SubStream, typename Params>\n+/** Wrapper that overrides the GetParams() function of a stream. */",
      "path": "src/serialize.h",
      "position": 63,
      "original_position": 6,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": 1497210553,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497210553\r\n\r\n> [af7f90d](https://github.com/bitcoin/bitcoin/commit/af7f90da74b935c17d986b0f4d21e4bce6f56343): Thanks for removing it, but I think it can be a separate (trivial) 4 line diff commit?\r\n\r\nSure, moved to separate commit",
      "created_at": "2024-02-21T12:10:35Z",
      "updated_at": "2024-02-21T12:59:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497418316",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497418316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1110,
      "original_line": 1110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497439570",
      "pull_request_review_id": 1893028346,
      "id": 1497439570,
      "node_id": "PRRC_kwDOABII585ZQR1S",
      "diff_hunk": "@@ -1128,10 +1142,34 @@ class ParamsStream\n             return m_substream.template GetParams<P>();\n         }\n     }\n-    int GetVersion() = delete; // Deprecated with Params usage\n-    int GetType() = delete;    // Deprecated with Params usage\n+\n+    //! Get reference to underlying stream.\n+    auto& GetStream()\n+    {\n+        if constexpr (nested) {\n+            return m_substream.GetStream();\n+        } else {\n+            return m_substream;\n+        }\n+    }\n };\n \n+/**\n+ * Explicit template deduction guide is required for single-parameter\n+ * constructor so Substream&& is treated as a forwarding reference, and\n+ * SubStream is deduced as reference type for lvalue arguments.\n+ */\n+template<typename Substream, typename Params>\n+ParamsStream(Substream&&, const Params&) -> ParamsStream<Substream, Params>;\n+\n+/**\n+ * Template deduction guide for multiple params arguments that creates a nested\n+ * ParamsStream.\n+ */\n+template<typename Substream, typename Params1, typename Params2, typename... Params>\n+ParamsStream(Substream&& s LIFETIMEBOUND, const Params1& params1 LIFETIMEBOUND, const Params2& params2 LIFETIMEBOUND, const Params&... params LIFETIMEBOUND) ->",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 72,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": 1497307976,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> What is the point of LIFETIMEBOUND in deduction guides? Does it do anything?\r\n\r\nGood catch, they can't do anything, removed these",
      "created_at": "2024-02-21T12:23:41Z",
      "updated_at": "2024-02-21T12:59:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497439570",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497439570"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497440806",
      "pull_request_review_id": 1893028346,
      "id": 1497440806,
      "node_id": "PRRC_kwDOABII585ZQSIm",
      "diff_hunk": "@@ -344,6 +356,76 @@ class Derived : public Base\n     }\n };\n \n+struct OtherParam {\n+    uint8_t param;\n+    SER_PARAMS_OPFUNC\n+};\n+\n+//! Checker for value of OtherParam. When being serialized, serializes the\n+//! param to the stream. When being unserialized, verifies the value in the\n+//! stream matches the param.\n+class OtherParamChecker\n+{\n+public:\n+    template <typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n+        const uint8_t param = s.template GetParams<OtherParam>().param;\n+        s << param;\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s) const\n+    {\n+        const uint8_t param = s.template GetParams<OtherParam>().param;\n+        uint8_t value;\n+        s >> value;\n+        BOOST_CHECK_EQUAL(value, param);\n+    }\n+};\n+\n+//! Test creating a stream with multiple parameters and making sure\n+//! serialization code requiring different parameters can retrieve them. Also\n+//! test that earlier parameters take precedence if the same parameter type is\n+//! specified twice. (Choice of whether earlier or later values take precedence\n+//! or multiple values of the same type are allowed was arbitrary, and just\n+//! decided based on what would require smallest amount of ugly C++ template\n+//! code. Intent of the test is to just ensure there is no unexpected behavior.)\n+BOOST_AUTO_TEST_CASE(with_params_multi)\n+{\n+    const OtherParam other_param_used{.param = 0x10};\n+    const OtherParam other_param_ignored{.param = 0x11};\n+    const OtherParam other_param_override{.param = 0x12};\n+    const OtherParamChecker check;\n+    DataStream stream;\n+    ParamsStream pstream{stream, RAW, other_param_used, other_param_ignored};\n+\n+    Base base1{0x20};\n+    pstream << base1 << check << other_param_override(check);\n+    BOOST_CHECK_EQUAL(stream.str(), \"\\x20\\x10\\x12\");\n+\n+    Base base2;\n+    pstream >> base2 >> check >> other_param_override(check);\n+    BOOST_CHECK_EQUAL(base2.m_base_data, 0x20);\n+}\n+\n+//! Test creating a ParamsStream that moves from a stream argument.\n+BOOST_AUTO_TEST_CASE(with_params_move)\n+{\n+    UncopyableStream stream{MakeByteSpan(std::string_view{\"abc\"})};\n+    ParamsStream pstream{std::move(stream), RAW, HEX, RAW};\n+    BOOST_CHECK_EQUAL(pstream.GetStream().str(), \"abc\");\n+    pstream.GetStream().clear();\n+\n+    Base base1{0x20};\n+    pstream << base1;\n+    BOOST_CHECK_EQUAL(pstream.GetStream().str(), \"\\x20\");\n+\n+    Base base2;\n+    pstream >> base2;;",
      "path": "src/test/serialize_tests.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": 1497240550,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497240550\r\n\r\n> ;;\r\n\r\nThanks fixed",
      "created_at": "2024-02-21T12:24:29Z",
      "updated_at": "2024-02-21T12:59:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497440806",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497440806"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 425,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497444131",
      "pull_request_review_id": 1893028346,
      "id": 1497444131,
      "node_id": "PRRC_kwDOABII585ZQS8j",
      "diff_hunk": "@@ -1128,10 +1142,34 @@ class ParamsStream\n             return m_substream.template GetParams<P>();\n         }\n     }\n-    int GetVersion() = delete; // Deprecated with Params usage\n-    int GetType() = delete;    // Deprecated with Params usage\n+\n+    //! Get reference to underlying stream.\n+    auto& GetStream()\n+    {\n+        if constexpr (nested) {\n+            return m_substream.GetStream();\n+        } else {\n+            return m_substream;\n+        }\n+    }\n };\n \n+/**\n+ * Explicit template deduction guide is required for single-parameter\n+ * constructor so Substream&& is treated as a forwarding reference, and\n+ * SubStream is deduced as reference type for lvalue arguments.\n+ */\n+template<typename Substream, typename Params>",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 64,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": 1497241697,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497241697\r\n\r\n> nit: Space after `template` according to clang-format?\r\n\r\nThanks, fixed",
      "created_at": "2024-02-21T12:26:34Z",
      "updated_at": "2024-02-21T12:59:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497444131",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497444131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497444318",
      "pull_request_review_id": 1893028346,
      "id": 1497444318,
      "node_id": "PRRC_kwDOABII585ZQS_e",
      "diff_hunk": "@@ -1128,10 +1142,34 @@ class ParamsStream\n             return m_substream.template GetParams<P>();\n         }\n     }\n-    int GetVersion() = delete; // Deprecated with Params usage\n-    int GetType() = delete;    // Deprecated with Params usage\n+\n+    //! Get reference to underlying stream.\n+    auto& GetStream()\n+    {\n+        if constexpr (nested) {\n+            return m_substream.GetStream();\n+        } else {\n+            return m_substream;\n+        }\n+    }\n };\n \n+/**\n+ * Explicit template deduction guide is required for single-parameter\n+ * constructor so Substream&& is treated as a forwarding reference, and\n+ * SubStream is deduced as reference type for lvalue arguments.\n+ */\n+template<typename Substream, typename Params>\n+ParamsStream(Substream&&, const Params&) -> ParamsStream<Substream, Params>;\n+\n+/**\n+ * Template deduction guide for multiple params arguments that creates a nested\n+ * ParamsStream.\n+ */\n+template<typename Substream, typename Params1, typename Params2, typename... Params>",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 71,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": 1497241949,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497241949\r\n\r\n> Same?\r\n\r\nThanks, fixed",
      "created_at": "2024-02-21T12:26:41Z",
      "updated_at": "2024-02-21T12:59:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497444318",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497444318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497455724",
      "pull_request_review_id": 1893028346,
      "id": 1497455724,
      "node_id": "PRRC_kwDOABII585ZQVxs",
      "diff_hunk": "@@ -1103,22 +1103,36 @@ size_t GetSerializeSize(const T& t)\n     return (SizeComputer() << t).size();\n }\n \n-/** Wrapper that overrides the GetParams() function of a stream (and hides GetVersion/GetType). */\n-template <typename SubStream, typename Params>\n+/** Wrapper that overrides the GetParams() function of a stream. */\n+template <typename SubStream, typename Params, bool nested = false>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    // If ParamsStream constructor is passed an lvalue argument, Substream will\n+    // be a reference type, and m_substream will reference that argument.\n+    // Otherwise m_substream will be a substream instance and move from the\n+    // argument. Letting ParamsStream contain a substream instance instead of\n+    // just a reference is useful to make the ParamsStream object self contained\n+    // and let it do cleanup when destroyed, for example by closing files if\n+    // SubStream is a file stream.\n+    SubStream m_substream;\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream&& substream, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{std::forward<SubStream>(substream)} {}\n+\n+    template<typename NestedSubstream, typename Params1, typename Params2, typename... NestedParams>\n+    ParamsStream(NestedSubstream&& s, const Params1& params1 LIFETIMEBOUND, const Params2& params2 LIFETIMEBOUND, const NestedParams&... params LIFETIMEBOUND)\n+        : ParamsStream{::ParamsStream{std::forward<NestedSubstream>(s), params2, params...}, params1} {}\n+\n     template <typename U> ParamsStream& operator<<(const U& obj) { ::Serialize(*this, obj); return *this; }\n     template <typename U> ParamsStream& operator>>(U&& obj) { ::Unserialize(*this, obj); return *this; }\n     void write(Span<const std::byte> src) { m_substream.write(src); }\n     void read(Span<std::byte> dst) { m_substream.read(dst); }\n     void ignore(size_t num) { m_substream.ignore(num); }\n     bool eof() const { return m_substream.eof(); }\n     size_t size() const { return m_substream.size(); }",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 35,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": 1497229478,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497229478\r\n\r\n> nit in [af7f90d](https://github.com/bitcoin/bitcoin/commit/af7f90da74b935c17d986b0f4d21e4bce6f56343): Would it matter if all of these were updated to use `GetStream` over `m_substream`? I guess the only difference would be that `std::stacktrace::current()` would be smaller if called inside of one of the substream methods?\r\n\r\nNice idea. Replaced m_substream with GetStream here. It might make it easier for compiler to inilne these calls functions, too. This required adding a const overload of GetStream.",
      "created_at": "2024-02-21T12:33:59Z",
      "updated_at": "2024-02-21T12:59:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497455724",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497455724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": 1129,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497457383",
      "pull_request_review_id": 1893028346,
      "id": 1497457383,
      "node_id": "PRRC_kwDOABII585ZQWLn",
      "diff_hunk": "@@ -1103,22 +1103,36 @@ size_t GetSerializeSize(const T& t)\n     return (SizeComputer() << t).size();\n }\n \n-/** Wrapper that overrides the GetParams() function of a stream (and hides GetVersion/GetType). */\n-template <typename SubStream, typename Params>\n+/** Wrapper that overrides the GetParams() function of a stream. */\n+template <typename SubStream, typename Params, bool nested = false>",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 7,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": 1497303755,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497303755\r\n\r\n> nit in [af7f90d](https://github.com/bitcoin/bitcoin/commit/af7f90da74b935c17d986b0f4d21e4bce6f56343): I wonder if the `nested` bool could somehow be derived with a C++20 concept [...]\r\n\r\nI'll try that out. I haven't really experimented with concepts much.",
      "created_at": "2024-02-21T12:35:03Z",
      "updated_at": "2024-02-21T12:59:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497457383",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497457383"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497566008",
      "pull_request_review_id": 1893217667,
      "id": 1497566008,
      "node_id": "PRRC_kwDOABII585ZQws4",
      "diff_hunk": "@@ -1103,22 +1103,36 @@ size_t GetSerializeSize(const T& t)\n     return (SizeComputer() << t).size();\n }\n \n-/** Wrapper that overrides the GetParams() function of a stream (and hides GetVersion/GetType). */\n-template <typename SubStream, typename Params>\n+/** Wrapper that overrides the GetParams() function of a stream. */\n+template <typename SubStream, typename Params, bool nested = false>",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 7,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "af7f90da74b935c17d986b0f4d21e4bce6f56343",
      "in_reply_to_id": 1497303755,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497303755\r\n\r\n> I wonder if the `nested` bool could somehow be derived with a C++20 concept\r\n\r\nNice suggestion, implemented this",
      "created_at": "2024-02-21T13:34:50Z",
      "updated_at": "2024-02-21T13:35:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497566008",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497566008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497623320",
      "pull_request_review_id": 1893300392,
      "id": 1497623320,
      "node_id": "PRRC_kwDOABII585ZQ-sY",
      "diff_hunk": "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "path": "src/serialize.h",
      "position": null,
      "original_position": 9,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "in_reply_to_id": 1484199895,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497272449\r\n\r\n> I think you meant to say \"lvalues\"? Also, const lvalues should be fine by the language. For example, the following should cause a use-after-free:\r\n\r\nThanks that was supposed to say lvalues, and that's a good point, so it's possible lifetimebound could still help avoid bugs in some cases. I think it should be possible to add back lifetimebound by overloading the constructor using `std::is_reference`. But it would add a little complexity, so I think it makes sense to omit it for now, and maybe add it later if it looks like there are cases where a const stream would be used.",
      "created_at": "2024-02-21T14:05:45Z",
      "updated_at": "2024-02-21T14:05:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1497623320",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1497623320"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505911484",
      "pull_request_review_id": 1906187275,
      "id": 1505911484,
      "node_id": "PRRC_kwDOABII585ZwmK8",
      "diff_hunk": "@@ -1118,27 +1103,85 @@ size_t GetSerializeSize(const T& t)\n     return (SizeComputer() << t).size();\n }\n \n-/** Wrapper that overrides the GetParams() function of a stream (and hides GetVersion/GetType). */\n-template <typename Params, typename SubStream>\n+//! Check if type contains a stream by seeing if has a GetStream() method.\n+template<typename T>\n+concept ContainsStream = requires(T t) { t.GetStream(); };\n+\n+/** Wrapper that overrides the GetParams() function of a stream. */\n+template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    // If ParamsStream constructor is passed an lvalue argument, Substream will\n+    // be a reference type, and m_substream will reference that argument.\n+    // Otherwise m_substream will be a substream instance and move from the\n+    // argument. Letting ParamsStream contain a substream instance instead of\n+    // just a reference is useful to make the ParamsStream object self contained\n+    // and let it do cleanup when destroyed, for example by closing files if\n+    // SubStream is a file stream.\n+    SubStream m_substream;\n \n public:\n-    ParamsStream(const Params& params LIFETIMEBOUND, SubStream& substream LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream&& substream, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{std::forward<SubStream>(substream)} {}\n+\n+    template <typename NestedSubstream, typename Params1, typename Params2, typename... NestedParams>\n+    ParamsStream(NestedSubstream&& s, const Params1& params1 LIFETIMEBOUND, const Params2& params2 LIFETIMEBOUND, const NestedParams&... params LIFETIMEBOUND)\n+        : ParamsStream{::ParamsStream{std::forward<NestedSubstream>(s), params2, params...}, params1} {}\n+\n     template <typename U> ParamsStream& operator<<(const U& obj) { ::Serialize(*this, obj); return *this; }\n     template <typename U> ParamsStream& operator>>(U&& obj) { ::Unserialize(*this, obj); return *this; }\n-    void write(Span<const std::byte> src) { m_substream.write(src); }\n-    void read(Span<std::byte> dst) { m_substream.read(dst); }\n-    void ignore(size_t num) { m_substream.ignore(num); }\n-    bool eof() const { return m_substream.eof(); }\n-    size_t size() const { return m_substream.size(); }\n-    const Params& GetParams() const { return m_params; }\n-    int GetVersion() = delete; // Deprecated with Params usage\n-    int GetType() = delete;    // Deprecated with Params usage\n+    void write(Span<const std::byte> src) { GetStream().write(src); }\n+    void read(Span<std::byte> dst) { GetStream().read(dst); }\n+    void ignore(size_t num) { GetStream().ignore(num); }\n+    bool eof() const { return GetStream().eof(); }\n+    size_t size() const { return GetStream().size(); }\n+\n+    //! Get reference to stream parameters.\n+    template <typename P>\n+    const auto& GetParams() const\n+    {\n+        if constexpr (std::is_convertible_v<Params, P>) {\n+            return m_params;\n+        } else {\n+            return m_substream.template GetParams<P>();\n+        }\n+    }\n+\n+    //! Get reference to underlying stream.\n+    auto& GetStream()\n+    {\n+        if constexpr (ContainsStream<SubStream>) {\n+            return m_substream.GetStream();\n+        } else {\n+            return m_substream;\n+        }\n+    }\n+    auto& GetStream() const",
      "path": "src/serialize.h",
      "position": 122,
      "original_position": 122,
      "commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "original_commit_id": "40f505583f4edeb2859aeb70da20c6374d331a4f",
      "in_reply_to_id": null,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If `m_substream` is an owned instance, it will become `const SubStream` in const member functions, and the return value here will be `const Substream&`.\r\nHowever, if `m_substream` is a reference/pointer, the constness is applied to the reference part, so the method will return a mutable reference.\r\nSee https://stackoverflow.com/questions/5055427/returning-non-const-reference-from-a-const-member-function\r\n\r\nMy suggestion would be to return `const auto&` here unless the intent is to enable mutability (which only happens when the member is a reference).\r\n\r\n#### Illustrative example\r\n```C++\r\nclass A\r\n{\r\n    int& b;\r\npublic:\r\n    A(int& n) : b(n) {}\r\n    auto& foo() const { return b; }\r\n};\r\n\r\n    ....\r\n    int bar = 123;\r\n    const A a(bar);\r\n    int& mutating = a.foo();\r\n    mutating = 2;\r\n```",
      "created_at": "2024-02-28T12:49:17Z",
      "updated_at": "2024-02-28T12:49:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1505911484",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505911484"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1159,
      "original_line": 1159,
      "side": "RIGHT"
    }
  ]
}