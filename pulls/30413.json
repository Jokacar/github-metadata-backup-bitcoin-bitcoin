{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413",
    "id": 1960237004,
    "node_id": "PR_kwDOABII58501tfM",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30413",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30413.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30413.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30413",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30413/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/2a017fdba7a5beaee3eb6d5c9494378f23afd411",
    "number": 30413,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "fuzz: Version handshake",
    "user": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This adds a fuzzing harness dedicated to the version handshake. To avoid determinism issues, the harness creates necessary components each iteration (addrman, peerman, etc). A harness like this would have easily caught https://bitcoincore.org/en/2024/07/03/disclose-timestamp-overflow/.\r\n\r\nAs a performance optimization, this PR includes a change to `PeerManager` to lazily initialize various filters (to avoid large unnecessary memory allocations each iteration).",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2024-07-09T13:56:03Z",
    "updated_at": "2024-07-29T22:05:54Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "a29e3cb35da8b17ade044ca3c53cb369de72d93a",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "dergoegge:2024-07-fuzz-handshake",
      "ref": "2024-07-fuzz-handshake",
      "sha": "2a017fdba7a5beaee3eb6d5c9494378f23afd411",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 315023492,
        "node_id": "MDEwOlJlcG9zaXRvcnkzMTUwMjM0OTI=",
        "name": "bitcoin",
        "full_name": "dergoegge/bitcoin",
        "owner": {
          "login": "dergoegge",
          "id": 8077169,
          "node_id": "MDQ6VXNlcjgwNzcxNjk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/dergoegge",
          "html_url": "https://github.com/dergoegge",
          "followers_url": "https://api.github.com/users/dergoegge/followers",
          "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
          "organizations_url": "https://api.github.com/users/dergoegge/orgs",
          "repos_url": "https://api.github.com/users/dergoegge/repos",
          "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/dergoegge/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/dergoegge/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/dergoegge/bitcoin",
        "archive_url": "https://api.github.com/repos/dergoegge/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/dergoegge/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/dergoegge/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/dergoegge/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/dergoegge/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/dergoegge/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/dergoegge/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/dergoegge/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/dergoegge/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/dergoegge/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/dergoegge/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/dergoegge/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/dergoegge/bitcoin/events",
        "forks_url": "https://api.github.com/repos/dergoegge/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/dergoegge/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/dergoegge/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/dergoegge/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/dergoegge/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/dergoegge/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/dergoegge/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/dergoegge/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/dergoegge/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/dergoegge/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/dergoegge/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/dergoegge/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/dergoegge/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/dergoegge/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/dergoegge/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/dergoegge/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:dergoegge/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/dergoegge/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/dergoegge/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/dergoegge/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/dergoegge/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/dergoegge/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/dergoegge/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/dergoegge/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/dergoegge/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/dergoegge/bitcoin/hooks",
        "svn_url": "https://github.com/dergoegge/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 249926,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-29T17:13:02Z",
        "created_at": "2020-11-22T11:41:30Z",
        "updated_at": "2024-04-30T10:49:58Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "38c30a4b50ca0ceee0c64fe5ba9b95fe72d3ef48",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35677,
        "stargazers_count": 77389,
        "watchers_count": 77389,
        "size": 263962,
        "default_branch": "master",
        "open_issues_count": 671,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-29T20:21:14Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-07-29T22:55:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 170,
    "deletions": 24,
    "changed_files": 4,
    "commits": 4,
    "review_comments": 10,
    "comments": 10
  },
  "events": [
    {
      "event": "commented",
      "id": 2217816282,
      "node_id": "IC_kwDOABII586EMTDa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2217816282",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T13:56:06Z",
      "updated_at": "2024-07-29T16:28:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30413).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [maflcko](https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2217916691), [brunoerg](https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2220979817), [kevkevinpal](https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2224232188), [morehouse](https://github.com/bitcoin/bitcoin/pull/30413#pullrequestreview-2183356740) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30110](https://github.com/bitcoin/bitcoin/pull/30110) (refactor: TxDownloadManager by glozow)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2217816282",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30413"
    },
    {
      "event": "labeled",
      "id": 13440900779,
      "node_id": "LE_lADOABII586O8z8VzwAAAAMhI96r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13440900779",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T13:56:08Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 2217865662,
      "node_id": "IC_kwDOABII586EMfG-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2217865662",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T14:18:22Z",
      "updated_at": "2024-07-09T14:18:22Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, but would be good to explain how this is different from the existing approach, introduced in \"fuzz: version handshake\" https://github.com/bitcoin/bitcoin/pull/20370, which was a replacement for \"fuzz: Version handshake\" https://github.com/bitcoin/bitcoin/pull/20097 .\r\n\r\n\r\nNow that the timedata bug is fixed, and the module and related globals removed completely, it is a bit hard(er) to re-introduce it for testing, I guess. IIRC I did check it at some point and found that the existing fuzz targets would act as a regression test.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2217865662",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30413"
    },
    {
      "event": "commented",
      "id": 2217899733,
      "node_id": "IC_kwDOABII586EMnbV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2217899733",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T14:34:03Z",
      "updated_at": "2024-07-09T14:34:03Z",
      "author_association": "MEMBER",
      "body": "> would be good to explain how this is different from the existing approach, introduced in \"fuzz: version handshake\" https://github.com/bitcoin/bitcoin/pull/20370, which was a replacement for \"fuzz: Version handshake\" https://github.com/bitcoin/bitcoin/pull/20097 .\r\n\r\nThe main difference is that this harness focuses on the version handshake, where a modification to the existing `process_messages` harness would further widen the space of reachable code. It could make sense to have both but I would expect the focused harness to be better/faster at finding bugs.\r\n\r\n> IIRC I did check it at some point and found that the existing fuzz targets would act as a regression test.\r\n\r\nHappy to take that out of the op, the primary goal is to have fuzzing coverage for the version handshake (non-existent currently), which would be able to find such bugs.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2217899733",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30413"
    },
    {
      "event": "commented",
      "id": 2217916691,
      "node_id": "IC_kwDOABII586EMrkT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2217916691",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T14:41:58Z",
      "updated_at": "2024-07-09T14:41:58Z",
      "author_association": "MEMBER",
      "body": "> Happy to take that out of the op, the primary goal is to have fuzzing coverage for the version handshake (non-existent currently), which would be able to find such bugs.\r\n\r\nAre you sure it is completely non-existent? I am sure I did fuzz the version handshake at some point in time and the current coverage report (https://maflcko.github.io/b-c-cov/fuzz.coverage/src/net_processing.cpp.gcov.html) seems to agree. Maybe I am missing something.\r\n\r\nNo objection in any case. I am just trying to understand better what exactly this improves. Maybe you can show a coverage report that shows higher coverage compared to before or how a faked introduced bug is found faster compared to before.\r\n\r\nConcept ACK in any case.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2217916691",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30413"
    },
    {
      "event": "commented",
      "id": 2217941499,
      "node_id": "IC_kwDOABII586EMxn7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2217941499",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T14:53:37Z",
      "updated_at": "2024-07-09T14:53:37Z",
      "author_association": "MEMBER",
      "body": "> Are you sure it is completely non-existent? \r\n\r\nThe coverage we do have comes from the `process_messages` harness, but the harness doesn't fuzz the handshake it only makes sure that the handshake completes, so that the other messages can be fuzzed.\r\n\r\nI'll generate a coverage report to show the difference",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2217941499",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30413"
    },
    {
      "event": "commented",
      "id": 2218807473,
      "node_id": "IC_kwDOABII586EQFCx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2218807473",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T22:03:19Z",
      "updated_at": "2024-07-09T22:03:19Z",
      "author_association": "MEMBER",
      "body": "http://bitcoind-fuzz.dergoegge.de:8000/bitcoin-30413/harnesses/p2p_handshake/coverage_report/coverage/workdir/bitcoin/src/net_processing.cpp.html#L3702",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2218807473",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30413"
    },
    {
      "event": "commented",
      "id": 2220979817,
      "node_id": "IC_kwDOABII586EYXZp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2220979817",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-10T16:33:29Z",
      "updated_at": "2024-07-10T16:33:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2220979817",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30413"
    },
    {
      "event": "commented",
      "id": 2224232188,
      "node_id": "IC_kwDOABII586Ekxb8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2224232188",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T00:57:29Z",
      "updated_at": "2024-07-12T00:57:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The coverage we do have comes from the process_messages harness, but the harness doesn't fuzz the handshake it only makes sure that the handshake completes, so that the other messages can be fuzzed.\r\n\r\nConcept ACK [75fc22f](https://github.com/bitcoin/bitcoin/pull/30413/commits/75fc22f7729c6df779162edb620f986b5c811d8b)\r\nI think it makes sense to fuzz the handshake itself\r\n\r\nMaybe I'm just not too familiar with fuzz testing but this seems very similar to `process_messages`.\r\nWould it make sense to modify `process_messages` to also test the handshake instead of creating another fuzz target?",
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2224232188",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30413"
    },
    {
      "event": "commented",
      "id": 2225030941,
      "node_id": "IC_kwDOABII586En0cd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2225030941",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T07:55:39Z",
      "updated_at": "2024-07-12T07:55:39Z",
      "author_association": "MEMBER",
      "body": "> > Are you sure it is completely non-existent?\r\n> \r\n> The coverage we do have comes from the `process_messages` harness, but the harness doesn't fuzz the handshake it only makes sure that the handshake completes, so that the other messages can be fuzzed.\r\n\r\nSorry for the wrong comments above. Not sure why I hallucinated that this was already fuzzed. I guess I remembered seeing the timedata warnings printed in the fuzz runner and somehow assumed this part of the code is already fully fuzzed.\r\n\r\nHowever, I guess the timedata fuzz target explicitly avoided the `abs64` UB call (https://github.com/bitcoin/bitcoin/blob/b6440f20f2cc4b30fc2e3432a57eaf9ba0f653cc/src/test/fuzz/timedata.cpp#L28). And the process_messages one as well: https://github.com/bitcoin/bitcoin/blob/b6440f20f2cc4b30fc2e3432a57eaf9ba0f653cc/src/test/util/net.cpp#L37\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2225030941",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30413"
    },
    {
      "event": "reviewed",
      "id": 2183356740,
      "node_id": "PRR_kwDOABII586CI2FE",
      "url": null,
      "actor": null,
      "commit_id": "75fc22f7729c6df779162edb620f986b5c811d8b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Concept ACK",
      "user": {
        "login": "morehouse",
        "id": 19176026,
        "node_id": "MDQ6VXNlcjE5MTc2MDI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/19176026?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morehouse",
        "html_url": "https://github.com/morehouse",
        "followers_url": "https://api.github.com/users/morehouse/followers",
        "following_url": "https://api.github.com/users/morehouse/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morehouse/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morehouse/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morehouse/subscriptions",
        "organizations_url": "https://api.github.com/users/morehouse/orgs",
        "repos_url": "https://api.github.com/users/morehouse/repos",
        "events_url": "https://api.github.com/users/morehouse/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morehouse/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#pullrequestreview-2183356740",
      "submitted_at": "2024-07-17T16:52:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413"
    },
    {
      "event": "labeled",
      "id": 13627305317,
      "node_id": "LE_lADOABII586O8z8VzwAAAAMsQC1l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13627305317",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-24T09:05:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcyMGYwMTBlZThjMDdjNmU2YzNiOTU2M2RkYWE2Y2ZiYjIzNTE2ODc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/720f010ee8c07c6e6c3b9563ddaa6cfbb2351687",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/720f010ee8c07c6e6c3b9563ddaa6cfbb2351687",
      "tree": {
        "sha": "4074e24a976d83ea7b714324981e0a5c1778a539",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4074e24a976d83ea7b714324981e0a5c1778a539"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38c30a4b50ca0ceee0c64fe5ba9b95fe72d3ef48",
          "sha": "38c30a4b50ca0ceee0c64fe5ba9b95fe72d3ef48",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/38c30a4b50ca0ceee0c64fe5ba9b95fe72d3ef48"
        }
      ],
      "message": "[net processing] Lazily initialize m_recent_rejects",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2024-07-29T08:23:35Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2024-07-08T14:21:40Z"
      },
      "sha": "720f010ee8c07c6e6c3b9563ddaa6cfbb2351687"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIyZjg3NDJiNzlmNGFlYTcwOTQzMjA4YzExYzYyYzJmMTVmYWExYjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2f8742b79f4aea70943208c11c62c2f15faa1b9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b2f8742b79f4aea70943208c11c62c2f15faa1b9",
      "tree": {
        "sha": "db44e1a16fd8c92028c596a469ff951aa8551f84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db44e1a16fd8c92028c596a469ff951aa8551f84"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/720f010ee8c07c6e6c3b9563ddaa6cfbb2351687",
          "sha": "720f010ee8c07c6e6c3b9563ddaa6cfbb2351687",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/720f010ee8c07c6e6c3b9563ddaa6cfbb2351687"
        }
      ],
      "message": "[net processing] Lazily initialize m_recent_rejects_reconsiderable",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2024-07-29T08:24:07Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2024-07-08T14:27:27Z"
      },
      "sha": "b2f8742b79f4aea70943208c11c62c2f15faa1b9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY2MWI4YTZlY2UwYWZmZDA2ZGJmNjE2ZmE5OWFmODRkOTNmYTYxM2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/661b8a6ece0affd06dbf616fa99af84d93fa613c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/661b8a6ece0affd06dbf616fa99af84d93fa613c",
      "tree": {
        "sha": "74492820ca5ee7e8b2b99d0434fb511e73520bdc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/74492820ca5ee7e8b2b99d0434fb511e73520bdc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2f8742b79f4aea70943208c11c62c2f15faa1b9",
          "sha": "b2f8742b79f4aea70943208c11c62c2f15faa1b9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b2f8742b79f4aea70943208c11c62c2f15faa1b9"
        }
      ],
      "message": "[net processing] Lazily initialize m_recent_confirmed_transactions",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2024-07-29T08:24:08Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2024-07-08T14:31:28Z"
      },
      "sha": "661b8a6ece0affd06dbf616fa99af84d93fa613c"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13676427134,
      "node_id": "HRFPE_lADOABII586O8z8VzwAAAAMvLbd-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13676427134",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T08:37:12Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJhMDE3ZmRiYTdhNWJlYWVlM2ViNmQ1Yzk0OTQzNzhmMjNhZmQ0MTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a017fdba7a5beaee3eb6d5c9494378f23afd411",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2a017fdba7a5beaee3eb6d5c9494378f23afd411",
      "tree": {
        "sha": "9729f8048dd5e1028ffef3739e93dcaff732e0d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9729f8048dd5e1028ffef3739e93dcaff732e0d2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/661b8a6ece0affd06dbf616fa99af84d93fa613c",
          "sha": "661b8a6ece0affd06dbf616fa99af84d93fa613c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/661b8a6ece0affd06dbf616fa99af84d93fa613c"
        }
      ],
      "message": "[fuzz] Harness for version handshake",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2024-07-29T08:56:38Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2024-07-04T10:49:16Z"
      },
      "sha": "2a017fdba7a5beaee3eb6d5c9494378f23afd411"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13676710069,
      "node_id": "HRFPE_lADOABII586O8z8VzwAAAAMvMgi1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13676710069",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T08:56:52Z"
    },
    {
      "event": "commented",
      "id": 2255382716,
      "node_id": "IC_kwDOABII586Gbmi8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2255382716",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T09:00:10Z",
      "updated_at": "2024-07-29T09:00:10Z",
      "author_association": "MEMBER",
      "body": "@maflcko @brunoerg review ping :)",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2255382716",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30413"
    },
    {
      "event": "mentioned",
      "id": 13676759058,
      "node_id": "MEE_lADOABII586O8z8VzwAAAAMvMsgS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13676759058",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T09:00:12Z"
    },
    {
      "event": "subscribed",
      "id": 13676759078,
      "node_id": "SE_lADOABII586O8z8VzwAAAAMvMsgm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13676759078",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T09:00:13Z"
    },
    {
      "event": "mentioned",
      "id": 13676759093,
      "node_id": "MEE_lADOABII586O8z8VzwAAAAMvMsg1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13676759093",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T09:00:13Z"
    },
    {
      "event": "subscribed",
      "id": 13676759113,
      "node_id": "SE_lADOABII586O8z8VzwAAAAMvMshJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13676759113",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T09:00:13Z"
    },
    {
      "event": "unlabeled",
      "id": 13677839129,
      "node_id": "UNLE_lADOABII586O8z8VzwAAAAMvQ0MZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13677839129",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T10:11:40Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2206142028,
      "node_id": "PRR_kwDOABII586Dfw5M",
      "url": null,
      "actor": null,
      "commit_id": "2a017fdba7a5beaee3eb6d5c9494378f23afd411",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#pullrequestreview-2206142028",
      "submitted_at": "2024-07-29T21:54:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681310085",
      "pull_request_review_id": 2183356740,
      "id": 1681310085,
      "node_id": "PRRC_kwDOABII585kNsGF",
      "diff_hunk": "@@ -884,11 +884,22 @@ class PeerManagerImpl final : public PeerManager\n      *\n      * Memory used: 1.3 MB\n      */\n-    CRollingBloomFilter m_recent_rejects GUARDED_BY(::cs_main){120'000, 0.000'001};\n+    std::unique_ptr<CRollingBloomFilter> m_recent_rejects GUARDED_BY(::cs_main){nullptr};\n     /** Block hash of chain tip the last time we reset m_recent_rejects and\n-     * m_recent_rejects_reconsiderable. */\n+     * RecentRejectsReconsiderableFilter(). */\n     uint256 hashRecentRejectsChainTip GUARDED_BY(cs_main);\n \n+    CRollingBloomFilter& RecentRejectsFilter() EXCLUSIVE_LOCKS_REQUIRED(::cs_main)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "2a017fdba7a5beaee3eb6d5c9494378f23afd411",
      "original_commit_id": "75fc22f7729c6df779162edb620f986b5c811d8b",
      "in_reply_to_id": null,
      "user": {
        "login": "morehouse",
        "id": 19176026,
        "node_id": "MDQ6VXNlcjE5MTc2MDI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/19176026?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morehouse",
        "html_url": "https://github.com/morehouse",
        "followers_url": "https://api.github.com/users/morehouse/followers",
        "following_url": "https://api.github.com/users/morehouse/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morehouse/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morehouse/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morehouse/subscriptions",
        "organizations_url": "https://api.github.com/users/morehouse/orgs",
        "repos_url": "https://api.github.com/users/morehouse/repos",
        "events_url": "https://api.github.com/users/morehouse/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morehouse/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How much does lazy init of bloom filters improve fuzz target performance? ",
      "created_at": "2024-07-17T15:57:50Z",
      "updated_at": "2024-07-17T16:52:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#discussion_r1681310085",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681310085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 892,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681375314",
      "pull_request_review_id": 2183356740,
      "id": 1681375314,
      "node_id": "PRRC_kwDOABII585kN8BS",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <addrman.h>\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <node/warnings.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <ios>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+\n+void initialize()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(\n+        /*chain_type=*/ChainType::REGTEST);\n+    g_setup = testing_setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_handshake, .init = ::initialize)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    ConnmanTestMsg& connman = *static_cast<ConnmanTestMsg*>(g_setup->m_node.connman.get());\n+    auto& chainman = static_cast<TestChainstateManager&>(*g_setup->m_node.chainman);\n+    SetMockTime(1610000000); // any time to successfully reset ibd\n+    chainman.ResetIbd();\n+\n+    node::Warnings warnings{};\n+    NetGroupManager netgroupman{{}};\n+    AddrMan addrman{netgroupman, true, 0};\n+    auto peerman = PeerManager::make(connman, addrman,\n+                                     nullptr, chainman,\n+                                     *g_setup->m_node.mempool, warnings,\n+                                     PeerManager::Options{\n+                                         .reconcile_txs = true,\n+                                         .deterministic_rng = true,\n+                                     });\n+    connman.SetMsgProc(peerman.get());\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    std::vector<CNode*> peers;\n+    const auto num_peers_to_add = fuzzed_data_provider.ConsumeIntegralInRange(1, 3);\n+    for (int i = 0; i < num_peers_to_add; ++i) {\n+        peers.push_back(ConsumeNodeAsUniquePtr(fuzzed_data_provider, i).release());\n+        connman.AddTestNode(*peers.back());\n+        peerman->InitializeNode(\n+            *peers.back(),\n+            static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>()));\n+    }\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100)\n+    {\n+        CNode& connection = *PickValue(fuzzed_data_provider, peers);\n+        if (connection.fDisconnect || connection.fSuccessfullyConnected) {\n+            // Skip if the the connection was disconnected or if the version\n+            // handshake was already completed.\n+            continue;\n+        }\n+\n+        SetMockTime(GetTime() +\n+                    fuzzed_data_provider.ConsumeIntegralInRange<int64_t>(\n+                        -std::chrono::seconds{10min}.count(), // Allow mocktime to go backwards slightly\n+                        std::chrono::seconds{24h}.count()));\n+\n+        CSerializedNetMsg net_msg;\n+        net_msg.m_type = PickValue(fuzzed_data_provider, ALL_NET_MESSAGE_TYPES);",
      "path": "src/test/fuzz/p2p_handshake.cpp",
      "position": 88,
      "original_position": 88,
      "commit_id": "2a017fdba7a5beaee3eb6d5c9494378f23afd411",
      "original_commit_id": "75fc22f7729c6df779162edb620f986b5c811d8b",
      "in_reply_to_id": null,
      "user": {
        "login": "morehouse",
        "id": 19176026,
        "node_id": "MDQ6VXNlcjE5MTc2MDI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/19176026?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morehouse",
        "html_url": "https://github.com/morehouse",
        "followers_url": "https://api.github.com/users/morehouse/followers",
        "following_url": "https://api.github.com/users/morehouse/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morehouse/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morehouse/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morehouse/subscriptions",
        "organizations_url": "https://api.github.com/users/morehouse/orgs",
        "repos_url": "https://api.github.com/users/morehouse/repos",
        "events_url": "https://api.github.com/users/morehouse/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morehouse/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it make sense to limit message type to `VERSION` and `VERACK`?  Are other messages valid during the handshake?",
      "created_at": "2024-07-17T16:47:19Z",
      "updated_at": "2024-07-17T16:52:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#discussion_r1681375314",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681375314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681380988",
      "pull_request_review_id": 2183356740,
      "id": 1681380988,
      "node_id": "PRRC_kwDOABII585kN9Z8",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <addrman.h>\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <node/warnings.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <ios>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+\n+void initialize()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(\n+        /*chain_type=*/ChainType::REGTEST);\n+    g_setup = testing_setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_handshake, .init = ::initialize)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    ConnmanTestMsg& connman = *static_cast<ConnmanTestMsg*>(g_setup->m_node.connman.get());\n+    auto& chainman = static_cast<TestChainstateManager&>(*g_setup->m_node.chainman);\n+    SetMockTime(1610000000); // any time to successfully reset ibd\n+    chainman.ResetIbd();\n+\n+    node::Warnings warnings{};\n+    NetGroupManager netgroupman{{}};\n+    AddrMan addrman{netgroupman, true, 0};\n+    auto peerman = PeerManager::make(connman, addrman,\n+                                     nullptr, chainman,\n+                                     *g_setup->m_node.mempool, warnings,\n+                                     PeerManager::Options{\n+                                         .reconcile_txs = true,\n+                                         .deterministic_rng = true,\n+                                     });\n+    connman.SetMsgProc(peerman.get());\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    std::vector<CNode*> peers;\n+    const auto num_peers_to_add = fuzzed_data_provider.ConsumeIntegralInRange(1, 3);\n+    for (int i = 0; i < num_peers_to_add; ++i) {\n+        peers.push_back(ConsumeNodeAsUniquePtr(fuzzed_data_provider, i).release());\n+        connman.AddTestNode(*peers.back());\n+        peerman->InitializeNode(\n+            *peers.back(),\n+            static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>()));\n+    }\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100)\n+    {\n+        CNode& connection = *PickValue(fuzzed_data_provider, peers);\n+        if (connection.fDisconnect || connection.fSuccessfullyConnected) {\n+            // Skip if the the connection was disconnected or if the version\n+            // handshake was already completed.\n+            continue;\n+        }\n+\n+        SetMockTime(GetTime() +\n+                    fuzzed_data_provider.ConsumeIntegralInRange<int64_t>(\n+                        -std::chrono::seconds{10min}.count(), // Allow mocktime to go backwards slightly\n+                        std::chrono::seconds{24h}.count()));",
      "path": "src/test/fuzz/p2p_handshake.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "2a017fdba7a5beaee3eb6d5c9494378f23afd411",
      "original_commit_id": "75fc22f7729c6df779162edb620f986b5c811d8b",
      "in_reply_to_id": null,
      "user": {
        "login": "morehouse",
        "id": 19176026,
        "node_id": "MDQ6VXNlcjE5MTc2MDI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/19176026?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morehouse",
        "html_url": "https://github.com/morehouse",
        "followers_url": "https://api.github.com/users/morehouse/followers",
        "following_url": "https://api.github.com/users/morehouse/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morehouse/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morehouse/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morehouse/subscriptions",
        "organizations_url": "https://api.github.com/users/morehouse/orgs",
        "repos_url": "https://api.github.com/users/morehouse/repos",
        "events_url": "https://api.github.com/users/morehouse/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morehouse/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why increment the time instead of setting it directly?",
      "created_at": "2024-07-17T16:51:45Z",
      "updated_at": "2024-07-17T16:52:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#discussion_r1681380988",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681380988"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413"
        }
      },
      "start_line": null,
      "original_start_line": 82,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683123261",
      "pull_request_review_id": 2186314520,
      "id": 1683123261,
      "node_id": "PRRC_kwDOABII585kUmw9",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <addrman.h>\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <node/warnings.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <ios>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+\n+void initialize()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(\n+        /*chain_type=*/ChainType::REGTEST);\n+    g_setup = testing_setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_handshake, .init = ::initialize)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    ConnmanTestMsg& connman = *static_cast<ConnmanTestMsg*>(g_setup->m_node.connman.get());\n+    auto& chainman = static_cast<TestChainstateManager&>(*g_setup->m_node.chainman);\n+    SetMockTime(1610000000); // any time to successfully reset ibd\n+    chainman.ResetIbd();\n+\n+    node::Warnings warnings{};\n+    NetGroupManager netgroupman{{}};\n+    AddrMan addrman{netgroupman, true, 0};\n+    auto peerman = PeerManager::make(connman, addrman,\n+                                     nullptr, chainman,\n+                                     *g_setup->m_node.mempool, warnings,\n+                                     PeerManager::Options{\n+                                         .reconcile_txs = true,\n+                                         .deterministic_rng = true,\n+                                     });\n+    connman.SetMsgProc(peerman.get());\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    std::vector<CNode*> peers;\n+    const auto num_peers_to_add = fuzzed_data_provider.ConsumeIntegralInRange(1, 3);\n+    for (int i = 0; i < num_peers_to_add; ++i) {\n+        peers.push_back(ConsumeNodeAsUniquePtr(fuzzed_data_provider, i).release());\n+        connman.AddTestNode(*peers.back());\n+        peerman->InitializeNode(\n+            *peers.back(),\n+            static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>()));\n+    }\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100)\n+    {\n+        CNode& connection = *PickValue(fuzzed_data_provider, peers);\n+        if (connection.fDisconnect || connection.fSuccessfullyConnected) {\n+            // Skip if the the connection was disconnected or if the version\n+            // handshake was already completed.\n+            continue;\n+        }\n+\n+        SetMockTime(GetTime() +\n+                    fuzzed_data_provider.ConsumeIntegralInRange<int64_t>(\n+                        -std::chrono::seconds{10min}.count(), // Allow mocktime to go backwards slightly\n+                        std::chrono::seconds{24h}.count()));",
      "path": "src/test/fuzz/p2p_handshake.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "2a017fdba7a5beaee3eb6d5c9494378f23afd411",
      "original_commit_id": "75fc22f7729c6df779162edb620f986b5c811d8b",
      "in_reply_to_id": 1681380988,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My idea was that this might help a fuzzer to more realistically simulate how time would change between messages. Setting it directly would of course also work but I thought it might result in more mutations that are completely bogus (the time isn't attacker controlled so this seemed less useful). Happy to change it, probably doesn't make a huge difference. What do you think?",
      "created_at": "2024-07-18T16:08:35Z",
      "updated_at": "2024-07-18T16:49:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#discussion_r1683123261",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683123261"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413"
        }
      },
      "start_line": null,
      "original_start_line": 82,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683143984",
      "pull_request_review_id": 2186314520,
      "id": 1683143984,
      "node_id": "PRRC_kwDOABII585kUr0w",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <addrman.h>\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <node/warnings.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <ios>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+\n+void initialize()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(\n+        /*chain_type=*/ChainType::REGTEST);\n+    g_setup = testing_setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_handshake, .init = ::initialize)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    ConnmanTestMsg& connman = *static_cast<ConnmanTestMsg*>(g_setup->m_node.connman.get());\n+    auto& chainman = static_cast<TestChainstateManager&>(*g_setup->m_node.chainman);\n+    SetMockTime(1610000000); // any time to successfully reset ibd\n+    chainman.ResetIbd();\n+\n+    node::Warnings warnings{};\n+    NetGroupManager netgroupman{{}};\n+    AddrMan addrman{netgroupman, true, 0};\n+    auto peerman = PeerManager::make(connman, addrman,\n+                                     nullptr, chainman,\n+                                     *g_setup->m_node.mempool, warnings,\n+                                     PeerManager::Options{\n+                                         .reconcile_txs = true,\n+                                         .deterministic_rng = true,\n+                                     });\n+    connman.SetMsgProc(peerman.get());\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    std::vector<CNode*> peers;\n+    const auto num_peers_to_add = fuzzed_data_provider.ConsumeIntegralInRange(1, 3);\n+    for (int i = 0; i < num_peers_to_add; ++i) {\n+        peers.push_back(ConsumeNodeAsUniquePtr(fuzzed_data_provider, i).release());\n+        connman.AddTestNode(*peers.back());\n+        peerman->InitializeNode(\n+            *peers.back(),\n+            static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>()));\n+    }\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100)\n+    {\n+        CNode& connection = *PickValue(fuzzed_data_provider, peers);\n+        if (connection.fDisconnect || connection.fSuccessfullyConnected) {\n+            // Skip if the the connection was disconnected or if the version\n+            // handshake was already completed.\n+            continue;\n+        }\n+\n+        SetMockTime(GetTime() +\n+                    fuzzed_data_provider.ConsumeIntegralInRange<int64_t>(\n+                        -std::chrono::seconds{10min}.count(), // Allow mocktime to go backwards slightly\n+                        std::chrono::seconds{24h}.count()));\n+\n+        CSerializedNetMsg net_msg;\n+        net_msg.m_type = PickValue(fuzzed_data_provider, ALL_NET_MESSAGE_TYPES);",
      "path": "src/test/fuzz/p2p_handshake.cpp",
      "position": 88,
      "original_position": 88,
      "commit_id": "2a017fdba7a5beaee3eb6d5c9494378f23afd411",
      "original_commit_id": "75fc22f7729c6df779162edb620f986b5c811d8b",
      "in_reply_to_id": 1681375314,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There are more message types that are allowed after the version message and before the verack (some of them are also allowed post verack), essentially all of the ones processed in [this block](https://github.com/bitcoin/bitcoin/blob/20ccb30b7af1c30cece2b0579ba88aa101583f07/src/net_processing.cpp#L3894-L4061) (`wtxidrelay`, `sendaddrv2`, `sendtxrcncl`, `sendheaders`, `sendcmpct`).\r\n\r\nI used `ALL_NET_MESSAGE_TYPES`, so that we can avoid touching this test if we add more handshake related message types (since we'll add all new messages to that container).",
      "created_at": "2024-07-18T16:17:25Z",
      "updated_at": "2024-07-18T16:49:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#discussion_r1683143984",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683143984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683190037",
      "pull_request_review_id": 2186314520,
      "id": 1683190037,
      "node_id": "PRRC_kwDOABII585kU3EV",
      "diff_hunk": "@@ -884,11 +884,22 @@ class PeerManagerImpl final : public PeerManager\n      *\n      * Memory used: 1.3 MB\n      */\n-    CRollingBloomFilter m_recent_rejects GUARDED_BY(::cs_main){120'000, 0.000'001};\n+    std::unique_ptr<CRollingBloomFilter> m_recent_rejects GUARDED_BY(::cs_main){nullptr};\n     /** Block hash of chain tip the last time we reset m_recent_rejects and\n-     * m_recent_rejects_reconsiderable. */\n+     * RecentRejectsReconsiderableFilter(). */\n     uint256 hashRecentRejectsChainTip GUARDED_BY(cs_main);\n \n+    CRollingBloomFilter& RecentRejectsFilter() EXCLUSIVE_LOCKS_REQUIRED(::cs_main)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "2a017fdba7a5beaee3eb6d5c9494378f23afd411",
      "original_commit_id": "75fc22f7729c6df779162edb620f986b5c811d8b",
      "in_reply_to_id": 1681310085,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Measuring exec/s without lazy init:\r\n\r\n![execs_no_lazy](https://github.com/user-attachments/assets/d8db9f90-8708-4e2d-bee3-ce990d895a4c)\r\n\r\nWith:\r\n\r\n![execs_lazy](https://github.com/user-attachments/assets/b508fec3-1f68-4e5d-a0aa-14904453855f)\r\n",
      "created_at": "2024-07-18T16:47:01Z",
      "updated_at": "2024-07-18T16:49:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#discussion_r1683190037",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683190037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 892,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688272087",
      "pull_request_review_id": 2194330443,
      "id": 1688272087,
      "node_id": "PRRC_kwDOABII585koPzX",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <addrman.h>\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <node/warnings.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <ios>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+\n+void initialize()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(\n+        /*chain_type=*/ChainType::REGTEST);\n+    g_setup = testing_setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_handshake, .init = ::initialize)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    ConnmanTestMsg& connman = *static_cast<ConnmanTestMsg*>(g_setup->m_node.connman.get());\n+    auto& chainman = static_cast<TestChainstateManager&>(*g_setup->m_node.chainman);\n+    SetMockTime(1610000000); // any time to successfully reset ibd\n+    chainman.ResetIbd();\n+\n+    node::Warnings warnings{};\n+    NetGroupManager netgroupman{{}};\n+    AddrMan addrman{netgroupman, true, 0};\n+    auto peerman = PeerManager::make(connman, addrman,\n+                                     nullptr, chainman,\n+                                     *g_setup->m_node.mempool, warnings,\n+                                     PeerManager::Options{\n+                                         .reconcile_txs = true,\n+                                         .deterministic_rng = true,\n+                                     });\n+    connman.SetMsgProc(peerman.get());\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    std::vector<CNode*> peers;\n+    const auto num_peers_to_add = fuzzed_data_provider.ConsumeIntegralInRange(1, 3);\n+    for (int i = 0; i < num_peers_to_add; ++i) {\n+        peers.push_back(ConsumeNodeAsUniquePtr(fuzzed_data_provider, i).release());\n+        connman.AddTestNode(*peers.back());\n+        peerman->InitializeNode(\n+            *peers.back(),\n+            static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>()));\n+    }\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100)\n+    {\n+        CNode& connection = *PickValue(fuzzed_data_provider, peers);\n+        if (connection.fDisconnect || connection.fSuccessfullyConnected) {\n+            // Skip if the the connection was disconnected or if the version\n+            // handshake was already completed.\n+            continue;\n+        }\n+\n+        SetMockTime(GetTime() +\n+                    fuzzed_data_provider.ConsumeIntegralInRange<int64_t>(\n+                        -std::chrono::seconds{10min}.count(), // Allow mocktime to go backwards slightly\n+                        std::chrono::seconds{24h}.count()));",
      "path": "src/test/fuzz/p2p_handshake.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "2a017fdba7a5beaee3eb6d5c9494378f23afd411",
      "original_commit_id": "75fc22f7729c6df779162edb620f986b5c811d8b",
      "in_reply_to_id": 1681380988,
      "user": {
        "login": "morehouse",
        "id": 19176026,
        "node_id": "MDQ6VXNlcjE5MTc2MDI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/19176026?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/morehouse",
        "html_url": "https://github.com/morehouse",
        "followers_url": "https://api.github.com/users/morehouse/followers",
        "following_url": "https://api.github.com/users/morehouse/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/morehouse/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/morehouse/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/morehouse/subscriptions",
        "organizations_url": "https://api.github.com/users/morehouse/orgs",
        "repos_url": "https://api.github.com/users/morehouse/repos",
        "events_url": "https://api.github.com/users/morehouse/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/morehouse/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If time isn't attacker controlled, how would it go backwards?  And how realistic is the range [-10m, +24h]?  Naively, 24h seems like a long time between messages in the handshake.",
      "created_at": "2024-07-23T15:28:40Z",
      "updated_at": "2024-07-23T17:50:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#discussion_r1688272087",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688272087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413"
        }
      },
      "start_line": null,
      "original_start_line": 82,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1694855848",
      "pull_request_review_id": 2204346171,
      "id": 1694855848,
      "node_id": "PRRC_kwDOABII585lBXKo",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <addrman.h>\n+#include <consensus/consensus.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <node/warnings.h>\n+#include <protocol.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+#include <test/util/mining.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/validation.h>\n+#include <util/time.h>\n+#include <validationinterface.h>\n+\n+#include <ios>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+\n+void initialize()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(\n+        /*chain_type=*/ChainType::REGTEST);\n+    g_setup = testing_setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_handshake, .init = ::initialize)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    ConnmanTestMsg& connman = *static_cast<ConnmanTestMsg*>(g_setup->m_node.connman.get());\n+    auto& chainman = static_cast<TestChainstateManager&>(*g_setup->m_node.chainman);\n+    SetMockTime(1610000000); // any time to successfully reset ibd\n+    chainman.ResetIbd();\n+\n+    node::Warnings warnings{};\n+    NetGroupManager netgroupman{{}};\n+    AddrMan addrman{netgroupman, true, 0};\n+    auto peerman = PeerManager::make(connman, addrman,\n+                                     nullptr, chainman,\n+                                     *g_setup->m_node.mempool, warnings,\n+                                     PeerManager::Options{\n+                                         .reconcile_txs = true,\n+                                         .deterministic_rng = true,\n+                                     });\n+    connman.SetMsgProc(peerman.get());\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    std::vector<CNode*> peers;\n+    const auto num_peers_to_add = fuzzed_data_provider.ConsumeIntegralInRange(1, 3);\n+    for (int i = 0; i < num_peers_to_add; ++i) {\n+        peers.push_back(ConsumeNodeAsUniquePtr(fuzzed_data_provider, i).release());\n+        connman.AddTestNode(*peers.back());\n+        peerman->InitializeNode(\n+            *peers.back(),\n+            static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>()));\n+    }\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100)\n+    {\n+        CNode& connection = *PickValue(fuzzed_data_provider, peers);\n+        if (connection.fDisconnect || connection.fSuccessfullyConnected) {\n+            // Skip if the the connection was disconnected or if the version\n+            // handshake was already completed.\n+            continue;\n+        }\n+\n+        SetMockTime(GetTime() +\n+                    fuzzed_data_provider.ConsumeIntegralInRange<int64_t>(\n+                        -std::chrono::seconds{10min}.count(), // Allow mocktime to go backwards slightly\n+                        std::chrono::seconds{24h}.count()));",
      "path": "src/test/fuzz/p2p_handshake.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "2a017fdba7a5beaee3eb6d5c9494378f23afd411",
      "original_commit_id": "75fc22f7729c6df779162edb620f986b5c811d8b",
      "in_reply_to_id": 1681380988,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> If time isn't attacker controlled, how would it go backwards?\r\n\r\nMy thinking was that this could simulate NTP adjustments that go backwards.\r\n\r\n> And how realistic is the range [-10m, +24h]? Naively, 24h seems like a long time between messages in the handshake.\r\n\r\nI've changed the upper bound to `TIMEOUT_INTERVAL` (20min) which is the default timeout value used for connections.  ",
      "created_at": "2024-07-29T08:59:09Z",
      "updated_at": "2024-07-29T08:59:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#discussion_r1694855848",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1694855848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413"
        }
      },
      "start_line": null,
      "original_start_line": 82,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1695993732",
      "pull_request_review_id": 2206142028,
      "id": 1695993732,
      "node_id": "PRRC_kwDOABII585lFs-E",
      "diff_hunk": "@@ -897,7 +897,18 @@ class PeerManagerImpl final : public PeerManager\n      *\n      * Memory used: 1.3 MB\n      */\n-    CRollingBloomFilter m_recent_rejects GUARDED_BY(m_tx_download_mutex){120'000, 0.000'001};\n+    std::unique_ptr<CRollingBloomFilter> m_recent_rejects GUARDED_BY(m_tx_download_mutex){nullptr};",
      "path": "src/net_processing.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "2a017fdba7a5beaee3eb6d5c9494378f23afd411",
      "original_commit_id": "720f010ee8c07c6e6c3b9563ddaa6cfbb2351687",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The recently merged `ActiveTipChange` (#30111) should be updated too (`m_recent_rejects` and `m_recent_rejects_reconsiderable` are directly dereferenced there).",
      "created_at": "2024-07-29T21:35:45Z",
      "updated_at": "2024-07-29T21:54:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#discussion_r1695993732",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1695993732"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 900,
      "original_line": 900,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696019711",
      "pull_request_review_id": 2206178513,
      "id": 1696019711,
      "node_id": "PRRC_kwDOABII585lFzT_",
      "diff_hunk": "@@ -897,7 +897,18 @@ class PeerManagerImpl final : public PeerManager\n      *\n      * Memory used: 1.3 MB\n      */\n-    CRollingBloomFilter m_recent_rejects GUARDED_BY(m_tx_download_mutex){120'000, 0.000'001};\n+    std::unique_ptr<CRollingBloomFilter> m_recent_rejects GUARDED_BY(m_tx_download_mutex){nullptr};",
      "path": "src/net_processing.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "2a017fdba7a5beaee3eb6d5c9494378f23afd411",
      "original_commit_id": "720f010ee8c07c6e6c3b9563ddaa6cfbb2351687",
      "in_reply_to_id": 1695993732,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ha, good catch! I missed this because `reset()` is both a method on `unique_ptr` and `CRollingBloomFilter`.\r\n\r\nThis seems to be harmless and work out the way it should, i.e. `unique_ptr::reset()` will delete the current filter and on the next call to `RecentRejectsFilter()` it will be re-allocated (which afaict would have the same effect as resetting the filter with `CRollingBloomFilter::reset()`). But obviously, I should change it to `RecentRejectsFilter().reset()` to call `reset()` on the filter not the `unique_ptr`.",
      "created_at": "2024-07-29T22:05:54Z",
      "updated_at": "2024-07-29T22:11:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30413#discussion_r1696019711",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696019711"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30413"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 900,
      "original_line": 900,
      "side": "RIGHT"
    }
  ]
}