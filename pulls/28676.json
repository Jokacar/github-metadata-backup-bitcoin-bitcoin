{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676",
    "id": 1563273625,
    "node_id": "PR_kwDOABII585dLamZ",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28676",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28676.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28676.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/73c313a075e463bcd554e61da65c7dac2665724d",
    "number": 28676,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "[WIP] Cluster mempool implementation",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a draft implementation of the cluster mempool design described in #27677.  I'm opening this as a draft PR now to share the branch I'm working on with others, so that we can start to think about in-progress projects (like package relay, package validation, and package rbf) in the context of this design.  Also, I can use some help from others for parts of this work, including the interaction between the mempool and the wallet, and also reworking some of our existing test cases to fit a cluster-mempool world.\r\n\r\nNote that the design of this implementation is subject to change as I continue to iterate on the code (to make the code more hygienic and robust, in particular). At this point though I think the performance is pretty reasonable and I'm not currently aware of any bugs.  There are some microbenchmarks added here, and some improved fuzz tests; it would be great if others ran both of those on their own hardware as well and reported back on any findings.\r\n\r\nThis branch implements the following observable behavior changes:\r\n\r\n- Maintains a partitioning of the mempool into connected clusters\r\n- Each cluster is sorted (\"linearized\") either using an optimal sort, or an ancestor-feerate-based one, depending on the size of the cluster (thanks to @sipa for this logic)\r\n- Transaction selection for mining is updated to use the cluster linearizations\r\n- Mempool eviction is updated to use the cluster linearizations\r\n- The RBF rules are updated to drop the requirement that no new inputs are introduced, and to change the feerate requirement to instead check that the mining score of a replacement transaction exceed the mining score of the conflicted transactions\r\n- The CPFP carveout rule is eliminated (it doesn't make sense in a cluster-limited mempool)\r\n- The ancestor and descendant limits are no longer enforced.\r\n- New cluster count/cluster vsize limits are now enforced instead.\r\n\r\nSome less observable behavior changes:\r\n- The cached ancestor and descendant data are dropped from the mempool, along with the multi_index indices that were maintained to sort the mempool by ancestor and descendant feerates. For compatibility (eg with wallet behavior or RPCs exposing this), this information is now calculated dynamically instead.\r\n- The ancestor and descendant walking algorithms are now implemented using `epoch`s (resulting in a significant performance improvement, according to the benchmarks I've looked at)\r\n\r\nStill to do:\r\n\r\n- [ ] More comparisons between this branch and master on historical data to compare validation speed (accepting loose transactions, processing RBF transactions, validating a block/postprocessing, updating the mempool for a reorg).\r\n- [ ] More historical data analysis to try to evaluate the likely impact of setting the cluster size limits to varying values (to motivate what values we should ultimately pick)\r\n- [ ] Updating wallet code to be cluster-aware (including mini_miner and coin selection)\r\n- [ ] Rework many of our functional tests to be cluster-aware\r\n- [ ] Figure out what package validation and package RBF rules should be in this design\r\n- [ ] Rework the `partially_downloaded_block` fuzz target to not add mempool transactions in a topologically-invalid way.\r\n- [ ] Update RBF logic to ensure that replacements always strictly improve the mempool.\r\n- [ ] Figure out how we want to document our RBF policy (preserve historical references to BIP 125 or previous Bitcoin Core behaviors vs clean slate documentation?)\r\n\r\nFor discussion/feedback:\r\n\r\n - How significant is it to be dropping the CPFP carveout rule?  Does that affect how we will ultimately want to stage new mempool deployment?\r\n - How well do the proposed RBF rules meet everyone's use cases?\r\n - What design improvements can we make to the cluster tracking implementation?\r\n - The ZMQ callbacks that occur when a block is found will happen in a slightly different order, because we now will fully remove all transactions occurring in a block from the mempool before removing any conflicts. Is this a problem?",
    "labels": [
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-10-18T18:59:37Z",
    "updated_at": "2024-04-26T03:36:52Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "3d3d2319f23f7a0128c33539df103fbe8f4df860",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "sdaftuar:2023-10-cluster-mempool",
      "ref": "2023-10-cluster-mempool",
      "sha": "73c313a075e463bcd554e61da65c7dac2665724d",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 28761781,
        "node_id": "MDEwOlJlcG9zaXRvcnkyODc2MTc4MQ==",
        "name": "bitcoin",
        "full_name": "sdaftuar/bitcoin",
        "owner": {
          "login": "sdaftuar",
          "id": 7463573,
          "node_id": "MDQ6VXNlcjc0NjM1NzM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sdaftuar",
          "html_url": "https://github.com/sdaftuar",
          "followers_url": "https://api.github.com/users/sdaftuar/followers",
          "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
          "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
          "repos_url": "https://api.github.com/users/sdaftuar/repos",
          "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sdaftuar/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sdaftuar/bitcoin",
        "archive_url": "https://api.github.com/repos/sdaftuar/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sdaftuar/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sdaftuar/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sdaftuar/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sdaftuar/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sdaftuar/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sdaftuar/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sdaftuar/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sdaftuar/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sdaftuar/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sdaftuar/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sdaftuar/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sdaftuar/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sdaftuar/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sdaftuar/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sdaftuar/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sdaftuar/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sdaftuar/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sdaftuar/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sdaftuar/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sdaftuar/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sdaftuar/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sdaftuar/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sdaftuar/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sdaftuar/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sdaftuar/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sdaftuar/bitcoin/hooks",
        "svn_url": "https://github.com/sdaftuar/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 266749,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-04-26T02:03:17Z",
        "created_at": "2015-01-04T02:52:13Z",
        "updated_at": "2024-02-09T22:47:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2eff198f4900c34442439ef2cbd9d82f4903f915",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35299,
        "stargazers_count": 76000,
        "watchers_count": 76000,
        "size": 255111,
        "default_branch": "master",
        "open_issues_count": 686,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-04-26T02:03:20Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-04-26T03:57:13Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 5301,
    "deletions": 2615,
    "changed_files": 53,
    "commits": 67,
    "review_comments": 47,
    "comments": 12
  },
  "events": [
    {
      "event": "mentioned",
      "id": 10697854902,
      "node_id": "MEE_lADOABII5850QVJBzwAAAAJ9pE-2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10697854902",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T18:59:38Z"
    },
    {
      "event": "subscribed",
      "id": 10697854917,
      "node_id": "SE_lADOABII5850QVJBzwAAAAJ9pE_F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10697854917",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T18:59:38Z"
    },
    {
      "event": "commented",
      "id": 1769143762,
      "node_id": "IC_kwDOABII585pcv3S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1769143762",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T18:59:40Z",
      "updated_at": "2024-03-09T02:54:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28676).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29543](https://github.com/bitcoin/bitcoin/pull/29543) (refactor: Avoid unsigned integer overflow in `script/interpreter.cpp` by hebasto)\n* [#29496](https://github.com/bitcoin/bitcoin/pull/29496) (policy: bump TX_MAX_STANDARD_VERSION to 3 by glozow)\n* [#29325](https://github.com/bitcoin/bitcoin/pull/29325) (consensus: Store transaction nVersion as uint32_t by achow101)\n* [#29306](https://github.com/bitcoin/bitcoin/pull/29306) (policy: enable sibling eviction for v3 transactions by glozow)\n* [#29242](https://github.com/bitcoin/bitcoin/pull/29242) (Mempool util: Add RBF diagram checks for single chunks against clusters of size 2 by instagibbs)\n* [#29231](https://github.com/bitcoin/bitcoin/pull/29231) (logging: Update to new logging API by ajtowns)\n* [#29015](https://github.com/bitcoin/bitcoin/pull/29015) (kernel: Streamline util library by ryanofsky)\n* [#29007](https://github.com/bitcoin/bitcoin/pull/29007) (test: create deterministic addrman in the functional tests by stratospher)\n* [#28984](https://github.com/bitcoin/bitcoin/pull/28984) (Cluster size 2 package rbf by instagibbs)\n* [#28960](https://github.com/bitcoin/bitcoin/pull/28960) (kernel: Remove dependency on CScheduler by TheCharlatan)\n* [#28886](https://github.com/bitcoin/bitcoin/pull/28886) (refactor: Replace sets of txiter with CTxMemPoolEntryRefs by TheCharlatan)\n* [#28830](https://github.com/bitcoin/bitcoin/pull/28830) ([refactor] Check CTxMemPool options in ctor by TheCharlatan)\n* [#28687](https://github.com/bitcoin/bitcoin/pull/28687) (C++20 std::views::reverse by stickies-v)\n* [#28121](https://github.com/bitcoin/bitcoin/pull/28121) (include verbose debug messages in testmempoolaccept reject-reason by pinheadmz)\n* [#27351](https://github.com/bitcoin/bitcoin/pull/27351) (wallet: add `seeds` argument to `importdescriptors` by apoelstra)\n* [#26593](https://github.com/bitcoin/bitcoin/pull/26593) (tracing: Only prepare tracepoint arguments when actually tracing by 0xB10C)\n* [#26022](https://github.com/bitcoin/bitcoin/pull/26022) (Add util::ResultPtr class by ryanofsky)\n* [#25722](https://github.com/bitcoin/bitcoin/pull/25722) (refactor: Use util::Result class for wallet loading by ryanofsky)\n* [#25665](https://github.com/bitcoin/bitcoin/pull/25665) (refactor: Add util::Result failure values, multiple error and warning messages by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1769143762",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "labeled",
      "id": 10697976819,
      "node_id": "LE_lADOABII5850QVJBzwAAAAJ9pivz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10697976819",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T19:11:53Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10697997651,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAJ9pn1T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10697997651",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T19:14:03Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T23:11:20Z",
      "updated_at": "2023-10-18T23:11:20Z",
      "source": {
        "issue": {
          "id": 1945845586,
          "node_id": "PR_kwDOABII585c7wA9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28658",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28658/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28658/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28658/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28658",
          "number": 28658,
          "state": "closed",
          "state_reason": null,
          "title": "type-safe(r) GenTxid constructors",
          "body": "Builds on https://github.com/bitcoin/bitcoin/pull/28107\r\n\r\nTiny(<30 loc) set of changes that detects issues with fuzz targets in master, and longer term should make things safer.\r\n\r\nMost of this `GenTxid::Txid(Txid::FromUint256())` chaining can be removed by further work pushing the types \"up\", and maybe other helper functions that make them directly out of `COutPoint`s or similar since that appears to be a common pattern.",
          "user": {
            "login": "instagibbs",
            "id": 5767891,
            "node_id": "MDQ6VXNlcjU3Njc4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/instagibbs",
            "html_url": "https://github.com/instagibbs",
            "followers_url": "https://api.github.com/users/instagibbs/followers",
            "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/instagibbs/orgs",
            "repos_url": "https://api.github.com/users/instagibbs/repos",
            "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/instagibbs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28658",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28658",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28658.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28658.patch"
          },
          "closed_at": "2023-12-04T19:46:30Z",
          "created_at": "2023-10-16T18:29:41Z",
          "updated_at": "2023-12-05T11:21:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T23:34:30Z",
      "updated_at": "2023-10-18T23:34:30Z",
      "source": {
        "issue": {
          "id": 1910622235,
          "node_id": "PR_kwDOABII585bE94H",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28528",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28528/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28528/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28528/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28528",
          "number": 28528,
          "state": "closed",
          "state_reason": null,
          "title": "test: Use test framework utils in functional tests",
          "body": "Replaces bare asserts with test framework utils across both the functional tests and the test framework itself.\r\n\r\nAlso adds the `assert_not_equal`, `assert_less_than`, and `assert_less_than_or_equal` util functions for greater readability.\r\n\r\nFixes #23119.\r\n",
          "user": {
            "login": "osagie98",
            "id": 23225617,
            "node_id": "MDQ6VXNlcjIzMjI1NjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/23225617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/osagie98",
            "html_url": "https://github.com/osagie98",
            "followers_url": "https://api.github.com/users/osagie98/followers",
            "following_url": "https://api.github.com/users/osagie98/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/osagie98/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/osagie98/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/osagie98/subscriptions",
            "organizations_url": "https://api.github.com/users/osagie98/orgs",
            "repos_url": "https://api.github.com/users/osagie98/repos",
            "events_url": "https://api.github.com/users/osagie98/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/osagie98/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28528",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28528",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28528.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28528.patch"
          },
          "closed_at": "2024-02-22T17:40:49Z",
          "created_at": "2023-09-25T04:14:06Z",
          "updated_at": "2024-02-22T17:40:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T23:50:25Z",
      "updated_at": "2023-10-18T23:50:25Z",
      "source": {
        "issue": {
          "id": 1878544434,
          "node_id": "PR_kwDOABII585ZZZg8",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28391",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28391/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28391/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28391/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28391",
          "number": 28391,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Simplify CTxMempool/BlockAssembler fields, remove some external mapTx access",
          "body": "Motivation\r\n* It seems preferable to use stdlib data structures instead of boost if they can achieve close to the same thing.\r\n* Code external to mempool should ideally use its public helper methods instead of accessing `mapTx` or its iterators directly.\r\n* Reduce the number of complex boost multi index type interactions\r\n* Also see #28335 for further context/motivation. This PR together with #28385 simplifies that one.\r\n\r\nOverview of things done in this PR:\r\n* Make `vTxHashes` a vector of transaction references instead of a pair of transaction hash and iterator. The trade off here is that the data is retrieved on the fly with `GetEntry` instead of being cached in `vTxHashes`.\r\n* Introduce `GetEntry` helper method to replace the more involved `GetIter` where applicable\r\n* Replace `mapTx` access with `CTxMemPool` helper methods\r\n* Simplify `checkChainLimits` call in `node/interfaces.cpp`\r\n* Make `CTxMemPoolEntry`s `lockPoints`mutable such that they can be changed with a const iterator directly instead of going through `mapTx`\r\n* Make `BlockAssembler`'s `inBlock` and `failedTx` sets of transaction hashes.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28391",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28391",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28391.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28391.patch"
          },
          "closed_at": "2023-11-13T10:51:51Z",
          "created_at": "2023-09-02T09:47:53Z",
          "updated_at": "2024-01-05T16:42:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T23:53:32Z",
      "updated_at": "2023-10-18T23:53:32Z",
      "source": {
        "issue": {
          "id": 1873415502,
          "node_id": "PR_kwDOABII585ZIF0m",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28368",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28368/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28368/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28368/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28368",
          "number": 28368,
          "state": "closed",
          "state_reason": null,
          "title": "Fee Estimator updates from Validation Interface/CScheduler thread",
          "body": "This is an attempt to  #11775 \r\n\r\nThis Pr will enable fee estimator to listen to ValidationInterface notifications to process new transactions added and removed from the mempool.\r\n\r\nThis PR includes the following changes:\r\n\r\n- Added a new callback to the Validation Interface `MempoolTransactionsRemovedForConnectedBlock`, which notifies listeners about the transactions that have been removed due to a new block being connected, along with the height at which the transactions were removed.\r\n- Modified the `TransactionAddedToMempool` callback parameter to include additional information about the transaction needed for fee estimation.\r\n- Updated `CBlockPolicyEstimator` to process transactions using` CTransactionRef` instead of `CTxMempoolEntry.`\r\n- Implemented the `CValidationInterface` interface in `CBlockPolicyEstimater` and overridden the `TransactionAddedToMempool`, `TransactionRemovedFromMempool`, and `MempoolTransactionsRemovedForConnectedBlock` methods to receive updates from their notifications.\r\n\r\nPrior to this PR, the fee estimator updates from the mempool, i.e whenever a new block is connected all transactions in the block that are in our mempool are going to be removed using the `removeForBlock` function in `txmempool.cpp`. \r\n\r\nThis removal triggered updates to the fee estimator. As a result, the fee estimator would block mempool's `cs` until it finished updating every time a new block was connected.\r\nInstead of being blocked only on mempool tx removal, we were blocking on both tx removal and fee estimator updating.\r\nIf we want to further improve fee estimation, or add heavy-calulation steps to it, it is currently not viable as we would be slowing down block relay in the process\r\n\r\nThis PR is smaller in terms of the changes made compared to #11775, as it focuses solely on enabling fee estimator updates from the validationInterface/cscheduler thread notifications.\r\n\r\nI have not split the validation interface because, as I understand it, the rationale behind the split in #11775 was to have `MempoolInterface` signals come from the mempool and `CValidationInterface` events come from validation. I believe this separation can be achieved in a separate refactoring PR when the need arises.\r\n\r\nAlso left out some commits from #11775\r\n- Some refactoring which are no longer needed.\r\n- Handle reorgs much better in fee estimator. \r\n- Track witness hash malleation in fee estimator \r\n\r\nI believe they are a separate change that can come in a follow-up after this.\r\n\r\n",
          "user": {
            "login": "ismaelsadeeq",
            "id": 48946461,
            "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismaelsadeeq",
            "html_url": "https://github.com/ismaelsadeeq",
            "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
            "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
            "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
            "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
            "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 1648013533,
              "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
              "name": "Review club",
              "description": "",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28368",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28368",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28368.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28368.patch"
          },
          "closed_at": "2023-12-01T20:07:35Z",
          "created_at": "2023-08-30T10:45:22Z",
          "updated_at": "2023-12-05T02:15:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-18T23:58:08Z",
      "updated_at": "2023-10-18T23:58:08Z",
      "source": {
        "issue": {
          "id": 1868276585,
          "node_id": "PR_kwDOABII585Y27tq",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28345",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28345/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28345/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28345/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28345",
          "number": 28345,
          "state": "closed",
          "state_reason": null,
          "title": "Bugfix: Package relay / bytespersigop checks",
          "body": "`GetVirtualTransactionSize(CTransaction&)` passes by default 0 sigops and 0 `-bytespersigop`, which is incorrect. In many cases (ie, wallet), this is harmless since we have control over the transactions and don't do anything absurd in normal usage. But in other cases (including wallet *received* transactions), this isn't safe. To avoid invisible bugs like this, I delete (or rather, move to `bitcoin_test`) the function signature that allows for omitting sigop inputs.\r\n\r\nThis also then fixes the new package relay code to use the correct virtual sizes for its checks, and documents calling locations where the behaviour is broken or safe.\r\n\r\nIn particular, note that the `sendrawtransaction` RPC and GUI transaction details remain buggy and not fixed in this PR.",
          "user": {
            "login": "luke-jr",
            "id": 1095675,
            "node_id": "MDQ6VXNlcjEwOTU2NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke-jr",
            "html_url": "https://github.com/luke-jr",
            "followers_url": "https://api.github.com/users/luke-jr/followers",
            "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
            "organizations_url": "https://api.github.com/users/luke-jr/orgs",
            "repos_url": "https://api.github.com/users/luke-jr/repos",
            "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/luke-jr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 749416508,
              "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
              "name": "Up for grabs",
              "color": "99a810",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28345",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28345",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28345.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28345.patch"
          },
          "closed_at": "2024-04-09T14:17:17Z",
          "created_at": "2023-08-26T21:46:20Z",
          "updated_at": "2024-04-09T14:17:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T00:01:15Z",
      "updated_at": "2023-10-19T00:01:15Z",
      "source": {
        "issue": {
          "id": 1864447692,
          "node_id": "PR_kwDOABII585YqB5K",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28335",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28335/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28335/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28335/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28335",
          "number": 28335,
          "state": "open",
          "state_reason": null,
          "title": "RFC: Remove boost usage from kernel api / headers",
          "body": "Similarly to #28327 I wanted to open this PR to receive some opinions and better approaches.\r\n\r\nThe kernel library is currently at the stage where unwanted headers are removed from its set of headers. In practice, this means we are reducing the number of includes that are required for compiling the experimental `bitcoin-chainstate` binary. This is described in stage 1 step 3 of the [project tracking issue](https://github.com/bitcoin/bitcoin/issues/27587).\r\n\r\nCurrently the mempool is part of the kernel library. The mempool headers include the boost multi index headers. Thus any application wanting to use the kernel library and its headers will have to include the boost headers too. This is not only undesirable because of the sheer size of these headers, but also might lead to conflicts if the including application uses a different boost version.\r\n\r\nIn the approach laid out by this PR, mempool member variables and methods are declared in the header without having to include boost by either wrapping them in a struct and [pimpling](https://en.cppreference.com/w/cpp/language/pimpl) them, or making methods static implementation functions. The boost definitions are gathered into separate header (`mempool_set_definitions.h`) that is only included by implementation files that require definitions of the boost types. This allows us to retain the current architecture with roughly the same interfaces. \r\n\r\nThe approach laid out by this PR also has some, albeit small, compilation speed and size benefits. Averaged over a few of compilation runs I consistently observe faster compilation by a couple of seconds and some smaller pre-processed and compiled object sizes. The main detractor of this method is obviously the number of lines touched. However it also has the benefit of inventorizing all the files that require direct access to the mempool data structures as well getting rid of boost multi index includes in non-kernel implementation files that include the mempool, but don't directly manipulate its data structures (e.g. wallet.cpp).\r\n\r\nA much simpler alternative approach, at least on the surface, would be removing all `txmempool.h` includes from kernel library headers (see [this branch](https://github.com/TheCharlatan/bitcoin/tree/mempoolBoostSimple)). Currently this is only `validation.h`.  Due to the mutex member of `CTxMemPool` and the correspondingly defined lock decorators on the chainstate methods this becomes a bit more complicated though and I am not sure how this might be possible with the current architecture.\r\n\r\nA discussion of how and if to remove the mempool from the kernel library has so far been intentionally punted to the next stage of the kernel library development. Pimpling the mempool itself precludes this discussion, since the library could never be shipped with the `CTxMemPool` headers. Pimpling the mempool members (like done in this PR) might also make a future splitting of block and mempool validation logic into separate compilation units easier.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28335",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28335",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28335.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28335.patch"
          },
          "created_at": "2023-08-24T05:46:16Z",
          "updated_at": "2024-02-29T01:37:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T00:32:04Z",
      "updated_at": "2023-10-19T00:32:04Z",
      "source": {
        "issue": {
          "id": 1815938021,
          "node_id": "PR_kwDOABII585WGviz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28121",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28121/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28121/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28121/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28121",
          "number": 28121,
          "state": "open",
          "state_reason": null,
          "title": "include verbose \"debug-message\" field in testmempoolaccept response",
          "body": "Adds a new field `debug-message` in `testmempoolaccept` responses to include `m_debug_message` from `ValidationState`. This string is part of the complete error message thrown by the mempool in response to `sendrawtransaction`.\r\n\r\nThe extra verbosity is helpful to consumers of `testmempoolaccept`, which is sort of a debug tool anyway. \r\n\r\nexample:\r\n```\r\n{\r\n  \"txid\": \"07d7a59a7bdad4c3a5070659ea04147c9b755ad9e173c52b6a38e017abf0f5b8\",\r\n  \"wtxid\": \"5dc243b1b92ee2f5a43134eb3e23449be03d1abb3d7f3c03c836ed0f13c50185\",\r\n  \"allowed\": false,\r\n  \"reject-reason\": \"insufficient fee\",\r\n  \"debug-message\": \"rejecting replacement 07d7a59a7bdad4c3a5070659ea04147c9b755ad9e173c52b6a38e017abf0f5b8; new feerate 0.00300000 BTC/kvB <= old feerate 0.00300000 BTC/kvB\"\r\n}\r\n```",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28121",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28121",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28121.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28121.patch"
          },
          "created_at": "2023-07-21T14:47:06Z",
          "updated_at": "2024-04-16T21:34:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T01:00:14Z",
      "updated_at": "2023-10-19T01:00:14Z",
      "source": {
        "issue": {
          "id": 1699208383,
          "node_id": "PR_kwDOABII585P8ew0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27591",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27591/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27591/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27591/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27591",
          "number": 27591,
          "state": "open",
          "state_reason": null,
          "title": "rpc: distinguish between vsize and sigop-adjusted mempool vsize",
          "body": "`CTxMemPoolEntry::GetTxSize()` returns the maximum between vsize and \"sigop-adjusted size\" which is used by mempool validation and mining code as a heuristic to avoid 2DKnapsacking the block weight and sigop limits.\r\n\r\nSigop-adjusted vsize is returned as the \"vsize\" value of a transaction for RPCs retrieving mempool entry information (e.g. `getmempoolentry` and`getrawmempool`) and mempool acceptance (`testmempoolaccept` and `submitpackage`). The [documentation](https://github.com/bitcoin/bitcoin/blob/322ec63b01499c1ec52d3912ee382ebd59f2366b/src/rpc/mempool.cpp#L256) for these RPCs usually says \"virtual transaction size as defined in BIP 141\" without mentioning the sigop adjustment. At least 1 user has expressed confusion in a [tweet](https://twitter.com/mononautical/status/1646166180145577990?s=20).\r\n\r\nI think we should at least mention something in the docs about the sigop-adjusted size. But imo it would be better to provide 2 vsize results: one that is sigop-adjusted and one that isn't.\r\n\r\nSeeking feedback on what might be most clear/helpful for users.\r\n\r\nThis PR's approach is to change the result for \"vsize\" to not include sigop limits. The sigop-adjusted vsize is returned as a new result, \"mempool_vsize\".",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 1392286103,
              "node_id": "MDU6TGFiZWwxMzkyMjg2MTAz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review",
              "name": "Needs Conceptual Review",
              "description": "",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27591",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27591",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27591.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27591.patch"
          },
          "created_at": "2023-05-07T19:44:25Z",
          "updated_at": "2024-02-29T11:26:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T01:08:03Z",
      "updated_at": "2023-10-19T01:08:03Z",
      "source": {
        "issue": {
          "id": 1643033911,
          "node_id": "PR_kwDOABII585NBVge",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27351",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27351/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27351/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27351/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27351",
          "number": 27351,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: add `seeds` argument to `importdescriptors`",
          "body": "This PR introduces the ability to import BIP32 master seeds alongside xpubs. It currently expects seeds to be provided in [BIP 93/codex32](https://github.com/bitcoin/bips/blob/master/bip-0093.mediawiki) either as a single seed or as a list of shares which can be assembled via Shamir Secret Sharing.\r\n\r\nIt could be generalized to other seed formats, e.g. a hex-encoding or the old `sethdseeds` WIF format, easily enough by just attempting to parse the input in those formats and retrying until we find one that works. (Though we must be extremely careful that these formats are unambiguous! If the user imports a seed they don't expect, which fails to match the one they've backed up, the result could be coin loss. For formats with no prefix or checksum, e.g. hex-encoded bytes, we may need to require the user provide a prefix or a separate flag.)\r\n\r\nThe motivation here is that users who are importing their coins from another wallet likely have them in the form of a public descriptor (probably one of the standard `pkh(BIP44/48/84/whatever)` ones) along with a master seed (probably in some seed word format, but this is easy enough to convert to a straight BIP32 seed with an external tool). The seed, presumably, they want to minimize handling of, while the descriptor they are likely to be copy/pasting from somewhere and generally being less careful with.\r\n\r\nTo import this into Core, they currently need to construct a version of their descriptor in which xpubs are replaced by xprivs, and import that. This is cumbersome and potentially dangerous. With this extra RPC flag they are able to separately tweak their descriptor however they need, and then adding their seed data, unmodified, at the last minute in one place.\r\n\r\nMy specific use case is: I have an estate planning document which contains careful instructions for reconstructing seed data from shares which are stored separately and externally to the planning document. Meanwhile, the document itself contains a public descriptor, with checksum already computed, which is stored in several locations accessible by an open-ended set of people. If I were forced to mix the secret data with the public data, it would increase the risk of leaking the secrets as well as the risk of losing the public part.\r\n\r\n**Edit:** Other approaches, that I considered but chose not to take:\r\n\r\n* Extend the existing `sethdseed` RPC. This RPC is legacy-only and not supported by descriptor wallets, because it depends on the legacy \"bag of keys\" model where you could stick keys into the wallet and it'd \"just work\", often in surprising ways.\r\n* Add a new descriptor-wallet-based `importseed` RPC or something. This doesn't work for more-or-less the same reason; the descriptor wallet associates all its keys with `ScriptPubKeyManager`s, so we would need to add support for \"global keys\" somehow. This is a lot of work, lots of room for bikeshedding, and I worry that @achow101 will NACK anything that looks too much like a \"bag of keys\" model. (The situation would be much less bad than the legacy one, where 3rd parties could do stuff like mapping p2wpkh addresses to p2pkh ones and the wallet would just accept it ... but it would still potentially lead to user confusion about what exact conditions the wallet could sign for what descriptors, and it may constrain future wallet changes.)\r\n* Adding a `codex32(...)/1/2/3` xpriv format to the descriptor import format. This was suggested to me by @sipa and has the benefit that very closely matches the existing import model.\r\n\r\nPersonally I don't like the latter\r\n* for the reasons stated in the PR description -- I like my descriptors to be public, and my secret data to be limited to 16 bytes, and I think this is a common mode of operation for people coming from other wallets\r\n* ...and maybe worse, a common model for other wallet authors, who would refuse to nicely interoperate with this);\r\n* because it felt like enough of a change to deserve a change to one of the descriptor BIPs, but those are big enough already and it's hard to get tiny changes to propagate to all implementors of standards. Plus it felt wrong to couple codex32 with descriptors like this.i\r\n* because if you have multiple descirptors that use the same seed, it would force you to copy the seed multiple times, which is dangerous. (In some cases [BIP 389](https://github.com/bitcoin/bips/pull/1354) will make this better, but it doesn't cover everything and anyway is not accepted or implemented yet. One thing at a time :))\r\n\r\nBut what cinched it, and made me switch to the approach in the PR, was that @roconnor-blockstream pointed out to me that the codex32 model means that you can't predict, at writing-down-the-descriptor time, exactly what shares you'll be inputting. And because descriptors have a checksum which covers their entire string encoding, this means that you can't predict ahead-of-timei what will go into the `codex32(...)` slot and therefore what the total checksum ought to be. And this means that either (a) you lose the descriptor checksum, which is a Bad Idea and also inconvenient for importers who' will have to construct a checksum with `getdescriptorinfo` to get `importdescriptors` to accept it, even though said checksum had never been used to protect data in storage; or (b) you modify the descriptor checksum algorithm to be aware of `codex(...)` and to skip checksumming the data inside of that. This means even more implementation complexity that other wallets are unlikely to bring in, plus the result generalizes less easily to other seed formats (e.g. hex) which don't have checksums of their own.\r\n\r\n",
          "user": {
            "login": "apoelstra",
            "id": 1351933,
            "node_id": "MDQ6VXNlcjEzNTE5MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apoelstra",
            "html_url": "https://github.com/apoelstra",
            "followers_url": "https://api.github.com/users/apoelstra/followers",
            "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
            "organizations_url": "https://api.github.com/users/apoelstra/orgs",
            "repos_url": "https://api.github.com/users/apoelstra/repos",
            "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/apoelstra/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27351",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27351",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27351.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27351.patch"
          },
          "closed_at": "2024-04-09T14:38:39Z",
          "created_at": "2023-03-28T00:57:14Z",
          "updated_at": "2024-04-16T15:07:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T01:29:44Z",
      "updated_at": "2023-10-19T01:29:44Z",
      "source": {
        "issue": {
          "id": 1500046485,
          "node_id": "PR_kwDOABII585FocrT",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26711",
          "number": 26711,
          "state": "closed",
          "state_reason": null,
          "title": "validate package transactions with their in-package ancestor sets",
          "body": "This contains everything to make mempool/validation logic ready for package relay (see #27463).\r\n\r\nDesign goals:\r\n- Be able to gracefully deal with any arbitrary list of transactions (these come from p2p)\r\n- Validate any ancestor package so that the incentive-compatible transactions end up in our mempool.\r\n  - If the transactions would be accepted individually, they should also be accepted through `AcceptPackage`. We don't want to accidentally reject things just because we happened to download them as a package.\r\n  - Bug prior to these changes: we required `IsChildWithParents` but if there were dependencies between the parents, we could end up (1) accepting a low-feerate child or (2) rejecting a high-feerate parent CPFPing another parent. See the \"interdependent parents\" test case for a specific example.\r\n- Be DoS-resistant.\r\n   - Avoid quadratic validation costs.\r\n   - Avoid loading a lot of stuff from disk, or loading repeatedly.\r\n\r\nThere are 2 main improvements to package evaluation here:\r\n(1) We submit transactions with their in-package ancestor sets.\r\n\t-  See unit test `package_ppfp`: without this change, we would reject everything.\r\n\t- See unit test `package_ppfc`: shows that this doesn't let us do \"parent pays for child;\" we only do this when the individual and ancestor feerates meet mempool minimum feerate\r\n(2) We linearize the package transactions based on ancestor set scoring.\r\n\t- See unit test `package_needs_reorder`: without this change, if we use the original order of transactions, we would only accept 1 grandparent, even if we submit subpackages.\r\n\t- See unit test `package_desc_limits`: without this change, we accept one of the lower-feerate transactions (a bit more of a \"nice to have\" than a \"must have\" example).\r\n\r\nA description of the package validation logic (originally https://github.com/bitcoin/bitcoin/pull/26711#issuecomment-1647523520):\r\n\r\n- Basic sanitization. Quit if it's too big, inconsistent, etc.\r\n- Linearize (Topological sort only)\r\n- **PreChecks loop** For each tx, grab UTXOs to calculate fees and filter out anything we should skip:\r\n    - If already in mempool (or same txid in mempool), mark as skip\r\n    - If missing inputs or conflict, record this failure and mark this and all descendants as skip.\r\n    - If no failures or TX_SINGLE_FAILURE, continue\r\n    - For some failures that we expect due to differing chainstates, skip these transactions and their descendants, but continue.\r\n    - Otherwise, record this failure and mark that we will `quit_early` (i.e. not do the Subpackage validation loop).\r\n- Refine our linearization using the fee information.\r\n- **Subpackage validation loop** For each transaction in the new linearized order:\r\n    - Get the transaction's ancestor subpackage.\r\n    - If the feerate of this transaction is insufficient, continue;\r\n    - If the feerate of this subpackage is insufficient, continue;\r\n    - Otherwise, try to submit the subpackage, using `AcceptSingleTransaction()` if it's just 1 tx\r\n    - if at any point we get a non-fee-related error, abort all.\r\n- Call `LimitMempoolSize`\r\n- Backfill results:\r\n    - If the transaction was in mempool, check to see if it's still there in case it was trimmed in `LimitMempoolSize`.\r\n    - Try to use results from the subpackage validation loop.\r\n    - If that doesn't exist (i.e. we quit early), use results from prechecks loop.\r\n    - If that doesn't exist (i.e. we quit early and we hadn't found a failure with it yet), fill with `TX_UNKNOWN`.\r\n\r\nThis means we will call `PreChecks` for each transaction 2 times (fewer if we quit early), and run all other validation checks at most 1 time. A transaction shouldn't be validated in the subpackage validation loop more than once.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 36,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26711",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26711.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26711.patch"
          },
          "closed_at": "2023-11-10T14:21:17Z",
          "created_at": "2022-12-16T11:27:00Z",
          "updated_at": "2023-11-10T14:21:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T01:36:03Z",
      "updated_at": "2023-10-19T01:36:03Z",
      "source": {
        "issue": {
          "id": 1436104730,
          "node_id": "PR_kwDOABII585CNk-9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26451",
          "number": 26451,
          "state": "closed",
          "state_reason": null,
          "title": "Enforce incentive compatibility for all RBF replacements",
          "body": "Opening this for discussion.\r\n\r\nCurrently it's possible in our RBF rules to evict a transaction with higher mining score from our mempool, in favor of a transaction with a higher total fee but lower feerate.  This patch would fix this incentive incompatibility, by requiring that any new transaction have a mining score (as defined by the minimum of its feerate and its feerate including ancestors) to be greater than the individual feerates of all transactions that would be evicted.\r\n\r\nBecause this new feerate criteria includes the ancestors of a new transaction in the score, we are able to eliminate the prohibition against including new unconfirmed parents in a replacement transaction, a slight relaxation of the prior rules.",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 36,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26451",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26451",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26451.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26451.patch"
          },
          "closed_at": "2024-02-11T12:19:56Z",
          "created_at": "2022-11-04T13:50:15Z",
          "updated_at": "2024-02-11T12:19:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T01:48:48Z",
      "updated_at": "2023-10-19T01:48:48Z",
      "source": {
        "issue": {
          "id": 1313204802,
          "node_id": "PR_kwDOABII58472hm-",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25665",
          "number": 25665,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Add util::Result failure values, multiple error and warning messages",
          "body": "**This is based on #29906.** The non-base commits are:\r\n\r\n- [`f5c4d18bd010` refactor: Add util::Result failure values](https://github.com/bitcoin/bitcoin/pull/25665/commits/f5c4d18bd010c9af9ae84b9a507c79c3d9225f1a)\r\n- [`1376583dca0a` refactor: Use util::Result class in LoadChainstate and VerifyLoadedChainstate](https://github.com/bitcoin/bitcoin/pull/25665/commits/1376583dca0a8c34be0be53fd4d7f21b156d2133)\r\n- [`e9a5ad3f4b8c` refactor: Add util::Result multiple error and warning messages](https://github.com/bitcoin/bitcoin/pull/25665/commits/e9a5ad3f4b8ce9c21b144de35fd761333bff7a70)\r\n- [`55d7de92bbbe` test: add static test for util::Result memory usage](https://github.com/bitcoin/bitcoin/pull/25665/commits/55d7de92bbbe035c1833c89f885af14e5b243932)\r\n\r\n---\r\n\r\nAdd `util::Result` support for returning more error information and make use of it in [LoadChainstate method](https://github.com/bitcoin/bitcoin/pull/25665/commits/1376583dca0a8c34be0be53fd4d7f21b156d2133) as an initial application. Followup PR [#25722](https://github.com/bitcoin/bitcoin/pull/25722) uses it more broadly to return errors and warnings from wallet loading functions as well.\r\n\r\nThis change adds two major features to the result class:\r\n\r\n- For better error handling, adds the ability to return a value on failure, not just a value on success. This is a key missing feature that makes the result class not useful for functions like `LoadChainstate()` which produce different errors that need to be handled differently [^1].\r\n\r\n[^1]: Ability to return error values was actually present in the original implementation of [#25218](https://github.com/bitcoin/bitcoin/pull/25218), but unfortunately removed in later iterations.\r\n\r\n- For better error reporting, adds the ability to return warning messages and multiple errors, not just a single error string. This provides a way for functions to report errors and warnings in a standard way, and simplifies interfaces:\r\n\r\n    ```diff\r\n    -virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, bilingual_str& error, std::vector<bilingual_str>& warnings) = 0;\r\n    +virtual util::Result<std::unique_ptr<Wallet>> loadWallet(const std::string& name) = 0;\r\n    ```\r\n\r\n    ```diff\r\n    -std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error);\r\n    +util::Result<std::unique_ptr<WalletDatabase>, DatabaseError> MakeDatabase(const fs::path& path, const DatabaseOptions& options);\r\n   ```\r\n\r\nThis change also makes some more minor improvements:\r\n\r\n- Smaller type size. `util::Result<int>` is 16 bytes, and `util::Result<void>` is 8 bytes. Previously both were 72 bytes.\r\n\r\n- Broader type compatibility. Supports noncopyable and nonmovable success and error types.\r\n\r\n### Alternatives & design notes\r\n\r\nThe main goal for the `util::Result` class is to provide a standard way for functions to report error and warnings strings. The interface tries to make it easy to provide detailed error feedback to end users, without cluttering code or making it harder to return other result information. There have been multiple iterations of the design using different internal representations and providing different capabilities:\r\n\r\n|   | Representation (approximate)                   | Notes |\r\n|---|------------------------------------------------|-------|\r\n| _1_ | `tuple<T,optional<bilingual_str>>`        | Original #25218 implementation in da98fd2efc1a6b9c6e876cf3e227a8c2e9a10827. Good capabilities, but larger type size. Supports error standardized error reporting and customized error handling with failure values. |\r\n| _2_ | `variant<T,bilingual_str>`                | Final #25218 implementation in 7a45c33d1f8a758850cf8e7bd6ad508939ba5c0d. No support for returning failure values so not useful in many cases.\r\n| _3_ | `variant<monostate,T,F>`                 | Pending #25601 implementation that allows choosing whether to use standardized error reporting or return custom failure values, but doesn't support having both at the same time, like approaches _(1)_, _(4)_, _(5)_, _(6)_ do. |\r\n | _4_ | `tuple<variant<T,F>,bilingual_str>`      | Original #25608 implementation in c29d3008de9314dd463ed08e8bff39fe55324498. Basically the same as _(1)_ except it uses separate success and failure types instead of the same type. Using separate success and failure types makes the result class a little less flexible but can help avoid some ambiguity and inconsistent result states. |\r\n| _5_ | `tuple<T,optional<bilingual_str>>`        | Final #25608 implementation in dd91f294206ac87b213d23bb76656a0a5f0f4781. Essentially the same as original implementation _(1)_ except has some usability improvements. |\r\n| _6_ | `tuple<T,unique_ptr<tuple<F,bilingual_str>>` | Pending #25665 implementation (this PR). Supports returning failure values, uses separate success and failure types to avoid ambiguity, uses `unique_ptr` to reduce result type size, and avoids heap allocation in the happy path. |\r\n\r\n### Prior discussions & history\r\n\r\n- _furszy_ introduced a `BResult` class providing a standard error reporting mechanism in [#25218](https://github.com/bitcoin/bitcoin/pull/25218). It was renamed to `util::Result` in [#25721](https://github.com/bitcoin/bitcoin/pull/25721) but kept the same representation and capabilities.\r\n\r\n- _MarcoFalke_ suggested using `BResult` for the `LoadChainstate` function in [#25308 (comment)](https://github.com/bitcoin/bitcoin/pull/25308#issuecomment-1181674645). Inability to use `BResult` there due to lack of support for failure values led to initial work on [#25608](https://github.com/bitcoin/bitcoin/pull/25608).\r\n\r\n- _w0xlt_ wrote a `StructuredResult` class in [#25308](https://github.com/bitcoin/bitcoin/pull/25601) adding the ability to return failure values but sacrificing standard error reporting, which led to more work on [#25608](https://github.com/bitcoin/bitcoin/pull/25608).\r\n\r\n- _martinus_ suggested a space optimization in [#25608 (comment)](https://github.com/bitcoin/bitcoin/pull/25608#discussion_r921049409) that also made it easier to support distinct failure & success types, leading to [#25665](https://github.com/bitcoin/bitcoin/pull/25665) as a replacement for [#25608](https://github.com/bitcoin/bitcoin/pull/25608).",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 38,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25665",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25665.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25665.patch"
          },
          "created_at": "2022-07-21T12:46:09Z",
          "updated_at": "2024-04-26T00:55:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T02:10:02Z",
      "updated_at": "2023-10-19T02:10:02Z",
      "source": {
        "issue": {
          "id": 839117639,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTk5MTgyNzQ5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21515",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21515/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21515/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21515/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21515",
          "number": 21515,
          "state": "open",
          "state_reason": null,
          "title": "Erlay: bandwidth-efficient transaction relay protocol",
          "body": "Erlay Project Tracking: #28646\r\n\r\n-----------\r\n\r\nThis is an implementation of  [Erlay](https://arxiv.org/abs/1905.10518) , using primitives in the BIP-330 (see the updated spec  [here](https://github.com/naumenkogs/bips/blob/bip_0330_updates/bip-0330.mediawiki) ). Please refer to these two to understand the design. My talk is [here](https://youtu.be/YxsjdIl0034?t=670).\r\n\r\n### Abstract\r\n\r\nErlay uses both flooding (announcing using INV messages to all peers) and reconciliation to announce transactions. Flooding is expensive, so Erlay seeks to use it sparingly and in strategic locations - only well-connected publicly reachable nodes flood transactions to other publicly reachable nodes via outbound connections. Since every unreachable node is directly connected to several reachable nodes, this policy ensures that a transaction is quickly propagated to be within one hop from most of the nodes in the network.\r\n\r\nAll transactions not propagated through flooding are propagated through efficient set reconciliation. To do this, every node keeps a reconciliation set for each peer, in which transactions are placed which would have been announced using INV messages absent this protocol. Every 2 seconds every node chooses a peer from its outbound connections in a predetermined order to reconcile with, resulting in both sides learning the transactions known to the other side. After every reconciliation round, the corresponding reconciliation set is cleared.\r\n\r\nI think both paper and the BIP motives the changes, but I’ll mention them briefly once again here:\r\n* save 40% of the bandwidth consumed by a node\r\n* increase network connectivity for almost no bandwidth or latency cost\r\n* improves privacy as a side-effect\r\n\r\n### How to review\r\n\r\nI suggest doing `make clean && autogen.sh && configure` before you try building it locally.",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 26,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21515",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21515",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21515.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21515.patch"
          },
          "created_at": "2021-03-23T20:58:32Z",
          "updated_at": "2024-02-26T02:02:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10715626094,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAJ-s3pu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10715626094",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T18:28:20Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T18:41:42Z",
      "updated_at": "2023-10-19T18:41:42Z",
      "source": {
        "issue": {
          "id": 1952153535,
          "node_id": "PR_kwDOABII585dRO93",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28687",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28687/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28687/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28687/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28687",
          "number": 28687,
          "state": "open",
          "state_reason": null,
          "title": "C++20 std::views::reverse",
          "body": "C++20 introduces [`std::ranges::views::reverse`](https://en.cppreference.com/w/cpp/ranges/reverse_view), which allows us to drop our own `reverse_iterator.h` implementation and also makes it easier to chain views (even though I think we currently don't use this).\r\n\r\nIn draft until our minimum dependencies are bumped to pass CI:\r\n- `no wallet, libbitcoinkernel`: requires clang-16",
          "user": {
            "login": "stickies-v",
            "id": 69010457,
            "node_id": "MDQ6VXNlcjY5MDEwNDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stickies-v",
            "html_url": "https://github.com/stickies-v",
            "followers_url": "https://api.github.com/users/stickies-v/followers",
            "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
            "organizations_url": "https://api.github.com/users/stickies-v/orgs",
            "repos_url": "https://api.github.com/users/stickies-v/repos",
            "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stickies-v/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/66",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/66",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/66/labels",
            "id": 10314936,
            "node_id": "MI_kwDOABII584AnWS4",
            "number": 66,
            "state": "open",
            "title": "28.0",
            "creator": {
              "login": "DrahtBot",
              "id": 39886733,
              "node_id": "MDQ6VXNlcjM5ODg2NzMz",
              "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/DrahtBot",
              "html_url": "https://github.com/DrahtBot",
              "followers_url": "https://api.github.com/users/DrahtBot/followers",
              "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
              "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
              "repos_url": "https://api.github.com/users/DrahtBot/repos",
              "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 6,
            "closed_issues": 5,
            "created_at": "2023-12-15T12:08:23Z",
            "updated_at": "2024-04-25T15:43:34Z"
          },
          "locked": false,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28687",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28687",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28687.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28687.patch"
          },
          "created_at": "2023-10-19T12:37:13Z",
          "updated_at": "2024-04-19T14:09:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10717967266,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAJ-1zOi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10717967266",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T23:46:18Z"
    },
    {
      "event": "labeled",
      "id": 10722430474,
      "node_id": "LE_lADOABII5850QVJBzwAAAAJ_G04K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10722430474",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-20T09:57:25Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-20T11:56:56Z",
      "updated_at": "2023-10-20T11:56:56Z",
      "source": {
        "issue": {
          "id": 1954053513,
          "node_id": "PR_kwDOABII585dXq6y",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28690",
          "number": 28690,
          "state": "open",
          "state_reason": null,
          "title": "build: Introduce internal kernel library",
          "body": "This PR introduces a new `libbitcoin_kernel` internal library. It completes the internal library design as laid out in [doc/design/libraries.md](https://github.com/bitcoin/bitcoin/blob/master/doc/design/libraries.md). The external `libbitcoinkernel` library now uses the source lists of the internal library for its compilation.\r\n\r\nShould also address https://github.com/bitcoin/bitcoin/issues/28548.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 25,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28690",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28690",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28690.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28690.patch"
          },
          "created_at": "2023-10-20T11:01:03Z",
          "updated_at": "2024-03-12T01:06:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1685916441,
      "node_id": "PRR_kwDOABII585kfQsZ",
      "url": null,
      "actor": null,
      "commit_id": "7619c275dae3b2b0df8cd8071bc2250556350c49",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1685916441",
      "submitted_at": "2023-10-24T18:23:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T19:22:13Z",
      "updated_at": "2023-10-26T19:22:13Z",
      "source": {
        "issue": {
          "id": 1963782198,
          "node_id": "PR_kwDOABII585d4Wnx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28737",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28737/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28737/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28737/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28737",
          "number": 28737,
          "state": "closed",
          "state_reason": null,
          "title": "doc: Fix bugprone-lambda-function-name errors",
          "body": "Inside a lambda, `__func__` will evaluate to something like `\"operator()\"`. Fix this by either removing it, or by using the real name.\r\n\r\nhttps://clang.llvm.org/extra/clang-tidy/checks/bugprone/lambda-function-name.html",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28737",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28737",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28737.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28737.patch"
          },
          "closed_at": "2023-10-30T13:54:19Z",
          "created_at": "2023-10-26T15:05:06Z",
          "updated_at": "2023-10-30T13:56:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 10809901870,
      "node_id": "LE_lADOABII5850QVJBzwAAAAKEUgMu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10809901870",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-30T15:55:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1809939629,
      "node_id": "IC_kwDOABII585r4Xyt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1809939629",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-14T10:29:27Z",
      "updated_at": "2023-11-14T14:23:52Z",
      "author_association": "MEMBER",
      "body": "It would be useful to add a `mempool_backwards_compatibility.py` test to illustrate how the new rules interact with older nodes. It could have two modern nodes and one v25 (or v26) node. Some of the tests you deleted in this branch could be moved there. E.g. the test could demonstrate how RBF rule 2 is not enforced when relaying to the new node, but it is when relaying to the v25 node.\r\n\r\nBenchmarks on a 2019 MacBook Pro (2,3 GHz 8-Core Intel Core i9), plugged in:\r\n\r\n```\r\n% src/bench/bench_bitcoin -filter=.*Mem.* -min-time=10000\r\n\r\n|      330,557,188.67 |                3.03 |    1.5% |     10.77 | `ComplexMemPool`\r\n|      451,529,273.50 |                2.21 |    2.8% |     10.01 | `MemPoolAddTransactions`\r\n|            2,847.13 |          351,231.06 |    2.7% |     10.93 | `MemPoolAncestorsDescendants`\r\n|           11,047.90 |           90,514.97 |    2.5% |     10.69 | `MemPoolMiningScoreCheck`\r\n|        4,328,796.04 |              231.01 |    1.1% |     10.99 | `MempoolCheck`\r\n|           36,268.80 |           27,571.91 |    2.9% |     11.17 | `MempoolEviction`\r\n|        9,123,684.25 |              109.60 |    1.4% |     10.74 | `RpcMempool`\r\n```\r\n\r\nUpdate: added bench for master@c2d4e40e454ba0c7c836a849b6d15db4850079f2:\r\n\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|      302,677,055.25 |                3.30 |    3.5% |     10.76 | `ComplexMemPool`\r\n|      100,167,478.00 |                9.98 |    2.5% |     11.08 | `MempoolCheck`\r\n|           43,759.84 |           22,852.00 |    4.1% |     11.42 | `MempoolEviction`\r\n|       10,235,913.25 |               97.70 |    3.5% |     10.66 | `RpcMempool`\r\n```",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1809939629",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "reviewed",
      "id": 1729366575,
      "node_id": "PRR_kwDOABII585nFAov",
      "url": null,
      "actor": null,
      "commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1729366575",
      "submitted_at": "2023-11-14T10:29:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1729419761,
      "node_id": "PRR_kwDOABII585nFNnx",
      "url": null,
      "actor": null,
      "commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1729419761",
      "submitted_at": "2023-11-14T12:23:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1729707068,
      "node_id": "PRR_kwDOABII585nGTw8",
      "url": null,
      "actor": null,
      "commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Couple more comments / questions. To be continued...",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1729707068",
      "submitted_at": "2023-11-14T14:27:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-14T17:21:11Z",
      "updated_at": "2023-11-14T17:21:11Z",
      "source": {
        "issue": {
          "id": 1668056618,
          "node_id": "I_kwDOABII585jbIYq",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27463",
          "number": 27463,
          "state": "open",
          "state_reason": null,
          "title": "Package Relay Project Tracking",
          "body": "This issue will be edited frequently to reflect the current status of the project.\r\n\r\n### What is ready for review now?\r\n:point_down: :point_down: :point_down: :point_down: :point_down: :point_down: :point_down:\r\np2p: #28970\r\nmempool: #28984\r\n:point_up: :point_up: :point_up: :point_up: :point_up: :point_up: :point_up: \r\n\r\n### Why does the roadmap look like this?\r\n:point_right: #29319 :point_left: \r\n\r\n### Tasks and PRs\r\n**(1) multi-parent-1-child package validation**\r\n\r\nWhat we get: the ability to validate multiple transactions, including CPFP of transactions below the mempool minimum feerate. An RPC to submit things locally.\r\n\r\n<details><summary>See PRs</summary>\r\n\r\n- Enable validation of multiple transactions in MemPoolAccept\r\n  - [x] Dependency: #21062\r\n  - [x] Dependency: #23381\r\n  - [x] Main feature 1/2: #20833\r\n  - [x] Main feature 2/2: #21800\r\n  - [x] Followup: #22084\r\n- Enable package CPFP\r\n  - [x] Main feature 1/2: #22674\r\n  - [x] Followup: #24310\r\n  - [x] Followup: #23804\r\n  - [x] Main feature 2/2: #24152\r\n  - [x] short term bug fix: avoid the risk of below-minrelaytxfee transactions hanging around forever in the mempool  #26933\r\n- RPC access\r\n  - [x] #24836\r\n  - [x] #26646\r\n  - [x] #27609\r\n  - [x] #28848\r\n  - [x] #28950\r\n  - [x] Followup: #29722\r\n  - [x] Followup: #29735 \r\n- Fuzzing and bug fixes\r\n  - [x] #28450\r\n  - [x] #28764\r\n  - [x] #28825 \r\n  - [x] Bug fix: #28251\r\n  - [x] Bug fix: #28471\r\n  - [x] Bug fix: #28472\r\n</details>\r\n\r\n**(2a) Topologically Restricted Until Confirmation (v3) transaction policy**\r\n\r\nWhat we get: an opt-in policy for anti-pinning in single transaction or 1-parent-1-child package scenarios. Also, package CPFP of 0-fee parent and package RBF for restricted topologies prior to cluster mempool.\r\n- Topologically Restricted Until Confirmation (v3) transaction policy\r\n  - [x] Main feature: #28948\r\n  - [x] Followup: #29424\r\n  - [x] Sibling Eviction: #29306\r\n  - [ ] Enable v3 on mainnet: #29496\r\n- Also see: #29873\r\n- Also see: #29427\r\n\r\n**(2b) Package RBF for cluster size 2**\r\n- Enable Package RBF for 1-parent-1-child situations\r\n   - [x] Dependency: #22796 \r\n   - [x] Dependency: #22675 \r\n   - [x] Dependency: #22855\r\n   - [x] Dependency: #29242\r\n     - [x] Followup: #29724\r\n     - [ ] #29757\r\n   - [ ] Main feature: #28984\r\n\r\n**(3) 1-parent-1-child package relay**\r\n\r\nWhat we get: package relay of 1-parent-1-child packages.\r\nProtocols like LN can use this to create 0-fee presigned transactions with a single, 0-value anchor output; 0-fee commitment transactions can replace each other using the fees of the child attached to the anchor.\r\nThis should provide an adequate replacement for CPFP carve out, which is helpful for the next step (see #29319).\r\n\r\n- Opportunistically submit 1-parent-1-child packages\r\n  - [x] Dependency: #28785\r\n  - [ ] WIP #28970\r\n- Try multiple peers for orphan resolution, make orphanage more robust\r\n  - [x] Dependency: #28785\r\n  - [x] Dependency: #28199\r\n  - [x] Dependency: #28364\r\n  - [ ] Main feature: #28031 \r\n  - [ ] WIP: token bucket orphanage protection\r\n\r\n**(4) cluster mempool**\r\n\r\nWhat we get: the ability to quickly assess the incentive compatibility of transactions, safer eviction, more incentive-compatible and pinning-free RBF rules.\r\n\r\n- [ ] Cluster Mempool #27677\r\n  - [ ] #28676\r\n\r\n\r\n**(5) more general package relay**\r\n\r\nGoals: propagate incentive-compatible packages that are more compelx than 1p1c, safely evaluate replacements within packages, handle orphans better.\r\n\r\n- WIP: Package RBF with less restrictive topologies\r\n- WIP: Package validation of less restrictive topologies\r\n- Ephemeral Anchors\r\n  - #29001\r\n  - bitcoin/bips/pull/1524\r\n- [ ] use BIP 331 ancestor package relay for orphan-handling\r\n  - [ ] bitcoin/bips/pull/1382\r\n  - [ ] #27742 \r\n- [ ] Some sender-initiated package relay protocol using chunks (?)\r\n\r\n<details><summary>See also:</summary>\r\n\r\nSuperseded/Deferred Work\r\n- Sub-package evaluation with ancestor packages\r\n- [x] #28758\r\n  - [x] #28808\r\n  - #26711 \r\n  - #28813\r\n- #27018\r\n- #25038\r\n- #26403\r\n\r\nPrehistory\r\n- [x] #16400 \r\n- #16401 \r\n- #14895 \r\n- #19621 \r\n- https://gist.github.com/sdaftuar/8756699bfcad4d3806ba9f3396d4e66a\r\n</details>",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 15,
          "created_at": "2023-04-14T11:14:50Z",
          "updated_at": "2024-04-16T07:30:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-17T17:46:05Z",
      "updated_at": "2023-11-17T17:46:05Z",
      "source": {
        "issue": {
          "id": 1991065461,
          "node_id": "PR_kwDOABII585fUlj4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28863",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28863/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28863/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28863/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28863",
          "number": 28863,
          "state": "closed",
          "state_reason": null,
          "title": "wallet, mempool: propagete `checkChainLimits` error message to wallet",
          "body": "\r\n* Requested in [#28391 comment](https://github.com/bitcoin/bitcoin/pull/28391#discussion_r1382997719)\r\n\r\n* The error message is static when a new transaction is created and package limit is reached.\r\n`Transaction has too long of a mempool chain`\r\nWhile the [`CTxMempool::CheckPackageLimits`](https://github.com/bitcoin/bitcoin/blob/5800c558eb5efb4839ed00d6967e43306d68e1c3/src/txmempool.cpp#L199) provide explicit information about the error message.\r\n* This PR updates [`CTxMempool::CheckPackageLimits`](https://github.com/bitcoin/bitcoin/blob/5800c558eb5efb4839ed00d6967e43306d68e1c3/src/txmempool.cpp#L199) return type to `util::Result<void>`, `CheckPackageLimits` now returns void when package limit is not hit, and returns the error string whenever package limit is hit instead of using out parameter `errString`.\r\n* The PR updates [`checkChainLimits`](https://github.com/bitcoin/bitcoin/blob/5800c558eb5efb4839ed00d6967e43306d68e1c3/src/node/interfaces.cpp#L703) return type to `util::Result<void>`.\r\n\r\n* Now the wallet `CreateTransactionInternal` will have access to the package limit error string whenever its hit.\r\n* Also Updated functional test to reflect the error message from `CTxMempool::CheckPackageLimits` output.\r\n\r\n\r\n",
          "user": {
            "login": "ismaelsadeeq",
            "id": 48946461,
            "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismaelsadeeq",
            "html_url": "https://github.com/ismaelsadeeq",
            "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
            "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
            "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
            "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
            "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28863",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28863",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28863.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28863.patch"
          },
          "closed_at": "2023-12-18T15:35:39Z",
          "created_at": "2023-11-13T16:57:33Z",
          "updated_at": "2023-12-19T16:20:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1739566572,
      "node_id": "PRR_kwDOABII585nr63s",
      "url": null,
      "actor": null,
      "commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739566572",
      "submitted_at": "2023-11-20T11:54:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739706549,
      "node_id": "PRR_kwDOABII585nsdC1",
      "url": null,
      "actor": null,
      "commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739706549",
      "submitted_at": "2023-11-20T12:32:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739853534,
      "node_id": "PRR_kwDOABII585ntA7e",
      "url": null,
      "actor": null,
      "commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739853534",
      "submitted_at": "2023-11-20T13:42:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739865937,
      "node_id": "PRR_kwDOABII585ntD9R",
      "url": null,
      "actor": null,
      "commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739865937",
      "submitted_at": "2023-11-20T13:48:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "commented",
      "id": 1819105431,
      "node_id": "IC_kwDOABII585sbViX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1819105431",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T13:53:12Z",
      "updated_at": "2023-11-20T13:53:12Z",
      "author_association": "MEMBER",
      "body": "@Sjors I believe most if not all of this PR will be rewritten, and split up into several components. The goal here is just to give an idea of the high-level interactions with other changes (wallet behavior, package validation/relay/RBF, ...). I don't think a detailed line-by-line code review at this stage is a good use of your time.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1819105431",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "mentioned",
      "id": 11012203305,
      "node_id": "MEE_lADOABII5850QVJBzwAAAAKQYOMp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11012203305",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T13:53:13Z"
    },
    {
      "event": "subscribed",
      "id": 11012203324,
      "node_id": "SE_lADOABII5850QVJBzwAAAAKQYOM8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11012203324",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T13:53:13Z"
    },
    {
      "event": "reviewed",
      "id": 1739885361,
      "node_id": "PRR_kwDOABII585ntIsx",
      "url": null,
      "actor": null,
      "commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739885361",
      "submitted_at": "2023-11-20T13:58:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739889097,
      "node_id": "PRR_kwDOABII585ntJnJ",
      "url": null,
      "actor": null,
      "commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739889097",
      "submitted_at": "2023-11-20T14:00:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739900168,
      "node_id": "PRR_kwDOABII585ntMUI",
      "url": null,
      "actor": null,
      "commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739900168",
      "submitted_at": "2023-11-20T14:06:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739906712,
      "node_id": "PRR_kwDOABII585ntN6Y",
      "url": null,
      "actor": null,
      "commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739906712",
      "submitted_at": "2023-11-20T14:09:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739940128,
      "node_id": "PRR_kwDOABII585ntWEg",
      "url": null,
      "actor": null,
      "commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739940128",
      "submitted_at": "2023-11-20T14:24:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "reviewed",
      "id": 1739947219,
      "node_id": "PRR_kwDOABII585ntXzT",
      "url": null,
      "actor": null,
      "commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1739947219",
      "submitted_at": "2023-11-20T14:27:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "commented",
      "id": 1819230080,
      "node_id": "IC_kwDOABII585sbz-A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1819230080",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T15:00:32Z",
      "updated_at": "2023-11-20T15:44:36Z",
      "author_association": "MEMBER",
      "body": "I was wondering if we can drop RBF rule 5 (in a followup), but I'm guessing not really. My initial thinking was the cluster limit could be used instead. But `CalculateMiningScoreOfReplacementTx` only checks that the _new_ cluster doesn't get too big.\r\n\r\nBut does the new cluster system make it less of a burden to have large numbers of transactions appear and disappear from the mempool?\r\n\r\n—\r\n\r\nI'm also trying to understand if dropping the [CPFP carveout](https://bitcoinops.org/en/topics/cpfp-carve-out/) is fine. The original scenario described on the [mailistlist](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016518.html):\r\n\r\n\r\n```\r\nTX_important\r\n  * output Alice <- child_a_1 <- child_a_2 <- … -< child_a_25\r\n                   (^ intentionally low fees so it doesn't confirm before timeout)\r\n  * output Bob: child_b_1\r\n                ^ high fee\r\n```\r\n  \r\nThe carveout rule allows Bob's `child_b_1`, despite Alice having used up the 25 ancestor limit for TX_important. And alice can't use the carveout to just add child_a_26, because child_26 has more than one unconfirmed ancestor.\r\n\r\nSo what happens in the cluster world?\r\n\r\nFor simplicity, let's set `-limitclustercount` to 26 (the default is 100 in this PR). Without the CPFP carveout, can Bob still insert `child_b_1`?\r\n\r\nMy understanding is that he can't, because `ClusterSizeChecks` will fail.\r\n\r\nInstead of failing, can we check if it's possible to evict the lowest value chunk? Though it introduces an implicit RBF-like mechanism… If it were possible, then `child_a_25` would be evicted from the cluster as long as it has a longer fee rate than `child_b_1`.\r\n\r\nAlice might make sure that the fee rates of `child_a_1` … `child_a_25` increase such that there's only one chunk. That just requires Bob to use a higher fee rate.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1819230080",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "reviewed",
      "id": 1740177374,
      "node_id": "PRR_kwDOABII585nuP_e",
      "url": null,
      "actor": null,
      "commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1740177374",
      "submitted_at": "2023-11-20T16:04:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "commented",
      "id": 1819490214,
      "node_id": "IC_kwDOABII585sczem",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1819490214",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-20T17:16:02Z",
      "updated_at": "2023-11-20T17:20:44Z",
      "author_association": "MEMBER",
      "body": "> I don't think a detailed line-by-line code review at this stage is a good use of your time.\r\n\r\nThat's not what I'm trying to do. I strategically / haphazardly picked a dozen lines to ask questions about to get a better understanding of the whole thing. Based on IRC chat today, I'll wait now for the upcoming update.\r\n\r\nRelevant IRC log: https://bitcoin-irc.chaincode.com/bitcoin-core-dev/2023-11-20#984780;",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1819490214",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T15:17:12Z",
      "updated_at": "2023-11-27T15:17:12Z",
      "source": {
        "issue": {
          "id": 2012508541,
          "node_id": "PR_kwDOABII585gc3y_",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28948",
          "number": 28948,
          "state": "closed",
          "state_reason": null,
          "title": "v3 transaction policy for anti-pinning",
          "body": "See #27463 for overall package relay tracking.\r\n\r\nDelving Bitcoin discussion thread: https://delvingbitcoin.org/t/v3-transaction-policy-for-anti-pinning/340\r\nDelving Bitcoin discussion for LN usage: https://delvingbitcoin.org/t/lightning-transactions-with-v3-and-ephemeral-anchors/418\r\n\r\nRationale:\r\n- There are various pinning problems with RBF and our general ancestor/descendant limits. These policies help mitigate many pinning attacks and make package RBF feasible (see #28984 which implements package RBF on top of this). I would focus the most here on Rule 3 pinning. [1][2]\r\n- Switching to a cluster-based mempool (see #27677 and #28676) requires the removal of CPFP carve out, which applications depend on. V3 + package RBF + ephemeral anchors + 1-parent-1-child package relay provides an intermediate solution.\r\n\r\nV3 policy is for \"Priority Transactions.\" [3][4] It allows users to opt in to more restrictive topological limits for shared transactions, in exchange for the more robust fee-bumping abilities that offers. Even though we don't have cluster limits, we are able to treat these transactions as having as having a maximum cluster size of 2.\r\n\r\nImmediate benefits:\r\n\r\n- You can presign a transaction with 0 fees (not just 1sat/vB!) and add a fee-bump later.\r\n- Rule 3 pinning is reduced by a significant amount, since the attacker can only attach a maximum of 1000vB to your shared transaction.\r\n \r\nThis also enables some other cool things (again see #27463 for overall roadmap):\r\n- Ephemeral Anchors\r\n- Package RBF for these 1-parent-1-child packages. That means e.g. a commitment tx + child can replace another commitment tx using the child's fees.\r\n- We can transition to a \"single anchor\" universe without worrying about package limit pinning. So current users of CPFP carve out would have something else to use.\r\n- We can switch to a cluster-based mempool [5] (#27677 #28676), which removes CPFP carve out [6].\r\n\r\n[1]: Original mailing list post and discussion about RBF pinning problems https://gist.github.com/glozow/25d9662c52453bd08b4b4b1d3783b9ff, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019817.html\r\n[2]: A FAQ is \"we need this for cluster mempool, but is this still necessary afterwards?\" There are some pinning issues that are fixed here and not fully fixed in cluster mempool, so we will still want this or something similar afterward.\r\n[3]: Mailing list post for v3 https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020937.html\r\n[4]: Original PR #25038 also contains a lot of the discussion\r\n[5]: https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393/7\r\n[6]: https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393#the-cpfp-carveout-rule-can-no-longer-be-supported-12",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 84,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28948",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28948.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28948.patch"
          },
          "closed_at": "2024-02-10T04:38:12Z",
          "created_at": "2023-11-27T15:17:11Z",
          "updated_at": "2024-03-01T11:54:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-28T13:58:13Z",
      "updated_at": "2023-11-28T13:58:13Z",
      "source": {
        "issue": {
          "id": 1995651017,
          "node_id": "PR_kwDOABII585fkNjm",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28886",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28886/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28886/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28886/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28886",
          "number": 28886,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Replace sets of txiter with CTxMemPoolEntryRefs",
          "body": "Currently the mempool returns and consumes sets of multiindex iterators in its public API. A likely motivation for this over working with references to the actual values is that the multi index interface works with these iterators and not with pointers or references to the actual values.\r\n\r\nHowever, using the iterator type in the `setEntries` set provides little benefit in practice as applied currently. Its purpose, ownership, and safety semantics often remain ambiguous, and it is hardly used for actually iterating through the data structures. So replace it where possible with `CTxMemPoolEntryRef`s.\r\n\r\nSince `CTxMemPoolEntry` itself refers to its Parents and Children by `CTxMemPoolEntryRef` and not `txiter`, this allowed for an overall reduction of calls to `iterator_to`. See the [docs](https://www.boost.org/doc/libs/1_83_0/libs/multi_index/doc/tutorial/indices.html#iterator_to) on `iterator_to` for more guidance.\r\n\r\nNo change in the performance of the mempool code was observed in my benchmarks.\r\n\r\nThis also makes the goal of eliminating boost types from the headers as done in https://github.com/bitcoin/bitcoin/pull/28335 more feasible.\r\n",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28886",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28886",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28886.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28886.patch"
          },
          "closed_at": "2024-03-10T07:58:36Z",
          "created_at": "2023-11-15T22:07:32Z",
          "updated_at": "2024-03-10T07:58:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T16:25:30Z",
      "updated_at": "2023-11-29T16:25:30Z",
      "source": {
        "issue": {
          "id": 2016966837,
          "node_id": "PR_kwDOABII585gsIyD",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28970",
          "number": 28970,
          "state": "open",
          "state_reason": null,
          "title": "p2p: opportunistically accept 1-parent-1-child packages",
          "body": "This enables 1p1c packages to propagate in the \"happy case\" (i.e. not reliable if there are adversaries) and contains a lot of package relay-related code. See https://github.com/bitcoin/bitcoin/issues/27463 for overall package relay tracking.\r\n\r\nRationale: This is \"non-robust 1-parent-1-child package relay\" which is immediately useful.\r\n- Relaying 1-parent-1-child CPFP when mempool min feerate is high would be a subset of all package relay use cases, but a pretty significant improvement over what we have today, where such transactions don't propagate at all. [1]\r\n- Today, a miner can run this with a normal/small maxmempool to get revenue from 1p1c CPFP'd transactions without losing out on the ones with parents below mempool minimum feerate.\r\n- The majority of this code is useful for building more featureful/robust package relay e.g. see the code in #27742.\r\n\r\nThe first 2 commits are followups from #29619:\r\n- https://github.com/bitcoin/bitcoin/pull/29619#discussion_r1523094034\r\n- https://github.com/bitcoin/bitcoin/pull/29619#discussion_r1519819257\r\n\r\nQ: What makes this short of a more full package relay feature?\r\n\r\n(1) it only supports packages in which 1 of the parents needs to be CPFP'd by the child. That includes 1-parent-1-child packages and situations in which the other parents already pay for themselves (and are thus in mempool already when the package is submitted). More general package relay is a future improvement that requires more engineering in mempool and validation - see #27463.\r\n\r\n(2) We rely on having kept the child in orphanage, and don't make any attempt to protect it while we wait to receive the parent. If we are experiencing a lot of orphanage churn (e.g. an adversary is purposefully sending us a lot of transactions with missing inputs), we will fail to submit packages. This limitation has been around for 12+ years, see #27742 which adds a token bucket scheme for protecting package-related orphans at a limited rate per peer.\r\n\r\n(3) Our orphan-handling logic is somewhat opportunistic; we don't make much effort to resolve an orphan beyond asking the child's sender for the parents. This means we may miss packages if the first sender fails to give us the parent (intentionally or unintentionally). To make this more robust, we need receiver-side logic to retry orphan resolution with multiple peers. This is also an existing problem which has a proposed solution in #28031.\r\n\r\n[1]: see this writeup and its links https://github.com/bitcoin/bips/blob/02ec218c7857ef60914e9a3d383b68caf987f70b/bip-0331.mediawiki#propagate-high-feerate-transactions",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28970",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28970.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28970.patch"
          },
          "created_at": "2023-11-29T16:25:29Z",
          "updated_at": "2024-04-25T14:20:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11173066958,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAKZ93jO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11173066958",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T20:01:38Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T09:35:31Z",
      "updated_at": "2023-12-07T09:35:31Z",
      "source": {
        "issue": {
          "id": 2030275366,
          "node_id": "PR_kwDOABII585hZXQM",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29019",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29019/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29019/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29019/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29019",
          "number": 29019,
          "state": "closed",
          "state_reason": null,
          "title": "mempool: Don't sort in entryAll",
          "body": "Current call sites of entryAll do not require the entries to be sorted, so iterate through mapTx directly to retrieve the entries instead of using SortedDepthAndScore.\r\n\r\nThis is a follow up to #28391 and was noted here https://github.com/bitcoin/bitcoin/pull/28391#discussion_r1418261403.\r\n",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29019",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29019",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29019.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29019.patch"
          },
          "closed_at": "2024-01-05T12:28:50Z",
          "created_at": "2023-12-07T09:24:57Z",
          "updated_at": "2024-01-05T12:28:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11184375069,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAKapAUd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11184375069",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T16:49:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11184482832,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAKapaoQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11184482832",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T16:59:36Z"
    },
    {
      "event": "unlabeled",
      "id": 11184594196,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAKap10U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11184594196",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T17:10:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T19:57:07Z",
      "updated_at": "2023-12-07T19:57:07Z",
      "source": {
        "issue": {
          "id": 2029503846,
          "node_id": "PR_kwDOABII585hWxlj",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29016/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29016",
          "number": 29016,
          "state": "open",
          "state_reason": null,
          "title": "RPC: add new `listmempooltransactions`",
          "body": "## Proposed Update\r\n\r\nAdd a new RPC endpoint, `listmempooltransactions`. Takes as args a `start_sequence` and `verbose`.\r\n\r\nReturns: \r\n- if verbose false, list of txids + their `entry_sequence` where each entry's `entry_sequence` >= the provided `start_sequence.\r\n- if verbose true, raw tx output info including each entry's `entry_sequence`.\r\n\r\n\r\nBuilds on work done in #19572.\r\n\r\n## Rationale\r\nThe current mempool RPCs are lacking an ability to scan for updates in a more efficient manner. You can subscribe for updates via the ZMQ pipeline, but even this is inefficient to recover from if your consumer app falls offline.\r\n\r\nZMQ also is a push protocol, and doesn't provide a rate-limiting mechanism.\r\n\r\nIn the case of core-lightning, we don't assume access to bitcoin-core/ZMQ, so we're unable to do efficient mempool querying. There have been some recent CVEs come to light where having optional access to mempool updates may prove useful.\r\n\r\nPaging, filtering by last seen, and the addition of full tx data in the call makes mempool data more readily available to any client app. This is good for self-sovereignty as it reduces the need for additional dependencies and app data sources to efficiently query and parse mempool data. \r\n\r\n\r\n## Other Things I Considered\r\nMy initial attempt at this modified `getrawmempool` to \r\n- take a `start_sequence` to allow for filtering, and\r\n- adding the txdata (inputs outpoints + outputs (amount + scriptPubKeys)). \r\n\r\nThat was pretty ugly however, given that the current data model for `getrawmempool` is around a concept of \"mempool entry\" data. This new RPC in contrast only returns transaction data (and does not report on information about other mempool dependencies etc; for that you should still call `getrawmempool` or `getmempoolentry`). \r\n\r\nYou could add a `start_sequence` to the existing `getrawmempool` to help with entry data paging/querying but that's secondary to my goals for fetching relevant txdata from the mempool.\r\n\r\n## Additions/Changes\r\n\r\nThis PR could be further improved by\r\n- Add a `page_size` argument which allows a calling application to limit the number of results returned.\r\n\r\n\r\n## Future Work\r\nThe current RPC only supports finding *added* mempool transactions. It'd be interesting to experiment with keeping track of evicted/not mined transactions and adding them to the results.\r\n\r\nThis would require:\r\n- An additional memory buffer (perhaps a configurable memory limited ring buffer?) for evicted tx data and the mempool sequence of the eviction.\r\n- Adding a `sequence_action` field for results, which indicates whether the sequence is for the tx's `addition` or `eviction`.\r\n\r\nYou could also keep track of tx movements into blocks, but this seems less useful/urgent in general.\r\n\r\n## Usage\r\nYou can see an example of this implemented and used in CLN for finding paid onchain invoices in this branch: https://github.com/ElementsProject/lightning/compare/master...niftynei:lightning:nifty/mempool-scan\r\n\r\nNote that the CLN implementation doesn't currently keep the mempool_sequence in disk, so it'll reload/rescan the mempool at start. This *may* be desirable?\r\n\r\nHere's how a caller would use this\r\n\r\n```\r\n1) start node\r\n2) listmempooltransactions 0 to get backlog\r\n3) call listmempooltransactions again with `start_sequence` set to `mempool_sequence` result from last call\r\n```\r\n\r\nNote that this works well with ZMQ as the `mempool_sequence` number is identical.",
          "user": {
            "login": "niftynei",
            "id": 1097769,
            "node_id": "MDQ6VXNlcjEwOTc3Njk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/niftynei",
            "html_url": "https://github.com/niftynei",
            "followers_url": "https://api.github.com/users/niftynei/followers",
            "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
            "organizations_url": "https://api.github.com/users/niftynei/orgs",
            "repos_url": "https://api.github.com/users/niftynei/repos",
            "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/niftynei/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29016",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29016.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29016.patch"
          },
          "created_at": "2023-12-06T22:32:25Z",
          "updated_at": "2024-04-11T07:16:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T19:58:07Z",
      "updated_at": "2023-12-07T19:58:07Z",
      "source": {
        "issue": {
          "id": 2029493410,
          "node_id": "PR_kwDOABII585hWvMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29015",
          "number": 29015,
          "state": "open",
          "state_reason": null,
          "title": "kernel: Streamline util library",
          "body": "Remove `fees.h`, `errors.h`, and `spanparsing.h` from the util library. Specifically:\r\n\r\n- Move `Split` functions from `util/spanparsing.h` to `util/string.h`, using `util` namespace for clarity.\r\n- Move remaining spanparsing functions to `script/parsing.h` since they are used for descriptor and miniscript parsing.\r\n- Combine `util/fees.h` and `util/errors.h` into `common/messages.h` so there is a place for simple functions that generate user messages to live, and these functions are not part of the util library.\r\n\r\nMotivation for this change is that the util library is a dependency of the kernel, and we should remove functionality from util that shouldn't be called by kernel code or kernel applications. These changes should also improve code organization and make functions easier to discover. Some of these same moves are (or were) part of #28690, but did not help with code organization, or made it worse, so it is better to move them and clean them up in the same PR so code only has to change one time.\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29015",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29015.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29015.patch"
          },
          "created_at": "2023-12-06T22:26:39Z",
          "updated_at": "2024-04-23T22:03:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T20:00:59Z",
      "updated_at": "2023-12-07T20:00:59Z",
      "source": {
        "issue": {
          "id": 2027551012,
          "node_id": "PR_kwDOABII585hQFye",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29007",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29007/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29007/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29007/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29007",
          "number": 29007,
          "state": "closed",
          "state_reason": null,
          "title": "test: create deterministic addrman in the functional tests",
          "body": "An address is placed in a `[bucket,position]` in the addrman table (new table or tried table) using the `addpeeraddress` RPC. This `[bucket,position]` is calculated using `nKey`(and other metrics) for the addrman which is chosen randomly during every run.\r\n\r\nSupposing there are 2 addresses to be placed in an addrman table. During every test run, a different `[bucket,position]` would be calculated for each address.These calculated `[bucket,position]` could even be the same for the 2 addresses in some test runs and result in collisions in the addrman. We wouldn't be able to predict when the collisions are going to happen because we can't predict the `nKey` value which is chosen at random. This can cause flaky tests.\r\n\r\nBecause of these non deterministic collisions, we are limited in what we can do to test addrman functionality. Currently in our tests don't add a second address to prevent these collisions from happening - we only keep 1 address in the new table and 1 address in the tried table. See https://github.com/bitcoin/bitcoin/pull/26988#discussion_r1091145647, https://github.com/bitcoin/bitcoin/pull/23084, [#22831(comment)](https://github.com/bitcoin/bitcoin/pull/22831/files#r708302639). \r\n\r\nThis PR lets us create a deterministic addrman with fixed `nKey` so that we can know the `[bucket,position]` collisions beforehand, safely add more addresses in an addrman table and write more extensive tests.",
          "user": {
            "login": "stratospher",
            "id": 44024636,
            "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stratospher",
            "html_url": "https://github.com/stratospher",
            "followers_url": "https://api.github.com/users/stratospher/followers",
            "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
            "organizations_url": "https://api.github.com/users/stratospher/orgs",
            "repos_url": "https://api.github.com/users/stratospher/repos",
            "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stratospher/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/66",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/66",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/66/labels",
            "id": 10314936,
            "node_id": "MI_kwDOABII584AnWS4",
            "number": 66,
            "state": "open",
            "title": "28.0",
            "creator": {
              "login": "DrahtBot",
              "id": 39886733,
              "node_id": "MDQ6VXNlcjM5ODg2NzMz",
              "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/DrahtBot",
              "html_url": "https://github.com/DrahtBot",
              "followers_url": "https://api.github.com/users/DrahtBot/followers",
              "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
              "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
              "repos_url": "https://api.github.com/users/DrahtBot/repos",
              "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 6,
            "closed_issues": 5,
            "created_at": "2023-12-15T12:08:23Z",
            "updated_at": "2024-04-25T15:43:34Z"
          },
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29007",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29007",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29007.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29007.patch"
          },
          "closed_at": "2024-03-11T14:29:44Z",
          "created_at": "2023-12-06T02:55:43Z",
          "updated_at": "2024-03-12T16:07:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T20:02:57Z",
      "updated_at": "2023-12-07T20:02:57Z",
      "source": {
        "issue": {
          "id": 2026622135,
          "node_id": "PR_kwDOABII585hM4GJ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29001",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29001/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29001/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29001/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29001",
          "number": 29001,
          "state": "open",
          "state_reason": null,
          "title": "Ephemeral Anchors",
          "body": "Depends on https://github.com/bitcoin/bitcoin/pull/28948 and https://github.com/bitcoin/bitcoin/pull/28984\r\n\r\nReplaces https://github.com/bitcoin/bitcoin/pull/26403 to refresh the conversation.\r\n\r\nBIP text here: https://github.com/instagibbs/bips/blob/ephemeral_anchor/bip-ephemeralanchors.mediawiki\r\n\r\nExample usage:\r\nhttps://github.com/instagibbs/bolts/commits/zero_fee_commitment\r\nhttps://github.com/instagibbs/lightning/commits/commit_zero_fees\r\n\r\nTODO:\r\n1) figure out what precisely to do in a reorg when ephemeral transactions are trying to enter the mempool(and write a test)\r\n2) restrict ephemeral anchor value to 0 (future relaxation possible with more work/motivation)\r\n3) rebased on top of master, add in trim ephemeral anchor tx functionality when they are at 0-fee package feerate",
          "user": {
            "login": "instagibbs",
            "id": 5767891,
            "node_id": "MDQ6VXNlcjU3Njc4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/instagibbs",
            "html_url": "https://github.com/instagibbs",
            "followers_url": "https://api.github.com/users/instagibbs/followers",
            "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/instagibbs/orgs",
            "repos_url": "https://api.github.com/users/instagibbs/repos",
            "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/instagibbs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29001",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29001",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29001.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29001.patch"
          },
          "created_at": "2023-12-05T16:30:46Z",
          "updated_at": "2024-03-28T18:14:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T20:10:40Z",
      "updated_at": "2023-12-07T20:10:40Z",
      "source": {
        "issue": {
          "id": 2021654832,
          "node_id": "PR_kwDOABII585g8KkU",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28984",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28984/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28984/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28984/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28984",
          "number": 28984,
          "state": "open",
          "state_reason": null,
          "title": "Cluster size 2 package rbf",
          "body": "Allows any 2 transaction package with no in-mempool ancestors to do package RBF when directly conflicting with other mempool clusters of size two or less.\r\n\r\n\r\nProposed validation steps:\r\n1) If the transaction package is of size 1, legacy rbf rules apply.\r\n2) Otherwise the transaction package consists of a (parent, child) pair with no other in-mempool ancestors (or descendants, obviously), so it is also going to create a cluster of size 2. If larger, fail.\r\n3) The package rbf may not evict more than 100 transactions from the mempool(bip125 rule 5)\r\n4) The package is a single chunk\r\n5) Every directly conflicted mempool transaction is connected to at most 1 other in-mempool transaction (ie the cluster size of the conflict is at most 2).\r\n6) Diagram check: We ensure that the replacement is strictly superior at all points, improving the mempool\r\n7) The total fee of the package, minus the total fee of what is being evicted, is at least the minrelayfee * size of the package (equivalent to bip125 rule 3 and 4)\r\n\r\nPost-cluster mempool this will likely be expanded to general package rbf, but this is what we can safely support today.\r\n",
          "user": {
            "login": "instagibbs",
            "id": 5767891,
            "node_id": "MDQ6VXNlcjU3Njc4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/instagibbs",
            "html_url": "https://github.com/instagibbs",
            "followers_url": "https://api.github.com/users/instagibbs/followers",
            "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/instagibbs/orgs",
            "repos_url": "https://api.github.com/users/instagibbs/repos",
            "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/instagibbs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28984",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28984",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28984.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28984.patch"
          },
          "created_at": "2023-12-01T22:12:06Z",
          "updated_at": "2024-04-25T02:39:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T20:21:07Z",
      "updated_at": "2023-12-07T20:21:07Z",
      "source": {
        "issue": {
          "id": 2014832404,
          "node_id": "PR_kwDOABII585gk1DX",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28960",
          "number": 28960,
          "state": "closed",
          "state_reason": null,
          "title": "kernel: Remove dependency on CScheduler",
          "body": "By defining a virtual interface class for the scheduler client, users of the kernel can now define their own event consuming infrastructure, without having to spawn threads or rely on the scheduler design.\r\n\r\nRemoving `CScheduler` also allows removing the thread and exception modules from the kernel library. \r\n\r\nTo make the `CMainSignals` class easier to use from a kernel library perspective, remove its global instantiation and adopt RAII practices.\r\n\r\nRenames `CMainSignals` to `ValidationSignals`, which more accurately describes its purpose and scope.\r\n\r\nAlso make the `ValidationSignals` in the `ChainstateManager` and CTxMemPool` optional. This could be useful in the future for using or testing these classes without having to instantiate any form of signal handling.\r\n\r\n---\r\n\r\nThis PR is part of the [libbitcoinkernel project](https://github.com/bitcoin/bitcoin/issues/27587). It improves the kernel API and removes two modules from the kernel library.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/66",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/66",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/66/labels",
            "id": 10314936,
            "node_id": "MI_kwDOABII584AnWS4",
            "number": 66,
            "state": "open",
            "title": "28.0",
            "creator": {
              "login": "DrahtBot",
              "id": 39886733,
              "node_id": "MDQ6VXNlcjM5ODg2NzMz",
              "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/DrahtBot",
              "html_url": "https://github.com/DrahtBot",
              "followers_url": "https://api.github.com/users/DrahtBot/followers",
              "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
              "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
              "repos_url": "https://api.github.com/users/DrahtBot/repos",
              "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 6,
            "closed_issues": 5,
            "created_at": "2023-12-15T12:08:23Z",
            "updated_at": "2024-04-25T15:43:34Z"
          },
          "locked": false,
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28960",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28960",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28960.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28960.patch"
          },
          "closed_at": "2024-03-09T01:58:15Z",
          "created_at": "2023-11-28T16:27:42Z",
          "updated_at": "2024-03-09T01:58:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T20:49:48Z",
      "updated_at": "2023-12-07T20:49:48Z",
      "source": {
        "issue": {
          "id": 1987412902,
          "node_id": "PR_kwDOABII585fITQi",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28843",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28843/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28843/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28843/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28843",
          "number": 28843,
          "state": "open",
          "state_reason": null,
          "title": "[refactor] Remove BlockAssembler m_mempool member",
          "body": "Instead, pass the mempool pointer as an argument to CreateNewBlock and pass that on to addPackageTxs. Before, addPackageTxs had access to both the m_mempool member and the passed in mempool, which could be confusing. This was noticed in this PR review: https://github.com/bitcoin/bitcoin/pull/25223#discussion_r898164322.\r\n\r\n",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28843",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28843",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28843.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28843.patch"
          },
          "created_at": "2023-11-10T11:06:22Z",
          "updated_at": "2024-03-29T03:45:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T20:54:30Z",
      "updated_at": "2023-12-07T20:54:30Z",
      "source": {
        "issue": {
          "id": 1985417135,
          "node_id": "PR_kwDOABII585fBgeM",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28830",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28830/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28830/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28830/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28830",
          "number": 28830,
          "state": "open",
          "state_reason": null,
          "title": "[refactor] Check CTxMemPool options in ctor",
          "body": "The tests should run the same checks on the mempool options that the init code also applies. The downside to this patch is that the log line may now be printed more than once in the for loop.\r\n\r\nThis was originally noticed here https://github.com/bitcoin/bitcoin/pull/25290#discussion_r900272797.\r\n",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28830",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28830",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28830.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28830.patch"
          },
          "created_at": "2023-11-09T11:24:01Z",
          "updated_at": "2024-04-25T20:16:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T23:08:11Z",
      "updated_at": "2023-12-07T23:08:11Z",
      "source": {
        "issue": {
          "id": 1467073842,
          "node_id": "PR_kwDOABII585D1g33",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26593",
          "number": 26593,
          "state": "open",
          "state_reason": null,
          "title": "tracing: Only prepare tracepoint arguments when actually tracing",
          "body": "Currently, if the tracepoints are compiled (e.g. in depends and release builds), we always prepare the tracepoint arguments regardless of the tracepoints being used or not. We made sure that the argument preparation is as cheap as possible, but we can almost completely eliminate any overhead for users not interested in the tracepoints (the vast majority), by gating the tracepoint argument preparation with an `if(something is attached to this tracepoint)`. To achieve this, we use the optional semaphore feature provided by SystemTap.\r\n\r\nThe first commit simplifies and deduplicates our tracepoint macros from 13 TRACEx macros to a single TRACEPOINT macro. This makes them easier to use and also avoids more duplicate macro definitions in the second commit.\r\n\r\nThe Linux tracing tools I'm aware of (bcc, bpftrace, libbpf, and systemtap) all support the semaphore gating feature. Thus, all existing tracepoints and their argument preparation is gated in the second commit. For details, please refer to the commit messages and the updated documentation in `doc/tracing.md`.\r\n\r\nAlso adding unit tests that include all tracepoint macros to make sure there are no compiler problems with them (e.g. some varadiac extension not supported). \r\n\r\nReviewers might want to check:\r\n- Do the tracepoints still work for you? Do the examples in `contrib/tracing/` run on your system (as bpftrace frequently breaks on every new version, please test master too if it should't work for you)? Do the CI interface tests still pass?\r\n- Is the new documentation clear? \r\n- The `TRACEPOINT_SEMAPHORE(event, context)` macros places global variables in our global namespace. Is this something we strictly want to avoid or maybe move to all `TRACEPOINT_SEMAPHORE`s to a separate .cpp file or even namespace? I like having the `TRACEPOINT_SEMAPHORE()` in same file as the `TRACEPOINT()`, but open for suggestion on alternative approaches. \r\n- Are newly added tracepoints in the unit tests visible when using `readelf -n /src/test/test_bitcoin`? You can run the new unit tests with `./src/test/test_bitcoin --run_test=util_trace_tests* --log_level=all`.\r\n<details><summary>Two of the added unit tests demonstrate that we are only processing the tracepoint arguments when attached by having a test-failure condition in the tracepoint argument preparation. The following bpftrace script can be used to demonstrate that the tests do indeed fail when attached to the tracepoints.</summary>\r\n\r\n`fail_tests.bt`:\r\n\r\n```c\r\n#!/usr/bin/env bpftrace\r\n\r\nusdt:./src/test/test_bitcoin:test:check_if_attached {\r\n  printf(\"the 'check_if_attached' test should have failed\\n\");\r\n}\r\n\r\nusdt:./src/test/test_bitcoin:test:expensive_section {\r\n  printf(\"the 'expensive_section' test should have failed\\n\");\r\n}\r\n```\r\n\r\nRun the unit tests with `./src/test/test_bitcoin` and start `bpftrace fail_tests.bt -p $(pidof test_bitcoin)` in a separate terminal. The unit tests should fail with:\r\n\r\n```\r\nRunning 594 test cases...\r\ntest/util_trace_tests.cpp(31): error: in \"util_trace_tests/test_tracepoint_check_if_attached\": check false has failed\r\ntest/util_trace_tests.cpp(51): error: in \"util_trace_tests/test_tracepoint_manual_tracepoint_active_check\": check false has failed\r\n\r\n*** 2 failures are detected in the test module \"Bitcoin Core Test Suite\"\r\n```\r\n\r\n</details>\r\n\r\nThese links might provide more contextual information for reviewers:\r\n- [How SystemTap Userspace Probes Work by eklitzke](https://eklitzke.org/how-sytemtap-userspace-probes-work) (actually an example on Bitcoin Core; mentions that with semaphores \"the overhead for an untraced process is effectively zero.\")\r\n- [libbpf comment on USDT semaphore handling](https://github.com/libbpf/libbpf/blob/1596a09b5de2a50ab8d44218fc29b6d42f886305/src/usdt.c#L83-L92) (can recommend the whole comment for background on how the tracepoints and tracing tools work together)\r\n- https://sourceware.org/systemtap/wiki/UserSpaceProbeImplementation#Semaphore_Handling",
          "user": {
            "login": "0xB10C",
            "id": 19157360,
            "node_id": "MDQ6VXNlcjE5MTU3MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xB10C",
            "html_url": "https://github.com/0xB10C",
            "followers_url": "https://api.github.com/users/0xB10C/followers",
            "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
            "organizations_url": "https://api.github.com/users/0xB10C/orgs",
            "repos_url": "https://api.github.com/users/0xB10C/repos",
            "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/0xB10C/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26593",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26593.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26593.patch"
          },
          "created_at": "2022-11-28T20:50:26Z",
          "updated_at": "2024-04-23T09:52:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11198263397,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAKbd_Bl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11198263397",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-08T22:44:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11201892660,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAKbr1E0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11201892660",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-10T01:26:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11202916862,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAKbvvH-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11202916862",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-10T13:45:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11202988562,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAAKbwAoS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11202988562",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-10T14:25:00Z"
    },
    {
      "event": "unlabeled",
      "id": 11203076413,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAAKbwWE9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11203076413",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-10T15:12:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-15T00:23:55Z",
      "updated_at": "2023-12-15T00:23:55Z",
      "source": {
        "issue": {
          "id": 2042620479,
          "node_id": "PR_kwDOABII585iDUii",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29085",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29085/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29085/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29085/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29085",
          "number": 29085,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: C++20: Use std::rotl",
          "body": "While exploring some C++20 changes and checking against our code I found this potential improvement:\r\n\r\n1. We can replace our custom implementation of `rotl32` in crypto/chacha20 with `std::rotl` from the [new `bit` header](https://en.cppreference.com/w/cpp/header/bit).",
          "user": {
            "login": "fjahr",
            "id": 1322187,
            "node_id": "MDQ6VXNlcjEzMjIxODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjahr",
            "html_url": "https://github.com/fjahr",
            "followers_url": "https://api.github.com/users/fjahr/followers",
            "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
            "organizations_url": "https://api.github.com/users/fjahr/orgs",
            "repos_url": "https://api.github.com/users/fjahr/repos",
            "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fjahr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29085",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29085",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29085.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29085.patch"
          },
          "closed_at": "2024-01-18T09:40:52Z",
          "created_at": "2023-12-14T22:49:39Z",
          "updated_at": "2024-01-18T09:40:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-15T07:08:15Z",
      "updated_at": "2023-12-15T07:08:15Z",
      "source": {
        "issue": {
          "id": 2042832766,
          "node_id": "PR_kwDOABII585iEBHC",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29086",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29086/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29086/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29086/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29086",
          "number": 29086,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Simply include CTxMemPool::Options in CTxMemPool directly rather than duplicating definition",
          "body": "Instead of duplicating mempool options two places, just include the Options struct directly on the CTxMemPool",
          "user": {
            "login": "luke-jr",
            "id": 1095675,
            "node_id": "MDQ6VXNlcjEwOTU2NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke-jr",
            "html_url": "https://github.com/luke-jr",
            "followers_url": "https://api.github.com/users/luke-jr/followers",
            "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
            "organizations_url": "https://api.github.com/users/luke-jr/orgs",
            "repos_url": "https://api.github.com/users/luke-jr/repos",
            "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/luke-jr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29086",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29086",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29086.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29086.patch"
          },
          "closed_at": "2024-03-16T14:04:09Z",
          "created_at": "2023-12-15T03:33:59Z",
          "updated_at": "2024-03-16T14:04:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 11279737369,
      "node_id": "LE_lADOABII5850QVJBzwAAAAKgUyIZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11279737369",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-18T17:38:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-25T16:15:27Z",
      "updated_at": "2024-01-25T16:15:27Z",
      "source": {
        "issue": {
          "id": 2100725835,
          "node_id": "I_kwDOABII5859NohL",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29319/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29319/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29319/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/29319",
          "number": 29319,
          "state": "open",
          "state_reason": null,
          "title": "Cluster mempool, CPFP carveout, and V3 transaction policy",
          "body": "Opening an issue for high-level discussion, as the PR that implements this has gotten difficult to follow.\r\n\r\n### Cluster mempool\r\n\r\nWork is underway to [redesign the mempool](https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393/1) with different topology constraints on the transaction graph than exist today.  I originally described this proposal in a github issue (#27677), and have shared a draft implementation (#28676).  In brief, with a new mempool design we could simultaneously: fix bugs with mempool eviction and the incentive compatibility of RBF replacements; achieve improved performance; eliminate the ancestor/descendant limits (with the introduction of a likely more relaxed \"cluster\" limit); and likely be in a position to better implement complex behaviors like package validation and package rbf.\r\n\r\n### CPFP carveout is not compatible with cluster mempool\r\n\r\nAs I explain [here](https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393#the-cpfp-carveout-rule-can-no-longer-be-supported-12), I believe the CPFP carveout rule (introduced in #15681) is not compatible with the new design. Since some users may be relying on this behavior, we should come up with a workaround to avoid breaking existing applications.\r\n\r\n### V3 transaction policy\r\n\r\nDescribed in #28948, the v3 transaction policy is a proposal to introduce topology restrictions on unconfirmed transactions with `nVersion=3` (which are currently non-standard for relay, and would be made standard under the proposal).  Specifically, v3 transactions would be:\r\n- opted-in to RBF replacement policies (whatever those may be, as they evolve in our project)\r\n- permitted to only be part of mempool clusters that are at most of size 2 (meaning 1 parent/1 child)\r\n- required to have any unconfirmed parents or children also be marked v3 (and therefore subject to these rules)\r\n- bounded in size to at most 1000 vbytes, if the child of an unconfirmed (and therefore v3) parent\r\n\r\nBy offering a policy rule that can enforce a much tighter topology restriction that the current ancestor/descendant limits, we hope to achieve a few things:\r\n\r\n#### Replacing CPFP carveout (with a new sibling-replacement policy)\r\n\r\nWe can provide a way to achieve the goals of the CPFP carveout rule even if the existing carevout rule were to be dropped. As explained in [this post](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016518.html), the use-case contemplated by the CPFP carveout rule was one where a single transaction might have two spendable outputs, each spendable by a different party, and that either party should be able to spend their output without hitting global topology limits, provided that their spending transaction was bounded in size and had no other unconfirmed parents. If the v3 policy rule were to be applied to the LN commitment transactions described in that post, then neither of the two outputs that are spendable could be used to hit the limits that carveout is designed to bypass. \r\n\r\nSo if we couple the v3 policy with an RBF rule that would allow one spend of a v3 transaction to replace an existing lower-feerate spend of that same parent -- something we call *sibling eviction* and has a draft implementation in #29306 -- then I believe we will have enacted a set of policies that replicate the CPFP carveout use case. \r\n\r\n#### Provide a general way for fee bumping to work better\r\n\r\nEven apart from the needs of layer 2 protocols, the new v3 policy serves as a general way to bypass the issue of RBF being expensive when a child transaction is created that has a large fee (and is typically large in size, allowing for it to be low feerate).  This has been the source of user complaints since our RBF policies were first deployed, and by bounding the size of child transactions we effectively can limit the amount of additional fee a user would need to pay due to the presence of such children.  \r\n\r\nNote, of course, that this property is also what makes the sibling-eviction-policy described above workable.\r\n\r\n### Proposed roadmap\r\n\r\nTo unblock the cluster mempool project, I think we need the following:\r\n1. Deployment of the V3 policy rules (current proposal is #28948)\r\n2. Deployment of V3 sibling eviction rbf rules (current proposal is #29306)\r\n\r\nThen, projects that use CPFP carveout would need to be able to adopt the new policy rules.  After the last LN spec discussion, I understand that migrating their commitment transactions to use a new format (even just a change in version number) might take time to coordinate, and that in the meantime we should simply use some other unique markers to identify those commitment transactions, and implicitly imbue such transactions with the v3 policy rules.  However, doing so would eliminate the ability to batch-CPFP several unconfirmed commitment transactions at once (although this isn't reliable anyway today, since the carveout protections don't apply to this case, but perhaps this sometimes works fine and is more efficient).\r\n\r\nIt's not clear to me if that final step -- of imbuing transactions with v3 policy, rather than requiring explicit opt-in -- is needed before we move further forward with cluster mempool, or even if doing so would be acceptable to the broader community, but I think we could entertain that idea as a way to assist the LN project with migration and to decouple progress in this project from upgrade timelines in that one.\r\n\r\n### Feedback\r\n\r\nWhile we're still working out implementation details in the v3 and v3-sibling-eviction PRs, it would be great to get concept ACKs on this roadmap from any users of the current CPFP carveout policy.  In particular, please provide feedback on:\r\n1. whether there are use cases of CPFP carveout that are not covered by the V3 proposal as I described above, and \r\n2. whether the \"imbued v3\" behavior described above should be treated as a blocker for CPFP carveout removal as well, or if it's a bad idea due to (eg) breaking the ability to batch-CPFP (or any other reason)",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 33,
          "created_at": "2024-01-25T16:15:26Z",
          "updated_at": "2024-03-13T03:09:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 11763923253,
      "node_id": "REFE_lADOABII5850QVJBzwAAAAK9Lzk1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11763923253",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7143d4388407ab3d12005e55a02d5e8f334e4dc9",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7143d4388407ab3d12005e55a02d5e8f334e4dc9",
      "created_at": "2024-02-10T04:38:11Z"
    },
    {
      "event": "commented",
      "id": 1951640940,
      "node_id": "IC_kwDOABII5850U61s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1951640940",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T03:45:20Z",
      "updated_at": "2024-02-19T03:45:20Z",
      "author_association": "MEMBER",
      "body": "do you have a simulation environment or script like you’ve done for #25717 to observe the computational complexity diff compared to today’s mempool against different chain of transaction performance payload ?\r\ninteresting what is the lowest performance linux host assumed for decentralization of the tx-relay network.\r\nassume always 24/7 internet and on a vpcu instance, not baremetal.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1951640940",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "commented",
      "id": 1952644105,
      "node_id": "IC_kwDOABII5850YvwJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1952644105",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T15:05:34Z",
      "updated_at": "2024-02-19T15:08:27Z",
      "author_association": "MEMBER",
      "body": "In the context of Stratum v2 #29432 I'm looking for a more efficient way to decide when to generate a new block template.\r\n\r\nThe current implementation looks at the mempool's `GetTransactionsUpdated()` every `-sv2interval` seconds. If there was any update, it calls `CreateNewBlock()` on `BlockAssembler`. It then checks if fees increased by at least `-sv2feedelta` since the last template and if so, pushes it to connected clients.\r\n\r\n`GetTransactionsUpdated()` changes all the time, especially with a big mempool, so not that useful of a filter. I'd like something like `GetFeeEstimateAtTop(size vbytes=4000000)`. Would it be easy to keep track of that (approximate) number every time something is added or removed from the mempool?\r\n\r\nIdeally I'd like to change the meaning of `-sv2interval` from \"check every n seconds and push update if needed\" to \"push better templates immediately, but wait least n seconds between them\".",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1952644105",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "commented",
      "id": 1952653016,
      "node_id": "IC_kwDOABII5850Yx7Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1952653016",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T15:10:36Z",
      "updated_at": "2024-02-19T15:10:36Z",
      "author_association": "MEMBER",
      "body": "> Would it be easy to keep track of that (approximate) number every time something is added or removed from the mempool?\r\n\r\nAfter clustermempool, yes. Today doing that inherently requires running the mining algorithm to figure out what transactions to put there.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1952653016",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "commented",
      "id": 1952657689,
      "node_id": "IC_kwDOABII5850YzEZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1952657689",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T15:12:31Z",
      "updated_at": "2024-02-19T15:12:31Z",
      "author_association": "MEMBER",
      "body": "Indeed, I meant on top of this PR (or a later incarnation).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1952657689",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "commented",
      "id": 1959971463,
      "node_id": "IC_kwDOABII58500sqH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1959971463",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T17:56:07Z",
      "updated_at": "2024-02-22T17:56:07Z",
      "author_association": "MEMBER",
      "body": "> interesting what is the lowest performance linux host assumed for decentralization of the tx-relay network.\r\nassume always 24/7 internet and on a vpcu instance, not baremetal.\r\n\r\nRunning this branch mainet on a 2 vcpu instance, with the following performance characteristics:\r\n```\r\nprocessor       : 0\r\nvendor_id       : AuthenticAMD\r\ncpu family      : 25\r\nmodel           : 1\r\nmodel name      : AMD EPYC 7543 32-Core Processor\r\nstepping        : 1\r\nmicrocode       : 0xa0011d1\r\ncpu MHz         : 2794.750\r\ncache size      : 512 KB\r\n```\r\n\r\nIt would be very interesting to feed cluster-support testing node with all kinds of chain of transactions, and check substantial performance diff compared to non-cluster-support testing node. Check there is no substantial performance regression.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1959971463",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12042124799,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALNxD3_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12042124799",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T13:14:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12042232351,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALNxeIf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12042232351",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T13:23:01Z"
    },
    {
      "event": "unlabeled",
      "id": 12043647342,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAALN23lu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12043647342",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T15:02:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T23:29:23Z",
      "updated_at": "2024-03-07T23:29:23Z",
      "source": {
        "issue": {
          "id": 2157710565,
          "node_id": "PR_kwDOABII585oGxRQ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29496",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29496/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29496/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29496/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29496",
          "number": 29496,
          "state": "open",
          "state_reason": null,
          "title": "policy: bump TX_MAX_STANDARD_VERSION to 3",
          "body": "Make `nVersion=3` (which is currently nonstandard on mainnet) standard.\r\n\r\nNote that we will treat these transactions as Topologically Restricted Until Confirmation (TRUC). See #28948, #29306, and https://github.com/bitcoin/bips/pull/1541.\r\n\r\nSee #27463 for overall project tracking, and #29319 for information about relevance to cluster mempool.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29496",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29496",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29496.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29496.patch"
          },
          "created_at": "2024-02-27T22:19:48Z",
          "updated_at": "2024-04-15T18:51:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T00:42:53Z",
      "updated_at": "2024-03-08T00:42:53Z",
      "source": {
        "issue": {
          "id": 2101228725,
          "node_id": "PR_kwDOABII585lHBKP",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29325",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29325/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29325/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29325/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29325",
          "number": 29325,
          "state": "open",
          "state_reason": null,
          "title": "consensus: Store transaction nVersion as uint32_t",
          "body": "Given that the use of a transaction's nVersion is always as an unsigned int, it doesn't make sense to store it as signed and then cast it to unsigned everywhere it is used and displayed.\r\n\r\nSince a few alternative implementations have recently been revealed to have made an error with this signedness that would have resulted in consensus failure, I think it makes sense for us to just make this always unsigned to make it clear that the version is treated as unsigned. This would also help us avoid future potential issues with signedness of this value.\r\n\r\nI believe that this is safe and does not actually change what transactions would or would not be considered both standard and consensus valid. Within consensus, the only use of the version in consensus is in BIP68 validation which was already casting it to uint32_t. Within policy, although it is used as a signed int for the transaction version number check, I do not think that this change would change standardness. Standard transactions are limited to the range [1, 2]. Negative numbers would have fallen under the < 1 condition, but by making it unsigned, they are still non-standard under the > 2 condition.\r\n\r\nUnsigned and signed ints are serialized and unserialized the same way so there is no change in serialization.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 192202000,
              "node_id": "MDU6TGFiZWwxOTIyMDIwMDA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Consensus",
              "name": "Consensus",
              "color": "009800",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/66",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/66",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/66/labels",
            "id": 10314936,
            "node_id": "MI_kwDOABII584AnWS4",
            "number": 66,
            "state": "open",
            "title": "28.0",
            "creator": {
              "login": "DrahtBot",
              "id": 39886733,
              "node_id": "MDQ6VXNlcjM5ODg2NzMz",
              "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/DrahtBot",
              "html_url": "https://github.com/DrahtBot",
              "followers_url": "https://api.github.com/users/DrahtBot/followers",
              "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
              "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
              "repos_url": "https://api.github.com/users/DrahtBot/repos",
              "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 6,
            "closed_issues": 5,
            "created_at": "2023-12-15T12:08:23Z",
            "updated_at": "2024-04-25T15:43:34Z"
          },
          "locked": false,
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29325",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29325",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29325.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29325.patch"
          },
          "created_at": "2024-01-25T21:53:23Z",
          "updated_at": "2024-04-26T03:15:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T00:50:35Z",
      "updated_at": "2024-03-08T00:50:35Z",
      "source": {
        "issue": {
          "id": 2098396365,
          "node_id": "PR_kwDOABII585k9aJJ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29306",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29306/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29306/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29306/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29306",
          "number": 29306,
          "state": "closed",
          "state_reason": null,
          "title": "policy: enable sibling eviction for v3 transactions",
          "body": "When we receive a v3 transaction that would bust a mempool transaction's descendant limit, instead of rejecting the new tx, consider replacing the other descendant if it is much higher feerate (using existing RBF criteria to assess that it's more incentive compatible and to avoid DoS).\r\n\r\nDelving post with more background and motivation: https://delvingbitcoin.org/t/sibling-eviction-for-v3-transactions/472",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29306",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29306",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29306.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29306.patch"
          },
          "closed_at": "2024-03-12T16:20:00Z",
          "created_at": "2024-01-24T14:30:13Z",
          "updated_at": "2024-03-13T10:14:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T01:16:35Z",
      "updated_at": "2024-03-08T01:16:35Z",
      "source": {
        "issue": {
          "id": 2079415940,
          "node_id": "PR_kwDOABII585j9MBq",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29242",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29242/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29242/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29242/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29242",
          "number": 29242,
          "state": "closed",
          "state_reason": null,
          "title": "Mempool util: Add RBF diagram checks for single chunks against clusters of size 2",
          "body": "This is a smaller piece of https://github.com/bitcoin/bitcoin/pull/28984 broken off for easier review.\r\n\r\nUp to date explanation of diagram checks are here: https://delvingbitcoin.org/t/mempool-incentive-compatibility/553\r\n\r\nThis infrastructure has two near term applications prior to cluster mempool:\r\n1) Limited Package RBF(https://github.com/bitcoin/bitcoin/pull/28984): We want to allow package RBF only when we know it improves the mempool. This narrowly scoped functionality allows use with v3-like topologies, and will be expanded at some point post-cluster mempool when diagram checks can be done efficiently against bounded cluster sizes.\r\n2) Replacement for single tx RBF(in a cluster size of up to two) against conflicts of up to cluster size two. `ImprovesFeerateDiagram` interface will have to change for this use-case, which is a future direction to solve certain pins and improve mempool incentive compatibility: https://delvingbitcoin.org/t/ephemeral-anchors-and-mev/383#diagram-checks-fix-this-3\r\n\r\nAnd longer-term, this would be the proposed way we would compute incentive compatibility for all conflicts, post-cluster mempool.\r\n\r\n",
          "user": {
            "login": "instagibbs",
            "id": 5767891,
            "node_id": "MDQ6VXNlcjU3Njc4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/instagibbs",
            "html_url": "https://github.com/instagibbs",
            "followers_url": "https://api.github.com/users/instagibbs/followers",
            "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/instagibbs/orgs",
            "repos_url": "https://api.github.com/users/instagibbs/repos",
            "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/instagibbs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 26,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29242",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29242.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29242.patch"
          },
          "closed_at": "2024-03-26T08:49:27Z",
          "created_at": "2024-01-12T18:07:44Z",
          "updated_at": "2024-03-26T12:44:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T01:20:26Z",
      "updated_at": "2024-03-08T01:20:26Z",
      "source": {
        "issue": {
          "id": 2077041540,
          "node_id": "PR_kwDOABII585j1CBc",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29231",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29231/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29231/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29231/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29231",
          "number": 29231,
          "state": "open",
          "state_reason": null,
          "title": "logging: Update to new logging API",
          "body": "Updates various logging calls to the new API from #28318. All commits are scripted diffs, so should be easy to update if needed, and also easy to reuse the scripts to update other code if needed when rebasing it after this is merged. Changes all uses of `LogPrintLevel()` where the level is hardcoded, and changes all `LogPrintf` and `LogPrint` uses in init.cpp.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29231",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29231",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29231.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29231.patch"
          },
          "created_at": "2024-01-11T16:01:53Z",
          "updated_at": "2024-04-25T22:25:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1923884910,
      "node_id": "PRR_kwDOABII585yrCdu",
      "url": null,
      "actor": null,
      "commit_id": "5ce8eff8e7c0d2f187ab39440b945d4a9d2f8259",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I’ll spend time reviewing current `CTxMemPool`’s code path w.r.t DoS resistance before to pursue review further. This is very unsure the introduction of `TxGraph` improves on this front as the design is focus on mining incentive-compatibility improvement first.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#pullrequestreview-1923884910",
      "submitted_at": "2024-03-08T03:55:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
    },
    {
      "event": "commented",
      "id": 1985000747,
      "node_id": "IC_kwDOABII5852ULUr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1985000747",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T04:01:40Z",
      "updated_at": "2024-03-08T04:01:40Z",
      "author_association": "MEMBER",
      "body": "> Running this branch mainet on a 2 vcpu instance, with the following performance characteristics:\r\n\r\nGot a disk space issue at block `501691` by syncing from genesis.\r\n\r\n```\r\n2024-02-23T10:53:41Z UpdateTip: new best=000000000000000000753b6b9821750d271e1730d7403a0658c507c88092bdf0 height=501691 version=0x20000000 log2_work=87.760876 tx=287312998 date='2017-12-30T07:48:59Z' progress=0.295839 cache=16.3MiB(151170txo)\r\n2024-02-23T10:53:41Z New outbound-full-relay v1 peer connected: version: 70016, blocks=831673, peer=196\r\n2024-02-23T10:53:47Z *** Disk space is too low!\r\n2024-02-23T10:53:47Z Error: Disk space is too low!\r\n```\r\n\r\nWas configured as a prune node with default pruning settings.\r\n```\r\n2024-02-22T17:49:33Z Prune configured to target 550 MiB on disk for block and undo files.\r\n```\r\n\r\nWith following `/proc/meminfo` dump\r\n\r\n```\r\nMemTotal:        4020688 kB\r\nMemFree:          359104 kB\r\nMemAvailable:    3650432 kB\r\nBuffers:           44424 kB\r\nCached:          3385624 kB\r\nSwapCached:            0 kB\r\nActive:          1312988 kB\r\nInactive:        2156904 kB\r\nActive(anon):        352 kB\r\nInactive(anon):    40004 kB\r\nActive(file):    1312636 kB\r\nInactive(file):  2116900 kB\r\n```",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-1985000747",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T06:39:18Z",
      "updated_at": "2024-03-08T06:39:18Z",
      "source": {
        "issue": {
          "id": 1363503515,
          "node_id": "PR_kwDOABII584-c4WZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26022",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26022/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26022/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26022/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26022",
          "number": 26022,
          "state": "open",
          "state_reason": null,
          "title": "Add util::ResultPtr class",
          "body": "**This is based on #25665.** The non-base commits are:\r\n\r\n- [`96809f65d1dd` Add util::ResultPtr class](https://github.com/bitcoin/bitcoin/pull/26022/commits/96809f65d1ddcf0bde953fd69922908ad64f2539)\r\n- [`8ecac0885ef5` Use ResultPtr<unique_ptr> instead of Result<unique_ptr>](https://github.com/bitcoin/bitcoin/pull/26022/commits/8ecac0885ef5b6fc2313cd2f8dfb48c10a05db27)\r\n\r\n---\r\n\r\nThe `util::ResultPtr` class is a wrapper for `util::Result` providing syntax sugar to make it less awkward to use with returned pointers. Instead of needing to be deferenced twice with `**result` or `(*result)->member`, it only needs to be dereferenced once with `*result` or `result->member`. Also when it is used in a boolean context, instead of evaluating to true when there is no error and the pointer is null, it evaluates to false so it is straightforward to determine whether the result points to something.\r\n\r\nThis PR is only partial a solution to #26004 because while it makes it easier to check for null pointer values, it does not make it impossible to return a null pointer value inside a successful result. It would be possible to enforce that successful results always contain non-null pointers by using a `not_null` type (https://github.com/bitcoin/bitcoin/issues/24423) in combination with `ResultPtr`, though.\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26022",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26022",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26022.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26022.patch"
          },
          "created_at": "2022-09-06T15:57:14Z",
          "updated_at": "2024-04-25T06:04:32Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T06:46:52Z",
      "updated_at": "2024-03-08T06:46:52Z",
      "source": {
        "issue": {
          "id": 1320033494,
          "node_id": "PR_kwDOABII5848NBt5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25722",
          "number": 25722,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Use util::Result class for wallet loading",
          "body": "**This is based on #25665 + #26022.** The non-base commits are:\r\n\r\n- [`b027d1df5981` refactor: Use util::Result class in wallet/spend](https://github.com/bitcoin/bitcoin/pull/25722/commits/b027d1df598177dec3236f8689b3218f53de3fa9)\r\n- [`5972a3abf26c` Add temporary ResultExtract helper for porting to util::Result](https://github.com/bitcoin/bitcoin/pull/25722/commits/5972a3abf26c25e47db298461c08a4553e4010bb)\r\n- [`1a92d9497bd1` refactor: Use util::Result class in wallet/sqlite](https://github.com/bitcoin/bitcoin/pull/25722/commits/1a92d9497bd158a1d16efd281c68e41fa11e5b0d)\r\n- [`b4fbcf5f2a8f` refactor: Use util::Result class in wallet/bdb](https://github.com/bitcoin/bitcoin/pull/25722/commits/b4fbcf5f2a8f3b390b4041ac98f16161c5181a76)\r\n- [`f56538aa2b92` refactor: Use util::Result class in wallet::MakeDatabase](https://github.com/bitcoin/bitcoin/pull/25722/commits/f56538aa2b924aaeae28f55b41c03eb0145c981d)\r\n- [`e880f6d5e89b` refactor: Use util::Result class in wallet/dump](https://github.com/bitcoin/bitcoin/pull/25722/commits/e880f6d5e89bbdceed2e4d769882f37b3a3c81b2)\r\n- [`4128ab5cdcc6` refactor: Use util::Result class in wallet/salvage](https://github.com/bitcoin/bitcoin/pull/25722/commits/4128ab5cdcc6e2a540e994b615618586e902ccda)\r\n- [`1138e12cfd98` refactor: Use util::Result class in wallet/wallettool](https://github.com/bitcoin/bitcoin/pull/25722/commits/1138e12cfd984fbceaa045348d993b70047d3ab3)\r\n- [`aed183ad112f` refactor: Use util::Result class in wallet/wallet](https://github.com/bitcoin/bitcoin/pull/25722/commits/aed183ad112f00d7ac11435244149e8e936494f9)\r\n- [`032e3e1ebf9b` refactor: Use util::Result class in wallet/load](https://github.com/bitcoin/bitcoin/pull/25722/commits/032e3e1ebf9b1d86596e8393f85461d60074e821)\r\n- [`46ed2908e6f8` refactor: Use util::Result class in wallet/rpc](https://github.com/bitcoin/bitcoin/pull/25722/commits/46ed2908e6f8b6d0f2ebcfc5600a52c61f26109e)\r\n- [`799467626de3` refactor: Use util::Result class in wallet/interfaces](https://github.com/bitcoin/bitcoin/pull/25722/commits/799467626de3c40249be6f0be4ecef5aa5757ed9)\r\n- [`5c7e1caff7db` refactor: Use util::Result class in wallet/test](https://github.com/bitcoin/bitcoin/pull/25722/commits/5c7e1caff7db1f9a61e94e40c22f056f9bef9715)\r\n- [`965c31baa9a3` Drop temporary ResultExtract helper for porting to util::Result](https://github.com/bitcoin/bitcoin/pull/25722/commits/965c31baa9a357e5a92bf4da94e84c37df7e0a9f)\r\n- [`2385cb37dbbe` scripted-diff: replace wallet DatabaseStatus with DatabaseError](https://github.com/bitcoin/bitcoin/pull/25722/commits/2385cb37dbbe00004f8bffe1d1d784778d89a21e)\r\n\r\n---\r\n\r\nWallet loading functions up and down the stack have lots of error and warning parameters, and return error information in different ways. This PR makes them uniformly return `util::Result`, without changing behavior.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25722",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25722.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25722.patch"
          },
          "created_at": "2022-07-27T19:26:58Z",
          "updated_at": "2024-04-25T06:13:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T22:17:35Z",
      "updated_at": "2024-03-08T22:17:35Z",
      "source": {
        "issue": {
          "id": 2165284540,
          "node_id": "PR_kwDOABII585ogfQX",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29543",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29543/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29543/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29543/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29543",
          "number": 29543,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Avoid unsigned integer overflow in `script/interpreter.cpp`",
          "body": "Although unsigned integer overflow is not undefined behavior, it's preferable to eliminate the need for an UBSan suppression for it.\r\n\r\n~This is an alternative to https://github.com/bitcoin/bitcoin/pull/29541.~",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29543",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29543",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29543.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29543.patch"
          },
          "created_at": "2024-03-03T10:06:34Z",
          "updated_at": "2024-04-12T22:31:28Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 12062076131,
      "node_id": "LE_lADOABII5850QVJBzwAAAALO9Kzj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12062076131",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-09T02:13:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12346991211,
      "node_id": "LE_lADOABII5850QVJBzwAAAALf8CJr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12346991211",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-03T19:04:33Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2035375002,
      "node_id": "IC_kwDOABII5855UVua",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2035375002",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-03T19:04:34Z",
      "updated_at": "2024-04-03T19:04:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/22392307037</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#issuecomment-2035375002",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12599446272,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALu_EsA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12599446272",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T00:08:47Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNhMjQ1YTcxYTRmZWNiYmQxNGI1NGM1ZWYzMDk4YTRlNjJiYzE4ZTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a245a71a4fecbbd14b54c5ef3098a4e62bc18e4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3a245a71a4fecbbd14b54c5ef3098a4e62bc18e4",
      "tree": {
        "sha": "617eb1dcd57608c6cab2882592c732c6ee2ef759",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/617eb1dcd57608c6cab2882592c732c6ee2ef759"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a07c4662d7266158d47f79fa2433ab22e22c907",
          "sha": "2a07c4662d7266158d47f79fa2433ab22e22c907",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2a07c4662d7266158d47f79fa2433ab22e22c907"
        }
      ],
      "message": "Add cluster linearization code\n\nTODO: add tests",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-25T00:13:25Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-05-25T19:12:55Z"
      },
      "sha": "3a245a71a4fecbbd14b54c5ef3098a4e62bc18e4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEzYmM0ODhkYWM0OTZlOTY2YjNhZTMyODJlY2FmMWM3OTEwYTE3MDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13bc488dac496e966b3ae3282ecaf1c7910a1703",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/13bc488dac496e966b3ae3282ecaf1c7910a1703",
      "tree": {
        "sha": "7280737ec673e6df9a802712749b427427e9206b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7280737ec673e6df9a802712749b427427e9206b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a245a71a4fecbbd14b54c5ef3098a4e62bc18e4",
          "sha": "3a245a71a4fecbbd14b54c5ef3098a4e62bc18e4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3a245a71a4fecbbd14b54c5ef3098a4e62bc18e4"
        }
      ],
      "message": "Add is_visited helper to epochguard",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-25T00:13:27Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-08T14:44:33Z"
      },
      "sha": "13bc488dac496e966b3ae3282ecaf1c7910a1703"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVhZmIwNjE3MWQ5M2Q5NDJlMzUzZjQ5MWE3YjExZTM1NGNmNWI0MDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5afb06171d93d942e353f491a7b11e354cf5b400",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5afb06171d93d942e353f491a7b11e354cf5b400",
      "tree": {
        "sha": "6f47e5dbe829a2b48046a50350d773a841c54bd5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f47e5dbe829a2b48046a50350d773a841c54bd5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13bc488dac496e966b3ae3282ecaf1c7910a1703",
          "sha": "13bc488dac496e966b3ae3282ecaf1c7910a1703",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/13bc488dac496e966b3ae3282ecaf1c7910a1703"
        }
      ],
      "message": "Add txgraph module",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:00:50Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-08T14:53:51Z"
      },
      "sha": "5afb06171d93d942e353f491a7b11e354cf5b400"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZkMjg5Mzc1ZTI2YmJjYjE1ZDk1MmRiMDAxN2Q0YWExYjZiZWIwNDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d289375e26bbcb15d952db0017d4aa1b6beb044",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6d289375e26bbcb15d952db0017d4aa1b6beb044",
      "tree": {
        "sha": "568f195e1067c3c111b2966de53ac4b1a4497fc4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/568f195e1067c3c111b2966de53ac4b1a4497fc4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5afb06171d93d942e353f491a7b11e354cf5b400",
          "sha": "5afb06171d93d942e353f491a7b11e354cf5b400",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5afb06171d93d942e353f491a7b11e354cf5b400"
        }
      ],
      "message": "add fuzz test for txgraph",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:00:50Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-13T10:40:41Z"
      },
      "sha": "6d289375e26bbcb15d952db0017d4aa1b6beb044"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA3YjU0YzAyOWQyMzk4NTAxMTEwMjAzZWEwMDcxZTNmMDJjMzkwYTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07b54c029d2398501110203ea0071e3f02c390a9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/07b54c029d2398501110203ea0071e3f02c390a9",
      "tree": {
        "sha": "44c851dd679dd9df730eb22e2cf29af7d404bcc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44c851dd679dd9df730eb22e2cf29af7d404bcc2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d289375e26bbcb15d952db0017d4aa1b6beb044",
          "sha": "6d289375e26bbcb15d952db0017d4aa1b6beb044",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6d289375e26bbcb15d952db0017d4aa1b6beb044"
        }
      ],
      "message": "Make CTxMemPoolEntry derive from TxEntry",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:00:50Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-08T16:12:28Z"
      },
      "sha": "07b54c029d2398501110203ea0071e3f02c390a9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEzYWI0NzJmNDJjYWQ2MzQ1OWMzMzBlZjJlNmEzNjU3ODVmNTkwMGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3ab472f42cad63459c330ef2e6a365785f5900a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a3ab472f42cad63459c330ef2e6a365785f5900a",
      "tree": {
        "sha": "6dc25629424d9cda7966e34f041495aa79a73112",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6dc25629424d9cda7966e34f041495aa79a73112"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07b54c029d2398501110203ea0071e3f02c390a9",
          "sha": "07b54c029d2398501110203ea0071e3f02c390a9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/07b54c029d2398501110203ea0071e3f02c390a9"
        }
      ],
      "message": "Track clusters in mempool with TxGraph",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:00:50Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-08T17:46:27Z"
      },
      "sha": "a3ab472f42cad63459c330ef2e6a365785f5900a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQxMWViMTBjNWYyMDNlNTM3ZGQ2Yjg2ZmVkMDg0ODhmZjZkMWVlOTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/411eb10c5f203e537dd6b86fed08488ff6d1ee96",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/411eb10c5f203e537dd6b86fed08488ff6d1ee96",
      "tree": {
        "sha": "f9b018fcdd70b90e23908c2706d3b393533c126d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f9b018fcdd70b90e23908c2706d3b393533c126d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3ab472f42cad63459c330ef2e6a365785f5900a",
          "sha": "a3ab472f42cad63459c330ef2e6a365785f5900a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a3ab472f42cad63459c330ef2e6a365785f5900a"
        }
      ],
      "message": "Limit mempool size based on chunk feerate\n\nRather than evicting the transactions with the lowest descendant feerate,\ninstead evict transactions that have the lowest chunk feerate.\n\nOnce mining is implemented based on choosing transactions with highest chunk\nfeerate (see next commit), mining and eviction will be opposites, so that we\nwill evict the transactions that would be mined last.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:00:50Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-21T00:55:50Z"
      },
      "sha": "411eb10c5f203e537dd6b86fed08488ff6d1ee96"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJiY2UyYjhjYzU3YjQ3MDVlZTY4NzU0NDVmNzUyMzg0ZDNkOTJiOWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2bce2b8cc57b4705ee6875445f752384d3d92b9d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2bce2b8cc57b4705ee6875445f752384d3d92b9d",
      "tree": {
        "sha": "d89be47c2d0dc0e8338abeb5c64066edc731d1a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d89be47c2d0dc0e8338abeb5c64066edc731d1a4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/411eb10c5f203e537dd6b86fed08488ff6d1ee96",
          "sha": "411eb10c5f203e537dd6b86fed08488ff6d1ee96",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/411eb10c5f203e537dd6b86fed08488ff6d1ee96"
        }
      ],
      "message": "Select transactions for blocks based on chunk feerate",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:00:50Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-21T01:16:36Z"
      },
      "sha": "2bce2b8cc57b4705ee6875445f752384d3d92b9d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAzYjIwMTUwYTBhZTEwNTVjMTQ0ZDhhZDM3YjlkZmE2OWQ2ZmJjY2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03b20150a0ae1055c144d8ad37b9dfa69d6fbccd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/03b20150a0ae1055c144d8ad37b9dfa69d6fbccd",
      "tree": {
        "sha": "05159f455dc1211ccd30f97caedcf6c9f5956fc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05159f455dc1211ccd30f97caedcf6c9f5956fc8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2bce2b8cc57b4705ee6875445f752384d3d92b9d",
          "sha": "2bce2b8cc57b4705ee6875445f752384d3d92b9d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2bce2b8cc57b4705ee6875445f752384d3d92b9d"
        }
      ],
      "message": "Add new (unused) limits for cluster size/count",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:00:50Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-21T10:17:40Z"
      },
      "sha": "03b20150a0ae1055c144d8ad37b9dfa69d6fbccd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNjZTUyMzQxOTIyNjAxNzI3NDcwMGE5OTQwMTMzMmJkNDViMDA0ODU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ce523419226017274700a99401332bd45b00485",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3ce523419226017274700a99401332bd45b00485",
      "tree": {
        "sha": "2933ef17bb02b9ddede05e6c3c45fc7078d85fe0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2933ef17bb02b9ddede05e6c3c45fc7078d85fe0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03b20150a0ae1055c144d8ad37b9dfa69d6fbccd",
          "sha": "03b20150a0ae1055c144d8ad37b9dfa69d6fbccd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/03b20150a0ae1055c144d8ad37b9dfa69d6fbccd"
        }
      ],
      "message": "Do not allow mempool clusters to exceed configured limits",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:00:50Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-21T12:58:04Z"
      },
      "sha": "3ce523419226017274700a99401332bd45b00485"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY3NTc2MTJhZjBiM2EyNTA5M2Y4NTNiYzVjZjg0NzU1YjQxMjA2YzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6757612af0b3a25093f853bc5cf84755b41206c3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6757612af0b3a25093f853bc5cf84755b41206c3",
      "tree": {
        "sha": "2623769bb393e66dcfb39eae304a8424af63e088",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2623769bb393e66dcfb39eae304a8424af63e088"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ce523419226017274700a99401332bd45b00485",
          "sha": "3ce523419226017274700a99401332bd45b00485",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3ce523419226017274700a99401332bd45b00485"
        }
      ],
      "message": "policy: Remove CPFP carveout rule\n\nThe addition of a cluster size limit makes the CPFP carveout rule useless,\nbecause carveout cannot be used to bypass the cluster size limit. Remove this\npolicy rule and update tests to no longer rely on the behavior.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:00:50Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-03T14:54:30Z"
      },
      "sha": "6757612af0b3a25093f853bc5cf84755b41206c3"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12617684642,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALwEpai",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12617684642",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T02:01:19Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhkY2UwYzQ1NWI1ZjQxZmNjN2QxZGM0OGNlNTIyOTU2NmM2MGM3ZDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8dce0c455b5f41fcc7d1dc48ce5229566c60c7d2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8dce0c455b5f41fcc7d1dc48ce5229566c60c7d2",
      "tree": {
        "sha": "00d3a145af41d51321461e12abe177a607282fe3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/00d3a145af41d51321461e12abe177a607282fe3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6757612af0b3a25093f853bc5cf84755b41206c3",
          "sha": "6757612af0b3a25093f853bc5cf84755b41206c3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6757612af0b3a25093f853bc5cf84755b41206c3"
        }
      ],
      "message": "Implement new RBF logic for cluster mempool\n\nWith a total ordering on mempool transactions, we are now able to calculate a\ntransaction's mining score at all times. Use this to improve the RBF logic:\n\n- we no longer enforce a \"no new unconfirmed parents\" rule\n\n- we now require that the mempool's feerate diagram must improve in order\n  to accept a replacement\n\nTODO: update functional test feature_rbf.py to cover all our new scenarios.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-21T17:19:32Z"
      },
      "sha": "8dce0c455b5f41fcc7d1dc48ce5229566c60c7d2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg4NTYwNDNhNjhiMDgyNTBlNTgwZTY4YzlkZTZkMTYzZDhkNTM3ZTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8856043a68b08250e580e68c9de6d163d8d537e1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8856043a68b08250e580e68c9de6d163d8d537e1",
      "tree": {
        "sha": "00d3a145af41d51321461e12abe177a607282fe3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/00d3a145af41d51321461e12abe177a607282fe3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8dce0c455b5f41fcc7d1dc48ce5229566c60c7d2",
          "sha": "8dce0c455b5f41fcc7d1dc48ce5229566c60c7d2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8dce0c455b5f41fcc7d1dc48ce5229566c60c7d2"
        }
      ],
      "message": "==== END CLUSTER IMPLEMENTATION ====",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-17T15:36:11Z"
      },
      "sha": "8856043a68b08250e580e68c9de6d163d8d537e1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU3MTI3OGY4MmY0MzIyMTY5OWQwY2RkMzcwMDlkMWMxYTExZTQzYjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e71278f82f43221699d0cdd37009d1c1a11e43b6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e71278f82f43221699d0cdd37009d1c1a11e43b6",
      "tree": {
        "sha": "00d3a145af41d51321461e12abe177a607282fe3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/00d3a145af41d51321461e12abe177a607282fe3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8856043a68b08250e580e68c9de6d163d8d537e1",
          "sha": "8856043a68b08250e580e68c9de6d163d8d537e1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8856043a68b08250e580e68c9de6d163d8d537e1"
        }
      ],
      "message": "==== BEGIN MEMPOOL CLEANUP ====",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-17T15:36:45Z"
      },
      "sha": "e71278f82f43221699d0cdd37009d1c1a11e43b6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRkNTA0OTg4NmI1YzUzMmYyYjIxMjgyMzFhZGE2OTQzMjgzMDZiOTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d5049886b5c532f2b2128231ada694328306b93",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4d5049886b5c532f2b2128231ada694328306b93",
      "tree": {
        "sha": "a9c85e6bea9ff7e3aa666efc69e82b747407c4e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9c85e6bea9ff7e3aa666efc69e82b747407c4e7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e71278f82f43221699d0cdd37009d1c1a11e43b6",
          "sha": "e71278f82f43221699d0cdd37009d1c1a11e43b6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e71278f82f43221699d0cdd37009d1c1a11e43b6"
        }
      ],
      "message": "Remove the ancestor and descendant indices from the mempool",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-21T18:45:20Z"
      },
      "sha": "4d5049886b5c532f2b2128231ada694328306b93"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQyOTFlZmRhOTZlZmZhN2M3NGNlMTgxMmIzNTljMzU2OTQ2NTkyYzc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d291efda96effa7c74ce1812b359c356946592c7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d291efda96effa7c74ce1812b359c356946592c7",
      "tree": {
        "sha": "f8d1005aa5b852ea2a15cabc4b5ae2aba7706eb8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8d1005aa5b852ea2a15cabc4b5ae2aba7706eb8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d5049886b5c532f2b2128231ada694328306b93",
          "sha": "4d5049886b5c532f2b2128231ada694328306b93",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4d5049886b5c532f2b2128231ada694328306b93"
        }
      ],
      "message": "Use cluster linearization for transaction relay sort order\n\nPreviously, transaction batches were first sorted by ancestor count and then\nfeerate, to ensure transactions are announced in a topologically valid order,\nwhile prioritizing higher feerate transactions. Ancestor count is a crude\ntopological sort criteria, so replace this with linearization order so that the\nhighest feerate transactions (as would be observed by the mining algorithm) are\nrelayed before lower feerate ones, in a topologically valid way.\n\nThis also fixes a test that only worked due to the ancestor-count-based sort\norder.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-27T18:47:42Z"
      },
      "sha": "d291efda96effa7c74ce1812b359c356946592c7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZiYWE4ODNjYWFiZTE3ZGE0N2YyNjU4Y2JjZWJhYjI1NjM4MmVjYjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbaa883caabe17da47f2658cbcebab256382ecb9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fbaa883caabe17da47f2658cbcebab256382ecb9",
      "tree": {
        "sha": "8f9d81c55907833583cc6325dbb02f6c0760dd5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f9d81c55907833583cc6325dbb02f6c0760dd5d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d291efda96effa7c74ce1812b359c356946592c7",
          "sha": "d291efda96effa7c74ce1812b359c356946592c7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d291efda96effa7c74ce1812b359c356946592c7"
        }
      ],
      "message": "Remove CTxMemPool::GetSortedDepthAndScore\n\nThe mempool clusters and linearization permit sorting the mempool topologically\nwithout making use of ancestor counts.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-28T14:20:04Z"
      },
      "sha": "fbaa883caabe17da47f2658cbcebab256382ecb9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFiYWFlOGNiNGNlYTdlMTZlNGU5MzdmODAwMGE4MDM4OWU2NWNjZTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/abaae8cb4cea7e16e4e937f8000a80389e65cce4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/abaae8cb4cea7e16e4e937f8000a80389e65cce4",
      "tree": {
        "sha": "af2fec9d3d6e437ed662b8c1137bcbf02d7ff6ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af2fec9d3d6e437ed662b8c1137bcbf02d7ff6ed"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbaa883caabe17da47f2658cbcebab256382ecb9",
          "sha": "fbaa883caabe17da47f2658cbcebab256382ecb9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fbaa883caabe17da47f2658cbcebab256382ecb9"
        }
      ],
      "message": "Reimplement GetTransactionAncestry() to not rely on cached data\n\nIn preparation for removing ancestor data from CTxMemPoolEntry, recalculate the\nancestor statistics on demand wherever needed.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-28T18:47:40Z"
      },
      "sha": "abaae8cb4cea7e16e4e937f8000a80389e65cce4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNiNTk0NGMwMWE1ZmNiMzU5NzcyOGYwMzNiMmM3N2IxNjI5MDQ2MmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b5944c01a5fcb3597728f033b2c77b16290462f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3b5944c01a5fcb3597728f033b2c77b16290462f",
      "tree": {
        "sha": "7082bae8585425b64f3dfeab8f8d86dd76c0a7b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7082bae8585425b64f3dfeab8f8d86dd76c0a7b7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/abaae8cb4cea7e16e4e937f8000a80389e65cce4",
          "sha": "abaae8cb4cea7e16e4e937f8000a80389e65cce4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/abaae8cb4cea7e16e4e937f8000a80389e65cce4"
        }
      ],
      "message": "rpc: Calculate ancestor data from scratch for mempool rpc calls",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-28T19:07:05Z"
      },
      "sha": "3b5944c01a5fcb3597728f033b2c77b16290462f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJlNDhiMjFkMzcxOTRjNWI4MzI4NGNhODczZjZmNTFiMWUxOWZiNDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be48b21d37194c5b83284ca873f6f51b1e19fb40",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/be48b21d37194c5b83284ca873f6f51b1e19fb40",
      "tree": {
        "sha": "f734e063236c54519a84f2ff06d3693627948ea1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f734e063236c54519a84f2ff06d3693627948ea1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b5944c01a5fcb3597728f033b2c77b16290462f",
          "sha": "3b5944c01a5fcb3597728f033b2c77b16290462f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3b5944c01a5fcb3597728f033b2c77b16290462f"
        }
      ],
      "message": "Remove dependency on cached ancestor data in mini-miner",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-28T21:55:16Z"
      },
      "sha": "be48b21d37194c5b83284ca873f6f51b1e19fb40"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVhMmNhNmFlMWZhYWJiNDU2ZjQyMmVmNGQ1OTczYjg5ZTU1OTk1ZGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea2ca6ae1faabb456f422ef4d5973b89e55995dd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ea2ca6ae1faabb456f422ef4d5973b89e55995dd",
      "tree": {
        "sha": "2e8416ed054d3102914333d08e6108b523db6379",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e8416ed054d3102914333d08e6108b523db6379"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be48b21d37194c5b83284ca873f6f51b1e19fb40",
          "sha": "be48b21d37194c5b83284ca873f6f51b1e19fb40",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/be48b21d37194c5b83284ca873f6f51b1e19fb40"
        }
      ],
      "message": "Stop enforcing ancestor size/count limits\n\nThe cluster limits should be sufficient.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-09-28T21:59:15Z"
      },
      "sha": "ea2ca6ae1faabb456f422ef4d5973b89e55995dd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdiMGU0YjNkNTg5YWU2NTM0YjZlZjg5OTE2OTFjOTYxNzQwMjc0MTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b0e4b3d589ae6534b6ef8991691c96174027411",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7b0e4b3d589ae6534b6ef8991691c96174027411",
      "tree": {
        "sha": "11d161fe482e942bda0ee2cc08b056d1ed2de3f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/11d161fe482e942bda0ee2cc08b056d1ed2de3f5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea2ca6ae1faabb456f422ef4d5973b89e55995dd",
          "sha": "ea2ca6ae1faabb456f422ef4d5973b89e55995dd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ea2ca6ae1faabb456f422ef4d5973b89e55995dd"
        }
      ],
      "message": "Add test case for cluster size limits to v3 logic",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-14T10:59:01Z"
      },
      "sha": "7b0e4b3d589ae6534b6ef8991691c96174027411"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ5MmI5NzZiOGZjZTg2NjMzNmRhNzIyNjQ2ZjJjZDNlNWUxZTQzYzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d92b976b8fce866336da722646f2cd3e5e1e43c9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d92b976b8fce866336da722646f2cd3e5e1e43c9",
      "tree": {
        "sha": "49d04a103d7efcebf4194918af682d893106e8e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/49d04a103d7efcebf4194918af682d893106e8e7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b0e4b3d589ae6534b6ef8991691c96174027411",
          "sha": "7b0e4b3d589ae6534b6ef8991691c96174027411",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7b0e4b3d589ae6534b6ef8991691c96174027411"
        }
      ],
      "message": "Use mempool/txgraph to determine if a tx has descendants\n\nRemove a reference to GetCountWithDescendants() in preparation for removing\nthis function and the associated cached state from the mempool.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-03T15:19:15Z"
      },
      "sha": "d92b976b8fce866336da722646f2cd3e5e1e43c9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIxNjg5NzJjZjdkOWE3YWRjZTE0NDI5MjcyNjAzZjkyZjkyM2Q4ZGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b168972cf7d9a7adce14429272603f92f923d8de",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b168972cf7d9a7adce14429272603f92f923d8de",
      "tree": {
        "sha": "297d0471c47d8009448c6b8090b0057de8df6bdf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/297d0471c47d8009448c6b8090b0057de8df6bdf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d92b976b8fce866336da722646f2cd3e5e1e43c9",
          "sha": "d92b976b8fce866336da722646f2cd3e5e1e43c9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d92b976b8fce866336da722646f2cd3e5e1e43c9"
        }
      ],
      "message": "Calculate descendant information for mempool RPC output on-the-fly\n\nThis is in preparation for removing the cached descendant state from the\nmempool.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-03T15:57:16Z"
      },
      "sha": "b168972cf7d9a7adce14429272603f92f923d8de"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYxOWVlNWQ2ZGNiYjY0MGNhN2VjODIzODljMDFiMGZjMjcwYWI2OTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f19ee5d6dcbb640ca7ec82389c01b0fc270ab699",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f19ee5d6dcbb640ca7ec82389c01b0fc270ab699",
      "tree": {
        "sha": "05c0b6328dbe34bb63be36447d237b8c55a9fe26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05c0b6328dbe34bb63be36447d237b8c55a9fe26"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b168972cf7d9a7adce14429272603f92f923d8de",
          "sha": "b168972cf7d9a7adce14429272603f92f923d8de",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b168972cf7d9a7adce14429272603f92f923d8de"
        }
      ],
      "message": "test: fix rbf carveout test in mempool_limit.py\n\nMinimal fix to the test that the RBF carveout doesn't apply in certain package\nvalidation cases. Now that RBF carveout doesn't exist, we can just test that\nthe cluster count limit is respected (in preparation for removing the\ndescendant limit altogether).",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-18T17:22:09Z"
      },
      "sha": "f19ee5d6dcbb640ca7ec82389c01b0fc270ab699"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUyNzVkYjkzNmY4YmQ2OTM1NTI0NDhhMjg4ZGVhYjA3NTlmNmY3ODY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5275db936f8bd693552448a288deab0759f6f786",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5275db936f8bd693552448a288deab0759f6f786",
      "tree": {
        "sha": "365c8b138dd86d2bf30f6147eb964f4159fc4ae9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/365c8b138dd86d2bf30f6147eb964f4159fc4ae9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f19ee5d6dcbb640ca7ec82389c01b0fc270ab699",
          "sha": "f19ee5d6dcbb640ca7ec82389c01b0fc270ab699",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f19ee5d6dcbb640ca7ec82389c01b0fc270ab699"
        }
      ],
      "message": "Stop enforcing descendant size/count limits\n\nCluster size limits should be enough.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-03T17:56:22Z"
      },
      "sha": "5275db936f8bd693552448a288deab0759f6f786"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQyYTRjMjQyNzM3YmI2MWZlZDNiOGM3NGMzN2VmZWU3NGMwNjk0OGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2a4c242737bb61fed3b8c74c37efee74c06948d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d2a4c242737bb61fed3b8c74c37efee74c06948d",
      "tree": {
        "sha": "ed2d611faf719abaf1c8cc6f2e4f2ab7d3181e3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed2d611faf719abaf1c8cc6f2e4f2ab7d3181e3a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5275db936f8bd693552448a288deab0759f6f786",
          "sha": "5275db936f8bd693552448a288deab0759f6f786",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5275db936f8bd693552448a288deab0759f6f786"
        }
      ],
      "message": "wallet: Replace max descendantsize with clustersize\n\nWith the descendant size limits removed, replace the concept of \"max number of\ndescendants of any ancestor of a given tx\" with the cluster count of the cluster\nthat the transaction belongs to.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-03T19:00:00Z"
      },
      "sha": "d2a4c242737bb61fed3b8c74c37efee74c06948d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUxYzk0MmExOTlhZmE4ZTg5YWUyMDQwNzEzMTBhOTNjMjU4MTg5MmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1c942a199afa8e89ae204071310a93c2581892c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e1c942a199afa8e89ae204071310a93c2581892c",
      "tree": {
        "sha": "61f654394c96638f7d51b705f8160092e0250a63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/61f654394c96638f7d51b705f8160092e0250a63"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2a4c242737bb61fed3b8c74c37efee74c06948d",
          "sha": "d2a4c242737bb61fed3b8c74c37efee74c06948d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d2a4c242737bb61fed3b8c74c37efee74c06948d"
        }
      ],
      "message": "mempool: Remove unused function CalculateDescendantMaximum",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-04T13:19:21Z"
      },
      "sha": "e1c942a199afa8e89ae204071310a93c2581892c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVlZDBjMjdjM2U1NzAzZDkzNDExYTljMmFmOWVjMDAyY2I5ODM3N2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ed0c27c3e5703d93411a9c2af9ec002cb98377a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5ed0c27c3e5703d93411a9c2af9ec002cb98377a",
      "tree": {
        "sha": "625c8dfa969a40922b73c590421381e57ab287af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/625c8dfa969a40922b73c590421381e57ab287af"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1c942a199afa8e89ae204071310a93c2581892c",
          "sha": "e1c942a199afa8e89ae204071310a93c2581892c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e1c942a199afa8e89ae204071310a93c2581892c"
        }
      ],
      "message": "Eliminate RBF workaround for CPFP carveout transactions\n\nThe new cluster mempool RBF rules take into account clusters sizes exactly, so\nwith the removal of descendant count enforcement this idea is obsolete.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-04T13:13:23Z"
      },
      "sha": "5ed0c27c3e5703d93411a9c2af9ec002cb98377a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQzMGUwNjIyZjc0ZmFiYTY0ZTk0NTM3N2UwZDY0N2EzNjgxMDcxMDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d30e0622f74faba64e945377e0d647a368107107",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d30e0622f74faba64e945377e0d647a368107107",
      "tree": {
        "sha": "fc759d82fc99f06285c29731819f89c8b3fd791d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc759d82fc99f06285c29731819f89c8b3fd791d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ed0c27c3e5703d93411a9c2af9ec002cb98377a",
          "sha": "5ed0c27c3e5703d93411a9c2af9ec002cb98377a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5ed0c27c3e5703d93411a9c2af9ec002cb98377a"
        }
      ],
      "message": "Eliminate use of cached ancestor data in miniminer_tests and v3_policy",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-14T17:49:03Z"
      },
      "sha": "d30e0622f74faba64e945377e0d647a368107107"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdlMGIzY2FjNTU0ZmU1ZTJlMmRiNTMzMmE2M2M4Zjg4MTk1MGRiN2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e0b3cac554fe5e2e2db5332a63c8f881950db7f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7e0b3cac554fe5e2e2db5332a63c8f881950db7f",
      "tree": {
        "sha": "0d428cfefc1cefd92d0171c4e039f9834b90bd54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d428cfefc1cefd92d0171c4e039f9834b90bd54"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d30e0622f74faba64e945377e0d647a368107107",
          "sha": "d30e0622f74faba64e945377e0d647a368107107",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d30e0622f74faba64e945377e0d647a368107107"
        }
      ],
      "message": "mempool: eliminate accessors to mempool entry ancestor/descendant cached state",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-04T13:28:05Z"
      },
      "sha": "7e0b3cac554fe5e2e2db5332a63c8f881950db7f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVhN2FhODQxYjAxYjg5MzVhYmVlMDMzMTg5MDE2NTQ3ZDk4YmQwMDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a7aa841b01b8935abee033189016547d98bd006",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5a7aa841b01b8935abee033189016547d98bd006",
      "tree": {
        "sha": "4fe00e2d8c14247ac9bce28c69d5bb0f883275d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4fe00e2d8c14247ac9bce28c69d5bb0f883275d5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e0b3cac554fe5e2e2db5332a63c8f881950db7f",
          "sha": "7e0b3cac554fe5e2e2db5332a63c8f881950db7f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7e0b3cac554fe5e2e2db5332a63c8f881950db7f"
        }
      ],
      "message": "Remove unused members from CTxMemPoolEntry",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:14Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-04T13:48:04Z"
      },
      "sha": "5a7aa841b01b8935abee033189016547d98bd006"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc5YmFkNDY3ZTIwYTE4NmFkOGU2MWIzNjg1NTBhZjEyNTkxNzIxYjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79bad467e20a186ad8e61b368550af12591721b4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/79bad467e20a186ad8e61b368550af12591721b4",
      "tree": {
        "sha": "4ed40693913a52bc7485821651ff2bf29fa22f8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ed40693913a52bc7485821651ff2bf29fa22f8a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a7aa841b01b8935abee033189016547d98bd006",
          "sha": "5a7aa841b01b8935abee033189016547d98bd006",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5a7aa841b01b8935abee033189016547d98bd006"
        }
      ],
      "message": "Remove mempool logic designed to maintain ancestor/descendant state",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-04T14:47:14Z"
      },
      "sha": "79bad467e20a186ad8e61b368550af12591721b4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE4YmQ2OTY5M2VkNzRjMTBkN2FjMDMwNmIzZjRlOWE1OTc0MDQxZjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18bd69693ed74c10d7ac0306b3f4e9a5974041f9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/18bd69693ed74c10d7ac0306b3f4e9a5974041f9",
      "tree": {
        "sha": "e9b0f1c590f8f5e82f71b54f5daf37f77333f4de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9b0f1c590f8f5e82f71b54f5daf37f77333f4de"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79bad467e20a186ad8e61b368550af12591721b4",
          "sha": "79bad467e20a186ad8e61b368550af12591721b4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/79bad467e20a186ad8e61b368550af12591721b4"
        }
      ],
      "message": "mempool: addUnchecked no longer needs ancestors",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-05T13:33:41Z"
      },
      "sha": "18bd69693ed74c10d7ac0306b3f4e9a5974041f9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU1YjM5N2JmYjkzNTc5N2M0NWY2ZjVmYzBkMmRlYmY4YjJiOWM0MDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55b397bfb935797c45f6f5fc0d2debf8b2b9c402",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/55b397bfb935797c45f6f5fc0d2debf8b2b9c402",
      "tree": {
        "sha": "f6aa6bc7a475c4a092b0aa6e68a3d1dc8f4640e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6aa6bc7a475c4a092b0aa6e68a3d1dc8f4640e0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18bd69693ed74c10d7ac0306b3f4e9a5974041f9",
          "sha": "18bd69693ed74c10d7ac0306b3f4e9a5974041f9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/18bd69693ed74c10d7ac0306b3f4e9a5974041f9"
        }
      ],
      "message": "Remove unused limits from CalculateMemPoolAncestors",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-15T01:15:06Z"
      },
      "sha": "55b397bfb935797c45f6f5fc0d2debf8b2b9c402"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRkOTczOGMzOWNlMTg4NmY1ZjJkNDFkZWRiN2M3ZDk0NDFjODRiNzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d9738c39ce1886f5f2d41dedb7c7d9441c84b79",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4d9738c39ce1886f5f2d41dedb7c7d9441c84b79",
      "tree": {
        "sha": "da39400fa174521fa66fb0500b003fc10ede35ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da39400fa174521fa66fb0500b003fc10ede35ca"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55b397bfb935797c45f6f5fc0d2debf8b2b9c402",
          "sha": "55b397bfb935797c45f6f5fc0d2debf8b2b9c402",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/55b397bfb935797c45f6f5fc0d2debf8b2b9c402"
        }
      ],
      "message": "Make removeConflicts private",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-15T10:12:22Z"
      },
      "sha": "4d9738c39ce1886f5f2d41dedb7c7d9441c84b79"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYyZTA4ZGJiMmY3OGZjZTNmMDFlMzQ5NTU0OGM0NGEyZTQxMjA4MTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62e08dbb2f78fce3f01e3495548c44a2e4120810",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/62e08dbb2f78fce3f01e3495548c44a2e4120810",
      "tree": {
        "sha": "da39400fa174521fa66fb0500b003fc10ede35ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da39400fa174521fa66fb0500b003fc10ede35ca"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d9738c39ce1886f5f2d41dedb7c7d9441c84b79",
          "sha": "4d9738c39ce1886f5f2d41dedb7c7d9441c84b79",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4d9738c39ce1886f5f2d41dedb7c7d9441c84b79"
        }
      ],
      "message": "==== END MEMPOOL CLEANUP ====",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-17T15:36:50Z"
      },
      "sha": "62e08dbb2f78fce3f01e3495548c44a2e4120810"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDljNjA2ZjZjMjk3ZmFkYTdmOWU0M2U3ZjMxNGJjMDc3MTY3NDAxNjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c606f6c297fada7f9e43e7f314bc07716740164",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9c606f6c297fada7f9e43e7f314bc07716740164",
      "tree": {
        "sha": "da39400fa174521fa66fb0500b003fc10ede35ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da39400fa174521fa66fb0500b003fc10ede35ca"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62e08dbb2f78fce3f01e3495548c44a2e4120810",
          "sha": "62e08dbb2f78fce3f01e3495548c44a2e4120810",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/62e08dbb2f78fce3f01e3495548c44a2e4120810"
        }
      ],
      "message": "==== BEGIN OPTIMIZATIONS ====",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-17T15:37:03Z"
      },
      "sha": "9c606f6c297fada7f9e43e7f314bc07716740164"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk3ODViNzhmNTY0OWJmNjZkMTEzM2UzZjZiMWNlNTY0NDg5OTRmMDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9785b78f5649bf66d1133e3f6b1ce56448994f06",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9785b78f5649bf66d1133e3f6b1ce56448994f06",
      "tree": {
        "sha": "21b4e54fb0606093fa0d8c27b55d4ebe6ac4b058",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21b4e54fb0606093fa0d8c27b55d4ebe6ac4b058"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c606f6c297fada7f9e43e7f314bc07716740164",
          "sha": "9c606f6c297fada7f9e43e7f314bc07716740164",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9c606f6c297fada7f9e43e7f314bc07716740164"
        }
      ],
      "message": "Rework removeForBlock so that clusters are only touched once\n\nAlso remove extra linearization that was happening and some logging",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2023-10-10T19:42:56Z"
      },
      "sha": "9785b78f5649bf66d1133e3f6b1ce56448994f06"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYyNmMwYmRlYTg1MDE3YjViZTdkMjM3OGI0YWQ2OGZmZWM4MjcwZGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f26c0bdea85017b5be7d2378b4ad68ffec8270de",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f26c0bdea85017b5be7d2378b4ad68ffec8270de",
      "tree": {
        "sha": "4d9570c70c614e12484fe8f0c14dfb473bd3f9c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d9570c70c614e12484fe8f0c14dfb473bd3f9c8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9785b78f5649bf66d1133e3f6b1ce56448994f06",
          "sha": "9785b78f5649bf66d1133e3f6b1ce56448994f06",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9785b78f5649bf66d1133e3f6b1ce56448994f06"
        }
      ],
      "message": "Simplify ancestor calculation functions\n\nNow that ancestor calculation never fails (due to ancestor/descendant limits\nbeing eliminated), we can eliminate the error handling from\nCalculateMemPoolAncestors.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-15T01:31:51Z"
      },
      "sha": "f26c0bdea85017b5be7d2378b4ad68ffec8270de"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ3MTczZWUwNzliZDY5Y2RkZTNkYmU4Mzk1YTQ2YmY5OGQzYTRhNDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/47173ee079bd69cdde3dbe8395a46bf98d3a4a40",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/47173ee079bd69cdde3dbe8395a46bf98d3a4a40",
      "tree": {
        "sha": "3266f2e733a7fdc8173a825cd305f9df73d8c30a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3266f2e733a7fdc8173a825cd305f9df73d8c30a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f26c0bdea85017b5be7d2378b4ad68ffec8270de",
          "sha": "f26c0bdea85017b5be7d2378b4ad68ffec8270de",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f26c0bdea85017b5be7d2378b4ad68ffec8270de"
        }
      ],
      "message": "Use txgraph to calculate ancestors",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-14T22:21:34Z"
      },
      "sha": "47173ee079bd69cdde3dbe8395a46bf98d3a4a40"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRlNzE0OTg0MzNhNzc2YWNjY2Q2ZThiNmY1ODhkM2UwZTNiYjgwZWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e71498433a776acccd6e8b6f588d3e0e3bb80ee",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4e71498433a776acccd6e8b6f588d3e0e3bb80ee",
      "tree": {
        "sha": "4ed108b04468349528f5527a2bdb81574217180b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ed108b04468349528f5527a2bdb81574217180b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/47173ee079bd69cdde3dbe8395a46bf98d3a4a40",
          "sha": "47173ee079bd69cdde3dbe8395a46bf98d3a4a40",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/47173ee079bd69cdde3dbe8395a46bf98d3a4a40"
        }
      ],
      "message": "Use txgraph to calculate descendants",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-14T23:28:25Z"
      },
      "sha": "4e71498433a776acccd6e8b6f588d3e0e3bb80ee"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM2NGQ1MDEwZjc4ZGZiMjY1ZmY4YmE4Nzg2NThkMDdiZjdjY2ZlMzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c64d5010f78dfb265ff8ba878658d07bf7ccfe35",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c64d5010f78dfb265ff8ba878658d07bf7ccfe35",
      "tree": {
        "sha": "fd76b98e21ffad384e811090dee3ff45ae50fac3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd76b98e21ffad384e811090dee3ff45ae50fac3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e71498433a776acccd6e8b6f588d3e0e3bb80ee",
          "sha": "4e71498433a776acccd6e8b6f588d3e0e3bb80ee",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4e71498433a776acccd6e8b6f588d3e0e3bb80ee"
        }
      ],
      "message": "Move GetNumChildren() to be a mempool function",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T14:47:28Z"
      },
      "sha": "c64d5010f78dfb265ff8ba878658d07bf7ccfe35"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA5NjAzMjAyNDE2YjAwZWNhODQzMjk3NjFmNGY1NjJlYWQwZDliY2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09603202416b00eca84329761f4f562ead0d9bcd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/09603202416b00eca84329761f4f562ead0d9bcd",
      "tree": {
        "sha": "1a3effe771ae8023b9d59dbf094687bca9191dc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a3effe771ae8023b9d59dbf094687bca9191dc1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c64d5010f78dfb265ff8ba878658d07bf7ccfe35",
          "sha": "c64d5010f78dfb265ff8ba878658d07bf7ccfe35",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c64d5010f78dfb265ff8ba878658d07bf7ccfe35"
        }
      ],
      "message": "Make getting parents/children a function of the mempool, not a mempool entry",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T15:02:26Z"
      },
      "sha": "09603202416b00eca84329761f4f562ead0d9bcd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ1MDVkNWE0YTY2OWVkYTFmZTQ4ZWZjMzEzYzZjYzU0NjZiOTUzMTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d505d5a4a669eda1fe48efc313c6cc5466b95315",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d505d5a4a669eda1fe48efc313c6cc5466b95315",
      "tree": {
        "sha": "ead47873a0a9db172298dd3be7b0a93ae7bdd4aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ead47873a0a9db172298dd3be7b0a93ae7bdd4aa"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09603202416b00eca84329761f4f562ead0d9bcd",
          "sha": "09603202416b00eca84329761f4f562ead0d9bcd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/09603202416b00eca84329761f4f562ead0d9bcd"
        }
      ],
      "message": "Rewrite GatherClusters to use the txgraph implementation",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T15:10:07Z"
      },
      "sha": "d505d5a4a669eda1fe48efc313c6cc5466b95315"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRkYTA4NjhlNjEyOThiMTZiMTU4ZDc1OWUwZjE5OWMwN2Q3YjNiMmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dda0868e61298b16b158d759e0f199c07d7b3b2f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dda0868e61298b16b158d759e0f199c07d7b3b2f",
      "tree": {
        "sha": "f92080059c3e0a666454d18b0c2d7e44f9d093cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f92080059c3e0a666454d18b0c2d7e44f9d093cd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d505d5a4a669eda1fe48efc313c6cc5466b95315",
          "sha": "d505d5a4a669eda1fe48efc313c6cc5466b95315",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d505d5a4a669eda1fe48efc313c6cc5466b95315"
        }
      ],
      "message": "Switch to using txgraph parents/children in public accessors",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T15:11:04Z"
      },
      "sha": "dda0868e61298b16b158d759e0f199c07d7b3b2f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg1NDNlZGZkNmM2ZTEwZWE0YWFkNTYzYTc0ZWU4ZDhkNTY5ODA1ZGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8543edfd6c6e10ea4aad563a74ee8d8d569805de",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8543edfd6c6e10ea4aad563a74ee8d8d569805de",
      "tree": {
        "sha": "b7fb757aaf11aa3e05d06e1a0c9426c393e6f0c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b7fb757aaf11aa3e05d06e1a0c9426c393e6f0c9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dda0868e61298b16b158d759e0f199c07d7b3b2f",
          "sha": "dda0868e61298b16b158d759e0f199c07d7b3b2f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dda0868e61298b16b158d759e0f199c07d7b3b2f"
        }
      ],
      "message": "Stop tracking parents/children outside of txgraph",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T16:13:42Z"
      },
      "sha": "8543edfd6c6e10ea4aad563a74ee8d8d569805de"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIxMzVjZTgyNGM3NmRlYjgzMWM0NThlMTE0ZGEwMGY5ZTVmMjU0NzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b135ce824c76deb831c458e114da00f9e5f25470",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b135ce824c76deb831c458e114da00f9e5f25470",
      "tree": {
        "sha": "4ba58214713b7267ae5e6250bb6227a922adb00c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ba58214713b7267ae5e6250bb6227a922adb00c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8543edfd6c6e10ea4aad563a74ee8d8d569805de",
          "sha": "8543edfd6c6e10ea4aad563a74ee8d8d569805de",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8543edfd6c6e10ea4aad563a74ee8d8d569805de"
        }
      ],
      "message": "Remove unused argument to RemoveStaged",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T17:37:46Z"
      },
      "sha": "b135ce824c76deb831c458e114da00f9e5f25470"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQyZDVlYjgwYzVhNWUxZjQxYmYzZDQwYjUzYTA1YjNlZDc0ZDQwMWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42d5eb80c5a5e1f41bf3d40b53a05b3ed74d401b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/42d5eb80c5a5e1f41bf3d40b53a05b3ed74d401b",
      "tree": {
        "sha": "f9fbf913386b5b1d587584bfef243bc93e7fd139",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f9fbf913386b5b1d587584bfef243bc93e7fd139"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b135ce824c76deb831c458e114da00f9e5f25470",
          "sha": "b135ce824c76deb831c458e114da00f9e5f25470",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b135ce824c76deb831c458e114da00f9e5f25470"
        }
      ],
      "message": "Switch to using the faster CalculateDescendants\n\nThe only place we still use the older interface is in policy/rbf.cpp, where\nit's helpful to incrementally calculate descendants to avoid calculating too\nmany at once (or cluttering the CalculateDescendants interface with a\ncalculation limit).",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-16T00:57:53Z"
      },
      "sha": "42d5eb80c5a5e1f41bf3d40b53a05b3ed74d401b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNkNmVkZjdlNWUyOWE1ZTg2Yzk3ZjA3M2I0MzcxM2Y2N2I0MmY3YWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d6edf7e5e29a5e86c97f073b43713f67b42f7aa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3d6edf7e5e29a5e86c97f073b43713f67b42f7aa",
      "tree": {
        "sha": "1acd9091c04d1c3086a9dbb3340a83023888b76b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1acd9091c04d1c3086a9dbb3340a83023888b76b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42d5eb80c5a5e1f41bf3d40b53a05b3ed74d401b",
          "sha": "42d5eb80c5a5e1f41bf3d40b53a05b3ed74d401b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/42d5eb80c5a5e1f41bf3d40b53a05b3ed74d401b"
        }
      ],
      "message": "Rewrite removeRecursive to use vectors instead of sets",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T17:42:55Z"
      },
      "sha": "3d6edf7e5e29a5e86c97f073b43713f67b42f7aa"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBlMGUwODhjNTE1YTI4OWQ1YTI0ZmMxYzY4M2ZhZDM2M2FkMGEyOWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e0e088c515a289d5a24fc1c683fad363ad0a29b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0e0e088c515a289d5a24fc1c683fad363ad0a29b",
      "tree": {
        "sha": "fd8f66e65308cce8c12d2e26bc99124fc19ae825",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd8f66e65308cce8c12d2e26bc99124fc19ae825"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d6edf7e5e29a5e86c97f073b43713f67b42f7aa",
          "sha": "3d6edf7e5e29a5e86c97f073b43713f67b42f7aa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3d6edf7e5e29a5e86c97f073b43713f67b42f7aa"
        }
      ],
      "message": "Rewrite Expire to only invoke CalculateDescendants once",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T17:47:10Z"
      },
      "sha": "0e0e088c515a289d5a24fc1c683fad363ad0a29b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY4YjAyOWQ3M2Y2MGE2N2JhODE1ZWVmNzQ0NmJmMDQyYTM0ODg3Njc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8b029d73f60a67ba815eef7446bf042a3488767",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f8b029d73f60a67ba815eef7446bf042a3488767",
      "tree": {
        "sha": "33570b78d811b092e357d0f7a807ecb3c244443e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33570b78d811b092e357d0f7a807ecb3c244443e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e0e088c515a289d5a24fc1c683fad363ad0a29b",
          "sha": "0e0e088c515a289d5a24fc1c683fad363ad0a29b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0e0e088c515a289d5a24fc1c683fad363ad0a29b"
        }
      ],
      "message": "Rewrite removeForReorg to use a vector instead of a set",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T17:53:12Z"
      },
      "sha": "f8b029d73f60a67ba815eef7446bf042a3488767"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFiMDZjYzhkMDk3ODk0MTU4OTZiMWM4Njk5MDU5ZWUzYmFmOTYzYjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b06cc8d09789415896b1c8699059ee3baf963b5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1b06cc8d09789415896b1c8699059ee3baf963b5",
      "tree": {
        "sha": "e868e1ffb2a1d0c169a5d084d21e7c57f9618198",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e868e1ffb2a1d0c169a5d084d21e7c57f9618198"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8b029d73f60a67ba815eef7446bf042a3488767",
          "sha": "f8b029d73f60a67ba815eef7446bf042a3488767",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f8b029d73f60a67ba815eef7446bf042a3488767"
        }
      ],
      "message": "Drop unnecessary set in TrimToSize",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T19:08:47Z"
      },
      "sha": "1b06cc8d09789415896b1c8699059ee3baf963b5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI0MjE4MGQ4NGE5OWEyYzdmZTY5MDFmMTgxZWM0YTU5MjQzMjU1Mzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/242180d84a99a2c7fe6901f181ec4a5924325538",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/242180d84a99a2c7fe6901f181ec4a5924325538",
      "tree": {
        "sha": "31b9c667fe9b0e435d56d68bbd1c9daa833249e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31b9c667fe9b0e435d56d68bbd1c9daa833249e4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b06cc8d09789415896b1c8699059ee3baf963b5",
          "sha": "1b06cc8d09789415896b1c8699059ee3baf963b5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1b06cc8d09789415896b1c8699059ee3baf963b5"
        }
      ],
      "message": "RemoveStaged takes a vector, not a set",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T19:53:35Z"
      },
      "sha": "242180d84a99a2c7fe6901f181ec4a5924325538"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE1NTE3OTAzZjZkOWE3ZTBmNjM2ZWU1NjQ4OGRjY2I4ZmNiOTkxMWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15517903f6d9a7e0f636ee56488dccb8fcb9911c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/15517903f6d9a7e0f636ee56488dccb8fcb9911c",
      "tree": {
        "sha": "8227386c1abac5f7d6caa7c700ae405676f69c02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8227386c1abac5f7d6caa7c700ae405676f69c02"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/242180d84a99a2c7fe6901f181ec4a5924325538",
          "sha": "242180d84a99a2c7fe6901f181ec4a5924325538",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/242180d84a99a2c7fe6901f181ec4a5924325538"
        }
      ],
      "message": "Only use CalculateDescendants() with vectors, not sets",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T20:02:06Z"
      },
      "sha": "15517903f6d9a7e0f636ee56488dccb8fcb9911c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAyNmQ3YjJhYjdkMDFhYmQyMDQ4ODRiNjQzYzZhOGYwNjU0MWRjZGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/026d7b2ab7d01abd204884b643c6a8f06541dcda",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/026d7b2ab7d01abd204884b643c6a8f06541dcda",
      "tree": {
        "sha": "5b3fb326c746ba8c1c6513c8de48e2bb82c1b7bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b3fb326c746ba8c1c6513c8de48e2bb82c1b7bd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15517903f6d9a7e0f636ee56488dccb8fcb9911c",
          "sha": "15517903f6d9a7e0f636ee56488dccb8fcb9911c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/15517903f6d9a7e0f636ee56488dccb8fcb9911c"
        }
      ],
      "message": "Use faster CalculateMemPoolAncestors in rbf",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T21:11:47Z"
      },
      "sha": "026d7b2ab7d01abd204884b643c6a8f06541dcda"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE1OGVkYWQ2MWI0ZWY1MWI2MWJiYWQ1Mjg0MDRjNTk2ZmJiNGM1YmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/158edad61b4ef51b61bbad528404c596fbb4c5bb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/158edad61b4ef51b61bbad528404c596fbb4c5bb",
      "tree": {
        "sha": "d316a8795651a1f495615e4522ce7a33e266379b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d316a8795651a1f495615e4522ce7a33e266379b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/026d7b2ab7d01abd204884b643c6a8f06541dcda",
          "sha": "026d7b2ab7d01abd204884b643c6a8f06541dcda",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/026d7b2ab7d01abd204884b643c6a8f06541dcda"
        }
      ],
      "message": "Use faster CMPA in rpc/mempool",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T21:12:37Z"
      },
      "sha": "158edad61b4ef51b61bbad528404c596fbb4c5bb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUzMzkyNTVkMjM2MTdhNDc1ZDE2MzYwM2QzZTcxYWY4MjI0NGY2Mzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5339255d23617a475d163603d3e71af82244f639",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5339255d23617a475d163603d3e71af82244f639",
      "tree": {
        "sha": "6729d82a46f1f484775cc766395d3e197cc31aa1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6729d82a46f1f484775cc766395d3e197cc31aa1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/158edad61b4ef51b61bbad528404c596fbb4c5bb",
          "sha": "158edad61b4ef51b61bbad528404c596fbb4c5bb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/158edad61b4ef51b61bbad528404c596fbb4c5bb"
        }
      ],
      "message": "Eliminate need for ancestors in SingleV3Checks",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T21:13:13Z"
      },
      "sha": "5339255d23617a475d163603d3e71af82244f639"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxMDI0NzY4YjI3ZWQxY2Y0ZTM4NmE0NzBkNGU0ZTA1NmU5YTIzMWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21024768b27ed1cf4e386a470d4e4e056e9a231a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/21024768b27ed1cf4e386a470d4e4e056e9a231a",
      "tree": {
        "sha": "d78e94e7d35cf637d555a19436342cc086e2fe28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d78e94e7d35cf637d555a19436342cc086e2fe28"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5339255d23617a475d163603d3e71af82244f639",
          "sha": "5339255d23617a475d163603d3e71af82244f639",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5339255d23617a475d163603d3e71af82244f639"
        }
      ],
      "message": "Eliminate need for ancestors in PackageV3Checks\n\nTO DO: Rewrite unit tests for PV3C to not lie about mempool parents, so that we\ncan push down the parent calculation into v3_policy from validation.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T22:11:41Z"
      },
      "sha": "21024768b27ed1cf4e386a470d4e4e056e9a231a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE5ZTBlNGQ0N2E3ZTQ1ZjE1NWMzMGRmZmNiZWUyZDM3ZDAxYTkxNzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9e0e4d47a7e45f155c30dffcbee2d37d01a9175",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a9e0e4d47a7e45f155c30dffcbee2d37d01a9175",
      "tree": {
        "sha": "86a2006e9a36451ee49dbcf164add39515f85a71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86a2006e9a36451ee49dbcf164add39515f85a71"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21024768b27ed1cf4e386a470d4e4e056e9a231a",
          "sha": "21024768b27ed1cf4e386a470d4e4e056e9a231a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/21024768b27ed1cf4e386a470d4e4e056e9a231a"
        }
      ],
      "message": "Don't calculate ancestors except for RBF transactions",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-04-16T22:27:45Z"
      },
      "sha": "a9e0e4d47a7e45f155c30dffcbee2d37d01a9175"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJkNjc3NTdhYTllNDJmYzQyNDNiZWZkMTc3ZDQ2OTQ0NzZmNjkwMDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d67757aa9e42fc4243befd177d4694476f69001",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2d67757aa9e42fc4243befd177d4694476f69001",
      "tree": {
        "sha": "86a2006e9a36451ee49dbcf164add39515f85a71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86a2006e9a36451ee49dbcf164add39515f85a71"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9e0e4d47a7e45f155c30dffcbee2d37d01a9175",
          "sha": "a9e0e4d47a7e45f155c30dffcbee2d37d01a9175",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a9e0e4d47a7e45f155c30dffcbee2d37d01a9175"
        }
      ],
      "message": "==== END OPTIMIZATIONS ====",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-17T15:37:08Z"
      },
      "sha": "2d67757aa9e42fc4243befd177d4694476f69001"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ0MWI4NjY5YzUzODE2MDRkZjgzYzg0MTZhOTFkMWVlYjE5MjU1NWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/441b8669c5381604df83c8416a91d1eeb192555f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/441b8669c5381604df83c8416a91d1eeb192555f",
      "tree": {
        "sha": "86a2006e9a36451ee49dbcf164add39515f85a71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86a2006e9a36451ee49dbcf164add39515f85a71"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d67757aa9e42fc4243befd177d4694476f69001",
          "sha": "2d67757aa9e42fc4243befd177d4694476f69001",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2d67757aa9e42fc4243befd177d4694476f69001"
        }
      ],
      "message": "==== BEGIN TESTS ====",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-17T15:37:15Z"
      },
      "sha": "441b8669c5381604df83c8416a91d1eeb192555f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEyZDU0OTAwMWNhMDRhYjc2ZmFmMGNiMmQ1ZDJjYWQ0N2JmODBiYjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2d549001ca04ab76faf0cb2d5d2cad47bf80bb4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a2d549001ca04ab76faf0cb2d5d2cad47bf80bb4",
      "tree": {
        "sha": "42aaa46dc816d749d7c1874fd43f678570203b7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42aaa46dc816d749d7c1874fd43f678570203b7e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/441b8669c5381604df83c8416a91d1eeb192555f",
          "sha": "441b8669c5381604df83c8416a91d1eeb192555f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/441b8669c5381604df83c8416a91d1eeb192555f"
        }
      ],
      "message": "bench: add more mempool benchmarks\n\nAdd benchmarks for:\n\n  - mempool update time when blocks are found\n  - adding a transaction\n  - performing the mempool's RBF calculation\n  - calculating mempool ancestors/descendants",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-10-11T15:34:16Z"
      },
      "sha": "a2d549001ca04ab76faf0cb2d5d2cad47bf80bb4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ2ZWZmOTkzOTQyNzMyYWE5MjFkNmYyYTExMGE0NDRhOTFlZjE2ODg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46eff993942732aa921d6f2a110a444a91ef1688",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/46eff993942732aa921d6f2a110a444a91ef1688",
      "tree": {
        "sha": "011a4043d111a7760c8b9547d2cc57b590e63144",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/011a4043d111a7760c8b9547d2cc57b590e63144"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2d549001ca04ab76faf0cb2d5d2cad47bf80bb4",
          "sha": "a2d549001ca04ab76faf0cb2d5d2cad47bf80bb4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a2d549001ca04ab76faf0cb2d5d2cad47bf80bb4"
        }
      ],
      "message": "fuzz: try to add more code coverage for mempool fuzzing\n\nIncluding test coverage for mempool eviction and expiry",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2023-10-12T14:48:55Z"
      },
      "sha": "46eff993942732aa921d6f2a110a444a91ef1688"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU5MjliMWEzZjYwZDk2MGJhZWI2ZThhNjJjOWI0ZGRkNzNjYTI0NTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e929b1a3f60d960baeb6e8a62c9b4ddd73ca2454",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e929b1a3f60d960baeb6e8a62c9b4ddd73ca2454",
      "tree": {
        "sha": "fa858fd3bde6a19b0e210b0247b5100c78e2f20c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa858fd3bde6a19b0e210b0247b5100c78e2f20c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46eff993942732aa921d6f2a110a444a91ef1688",
          "sha": "46eff993942732aa921d6f2a110a444a91ef1688",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/46eff993942732aa921d6f2a110a444a91ef1688"
        }
      ],
      "message": "Pass through cluster size limits to TxGraph::check()",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-01-29T16:47:02Z"
      },
      "sha": "e929b1a3f60d960baeb6e8a62c9b4ddd73ca2454"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNhZDQ3ZmNiOTgxOGIwZmRiODI1MGRhOGZlMzdkYzM5MWE3Y2MxYzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cad47fcb9818b0fdb8250da8fe37dc391a7cc1c9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cad47fcb9818b0fdb8250da8fe37dc391a7cc1c9",
      "tree": {
        "sha": "96388ef2173f90ba2a4848da37a8d47b05d05632",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96388ef2173f90ba2a4848da37a8d47b05d05632"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e929b1a3f60d960baeb6e8a62c9b4ddd73ca2454",
          "sha": "e929b1a3f60d960baeb6e8a62c9b4ddd73ca2454",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e929b1a3f60d960baeb6e8a62c9b4ddd73ca2454"
        }
      ],
      "message": "Expose cluster information via rpc",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-04-19T21:12:04Z"
      },
      "sha": "cad47fcb9818b0fdb8250da8fe37dc391a7cc1c9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDczYzMxM2EwNzVlNDYzYmNkNTU0ZTYxZGE2NWM3ZGFjMjY2NTcyNGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73c313a075e463bcd554e61da65c7dac2665724d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/73c313a075e463bcd554e61da65c7dac2665724d",
      "tree": {
        "sha": "e833ee00e2b5b2493f0ec159a214ed2ebfec2a36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e833ee00e2b5b2493f0ec159a214ed2ebfec2a36"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cad47fcb9818b0fdb8250da8fe37dc391a7cc1c9",
          "sha": "cad47fcb9818b0fdb8250da8fe37dc391a7cc1c9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cad47fcb9818b0fdb8250da8fe37dc391a7cc1c9"
        }
      ],
      "message": "doc: Update mempool_replacements.md to reflect feerate diagram checks",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-26T02:02:15Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-04-24T23:52:18Z"
      },
      "sha": "73c313a075e463bcd554e61da65c7dac2665724d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12617696524,
      "node_id": "HRFPE_lADOABII5850QVJBzwAAAALwEsUM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12617696524",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T02:03:18Z"
    },
    {
      "event": "unlabeled",
      "id": 12618205113,
      "node_id": "UNLE_lADOABII5850QVJBzwAAAALwGoe5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12618205113",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T03:36:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364398135",
      "pull_request_review_id": 1685916441,
      "id": 1364398135,
      "node_id": "PRRC_kwDOABII585RUxA3",
      "diff_hunk": "@@ -18,14 +18,7 @@ other consensus and policy rules, each of the following conditions are met:\n    Use the (`-mempoolfullrbf`) configuration option to allow transaction replacement without enforcement of the\n    opt-in signaling rule.\n \n-2. The replacement transaction only include an unconfirmed input if that input was included in\n-   one of the directly conflicting transactions. An unconfirmed input spends an output from a\n-   currently-unconfirmed transaction.\n-\n-   *Rationale*: When RBF was originally implemented, the mempool did not keep track of\n-   ancestor feerates yet. This rule was suggested as a temporary restriction.\n-\n-3. The replacement transaction pays an absolute fee of at least the sum paid by the original",
      "path": "doc/policy/mempool-replacements.md",
      "position": 12,
      "original_position": 11,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "b0f771bb559f38ea16a8f4d13110e2247ac080b9",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "might be easier to just \"strike out\" this rule and mark it deprecated instead of changing numbers since that's become engineer lingo",
      "created_at": "2023-10-18T19:11:00Z",
      "updated_at": "2023-10-24T18:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1364398135",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364398135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365716769",
      "pull_request_review_id": 1685916441,
      "id": 1365716769,
      "node_id": "PRRC_kwDOABII585RZy8h",
      "diff_hunk": "@@ -684,6 +830,19 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"incrementalrelayfee\", ValueFromAmount(pool.m_incremental_relay_feerate.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n     ret.pushKV(\"fullrbf\", pool.m_full_rbf);\n+    ret.pushKV(\"numberofclusters\", pool.m_cluster_map.size());\n+    int64_t max_cluster_count = 1;",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 283,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "shouldn't this be 0?",
      "created_at": "2023-10-19T15:13:12Z",
      "updated_at": "2023-10-24T18:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1365716769",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365716769"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 844,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365753481",
      "pull_request_review_id": 1685916441,
      "id": 1365753481,
      "node_id": "PRRC_kwDOABII585RZ76J",
      "diff_hunk": "@@ -60,57 +59,26 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n {\n     AssertLockHeld(pool.cs);\n     const uint256 txid = tx.GetHash();\n-    uint64_t nConflictingCount = 0;\n-    for (const auto& mi : iters_conflicting) {\n-        nConflictingCount += mi->GetCountWithDescendants();\n-        // Rule #5: don't consider replacing more than MAX_REPLACEMENT_CANDIDATES\n-        // entries from the mempool. This potentially overestimates the number of actual\n-        // descendants (i.e. if multiple conflicts share a descendant, it will be counted multiple\n-        // times), but we just want to be conservative to avoid doing too much work.\n-        if (nConflictingCount > MAX_REPLACEMENT_CANDIDATES) {\n-            return strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n-                             txid.ToString(),\n-                             nConflictingCount,\n-                             MAX_REPLACEMENT_CANDIDATES);\n-        }\n-    }\n     // Calculate the set of all transactions that would have to be evicted.\n     for (CTxMemPool::txiter it : iters_conflicting) {\n-        pool.CalculateDescendants(it, all_conflicts);\n-    }\n-    return std::nullopt;\n-}\n-\n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n-                                               const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n-{\n-    AssertLockHeld(pool.cs);\n-    std::set<uint256> parents_of_conflicts;\n-    for (const auto& mi : iters_conflicting) {\n-        for (const CTxIn& txin : mi->GetTx().vin) {\n-            parents_of_conflicts.insert(txin.prevout.hash);\n+        // Exit early if we're going to fail (see below)\n+        if (all_conflicts.size() > MAX_REPLACEMENT_CANDIDATES) {",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note: this is sticking with the same rule#5 instead of number of effected clusters. It would be more ideal if it were number of clusters to allow for better usage of adversarial-ish batched CPFPs",
      "created_at": "2023-10-19T15:40:30Z",
      "updated_at": "2023-10-24T18:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1365753481",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365753481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366095113",
      "pull_request_review_id": 1685916441,
      "id": 1366095113,
      "node_id": "PRRC_kwDOABII585RbPUJ",
      "diff_hunk": "@@ -876,75 +880,8 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n \n     ws.m_iters_conflicting = m_pool.GetIterSet(ws.m_conflicts);\n \n-    // Note that these modifications are only applicable to single transaction scenarios;\n-    // carve-outs and package RBF are disabled for multi-transaction evaluations.\n-    CTxMemPool::Limits maybe_rbf_limits = m_pool.m_limits;\n-\n-    // Calculate in-mempool ancestors, up to a limit.\n-    if (ws.m_conflicts.size() == 1) {\n-        // In general, when we receive an RBF transaction with mempool conflicts, we want to know whether we\n-        // would meet the chain limits after the conflicts have been removed. However, there isn't a practical\n-        // way to do this short of calculating the ancestor and descendant sets with an overlay cache of\n-        // changed mempool entries. Due to both implementation and runtime complexity concerns, this isn't\n-        // very realistic, thus we only ensure a limited set of transactions are RBF'able despite mempool\n-        // conflicts here. Importantly, we need to ensure that some transactions which were accepted using\n-        // the below carve-out are able to be RBF'ed, without impacting the security the carve-out provides\n-        // for off-chain contract systems (see link in the comment below).\n-        //\n-        // Specifically, the subset of RBF transactions which we allow despite chain limits are those which\n-        // conflict directly with exactly one other transaction (but may evict children of said transaction),\n-        // and which are not adding any new mempool dependencies. Note that the \"no new mempool dependencies\"\n-        // check is accomplished later, so we don't bother doing anything about it here, but if our\n-        // policy changes, we may need to move that check to here instead of removing it wholesale.\n-        //\n-        // Such transactions are clearly not merging any existing packages, so we are only concerned with\n-        // ensuring that (a) no package is growing past the package size (not count) limits and (b) we are\n-        // not allowing something to effectively use the (below) carve-out spot when it shouldn't be allowed\n-        // to.\n-        //\n-        // To check these we first check if we meet the RBF criteria, above, and increment the descendant\n-        // limits by the direct conflict and its descendants (as these are recalculated in\n-        // CalculateMempoolAncestors by assuming the new transaction being added is a new descendant, with no\n-        // removals, of each parent's existing dependent set). The ancestor count limits are unmodified (as\n-        // the ancestor limits should be the same for both our new transaction and any conflicts).\n-        // We don't bother incrementing m_limit_descendants by the full removal count as that limit never comes\n-        // into force here (as we're only adding a single transaction).\n-        assert(ws.m_iters_conflicting.size() == 1);\n-        CTxMemPool::txiter conflict = *ws.m_iters_conflicting.begin();\n-\n-        maybe_rbf_limits.descendant_count += 1;\n-        maybe_rbf_limits.descendant_size_vbytes += conflict->GetSizeWithDescendants();\n-    }\n-\n-    auto ancestors{m_pool.CalculateMemPoolAncestors(*entry, maybe_rbf_limits)};\n-    if (!ancestors) {\n-        // If CalculateMemPoolAncestors fails second time, we want the original error string.\n-        // Contracting/payment channels CPFP carve-out:\n-        // If the new transaction is relatively small (up to 40k weight)\n-        // and has at most one ancestor (ie ancestor limit of 2, including\n-        // the new transaction), allow it if its parent has exactly the\n-        // descendant limit descendants.\n-        //\n-        // This allows protocols which rely on distrusting counterparties\n-        // being able to broadcast descendants of an unconfirmed transaction\n-        // to be secure by simply only having two immediately-spendable\n-        // outputs - one for each counterparty. For more info on the uses for\n-        // this, see https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016518.html\n-        CTxMemPool::Limits cpfp_carve_out_limits{\n-            .ancestor_count = 2,\n-            .ancestor_size_vbytes = maybe_rbf_limits.ancestor_size_vbytes,\n-            .descendant_count = maybe_rbf_limits.descendant_count + 1,\n-            .descendant_size_vbytes = maybe_rbf_limits.descendant_size_vbytes + EXTRA_DESCENDANT_TX_SIZE_LIMIT,\n-        };\n-        const auto error_message{util::ErrorString(ancestors).original};\n-        if (ws.m_vsize > EXTRA_DESCENDANT_TX_SIZE_LIMIT) {\n-            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"too-long-mempool-chain\", error_message);\n-        }\n-        ancestors = m_pool.CalculateMemPoolAncestors(*entry, cpfp_carve_out_limits);\n-        if (!ancestors) return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"too-long-mempool-chain\", error_message);\n-    }\n-\n-    ws.m_ancestors = *ancestors;\n+    // Calculate in-mempool ancestors",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "c5d3c42da466feca9192d0e389654ba55caec5a6",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "the check two conditionals above:\r\n\r\n```\r\nif (!bypass_limits && ws.m_modified_fees < m_pool.m_min_relay_feerate.GetFee(ws.m_vsize))\r\n```\r\n\r\nThis is still needed for the same reason as before: transaction that is above minrelay, but would be in a chunk below minrelay. We could immediately evict below minrelay chunks post-re-linearization f.e. which would allow 0-fee parents then relax this maybe.\r\n\r\n",
      "created_at": "2023-10-19T20:48:36Z",
      "updated_at": "2023-10-24T18:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1366095113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366095113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 896,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366105725",
      "pull_request_review_id": 1685916441,
      "id": 1366105725,
      "node_id": "PRRC_kwDOABII585RbR59",
      "diff_hunk": "@@ -83,26 +86,104 @@ static std::vector<CTransactionRef> CreateOrderedCoins(FastRandomContext& det_ra\n     return ordered_coins;\n }\n \n+static void MemPoolAddTransactions(benchmark::Bench& bench)\n+{\n+    FastRandomContext det_rand{true};\n+    int childTxs = 90;\n+    if (bench.complexityN() > 1) {\n+        childTxs = static_cast<int>(bench.complexityN());\n+    }\n+    const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *testing_setup.get()->m_node.mempool;\n+\n+    std::vector<CTransactionRef> transactions;\n+    // Create 1000 clusters of 100 transactions each",
      "path": "src/bench/mempool_stress.cpp",
      "position": 53,
      "original_position": 54,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "c5d3c42da466feca9192d0e389654ba55caec5a6",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "numbers in comments are off\r\n\r\nshower thought: Should we/can we bound the number of clusters in addition to total memory in TrimToSize? I can't think of a good way to do that that doesn't complicate things quite a bit, and perhaps practical mempool sizes make this moot. Just something to consider in case I missed something obvious.",
      "created_at": "2023-10-19T21:01:05Z",
      "updated_at": "2023-10-24T18:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1366105725",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1366105725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1367425942",
      "pull_request_review_id": 1685916441,
      "id": 1367425942,
      "node_id": "PRRC_kwDOABII585RgUOW",
      "diff_hunk": "@@ -1135,29 +1457,67 @@ void CTxMemPool::TrimToSize(size_t sizelimit, std::vector<COutPoint>* pvNoSpends\n \n     unsigned nTxnRemoved = 0;\n     CFeeRate maxFeeRateRemoved(0);\n+\n+    // Use a heap to determine which chunks to evict, but only make the heap if\n+    // we're actually above the size limit.\n+    std::vector<Cluster::HeapEntry> heap_chunks;\n+    std::set<Cluster*> clusters_with_evictions;\n     while (!mapTx.empty() && DynamicMemoryUsage() > sizelimit) {\n-        indexed_transaction_set::index<descendant_score>::type::iterator it = mapTx.get<descendant_score>().begin();\n+        if (heap_chunks.empty()) {\n+            for (const auto & [id, cluster] : m_cluster_map) {\n+                if (!cluster->m_chunks.empty()) {\n+                    heap_chunks.emplace_back(cluster->m_chunks.end()-1, cluster.get());\n+                }\n+            }\n+        }\n+\n+        // Define comparison operator on our heap entries (using feerate of chunks).\n+        auto cmp = [](const Cluster::HeapEntry& a, const Cluster::HeapEntry& b) {\n+            // TODO: branch on size of fee to do this as 32-bit calculation\n+            // instead? etc\n+            return a.first->fee*b.first->size > b.first->fee*a.first->size;\n+        };\n+\n+        std::make_heap(heap_chunks.begin(), heap_chunks.end(), cmp);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 1421,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "26e831d5f2c7db15e7a50f910ddf4e1737d226da",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You probably didn't mean to call make_heap in the loop for 3N work each time. fwiw I don't see any performance difference between `push_heap`ing all the elements on vs one `make_heap`.\r\n\r\nonce this is changed, add+trimming seems to be faster than in master regardless of topology tested",
      "created_at": "2023-10-20T19:39:27Z",
      "updated_at": "2023-10-24T18:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1367425942",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1367425942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1481,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1367430770",
      "pull_request_review_id": 1685916441,
      "id": 1367430770,
      "node_id": "PRRC_kwDOABII585RgVZy",
      "diff_hunk": "@@ -210,183 +194,84 @@ bool BlockAssembler::TestPackage(uint64_t packageSize, int64_t packageSigOpsCost\n \n // Perform transaction-level checks before adding to block:\n // - transaction finality (locktime)\n-bool BlockAssembler::TestPackageTransactions(const CTxMemPool::setEntries& package) const\n+bool BlockAssembler::TestPackageTransactions(const std::list<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs) const\n {\n-    for (CTxMemPool::txiter it : package) {\n-        if (!IsFinalTx(it->GetTx(), nHeight, m_lock_time_cutoff)) {\n+    for (auto tx : txs) {\n+        if (!IsFinalTx(tx.get().GetTx(), nHeight, m_lock_time_cutoff)) {\n             return false;\n         }\n     }\n     return true;\n }\n \n-void BlockAssembler::AddToBlock(CTxMemPool::txiter iter)\n+void BlockAssembler::AddToBlock(const CTxMemPoolEntry& entry)\n {\n-    pblocktemplate->block.vtx.emplace_back(iter->GetSharedTx());\n-    pblocktemplate->vTxFees.push_back(iter->GetFee());\n-    pblocktemplate->vTxSigOpsCost.push_back(iter->GetSigOpCost());\n-    nBlockWeight += iter->GetTxWeight();\n+    pblocktemplate->block.vtx.emplace_back(entry.GetSharedTx());\n+    pblocktemplate->vTxFees.push_back(entry.GetFee());\n+    pblocktemplate->vTxSigOpsCost.push_back(entry.GetSigOpCost());\n+    nBlockWeight += entry.GetTxWeight();\n     ++nBlockTx;\n-    nBlockSigOpsCost += iter->GetSigOpCost();\n-    nFees += iter->GetFee();\n-    inBlock.insert(iter);\n+    nBlockSigOpsCost += entry.GetSigOpCost();\n+    nFees += entry.GetFee();\n \n     bool fPrintPriority = gArgs.GetBoolArg(\"-printpriority\", DEFAULT_PRINTPRIORITY);\n     if (fPrintPriority) {\n         LogPrintf(\"fee rate %s txid %s\\n\",\n-                  CFeeRate(iter->GetModifiedFee(), iter->GetTxSize()).ToString(),\n-                  iter->GetTx().GetHash().ToString());\n+                  CFeeRate(entry.GetModifiedFee(), entry.GetTxSize()).ToString(),\n+                  entry.GetTx().GetHash().ToString());\n     }\n }\n \n-/** Add descendants of given transactions to mapModifiedTx with ancestor\n- * state updated assuming given transactions are inBlock. Returns number\n- * of updated descendants. */\n-static int UpdatePackagesForAdded(const CTxMemPool& mempool,\n-                                  const CTxMemPool::setEntries& alreadyAdded,\n-                                  indexed_modified_transaction_set& mapModifiedTx) EXCLUSIVE_LOCKS_REQUIRED(mempool.cs)\n+void BlockAssembler::addChunks(const CTxMemPool& mempool)\n {\n     AssertLockHeld(mempool.cs);\n-\n-    int nDescendantsUpdated = 0;\n-    for (CTxMemPool::txiter it : alreadyAdded) {\n-        CTxMemPool::setEntries descendants;\n-        mempool.CalculateDescendants(it, descendants);\n-        // Insert all descendants (not yet in block) into the modified set\n-        for (CTxMemPool::txiter desc : descendants) {\n-            if (alreadyAdded.count(desc)) {\n-                continue;\n-            }\n-            ++nDescendantsUpdated;\n-            modtxiter mit = mapModifiedTx.find(desc);\n-            if (mit == mapModifiedTx.end()) {\n-                CTxMemPoolModifiedEntry modEntry(desc);\n-                mit = mapModifiedTx.insert(modEntry).first;\n-            }\n-            mapModifiedTx.modify(mit, update_for_parent_inclusion(it));\n-        }\n-    }\n-    return nDescendantsUpdated;\n-}\n-\n-void BlockAssembler::SortForBlock(const CTxMemPool::setEntries& package, std::vector<CTxMemPool::txiter>& sortedEntries)\n-{\n-    // Sort package by ancestor count\n-    // If a transaction A depends on transaction B, then A's ancestor count\n-    // must be greater than B's.  So this is sufficient to validly order the\n-    // transactions for block inclusion.\n-    sortedEntries.clear();\n-    sortedEntries.insert(sortedEntries.begin(), package.begin(), package.end());\n-    std::sort(sortedEntries.begin(), sortedEntries.end(), CompareTxIterByAncestorCount());\n-}\n-\n-// This transaction selection algorithm orders the mempool based\n-// on feerate of a transaction including all unconfirmed ancestors.\n-// Since we don't remove transactions from the mempool as we select them\n-// for block inclusion, we need an alternate method of updating the feerate\n-// of a transaction with its not-yet-selected ancestors as we go.\n-// This is accomplished by walking the in-mempool descendants of selected\n-// transactions and storing a temporary modified state in mapModifiedTxs.\n-// Each time through the loop, we compare the best transaction in\n-// mapModifiedTxs with the next transaction in the mempool to decide what\n-// transaction package to work on next.\n-void BlockAssembler::addPackageTxs(const CTxMemPool& mempool, int& nPackagesSelected, int& nDescendantsUpdated)\n-{\n-    AssertLockHeld(mempool.cs);\n-\n-    // mapModifiedTx will store sorted packages after they are modified\n-    // because some of their txs are already in the block\n-    indexed_modified_transaction_set mapModifiedTx;\n-    // Keep track of entries that failed inclusion, to avoid duplicate work\n-    CTxMemPool::setEntries failedTx;\n-\n-    CTxMemPool::indexed_transaction_set::index<ancestor_score>::type::iterator mi = mempool.mapTx.get<ancestor_score>().begin();\n-    CTxMemPool::txiter iter;\n-\n     // Limit the number of attempts to add transactions to the block when it is\n     // close to full; this is just a simple heuristic to finish quickly if the\n     // mempool has a lot of entries.\n     const int64_t MAX_CONSECUTIVE_FAILURES = 1000;\n     int64_t nConsecutiveFailed = 0;\n \n-    while (mi != mempool.mapTx.get<ancestor_score>().end() || !mapModifiedTx.empty()) {\n-        // First try to find a new transaction in mapTx to evaluate.\n-        //\n-        // Skip entries in mapTx that are already in a block or are present\n-        // in mapModifiedTx (which implies that the mapTx ancestor state is\n-        // stale due to ancestor inclusion in the block)\n-        // Also skip transactions that we've already failed to add. This can happen if\n-        // we consider a transaction in mapModifiedTx and it fails: we can then\n-        // potentially consider it again while walking mapTx.  It's currently\n-        // guaranteed to fail again, but as a belt-and-suspenders check we put it in\n-        // failedTx and avoid re-evaluation, since the re-evaluation would be using\n-        // cached size/sigops/fee values that are not actually correct.\n-        /** Return true if given transaction from mapTx has already been evaluated,\n-         * or if the transaction's cached data in mapTx is incorrect. */\n-        if (mi != mempool.mapTx.get<ancestor_score>().end()) {\n-            auto it = mempool.mapTx.project<0>(mi);\n-            assert(it != mempool.mapTx.end());\n-            if (mapModifiedTx.count(it) || inBlock.count(it) || failedTx.count(it)) {\n-                ++mi;\n-                continue;\n-            }\n-        }\n-\n-        // Now that mi is not stale, determine which transaction to evaluate:\n-        // the next entry from mapTx, or the best from mapModifiedTx?\n-        bool fUsingModified = false;\n-\n-        modtxscoreiter modit = mapModifiedTx.get<ancestor_score>().begin();\n-        if (mi == mempool.mapTx.get<ancestor_score>().end()) {\n-            // We're out of entries in mapTx; use the entry from mapModifiedTx\n-            iter = modit->iter;\n-            fUsingModified = true;\n-        } else {\n-            // Try to compare the mapTx entry to the mapModifiedTx entry\n-            iter = mempool.mapTx.project<0>(mi);\n-            if (modit != mapModifiedTx.get<ancestor_score>().end() &&\n-                    CompareTxMemPoolEntryByAncestorFee()(*modit, CTxMemPoolModifiedEntry(iter))) {\n-                // The best entry in mapModifiedTx has higher score\n-                // than the one from mapTx.\n-                // Switch which transaction (package) to consider\n-                iter = modit->iter;\n-                fUsingModified = true;\n-            } else {\n-                // Either no entry in mapModifiedTx, or it's worse than mapTx.\n-                // Increment mi for the next loop iteration.\n-                ++mi;\n-            }\n-        }\n-\n-        // We skip mapTx entries that are inBlock, and mapModifiedTx shouldn't\n-        // contain anything that is inBlock.\n-        assert(!inBlock.count(iter));\n-\n-        uint64_t packageSize = iter->GetSizeWithAncestors();\n-        CAmount packageFees = iter->GetModFeesWithAncestors();\n-        int64_t packageSigOpsCost = iter->GetSigOpCostWithAncestors();\n-        if (fUsingModified) {\n-            packageSize = modit->nSizeWithAncestors;\n-            packageFees = modit->nModFeesWithAncestors;\n-            packageSigOpsCost = modit->nSigOpCostWithAncestors;\n+    std::vector<Cluster::HeapEntry> heap_chunks;\n+    // Initialize the heap with the best entry from each cluster\n+    for (const auto & [id, cluster] : mempool.m_cluster_map) {\n+        if (!cluster->m_chunks.empty()) {\n+            heap_chunks.emplace_back(cluster->m_chunks.begin(), cluster.get());\n         }\n-\n-        if (packageFees < m_options.blockMinFeeRate.GetFee(packageSize)) {\n-            // Everything else we might consider has a lower fee rate\n+    }\n+    // Define comparison operator on our heap entries (using feerate of chunks).\n+    auto cmp = [](const Cluster::HeapEntry& a, const Cluster::HeapEntry& b) {\n+        // TODO: branch on size of fee to do this as 32-bit calculation\n+        // instead? etc\n+        return a.first->fee*b.first->size < b.first->fee*a.first->size;\n+    };\n+    // TODO: replace the heap with a priority queue\n+    std::make_heap(heap_chunks.begin(), heap_chunks.end(), cmp);",
      "path": "src/node/miner.cpp",
      "position": null,
      "original_position": 244,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "26e831d5f2c7db15e7a50f910ddf4e1737d226da",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "don't ask why but I'm getting significant performance improvement(>10%) just `push_heap`ing everything from scratch, and similarly with priority_queue",
      "created_at": "2023-10-20T19:46:25Z",
      "updated_at": "2023-10-24T18:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1367430770",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1367430770"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 248,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370716238",
      "pull_request_review_id": 1695722724,
      "id": 1370716238,
      "node_id": "PRRC_kwDOABII585Rs3hO",
      "diff_hunk": "@@ -83,26 +86,104 @@ static std::vector<CTransactionRef> CreateOrderedCoins(FastRandomContext& det_ra\n     return ordered_coins;\n }\n \n+static void MemPoolAddTransactions(benchmark::Bench& bench)\n+{\n+    FastRandomContext det_rand{true};\n+    int childTxs = 90;\n+    if (bench.complexityN() > 1) {\n+        childTxs = static_cast<int>(bench.complexityN());\n+    }\n+    const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *testing_setup.get()->m_node.mempool;\n+\n+    std::vector<CTransactionRef> transactions;\n+    // Create 1000 clusters of 100 transactions each",
      "path": "src/bench/mempool_stress.cpp",
      "position": 53,
      "original_position": 54,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "c5d3c42da466feca9192d0e389654ba55caec5a6",
      "in_reply_to_id": 1366105725,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The immediate downside to a cap on number of clusters is that singleton, high-feerate transactions would not be accepted.  And I don't think we need to -- the only places where having more clusters makes us slower is in eviction and mining, and for both of those use cases we could improve performance (if we need to) by maintaining the relevant heap data structures (or something equivalent) as chunks are modified, rather than all at once. \r\n\r\nFor now in this branch I've created these from scratch each time, but if it turns out that performance is meaningfully impacted when the mempool is busy, then I can optimize this further by just using a bit more memory.",
      "created_at": "2023-10-24T19:24:39Z",
      "updated_at": "2023-10-24T19:24:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1370716238",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370716238"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371708009",
      "pull_request_review_id": 1697257034,
      "id": 1371708009,
      "node_id": "PRRC_kwDOABII585Rwppp",
      "diff_hunk": "@@ -60,57 +59,26 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n {\n     AssertLockHeld(pool.cs);\n     const uint256 txid = tx.GetHash();\n-    uint64_t nConflictingCount = 0;\n-    for (const auto& mi : iters_conflicting) {\n-        nConflictingCount += mi->GetCountWithDescendants();\n-        // Rule #5: don't consider replacing more than MAX_REPLACEMENT_CANDIDATES\n-        // entries from the mempool. This potentially overestimates the number of actual\n-        // descendants (i.e. if multiple conflicts share a descendant, it will be counted multiple\n-        // times), but we just want to be conservative to avoid doing too much work.\n-        if (nConflictingCount > MAX_REPLACEMENT_CANDIDATES) {\n-            return strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n-                             txid.ToString(),\n-                             nConflictingCount,\n-                             MAX_REPLACEMENT_CANDIDATES);\n-        }\n-    }\n     // Calculate the set of all transactions that would have to be evicted.\n     for (CTxMemPool::txiter it : iters_conflicting) {\n-        pool.CalculateDescendants(it, all_conflicts);\n-    }\n-    return std::nullopt;\n-}\n-\n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n-                                               const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n-{\n-    AssertLockHeld(pool.cs);\n-    std::set<uint256> parents_of_conflicts;\n-    for (const auto& mi : iters_conflicting) {\n-        for (const CTxIn& txin : mi->GetTx().vin) {\n-            parents_of_conflicts.insert(txin.prevout.hash);\n+        // Exit early if we're going to fail (see below)\n+        if (all_conflicts.size() > MAX_REPLACEMENT_CANDIDATES) {",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": 1365753481,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is room to relax this rule some, so if this is important we can do so. I think the requirement is a bound on the number of clusters that would have to be re-sorted in order to accept the new transaction.  We can approximate that as the number of clusters that would be non-empty as a result of removing all the conflicting transactions from the mempool, and only process replacements for which that is below some target.  \r\n\r\nThat would be a more complex logic though, so before implementing it I wanted to have some sense of whether we need to.  Has the historical 100-transaction-conflict limit been problematic for use cases in the past?  Note also that in the new code, we are calculating the number of conflicts exactly (the old code used an approximation, which could be gamed by an adversary).",
      "created_at": "2023-10-25T12:48:09Z",
      "updated_at": "2023-10-25T12:48:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1371708009",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371708009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371803601",
      "pull_request_review_id": 1697415470,
      "id": 1371803601,
      "node_id": "PRRC_kwDOABII585RxA_R",
      "diff_hunk": "@@ -60,57 +59,26 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n {\n     AssertLockHeld(pool.cs);\n     const uint256 txid = tx.GetHash();\n-    uint64_t nConflictingCount = 0;\n-    for (const auto& mi : iters_conflicting) {\n-        nConflictingCount += mi->GetCountWithDescendants();\n-        // Rule #5: don't consider replacing more than MAX_REPLACEMENT_CANDIDATES\n-        // entries from the mempool. This potentially overestimates the number of actual\n-        // descendants (i.e. if multiple conflicts share a descendant, it will be counted multiple\n-        // times), but we just want to be conservative to avoid doing too much work.\n-        if (nConflictingCount > MAX_REPLACEMENT_CANDIDATES) {\n-            return strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n-                             txid.ToString(),\n-                             nConflictingCount,\n-                             MAX_REPLACEMENT_CANDIDATES);\n-        }\n-    }\n     // Calculate the set of all transactions that would have to be evicted.\n     for (CTxMemPool::txiter it : iters_conflicting) {\n-        pool.CalculateDescendants(it, all_conflicts);\n-    }\n-    return std::nullopt;\n-}\n-\n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n-                                               const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n-{\n-    AssertLockHeld(pool.cs);\n-    std::set<uint256> parents_of_conflicts;\n-    for (const auto& mi : iters_conflicting) {\n-        for (const CTxIn& txin : mi->GetTx().vin) {\n-            parents_of_conflicts.insert(txin.prevout.hash);\n+        // Exit early if we're going to fail (see below)\n+        if (all_conflicts.size() > MAX_REPLACEMENT_CANDIDATES) {",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": 1365753481,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "~~Ah! I wrote a huge response to this, then looked up our previous discussions, and realized I didn't actually read the code: https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1554708843~~\r\n\r\n~~IIUC now, this is only counting *direct* conflicts, and not the descendants that are booted.~~\r\n\r\n~~I think that's fine.~~\r\n\r\nActually no, the existing code comments were just misleading, looks like the issue still exists, see: https://github.com/bitcoin/bitcoin/issues/27677#issuecomment-1554708843",
      "created_at": "2023-10-25T13:52:53Z",
      "updated_at": "2023-10-25T13:59:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1371803601",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371803601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371813655",
      "pull_request_review_id": 1697431678,
      "id": 1371813655,
      "node_id": "PRRC_kwDOABII585RxDcX",
      "diff_hunk": "@@ -60,57 +59,26 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n {\n     AssertLockHeld(pool.cs);\n     const uint256 txid = tx.GetHash();\n-    uint64_t nConflictingCount = 0;\n-    for (const auto& mi : iters_conflicting) {\n-        nConflictingCount += mi->GetCountWithDescendants();\n-        // Rule #5: don't consider replacing more than MAX_REPLACEMENT_CANDIDATES\n-        // entries from the mempool. This potentially overestimates the number of actual\n-        // descendants (i.e. if multiple conflicts share a descendant, it will be counted multiple\n-        // times), but we just want to be conservative to avoid doing too much work.\n-        if (nConflictingCount > MAX_REPLACEMENT_CANDIDATES) {\n-            return strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n-                             txid.ToString(),\n-                             nConflictingCount,\n-                             MAX_REPLACEMENT_CANDIDATES);\n-        }\n-    }\n     // Calculate the set of all transactions that would have to be evicted.\n     for (CTxMemPool::txiter it : iters_conflicting) {\n-        pool.CalculateDescendants(it, all_conflicts);\n-    }\n-    return std::nullopt;\n-}\n-\n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n-                                               const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n-{\n-    AssertLockHeld(pool.cs);\n-    std::set<uint256> parents_of_conflicts;\n-    for (const auto& mi : iters_conflicting) {\n-        for (const CTxIn& txin : mi->GetTx().vin) {\n-            parents_of_conflicts.insert(txin.prevout.hash);\n+        // Exit early if we're going to fail (see below)\n+        if (all_conflicts.size() > MAX_REPLACEMENT_CANDIDATES) {",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": 1365753481,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah yes, in the new code I'm only counting direct conflicts right now, because every descendant of a direct conflict must be in the same cluster as that conflict.  So this is already a relaxation of the existing rule.",
      "created_at": "2023-10-25T13:59:21Z",
      "updated_at": "2023-10-25T13:59:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1371813655",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371813655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371819952",
      "pull_request_review_id": 1697442366,
      "id": 1371819952,
      "node_id": "PRRC_kwDOABII585RxE-w",
      "diff_hunk": "@@ -60,57 +59,26 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n {\n     AssertLockHeld(pool.cs);\n     const uint256 txid = tx.GetHash();\n-    uint64_t nConflictingCount = 0;\n-    for (const auto& mi : iters_conflicting) {\n-        nConflictingCount += mi->GetCountWithDescendants();\n-        // Rule #5: don't consider replacing more than MAX_REPLACEMENT_CANDIDATES\n-        // entries from the mempool. This potentially overestimates the number of actual\n-        // descendants (i.e. if multiple conflicts share a descendant, it will be counted multiple\n-        // times), but we just want to be conservative to avoid doing too much work.\n-        if (nConflictingCount > MAX_REPLACEMENT_CANDIDATES) {\n-            return strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n-                             txid.ToString(),\n-                             nConflictingCount,\n-                             MAX_REPLACEMENT_CANDIDATES);\n-        }\n-    }\n     // Calculate the set of all transactions that would have to be evicted.\n     for (CTxMemPool::txiter it : iters_conflicting) {\n-        pool.CalculateDescendants(it, all_conflicts);\n-    }\n-    return std::nullopt;\n-}\n-\n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n-                                               const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n-{\n-    AssertLockHeld(pool.cs);\n-    std::set<uint256> parents_of_conflicts;\n-    for (const auto& mi : iters_conflicting) {\n-        for (const CTxIn& txin : mi->GetTx().vin) {\n-            parents_of_conflicts.insert(txin.prevout.hash);\n+        // Exit early if we're going to fail (see below)\n+        if (all_conflicts.size() > MAX_REPLACEMENT_CANDIDATES) {",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": 1365753481,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think the requirement is a bound on the number of clusters that would have to be re-sorted in order to accept the new transaction.\r\n\r\nAs an alternative, we drop the replacement limit to like, 10 or something, and then *only* count the *direct* conflicts, not the direct conflicts and all the descendants?",
      "created_at": "2023-10-25T14:01:44Z",
      "updated_at": "2023-10-25T14:01:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1371819952",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371819952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392325037",
      "pull_request_review_id": 1729366575,
      "id": 1392325037,
      "node_id": "PRRC_kwDOABII585S_TGt",
      "diff_hunk": "@@ -118,5 +199,63 @@ static void MempoolCheck(benchmark::Bench& bench)\n     });\n }\n \n+static void MemPoolMiningScoreCheck(benchmark::Bench& bench)\n+{\n+    // Default test: each cluster is of size 20, and we'll try to RBF with a\n+    // transaction that merges 10 clusters, evicting 10 transactions from each.\n+\n+    FastRandomContext det_rand{true};\n+    int childTxs = 10;\n+    if (bench.complexityN() > 1) {\n+        childTxs = static_cast<int>(bench.complexityN());\n+    }\n+    const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *testing_setup.get()->m_node.mempool;\n+\n+    LOCK2(cs_main, pool.cs);\n+\n+    std::vector<CTransactionRef> parent_txs_for_rbf;\n+    std::set<uint256> child_txs_to_conflict_with;\n+\n+    for (int i=0; i<10; i++) {\n+        std::vector<CTransactionRef> transactions = CreateCoinCluster(det_rand, childTxs, /*min_ancestors=*/1);\n+        parent_txs_for_rbf.push_back(transactions[0]);\n+        // Conflict with everything after the first 10 transactions\n+        for (size_t j=10; j<transactions.size(); ++j) {\n+            child_txs_to_conflict_with.insert(transactions[j]->GetHash());\n+        }\n+\n+        // Add all transactions to the mempool.\n+        for (auto& tx : transactions) {\n+            AddTx(tx, pool, det_rand);\n+        }\n+    }\n+\n+    // Construct a transaction that spends from each of the parent transactions\n+    // selected.\n+    CMutableTransaction tx = CMutableTransaction();\n+    tx.vin.resize(10);\n+    for (size_t i=0; i<parent_txs_for_rbf.size(); ++i) {\n+        tx.vin[i].prevout = COutPoint(parent_txs_for_rbf[i]->GetHash(), 0);\n+        tx.vin[i].scriptSig = CScript() << i;\n+    }\n+    tx.vout.resize(1);\n+    for (auto& out : tx.vout) {\n+        out.scriptPubKey = CScript() << CScriptNum(det_rand.randrange(19)+1) << OP_EQUAL;\n+        out.nValue = 10 * COIN;\n+    }\n+\n+    CTxMemPool::setEntries all_conflicts = pool.GetIterSet(child_txs_to_conflict_with);\n+    CTxMemPoolEntry entry(MakeTransactionRef(tx), det_rand.randrange(10000)+1000, 0, 1, 0, false, 4, LockPoints());\n+\n+    bench.run([&]() NO_THREAD_SAFETY_ANALYSIS {\n+        CTxMemPool::Limits limits(pool.m_limits);\n+        pool.CalculateMiningScoreOfReplacementTx(entry, det_rand.randrange(30000)+1000, all_conflicts, limits);\n+    });\n+}\n+\n+BENCHMARK(MemPoolAncestorsDescendants, benchmark::PriorityLevel::HIGH);\n+BENCHMARK(MemPoolAddTransactions, benchmark::PriorityLevel::HIGH);",
      "path": "src/bench/mempool_stress.cpp",
      "position": 220,
      "original_position": 210,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "dd6684ab665bc8ae76b76fdd2e578fc77d562a52",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "dd6684ab665bc8ae76b76fdd2e578fc77d562a52: While you're touching this, can you rename `MempoolCheck` to `MemPoolCheck`, `MempoolEviction` to `MemPoolEviction` and `ComplexMemPool` to `MempoolComplex`? That makes `-filter=MemPool.*` work\r\n\r\nAs a workaround, `-filter=.*Mem.*` does work.",
      "created_at": "2023-11-14T10:05:29Z",
      "updated_at": "2023-11-14T10:29:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1392325037",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392325037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 261,
      "original_line": 261,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392364899",
      "pull_request_review_id": 1729419761,
      "id": 1392364899,
      "node_id": "PRRC_kwDOABII585S_c1j",
      "diff_hunk": "@@ -574,6 +574,8 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-limitancestorsize=<n>\", strprintf(\"Do not accept transactions whose size with all in-mempool ancestors exceeds <n> kilobytes (default: %u)\", DEFAULT_ANCESTOR_SIZE_LIMIT_KVB), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-limitdescendantcount=<n>\", strprintf(\"Do not accept transactions if any ancestor would have <n> or more in-mempool descendants (default: %u)\", DEFAULT_DESCENDANT_LIMIT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT_KVB), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-limitclustercount=<n>\", strprintf(\"Do not accept transactions connected to <n> or more existing in-mempool transactions (default: %u)\", DEFAULT_CLUSTER_LIMIT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);",
      "path": "src/init.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I made an attempt at dropping `-limitdescendantsize` and friends: https://github.com/Sjors/bitcoin/commits/2022/11/cluster-mempool\r\n\r\nI (naively) replaced ancestor and descendent limits in coin selection with the new cluster limit. At least the tests pass *.\r\n\r\nWhen we drop these settings anyone who uses them will get an error when starting the node. That's probably a good thing, since they should read about this change.\r\n\r\n`* =` well, wallet_basic.py fails with:\r\n\r\n```\r\nInternal bug detected: Shared UTXOs among selection results\r\nwallet/coinselection.h:340 (InsertInputs)\r\n```",
      "created_at": "2023-11-14T10:34:19Z",
      "updated_at": "2023-11-14T12:30:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1392364899",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392364899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 615,
      "original_line": 615,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392567718",
      "pull_request_review_id": 1729707068,
      "id": 1392567718,
      "node_id": "PRRC_kwDOABII585TAOWm",
      "diff_hunk": "@@ -1245,3 +1536,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 407,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "54f39ca8f101483f5f82707689ca49431d4091e5",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "54f39ca8f101483f5f82707689ca49431d4091e5: what if the deleted transaction makes it so there are now two clusters? This is also safe to ignore? ",
      "created_at": "2023-11-14T13:15:36Z",
      "updated_at": "2023-11-14T14:27:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1392567718",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392567718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392640692",
      "pull_request_review_id": 1729707068,
      "id": 1392640692,
      "node_id": "PRRC_kwDOABII585TAgK0",
      "diff_hunk": "@@ -1245,3 +1536,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    return;\n+}\n+\n+void Cluster::RechunkFromLinearization(std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 423,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "54f39ca8f101483f5f82707689ca49431d4091e5",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "54f39ca8f101483f5f82707689ca49431d4091e5: So you're creating a chunk for each new transaction and then erasing it if the fee rate goes down. Why not the other way around? ",
      "created_at": "2023-11-14T14:09:48Z",
      "updated_at": "2023-11-14T14:27:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1392640692",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392640692"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1875,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392646700",
      "pull_request_review_id": 1729707068,
      "id": 1392646700,
      "node_id": "PRRC_kwDOABII585TAhos",
      "diff_hunk": "@@ -1245,3 +1536,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    return;\n+}\n+\n+void Cluster::RechunkFromLinearization(std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            double feerate_prev = prev_iter->fee*cur_iter->size;",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 427,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "54f39ca8f101483f5f82707689ca49431d4091e5",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "54f39ca8f101483f5f82707689ca49431d4091e5: shouldn't this be `fee / size`? Or do you mean to use an inverse fee rate for performance (`inv_fee_rate`)?",
      "created_at": "2023-11-14T14:13:05Z",
      "updated_at": "2023-11-14T14:27:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1392646700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392646700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1877,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399053865",
      "pull_request_review_id": 1739566572,
      "id": 1399053865,
      "node_id": "PRRC_kwDOABII585TY94p",
      "diff_hunk": "@@ -632,6 +634,22 @@ class CTxMemPool\n      */\n     void UpdateTransactionsFromBlock(const std::vector<uint256>& vHashesToUpdate) EXCLUSIVE_LOCKS_REQUIRED(cs, cs_main) LOCKS_EXCLUDED(m_epoch);\n \n+    /**\n+     * Calculate whether cluster size limits would be exceeded if a new tx were\n+     * added to the mempool (assuming no conflicts).",
      "path": "src/txmempool.h",
      "position": 246,
      "original_position": 15,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "065e18fff30a91c94c47d5c2fc65b13ddc38aa47",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "065e18fff30a91c94c47d5c2fc65b13ddc38aa47: do you plan to relax this assumption so that a transaction in (a) full cluster(s) can be replaced?\r\n\r\n_Update_: `AcceptSingleTransaction` skips `ClusterSizeChecks` if there's a replacement, in which case `ReplacementChecks` checks the new cluster size. So this is not an issue.",
      "created_at": "2023-11-20T11:22:37Z",
      "updated_at": "2023-11-20T14:32:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399053865",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399053865"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 452,
      "original_line": 452,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399137900",
      "pull_request_review_id": 1739706549,
      "id": 1399137900,
      "node_id": "PRRC_kwDOABII585TZSZs",
      "diff_hunk": "@@ -553,6 +660,39 @@ static RPCHelpMan getmempooldescendants()\n     };\n }\n \n+static RPCHelpMan getmempoolcluster()\n+{\n+    return RPCHelpMan{\"getmempoolcluster\",\n+        \"\\nReturns mempool data for given cluster\\n\",\n+        {\n+            {\"id\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The cluster id (must be in mempool)\"},",
      "path": "src/rpc/mempool.cpp",
      "position": 261,
      "original_position": 192,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1: it would be more practical to (also) have a lookup by transaction hash",
      "created_at": "2023-11-20T12:32:16Z",
      "updated_at": "2023-11-20T12:32:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399137900",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399137900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 653,
      "original_line": 653,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399160874",
      "pull_request_review_id": 1739741540,
      "id": 1399160874,
      "node_id": "PRRC_kwDOABII585TZYAq",
      "diff_hunk": "@@ -1245,3 +1536,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    return;\n+}\n+\n+void Cluster::RechunkFromLinearization(std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            double feerate_prev = prev_iter->fee*cur_iter->size;",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 427,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "54f39ca8f101483f5f82707689ca49431d4091e5",
      "in_reply_to_id": 1392646700,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To check `a/b > c/d` you can instead check `a*d > c*b`, which avoids divisions (which are an order of magnitude slower than multiplication).",
      "created_at": "2023-11-20T12:53:42Z",
      "updated_at": "2023-11-20T12:53:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399160874",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399160874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1877,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399161977",
      "pull_request_review_id": 1739743147,
      "id": 1399161977,
      "node_id": "PRRC_kwDOABII585TZYR5",
      "diff_hunk": "@@ -632,6 +634,22 @@ class CTxMemPool\n      */\n     void UpdateTransactionsFromBlock(const std::vector<uint256>& vHashesToUpdate) EXCLUSIVE_LOCKS_REQUIRED(cs, cs_main) LOCKS_EXCLUDED(m_epoch);\n \n+    /**\n+     * Calculate whether cluster size limits would be exceeded if a new tx were\n+     * added to the mempool (assuming no conflicts).",
      "path": "src/txmempool.h",
      "position": 246,
      "original_position": 15,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "065e18fff30a91c94c47d5c2fc65b13ddc38aa47",
      "in_reply_to_id": 1399053865,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe that's an idea we've toyed with (calling it \"sibling eviction\"), but so far it isn't clear how to align that with DoS prevention.",
      "created_at": "2023-11-20T12:54:40Z",
      "updated_at": "2023-11-20T12:54:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399161977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399161977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 452,
      "original_line": 452,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399223399",
      "pull_request_review_id": 1739853534,
      "id": 1399223399,
      "node_id": "PRRC_kwDOABII585TZnRn",
      "diff_hunk": "@@ -249,34 +249,81 @@ static RPCHelpMan testmempoolaccept()\n     };\n }\n \n+static std::vector<RPCResult> ClusterDescription()\n+{\n+    return {\n+        RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\"},\n+        RPCResult{RPCResult::Type::NUM, \"txcount\", \"number of transactions (including this one)\"},\n+        RPCResult{RPCResult::Type::NUM, \"clusterid\", \"id of the cluster containing this tx\"},\n+        RPCResult{RPCResult::Type::ARR, \"chunks\", \"the cluster's chunks\",\n+            {RPCResult{RPCResult::Type::OBJ, \"chunkentry\", \"\",\n+                {\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"fee\", \"fee of this chunk\"},\n+                    RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual size of this chunk\"},\n+                    RPCResult{RPCResult::Type::NUM, \"feerate\", \"fee rate in \" + CURRENCY_UNIT + \"/kvB\"},\n+                    RPCResult{RPCResult::Type::ARR, \"txids\", \"txids in this chunk in sorted order\",\n+                        {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"the transaction id\"}}}\n+                }}\n+            }\n+        }\n+    };\n+}\n+\n static std::vector<RPCResult> MempoolEntryDescription()\n {\n     return {\n         RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\"},\n-        RPCResult{RPCResult::Type::NUM, \"weight\", \"transaction weight as defined in BIP 141.\"},\n-        RPCResult{RPCResult::Type::NUM_TIME, \"time\", \"local time transaction entered pool in seconds since 1 Jan 1970 GMT\"},\n-        RPCResult{RPCResult::Type::NUM, \"height\", \"block height when transaction entered pool\"},\n-        RPCResult{RPCResult::Type::NUM, \"descendantcount\", \"number of in-mempool descendant transactions (including this one)\"},\n-        RPCResult{RPCResult::Type::NUM, \"descendantsize\", \"virtual transaction size of in-mempool descendants (including this one)\"},\n-        RPCResult{RPCResult::Type::NUM, \"ancestorcount\", \"number of in-mempool ancestor transactions (including this one)\"},\n-        RPCResult{RPCResult::Type::NUM, \"ancestorsize\", \"virtual transaction size of in-mempool ancestors (including this one)\"},\n-        RPCResult{RPCResult::Type::STR_HEX, \"wtxid\", \"hash of serialized transaction, including witness data\"},\n-        RPCResult{RPCResult::Type::OBJ, \"fees\", \"\",\n-            {\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee, denominated in \" + CURRENCY_UNIT},\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"modified\", \"transaction fee with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"ancestor\", \"transaction fees of in-mempool ancestors (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"descendant\", \"transaction fees of in-mempool descendants (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n-            }},\n-        RPCResult{RPCResult::Type::ARR, \"depends\", \"unconfirmed transactions used as inputs for this transaction\",\n-            {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"parent transaction id\"}}},\n-        RPCResult{RPCResult::Type::ARR, \"spentby\", \"unconfirmed transactions spending outputs from this transaction\",\n-            {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"child transaction id\"}}},\n-        RPCResult{RPCResult::Type::BOOL, \"bip125-replaceable\", \"Whether this transaction signals BIP125 replaceability or has an unconfirmed ancestor signaling BIP125 replaceability.\\n\"},\n-        RPCResult{RPCResult::Type::BOOL, \"unbroadcast\", \"Whether this transaction is currently unbroadcast (initial broadcast not yet acknowledged by any peers)\"},\n+            RPCResult{RPCResult::Type::NUM, \"weight\", \"transaction weight as defined in BIP 141.\"},\n+            RPCResult{RPCResult::Type::NUM_TIME, \"time\", \"local time transaction entered pool in seconds since 1 Jan 1970 GMT\"},\n+            RPCResult{RPCResult::Type::NUM, \"height\", \"block height when transaction entered pool\"},\n+            RPCResult{RPCResult::Type::NUM, \"descendantcount\", \"number of in-mempool descendant transactions (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"descendantsize\", \"virtual transaction size of in-mempool descendants (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"ancestorcount\", \"number of in-mempool ancestor transactions (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"ancestorsize\", \"virtual transaction size of in-mempool ancestors (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"chunksize\", \"virtual transaction size of this transaction's chunk\"},\n+            RPCResult{RPCResult::Type::NUM, \"clusterid\", \"id of the cluster containing this tx\"},\n+            RPCResult{RPCResult::Type::STR_HEX, \"wtxid\", \"hash of serialized transaction, including witness data\"},\n+            RPCResult{RPCResult::Type::OBJ, \"fees\", \"\",\n+                {\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"modified\", \"transaction fee with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"ancestor\", \"transaction fees of in-mempool ancestors (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"descendant\", \"transaction fees of in-mempool descendants (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"chunk\", \"transaction fees of chunk, denominated in \" + CURRENCY_UNIT},\n+                }},\n+            RPCResult{RPCResult::Type::ARR, \"depends\", \"unconfirmed transactions used as inputs for this transaction\",\n+                {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"parent transaction id\"}}},\n+            RPCResult{RPCResult::Type::ARR, \"spentby\", \"unconfirmed transactions spending outputs from this transaction\",\n+                {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"child transaction id\"}}},\n+            RPCResult{RPCResult::Type::BOOL, \"bip125-replaceable\", \"Whether this transaction signals BIP125 replaceability or has an unconfirmed ancestor signaling BIP125 replaceability.\\n\"},\n+            RPCResult{RPCResult::Type::BOOL, \"unbroadcast\", \"Whether this transaction is currently unbroadcast (initial broadcast not yet acknowledged by any peers)\"},\n     };\n }\n \n+static void clusterToJSON(const CTxMemPool& pool, UniValue& info, const Cluster& c) EXCLUSIVE_LOCKS_REQUIRED(pool.cs)\n+{\n+    AssertLockHeld(pool.cs);\n+    info.pushKV(\"vsize\", (int)c.m_tx_size);\n+    info.pushKV(\"txcount\", (int)c.m_tx_count);\n+    info.pushKV(\"clusterid\", (int)c.m_id);\n+    UniValue chunks(UniValue::VARR);\n+    for (auto &chunk : c.m_chunks) {",
      "path": "src/rpc/mempool.cpp",
      "position": 83,
      "original_position": 83,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1: can you order chunks by mining score?",
      "created_at": "2023-11-20T13:42:19Z",
      "updated_at": "2023-11-20T13:42:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399223399",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399223399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 309,
      "original_line": 309,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399231122",
      "pull_request_review_id": 1739865937,
      "id": 1399231122,
      "node_id": "PRRC_kwDOABII585TZpKS",
      "diff_hunk": "@@ -764,48 +918,174 @@ void CTxMemPool::check(const CCoinsViewCache& active_coins_tip, int64_t spendhei\n         assert(&tx == it->second);\n     }\n \n+    // Check that clusters are sorted topologically and that the chunk metadata\n+    // matches the txs in the chunk.\n+    for (const auto & [id, cluster] : m_cluster_map) {\n+        assert(cluster->m_tx_count > 0); // no empty clusters\n+        CTxMemPoolEntry::Parents txs_so_far;\n+        for (size_t i=0; i<cluster->m_chunks.size(); ++i) {\n+            int64_t fee{0};\n+            int64_t size{0};\n+            assert(!cluster->m_chunks[i].txs.empty()); // no empty chunks\n+            for (auto it=cluster->m_chunks[i].txs.begin(); it != cluster->m_chunks[i].txs.end(); ++it) {\n+                fee += it->get().GetModifiedFee();\n+                size += it->get().GetTxSize();\n+                // Check that all parents are in txs_so_far\n+                for (const auto& parent : it->get().GetMemPoolParentsConst()) {\n+                    assert(txs_so_far.count(parent));\n+                }\n+                txs_so_far.insert(*it);\n+            }\n+            assert(fee == cluster->m_chunks[i].fee);\n+            assert(size == cluster->m_chunks[i].size);\n+        }\n+        innerUsage += cluster->GetMemoryUsage();\n+    }\n+\n+    // Check that each cluster is connected.\n+    for (const auto & [id, cluster] : m_cluster_map) {\n+        // Since we've checked the parents and children already, we'll use\n+        // those values here.\n+        // We'll check that if we walk to every transaction reachable from the\n+        // first one, that we get every tx in the cluster.\n+        auto first_tx = cluster->m_chunks.front().txs.front();\n+        std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef> work_queue;\n+        int reachable_txs = 1; // we'll count the transactions we reach.\n+\n+        WITH_FRESH_EPOCH(m_epoch);\n+        visited(first_tx.get());\n+        assert(first_tx.get().GetMemPoolParentsConst().size() == 0); // first tx can never have parents.\n+        for (auto child : first_tx.get().GetMemPoolChildrenConst()) {\n+            work_queue.push_back(child);\n+            visited(child.get());\n+            ++reachable_txs;\n+        }\n+        while (work_queue.size() > 0) {\n+            auto next_tx = work_queue.back();\n+            work_queue.pop_back();\n+            for (auto parent : next_tx.get().GetMemPoolParentsConst()) {\n+                if (!visited(parent.get())) {\n+                    ++reachable_txs;\n+                    work_queue.push_back(parent);\n+                }\n+            }\n+            for (auto child : next_tx.get().GetMemPoolChildrenConst()) {\n+                if (!visited(child.get())) {\n+                    ++reachable_txs;\n+                    work_queue.push_back(child);\n+                }\n+            }\n+        }\n+        assert(reachable_txs == cluster->m_tx_count);\n+    }\n+\n     assert(totalTxSize == checkTotal);\n     assert(m_total_fee == check_total_fee);\n     assert(innerUsage == cachedInnerUsage);\n }\n \n-bool CTxMemPool::CompareDepthAndScore(const uint256& hasha, const uint256& hashb, bool wtxid)\n+// Return true if a comes before b in mempool sort order\n+bool CTxMemPool::CompareMiningScore(txiter a, txiter b) const\n+{\n+    if (a == b) return false; // An element cannot be less than itself.\n+\n+    CAmount a_fee = a->m_cluster->m_chunks[a->m_loc.first].fee;\n+    int64_t a_size = a->m_cluster->m_chunks[a->m_loc.first].size;\n+    CAmount b_fee = b->m_cluster->m_chunks[b->m_loc.first].fee;\n+    int64_t b_size = b->m_cluster->m_chunks[b->m_loc.first].size;\n+\n+    int64_t a_score = a_fee * b_size;\n+    int64_t b_score = b_fee * a_size;",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 1113,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would be good to explain the rationale for the miner score somewhere.\r\n\r\nWhy a * b and b * a?\r\n\r\nAnd why is not the fee rate `a_fee / a_size`? (inverse score?)",
      "created_at": "2023-11-20T13:48:38Z",
      "updated_at": "2023-11-20T13:51:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399231122",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399231122"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399244164",
      "pull_request_review_id": 1739885361,
      "id": 1399244164,
      "node_id": "PRRC_kwDOABII585TZsWE",
      "diff_hunk": "@@ -377,6 +427,63 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempoo\n     }\n }\n \n+static RPCHelpMan getmempoolfeesize()\n+{\n+    return RPCHelpMan{\"getmempoolfeesize\",\n+        \"Returns fee/size data for the whole mempool.\",\n+        {},\n+        {},\n+        RPCExamples{\n+            HelpExampleCli(\"getmempoolfeesize\", \"\")\n+            + HelpExampleRpc(\"getmempoolfeesize\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+            LOCK(mempool.cs);\n+\n+            UniValue result(UniValue::VARR);\n+\n+            // TODO: refactor so that we're not just copying this from the miner.\n+            std::vector<Cluster::HeapEntry> heap_chunks;\n+            // Initialize the heap with the best entry from each cluster\n+            for (const auto & [id, cluster] : mempool.m_cluster_map) {\n+                if (!cluster->m_chunks.empty()) {\n+                    heap_chunks.emplace_back(cluster->m_chunks.begin(), cluster.get());\n+                }\n+            }\n+            // Define comparison operator on our heap entries (using feerate of chunks).\n+            auto cmp = [](const Cluster::HeapEntry& a, const Cluster::HeapEntry& b) {\n+                return a.first->fee*b.first->size < b.first->fee*a.first->size;\n+            };\n+            std::make_heap(heap_chunks.begin(), heap_chunks.end(), cmp);\n+\n+            CAmount accum_fee{0};\n+            int64_t accum_size{0};\n+            while (!heap_chunks.empty()) {\n+                auto best_chunk = heap_chunks.front();\n+                std::pop_heap(heap_chunks.begin(), heap_chunks.end(), cmp);\n+                heap_chunks.pop_back();\n+\n+                accum_size += best_chunk.first->size;\n+                accum_fee += best_chunk.first->fee;\n+\n+                UniValue o(UniValue::VOBJ);",
      "path": "src/rpc/mempool.cpp",
      "position": 183,
      "original_position": 164,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1: this should also list the cluster id, and maybe also the chunk number.\r\n\r\nCould also add an argument limit the total number of vbytes.\r\n\r\n`getmempoolfeesize` can be introduced in its own commit",
      "created_at": "2023-11-20T13:58:48Z",
      "updated_at": "2023-11-20T13:59:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399244164",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399244164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 463,
      "original_line": 463,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399246551",
      "pull_request_review_id": 1739889097,
      "id": 1399246551,
      "node_id": "PRRC_kwDOABII585TZs7X",
      "diff_hunk": "@@ -377,6 +427,63 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempoo\n     }\n }\n \n+static RPCHelpMan getmempoolfeesize()\n+{\n+    return RPCHelpMan{\"getmempoolfeesize\",\n+        \"Returns fee/size data for the whole mempool.\",\n+        {},\n+        {},\n+        RPCExamples{\n+            HelpExampleCli(\"getmempoolfeesize\", \"\")\n+            + HelpExampleRpc(\"getmempoolfeesize\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const CTxMemPool& mempool = EnsureAnyMemPool(request.context);\n+            LOCK(mempool.cs);\n+\n+            UniValue result(UniValue::VARR);\n+\n+            // TODO: refactor so that we're not just copying this from the miner.\n+            std::vector<Cluster::HeapEntry> heap_chunks;\n+            // Initialize the heap with the best entry from each cluster\n+            for (const auto & [id, cluster] : mempool.m_cluster_map) {\n+                if (!cluster->m_chunks.empty()) {\n+                    heap_chunks.emplace_back(cluster->m_chunks.begin(), cluster.get());\n+                }\n+            }\n+            // Define comparison operator on our heap entries (using feerate of chunks).\n+            auto cmp = [](const Cluster::HeapEntry& a, const Cluster::HeapEntry& b) {\n+                return a.first->fee*b.first->size < b.first->fee*a.first->size;",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 150,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1 : Could this use `CompareMiningScore` or does it have a different goal?",
      "created_at": "2023-11-20T14:00:41Z",
      "updated_at": "2023-11-20T14:00:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399246551",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399246551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 474,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399253500",
      "pull_request_review_id": 1739900168,
      "id": 1399253500,
      "node_id": "PRRC_kwDOABII585TZun8",
      "diff_hunk": "@@ -53,12 +46,10 @@ other consensus and policy rules, each of the following conditions are met:\n    significant portions of the node's mempool using replacements with multiple directly conflicting\n    transactions, each with large descendant sets.\n \n-6. The replacement transaction's feerate is greater than the feerates of all directly conflicting\n+5. The replacement transaction's mining score is greater than the mining score of all directly conflicting",
      "path": "doc/policy/mempool-replacements.md",
      "position": null,
      "original_position": 39,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "bf467f8286425b692a1736ab6d417d0ba6074658 Maybe make this rule 7. That seems a bit more clear than saying \"previously this rule referred to fee rate\"",
      "created_at": "2023-11-20T14:06:13Z",
      "updated_at": "2023-11-20T14:06:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399253500",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399253500"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399257380",
      "pull_request_review_id": 1739906712,
      "id": 1399257380,
      "node_id": "PRRC_kwDOABII585TZvkk",
      "diff_hunk": "@@ -18,14 +18,7 @@ other consensus and policy rules, each of the following conditions are met:\n    Use the (`-mempoolfullrbf`) configuration option to allow transaction replacement without enforcement of the\n    opt-in signaling rule.\n \n-2. The replacement transaction only include an unconfirmed input if that input was included in\n-   one of the directly conflicting transactions. An unconfirmed input spends an output from a\n-   currently-unconfirmed transaction.\n-\n-   *Rationale*: When RBF was originally implemented, the mempool did not keep track of\n-   ancestor feerates yet. This rule was suggested as a temporary restriction.\n-\n-3. The replacement transaction pays an absolute fee of at least the sum paid by the original\n+2. The replacement transaction pays an absolute fee of at least the sum paid by the original\n    transactions.\n \n    *Rationale*: Only requiring the replacement transaction to have a higher feerate could allow an",
      "path": "doc/policy/mempool-replacements.md",
      "position": null,
      "original_position": 15,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "bf467f8286425b692a1736ab6d417d0ba6074658: \"a higher feerate or (using clusters) mining score\"\r\n\r\nIs the \"Additionally\" reasoning still valid?",
      "created_at": "2023-11-20T14:09:35Z",
      "updated_at": "2023-11-20T14:10:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399257380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399257380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399277318",
      "pull_request_review_id": 1739940128,
      "id": 1399277318,
      "node_id": "PRRC_kwDOABII585TZ0cG",
      "diff_hunk": "@@ -53,12 +46,10 @@ other consensus and policy rules, each of the following conditions are met:\n    significant portions of the node's mempool using replacements with multiple directly conflicting\n    transactions, each with large descendant sets.\n \n-6. The replacement transaction's feerate is greater than the feerates of all directly conflicting\n+5. The replacement transaction's mining score is greater than the mining score of all directly conflicting\n    transactions.\n \n-   *Rationale*: This rule was originally intended to ensure that the replacement transaction is\n-   preferable for block-inclusion, compared to what would be removed from the mempool. This rule\n-   predates ancestor feerate-based transaction selection.\n+   *Rationale*: Ensure that the new transaction is more appealing to mine than those being evicted.\n \n This set of rules is similar but distinct from BIP125.\n ",
      "path": "doc/policy/mempool-replacements.md",
      "position": 41,
      "original_position": 48,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "bf467f8286425b692a1736ab6d417d0ba6074658: history can be expanded:\r\n\r\n```md\r\n  * Cluster mempool introduced, dropping rule 2 and introducing rule 7.\r\n    As of **v27.0** ([PR 28676](https://github.com/bitcoin/bitcoin/pull/28676)).\r\n```",
      "created_at": "2023-11-20T14:24:01Z",
      "updated_at": "2023-11-20T14:24:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399277318",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399277318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399281690",
      "pull_request_review_id": 1739947219,
      "id": 1399281690,
      "node_id": "PRRC_kwDOABII585TZ1ga",
      "diff_hunk": "@@ -139,11 +107,11 @@ std::optional<std::string> PaysMoreThanConflicts(const CTxMemPool::setEntries& i\n         // as that would lower the feerate of the next block. Requiring that the feerate always be\n         // increased is also an easy-to-reason about way to prevent DoS attacks via replacements.\n         //\n-        // We only consider the feerates of transactions being directly replaced, not their indirect\n-        // descendants. While that does mean high feerate children are ignored when deciding whether\n-        // or not to replace, we do require the replacement to pay more overall fees too, mitigating\n-        // most cases.\n-        CFeeRate original_feerate(mi->GetModifiedFee(), mi->GetTxSize());\n+        // We only need to consider the chunk feerates of transactions being\n+        // directly replaced, because descendant transactions which pay for the\n+        // parent will be reflected in the parent's chunk feerate.\n+        Cluster::Chunk &chunk = mi->m_cluster->m_chunks[mi->m_loc.first];\n+        CFeeRate original_feerate(chunk.fee, chunk.size);\n         if (replacement_feerate <= original_feerate) {\n             return strprintf(\"rejecting replacement %s; new feerate %s <= old feerate %s\",",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "bf467f8286425b692a1736ab6d417d0ba6074658",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "bf467f8286425b692a1736ab6d417d0ba6074658: `; new chunk feerate %s <= old chunk feerate`",
      "created_at": "2023-11-20T14:27:08Z",
      "updated_at": "2023-11-20T14:27:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399281690",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399281690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399422341",
      "pull_request_review_id": 1740177374,
      "id": 1399422341,
      "node_id": "PRRC_kwDOABII585TaX2F",
      "diff_hunk": "@@ -1245,3 +1648,251 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+CTxMemPoolEntry::CTxMemPoolEntryRef Cluster::GetLastTransaction()\n+{\n+    assert(m_tx_count > 0);\n+    for (auto chunkit = m_chunks.rbegin(); chunkit != m_chunks.rend(); ++chunkit) {\n+        if (!chunkit->txs.empty()) return chunkit->txs.back();\n+    }\n+    // Unreachable\n+    assert(false);\n+}\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    m_tx_size += entry.GetTxSize();\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    m_tx_size -= entry.GetTxSize();\n+    return;\n+}\n+\n+void Cluster::RechunkFromLinearization(std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+    m_tx_size = 0;\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            double feerate_prev = prev_iter->fee*cur_iter->size;\n+            double feerate_cur = cur_iter->fee*prev_iter->size;\n+            // We only combine chunks if the feerate would go up; if two\n+            // chunks have equal feerate, we prefer to keep the smaller\n+            // chunksize (which is generally better for both mining and\n+            // eviction).\n+            if (feerate_cur > feerate_prev) {\n+                prev_iter->fee += cur_iter->fee;\n+                prev_iter->size += cur_iter->size;\n+                prev_iter->txs.splice(prev_iter->txs.end(), cur_iter->txs, cur_iter->txs.begin(), cur_iter->txs.end());\n+                m_chunks.erase(cur_iter);\n+            } else {\n+                break;\n+            }\n+        }\n+        m_tx_size += txentry.get().GetTxSize();\n+    }\n+\n+    if (reassign_locations) {\n+        // Update locations of all transactions\n+        for (size_t i=0; i<m_chunks.size(); ++i) {\n+            for (auto it = m_chunks[i].txs.begin(); it != m_chunks[i].txs.end(); ++it) {\n+                it->get().m_loc = {i, it};\n+            }\n+        }\n+    }\n+}\n+\n+namespace {\n+\n+template <typename SetType>\n+std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef> InvokeSort(size_t tx_count, const std::vector<Cluster::Chunk>& chunks)\n+{\n+    std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef> txs;",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 1667,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "7fdcccd1338655328c28ff949d50442ace931a5e",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you clarify what `txs`, `orig_txs` and `cluster` are for, and what the general strategy is here?",
      "created_at": "2023-11-20T16:04:07Z",
      "updated_at": "2023-11-20T16:04:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399422341",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399422341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1910,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399521672",
      "pull_request_review_id": 1740335905,
      "id": 1399521672,
      "node_id": "PRRC_kwDOABII585TawGI",
      "diff_hunk": "@@ -1245,3 +1536,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    return;\n+}\n+\n+void Cluster::RechunkFromLinearization(std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            double feerate_prev = prev_iter->fee*cur_iter->size;",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 427,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "54f39ca8f101483f5f82707689ca49431d4091e5",
      "in_reply_to_id": 1392646700,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The math school memories are coming back :-)",
      "created_at": "2023-11-20T17:22:14Z",
      "updated_at": "2023-11-20T17:22:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1399521672",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399521672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1877,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419287189",
      "pull_request_review_id": 1770623709,
      "id": 1419287189,
      "node_id": "PRRC_kwDOABII585UmJqV",
      "diff_hunk": "@@ -18,14 +18,7 @@ other consensus and policy rules, each of the following conditions are met:\n    Use the (`-mempoolfullrbf`) configuration option to allow transaction replacement without enforcement of the\n    opt-in signaling rule.\n \n-2. The replacement transaction only include an unconfirmed input if that input was included in\n-   one of the directly conflicting transactions. An unconfirmed input spends an output from a\n-   currently-unconfirmed transaction.\n-\n-   *Rationale*: When RBF was originally implemented, the mempool did not keep track of\n-   ancestor feerates yet. This rule was suggested as a temporary restriction.\n-\n-3. The replacement transaction pays an absolute fee of at least the sum paid by the original",
      "path": "doc/policy/mempool-replacements.md",
      "position": 12,
      "original_position": 11,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "b0f771bb559f38ea16a8f4d13110e2247ac080b9",
      "in_reply_to_id": 1364398135,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure the best way to document things, but I added a to-do item to the OP so that we don't lose track of figuring out how we want the docs to look. (Will have to conform all the code comments as well.) ",
      "created_at": "2023-12-07T16:52:48Z",
      "updated_at": "2023-12-07T16:52:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1419287189",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419287189"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419291403",
      "pull_request_review_id": 1770628066,
      "id": 1419291403,
      "node_id": "PRRC_kwDOABII585UmKsL",
      "diff_hunk": "@@ -249,34 +249,81 @@ static RPCHelpMan testmempoolaccept()\n     };\n }\n \n+static std::vector<RPCResult> ClusterDescription()\n+{\n+    return {\n+        RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\"},\n+        RPCResult{RPCResult::Type::NUM, \"txcount\", \"number of transactions (including this one)\"},\n+        RPCResult{RPCResult::Type::NUM, \"clusterid\", \"id of the cluster containing this tx\"},\n+        RPCResult{RPCResult::Type::ARR, \"chunks\", \"the cluster's chunks\",\n+            {RPCResult{RPCResult::Type::OBJ, \"chunkentry\", \"\",\n+                {\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"fee\", \"fee of this chunk\"},\n+                    RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual size of this chunk\"},\n+                    RPCResult{RPCResult::Type::NUM, \"feerate\", \"fee rate in \" + CURRENCY_UNIT + \"/kvB\"},\n+                    RPCResult{RPCResult::Type::ARR, \"txids\", \"txids in this chunk in sorted order\",\n+                        {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"the transaction id\"}}}\n+                }}\n+            }\n+        }\n+    };\n+}\n+\n static std::vector<RPCResult> MempoolEntryDescription()\n {\n     return {\n         RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\"},\n-        RPCResult{RPCResult::Type::NUM, \"weight\", \"transaction weight as defined in BIP 141.\"},\n-        RPCResult{RPCResult::Type::NUM_TIME, \"time\", \"local time transaction entered pool in seconds since 1 Jan 1970 GMT\"},\n-        RPCResult{RPCResult::Type::NUM, \"height\", \"block height when transaction entered pool\"},\n-        RPCResult{RPCResult::Type::NUM, \"descendantcount\", \"number of in-mempool descendant transactions (including this one)\"},\n-        RPCResult{RPCResult::Type::NUM, \"descendantsize\", \"virtual transaction size of in-mempool descendants (including this one)\"},\n-        RPCResult{RPCResult::Type::NUM, \"ancestorcount\", \"number of in-mempool ancestor transactions (including this one)\"},\n-        RPCResult{RPCResult::Type::NUM, \"ancestorsize\", \"virtual transaction size of in-mempool ancestors (including this one)\"},\n-        RPCResult{RPCResult::Type::STR_HEX, \"wtxid\", \"hash of serialized transaction, including witness data\"},\n-        RPCResult{RPCResult::Type::OBJ, \"fees\", \"\",\n-            {\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee, denominated in \" + CURRENCY_UNIT},\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"modified\", \"transaction fee with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"ancestor\", \"transaction fees of in-mempool ancestors (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n-                RPCResult{RPCResult::Type::STR_AMOUNT, \"descendant\", \"transaction fees of in-mempool descendants (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n-            }},\n-        RPCResult{RPCResult::Type::ARR, \"depends\", \"unconfirmed transactions used as inputs for this transaction\",\n-            {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"parent transaction id\"}}},\n-        RPCResult{RPCResult::Type::ARR, \"spentby\", \"unconfirmed transactions spending outputs from this transaction\",\n-            {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"child transaction id\"}}},\n-        RPCResult{RPCResult::Type::BOOL, \"bip125-replaceable\", \"Whether this transaction signals BIP125 replaceability or has an unconfirmed ancestor signaling BIP125 replaceability.\\n\"},\n-        RPCResult{RPCResult::Type::BOOL, \"unbroadcast\", \"Whether this transaction is currently unbroadcast (initial broadcast not yet acknowledged by any peers)\"},\n+            RPCResult{RPCResult::Type::NUM, \"weight\", \"transaction weight as defined in BIP 141.\"},\n+            RPCResult{RPCResult::Type::NUM_TIME, \"time\", \"local time transaction entered pool in seconds since 1 Jan 1970 GMT\"},\n+            RPCResult{RPCResult::Type::NUM, \"height\", \"block height when transaction entered pool\"},\n+            RPCResult{RPCResult::Type::NUM, \"descendantcount\", \"number of in-mempool descendant transactions (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"descendantsize\", \"virtual transaction size of in-mempool descendants (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"ancestorcount\", \"number of in-mempool ancestor transactions (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"ancestorsize\", \"virtual transaction size of in-mempool ancestors (including this one)\"},\n+            RPCResult{RPCResult::Type::NUM, \"chunksize\", \"virtual transaction size of this transaction's chunk\"},\n+            RPCResult{RPCResult::Type::NUM, \"clusterid\", \"id of the cluster containing this tx\"},\n+            RPCResult{RPCResult::Type::STR_HEX, \"wtxid\", \"hash of serialized transaction, including witness data\"},\n+            RPCResult{RPCResult::Type::OBJ, \"fees\", \"\",\n+                {\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"modified\", \"transaction fee with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"ancestor\", \"transaction fees of in-mempool ancestors (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"descendant\", \"transaction fees of in-mempool descendants (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n+                    RPCResult{RPCResult::Type::STR_AMOUNT, \"chunk\", \"transaction fees of chunk, denominated in \" + CURRENCY_UNIT},\n+                }},\n+            RPCResult{RPCResult::Type::ARR, \"depends\", \"unconfirmed transactions used as inputs for this transaction\",\n+                {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"parent transaction id\"}}},\n+            RPCResult{RPCResult::Type::ARR, \"spentby\", \"unconfirmed transactions spending outputs from this transaction\",\n+                {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"child transaction id\"}}},\n+            RPCResult{RPCResult::Type::BOOL, \"bip125-replaceable\", \"Whether this transaction signals BIP125 replaceability or has an unconfirmed ancestor signaling BIP125 replaceability.\\n\"},\n+            RPCResult{RPCResult::Type::BOOL, \"unbroadcast\", \"Whether this transaction is currently unbroadcast (initial broadcast not yet acknowledged by any peers)\"},\n     };\n }\n \n+static void clusterToJSON(const CTxMemPool& pool, UniValue& info, const Cluster& c) EXCLUSIVE_LOCKS_REQUIRED(pool.cs)\n+{\n+    AssertLockHeld(pool.cs);\n+    info.pushKV(\"vsize\", (int)c.m_tx_size);\n+    info.pushKV(\"txcount\", (int)c.m_tx_count);\n+    info.pushKV(\"clusterid\", (int)c.m_id);\n+    UniValue chunks(UniValue::VARR);\n+    for (auto &chunk : c.m_chunks) {",
      "path": "src/rpc/mempool.cpp",
      "position": 83,
      "original_position": 83,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "0b284b5fd29c06d46c1ec60ea7e1bcd07f36feb1",
      "in_reply_to_id": 1399223399,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Chunks for a given cluster are already sorted in descending feerate (ie mining score) order, is that what you're asking about or is there another issue I'm overlooking?",
      "created_at": "2023-12-07T16:55:18Z",
      "updated_at": "2023-12-07T16:55:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1419291403",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419291403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 309,
      "original_line": 309,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419299493",
      "pull_request_review_id": 1770638034,
      "id": 1419299493,
      "node_id": "PRRC_kwDOABII585UmMql",
      "diff_hunk": "@@ -60,57 +59,26 @@ std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n {\n     AssertLockHeld(pool.cs);\n     const uint256 txid = tx.GetHash();\n-    uint64_t nConflictingCount = 0;\n-    for (const auto& mi : iters_conflicting) {\n-        nConflictingCount += mi->GetCountWithDescendants();\n-        // Rule #5: don't consider replacing more than MAX_REPLACEMENT_CANDIDATES\n-        // entries from the mempool. This potentially overestimates the number of actual\n-        // descendants (i.e. if multiple conflicts share a descendant, it will be counted multiple\n-        // times), but we just want to be conservative to avoid doing too much work.\n-        if (nConflictingCount > MAX_REPLACEMENT_CANDIDATES) {\n-            return strprintf(\"rejecting replacement %s; too many potential replacements (%d > %d)\\n\",\n-                             txid.ToString(),\n-                             nConflictingCount,\n-                             MAX_REPLACEMENT_CANDIDATES);\n-        }\n-    }\n     // Calculate the set of all transactions that would have to be evicted.\n     for (CTxMemPool::txiter it : iters_conflicting) {\n-        pool.CalculateDescendants(it, all_conflicts);\n-    }\n-    return std::nullopt;\n-}\n-\n-std::optional<std::string> HasNoNewUnconfirmed(const CTransaction& tx,\n-                                               const CTxMemPool& pool,\n-                                               const CTxMemPool::setEntries& iters_conflicting)\n-{\n-    AssertLockHeld(pool.cs);\n-    std::set<uint256> parents_of_conflicts;\n-    for (const auto& mi : iters_conflicting) {\n-        for (const CTxIn& txin : mi->GetTx().vin) {\n-            parents_of_conflicts.insert(txin.prevout.hash);\n+        // Exit early if we're going to fail (see below)\n+        if (all_conflicts.size() > MAX_REPLACEMENT_CANDIDATES) {",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "3a42ba255a73e609ac37eee8288208fa43953779",
      "in_reply_to_id": 1365753481,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe I (finally) actually fixed this behavior to count the number of direct conflicts.  ",
      "created_at": "2023-12-07T17:00:39Z",
      "updated_at": "2023-12-07T17:00:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1419299493",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419299493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419303051",
      "pull_request_review_id": 1770643203,
      "id": 1419303051,
      "node_id": "PRRC_kwDOABII585UmNiL",
      "diff_hunk": "@@ -1135,29 +1457,67 @@ void CTxMemPool::TrimToSize(size_t sizelimit, std::vector<COutPoint>* pvNoSpends\n \n     unsigned nTxnRemoved = 0;\n     CFeeRate maxFeeRateRemoved(0);\n+\n+    // Use a heap to determine which chunks to evict, but only make the heap if\n+    // we're actually above the size limit.\n+    std::vector<Cluster::HeapEntry> heap_chunks;\n+    std::set<Cluster*> clusters_with_evictions;\n     while (!mapTx.empty() && DynamicMemoryUsage() > sizelimit) {\n-        indexed_transaction_set::index<descendant_score>::type::iterator it = mapTx.get<descendant_score>().begin();\n+        if (heap_chunks.empty()) {\n+            for (const auto & [id, cluster] : m_cluster_map) {\n+                if (!cluster->m_chunks.empty()) {\n+                    heap_chunks.emplace_back(cluster->m_chunks.end()-1, cluster.get());\n+                }\n+            }\n+        }\n+\n+        // Define comparison operator on our heap entries (using feerate of chunks).\n+        auto cmp = [](const Cluster::HeapEntry& a, const Cluster::HeapEntry& b) {\n+            // TODO: branch on size of fee to do this as 32-bit calculation\n+            // instead? etc\n+            return a.first->fee*b.first->size > b.first->fee*a.first->size;\n+        };\n+\n+        std::make_heap(heap_chunks.begin(), heap_chunks.end(), cmp);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 1421,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "26e831d5f2c7db15e7a50f910ddf4e1737d226da",
      "in_reply_to_id": 1367425942,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be fixed now.",
      "created_at": "2023-12-07T17:03:28Z",
      "updated_at": "2023-12-07T17:03:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1419303051",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419303051"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1481,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421668681",
      "pull_request_review_id": 1773954379,
      "id": 1421668681,
      "node_id": "PRRC_kwDOABII585UvPFJ",
      "diff_hunk": "@@ -1245,3 +1536,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 407,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "54f39ca8f101483f5f82707689ca49431d4091e5",
      "in_reply_to_id": 1392567718,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wouldn't say it's safe to ignore, but the idea is that we often want to be able to batch deletions, and then clean things up in one pass.  So the call sites should all be dealing with this issue and ensuring that we always clean up at some point.\r\n\r\n(This is definitely an area where I expect that we'll be re-engineering all this logic and trying to come up with a better abstraction layer so that this is more robust and easier to think about!)",
      "created_at": "2023-12-10T01:33:24Z",
      "updated_at": "2023-12-10T01:33:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1421668681",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421668681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517064996",
      "pull_request_review_id": 1923884910,
      "id": 1517064996,
      "node_id": "PRRC_kwDOABII585abJMk",
      "diff_hunk": "@@ -764,6 +834,9 @@ class CTxMemPool\n      */\n     void UpdateForDescendants(txiter updateIt, cacheMap& cachedDescendants,\n                               const std::set<uint256>& setExclude, std::set<uint256>& descendants_to_remove) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+    // During reorg we add transactions back to mempool, must reconnect\n+    // clusters with in-mempool descendants.\n+    void UpdateClusterForDescendants(txiter updateIt) EXCLUSIVE_LOCKS_REQUIRED(cs);",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 97,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "96df5acec30995dcbaf800daf1945b9acff6bfb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the introduction of `Cluster` alters the worst-case computational during re-org, when we reconnect `disconnectpool` to the current mempool. Before the limit we were strictly bounded with `DEFAULT_ANCESTOR_LIMIT` / `DEFAULT_DESCENDANT_LIMIT`. Now we have a `DEFAULT_CLUST_LIMIT`, where the worst-case graph traversal algorithm might have to visit more element than at max 25.",
      "created_at": "2024-03-08T01:47:09Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517064996",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517064996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 839,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517074825",
      "pull_request_review_id": 1923884910,
      "id": 1517074825,
      "node_id": "PRRC_kwDOABII585abLmJ",
      "diff_hunk": "@@ -99,6 +99,41 @@ void CTxMemPool::UpdateForDescendants(txiter updateIt, cacheMap& cachedDescendan\n     mapTx.modify(updateIt, [=](CTxMemPoolEntry& e) { e.UpdateDescendantState(modifySize, modifyFee, modifyCount); });\n }\n \n+void CTxMemPool::UpdateClusterForDescendants(txiter updateIt)\n+{\n+    AssertLockHeld(cs);\n+    CTxMemPoolEntry::Children children = updateIt->GetMemPoolChildrenConst();\n+    std::vector<Cluster *> clusters_to_merge{updateIt->m_cluster};\n+    {\n+        WITH_FRESH_EPOCH(m_epoch);\n+        visited(updateIt->m_cluster);\n+        cachedInnerUsage -= updateIt->m_cluster->GetMemoryUsage();\n+        for (auto child : children) {\n+            if (!visited(child.get().m_cluster)) {\n+                clusters_to_merge.push_back(child.get().m_cluster);\n+                cachedInnerUsage -= child.get().m_cluster->GetMemoryUsage();\n+            }\n+        }\n+    }\n+    if (clusters_to_merge.size() > 1) {\n+        // Merge the other clusters into this one, but keep this cluster as\n+        // first so that it's topologically sound.\n+        clusters_to_merge[0]->Merge(clusters_to_merge.begin()+1, clusters_to_merge.end(), true);\n+        // TODO: limit the size of the cluster, in case it got too big.",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "96df5acec30995dcbaf800daf1945b9acff6bfb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this introduces a transaction censorship vector for time-sensitive second-layers. If you can re-org one block and construct a cluster such a a target descendant is not reconnected with other clusters, the non-cluster connected target descendant might have a stale feerate. This descendant could be pinnned in the bottom of the local mempool.",
      "created_at": "2024-03-08T02:05:16Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517074825",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517074825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517078978",
      "pull_request_review_id": 1923884910,
      "id": 1517078978,
      "node_id": "PRRC_kwDOABII585abMnC",
      "diff_hunk": "@@ -474,6 +531,42 @@ void CTxMemPool::addUnchecked(const CTxMemPoolEntry &entry, setEntries &setAnces\n     txns_randomized.emplace_back(newit->GetSharedTx());\n     newit->idx_randomized = txns_randomized.size() - 1;\n \n+    // Figure out which cluster this transaction belongs to.\n+    auto iterset = GetIterSet(setParentTransactions);\n+    std::vector<Cluster*> clusters_to_merge;\n+    {\n+        WITH_FRESH_EPOCH(m_epoch);\n+        for (auto parentit : iterset) {\n+            if (!visited(parentit->m_cluster)) {\n+                clusters_to_merge.push_back(parentit->m_cluster);\n+            }\n+        }\n+    }\n+\n+    // Merge all the clusters together.\n+    if (clusters_to_merge.size() == 0) {\n+        // No parents, make a new cluster.\n+        newit->m_cluster = AssignCluster();\n+        newit->m_cluster->AddTransaction(*newit, true);\n+        cachedInnerUsage += newit->m_cluster->GetMemoryUsage();\n+    } else if (clusters_to_merge.size() == 1) {\n+        cachedInnerUsage -= clusters_to_merge[0]->GetMemoryUsage();\n+        // Only one parent cluster: add to it.\n+        clusters_to_merge[0]->AddTransaction(*newit, true);\n+        cachedInnerUsage += clusters_to_merge[0]->GetMemoryUsage();\n+    } else {\n+        cachedInnerUsage -= clusters_to_merge[0]->GetMemoryUsage();\n+        clusters_to_merge[0]->Merge(clusters_to_merge.begin()+1, clusters_to_merge.end(), false);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "96df5acec30995dcbaf800daf1945b9acff6bfb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This can bind max number of clusts's `Merge()`. `addUnchecked()` internal logic differs on tip commit.",
      "created_at": "2024-03-08T02:13:29Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517078978",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517078978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 559,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517086414",
      "pull_request_review_id": 1923884910,
      "id": 1517086414,
      "node_id": "PRRC_kwDOABII585abObO",
      "diff_hunk": "@@ -586,6 +682,105 @@ void CTxMemPool::removeRecursive(const CTransaction &origTx, MemPoolRemovalReaso\n         RemoveStaged(setAllRemoves, false, reason);\n }\n \n+Cluster* CTxMemPool::AssignCluster()\n+{\n+    auto new_cluster = std::make_unique<Cluster>(m_next_cluster_id++, this);\n+    Cluster* ret = new_cluster.get(); // XXX No one is going to like this.\n+    m_cluster_map[new_cluster->m_id] = std::move(new_cluster);\n+    return ret;\n+}\n+\n+// When transactions are removed from a cluster, the cluster might get split\n+// into smaller clusters.\n+void CTxMemPool::RecalculateClusterAndMaybeSort(Cluster *cluster, bool sort)\n+{\n+    // TODO: if the common case involves no cluster splitting, can we short\n+    // circuit the work here somehow?\n+\n+    // Wipe cluster assignments.\n+    std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef> txs;\n+    for (auto& chunk : cluster->m_chunks) {\n+        for (auto& txentry: chunk.txs) {\n+            txentry.get().m_cluster = nullptr;\n+            txs.push_back(txentry);\n+        }\n+    }\n+    cluster->Clear();\n+\n+    // The first transaction gets to stay in the existing cluster.\n+    bool first = true;\n+    for (auto& txentry : txs) {\n+        if (txentry.get().m_cluster == nullptr) {\n+            if (first) {\n+                txentry.get().m_cluster = cluster;\n+                first = false;\n+            } else {\n+                txentry.get().m_cluster = AssignCluster();\n+            }\n+            txentry.get().m_cluster->AddTransaction(txentry.get(), false);\n+            // We need to label all transactions connected to this one as\n+            // being in the same cluster.\n+            {\n+                WITH_FRESH_EPOCH(m_epoch);\n+                auto children = txentry.get().GetMemPoolChildrenConst();\n+                std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef> work_queue;\n+                for (auto entry : children) {\n+                    work_queue.push_back(entry);\n+                    visited(entry.get());\n+                }\n+\n+                while (!work_queue.empty()) {",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 182,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "96df5acec30995dcbaf800daf1945b9acff6bfb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think here a counter should be introduced to avoid iterating on more than `DEFAULT_CLUSTER_LIMIT` on this `work_queue`. It’s in `RemoveStaged` itself call in `Finalize`, I think you might have temporarily unbounded numbers with conflicting descendants transactions.",
      "created_at": "2024-03-08T02:27:24Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517086414",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517086414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 732,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517091357",
      "pull_request_review_id": 1923884910,
      "id": 1517091357,
      "node_id": "PRRC_kwDOABII585abPod",
      "diff_hunk": "@@ -1235,3 +1526,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 408,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "96df5acec30995dcbaf800daf1945b9acff6bfb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you will have computational threshold effect with whatever limits you’re picking up for max cluster size and chunk ordering parameters. Namely, what is the minimal chunk modification that can provoke the maximum of re-ordering of all in-cluster chunks.",
      "created_at": "2024-03-08T02:34:53Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517091357",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517091357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1545,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517094848",
      "pull_request_review_id": 1923884910,
      "id": 1517094848,
      "node_id": "PRRC_kwDOABII585abQfA",
      "diff_hunk": "@@ -1235,3 +1526,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    return;\n+}\n+\n+void Cluster::RechunkFromLinearization(std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            double feerate_prev = prev_iter->fee*cur_iter->size;\n+            double feerate_cur = cur_iter->fee*prev_iter->size;\n+            // We only combine chunks if the feerate would go up; if two\n+            // chunks have equal feerate, we prefer to keep the smaller\n+            // chunksize (which is generally better for both mining and\n+            // eviction).",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 432,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "96df5acec30995dcbaf800daf1945b9acff6bfb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this is a broken assumption. You’re using virtual bytes (`GetTxSize()`), however an equivalent feerate cluster can have a smaller total witness unit as such a higher feerate w.r.t consensus rules (`MAX_BLOCK_WEIGHT`) and it should be selected in a mining block template.",
      "created_at": "2024-03-08T02:41:34Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517094848",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517094848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1569,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517104617",
      "pull_request_review_id": 1923884910,
      "id": 1517104617,
      "node_id": "PRRC_kwDOABII585abS3p",
      "diff_hunk": "@@ -1235,3 +1526,169 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+void Cluster::AddTransaction(const CTxMemPoolEntry& entry, bool sort)\n+{\n+    m_chunks.emplace_back(entry.GetModifiedFee(), entry.GetTxSize());\n+    m_chunks.back().txs.emplace_back(entry);\n+    entry.m_cluster = this;\n+    ++m_tx_count;\n+    if (sort) Sort();\n+    return;\n+}\n+\n+void Cluster::RemoveTransaction(const CTxMemPoolEntry& entry)\n+{\n+    m_chunks[entry.m_loc.first].txs.erase(entry.m_loc.second);\n+\n+    // Chunk (or cluster) may now be empty, but this will get cleaned up\n+    // when the cluster is re-sorted (or when the cluster is deleted) Note:\n+    // if we cleaned up empty chunks here, then this would break the\n+    // locations of other entries in the cluster. Since we would like to be\n+    // able to do multiple removals in a row and then clean up the sort, we\n+    // can't clean up empty chunks here.\n+    --m_tx_count;\n+    return;\n+}\n+\n+void Cluster::RechunkFromLinearization(std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef>& txs, bool reassign_locations)\n+{\n+    m_chunks.clear();\n+\n+    for (auto txentry : txs) {\n+        m_chunks.emplace_back(txentry.get().GetModifiedFee(), txentry.get().GetTxSize());\n+        m_chunks.back().txs.emplace_back(txentry);\n+        while (m_chunks.size() >= 2) {\n+            auto cur_iter = std::prev(m_chunks.end());\n+            auto prev_iter = std::prev(cur_iter);\n+            double feerate_prev = prev_iter->fee*cur_iter->size;\n+            double feerate_cur = cur_iter->fee*prev_iter->size;\n+            // We only combine chunks if the feerate would go up; if two\n+            // chunks have equal feerate, we prefer to keep the smaller\n+            // chunksize (which is generally better for both mining and\n+            // eviction).\n+            if (feerate_cur > feerate_prev) {\n+                prev_iter->fee += cur_iter->fee;\n+                prev_iter->size += cur_iter->size;\n+                prev_iter->txs.splice(prev_iter->txs.end(), cur_iter->txs, cur_iter->txs.begin(), cur_iter->txs.end());\n+                m_chunks.erase(cur_iter);\n+            } else {\n+                break;\n+            }\n+        }\n+    }\n+\n+    if (reassign_locations) {\n+        // Update locations of all transactions\n+        for (size_t i=0; i<m_chunks.size(); ++i) {\n+            for (auto it = m_chunks[i].txs.begin(); it != m_chunks[i].txs.end(); ++it) {\n+                it->get().m_loc = {i, it};\n+            }\n+        }\n+    }\n+}\n+\n+// Topologically sort the cluster, and update memory usage.\n+void Cluster::Sort(bool reassign_locations)\n+{\n+    LOCK(m_mempool->cs);\n+    std::vector<CTxMemPoolEntry::CTxMemPoolEntryRef> txs;\n+\n+    // Insert all transactions from the cluster into txs\n+    for (auto &chunk : m_chunks) {\n+        for (auto chunk_tx : chunk.txs) {\n+            txs.push_back(chunk_tx.get());\n+        }\n+    }\n+    // Sorting by ancestor count is equivalent to topological sort.\n+    std::sort(txs.begin(), txs.end(), [](const CTxMemPoolEntry::CTxMemPoolEntryRef& a, const CTxMemPoolEntry::CTxMemPoolEntryRef& b) {\n+        return a.get().GetCountWithAncestors() < b.get().GetCountWithAncestors();",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 468,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "96df5acec30995dcbaf800daf1945b9acff6bfb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note topological sort is not defined. At the very least you can have `a` and `b` both being the first child of a single ancestor and still being the 2rd and 3rd child of a common ancestor. Strictly inferior here cannot be say to be equivalent.",
      "created_at": "2024-03-08T02:56:23Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517104617",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517104617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1605,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517111975",
      "pull_request_review_id": 1923884910,
      "id": 1517111975,
      "node_id": "PRRC_kwDOABII585abUqn",
      "diff_hunk": "@@ -247,34 +247,81 @@ static RPCHelpMan testmempoolaccept()\n     };\n }\n \n+static std::vector<RPCResult> ClusterDescription()\n+{\n+    return {\n+        RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\"},\n+        RPCResult{RPCResult::Type::NUM, \"txcount\", \"number of transactions (including this one)\"},\n+        RPCResult{RPCResult::Type::NUM, \"clusterid\", \"id of the cluster containing this tx\"},",
      "path": "src/rpc/mempool.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "ce414135924f2ab015e785b95114f1f998c45043",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "About the `clusterid` (`m_next_cluster_id`), I don’t think it’s a good idea to use it as a tie-breaker in `CompareMiningScore` as it’s just a monotonic counter, it’s not information perfomative for a mining score. You could use weight at least or reception timestamp e.g oldest the tx-relay reception more well-propagated on the network, already in every miner mempool.",
      "created_at": "2024-03-08T03:11:15Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517111975",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517111975"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 256,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517112700",
      "pull_request_review_id": 1923884910,
      "id": 1517112700,
      "node_id": "PRRC_kwDOABII585abU18",
      "diff_hunk": "@@ -370,6 +420,76 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempoo\n     }\n }\n \n+static RPCHelpMan getmempoolfeesize()\n+{\n+    return RPCHelpMan{\"getmempoolfeesize\",\n+        \"Returns fee/size data for the whole mempool.\",",
      "path": "src/rpc/mempool.cpp",
      "position": null,
      "original_position": 126,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "ce414135924f2ab015e785b95114f1f998c45043",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Obviously you can add fee/weight units here. ",
      "created_at": "2024-03-08T03:12:43Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517112700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517112700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 426,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517121744",
      "pull_request_review_id": 1923884910,
      "id": 1517121744,
      "node_id": "PRRC_kwDOABII585abXDQ",
      "diff_hunk": "@@ -0,0 +1,157 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_FEEFRAC_H\n+#define BITCOIN_UTIL_FEEFRAC_H\n+\n+#include <assert.h>\n+#include <stdint.h>\n+\n+/** Data structure storing a fee and size, ordered by increasing fee/size.\n+ *\n+ * The size of a FeeFrac cannot be zero unless the fee is also zero.\n+ *\n+ * FeeFracs have a total ordering, first by increasing feerate (ratio of fee over size), and then\n+ * by decreasing size. The empty FeeFrac (fee and size both 0) sorts last. So for example, the",
      "path": "src/util/feefrac.h",
      "position": null,
      "original_position": 16,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "bb1bc54a7c980fb220d32e16e9504d53a87dcee8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is not perfect as you could use weight units and even have to consider what is the minimal satisfying witness under given consensus rules for a given transaction, especially if you have multiple candidate for a spend given a `witnessScript`. You have already such types of transaction like second-stage LN transactions (either revocation path or preimage/timeout path).",
      "created_at": "2024-03-08T03:31:50Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517121744",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517121744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517127592",
      "pull_request_review_id": 1923884910,
      "id": 1517127592,
      "node_id": "PRRC_kwDOABII585abYeo",
      "diff_hunk": "@@ -0,0 +1,157 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_FEEFRAC_H\n+#define BITCOIN_UTIL_FEEFRAC_H\n+\n+#include <assert.h>\n+#include <stdint.h>\n+\n+/** Data structure storing a fee and size, ordered by increasing fee/size.\n+ *\n+ * The size of a FeeFrac cannot be zero unless the fee is also zero.\n+ *\n+ * FeeFracs have a total ordering, first by increasing feerate (ratio of fee over size), and then\n+ * by decreasing size. The empty FeeFrac (fee and size both 0) sorts last. So for example, the\n+ * following FeeFracs are in sorted order:\n+ *\n+ * - fee=0 size=1 (feerate 0)\n+ * - fee=1 size=2 (feerate 0.5)\n+ * - fee=2 size=3 (feerate 0.667...)\n+ * - fee=2 size=2 (feerate 1)\n+ * - fee=1 size=1 (feerate 1)\n+ * - fee=3 size=2 (feerate 1.5)\n+ * - fee=2 size=1 (feerate 2)\n+ * - fee=0 size=0 (undefined feerate)\n+ *\n+ * A FeeFrac is considered \"better\" if it sorts after another, by this ordering. All standard\n+ * comparison operators (==, !=, >, <, >=, <=) respect this ordering.\n+ *\n+ * The >> and << operators only compare feerate and treat equal feerate but different size as\n+ * equivalent. The empty FeeFrac is neither lower or higher in feerate than any other.\n+ *\n+ * These comparisons are only guaranteed to be correct when the product of the highest fee and\n+ * highest size does not exceed 2^64-1. If the fee is a number in sats, and size in bytes, then\n+ * this allows up to 46116.86 BTC at size 4M, and 1844674.4 BTC at size 100k).",
      "path": "src/util/feefrac.h",
      "position": null,
      "original_position": 36,
      "commit_id": "73c313a075e463bcd554e61da65c7dac2665724d",
      "original_commit_id": "bb1bc54a7c980fb220d32e16e9504d53a87dcee8",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this should be `MAX_MONEY` as `ReplacementChecks()` in `PreChecks()` are done before `PolicyScriptChecks()` and `ConsensusScriptChecks()` so an adversary does not have to own the solution of the scriptpubkey to fake `46116.86` or `1844674.4` of value in your local mempool, exceeds 2^64-1 and mess up with linearization.",
      "created_at": "2024-03-08T03:44:35Z",
      "updated_at": "2024-03-08T03:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28676#discussion_r1517127592",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517127592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    }
  ]
}